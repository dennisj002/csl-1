[39;49m[39;49m[39;49m[39;49m
Startup [ 0 ] : elapsed time = 0.007518820 seconds
version 0.909.237
<: tc demo

before testAll 
test nested elif 1 - correct 

 =============================
C.[34;49mfactorial[39;49m <:> csl compiled word
SourceCode for C.[34;49mfactorial[39;49m :> 
[34;49m: factorial ( n | rec ) rec 1 = { n @ 1 > } { rec @ n @ * rec store n -- } while return ( rec @ ) ; [39;49m
Source code file location of [34;49mfactorial[39;49m : "namespaces/test/bigNum.csl" : 9.2 :: we are now at : namespaces/test/bigNum.csl : 10.22
Compiled with : optimizeOn, inlineOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xe793dc91 -- code size = 84 bytes
TypeSignature : 
 -----------------------------
Word :: C.[34;49mfactorial[39;49m : definition = 0x00007fb6e793dc91 : disassembly at namespaces/test/bigNum.csl : 10.22 :
[34;49m ..                                     : [39;49m[33;40mfactorial[39;49m[34;49m ( n | rec ) rec 1 = { n @ 1 > } { rec @ n @ * rec store n -- } while return ( rec @ ) ;  .. [39;49m[32;49m
0x7fb6e793dc91    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fb6e793dc95    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e793dc99    4981c610000000          add r14, 0x10                                          [39;49m
[34;49m ..               : factorial ( n | rec ) [39;49m[33;40mrec[39;49m[34;49m 1 = { n @ 1 > } { rec @ n @ * rec store n -- } while return ( rec @ ) ;  .. [39;49m[32;49m
0x7fb6e793dca0    498d4708                lea rax, [r15+0x8]                                     [39;49m
[34;49m ..           : factorial ( n | rec ) rec [39;49m[33;40m1[39;49m[34;49m = { n @ 1 > } { rec @ n @ * rec store n -- } while return ( rec @ ) ;  .. [39;49m[32;49m
0x7fb6e793dca4    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m ..         : factorial ( n | rec ) rec 1 [39;49m[33;40m=[39;49m[34;49m { n @ 1 > } { rec @ n @ * rec store n -- } while return ( rec @ ) ;  .. [39;49m[32;49m
0x7fb6e793dcab    488908                  mov [rax], rcx                                         [39;49m
[34;49m ..     : factorial ( n | rec ) rec 1 = { [39;49m[33;40mn[39;49m[34;49m @ 1 > } { rec @ n @ * rec store n -- } while return ( rec @ ) ;  .. [39;49m[32;49m
0x7fb6e793dcae    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m  : factorial ( n | rec ) rec 1 = { n @ 1 [39;49m[33;40m>[39;49m[34;49m } { rec @ n @ * rec store n -- } while return ( rec @ ) ;  .. [39;49m[32;49m
0x7fb6e793dcb2    4883f801                cmp rax, 0x1                                           [39;49m[32;49m
0x7fb6e793dcb6    0f8e19000000            jle 0x7fb6e793dcd5         	< C.[34;49mfactorial[39;49m+68[32;49m >[39;49m[39;49m
[34;49m .. ial ( n | rec ) rec 1 = { n @ 1 > } { [39;49m[33;40mrec[39;49m[34;49m @ n @ * rec store n -- } while return ( rec @ ) ; [39;49m[32;49m
0x7fb6e793dcbc    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m .. n | rec ) rec 1 = { n @ 1 > } { rec @ [39;49m[33;40mn[39;49m[34;49m @ * rec store n -- } while return ( rec @ ) ; [39;49m[32;49m
0x7fb6e793dcc0    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m
[34;49m .. rec ) rec 1 = { n @ 1 > } { rec @ n @ [39;49m[33;40m*[39;49m[34;49m rec store n -- } while return ( rec @ ) ; [39;49m[32;49m
0x7fb6e793dcc4    480fafc1                imul rax, rcx                                          [39;49m
[34;49m .. c ) rec 1 = { n @ 1 > } { rec @ n @ * [39;49m[33;40mrec[39;49m[34;49m store n -- } while return ( rec @ ) ; [39;49m[32;49m
0x7fb6e793dcc8    498d4f08                lea rcx, [r15+0x8]                                     [39;49m
[34;49m .. rec 1 = { n @ 1 > } { rec @ n @ * rec [39;49m[33;40mstore[39;49m[34;49m n -- } while return ( rec @ ) ; [39;49m[32;49m
0x7fb6e793dccc    488901                  mov [rcx], rax                                         [39;49m
[34;49m .. { n @ 1 > } { rec @ n @ * rec store n [39;49m[33;40m--[39;49m[34;49m } while return ( rec @ ) ; [39;49m[32;49m
0x7fb6e793dccf    49ff4ff8                dec qword [r15-0x8]                                    [39;49m
[34;49m ..  @ 1 > } { rec @ n @ * rec store n -- [39;49m[33;40m}[39;49m[34;49m while return ( rec @ ) ; [39;49m[32;49m
0x7fb6e793dcd3    ebd9                    jmp 0x7fb6e793dcae         	< C.[34;49mfactorial[39;49m+29[32;49m >[39;49m[39;49m[32;49m
0x7fb6e793dcd5    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m .. c store n -- } while return ( rec @ ) [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fb6e793dcd9    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e793dcdd    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m
[34;49m .. n @ * rec store n -- } while return ( [39;49m[33;40mrec[39;49m[34;49m @ ) ; [39;49m[32;49m
0x7fb6e793dce1    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e793dce4    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'factorial' :: codeSize = 83
Word : 0x00007fb6e78ed600 :: Compiled at : 0x00007fb6e793dc91
 =============================
::> 'wdiss' was called at namespaces/test/bigNum.csl 10.22 <::
 5040 factorial  : ok


 =============================
C.[34;49mfactorial[39;49m <:> csl compiled word
SourceCode for C.[34;49mfactorial[39;49m :> 
[34;49m: factorial ( REG n | REG rec ) rec 1 = { n @ 1 > } { rec @ n @ * rec store n -- } while return ( rec @ ) ; [39;49m
Source code file location of [34;49mfactorial[39;49m : "namespaces/test/bigNum.csl" : 12.2 :: we are now at : namespaces/test/bigNum.csl : 13.22
Compiled with : optimizeOn, inlineOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xe793dcf9 -- code size = 33 bytes
TypeSignature : 
 -----------------------------
Word :: C.[34;49mfactorial[39;49m : definition = 0x00007fb6e793dcf9 : disassembly at namespaces/test/bigNum.csl : 13.22 :
[34;49m ..                           : factorial [39;49m[33;40m([39;49m[34;49m REG n | REG rec ) rec 1 = { n @ 1 > } { rec @ n @ * rec store n -- } while return ( rec @ ) ;  .. [39;49m[32;49m
0x7fb6e793dcf9    498b3e                  mov rdi, [r14]                                         [39;49m
[34;49m ..   : factorial ( REG n | REG rec ) rec [39;49m[33;40m1[39;49m[34;49m = { n @ 1 > } { rec @ n @ * rec store n -- } while return ( rec @ ) ;  .. [39;49m[32;49m
0x7fb6e793dcfc    48c7c601000000          mov rsi, 0x1                                           [39;49m
[34;49m .. l ( REG n | REG rec ) rec 1 = { n @ 1 [39;49m[33;40m>[39;49m[34;49m } { rec @ n @ * rec store n -- } while return ( rec @ ) ; [39;49m[32;49m
0x7fb6e793dd03    4883ff01                cmp rdi, 0x1                                           [39;49m[32;49m
0x7fb6e793dd07    0f8e09000000            jle 0x7fb6e793dd16         	< C.[34;49mfactorial[39;49m+29[32;49m >[39;49m[39;49m
[34;49m .. rec ) rec 1 = { n @ 1 > } { rec @ n @ [39;49m[33;40m*[39;49m[34;49m rec store n -- } while return ( rec @ ) ; [39;49m[32;49m
0x7fb6e793dd0d    480faff7                imul rsi, rdi                                          [39;49m
[34;49m .. { n @ 1 > } { rec @ n @ * rec store n [39;49m[33;40m--[39;49m[34;49m } while return ( rec @ ) ; [39;49m[32;49m
0x7fb6e793dd11    48ffcf                  dec rdi                                                [39;49m
[34;49m .. : factorial ( REG n | REG rec ) rec 1 [39;49m[33;40m=[39;49m[34;49m { n @ 1 > } { rec @ n @ * rec store n -- } while return ( rec @ ) ;  .. [39;49m[32;49m
0x7fb6e793dd14    ebed                    jmp 0x7fb6e793dd03         	< C.[34;49mfactorial[39;49m+10[32;49m >[39;49m[39;49m
[34;49m .. c store n -- } while return ( rec @ ) [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fb6e793dd16    498936                  mov [r14], rsi                                         [39;49m[32;49m
0x7fb6e793dd19    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'factorial' :: codeSize = 32
Word : 0x00007fb6e78efdf8 :: Compiled at : 0x00007fb6e793dcf9
 =============================
::> 'wdiss' was called at namespaces/test/bigNum.csl 13.22 <::
 5040 factorial  : ok


 =============================
C.[34;49mfactorial[39;49m <:> csl compiled word
SourceCode for C.[34;49mfactorial[39;49m :> 
[34;49m: factorial ( REG n | REG rec ) rec 1 = { n @ 1 > } { rec @ n @ * rec store n -- } while return ( rec @ ) ; [39;49m
Source code file location of [34;49mfactorial[39;49m : "namespaces/test/bigNum.csl" : 12.2 :: we are now at : namespaces/test/bigNum.csl : 26.14
Compiled with : optimizeOn, inlineOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xe793dcf9 -- code size = 33 bytes
TypeSignature : 
 -----------------------------
Word :: C.[34;49mfactorial[39;49m : definition = 0x00007fb6e793dcf9 : disassembly at namespaces/test/bigNum.csl : 26.14 :
[34;49m ..                           : factorial [39;49m[33;40m([39;49m[34;49m REG n | REG rec ) rec 1 = { n @ 1 > } { rec @ n @ * rec store n -- } while return ( rec @ ) ;  .. [39;49m[32;49m
0x7fb6e793dcf9    498b3e                  mov rdi, [r14]                                         [39;49m
[34;49m ..   : factorial ( REG n | REG rec ) rec [39;49m[33;40m1[39;49m[34;49m = { n @ 1 > } { rec @ n @ * rec store n -- } while return ( rec @ ) ;  .. [39;49m[32;49m
0x7fb6e793dcfc    48c7c601000000          mov rsi, 0x1                                           [39;49m
[34;49m .. l ( REG n | REG rec ) rec 1 = { n @ 1 [39;49m[33;40m>[39;49m[34;49m } { rec @ n @ * rec store n -- } while return ( rec @ ) ; [39;49m[32;49m
0x7fb6e793dd03    4883ff01                cmp rdi, 0x1                                           [39;49m[32;49m
0x7fb6e793dd07    0f8e09000000            jle 0x7fb6e793dd16         	< C.[34;49mfactorial[39;49m+29[32;49m >[39;49m[39;49m
[34;49m .. rec ) rec 1 = { n @ 1 > } { rec @ n @ [39;49m[33;40m*[39;49m[34;49m rec store n -- } while return ( rec @ ) ; [39;49m[32;49m
0x7fb6e793dd0d    480faff7                imul rsi, rdi                                          [39;49m
[34;49m .. { n @ 1 > } { rec @ n @ * rec store n [39;49m[33;40m--[39;49m[34;49m } while return ( rec @ ) ; [39;49m[32;49m
0x7fb6e793dd11    48ffcf                  dec rdi                                                [39;49m
[34;49m .. : factorial ( REG n | REG rec ) rec 1 [39;49m[33;40m=[39;49m[34;49m { n @ 1 > } { rec @ n @ * rec store n -- } while return ( rec @ ) ;  .. [39;49m[32;49m
0x7fb6e793dd14    ebed                    jmp 0x7fb6e793dd03         	< C.[34;49mfactorial[39;49m+10[32;49m >[39;49m[39;49m
[34;49m .. c store n -- } while return ( rec @ ) [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fb6e793dd16    498936                  mov [r14], rsi                                         [39;49m[32;49m
0x7fb6e793dd19    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'factorial' :: codeSize = 32
Word : 0x00007fb6e78efdf8 :: Compiled at : 0x00007fb6e793dcf9
 =============================
::> 'wdiss' was called at namespaces/test/bigNum.csl 26.14 <::
 5040
 =============================
BigNum.[34;49mqexp[39;49m <:> csl compiled word
SourceCode for BigNum.[34;49mqexp[39;49m :> 
[34;49m: qexp { dup 1 >= } { dup -- qexp * } { drop 1 } ifElse ; [39;49m
Source code file location of [34;49mqexp[39;49m : "namespaces/test/bigNum.csl" : 47.2 :: we are now at : namespaces/test/bigNum.csl : 48.17
Compiled with : optimizeOn, inlineOn, Jcc8 off
Debug Source Code on : BigNum on : Lisp off : Word Source Code on
starting at address : 0xe793dd9c -- code size = 154 bytes
TypeSignature : 
 -----------------------------
Word :: BigNum.[34;49mqexp[39;49m : definition = 0x00007fb6e793dd9c : disassembly at namespaces/test/bigNum.csl : 48.17 :
[34;49m ..                              : qexp { [39;49m[33;40mdup[39;49m[34;49m 1 >= } { dup -- qexp * } { drop 1 } ifElse ;  .. [39;49m[32;49m
0x7fb6e793dd9c    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fb6e793dd9f    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e793dda3    498906                  mov [r14], rax                                         [39;49m
[34;49m ..                          : qexp { dup [39;49m[33;40m1[39;49m[34;49m >= } { dup -- qexp * } { drop 1 } ifElse ;  .. [39;49m[32;49m
0x7fb6e793dda6    48b89ec475e7b67f0000    mov rax, 0x7fb6e775c49e                                [39;49m[32;49m
0x7fb6e793ddb0    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e793ddb4    498906                  mov [r14], rax                                         [39;49m
[34;49m ..                        : qexp { dup 1 [39;49m[33;40m>=[39;49m[34;49m } { dup -- qexp * } { drop 1 } ifElse ;  .. [39;49m[32;49m
0x7fb6e793ddb7    49b8006a7e892d560000    mov r8, 0x562d897e6a00                                 [39;49m[32;49m
0x7fb6e793ddc1    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e793ddcb    49ffd1                  call r9                    	< BigNum.[34;49m>=[39;49m : 0x0000562d897e6a00[32;49m >[39;49m[39;49m
[34;49m ..                     : qexp { dup 1 >= [39;49m[33;40m}[39;49m[34;49m { dup -- qexp * } { drop 1 } ifElse ;  .. [39;49m[32;49m
0x7fb6e793ddce    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fb6e793ddd1    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m .. p 1 >= } { dup -- qexp * } { drop 1 } [39;49m[33;40mifElse[39;49m[34;49m ; [39;49m[32;49m
0x7fb6e793ddd5    4885c0                  test rax, rax                                          [39;49m[32;49m
0x7fb6e793ddd8    0f8442000000            jz 0x7fb6e793de20          	< BigNum.[34;49mqexp[39;49m+132[32;49m >[39;49m[39;49m
[34;49m ..                 : qexp { dup 1 >= } { [39;49m[33;40mdup[39;49m[34;49m -- qexp * } { drop 1 } ifElse ;  .. [39;49m[32;49m
0x7fb6e793ddde    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fb6e793dde1    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e793dde5    498906                  mov [r14], rax                                         [39;49m
[34;49m ..             : qexp { dup 1 >= } { dup [39;49m[33;40m--[39;49m[34;49m qexp * } { drop 1 } ifElse ;  .. [39;49m[32;49m
0x7fb6e793dde8    49b840677e892d560000    mov r8, 0x562d897e6740                                 [39;49m[32;49m
0x7fb6e793ddf2    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e793ddfc    49ffd1                  call r9                    	< BigNum.[34;49m--[39;49m : 0x0000562d897e6740[32;49m >[39;49m[39;49m
[34;49m ..          : qexp { dup 1 >= } { dup -- [39;49m[33;40mqexp[39;49m[34;49m * } { drop 1 } ifElse ;  .. [39;49m[32;49m
0x7fb6e793ddff    e898ffffff              call 0x7fb6e793dd9c        	< BigNum.[34;49mqexp[39;49m : 0x00007fb6e793dd9c[32;49m >[39;49m[39;49m
[34;49m ..     : qexp { dup 1 >= } { dup -- qexp [39;49m[33;40m*[39;49m[34;49m } { drop 1 } ifElse ;  .. [39;49m[32;49m
0x7fb6e793de04    49b8a0617e892d560000    mov r8, 0x562d897e61a0                                 [39;49m[32;49m
0x7fb6e793de0e    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e793de18    49ffd1                  call r9                    	< BigNum.[34;49m*[39;49m : 0x0000562d897e61a0[32;49m >[39;49m[39;49m
[34;49m ..   : qexp { dup 1 >= } { dup -- qexp * [39;49m[33;40m}[39;49m[34;49m { drop 1 } ifElse ;  .. [39;49m[32;49m
0x7fb6e793de1b    e915000000              jmp 0x7fb6e793de35         	< BigNum.[34;49mqexp[39;49m+153[32;49m >[39;49m[39;49m
[34;49m  : qexp { dup 1 >= } { dup -- qexp * } { [39;49m[33;40mdrop[39;49m[34;49m 1 } ifElse ;  .. [39;49m[32;49m
0x7fb6e793de20    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m .. { dup 1 >= } { dup -- qexp * } { drop [39;49m[33;40m1[39;49m[34;49m } ifElse ; [39;49m[32;49m
0x7fb6e793de24    48b898c675e7b67f0000    mov rax, 0x7fb6e775c698                                [39;49m[32;49m
0x7fb6e793de2e    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e793de32    498906                  mov [r14], rax                                         [39;49m
[34;49m .. } { dup -- qexp * } { drop 1 } ifElse [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fb6e793de35    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'qexp' :: codeSize = 153
Word : 0x00007fb6e78f5680 :: Compiled at : 0x00007fb6e793dd9c
 =============================
::> 'wdiss' was called at namespaces/test/bigNum.csl 48.17 <::

 64 ! =  126881533357939042808962815520364490349535517879012388551519623917277055579607782641369088.0000000000000000

 1000 ! =  402500373014356573965793741945905331466415717275973005160450229307388258333305832074207539846141283233702319438244769525411367331950099268525081393066425641102364440538975256902898517732664348980339626955005842316414123623403303314558289023634589822459704133213687429695457361657683095633068674365092298546917635737018843674171489187933483232494644423138811439404881511922556769048272927089741323503336434785632402662508318178665837259828423326590524272558247963332000435657214278730517996831484196794780521608426407559004504605957514774013092093469970916169727571697221184562821813938228404815831008615299778976697065770997474768189927041576443854543367349421048551080834222352223715990791568941498400546806702876237014372470939002485369774391979668323876230446769380468612251665618792787485288393684197966231925205109888854702615949497837812295005890936840393755566768606141716118106467089738495142725886845933949765463606863447249180212483368373142748531552050758951261860855735774759363503465340414857799903094848377914328225502420134160706225369387488557165388258856440905878114403243339443218369283812196222272876497915081151745950838312945559467001410733526843709990418280028695926067425904924017160403088385615383853873873671204578957424842028610403130207220061474237697930654817955553216533560486784371742524017943681683718654713276916520518555137831575727617116067581869846850943768524279471585922876093873717315955846078694518404073987301440581322109739376192655200814870217759606791532106403065695332871696199920944938503897192549529124195488766369835125707913130533414392578650377791848991673178941730310627156743745149304683957293789930220041980215281108226887715116296939951708865964679779009286134328403379974059781066494711832852475207094304993498881340552075990361298578180682331230675764232294360563311013586691240226085143490549124289072062567132304987422415635743567746070194311533656373274375562284550382281185947162716362544861561499521687491322833509308280351313300605862362525996908983812880072943508034247701921763281673871901503890888457638381822916177377158606802753036755393390872007093544903206115548100491698914408060729906267473152898417756855951690401658725978464746597327109704448469122845463964631650412175257859192393071378748734225914381731183587471712625532959775801733207335954317771408537556974482153172331123483834269159359882984336807116835459466939557047224231302459590282324146036434360668725577414879395184240477672413414171312952473257510332755655534651539589753187702700644828017240511283623211730090940094609561181224960.0000000000000000

 =============================
BigNum.[34;49maexp[39;49m <:> csl compiled word
SourceCode for BigNum.[34;49maexp[39;49m :> 
[34;49m: aexp ( -t N.N ) { dup 1 <= } { drop 1 } { dup -- aexp * } ifElse ; [39;49m
Source code file location of [34;49maexp[39;49m : "namespaces/test/bigNum.csl" : 53.2 :: we are now at : namespaces/test/bigNum.csl : 54.17
Compiled with : optimizeOn, inlineOn, Jcc8 off
Debug Source Code on : BigNum on : Lisp off : Word Source Code on
starting at address : 0xe793de4a -- code size = 154 bytes
TypeSignature : BigNum -> BigNum 
 -----------------------------
Word :: BigNum.[34;49maexp[39;49m : definition = 0x00007fb6e793de4a : disassembly at namespaces/test/bigNum.csl : 54.17 :
[34;49m ..                   : aexp ( -t N.N ) { [39;49m[33;40mdup[39;49m[34;49m 1 <= } { drop 1 } { dup -- aexp * } ifElse ;  .. [39;49m[32;49m
0x7fb6e793de4a    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fb6e793de4d    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e793de51    498906                  mov [r14], rax                                         [39;49m
[34;49m ..               : aexp ( -t N.N ) { dup [39;49m[33;40m1[39;49m[34;49m <= } { drop 1 } { dup -- aexp * } ifElse ;  .. [39;49m[32;49m
0x7fb6e793de54    48b83cc975e7b67f0000    mov rax, 0x7fb6e775c93c                                [39;49m[32;49m
0x7fb6e793de5e    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e793de62    498906                  mov [r14], rax                                         [39;49m
[34;49m ..             : aexp ( -t N.N ) { dup 1 [39;49m[33;40m<=[39;49m[34;49m } { drop 1 } { dup -- aexp * } ifElse ;  .. [39;49m[32;49m
0x7fb6e793de65    49b8a0697e892d560000    mov r8, 0x562d897e69a0                                 [39;49m[32;49m
0x7fb6e793de6f    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e793de79    49ffd1                  call r9                    	< BigNum.[34;49m<=[39;49m : 0x0000562d897e69a0[32;49m >[39;49m[39;49m
[34;49m ..          : aexp ( -t N.N ) { dup 1 <= [39;49m[33;40m}[39;49m[34;49m { drop 1 } { dup -- aexp * } ifElse ;  .. [39;49m[32;49m
0x7fb6e793de7c    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fb6e793de7f    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m .. p 1 <= } { drop 1 } { dup -- aexp * } [39;49m[33;40mifElse[39;49m[34;49m ; [39;49m[32;49m
0x7fb6e793de83    4885c0                  test rax, rax                                          [39;49m[32;49m
0x7fb6e793de86    0f841a000000            jz 0x7fb6e793dea6          	< BigNum.[34;49maexp[39;49m+92[32;49m >[39;49m[39;49m
[34;49m ..      : aexp ( -t N.N ) { dup 1 <= } { [39;49m[33;40mdrop[39;49m[34;49m 1 } { dup -- aexp * } ifElse ;  .. [39;49m[32;49m
0x7fb6e793de8c    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m .. : aexp ( -t N.N ) { dup 1 <= } { drop [39;49m[33;40m1[39;49m[34;49m } { dup -- aexp * } ifElse ;  .. [39;49m[32;49m
0x7fb6e793de90    48b836cb75e7b67f0000    mov rax, 0x7fb6e775cb36                                [39;49m[32;49m
0x7fb6e793de9a    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e793de9e    498906                  mov [r14], rax                                         [39;49m
[34;49m  : aexp ( -t N.N ) { dup 1 <= } { drop 1 [39;49m[33;40m}[39;49m[34;49m { dup -- aexp * } ifElse ;  .. [39;49m[32;49m
0x7fb6e793dea1    e93d000000              jmp 0x7fb6e793dee3         	< BigNum.[34;49maexp[39;49m+153[32;49m >[39;49m[39;49m
[34;49m ..  ( -t N.N ) { dup 1 <= } { drop 1 } { [39;49m[33;40mdup[39;49m[34;49m -- aexp * } ifElse ; [39;49m[32;49m
0x7fb6e793dea6    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fb6e793dea9    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e793dead    498906                  mov [r14], rax                                         [39;49m
[34;49m .. t N.N ) { dup 1 <= } { drop 1 } { dup [39;49m[33;40m--[39;49m[34;49m aexp * } ifElse ; [39;49m[32;49m
0x7fb6e793deb0    49b840677e892d560000    mov r8, 0x562d897e6740                                 [39;49m[32;49m
0x7fb6e793deba    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e793dec4    49ffd1                  call r9                    	< BigNum.[34;49m--[39;49m : 0x0000562d897e6740[32;49m >[39;49m[39;49m
[34;49m .. .N ) { dup 1 <= } { drop 1 } { dup -- [39;49m[33;40maexp[39;49m[34;49m * } ifElse ; [39;49m[32;49m
0x7fb6e793dec7    e87effffff              call 0x7fb6e793de4a        	< BigNum.[34;49maexp[39;49m : 0x00007fb6e793de4a[32;49m >[39;49m[39;49m
[34;49m .. { dup 1 <= } { drop 1 } { dup -- aexp [39;49m[33;40m*[39;49m[34;49m } ifElse ; [39;49m[32;49m
0x7fb6e793decc    49b8a0617e892d560000    mov r8, 0x562d897e61a0                                 [39;49m[32;49m
0x7fb6e793ded6    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e793dee0    49ffd1                  call r9                    	< BigNum.[34;49m*[39;49m : 0x0000562d897e61a0[32;49m >[39;49m[39;49m
[34;49m .. } { drop 1 } { dup -- aexp * } ifElse [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fb6e793dee3    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'aexp' :: codeSize = 153
Word : 0x00007fb6e78f6cd8 :: Compiled at : 0x00007fb6e793de4a
 =============================
::> 'wdiss' was called at namespaces/test/bigNum.csl 54.17 <::

 =============================
BigNum.[34;49mbexp[39;49m <:> csl compiled word
SourceCode for BigNum.[34;49mbexp[39;49m :> 
[34;49m: bexp ( n ) { n @ 1 <= } { 1 } { n @ dup 1 - bexp * } ifElse return tos ; [39;49m
Source code file location of [34;49mbexp[39;49m : "namespaces/test/bigNum.csl" : 55.2 :: we are now at : namespaces/test/bigNum.csl : 57.18
Compiled with : optimizeOn, inlineOn, Jcc8 off
Debug Source Code on : BigNum on : Lisp off : Word Source Code on
starting at address : 0xe793dee9 -- code size = 202 bytes
TypeSignature : 
 -----------------------------
Word :: BigNum.[34;49mbexp[39;49m : definition = 0x00007fb6e793dee9 : disassembly at namespaces/test/bigNum.csl : 57.18 :
[34;49m ..                                     : [39;49m[33;40mbexp[39;49m[34;49m ( n ) { n @ 1 <= } { 1 } { n @ dup 1 - bexp * } ifElse return tos ;  .. [39;49m[32;49m
0x7fb6e793dee9    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fb6e793deed    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e793def1    4981c608000000          add r14, 0x8                                           [39;49m
[34;49m ..                        : bexp ( n ) { [39;49m[33;40mn[39;49m[34;49m @ 1 <= } { 1 } { n @ dup 1 - bexp * } ifElse return tos ;  .. [39;49m[32;49m
0x7fb6e793def8    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e793defc    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e793df00    498906                  mov [r14], rax                                         [39;49m
[34;49m ..                    : bexp ( n ) { n @ [39;49m[33;40m1[39;49m[34;49m <= } { 1 } { n @ dup 1 - bexp * } ifElse return tos ;  .. [39;49m[32;49m
0x7fb6e793df03    48b874cd75e7b67f0000    mov rax, 0x7fb6e775cd74                                [39;49m[32;49m
0x7fb6e793df0d    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e793df11    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e793df14    49b8a0697e892d560000    mov r8, 0x562d897e69a0                                 [39;49m[32;49m
0x7fb6e793df1e    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e793df28    49ffd1                  call r9                    	< BigNum.[34;49m<=[39;49m : 0x0000562d897e69a0[32;49m >[39;49m[39;49m
[34;49m ..               : bexp ( n ) { n @ 1 <= [39;49m[33;40m}[39;49m[34;49m { 1 } { n @ dup 1 - bexp * } ifElse return tos ;  .. [39;49m[32;49m
0x7fb6e793df2b    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fb6e793df2e    4983ee08                sub r14, 0x8                                           [39;49m[32;49m
0x7fb6e793df32    4885c0                  test rax, rax                                          [39;49m[32;49m
0x7fb6e793df35    0f8416000000            jz 0x7fb6e793df51          	< BigNum.[34;49mbexp[39;49m+104[32;49m >[39;49m[39;49m
[34;49m ..           : bexp ( n ) { n @ 1 <= } { [39;49m[33;40m1[39;49m[34;49m } { n @ dup 1 - bexp * } ifElse return tos ;  .. [39;49m[32;49m
0x7fb6e793df3b    48b86ecf75e7b67f0000    mov rax, 0x7fb6e775cf6e                                [39;49m[32;49m
0x7fb6e793df45    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e793df49    498906                  mov [r14], rax                                         [39;49m
[34;49m ..         : bexp ( n ) { n @ 1 <= } { 1 [39;49m[33;40m}[39;49m[34;49m { n @ dup 1 - bexp * } ifElse return tos ;  .. [39;49m[32;49m
0x7fb6e793df4c    e953000000              jmp 0x7fb6e793dfa4         	< BigNum.[34;49mbexp[39;49m+187[32;49m >[39;49m[39;49m
[34;49m ..     : bexp ( n ) { n @ 1 <= } { 1 } { [39;49m[33;40mn[39;49m[34;49m @ dup 1 - bexp * } ifElse return tos ;  .. [39;49m[32;49m
0x7fb6e793df51    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e793df55    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fb6e793df59    498906                  mov [r14], rax                                         [39;49m
[34;49m .. : bexp ( n ) { n @ 1 <= } { 1 } { n @ [39;49m[33;40mdup[39;49m[34;49m 1 - bexp * } ifElse return tos ;  .. [39;49m[32;49m
0x7fb6e793df5c    498946f8                mov [r14-0x8], rax                                     [39;49m
[34;49m: bexp ( n ) { n @ 1 <= } { 1 } { n @ dup [39;49m[33;40m1[39;49m[34;49m - bexp * } ifElse return tos ;  .. [39;49m[32;49m
0x7fb6e793df60    48b868d175e7b67f0000    mov rax, 0x7fb6e775d168                                [39;49m[32;49m
0x7fb6e793df6a    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e793df6e    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  ( n ) { n @ 1 <= } { 1 } { n @ dup 1 [39;49m[33;40m-[39;49m[34;49m bexp * } ifElse return tos ; [39;49m[32;49m
0x7fb6e793df71    49b8e0627e892d560000    mov r8, 0x562d897e62e0                                 [39;49m[32;49m
0x7fb6e793df7b    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e793df85    49ffd1                  call r9                    	< BigNum.[34;49m-[39;49m : 0x0000562d897e62e0[32;49m >[39;49m[39;49m
[34;49m ..  n ) { n @ 1 <= } { 1 } { n @ dup 1 - [39;49m[33;40mbexp[39;49m[34;49m * } ifElse return tos ; [39;49m[32;49m
0x7fb6e793df88    e85cffffff              call 0x7fb6e793dee9        	< BigNum.[34;49mbexp[39;49m : 0x00007fb6e793dee9[32;49m >[39;49m[39;49m[32;49m
0x7fb6e793df8d    49b8a0617e892d560000    mov r8, 0x562d897e61a0                                 [39;49m[32;49m
0x7fb6e793df97    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e793dfa1    49ffd1                  call r9                    	< BigNum.[34;49m*[39;49m : 0x0000562d897e61a0[32;49m >[39;49m[39;49m
[34;49m .. } { 1 } { n @ dup 1 - bexp * } ifElse [39;49m[33;40mreturn[39;49m[34;49m tos ; [39;49m[32;49m
0x7fb6e793dfa4    498b06                  mov rax, [r14]                                         [39;49m
[34;49m ..  @ dup 1 - bexp * } ifElse return tos [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fb6e793dfa7    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e793dfab    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e793dfaf    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e793dfb2    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'bexp' :: codeSize = 201
Word : 0x00007fb6e78f8330 :: Compiled at : 0x00007fb6e793dee9
 =============================
::> 'wdiss' was called at namespaces/test/bigNum.csl 57.18 <::

 =============================
BigNum.[34;49mbexp0[39;49m <:> csl compiled word
SourceCode for BigNum.[34;49mbexp0[39;49m :> 
[34;49m: bexp0 ( n ) { n @ 1 <= } { 1 } { n @ dup -- bexp0 * } ifElse return tos ; [39;49m
Source code file location of [34;49mbexp0[39;49m : "namespaces/test/bigNum.csl" : 56.2 :: we are now at : namespaces/test/bigNum.csl : 57.37
Compiled with : optimizeOn, inlineOn, Jcc8 off
Debug Source Code on : BigNum on : Lisp off : Word Source Code on
starting at address : 0xe793dfb8 -- code size = 185 bytes
TypeSignature : 
 -----------------------------
Word :: BigNum.[34;49mbexp0[39;49m : definition = 0x00007fb6e793dfb8 : disassembly at namespaces/test/bigNum.csl : 57.37 :
[34;49m ..                                     : [39;49m[33;40mbexp0[39;49m[34;49m ( n ) { n @ 1 <= } { 1 } { n @ dup -- bexp0 * } ifElse return tos ;  .. [39;49m[32;49m
0x7fb6e793dfb8    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fb6e793dfbc    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e793dfc0    4981c608000000          add r14, 0x8                                           [39;49m
[34;49m ..                       : bexp0 ( n ) { [39;49m[33;40mn[39;49m[34;49m @ 1 <= } { 1 } { n @ dup -- bexp0 * } ifElse return tos ;  .. [39;49m[32;49m
0x7fb6e793dfc7    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e793dfcb    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e793dfcf    498906                  mov [r14], rax                                         [39;49m
[34;49m ..                   : bexp0 ( n ) { n @ [39;49m[33;40m1[39;49m[34;49m <= } { 1 } { n @ dup -- bexp0 * } ifElse return tos ;  .. [39;49m[32;49m
0x7fb6e793dfd2    48b8a6d375e7b67f0000    mov rax, 0x7fb6e775d3a6                                [39;49m[32;49m
0x7fb6e793dfdc    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e793dfe0    498906                  mov [r14], rax                                         [39;49m
[34;49m ..                 : bexp0 ( n ) { n @ 1 [39;49m[33;40m<=[39;49m[34;49m } { 1 } { n @ dup -- bexp0 * } ifElse return tos ;  .. [39;49m[32;49m
0x7fb6e793dfe3    49b8a0697e892d560000    mov r8, 0x562d897e69a0                                 [39;49m[32;49m
0x7fb6e793dfed    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e793dff7    49ffd1                  call r9                    	< BigNum.[34;49m<=[39;49m : 0x0000562d897e69a0[32;49m >[39;49m[39;49m
[34;49m ..              : bexp0 ( n ) { n @ 1 <= [39;49m[33;40m}[39;49m[34;49m { 1 } { n @ dup -- bexp0 * } ifElse return tos ;  .. [39;49m[32;49m
0x7fb6e793dffa    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fb6e793dffd    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m .. @ 1 <= } { 1 } { n @ dup -- bexp0 * } [39;49m[33;40mifElse[39;49m[34;49m return tos ; [39;49m[32;49m
0x7fb6e793e001    4885c0                  test rax, rax                                          [39;49m[32;49m
0x7fb6e793e004    0f8416000000            jz 0x7fb6e793e020          	< BigNum.[34;49mbexp0[39;49m+104[32;49m >[39;49m[39;49m
[34;49m ..          : bexp0 ( n ) { n @ 1 <= } { [39;49m[33;40m1[39;49m[34;49m } { n @ dup -- bexp0 * } ifElse return tos ;  .. [39;49m[32;49m
0x7fb6e793e00a    48b8a0d575e7b67f0000    mov rax, 0x7fb6e775d5a0                                [39;49m[32;49m
0x7fb6e793e014    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e793e018    498906                  mov [r14], rax                                         [39;49m
[34;49m ..        : bexp0 ( n ) { n @ 1 <= } { 1 [39;49m[33;40m}[39;49m[34;49m { n @ dup -- bexp0 * } ifElse return tos ;  .. [39;49m[32;49m
0x7fb6e793e01b    e942000000              jmp 0x7fb6e793e062         	< BigNum.[34;49mbexp0[39;49m+170[32;49m >[39;49m[39;49m
[34;49m ..    : bexp0 ( n ) { n @ 1 <= } { 1 } { [39;49m[33;40mn[39;49m[34;49m @ dup -- bexp0 * } ifElse return tos ;  .. [39;49m[32;49m
0x7fb6e793e020    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e793e024    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fb6e793e028    498906                  mov [r14], rax                                         [39;49m
[34;49m   : bexp0 ( n ) { n @ 1 <= } { 1 } { n @ [39;49m[33;40mdup[39;49m[34;49m -- bexp0 * } ifElse return tos ;  .. [39;49m[32;49m
0x7fb6e793e02b    498946f8                mov [r14-0x8], rax                                     [39;49m
[34;49m .. p0 ( n ) { n @ 1 <= } { 1 } { n @ dup [39;49m[33;40m--[39;49m[34;49m bexp0 * } ifElse return tos ; [39;49m[32;49m
0x7fb6e793e02f    49b840677e892d560000    mov r8, 0x562d897e6740                                 [39;49m[32;49m
0x7fb6e793e039    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e793e043    49ffd1                  call r9                    	< BigNum.[34;49m--[39;49m : 0x0000562d897e6740[32;49m >[39;49m[39;49m
[34;49m .. ( n ) { n @ 1 <= } { 1 } { n @ dup -- [39;49m[33;40mbexp0[39;49m[34;49m * } ifElse return tos ; [39;49m[32;49m
0x7fb6e793e046    e86dffffff              call 0x7fb6e793dfb8        	< BigNum.[34;49mbexp0[39;49m : 0x00007fb6e793dfb8[32;49m >[39;49m[39;49m
[34;49m .. { n @ 1 <= } { 1 } { n @ dup -- bexp0 [39;49m[33;40m*[39;49m[34;49m } ifElse return tos ; [39;49m[32;49m
0x7fb6e793e04b    49b8a0617e892d560000    mov r8, 0x562d897e61a0                                 [39;49m[32;49m
0x7fb6e793e055    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e793e05f    49ffd1                  call r9                    	< BigNum.[34;49m*[39;49m : 0x0000562d897e61a0[32;49m >[39;49m[39;49m
[34;49m .. } { 1 } { n @ dup -- bexp0 * } ifElse [39;49m[33;40mreturn[39;49m[34;49m tos ; [39;49m[32;49m
0x7fb6e793e062    498b06                  mov rax, [r14]                                         [39;49m
[34;49m ..  @ dup -- bexp0 * } ifElse return tos [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fb6e793e065    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e793e069    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e793e06d    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e793e070    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'bexp0' :: codeSize = 184
Word : 0x00007fb6e78fa0d8 :: Compiled at : 0x00007fb6e793dfb8
 =============================
::> 'wdiss' was called at namespaces/test/bigNum.csl 57.37 <::
 5040.0000000000000000 5040.0000000000000000 40320.0000000000000000 40320.0000000000000000
 5040.0000000000000000 5040.0000000000000000 40320.0000000000000000
 =============================
BigNum.[34;49m!![39;49m <:> csl compiled word
SourceCode for BigNum.[34;49m!![39;49m :> 
[34;49m: !! ! p nl ; [39;49m
Source code file location of [34;49m!![39;49m : "namespaces/test/bigNum.csl" : 68.2 :: we are now at : namespaces/test/bigNum.csl : 69.15
Compiled with : optimizeOn, inlineOn, Jcc8 off
Debug Source Code on : BigNum on : Lisp off : Word Source Code on
starting at address : 0xe793e085 -- code size = 50 bytes
TypeSignature : 
 -----------------------------
Word :: BigNum.[34;49m!![39;49m : definition = 0x00007fb6e793e085 : disassembly at namespaces/test/bigNum.csl : 69.15 :
[34;49m ..                                  : !! [39;49m[33;40m![39;49m[34;49m p nl ;  .. [39;49m[32;49m
0x7fb6e793e085    49b9b8df93e7b67f0000    mov r9, 0x7fb6e793dfb8                                 [39;49m[32;49m
0x7fb6e793e08f    49ffd1                  call r9                    	< BigNum.[34;49mbexp0[39;49m : 0x00007fb6e793dfb8[32;49m >[39;49m[39;49m
[34;49m ..                                : !! ! [39;49m[33;40mp[39;49m[34;49m nl ;  .. [39;49m[32;49m
0x7fb6e793e092    49b978a993e7b67f0000    mov r9, 0x7fb6e793a978                                 [39;49m[32;49m
0x7fb6e793e09c    49ffd1                  call r9                    	< BigNum.[34;49mfprint[39;49m : 0x00007fb6e793a978[32;49m >[39;49m[39;49m
[34;49m ..                              : !! ! p [39;49m[33;40mnl[39;49m[34;49m ;  .. [39;49m[32;49m
0x7fb6e793e09f    49b8e08080892d560000    mov r8, 0x562d898080e0                                 [39;49m[32;49m
0x7fb6e793e0a9    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e793e0b3    49ffd1                  call r9                    	< Io.[34;49mnewline[39;49m : 0x0000562d898080e0[32;49m >[39;49m[39;49m
[34;49m ..                           : !! ! p nl [39;49m[33;40m;[39;49m[34;49m  .. [39;49m[32;49m
0x7fb6e793e0b6    c3                      ret                                                    [39;49m
Word_Disassemble : word - '!!' :: codeSize = 49
Word : 0x00007fb6e78fc038 :: Compiled at : 0x00007fb6e793e085
 =============================
::> 'wdiss' was called at namespaces/test/bigNum.csl 69.15 <::
 5040.0000000000000000
 40320.0000000000000000
 40320.0000000000000000

 =============================
BigNum.[34;49mbexpl[39;49m <:> csl compiled word
SourceCode for BigNum.[34;49mbexpl[39;49m :> 
[34;49m: bexpl ( n ) { n @ 1 <= } { 1 } { n @ dup 1 - bexpl * } ifElse return tos ; [39;49m
Source code file location of [34;49mbexpl[39;49m : "namespaces/test/bigNum.csl" : 79.2 :: we are now at : namespaces/test/bigNum.csl : 80.18
Compiled with : optimizeOn, inlineOn, Jcc8 off
Debug Source Code on : BigNum on : Lisp off : Word Source Code on
starting at address : 0xe793e0bc -- code size = 202 bytes
TypeSignature : 
 -----------------------------
Word :: BigNum.[34;49mbexpl[39;49m : definition = 0x00007fb6e793e0bc : disassembly at namespaces/test/bigNum.csl : 80.18 :
[34;49m ..                                     : [39;49m[33;40mbexpl[39;49m[34;49m ( n ) { n @ 1 <= } { 1 } { n @ dup 1 - bexpl * } ifElse return tos ;  .. [39;49m[32;49m
0x7fb6e793e0bc    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fb6e793e0c0    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e793e0c4    4981c608000000          add r14, 0x8                                           [39;49m
[34;49m ..                       : bexpl ( n ) { [39;49m[33;40mn[39;49m[34;49m @ 1 <= } { 1 } { n @ dup 1 - bexpl * } ifElse return tos ;  .. [39;49m[32;49m
0x7fb6e793e0cb    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e793e0cf    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e793e0d3    498906                  mov [r14], rax                                         [39;49m
[34;49m ..                   : bexpl ( n ) { n @ [39;49m[33;40m1[39;49m[34;49m <= } { 1 } { n @ dup 1 - bexpl * } ifElse return tos ;  .. [39;49m[32;49m
0x7fb6e793e0d6    48b898d975e7b67f0000    mov rax, 0x7fb6e775d998                                [39;49m[32;49m
0x7fb6e793e0e0    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e793e0e4    498906                  mov [r14], rax                                         [39;49m
[34;49m ..                 : bexpl ( n ) { n @ 1 [39;49m[33;40m<=[39;49m[34;49m } { 1 } { n @ dup 1 - bexpl * } ifElse return tos ;  .. [39;49m[32;49m
0x7fb6e793e0e7    49b8a0697e892d560000    mov r8, 0x562d897e69a0                                 [39;49m[32;49m
0x7fb6e793e0f1    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e793e0fb    49ffd1                  call r9                    	< BigNum.[34;49m<=[39;49m : 0x0000562d897e69a0[32;49m >[39;49m[39;49m
[34;49m ..              : bexpl ( n ) { n @ 1 <= [39;49m[33;40m}[39;49m[34;49m { 1 } { n @ dup 1 - bexpl * } ifElse return tos ;  .. [39;49m[32;49m
0x7fb6e793e0fe    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fb6e793e101    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m ..  1 <= } { 1 } { n @ dup 1 - bexpl * } [39;49m[33;40mifElse[39;49m[34;49m return tos ; [39;49m[32;49m
0x7fb6e793e105    4885c0                  test rax, rax                                          [39;49m[32;49m
0x7fb6e793e108    0f8416000000            jz 0x7fb6e793e124          	< BigNum.[34;49mbexpl[39;49m+104[32;49m >[39;49m[39;49m
[34;49m ..          : bexpl ( n ) { n @ 1 <= } { [39;49m[33;40m1[39;49m[34;49m } { n @ dup 1 - bexpl * } ifElse return tos ;  .. [39;49m[32;49m
0x7fb6e793e10e    48b892db75e7b67f0000    mov rax, 0x7fb6e775db92                                [39;49m[32;49m
0x7fb6e793e118    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e793e11c    498906                  mov [r14], rax                                         [39;49m
[34;49m ..        : bexpl ( n ) { n @ 1 <= } { 1 [39;49m[33;40m}[39;49m[34;49m { n @ dup 1 - bexpl * } ifElse return tos ;  .. [39;49m[32;49m
0x7fb6e793e11f    e953000000              jmp 0x7fb6e793e177         	< BigNum.[34;49mbexpl[39;49m+187[32;49m >[39;49m[39;49m
[34;49m ..    : bexpl ( n ) { n @ 1 <= } { 1 } { [39;49m[33;40mn[39;49m[34;49m @ dup 1 - bexpl * } ifElse return tos ;  .. [39;49m[32;49m
0x7fb6e793e124    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e793e128    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fb6e793e12c    498906                  mov [r14], rax                                         [39;49m
[34;49m   : bexpl ( n ) { n @ 1 <= } { 1 } { n @ [39;49m[33;40mdup[39;49m[34;49m 1 - bexpl * } ifElse return tos ;  .. [39;49m[32;49m
0x7fb6e793e12f    498946f8                mov [r14-0x8], rax                                     [39;49m
[34;49m .. pl ( n ) { n @ 1 <= } { 1 } { n @ dup [39;49m[33;40m1[39;49m[34;49m - bexpl * } ifElse return tos ; [39;49m[32;49m
0x7fb6e793e133    48b88cdd75e7b67f0000    mov rax, 0x7fb6e775dd8c                                [39;49m[32;49m
0x7fb6e793e13d    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e793e141    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  ( n ) { n @ 1 <= } { 1 } { n @ dup 1 [39;49m[33;40m-[39;49m[34;49m bexpl * } ifElse return tos ; [39;49m[32;49m
0x7fb6e793e144    49b8e0627e892d560000    mov r8, 0x562d897e62e0                                 [39;49m[32;49m
0x7fb6e793e14e    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e793e158    49ffd1                  call r9                    	< BigNum.[34;49m-[39;49m : 0x0000562d897e62e0[32;49m >[39;49m[39;49m
[34;49m ..  n ) { n @ 1 <= } { 1 } { n @ dup 1 - [39;49m[33;40mbexpl[39;49m[34;49m * } ifElse return tos ; [39;49m[32;49m
0x7fb6e793e15b    e85cffffff              call 0x7fb6e793e0bc        	< BigNum.[34;49mbexpl[39;49m : 0x00007fb6e793e0bc[32;49m >[39;49m[39;49m
[34;49m ..  n @ 1 <= } { 1 } { n @ dup 1 - bexpl [39;49m[33;40m*[39;49m[34;49m } ifElse return tos ; [39;49m[32;49m
0x7fb6e793e160    49b8a0617e892d560000    mov r8, 0x562d897e61a0                                 [39;49m[32;49m
0x7fb6e793e16a    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e793e174    49ffd1                  call r9                    	< BigNum.[34;49m*[39;49m : 0x0000562d897e61a0[32;49m >[39;49m[39;49m
[34;49m ..  { 1 } { n @ dup 1 - bexpl * } ifElse [39;49m[33;40mreturn[39;49m[34;49m tos ; [39;49m[32;49m
0x7fb6e793e177    498b06                  mov rax, [r14]                                         [39;49m
[34;49m .. @ dup 1 - bexpl * } ifElse return tos [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fb6e793e17a    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e793e17e    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e793e182    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e793e185    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'bexpl' :: codeSize = 201
Word : 0x00007fb6e78fc8d0 :: Compiled at : 0x00007fb6e793e0bc
 =============================
::> 'wdiss' was called at namespaces/test/bigNum.csl 80.18 <::
 5040.0000000000000000
 starting BigNum
 0.3333358764648438 1.7320556640625000 3.0000000000000000 
preprocessor test ok1
 
preprocessor test ok2
 
preprocessor test ok3
 
preprocessor test ok 4
 ppx = 4
 ppxe = 0 
classTest.csl
Using Namespaces :> C Root Class Compiler Logic Int Combinators int System User Shell OpenVmTil Lexer Interpreter Debug Word Namespace StartupMacros Io Compiling Reserved Compiler DObject Macro PreProcessor List Stack Memory Colors File String Asm Bits Locals Forth Experimental 

Pointer.size =  8

Integer size =  8

Integer.int16.size =  2

Integer.byte.size =  1

Using Namespaces :> Class Root byte Integer Pointer C Compiler Logic Int Combinators int System User Shell OpenVmTil Lexer Interpreter Debug Word Namespace StartupMacros Io Compiling Reserved Compiler DObject Macro PreProcessor List Stack Memory Colors File String Asm Bits Locals Forth Experimental 

Using Namespaces :> Buffer Class Root byte Integer Pointer C Compiler Logic Int Combinators int System User Shell OpenVmTil Lexer Interpreter Debug Word Namespace StartupMacros Io Compiling Reserved Compiler DObject Macro PreProcessor List Stack Memory Colors File String Asm Bits Locals Forth Experimental 

Buffer size =  256

Using Namespaces :> DLLNode Buffer Class Root byte Integer Pointer C Compiler Logic Int Combinators int System User Shell OpenVmTil Lexer Interpreter Debug Word Namespace StartupMacros Io Compiling Reserved Compiler DObject Macro PreProcessor List Stack Memory Colors File String Asm Bits Locals Forth Experimental 

DLLNode size =  16

DLLNode size =  18

Using Namespaces :> DLLNode Buffer Class Root byte Integer Pointer C Compiler Logic Int Combinators int System User Shell OpenVmTil Lexer Interpreter Debug Word Namespace StartupMacros Io Compiling Reserved Compiler DObject Macro PreProcessor List Stack Memory Colors File String Asm Bits Locals Forth Experimental 

DLLNode size =  16
 16
Dump at : namespaces/test/classTest.csl : 62.51 :
Dump : Address = 0x00007fb6e7712168 : Number = 16 :: (little endian dump)
0x00007fb6e7712168 :  01 00 00 00 00 00 00 00  02 00 00 00 00 00 00 00  ........ ........ 

 =============================
DLList.[34;49minit[39;49m <:> csl compiled word
SourceCode for DLList.[34;49minit[39;49m :> 
[34;49m: init ( this ) this.HeadNode.AfterReference this.TailNode.BeforeReference = this.TailNode.BeforeReference this.HeadNode.AfterReference = this.HeadNode.BeforeReference 1 = this.TailNode.AfterReference 2 = ; [39;49m
Source code file location of [34;49minit[39;49m : "namespaces/test/classTest.csl" : 73.2 :: we are now at : namespaces/test/classTest.csl : 79.18
Compiled with : optimizeOn, inlineOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xe793e1ca -- code size = 113 bytes
TypeSignature : 
 -----------------------------
Word :: DLList.[34;49minit[39;49m : definition = 0x00007fb6e793e1ca : disassembly at namespaces/test/classTest.csl : 79.18 :
[34;49m ..                                     : [39;49m[33;40minit[39;49m[34;49m ( this ) this.HeadNode.AfterReference this.TailNode.BeforeReference = this.TailNode.BeforeRefere .. [39;49m[32;49m
0x7fb6e793e1ca    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fb6e793e1ce    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e793e1d2    4981c608000000          add r14, 0x8                                           [39;49m
[34;49m ..                       : init ( this ) [39;49m[33;40mthis[39;49m[34;49m.HeadNode.AfterReference this.TailNode.BeforeReference = this.TailNode.BeforeReference this.HeadN .. [39;49m[32;49m
0x7fb6e793e1d9    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e793e1dd    4881c000000000          add rax, 0x0                                           [39;49m
[34;49m .. ( this ) this.HeadNode.AfterReference [39;49m[33;40mthis[39;49m[34;49m.TailNode.BeforeReference = this.TailNode.BeforeReference this.HeadNode.AfterReference = this.Hea .. [39;49m[32;49m
0x7fb6e793e1e4    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e793e1e8    4881c118000000          add rcx, 0x18                                          [39;49m
[34;49m .. ference this.TailNode.BeforeReference [39;49m[33;40m=[39;49m[34;49m this.TailNode.BeforeReference this.HeadNode.AfterReference = this.HeadNode.BeforeReference 1 = this .. [39;49m[32;49m
0x7fb6e793e1ef    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. rence this.TailNode.BeforeReference = [39;49m[33;40mthis[39;49m[34;49m.TailNode.BeforeReference this.HeadNode.AfterReference = this.HeadNode.BeforeReference 1 = this.T .. [39;49m[32;49m
0x7fb6e793e1f2    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. lNode.BeforeReference = this.TailNode.[39;49m[33;40mBeforeReference[39;49m[34;49m this.HeadNode.AfterReference = this.HeadNode.BeforeReference 1 = this.TailNode.AfterR .. [39;49m[32;49m
0x7fb6e793e1f6    4881c018000000          add rax, 0x18                                          [39;49m
[34;49m .. rence = this.TailNode.BeforeReference [39;49m[33;40mthis[39;49m[34;49m.HeadNode.AfterReference = this.HeadNode.BeforeReference 1 = this.TailNode.AfterReference 2 = ;  .. [39;49m[32;49m
0x7fb6e793e1fd    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m
[34;49m .. eference this.HeadNode.AfterReference [39;49m[33;40m=[39;49m[34;49m this.HeadNode.BeforeReference 1 = this.TailNode.AfterReference 2 = ;  .. [39;49m[32;49m
0x7fb6e793e201    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. erence this.HeadNode.AfterReference = [39;49m[33;40mthis[39;49m[34;49m.HeadNode.BeforeReference 1 = this.TailNode.AfterReference 2 = ;  .. [39;49m[32;49m
0x7fb6e793e204    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. adNode.AfterReference = this.HeadNode.[39;49m[33;40mBeforeReference[39;49m[34;49m 1 = this.TailNode.AfterReference 2 = ;  .. [39;49m[32;49m
0x7fb6e793e208    4881c008000000          add rax, 0x8                                           [39;49m
[34;49m .. rence = this.HeadNode.BeforeReference [39;49m[33;40m1[39;49m[34;49m = this.TailNode.AfterReference 2 = ;  .. [39;49m[32;49m
0x7fb6e793e20f    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m .. nce = this.HeadNode.BeforeReference 1 [39;49m[33;40m=[39;49m[34;49m this.TailNode.AfterReference 2 = ;  .. [39;49m[32;49m
0x7fb6e793e216    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. e = this.HeadNode.BeforeReference 1 = [39;49m[33;40mthis[39;49m[34;49m.TailNode.AfterReference 2 = ;  .. [39;49m[32;49m
0x7fb6e793e219    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. his.HeadNode.BeforeReference 1 = this.[39;49m[33;40mTailNode[39;49m[34;49m.AfterReference 2 = ;  .. [39;49m[32;49m
0x7fb6e793e21d    4881c010000000          add rax, 0x10                                          [39;49m
[34;49m .. ence 1 = this.TailNode.AfterReference [39;49m[33;40m2[39;49m[34;49m = ;  .. [39;49m[32;49m
0x7fb6e793e224    48c7c102000000          mov rcx, 0x2                                           [39;49m
[34;49m .. ce 1 = this.TailNode.AfterReference 2 [39;49m[33;40m=[39;49m[34;49m ;  .. [39;49m[32;49m
0x7fb6e793e22b    488908                  mov [rax], rcx                                         [39;49m
[34;49m ..  1 = this.TailNode.AfterReference 2 = [39;49m[33;40m;[39;49m[34;49m  .. [39;49m[32;49m
0x7fb6e793e22e    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e793e232    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e793e236    4983ee08                sub r14, 0x8                                           [39;49m[32;49m
0x7fb6e793e23a    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'init' :: codeSize = 112
Word : 0x00007fb6e7902620 :: Compiled at : 0x00007fb6e793e1ca
 =============================
::> 'wdiss' was called at namespaces/test/classTest.csl 79.18 <::
 32
Dump at : namespaces/test/classTest.csl : 82.36 :
Dump : Address = 0x00007fb6e7712858 : Number = 32 :: (little endian dump)
0x00007fb6e7712858 :  70 28 71 e7 b6 7f 00 00  01 00 00 00 00 00 00 00  p(q..... ........ 
0x00007fb6e7712868 :  02 00 00 00 00 00 00 00  58 28 71 e7 b6 7f 00 00  ........ X(q..... 
 class init test :   : ok

 15 15 15 15 15 
 below line should show several 15's yada yada yada yada neti
 15 15 15 15 15
 
 above line should show several 15's
Using Namespaces :> DLList DLLNode Buffer Class Root byte Integer Pointer C Compiler Logic Int Combinators int System User Shell OpenVmTil Lexer Interpreter Debug Word Namespace StartupMacros Io Compiling Reserved Compiler DObject Macro PreProcessor List Stack Memory Colors File String Asm Bits Locals Forth Experimental 

 =============================
DLListClone.[34;49minit[39;49m <:> csl compiled word
SourceCode for DLListClone.[34;49minit[39;49m :> 
[34;49m: init ( this ) this.Category 12 = this.Three 3 = this.Prototype this.Three @ = this.Prototype @ dup p 3 "init_assert1" assert this.Prototype @ p this.Sum 0 = this.Four 4 = this.Twelve 12 = this.Accum this.Sum @ = this.Sum this.Category @ 3 + this.Prototype @ & = this.Sum @ 3 "init_assert2" do> locationPush does> locationPrint <do assert this.Accum this.Three @ this.Four @ * this.Three @ / = this.Accum @ 4 "\n DLListClone init : this.Accum = :" ps "init_assert3" assert this.Prototype @ p this.Sum this.Category @ this.Prototype @ * this.Category @ - = this.Sum @ dup hex p 24 "init_assert5" assert decimal nl this.Category @ dup p 12 "init_assert7" assert this.Prototype @ p this.Sum this.Category @ this.Prototype @ * = this.Sum @ "testing yada" ps 36 "init_assert8" assert this.Sum this.Category @ this.Prototype @ - dup p = this.Sum this.Category @ this.Prototype @ && dup p = this.Sum this.Category @ this.Prototype @ & dup p = this.Accum this.Prototype @ = this.Sum this.Category @ this.Prototype @ || dup p = this.Sum this.Category @ this.Prototype @ / dup p = this.Category @ dup p 12 _assert this.Sum @ p this.Prototype @ p "\n 12 3 testing yada 36 9 1 0 15 4 12 4 3 : output above should (approximately) read" ddps hex "\nthis = " ps this p "\nthis @ = " ps this @ p "\nthis.size = " ps this.size @ p nl this dup p this.size @ dump this.Accum this.Prototype @ dup p = this this.size @ dump decimal this.Accum @ dup 3 "\nAccum should be 3 : assert9 =" assert p this.Category @ dup 12 "\nCategory should be 12 : assert10 =" assert p ; [39;49m
Source code file location of [34;49minit[39;49m : "namespaces/test/classTest.csl" : 103.2 :: we are now at : namespaces/test/classTest.csl : 155.18
Compiled with : optimizeOn, inlineOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xe793e3ee -- code size = 2539 bytes
TypeSignature : 
 -----------------------------
Word :: DLListClone.[34;49minit[39;49m : definition = 0x00007fb6e793e3ee : disassembly at namespaces/test/classTest.csl : 155.18 :[32;49m
0x7fb6e793e3ee    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fb6e793e3f2    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e793e3f6    4981c608000000          add r14, 0x8                                           [39;49m[32;49m
0x7fb6e793e3fd    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e793e401    4881c020000000          add rax, 0x20                                          [39;49m[32;49m
0x7fb6e793e408    48c7c10c000000          mov rcx, 0xc                                           [39;49m[32;49m
0x7fb6e793e40f    488908                  mov [rax], rcx                                         [39;49m[32;49m
0x7fb6e793e412    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e793e416    4881c040000000          add rax, 0x40                                          [39;49m[32;49m
0x7fb6e793e41d    48c7c103000000          mov rcx, 0x3                                           [39;49m[32;49m
0x7fb6e793e424    488908                  mov [rax], rcx                                         [39;49m[32;49m
0x7fb6e793e427    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e793e42b    4881c028000000          add rax, 0x28                                          [39;49m[32;49m
0x7fb6e793e432    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e793e436    4881c140000000          add rcx, 0x40                                          [39;49m[32;49m
0x7fb6e793e43d    488b09                  mov rcx, [rcx]                                         [39;49m[32;49m
0x7fb6e793e440    488908                  mov [rax], rcx                                         [39;49m[32;49m
0x7fb6e793e443    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e793e447    4881c028000000          add rax, 0x28                                          [39;49m[32;49m
0x7fb6e793e44e    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fb6e793e451    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fb6e793e455    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e793e458    498946f8                mov [r14-0x8], rax                                     [39;49m[32;49m
0x7fb6e793e45c    49b944a493e7b67f0000    mov r9, 0x7fb6e793a444                                 [39;49m[32;49m
0x7fb6e793e466    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fb6e793a444[32;49m >[39;49m[39;49m[32;49m
0x7fb6e793e469    48c7c003000000          mov rax, 0x3                                           [39;49m[32;49m
0x7fb6e793e470    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e793e474    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e793e477    48b884f97de7b67f0000    mov rax, 0x7fb6e77df984    	[32;49m< string : '[39;49m[39;49minit_assert1[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fb6e793e481    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e793e485    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e793e488    49b92bbb93e7b67f0000    mov r9, 0x7fb6e793bb2b                                 [39;49m[32;49m
0x7fb6e793e492    49ffd1                  call r9                    	< System.[34;49m_assert1[39;49m : 0x00007fb6e793bb2b[32;49m >[39;49m[39;49m[32;49m
0x7fb6e793e495    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e793e499    4881c028000000          add rax, 0x28                                          [39;49m[32;49m
0x7fb6e793e4a0    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fb6e793e4a3    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e793e4a7    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e793e4aa    49b944a493e7b67f0000    mov r9, 0x7fb6e793a444                                 [39;49m[32;49m
0x7fb6e793e4b4    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fb6e793a444[32;49m >[39;49m[39;49m[32;49m
0x7fb6e793e4b7    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e793e4bb    4881c030000000          add rax, 0x30                                          [39;49m[32;49m
0x7fb6e793e4c2    48c7c100000000          mov rcx, 0x0                                           [39;49m[32;49m
0x7fb6e793e4c9    488908                  mov [rax], rcx                                         [39;49m[32;49m
0x7fb6e793e4cc    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e793e4d0    4881c048000000          add rax, 0x48                                          [39;49m[32;49m
0x7fb6e793e4d7    48c7c104000000          mov rcx, 0x4                                           [39;49m[32;49m
0x7fb6e793e4de    488908                  mov [rax], rcx                                         [39;49m[32;49m
0x7fb6e793e4e1    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e793e4e5    4881c038000000          add rax, 0x38                                          [39;49m[32;49m
0x7fb6e793e4ec    48c7c10c000000          mov rcx, 0xc                                           [39;49m[32;49m
0x7fb6e793e4f3    488908                  mov [rax], rcx                                         [39;49m[32;49m
0x7fb6e793e4f6    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e793e4fa    4881c050000000          add rax, 0x50                                          [39;49m[32;49m
0x7fb6e793e501    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e793e505    4881c130000000          add rcx, 0x30                                          [39;49m[32;49m
0x7fb6e793e50c    488b09                  mov rcx, [rcx]                                         [39;49m[32;49m
0x7fb6e793e50f    488908                  mov [rax], rcx                                         [39;49m[32;49m
0x7fb6e793e512    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e793e516    4881c030000000          add rax, 0x30                                          [39;49m[32;49m
0x7fb6e793e51d    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e793e521    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e793e524    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e793e528    4881c020000000          add rax, 0x20                                          [39;49m[32;49m
0x7fb6e793e52f    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fb6e793e532    48c7c103000000          mov rcx, 0x3                                           [39;49m[32;49m
0x7fb6e793e539    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fb6e793e53c    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e793e540    4881c128000000          add rcx, 0x28                                          [39;49m[32;49m
0x7fb6e793e547    488b09                  mov rcx, [rcx]                                         [39;49m[32;49m
0x7fb6e793e54a    4823c1                  and rax, rcx                                           [39;49m[32;49m
0x7fb6e793e54d    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fb6e793e550    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fb6e793e553    4983ee08                sub r14, 0x8                                           [39;49m[32;49m
0x7fb6e793e557    488908                  mov [rax], rcx                                         [39;49m[32;49m
0x7fb6e793e55a    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e793e55e    4881c030000000          add rax, 0x30                                          [39;49m[32;49m
0x7fb6e793e565    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fb6e793e568    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e793e56c    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e793e56f    48c7c003000000          mov rax, 0x3                                           [39;49m[32;49m
0x7fb6e793e576    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e793e57a    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e793e57d    48b8bcf97de7b67f0000    mov rax, 0x7fb6e77df9bc    	[32;49m< string : '[39;49m[39;49minit_assert2[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fb6e793e587    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e793e58b    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e793e58e    48b8c83271e7b67f0000    mov rax, 0x7fb6e77132c8                                [39;49m[32;49m
0x7fb6e793e598    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e793e59c    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e793e59f    49b830b880892d560000    mov r8, 0x562d8980b830                                 [39;49m[32;49m
0x7fb6e793e5a9    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e793e5b3    49ffd1                  call r9                    	< Experimental.[34;49mlocationPrint[39;49m : 0x0000562d8980b830[32;49m >[39;49m[39;49m[32;49m
0x7fb6e793e5b6    49b92bbb93e7b67f0000    mov r9, 0x7fb6e793bb2b                                 [39;49m[32;49m
0x7fb6e793e5c0    49ffd1                  call r9                    	< System.[34;49m_assert1[39;49m : 0x00007fb6e793bb2b[32;49m >[39;49m[39;49m[32;49m
0x7fb6e793e5c3    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e793e5c7    4881c050000000          add rax, 0x50                                          [39;49m[32;49m
0x7fb6e793e5ce    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e793e5d2    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e793e5d5    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e793e5d9    4881c040000000          add rax, 0x40                                          [39;49m[32;49m
0x7fb6e793e5e0    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fb6e793e5e3    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e793e5e7    4881c148000000          add rcx, 0x48                                          [39;49m[32;49m
0x7fb6e793e5ee    488b09                  mov rcx, [rcx]                                         [39;49m[32;49m
0x7fb6e793e5f1    480fafc1                imul rax, rcx                                          [39;49m[32;49m
0x7fb6e793e5f5    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e793e5f9    4881c140000000          add rcx, 0x40                                          [39;49m[32;49m
0x7fb6e793e600    488b09                  mov rcx, [rcx]                                         [39;49m[32;49m
0x7fb6e793e603    48c7c200000000          mov rdx, 0x0                                           [39;49m[32;49m
0x7fb6e793e60a    48f7f9                  idiv rcx                                               [39;49m[32;49m
0x7fb6e793e60d    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fb6e793e610    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fb6e793e613    4983ee08                sub r14, 0x8                                           [39;49m[32;49m
0x7fb6e793e617    488908                  mov [rax], rcx                                         [39;49m[32;49m
0x7fb6e793e61a    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e793e61e    4881c050000000          add rax, 0x50                                          [39;49m[32;49m
0x7fb6e793e625    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fb6e793e628    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e793e62c    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e793e62f    48c7c004000000          mov rax, 0x4                                           [39;49m[32;49m
0x7fb6e793e636    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e793e63a    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e793e63d    48b800fa7de7b67f0000    mov rax, 0x7fb6e77dfa00    	[32;49m< string : '[39;49m[39;49m\n DLListClone init : this.Accum = :[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fb6e793e647    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e793e64b    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e793e64e    49b97da393e7b67f0000    mov r9, 0x7fb6e793a37d                                 [39;49m[32;49m
0x7fb6e793e658    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fb6e793a37d[32;49m >[39;49m[39;49m[32;49m
0x7fb6e793e65b    48b859fa7de7b67f0000    mov rax, 0x7fb6e77dfa59    	[32;49m< string : '[39;49m[39;49minit_assert3[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fb6e793e665    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e793e669    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e793e66c    49b92bbb93e7b67f0000    mov r9, 0x7fb6e793bb2b                                 [39;49m[32;49m
0x7fb6e793e676    49ffd1                  call r9                    	< System.[34;49m_assert1[39;49m : 0x00007fb6e793bb2b[32;49m >[39;49m[39;49m[32;49m
0x7fb6e793e679    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e793e67d    4881c028000000          add rax, 0x28                                          [39;49m[32;49m
0x7fb6e793e684    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fb6e793e687    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e793e68b    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e793e68e    49b944a493e7b67f0000    mov r9, 0x7fb6e793a444                                 [39;49m[32;49m
0x7fb6e793e698    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fb6e793a444[32;49m >[39;49m[39;49m[32;49m
0x7fb6e793e69b    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e793e69f    4881c030000000          add rax, 0x30                                          [39;49m[32;49m
0x7fb6e793e6a6    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e793e6aa    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e793e6ad    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e793e6b1    4881c020000000          add rax, 0x20                                          [39;49m[32;49m
0x7fb6e793e6b8    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fb6e793e6bb    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e793e6bf    4881c128000000          add rcx, 0x28                                          [39;49m[32;49m
0x7fb6e793e6c6    488b09                  mov rcx, [rcx]                                         [39;49m[32;49m
0x7fb6e793e6c9    480fafc1                imul rax, rcx                                          [39;49m[32;49m
0x7fb6e793e6cd    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e793e6d1    4881c120000000          add rcx, 0x20                                          [39;49m[32;49m
0x7fb6e793e6d8    488b09                  mov rcx, [rcx]                                         [39;49m[32;49m
0x7fb6e793e6db    482bc1                  sub rax, rcx                                           [39;49m[32;49m
0x7fb6e793e6de    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fb6e793e6e1    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fb6e793e6e4    4983ee08                sub r14, 0x8                                           [39;49m[32;49m
0x7fb6e793e6e8    488908                  mov [rax], rcx                                         [39;49m[32;49m
0x7fb6e793e6eb    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e793e6ef    4881c030000000          add rax, 0x30                                          [39;49m[32;49m
0x7fb6e793e6f6    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fb6e793e6f9    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fb6e793e6fd    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e793e700    498946f8                mov [r14-0x8], rax                                     [39;49m[32;49m
0x7fb6e793e704    49b8d0a380892d560000    mov r8, 0x562d8980a3d0                                 [39;49m[32;49m
0x7fb6e793e70e    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e793e718    49ffd1                  call r9                    	< System.[34;49mhex[39;49m : 0x0000562d8980a3d0[32;49m >[39;49m[39;49m[32;49m
0x7fb6e793e71b    49b944a493e7b67f0000    mov r9, 0x7fb6e793a444                                 [39;49m[32;49m
0x7fb6e793e725    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fb6e793a444[32;49m >[39;49m[39;49m[32;49m
0x7fb6e793e728    48c7c018000000          mov rax, 0x18                                          [39;49m[32;49m
0x7fb6e793e72f    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e793e733    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e793e736    48b887fa7de7b67f0000    mov rax, 0x7fb6e77dfa87    	[32;49m< string : '[39;49m[39;49minit_assert5[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fb6e793e740    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e793e744    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e793e747    49b92bbb93e7b67f0000    mov r9, 0x7fb6e793bb2b                                 [39;49m[32;49m
0x7fb6e793e751    49ffd1                  call r9                    	< System.[34;49m_assert1[39;49m : 0x00007fb6e793bb2b[32;49m >[39;49m[39;49m[32;49m
0x7fb6e793e754    49b810a480892d560000    mov r8, 0x562d8980a410                                 [39;49m[32;49m
0x7fb6e793e75e    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e793e768    49ffd1                  call r9                    	< System.[34;49mdecimal[39;49m : 0x0000562d8980a410[32;49m >[39;49m[39;49m[32;49m
0x7fb6e793e76b    49b8e08080892d560000    mov r8, 0x562d898080e0                                 [39;49m[32;49m
0x7fb6e793e775    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e793e77f    49ffd1                  call r9                    	< Io.[34;49mnewline[39;49m : 0x0000562d898080e0[32;49m >[39;49m[39;49m[32;49m
0x7fb6e793e782    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e793e786    4881c020000000          add rax, 0x20                                          [39;49m[32;49m
0x7fb6e793e78d    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fb6e793e790    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fb6e793e794    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e793e797    498946f8                mov [r14-0x8], rax                                     [39;49m[32;49m
0x7fb6e793e79b    49b944a493e7b67f0000    mov r9, 0x7fb6e793a444                                 [39;49m[32;49m
0x7fb6e793e7a5    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fb6e793a444[32;49m >[39;49m[39;49m[32;49m
0x7fb6e793e7a8    48c7c00c000000          mov rax, 0xc                                           [39;49m[32;49m
0x7fb6e793e7af    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e793e7b3    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e793e7b6    48b8b5fa7de7b67f0000    mov rax, 0x7fb6e77dfab5    	[32;49m< string : '[39;49m[39;49minit_assert7[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fb6e793e7c0    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e793e7c4    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e793e7c7    49b92bbb93e7b67f0000    mov r9, 0x7fb6e793bb2b                                 [39;49m[32;49m
0x7fb6e793e7d1    49ffd1                  call r9                    	< System.[34;49m_assert1[39;49m : 0x00007fb6e793bb2b[32;49m >[39;49m[39;49m[32;49m
0x7fb6e793e7d4    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e793e7d8    4881c028000000          add rax, 0x28                                          [39;49m[32;49m
0x7fb6e793e7df    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fb6e793e7e2    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e793e7e6    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e793e7e9    49b944a493e7b67f0000    mov r9, 0x7fb6e793a444                                 [39;49m[32;49m
0x7fb6e793e7f3    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fb6e793a444[32;49m >[39;49m[39;49m[32;49m
0x7fb6e793e7f6    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e793e7fa    4881c030000000          add rax, 0x30                                          [39;49m[32;49m
0x7fb6e793e801    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e793e805    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e793e808    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e793e80c    4881c020000000          add rax, 0x20                                          [39;49m[32;49m
0x7fb6e793e813    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fb6e793e816    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e793e81a    4881c128000000          add rcx, 0x28                                          [39;49m[32;49m
0x7fb6e793e821    488b09                  mov rcx, [rcx]                                         [39;49m[32;49m
0x7fb6e793e824    480fafc1                imul rax, rcx                                          [39;49m[32;49m
0x7fb6e793e828    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fb6e793e82b    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fb6e793e82e    4983ee08                sub r14, 0x8                                           [39;49m[32;49m
0x7fb6e793e832    488908                  mov [rax], rcx                                         [39;49m[32;49m
0x7fb6e793e835    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e793e839    4881c030000000          add rax, 0x30                                          [39;49m[32;49m
0x7fb6e793e840    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fb6e793e843    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e793e847    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e793e84a    48b8e0fa7de7b67f0000    mov rax, 0x7fb6e77dfae0    	[32;49m< string : '[39;49m[39;49mtesting yada[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fb6e793e854    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e793e858    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e793e85b    49b97da393e7b67f0000    mov r9, 0x7fb6e793a37d                                 [39;49m[32;49m
0x7fb6e793e865    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fb6e793a37d[32;49m >[39;49m[39;49m[32;49m
0x7fb6e793e868    48c7c024000000          mov rax, 0x24                                          [39;49m[32;49m
0x7fb6e793e86f    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e793e873    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e793e876    48b80efb7de7b67f0000    mov rax, 0x7fb6e77dfb0e    	[32;49m< string : '[39;49m[39;49minit_assert8[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fb6e793e880    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e793e884    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e793e887    49b92bbb93e7b67f0000    mov r9, 0x7fb6e793bb2b                                 [39;49m[32;49m
0x7fb6e793e891    49ffd1                  call r9                    	< System.[34;49m_assert1[39;49m : 0x00007fb6e793bb2b[32;49m >[39;49m[39;49m[32;49m
0x7fb6e793e894    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e793e898    4881c030000000          add rax, 0x30                                          [39;49m[32;49m
0x7fb6e793e89f    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e793e8a3    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e793e8a6    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e793e8aa    4881c020000000          add rax, 0x20                                          [39;49m[32;49m
0x7fb6e793e8b1    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fb6e793e8b4    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e793e8b8    4881c128000000          add rcx, 0x28                                          [39;49m[32;49m
0x7fb6e793e8bf    488b09                  mov rcx, [rcx]                                         [39;49m[32;49m
0x7fb6e793e8c2    482bc1                  sub rax, rcx                                           [39;49m[32;49m
0x7fb6e793e8c5    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fb6e793e8c9    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e793e8cc    498946f8                mov [r14-0x8], rax                                     [39;49m[32;49m
0x7fb6e793e8d0    49b944a493e7b67f0000    mov r9, 0x7fb6e793a444                                 [39;49m[32;49m
0x7fb6e793e8da    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fb6e793a444[32;49m >[39;49m[39;49m[32;49m
0x7fb6e793e8dd    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fb6e793e8e0    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fb6e793e8e4    4983ee10                sub r14, 0x10                                          [39;49m[32;49m
0x7fb6e793e8e8    488908                  mov [rax], rcx                                         [39;49m[32;49m
0x7fb6e793e8eb    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e793e8ef    4881c030000000          add rax, 0x30                                          [39;49m[32;49m
0x7fb6e793e8f6    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e793e8fa    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e793e8fd    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e793e901    4881c020000000          add rax, 0x20                                          [39;49m[32;49m
0x7fb6e793e908    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fb6e793e90b    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e793e90f    4881c128000000          add rcx, 0x28                                          [39;49m[32;49m
0x7fb6e793e916    488b09                  mov rcx, [rcx]                                         [39;49m[32;49m
0x7fb6e793e919    4885c9                  test rcx, rcx                                          [39;49m[32;49m
0x7fb6e793e91c    7405                    jz 0xe793e923                                          [39;49m[32;49m
0x7fb6e793e91e    4885c0                  test rax, rax                                          [39;49m[32;49m
0x7fb6e793e921    7509                    jnz 0xe793e92c                                         [39;49m[32;49m
0x7fb6e793e923    48c7c000000000          mov rax, 0x0                                           [39;49m[32;49m
0x7fb6e793e92a    eb07                    jmp 0x7fb6e793e933         	< DLListClone.[34;49minit[39;49m+1349[32;49m >[39;49m[39;49m[32;49m
0x7fb6e793e92c    48c7c001000000          mov rax, 0x1                                           [39;49m[32;49m
0x7fb6e793e933    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fb6e793e937    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e793e93a    498946f8                mov [r14-0x8], rax                                     [39;49m[32;49m
0x7fb6e793e93e    49b944a493e7b67f0000    mov r9, 0x7fb6e793a444                                 [39;49m[32;49m
0x7fb6e793e948    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fb6e793a444[32;49m >[39;49m[39;49m[32;49m
0x7fb6e793e94b    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fb6e793e94e    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fb6e793e952    4983ee10                sub r14, 0x10                                          [39;49m[32;49m
0x7fb6e793e956    488908                  mov [rax], rcx                                         [39;49m[32;49m
0x7fb6e793e959    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e793e95d    4881c030000000          add rax, 0x30                                          [39;49m[32;49m
0x7fb6e793e964    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e793e968    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e793e96b    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e793e96f    4881c020000000          add rax, 0x20                                          [39;49m[32;49m
0x7fb6e793e976    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fb6e793e979    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e793e97d    4881c128000000          add rcx, 0x28                                          [39;49m[32;49m
0x7fb6e793e984    488b09                  mov rcx, [rcx]                                         [39;49m[32;49m
0x7fb6e793e987    4823c1                  and rax, rcx                                           [39;49m[32;49m
0x7fb6e793e98a    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fb6e793e98e    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e793e991    498946f8                mov [r14-0x8], rax                                     [39;49m[32;49m
0x7fb6e793e995    49b944a493e7b67f0000    mov r9, 0x7fb6e793a444                                 [39;49m[32;49m
0x7fb6e793e99f    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fb6e793a444[32;49m >[39;49m[39;49m[32;49m
0x7fb6e793e9a2    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fb6e793e9a5    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fb6e793e9a9    4983ee10                sub r14, 0x10                                          [39;49m[32;49m
0x7fb6e793e9ad    488908                  mov [rax], rcx                                         [39;49m[32;49m
0x7fb6e793e9b0    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e793e9b4    4881c050000000          add rax, 0x50                                          [39;49m[32;49m
0x7fb6e793e9bb    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e793e9bf    4881c128000000          add rcx, 0x28                                          [39;49m[32;49m
0x7fb6e793e9c6    488b09                  mov rcx, [rcx]                                         [39;49m[32;49m
0x7fb6e793e9c9    488908                  mov [rax], rcx                                         [39;49m[32;49m
0x7fb6e793e9cc    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e793e9d0    4881c030000000          add rax, 0x30                                          [39;49m[32;49m
0x7fb6e793e9d7    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e793e9db    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e793e9de    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e793e9e2    4881c020000000          add rax, 0x20                                          [39;49m[32;49m
0x7fb6e793e9e9    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fb6e793e9ec    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e793e9f0    4881c128000000          add rcx, 0x28                                          [39;49m[32;49m
0x7fb6e793e9f7    488b09                  mov rcx, [rcx]                                         [39;49m[32;49m
0x7fb6e793e9fa    480bc1                  or rax, rcx                                            [39;49m[32;49m
0x7fb6e793e9fd    4885c0                  test rax, rax                                          [39;49m[32;49m
0x7fb6e793ea00    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fb6e793ea04    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e793ea07    498946f8                mov [r14-0x8], rax                                     [39;49m[32;49m
0x7fb6e793ea0b    49b944a493e7b67f0000    mov r9, 0x7fb6e793a444                                 [39;49m[32;49m
0x7fb6e793ea15    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fb6e793a444[32;49m >[39;49m[39;49m[32;49m
0x7fb6e793ea18    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fb6e793ea1b    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fb6e793ea1f    4983ee10                sub r14, 0x10                                          [39;49m[32;49m
0x7fb6e793ea23    488908                  mov [rax], rcx                                         [39;49m[32;49m
0x7fb6e793ea26    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e793ea2a    4881c030000000          add rax, 0x30                                          [39;49m[32;49m
0x7fb6e793ea31    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e793ea35    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e793ea38    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e793ea3c    4881c020000000          add rax, 0x20                                          [39;49m[32;49m
0x7fb6e793ea43    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fb6e793ea46    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e793ea4a    4881c128000000          add rcx, 0x28                                          [39;49m[32;49m
0x7fb6e793ea51    488b09                  mov rcx, [rcx]                                         [39;49m[32;49m
0x7fb6e793ea54    48c7c200000000          mov rdx, 0x0                                           [39;49m[32;49m
0x7fb6e793ea5b    48f7f9                  idiv rcx                                               [39;49m[32;49m
0x7fb6e793ea5e    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fb6e793ea62    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e793ea65    498946f8                mov [r14-0x8], rax                                     [39;49m[32;49m
0x7fb6e793ea69    49b944a493e7b67f0000    mov r9, 0x7fb6e793a444                                 [39;49m[32;49m
0x7fb6e793ea73    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fb6e793a444[32;49m >[39;49m[39;49m[32;49m
0x7fb6e793ea76    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fb6e793ea79    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fb6e793ea7d    4983ee10                sub r14, 0x10                                          [39;49m[32;49m
0x7fb6e793ea81    488908                  mov [rax], rcx                                         [39;49m[32;49m
0x7fb6e793ea84    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e793ea88    4881c020000000          add rax, 0x20                                          [39;49m[32;49m
0x7fb6e793ea8f    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fb6e793ea92    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fb6e793ea96    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e793ea99    498946f8                mov [r14-0x8], rax                                     [39;49m[32;49m
0x7fb6e793ea9d    49b944a493e7b67f0000    mov r9, 0x7fb6e793a444                                 [39;49m[32;49m
0x7fb6e793eaa7    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fb6e793a444[32;49m >[39;49m[39;49m[32;49m
0x7fb6e793eaaa    48c7c00c000000          mov rax, 0xc                                           [39;49m[32;49m
0x7fb6e793eab1    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e793eab5    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e793eab8    49b9dfbc93e7b67f0000    mov r9, 0x7fb6e793bcdf                                 [39;49m[32;49m
0x7fb6e793eac2    49ffd1                  call r9                    	< System.[34;49m_assert0[39;49m : 0x00007fb6e793bcdf[32;49m >[39;49m[39;49m[32;49m
0x7fb6e793eac5    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e793eac9    4881c030000000          add rax, 0x30                                          [39;49m[32;49m
0x7fb6e793ead0    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fb6e793ead3    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e793ead7    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e793eada    49b944a493e7b67f0000    mov r9, 0x7fb6e793a444                                 [39;49m[32;49m
0x7fb6e793eae4    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fb6e793a444[32;49m >[39;49m[39;49m[32;49m
0x7fb6e793eae7    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e793eaeb    4881c028000000          add rax, 0x28                                          [39;49m[32;49m
0x7fb6e793eaf2    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fb6e793eaf5    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e793eaf9    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e793eafc    49b944a493e7b67f0000    mov r9, 0x7fb6e793a444                                 [39;49m[32;49m
0x7fb6e793eb06    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fb6e793a444[32;49m >[39;49m[39;49m[32;49m
0x7fb6e793eb09    48b883fb7de7b67f0000    mov rax, 0x7fb6e77dfb83    	[32;49m< string : '[39;49m[39;49m\n 12 3 testing yada 36 9 1 0 15 4 12 4 3 : output above should (approximately) read[39[39;49m[32;49m
0x7fb6e793eb13    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e793eb17    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e793eb1a    49b9c0b893e7b67f0000    mov r9, 0x7fb6e793b8c0                                 [39;49m[32;49m
0x7fb6e793eb24    49ffd1                  call r9                    	< System.[34;49mddps[39;49m : 0x00007fb6e793b8c0[32;49m >[39;49m[39;49m[32;49m
0x7fb6e793eb27    49b8d0a380892d560000    mov r8, 0x562d8980a3d0                                 [39;49m[32;49m
0x7fb6e793eb31    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e793eb3b    49ffd1                  call r9                    	< System.[34;49mhex[39;49m : 0x0000562d8980a3d0[32;49m >[39;49m[39;49m[32;49m
0x7fb6e793eb3e    48b838fc7de7b67f0000    mov rax, 0x7fb6e77dfc38    	[32;49m< string : '[39;49m[39;49m\nthis = [39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fb6e793eb48    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e793eb4c    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e793eb4f    49b97da393e7b67f0000    mov r9, 0x7fb6e793a37d                                 [39;49m[32;49m
0x7fb6e793eb59    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fb6e793a37d[32;49m >[39;49m[39;49m[32;49m
0x7fb6e793eb5c    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e793eb60    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fb6e793eb67    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e793eb6b    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e793eb6e    49b944a493e7b67f0000    mov r9, 0x7fb6e793a444                                 [39;49m[32;49m
0x7fb6e793eb78    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fb6e793a444[32;49m >[39;49m[39;49m[32;49m
0x7fb6e793eb7b    48b859fc7de7b67f0000    mov rax, 0x7fb6e77dfc59    	[32;49m< string : '[39;49m[39;49m\nthis @ = [39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fb6e793eb85    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e793eb89    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e793eb8c    49b97da393e7b67f0000    mov r9, 0x7fb6e793a37d                                 [39;49m[32;49m
0x7fb6e793eb96    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fb6e793a37d[32;49m >[39;49m[39;49m[32;49m
0x7fb6e793eb99    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e793eb9d    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fb6e793eba0    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e793eba4    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e793eba7    49b944a493e7b67f0000    mov r9, 0x7fb6e793a444                                 [39;49m[32;49m
0x7fb6e793ebb1    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fb6e793a444[32;49m >[39;49m[39;49m[32;49m
0x7fb6e793ebb4    48b881fc7de7b67f0000    mov rax, 0x7fb6e77dfc81    	[32;49m< string : '[39;49m[39;49m\nthis.size = [39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fb6e793ebbe    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e793ebc2    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e793ebc5    49b97da393e7b67f0000    mov r9, 0x7fb6e793a37d                                 [39;49m[32;49m
0x7fb6e793ebcf    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fb6e793a37d[32;49m >[39;49m[39;49m[32;49m
0x7fb6e793ebd2    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e793ebd6    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fb6e793ebdd    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e793ebe1    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e793ebe4    48b8d08090e7b67f0000    mov rax, 0x7fb6e79080d0    	[32;49m< string : '[39;49m[39;49mX[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fb6e793ebee    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fb6e793ebf1    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e793ebf5    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e793ebf8    49b944a493e7b67f0000    mov r9, 0x7fb6e793a444                                 [39;49m[32;49m
0x7fb6e793ec02    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fb6e793a444[32;49m >[39;49m[39;49m[32;49m
0x7fb6e793ec05    49b8e08080892d560000    mov r8, 0x562d898080e0                                 [39;49m[32;49m
0x7fb6e793ec0f    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e793ec19    49ffd1                  call r9                    	< Io.[34;49mnewline[39;49m : 0x0000562d898080e0[32;49m >[39;49m[39;49m[32;49m
0x7fb6e793ec1c    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e793ec20    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fb6e793ec27    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fb6e793ec2b    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e793ec2e    498946f8                mov [r14-0x8], rax                                     [39;49m[32;49m
0x7fb6e793ec32    49b944a493e7b67f0000    mov r9, 0x7fb6e793a444                                 [39;49m[32;49m
0x7fb6e793ec3c    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fb6e793a444[32;49m >[39;49m[39;49m[32;49m
0x7fb6e793ec3f    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e793ec43    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fb6e793ec4a    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e793ec4e    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e793ec51    48b8d08090e7b67f0000    mov rax, 0x7fb6e79080d0    	[32;49m< string : '[39;49m[39;49mX[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fb6e793ec5b    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fb6e793ec5e    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e793ec62    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e793ec65    49b830a480892d560000    mov r8, 0x562d8980a430                                 [39;49m[32;49m
0x7fb6e793ec6f    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e793ec79    49ffd1                  call r9                    	< Debug.[34;49mdump[39;49m : 0x0000562d8980a430[32;49m >[39;49m[39;49m[32;49m
0x7fb6e793ec7c    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e793ec80    4881c050000000          add rax, 0x50                                          [39;49m[32;49m
0x7fb6e793ec87    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e793ec8b    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e793ec8e    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e793ec92    4881c028000000          add rax, 0x28                                          [39;49m[32;49m
0x7fb6e793ec99    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fb6e793ec9c    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fb6e793eca0    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e793eca3    498946f8                mov [r14-0x8], rax                                     [39;49m[32;49m
0x7fb6e793eca7    49b944a493e7b67f0000    mov r9, 0x7fb6e793a444                                 [39;49m[32;49m
0x7fb6e793ecb1    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fb6e793a444[32;49m >[39;49m[39;49m[32;49m
0x7fb6e793ecb4    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fb6e793ecb7    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fb6e793ecbb    4983ee10                sub r14, 0x10                                          [39;49m[32;49m
0x7fb6e793ecbf    488908                  mov [rax], rcx                                         [39;49m[32;49m
0x7fb6e793ecc2    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e793ecc6    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fb6e793eccd    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e793ecd1    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e793ecd4    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e793ecd8    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fb6e793ecdf    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e793ece3    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e793ece6    48b8d08090e7b67f0000    mov rax, 0x7fb6e79080d0    	[32;49m< string : '[39;49m[39;49mX[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fb6e793ecf0    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fb6e793ecf3    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e793ecf7    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e793ecfa    49b830a480892d560000    mov r8, 0x562d8980a430                                 [39;49m[32;49m
0x7fb6e793ed04    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e793ed0e    49ffd1                  call r9                    	< Debug.[34;49mdump[39;49m : 0x0000562d8980a430[32;49m >[39;49m[39;49m[32;49m
0x7fb6e793ed11    49b810a480892d560000    mov r8, 0x562d8980a410                                 [39;49m[32;49m
0x7fb6e793ed1b    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e793ed25    49ffd1                  call r9                    	< System.[34;49mdecimal[39;49m : 0x0000562d8980a410[32;49m >[39;49m[39;49m[32;49m
0x7fb6e793ed28    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e793ed2c    4881c050000000          add rax, 0x50                                          [39;49m[32;49m
0x7fb6e793ed33    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fb6e793ed36    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fb6e793ed3a    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e793ed3d    498946f8                mov [r14-0x8], rax                                     [39;49m[32;49m
0x7fb6e793ed41    48c7c003000000          mov rax, 0x3                                           [39;49m[32;49m
0x7fb6e793ed48    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e793ed4c    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e793ed4f    48b8c2fc7de7b67f0000    mov rax, 0x7fb6e77dfcc2    	[32;49m< string : '[39;49m[39;49m\nAccum should be 3 : assert9 =[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fb6e793ed59    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e793ed5d    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e793ed60    49b92bbb93e7b67f0000    mov r9, 0x7fb6e793bb2b                                 [39;49m[32;49m
0x7fb6e793ed6a    49ffd1                  call r9                    	< System.[34;49m_assert1[39;49m : 0x00007fb6e793bb2b[32;49m >[39;49m[39;49m[32;49m
0x7fb6e793ed6d    49b944a493e7b67f0000    mov r9, 0x7fb6e793a444                                 [39;49m[32;49m
0x7fb6e793ed77    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fb6e793a444[32;49m >[39;49m[39;49m[32;49m
0x7fb6e793ed7a    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e793ed7e    4881c020000000          add rax, 0x20                                          [39;49m[32;49m
0x7fb6e793ed85    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fb6e793ed88    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fb6e793ed8c    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e793ed8f    498946f8                mov [r14-0x8], rax                                     [39;49m[32;49m
0x7fb6e793ed93    48c7c00c000000          mov rax, 0xc                                           [39;49m[32;49m
0x7fb6e793ed9a    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e793ed9e    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e793eda1    48b82bfd7de7b67f0000    mov rax, 0x7fb6e77dfd2b    	[32;49m< string : '[39;49m[39;49m\nCategory should be 12 : assert10 =[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fb6e793edab    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e793edaf    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e793edb2    49b92bbb93e7b67f0000    mov r9, 0x7fb6e793bb2b                                 [39;49m[32;49m
0x7fb6e793edbc    49ffd1                  call r9                    	< System.[34;49m_assert1[39;49m : 0x00007fb6e793bb2b[32;49m >[39;49m[39;49m[32;49m
0x7fb6e793edbf    49b944a493e7b67f0000    mov r9, 0x7fb6e793a444                                 [39;49m[32;49m
0x7fb6e793edc9    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fb6e793a444[32;49m >[39;49m[39;49m[32;49m
0x7fb6e793edcc    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e793edd0    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e793edd4    4983ee08                sub r14, 0x8                                           [39;49m[32;49m
0x7fb6e793edd8    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'init' :: codeSize = 2538
Word : 0x00007fb6e7908fd8 :: Compiled at : 0x00007fb6e793e3ee
 =============================
::> 'wdiss' was called at namespaces/test/classTest.csl 155.18 <::
 3 init_assert1  : ok

 3
Run Time Location : namespaces/test/classTest.csl 121.99 init_assert2  : ok

 
 DLListClone init : this.Accum = : init_assert3  : ok

 3 0x0000000000000018 init_assert5  : ok


 12 init_assert7  : ok

 3 testing yada init_assert8  : ok

 9 1 0 15 4 12 4 3[34;49m 
 12 3 testing yada 36 9 1 0 15 4 12 4 3 : output above should (approximately) read[39;49m 
this =  0x00007fb6e77132e8 
this @ =  0x00007fb6e7713300 
this.size =  0x0000000000000058
 0x00007fb6e77132e8
Dump at : namespaces/test/classTest.csl : 157.27 :
Dump : Address = 0x00007fb6e77132e8 : Number = 0x0000000000000058 :: (little endian dump)
0x00007fb6e77132e8 :  00 33 71 e7 b6 7f 00 00  01 00 00 00 00 00 00 00  .3q..... ........ 
0x00007fb6e77132f8 :  02 00 00 00 00 00 00 00  e8 32 71 e7 b6 7f 00 00  ........ .2q..... 
0x00007fb6e7713308 :  0c 00 00 00 00 00 00 00  03 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e7713318 :  04 00 00 00 00 00 00 00  0c 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e7713328 :  03 00 00 00 00 00 00 00  04 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e7713338 :  03 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
 0x0000000000000003
Dump at : namespaces/test/classTest.csl : 157.27 :
Dump : Address = 0x00007fb6e77132e8 : Number = 0x0000000000000058 :: (little endian dump)
0x00007fb6e77132e8 :  00 33 71 e7 b6 7f 00 00  01 00 00 00 00 00 00 00  .3q..... ........ 
0x00007fb6e77132f8 :  02 00 00 00 00 00 00 00  e8 32 71 e7 b6 7f 00 00  ........ .2q..... 
0x00007fb6e7713308 :  0c 00 00 00 00 00 00 00  03 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e7713318 :  04 00 00 00 00 00 00 00  0c 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e7713328 :  03 00 00 00 00 00 00 00  04 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e7713338 :  03 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
 
Accum should be 3 : assert9 =  : ok

 3 
Category should be 12 : assert10 =  : ok

 12 
this =  0x00007fb6e7908288
Dump at : namespaces/test/classTest.csl : 161.25 :
Dump : Address = 0x00007fb6e77132e8 : Number = 0x0000000000000058 :: (little endian dump)
0x00007fb6e77132e8 :  00 33 71 e7 b6 7f 00 00  01 00 00 00 00 00 00 00  .3q..... ........ 
0x00007fb6e77132f8 :  02 00 00 00 00 00 00 00  e8 32 71 e7 b6 7f 00 00  ........ .2q..... 
0x00007fb6e7713308 :  0c 00 00 00 00 00 00 00  03 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e7713318 :  04 00 00 00 00 00 00 00  0c 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e7713328 :  03 00 00 00 00 00 00 00  04 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e7713338 :  03 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 

Dump at : namespaces/test/classTest.csl : 162.32 :
Dump : Address = 0x00007fb6e77132e8 : Number = 0x0000000000000058 :: (little endian dump)
0x00007fb6e77132e8 :  00 33 71 e7 b6 7f 00 00  01 00 00 00 00 00 00 00  .3q..... ........ 
0x00007fb6e77132f8 :  02 00 00 00 00 00 00 00  e8 32 71 e7 b6 7f 00 00  ........ .2q..... 
0x00007fb6e7713308 :  0c 00 00 00 00 00 00 00  03 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e7713318 :  04 00 00 00 00 00 00 00  0c 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e7713328 :  03 00 00 00 00 00 00 00  04 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e7713338 :  03 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 


DataStack at : [34;49mnamespaces/test/classTest.csl : 163.13[39;49m :
DataStack depth =   3 : Dsp (R14) = Top = 0x00007fb6e7cd3a58, InitialTos = 0x00007fb6e7cd3a40, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fb6e7cd3a58 > = 0x0000000000000005	
  DataStack   [  -1 ] < 0x00007fb6e7cd3a50 > = 0x0000000000000005	
  DataStack   [  -2 ] < 0x00007fb6e7cd3a48 > = 0x0000000000000005	
 DLListClone size = 88
 Clone size  : ok

 DLListClone init test :   : ok

 
this @ size @ p  88 
this.size =  88
Using Namespaces :> C Root DLListClone DLList DLLNode Buffer Class byte Integer Pointer Compiler Logic Int Combinators int System User Shell OpenVmTil Lexer Interpreter Debug Word Namespace StartupMacros Io Compiling Reserved Compiler DObject Macro PreProcessor List Stack Memory Colors File String Asm Bits Locals Forth Experimental 
 
printf output = this.size = 88
 0x00007fb6e77132e8 88
Dump at : namespaces/test/classTest.csl : 175.48 :
Dump : Address = 0x00007fb6e77132e8 : Number = 88 :: (little endian dump)
0x00007fb6e77132e8 :  00 33 71 e7 b6 7f 00 00  01 00 00 00 00 00 00 00  .3q..... ........ 
0x00007fb6e77132f8 :  02 00 00 00 00 00 00 00  e8 32 71 e7 b6 7f 00 00  ........ .2q..... 
0x00007fb6e7713308 :  0c 00 00 00 00 00 00 00  03 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e7713318 :  04 00 00 00 00 00 00 00  0c 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e7713328 :  03 00 00 00 00 00 00 00  04 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e7713338 :  03 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 


 -----------------------------
[35;40m 'this' semantics have yet to be solidified[39;49m namespaces/test/classTest.csl 177.53
 -----------------------------


Dump at : namespaces/test/classTest.csl : 178.32 :
Dump : Address = 0x00007fb6e77132e8 : Number = 88 :: (little endian dump)
0x00007fb6e77132e8 :  00 33 71 e7 b6 7f 00 00  01 00 00 00 00 00 00 00  .3q..... ........ 
0x00007fb6e77132f8 :  02 00 00 00 00 00 00 00  e8 32 71 e7 b6 7f 00 00  ........ .2q..... 
0x00007fb6e7713308 :  0c 00 00 00 00 00 00 00  03 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e7713318 :  04 00 00 00 00 00 00 00  0c 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e7713328 :  03 00 00 00 00 00 00 00  04 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e7713338 :  03 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 

 DLListClone init test4 :   : ok

[34;49m 
math test
[39;49m
 =============================
C.[34;49mt*[39;49m <:> csl compiled word
SourceCode for C.[34;49mt*[39;49m :> 
[34;49m: t* ( a b c d ) a @ b @ c @ d @ * * * return tos ; [39;49m
Source code file location of [34;49mt*[39;49m : "namespaces/test/math.csl" : 25.2 :: we are now at : namespaces/test/math.csl : 26.16
Compiled with : optimizeOn, inlineOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xe793f09a -- code size = 100 bytes
TypeSignature : 
 -----------------------------
Word :: C.[34;49mt*[39;49m : definition = 0x00007fb6e793f09a : disassembly at namespaces/test/math.csl : 26.16 :
[34;49m ..                                     : [39;49m[33;40mt*[39;49m[34;49m ( a b c d ) a @ b @ c @ d @ * * * return tos ;  .. [39;49m[32;49m
0x7fb6e793f09a    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fb6e793f09e    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e793f0a2    4981c608000000          add r14, 0x8                                           [39;49m
[34;49m ..                      : t* ( a b c d ) [39;49m[33;40ma[39;49m[34;49m @ b @ c @ d @ * * * return tos ;  .. [39;49m[32;49m
0x7fb6e793f0a9    498b47e0                mov rax, [r15-0x20]                                    [39;49m[32;49m
0x7fb6e793f0ad    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e793f0b1    498906                  mov [r14], rax                                         [39;49m
[34;49m ..                  : t* ( a b c d ) a @ [39;49m[33;40mb[39;49m[34;49m @ c @ d @ * * * return tos ;  .. [39;49m[32;49m
0x7fb6e793f0b4    498b47e8                mov rax, [r15-0x18]                                    [39;49m[32;49m
0x7fb6e793f0b8    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e793f0bc    498906                  mov [r14], rax                                         [39;49m
[34;49m ..              : t* ( a b c d ) a @ b @ [39;49m[33;40mc[39;49m[34;49m @ d @ * * * return tos ;  .. [39;49m[32;49m
0x7fb6e793f0bf    498b47f0                mov rax, [r15-0x10]                                    [39;49m
[34;49m ..          : t* ( a b c d ) a @ b @ c @ [39;49m[33;40md[39;49m[34;49m @ * * * return tos ;  .. [39;49m[32;49m
0x7fb6e793f0c3    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m
[34;49m ..      : t* ( a b c d ) a @ b @ c @ d @ [39;49m[33;40m*[39;49m[34;49m * * return tos ;  .. [39;49m[32;49m
0x7fb6e793f0c7    480fafc1                imul rax, rcx                                          [39;49m[32;49m
0x7fb6e793f0cb    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fb6e793f0ce    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fb6e793f0d1    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m ..    : t* ( a b c d ) a @ b @ c @ d @ * [39;49m[33;40m*[39;49m[34;49m * return tos ;  .. [39;49m[32;49m
0x7fb6e793f0d5    480fafc1                imul rax, rcx                                          [39;49m[32;49m
0x7fb6e793f0d9    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fb6e793f0dc    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fb6e793f0df    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m ..  : t* ( a b c d ) a @ b @ c @ d @ * * [39;49m[33;40m*[39;49m[34;49m return tos ;  .. [39;49m[32;49m
0x7fb6e793f0e3    480fafc1                imul rax, rcx                                          [39;49m[32;49m
0x7fb6e793f0e7    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e793f0eb    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  d ) a @ b @ c @ d @ * * * return tos [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fb6e793f0ee    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e793f0f2    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e793f0f6    4983ee18                sub r14, 0x18                                          [39;49m[32;49m
0x7fb6e793f0fa    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e793f0fd    c3                      ret                                                    [39;49m
Word_Disassemble : word - 't*' :: codeSize = 99
Word : 0x00007fb6e792b9c8 :: Compiled at : 0x00007fb6e793f09a
 =============================
::> 'wdiss' was called at namespaces/test/math.csl 26.16 <::

 =============================
C.[34;49mmoe[39;49m <:> csl compiled word
SourceCode for C.[34;49mmoe[39;49m :> 
[34;49m: moe ( n m ) n m @ <<= n @ return tos ; [39;49m
Source code file location of [34;49mmoe[39;49m : "namespaces/test/math.csl" : 44.2 :: we are now at : namespaces/test/math.csl : 45.17
Compiled with : optimizeOn, inlineOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xe793f2e3 -- code size = 60 bytes
TypeSignature : 
 -----------------------------
Word :: C.[34;49mmoe[39;49m : definition = 0x00007fb6e793f2e3 : disassembly at namespaces/test/math.csl : 45.17 :
[34;49m ..                                     : [39;49m[33;40mmoe[39;49m[34;49m ( n m ) n m @ <<= n @ return tos ;  .. [39;49m[32;49m
0x7fb6e793f2e3    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fb6e793f2e7    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e793f2eb    4981c608000000          add r14, 0x8                                           [39;49m[32;49m
0x7fb6e793f2f2    498d5ff0                lea rbx, [r15-0x10]                                    [39;49m
[34;49m ..                         : moe ( n m ) [39;49m[33;40mn[39;49m[34;49m m @ <<= n @ return tos ;  .. [39;49m[32;49m
0x7fb6e793f2f6    498b47f0                mov rax, [r15-0x10]                                    [39;49m
[34;49m ..                       : moe ( n m ) n [39;49m[33;40mm[39;49m[34;49m @ <<= n @ return tos ;  .. [39;49m[32;49m
0x7fb6e793f2fa    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e793f2fe    48d3e0                  shl rax, cl                                            [39;49m
[34;49m ..                   : moe ( n m ) n m @ [39;49m[33;40m<<=[39;49m[34;49m n @ return tos ;  .. [39;49m[32;49m
0x7fb6e793f301    488903                  mov [rbx], rax                                         [39;49m
[34;49m ..               : moe ( n m ) n m @ <<= [39;49m[33;40mn[39;49m[34;49m @ return tos ;  .. [39;49m[32;49m
0x7fb6e793f304    498b47f0                mov rax, [r15-0x10]                                    [39;49m[32;49m
0x7fb6e793f308    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e793f30c    498906                  mov [r14], rax                                         [39;49m
[34;49m   : moe ( n m ) n m @ <<= n @ return tos [39;49m[33;40m;[39;49m[34;49m  .. [39;49m[32;49m
0x7fb6e793f30f    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e793f313    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e793f317    4983ee08                sub r14, 0x8                                           [39;49m[32;49m
0x7fb6e793f31b    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e793f31e    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'moe' :: codeSize = 59
Word : 0x00007fb6e74c6488 :: Compiled at : 0x00007fb6e793f2e3
 =============================
::> 'wdiss' was called at namespaces/test/math.csl 45.17 <::
 moe_assert1  : ok

 moe_assert2  : ok

 moe_assert3  : ok

 moe_assert3  : ok



 =============================
Infix.[34;49mmoe[39;49m <:> csl compiled word
SourceCode for Infix.[34;49mmoe[39;49m :> 
[34;49m: moe ( n m ) n <<= m n return tos ; [39;49m
Source code file location of [34;49mmoe[39;49m : "namespaces/test/math.csl" : 53.2 :: we are now at : namespaces/test/math.csl : 54.17
Compiled with : optimizeOn, inlineOn, infixOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xe793f365 -- code size = 71 bytes
TypeSignature : 
 -----------------------------
Word :: Infix.[34;49mmoe[39;49m : definition = 0x00007fb6e793f365 : disassembly at namespaces/test/math.csl : 54.17 :
[34;49m ..                                     : [39;49m[33;40mmoe[39;49m[34;49m ( n m ) n <<= m n return tos ;  .. [39;49m[32;49m
0x7fb6e793f365    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fb6e793f369    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e793f36d    4981c608000000          add r14, 0x8                                           [39;49m[32;49m
0x7fb6e793f374    498b47f0                mov rax, [r15-0x10]                                    [39;49m[32;49m
0x7fb6e793f378    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e793f37c    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e793f37f    498d5ff0                lea rbx, [r15-0x10]                                    [39;49m
[34;49m ..                         : moe ( n m ) [39;49m[33;40mn[39;49m[34;49m <<= m n return tos ;  .. [39;49m[32;49m
0x7fb6e793f383    498b47f0                mov rax, [r15-0x10]                                    [39;49m
[34;49m ..                   : moe ( n m ) n <<= [39;49m[33;40mm[39;49m[34;49m n return tos ;  .. [39;49m[32;49m
0x7fb6e793f387    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e793f38b    48d3e0                  shl rax, cl                                            [39;49m
[34;49m ..                       : moe ( n m ) n [39;49m[33;40m<<=[39;49m[34;49m m n return tos ;  .. [39;49m[32;49m
0x7fb6e793f38e    488903                  mov [rbx], rax                                         [39;49m
[34;49m ..                 : moe ( n m ) n <<= m [39;49m[33;40mn[39;49m[34;49m return tos ;  .. [39;49m[32;49m
0x7fb6e793f391    498b47f0                mov rax, [r15-0x10]                                    [39;49m[32;49m
0x7fb6e793f395    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e793f399    498906                  mov [r14], rax                                         [39;49m
[34;49m ..    : moe ( n m ) n <<= m n return tos [39;49m[33;40m;[39;49m[34;49m  .. [39;49m[32;49m
0x7fb6e793f39c    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e793f3a0    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e793f3a4    4983ee08                sub r14, 0x8                                           [39;49m[32;49m
0x7fb6e793f3a8    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e793f3ab    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'moe' :: codeSize = 70
Word : 0x00007fb6e74c8b38 :: Compiled at : 0x00007fb6e793f365
 =============================
::> 'wdiss' was called at namespaces/test/math.csl 54.17 <::

 =============================
Infix.[34;49mmoe[39;49m <:> csl compiled word
SourceCode for Infix.[34;49mmoe[39;49m :> 
[34;49m: moe ( n m ) n >>= m n return tos ; [39;49m
Source code file location of [34;49mmoe[39;49m : "namespaces/test/math.csl" : 56.2 :: we are now at : namespaces/test/math.csl : 57.20
Compiled with : optimizeOn, inlineOn, infixOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xe793f3b1 -- code size = 71 bytes
TypeSignature : 
 -----------------------------
Word :: Infix.[34;49mmoe[39;49m : definition = 0x00007fb6e793f3b1 : disassembly at namespaces/test/math.csl : 57.20 :
[34;49m ..                                     : [39;49m[33;40mmoe[39;49m[34;49m ( n m ) n >>= m n return tos ;  .. [39;49m[32;49m
0x7fb6e793f3b1    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fb6e793f3b5    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e793f3b9    4981c608000000          add r14, 0x8                                           [39;49m[32;49m
0x7fb6e793f3c0    498b47f0                mov rax, [r15-0x10]                                    [39;49m[32;49m
0x7fb6e793f3c4    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e793f3c8    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e793f3cb    498d5ff0                lea rbx, [r15-0x10]                                    [39;49m
[34;49m ..                         : moe ( n m ) [39;49m[33;40mn[39;49m[34;49m >>= m n return tos ;  .. [39;49m[32;49m
0x7fb6e793f3cf    498b47f0                mov rax, [r15-0x10]                                    [39;49m
[34;49m ..                   : moe ( n m ) n >>= [39;49m[33;40mm[39;49m[34;49m n return tos ;  .. [39;49m[32;49m
0x7fb6e793f3d3    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e793f3d7    48d3e8                  shr rax, cl                                            [39;49m
[34;49m ..                       : moe ( n m ) n [39;49m[33;40m>>=[39;49m[34;49m m n return tos ;  .. [39;49m[32;49m
0x7fb6e793f3da    488903                  mov [rbx], rax                                         [39;49m
[34;49m ..                 : moe ( n m ) n >>= m [39;49m[33;40mn[39;49m[34;49m return tos ;  .. [39;49m[32;49m
0x7fb6e793f3dd    498b47f0                mov rax, [r15-0x10]                                    [39;49m[32;49m
0x7fb6e793f3e1    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e793f3e5    498906                  mov [r14], rax                                         [39;49m
[34;49m ..    : moe ( n m ) n >>= m n return tos [39;49m[33;40m;[39;49m[34;49m  .. [39;49m[32;49m
0x7fb6e793f3e8    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e793f3ec    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e793f3f0    4983ee08                sub r14, 0x8                                           [39;49m[32;49m
0x7fb6e793f3f4    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e793f3f7    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'moe' :: codeSize = 70
Word : 0x00007fb6e74c9cd8 :: Compiled at : 0x00007fb6e793f3b1
 =============================
::> 'wdiss' was called at namespaces/test/math.csl 57.20 <::
 128 65536 
should show 128 65536
 2 1 
should show 2 1

 =============================
C.[34;49mmoe[39;49m <:> csl compiled word
SourceCode for C.[34;49mmoe[39;49m :> 
[34;49m: moe ( n m ) n m @ *= n @ return tos ; [39;49m
Source code file location of [34;49mmoe[39;49m : "namespaces/test/math.csl" : 67.2 :: we are now at : namespaces/test/math.csl : 68.17
Compiled with : optimizeOn, inlineOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xe793f4b7 -- code size = 61 bytes
TypeSignature : 
 -----------------------------
Word :: C.[34;49mmoe[39;49m : definition = 0x00007fb6e793f4b7 : disassembly at namespaces/test/math.csl : 68.17 :
[34;49m ..                                     : [39;49m[33;40mmoe[39;49m[34;49m ( n m ) n m @ *= n @ return tos ;  .. [39;49m[32;49m
0x7fb6e793f4b7    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fb6e793f4bb    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e793f4bf    4981c608000000          add r14, 0x8                                           [39;49m[32;49m
0x7fb6e793f4c6    498d5ff0                lea rbx, [r15-0x10]                                    [39;49m
[34;49m ..                         : moe ( n m ) [39;49m[33;40mn[39;49m[34;49m m @ *= n @ return tos ;  .. [39;49m[32;49m
0x7fb6e793f4ca    498b47f0                mov rax, [r15-0x10]                                    [39;49m
[34;49m ..                       : moe ( n m ) n [39;49m[33;40mm[39;49m[34;49m @ *= n @ return tos ;  .. [39;49m[32;49m
0x7fb6e793f4ce    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e793f4d2    480fafc1                imul rax, rcx                                          [39;49m
[34;49m ..                   : moe ( n m ) n m @ [39;49m[33;40m*=[39;49m[34;49m n @ return tos ;  .. [39;49m[32;49m
0x7fb6e793f4d6    488903                  mov [rbx], rax                                         [39;49m
[34;49m ..                : moe ( n m ) n m @ *= [39;49m[33;40mn[39;49m[34;49m @ return tos ;  .. [39;49m[32;49m
0x7fb6e793f4d9    498b47f0                mov rax, [r15-0x10]                                    [39;49m[32;49m
0x7fb6e793f4dd    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e793f4e1    498906                  mov [r14], rax                                         [39;49m
[34;49m .. : moe ( n m ) n m @ *= n @ return tos [39;49m[33;40m;[39;49m[34;49m  .. [39;49m[32;49m
0x7fb6e793f4e4    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e793f4e8    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e793f4ec    4983ee08                sub r14, 0x8                                           [39;49m[32;49m
0x7fb6e793f4f0    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e793f4f3    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'moe' :: codeSize = 60
Word : 0x00007fb6e74cdc08 :: Compiled at : 0x00007fb6e793f4b7
 =============================
::> 'wdiss' was called at namespaces/test/math.csl 68.17 <::


 =============================
C.[34;49mmoe[39;49m <:> csl compiled word
SourceCode for C.[34;49mmoe[39;49m :> 
[34;49m: moe ( n m ) n m @ /= n @ return tos ; [39;49m
Source code file location of [34;49mmoe[39;49m : "namespaces/test/math.csl" : 71.2 :: we are now at : namespaces/test/math.csl : 72.17
Compiled with : optimizeOn, inlineOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xe793f4f9 -- code size = 67 bytes
TypeSignature : 
 -----------------------------
Word :: C.[34;49mmoe[39;49m : definition = 0x00007fb6e793f4f9 : disassembly at namespaces/test/math.csl : 72.17 :
[34;49m ..                                     : [39;49m[33;40mmoe[39;49m[34;49m ( n m ) n m @ /= n @ return tos ;  .. [39;49m[32;49m
0x7fb6e793f4f9    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fb6e793f4fd    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e793f501    4981c608000000          add r14, 0x8                                           [39;49m[32;49m
0x7fb6e793f508    498d5ff0                lea rbx, [r15-0x10]                                    [39;49m
[34;49m ..                         : moe ( n m ) [39;49m[33;40mn[39;49m[34;49m m @ /= n @ return tos ;  .. [39;49m[32;49m
0x7fb6e793f50c    498b47f0                mov rax, [r15-0x10]                                    [39;49m
[34;49m ..                       : moe ( n m ) n [39;49m[33;40mm[39;49m[34;49m @ /= n @ return tos ;  .. [39;49m[32;49m
0x7fb6e793f510    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e793f514    48c7c200000000          mov rdx, 0x0                                           [39;49m[32;49m
0x7fb6e793f51b    48f7f9                  idiv rcx                                               [39;49m
[34;49m ..                   : moe ( n m ) n m @ [39;49m[33;40m/=[39;49m[34;49m n @ return tos ;  .. [39;49m[32;49m
0x7fb6e793f51e    488903                  mov [rbx], rax                                         [39;49m
[34;49m ..                : moe ( n m ) n m @ /= [39;49m[33;40mn[39;49m[34;49m @ return tos ;  .. [39;49m[32;49m
0x7fb6e793f521    498b47f0                mov rax, [r15-0x10]                                    [39;49m[32;49m
0x7fb6e793f525    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e793f529    498906                  mov [r14], rax                                         [39;49m
[34;49m .. : moe ( n m ) n m @ /= n @ return tos [39;49m[33;40m;[39;49m[34;49m  .. [39;49m[32;49m
0x7fb6e793f52c    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e793f530    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e793f534    4983ee08                sub r14, 0x8                                           [39;49m[32;49m
0x7fb6e793f538    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e793f53b    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'moe' :: codeSize = 66
Word : 0x00007fb6e74cef60 :: Compiled at : 0x00007fb6e793f4f9
 =============================
::> 'wdiss' was called at namespaces/test/math.csl 72.17 <::


 =============================
C.[34;49mmoe2[39;49m <:> csl compiled word
SourceCode for C.[34;49mmoe2[39;49m :> 
[34;49m: moe2 ( n ) n 2 /= n @ return tos ; [39;49m
Source code file location of [34;49mmoe2[39;49m : "namespaces/test/math.csl" : 75.2 :: we are now at : namespaces/test/math.csl : 76.18
Compiled with : optimizeOn, inlineOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xe793f541 -- code size = 66 bytes
TypeSignature : 
 -----------------------------
Word :: C.[34;49mmoe2[39;49m : definition = 0x00007fb6e793f541 : disassembly at namespaces/test/math.csl : 76.18 :
[34;49m ..                                     : [39;49m[33;40mmoe2[39;49m[34;49m ( n ) n 2 /= n @ return tos ;  .. [39;49m[32;49m
0x7fb6e793f541    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fb6e793f545    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e793f549    4981c608000000          add r14, 0x8                                           [39;49m[32;49m
0x7fb6e793f550    498d5ff8                lea rbx, [r15-0x8]                                     [39;49m
[34;49m ..                          : moe2 ( n ) [39;49m[33;40mn[39;49m[34;49m 2 /= n @ return tos ;  .. [39;49m[32;49m
0x7fb6e793f554    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m ..                        : moe2 ( n ) n [39;49m[33;40m2[39;49m[34;49m /= n @ return tos ;  .. [39;49m[32;49m
0x7fb6e793f558    48c7c102000000          mov rcx, 0x2                                           [39;49m[32;49m
0x7fb6e793f55f    48c7c200000000          mov rdx, 0x0                                           [39;49m[32;49m
0x7fb6e793f566    48f7f9                  idiv rcx                                               [39;49m
[34;49m ..                      : moe2 ( n ) n 2 [39;49m[33;40m/=[39;49m[34;49m n @ return tos ;  .. [39;49m[32;49m
0x7fb6e793f569    488903                  mov [rbx], rax                                         [39;49m
[34;49m ..                   : moe2 ( n ) n 2 /= [39;49m[33;40mn[39;49m[34;49m @ return tos ;  .. [39;49m[32;49m
0x7fb6e793f56c    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e793f570    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e793f574    498906                  mov [r14], rax                                         [39;49m
[34;49m ..    : moe2 ( n ) n 2 /= n @ return tos [39;49m[33;40m;[39;49m[34;49m  .. [39;49m[32;49m
0x7fb6e793f577    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e793f57b    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e793f57f    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e793f582    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'moe2' :: codeSize = 65
Word : 0x00007fb6e74d02b8 :: Compiled at : 0x00007fb6e793f541
 =============================
::> 'wdiss' was called at namespaces/test/math.csl 76.18 <::


 moe3_assert1  : ok


 moe3_assert2  : ok



 =============================
C.[34;49mt64bitAdd2[39;49m <:> csl compiled word
SourceCode for C.[34;49mt64bitAdd2[39;49m :> 
[34;49m: t64bitAdd2 ( n m ) 0x100000000 n @ + m @ + return tos ; [39;49m
Source code file location of [34;49mt64bitAdd2[39;49m : "namespaces/test/math.csl" : 83.2 :: we are now at : namespaces/test/math.csl : 84.23
Compiled with : optimizeOn, inlineOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xe793f5ff -- code size = 62 bytes
TypeSignature : Integer . Integer -> Integer 
 -----------------------------
Word :: C.[34;49mt64bitAdd2[39;49m : definition = 0x00007fb6e793f5ff : disassembly at namespaces/test/math.csl : 84.23 :
[34;49m ..                                     : [39;49m[33;40mt64bitAdd2[39;49m[34;49m ( n m ) 0x100000000 n @ + m @ + return tos ;  .. [39;49m[32;49m
0x7fb6e793f5ff    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fb6e793f603    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e793f607    4981c608000000          add r14, 0x8                                           [39;49m
[34;49m ..                  : t64bitAdd2 ( n m ) [39;49m[33;40m0x100000000[39;49m[34;49m n @ + m @ + return tos ;  .. [39;49m[32;49m
0x7fb6e793f60e    48b80000000001000000    mov rax, 0x100000000                                   [39;49m
[34;49m ..      : t64bitAdd2 ( n m ) 0x100000000 [39;49m[33;40mn[39;49m[34;49m @ + m @ + return tos ;  .. [39;49m[32;49m
0x7fb6e793f618    498b4ff0                mov rcx, [r15-0x10]                                    [39;49m
[34;49m ..  : t64bitAdd2 ( n m ) 0x100000000 n @ [39;49m[33;40m+[39;49m[34;49m m @ + return tos ;  .. [39;49m[32;49m
0x7fb6e793f61c    4803c1                  add rax, rcx                                           [39;49m
[34;49m   : t64bitAdd2 ( n m ) 0x100000000 n @ + [39;49m[33;40mm[39;49m[34;49m @ + return tos ;  .. [39;49m[32;49m
0x7fb6e793f61f    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m
[34;49m .. bitAdd2 ( n m ) 0x100000000 n @ + m @ [39;49m[33;40m+[39;49m[34;49m return tos ; [39;49m[32;49m
0x7fb6e793f623    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fb6e793f626    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e793f62a    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  ) 0x100000000 n @ + m @ + return tos [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fb6e793f62d    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e793f631    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e793f635    4983ee08                sub r14, 0x8                                           [39;49m[32;49m
0x7fb6e793f639    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e793f63c    c3                      ret                                                    [39;49m
Word_Disassemble : word - 't64bitAdd2' :: codeSize = 61
Word : 0x00007fb6e74d3798 :: Compiled at : 0x00007fb6e793f5ff
 =============================
::> 'wdiss' was called at namespaces/test/math.csl 84.23 <::
 t64bitAdd2_assert  : ok


 0x0000000000000002
 =============================
C.[34;49mt64bitSub2[39;49m <:> csl compiled word
SourceCode for C.[34;49mt64bitSub2[39;49m :> 
[34;49m: t64bitSub2 ( n m ) 0x100000003 n @ - m @ - return tos ; [39;49m
Source code file location of [34;49mt64bitSub2[39;49m : "namespaces/test/math.csl" : 87.2 :: we are now at : namespaces/test/math.csl : 88.23
Compiled with : optimizeOn, inlineOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xe793f68c -- code size = 62 bytes
TypeSignature : Integer . Integer -> Integer 
 -----------------------------
Word :: C.[34;49mt64bitSub2[39;49m : definition = 0x00007fb6e793f68c : disassembly at namespaces/test/math.csl : 88.23 :
[34;49m ..                                     : [39;49m[33;40mt64bitSub2[39;49m[34;49m ( n m ) 0x100000003 n @ - m @ - return tos ;  .. [39;49m[32;49m
0x7fb6e793f68c    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fb6e793f690    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e793f694    4981c608000000          add r14, 0x8                                           [39;49m
[34;49m ..                  : t64bitSub2 ( n m ) [39;49m[33;40m0x100000003[39;49m[34;49m n @ - m @ - return tos ;  .. [39;49m[32;49m
0x7fb6e793f69b    48b80300000001000000    mov rax, 0x100000003                                   [39;49m
[34;49m ..      : t64bitSub2 ( n m ) 0x100000003 [39;49m[33;40mn[39;49m[34;49m @ - m @ - return tos ;  .. [39;49m[32;49m
0x7fb6e793f6a5    498b4ff0                mov rcx, [r15-0x10]                                    [39;49m
[34;49m ..  : t64bitSub2 ( n m ) 0x100000003 n @ [39;49m[33;40m-[39;49m[34;49m m @ - return tos ;  .. [39;49m[32;49m
0x7fb6e793f6a9    482bc1                  sub rax, rcx                                           [39;49m
[34;49m   : t64bitSub2 ( n m ) 0x100000003 n @ - [39;49m[33;40mm[39;49m[34;49m @ - return tos ;  .. [39;49m[32;49m
0x7fb6e793f6ac    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m
[34;49m .. bitSub2 ( n m ) 0x100000003 n @ - m @ [39;49m[33;40m-[39;49m[34;49m return tos ; [39;49m[32;49m
0x7fb6e793f6b0    482bc1                  sub rax, rcx                                           [39;49m[32;49m
0x7fb6e793f6b3    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e793f6b7    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  ) 0x100000003 n @ - m @ - return tos [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fb6e793f6ba    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e793f6be    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e793f6c2    4983ee08                sub r14, 0x8                                           [39;49m[32;49m
0x7fb6e793f6c6    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e793f6c9    c3                      ret                                                    [39;49m
Word_Disassemble : word - 't64bitSub2' :: codeSize = 61
Word : 0x00007fb6e74d6000 :: Compiled at : 0x00007fb6e793f68c
 =============================
::> 'wdiss' was called at namespaces/test/math.csl 88.23 <::
 t64bitSub2_assert  : ok


 =============================
C.[34;49mt64bitSub3[39;49m <:> csl compiled word
SourceCode for C.[34;49mt64bitSub3[39;49m :> 
[34;49m: t64bitSub3 ( n m ) 0x100000004 n @ - m @ - return tos ; [39;49m
Source code file location of [34;49mt64bitSub3[39;49m : "namespaces/test/math.csl" : 90.2 :: we are now at : namespaces/test/math.csl : 91.23
Compiled with : optimizeOn, inlineOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xe793f6cf -- code size = 62 bytes
TypeSignature : 
 -----------------------------
Word :: C.[34;49mt64bitSub3[39;49m : definition = 0x00007fb6e793f6cf : disassembly at namespaces/test/math.csl : 91.23 :
[34;49m ..                                     : [39;49m[33;40mt64bitSub3[39;49m[34;49m ( n m ) 0x100000004 n @ - m @ - return tos ;  .. [39;49m[32;49m
0x7fb6e793f6cf    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fb6e793f6d3    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e793f6d7    4981c608000000          add r14, 0x8                                           [39;49m
[34;49m ..                  : t64bitSub3 ( n m ) [39;49m[33;40m0x100000004[39;49m[34;49m n @ - m @ - return tos ;  .. [39;49m[32;49m
0x7fb6e793f6de    48b80400000001000000    mov rax, 0x100000004                                   [39;49m
[34;49m ..      : t64bitSub3 ( n m ) 0x100000004 [39;49m[33;40mn[39;49m[34;49m @ - m @ - return tos ;  .. [39;49m[32;49m
0x7fb6e793f6e8    498b4ff0                mov rcx, [r15-0x10]                                    [39;49m
[34;49m ..  : t64bitSub3 ( n m ) 0x100000004 n @ [39;49m[33;40m-[39;49m[34;49m m @ - return tos ;  .. [39;49m[32;49m
0x7fb6e793f6ec    482bc1                  sub rax, rcx                                           [39;49m
[34;49m   : t64bitSub3 ( n m ) 0x100000004 n @ - [39;49m[33;40mm[39;49m[34;49m @ - return tos ;  .. [39;49m[32;49m
0x7fb6e793f6ef    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m
[34;49m .. bitSub3 ( n m ) 0x100000004 n @ - m @ [39;49m[33;40m-[39;49m[34;49m return tos ; [39;49m[32;49m
0x7fb6e793f6f3    482bc1                  sub rax, rcx                                           [39;49m[32;49m
0x7fb6e793f6f6    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e793f6fa    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  ) 0x100000004 n @ - m @ - return tos [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fb6e793f6fd    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e793f701    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e793f705    4983ee08                sub r14, 0x8                                           [39;49m[32;49m
0x7fb6e793f709    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e793f70c    c3                      ret                                                    [39;49m
Word_Disassemble : word - 't64bitSub3' :: codeSize = 61
Word : 0x00007fb6e74d7358 :: Compiled at : 0x00007fb6e793f6cf
 =============================
::> 'wdiss' was called at namespaces/test/math.csl 91.23 <::

 =============================
C.[34;49mt64bitSub3[39;49m <:> csl compiled word
SourceCode for C.[34;49mt64bitSub3[39;49m :> 
[34;49m: t64bitSub3 ( n m ) 0x100000003 0x100000002 - 0x100000003 + n @ - m @ - return tos ; [39;49m
Source code file location of [34;49mt64bitSub3[39;49m : "namespaces/test/math.csl" : 93.2 :: we are now at : namespaces/test/math.csl : 94.23
Compiled with : optimizeOn, inlineOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xe793f712 -- code size = 72 bytes
TypeSignature : 
 -----------------------------
Word :: C.[34;49mt64bitSub3[39;49m : definition = 0x00007fb6e793f712 : disassembly at namespaces/test/math.csl : 94.23 :
[34;49m ..                                     : [39;49m[33;40mt64bitSub3[39;49m[34;49m ( n m ) 0x100000003 0x100000002 - 0x100000003 + n @ - m @ - return tos ;  .. [39;49m[32;49m
0x7fb6e793f712    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fb6e793f716    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e793f71a    4981c608000000          add r14, 0x8                                           [39;49m
[34;49m ..                  : t64bitSub3 ( n m ) [39;49m[33;40m0x100000003[39;49m[34;49m 0x100000002 - 0x100000003 + n @ - m @ - return tos ;  .. [39;49m[32;49m
0x7fb6e793f721    48c7c001000000          mov rax, 0x1                                           [39;49m
[34;49m .. ub3 ( n m ) 0x100000003 0x100000002 - [39;49m[33;40m0x100000003[39;49m[34;49m + n @ - m @ - return tos ; [39;49m[32;49m
0x7fb6e793f728    48b90300000001000000    mov rcx, 0x100000003                                   [39;49m
[34;49m .. 0x100000003 0x100000002 - 0x100000003 [39;49m[33;40m+[39;49m[34;49m n @ - m @ - return tos ; [39;49m[32;49m
0x7fb6e793f732    4803c1                  add rax, rcx                                           [39;49m
[34;49m .. 100000003 0x100000002 - 0x100000003 + [39;49m[33;40mn[39;49m[34;49m @ - m @ - return tos ; [39;49m[32;49m
0x7fb6e793f735    498b4ff0                mov rcx, [r15-0x10]                                    [39;49m
[34;49m .. 00003 0x100000002 - 0x100000003 + n @ [39;49m[33;40m-[39;49m[34;49m m @ - return tos ; [39;49m[32;49m
0x7fb6e793f739    482bc1                  sub rax, rcx                                           [39;49m
[34;49m .. 003 0x100000002 - 0x100000003 + n @ - [39;49m[33;40mm[39;49m[34;49m @ - return tos ; [39;49m[32;49m
0x7fb6e793f73c    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m
[34;49m .. 0x100000002 - 0x100000003 + n @ - m @ [39;49m[33;40m-[39;49m[34;49m return tos ; [39;49m[32;49m
0x7fb6e793f740    482bc1                  sub rax, rcx                                           [39;49m[32;49m
0x7fb6e793f743    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e793f747    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  0x100000003 + n @ - m @ - return tos [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fb6e793f74a    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e793f74e    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e793f752    4983ee08                sub r14, 0x8                                           [39;49m[32;49m
0x7fb6e793f756    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e793f759    c3                      ret                                                    [39;49m
Word_Disassemble : word - 't64bitSub3' :: codeSize = 71
Word : 0x00007fb6e74d86b0 :: Compiled at : 0x00007fb6e793f712
 =============================
::> 'wdiss' was called at namespaces/test/math.csl 94.23 <::

 7176105502331971041 
 0110 0011  1001 0110   1010 0101  1110 1111    0000 1001  0011 1001   0010 0101  1110 0001 DLLNode size =  16
DLLNodeAlloc size =  512

Dump at : namespaces/test/arrayTest.csl : 18.15 :
Dump : Address = 0x00007fb6e73b4ec8 : Number = 64 :: (little endian dump)
0x00007fb6e73b4ec8 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73b4ed8 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73b4ee8 :  00 00 00 00 00 00 00 00  02 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73b4ef8 :  01 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
DLLNodeAlloc4 size =  2048
 
testna4 =  0x00007fb6e73b6a90
 =============================
DLLNodeAlloc4.[34;49mtestna5[39;49m <:> csl compiled word
SourceCode for DLLNodeAlloc4.[34;49mtestna5[39;49m :> 
[34;49m: testna5 ( DLLNodeAlloc4 dlna4o ) "\ndlna4o = " ps dlna4o hp dlna4o.nodes [ 1 ] [ 0 ].AfterReference 1 = dlna4o.nodes [ 1 ] [ 0 ].BeforeReference 2 = dlna4o.nodes [ 1 ] [ 0 ] 32 dump dlna4o.nodes [ 2 ] [ 1 ].AfterReference 1 = dlna4o.nodes [ 2 ] [ 1 ].BeforeReference 2 = "\njust before : dlna4o.nodes [ 2 ] [ 1 ] 32 dump" ps dlna4o.nodes [ 2 ] [ 1 ] 32 dump dlna4o.nodes [ 3 ] [ 2 ].AfterReference 1 = dlna4o.nodes [ 3 ] [ 2 ].BeforeReference 2 = "\njust before : dlna4o.nodes [ 3 ] [ 2 ] 32 dump" ps dlna4o.nodes [ 3 ] [ 2 ] 32 dump dlna4o.nodes [ 3 ] [ 2 ].AfterReference dlna4o.nodes [ 3 ] [ 2 ].BeforeReference = dlna4o.nodes [ 3 ] [ 2 ].BeforeReference dlna4o.nodes [ 3 ] [ 2 ].AfterReference = "\njust before : dlna4o.nodes [ 3 ] [ 2 ] 32 dump" ps dlna4o.nodes [ 3 ] [ 2 ] 32 dump "dlna4o = " ps dlna4o hp ; [39;49m
Source code file location of [34;49mtestna5[39;49m : "namespaces/test/arrayTest.csl" : 28.2 :: we are now at : namespaces/test/arrayTest.csl : 47.21
Compiled with : optimizeOn, inlineOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xe79407aa -- code size = 636 bytes
TypeSignature : Object 
 -----------------------------
Word :: DLLNodeAlloc4.[34;49mtestna5[39;49m : definition = 0x00007fb6e79407aa : disassembly at namespaces/test/arrayTest.csl : 47.21 :
[34;49m ..                                     : [39;49m[33;40mtestna5[39;49m[34;49m ( DLLNodeAlloc4 dlna4o ) "\ndlna4o = " ps dlna4o hp dlna4o.nodes [ 1 ] [ 0 ].AfterReference 1 .. [39;49m[32;49m
0x7fb6e79407aa    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fb6e79407ae    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e79407b2    4981c608000000          add r14, 0x8                                           [39;49m
[34;49m ..    : testna5 ( DLLNodeAlloc4 dlna4o ) [39;49m[33;40m"[39;49m[34;49m\ndlna4o = " ps dlna4o hp dlna4o.nodes [ 1 ] [ 0 ].AfterReference 1 = dlna4o.nodes [ 1 ] [ 0 ].Befor .. [39;49m[32;49m
0x7fb6e79407b9    48b86e237ee7b67f0000    mov rax, 0x7fb6e77e236e    	[32;49m< string : '[39;49m[39;49m\ndlna4o = [39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fb6e79407c3    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e79407c7    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  DLLNodeAlloc4 dlna4o ) "\ndlna4o = " [39;49m[33;40mps[39;49m[34;49m dlna4o hp dlna4o.nodes [ 1 ] [ 0 ].AfterReference 1 = dlna4o.nodes [ 1 ] [ 0 ].BeforeReference 2 = .. [39;49m[32;49m
0x7fb6e79407ca    49b97da393e7b67f0000    mov r9, 0x7fb6e793a37d                                 [39;49m[32;49m
0x7fb6e79407d4    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fb6e793a37d[32;49m >[39;49m[39;49m
[34;49m .. LNodeAlloc4 dlna4o ) "\ndlna4o = " ps [39;49m[33;40mdlna4o[39;49m[34;49m hp dlna4o.nodes [ 1 ] [ 0 ].AfterReference 1 = dlna4o.nodes [ 1 ] [ 0 ].BeforeReference 2 = dl .. [39;49m[32;49m
0x7fb6e79407d7    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e79407db    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fb6e79407e2    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e79407e6    498906                  mov [r14], rax                                         [39;49m
[34;49m .. loc4 dlna4o ) "\ndlna4o = " ps dlna4o [39;49m[33;40mhp[39;49m[34;49m dlna4o.nodes [ 1 ] [ 0 ].AfterReference 1 = dlna4o.nodes [ 1 ] [ 0 ].BeforeReference 2 = dlna4o.no .. [39;49m[32;49m
0x7fb6e79407e9    49b987a493e7b67f0000    mov r9, 0x7fb6e793a487                                 [39;49m[32;49m
0x7fb6e79407f3    49ffd1                  call r9                    	< Int.[34;49mhp[39;49m : 0x00007fb6e793a487[32;49m >[39;49m[39;49m
[34;49m .. 4 dlna4o ) "\ndlna4o = " ps dlna4o hp [39;49m[33;40mdlna4o[39;49m[34;49m.nodes [ 1 ] [ 0 ].AfterReference 1 = dlna4o.nodes [ 1 ] [ 0 ].BeforeReference 2 = dlna4o.nodes .. [39;49m[32;49m
0x7fb6e79407f6    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e79407fa    4881c000020000          add rax, 0x200                                         [39;49m
[34;49m .. na4o.nodes [ 1 ] [ 0 ].AfterReference [39;49m[33;40m1[39;49m[34;49m = dlna4o.nodes [ 1 ] [ 0 ].BeforeReference 2 = dlna4o.nodes [ 1 ] [ 0 ] 32 dump dlna4o.nodes [ 2 ]  .. [39;49m[32;49m
0x7fb6e7940801    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m .. 4o.nodes [ 1 ] [ 0 ].AfterReference 1 [39;49m[33;40m=[39;49m[34;49m dlna4o.nodes [ 1 ] [ 0 ].BeforeReference 2 = dlna4o.nodes [ 1 ] [ 0 ] 32 dump dlna4o.nodes [ 2 ] [  .. [39;49m[32;49m
0x7fb6e7940808    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. .nodes [ 1 ] [ 0 ].AfterReference 1 = [39;49m[33;40mdlna4o[39;49m[34;49m.nodes [ 1 ] [ 0 ].BeforeReference 2 = dlna4o.nodes [ 1 ] [ 0 ] 32 dump dlna4o.nodes [ 2 ] [ 1  .. [39;49m[32;49m
0x7fb6e794080b    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. eference 1 = dlna4o.nodes [ 1 ] [ 0 ].[39;49m[33;40mBeforeReference[39;49m[34;49m 2 = dlna4o.nodes [ 1 ] [ 0 ] 32 dump dlna4o.nodes [ 2 ] [ 1 ].AfterReference 1 = dlna .. [39;49m[32;49m
0x7fb6e794080f    4881c008020000          add rax, 0x208                                         [39;49m
[34;49m .. a4o.nodes [ 1 ] [ 0 ].BeforeReference [39;49m[33;40m2[39;49m[34;49m = dlna4o.nodes [ 1 ] [ 0 ] 32 dump dlna4o.nodes [ 2 ] [ 1 ].AfterReference 1 = dlna4o.nodes [ 2 ] [ .. [39;49m[32;49m
0x7fb6e7940816    48c7c102000000          mov rcx, 0x2                                           [39;49m
[34;49m .. o.nodes [ 1 ] [ 0 ].BeforeReference 2 [39;49m[33;40m=[39;49m[34;49m dlna4o.nodes [ 1 ] [ 0 ] 32 dump dlna4o.nodes [ 2 ] [ 1 ].AfterReference 1 = dlna4o.nodes [ 2 ] [ 1 .. [39;49m[32;49m
0x7fb6e794081d    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. nodes [ 1 ] [ 0 ].BeforeReference 2 = [39;49m[33;40mdlna4o[39;49m[34;49m.nodes [ 1 ] [ 0 ] 32 dump dlna4o.nodes [ 2 ] [ 1 ].AfterReference 1 = dlna4o.nodes [ 2 ] [ 1 ] .. [39;49m[32;49m
0x7fb6e7940820    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e7940824    4881c000020000          add rax, 0x200                                         [39;49m[32;49m
0x7fb6e794082b    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e794082f    498906                  mov [r14], rax                                         [39;49m
[34;49m .. eference 2 = dlna4o.nodes [ 1 ] [ 0 ] [39;49m[33;40m32[39;49m[34;49m dump dlna4o.nodes [ 2 ] [ 1 ].AfterReference 1 = dlna4o.nodes [ 2 ] [ 1 ].BeforeReference 2 = "\nj .. [39;49m[32;49m
0x7fb6e7940832    48c7c020000000          mov rax, 0x20                                          [39;49m[32;49m
0x7fb6e7940839    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e794083d    498906                  mov [r14], rax                                         [39;49m
[34;49m .. rence 2 = dlna4o.nodes [ 1 ] [ 0 ] 32 [39;49m[33;40mdump[39;49m[34;49m dlna4o.nodes [ 2 ] [ 1 ].AfterReference 1 = dlna4o.nodes [ 2 ] [ 1 ].BeforeReference 2 = "\njust .. [39;49m[32;49m
0x7fb6e7940840    49b830a480892d560000    mov r8, 0x562d8980a430                                 [39;49m[32;49m
0x7fb6e794084a    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e7940854    49ffd1                  call r9                    	< Debug.[34;49mdump[39;49m : 0x0000562d8980a430[32;49m >[39;49m[39;49m
[34;49m ..  2 = dlna4o.nodes [ 1 ] [ 0 ] 32 dump [39;49m[33;40mdlna4o[39;49m[34;49m.nodes [ 2 ] [ 1 ].AfterReference 1 = dlna4o.nodes [ 2 ] [ 1 ].BeforeReference 2 = "\njust befo .. [39;49m[32;49m
0x7fb6e7940857    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e794085b    4881c010040000          add rax, 0x410                                         [39;49m
[34;49m .. na4o.nodes [ 2 ] [ 1 ].AfterReference [39;49m[33;40m1[39;49m[34;49m = dlna4o.nodes [ 2 ] [ 1 ].BeforeReference 2 = "\njust before : dlna4o.nodes [ 2 ] [ 1 ] 32 dump" p .. [39;49m[32;49m
0x7fb6e7940862    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m .. 4o.nodes [ 2 ] [ 1 ].AfterReference 1 [39;49m[33;40m=[39;49m[34;49m dlna4o.nodes [ 2 ] [ 1 ].BeforeReference 2 = "\njust before : dlna4o.nodes [ 2 ] [ 1 ] 32 dump" ps  .. [39;49m[32;49m
0x7fb6e7940869    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. .nodes [ 2 ] [ 1 ].AfterReference 1 = [39;49m[33;40mdlna4o[39;49m[34;49m.nodes [ 2 ] [ 1 ].BeforeReference 2 = "\njust before : dlna4o.nodes [ 2 ] [ 1 ] 32 dump" ps  d .. [39;49m[32;49m
0x7fb6e794086c    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. eference 1 = dlna4o.nodes [ 2 ] [ 1 ].[39;49m[33;40mBeforeReference[39;49m[34;49m 2 = "\njust before : dlna4o.nodes [ 2 ] [ 1 ] 32 dump" ps  dlna4o.nodes [ 2 ] [ 1 ] 3 .. [39;49m[32;49m
0x7fb6e7940870    4881c018040000          add rax, 0x418                                         [39;49m
[34;49m .. a4o.nodes [ 2 ] [ 1 ].BeforeReference [39;49m[33;40m2[39;49m[34;49m = "\njust before : dlna4o.nodes [ 2 ] [ 1 ] 32 dump" ps  dlna4o.nodes [ 2 ] [ 1 ] 32 dump dlna4o.no .. [39;49m[32;49m
0x7fb6e7940877    48c7c102000000          mov rcx, 0x2                                           [39;49m
[34;49m .. o.nodes [ 2 ] [ 1 ].BeforeReference 2 [39;49m[33;40m=[39;49m[34;49m "\njust before : dlna4o.nodes [ 2 ] [ 1 ] 32 dump" ps  dlna4o.nodes [ 2 ] [ 1 ] 32 dump dlna4o.node .. [39;49m[32;49m
0x7fb6e794087e    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. nodes [ 2 ] [ 1 ].BeforeReference 2 = [39;49m[33;40m"[39;49m[34;49m\njust before : dlna4o.nodes [ 2 ] [ 1 ] 32 dump" ps  dlna4o.nodes [ 2 ] [ 1 ] 32 dump dlna4o.nodes  .. [39;49m[32;49m
0x7fb6e7940881    48b8d7237ee7b67f0000    mov rax, 0x7fb6e77e23d7    	[32;49m< string : '[39;49m[39;49m\njust before : dlna4o.nodes [ 2 ] [ 1 ] 32 dump[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fb6e794088b    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e794088f    498906                  mov [r14], rax                                         [39;49m
[34;49m .. e : dlna4o.nodes [ 2 ] [ 1 ] 32 dump" [39;49m[33;40mps[39;49m[34;49m  dlna4o.nodes [ 2 ] [ 1 ] 32 dump dlna4o.nodes [ 3 ] [ 2 ].AfterReference 1 = dlna4o.nodes [ 3 ] [ .. [39;49m[32;49m
0x7fb6e7940892    49b97da393e7b67f0000    mov r9, 0x7fb6e793a37d                                 [39;49m[32;49m
0x7fb6e794089c    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fb6e793a37d[32;49m >[39;49m[39;49m
[34;49m .. dlna4o.nodes [ 2 ] [ 1 ] 32 dump" ps  [39;49m[33;40mdlna4o[39;49m[34;49m.nodes [ 2 ] [ 1 ] 32 dump dlna4o.nodes [ 3 ] [ 2 ].AfterReference 1 = dlna4o.nodes [ 3 ] [ 2 ] .. [39;49m[32;49m
0x7fb6e794089f    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e79408a3    4881c010040000          add rax, 0x410                                         [39;49m[32;49m
0x7fb6e79408aa    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e79408ae    498906                  mov [r14], rax                                         [39;49m
[34;49m .. 32 dump" ps  dlna4o.nodes [ 2 ] [ 1 ] [39;49m[33;40m32[39;49m[34;49m dump dlna4o.nodes [ 3 ] [ 2 ].AfterReference 1 = dlna4o.nodes [ 3 ] [ 2 ].BeforeReference 2 = "\nj .. [39;49m[32;49m
0x7fb6e79408b1    48c7c020000000          mov rax, 0x20                                          [39;49m[32;49m
0x7fb6e79408b8    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e79408bc    498906                  mov [r14], rax                                         [39;49m
[34;49m .. dump" ps  dlna4o.nodes [ 2 ] [ 1 ] 32 [39;49m[33;40mdump[39;49m[34;49m dlna4o.nodes [ 3 ] [ 2 ].AfterReference 1 = dlna4o.nodes [ 3 ] [ 2 ].BeforeReference 2 = "\njust .. [39;49m[32;49m
0x7fb6e79408bf    49b830a480892d560000    mov r8, 0x562d8980a430                                 [39;49m[32;49m
0x7fb6e79408c9    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e79408d3    49ffd1                  call r9                    	< Debug.[34;49mdump[39;49m : 0x0000562d8980a430[32;49m >[39;49m[39;49m
[34;49m ..  ps  dlna4o.nodes [ 2 ] [ 1 ] 32 dump [39;49m[33;40mdlna4o[39;49m[34;49m.nodes [ 3 ] [ 2 ].AfterReference 1 = dlna4o.nodes [ 3 ] [ 2 ].BeforeReference 2 = "\njust befo .. [39;49m[32;49m
0x7fb6e79408d6    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e79408da    4881c020060000          add rax, 0x620                                         [39;49m
[34;49m .. na4o.nodes [ 3 ] [ 2 ].AfterReference [39;49m[33;40m1[39;49m[34;49m = dlna4o.nodes [ 3 ] [ 2 ].BeforeReference 2 = "\njust before : dlna4o.nodes [ 3 ] [ 2 ] 32 dump" p .. [39;49m[32;49m
0x7fb6e79408e1    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m .. 4o.nodes [ 3 ] [ 2 ].AfterReference 1 [39;49m[33;40m=[39;49m[34;49m dlna4o.nodes [ 3 ] [ 2 ].BeforeReference 2 = "\njust before : dlna4o.nodes [ 3 ] [ 2 ] 32 dump" ps  .. [39;49m[32;49m
0x7fb6e79408e8    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. .nodes [ 3 ] [ 2 ].AfterReference 1 = [39;49m[33;40mdlna4o[39;49m[34;49m.nodes [ 3 ] [ 2 ].BeforeReference 2 = "\njust before : dlna4o.nodes [ 3 ] [ 2 ] 32 dump" ps  d .. [39;49m[32;49m
0x7fb6e79408eb    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. eference 1 = dlna4o.nodes [ 3 ] [ 2 ].[39;49m[33;40mBeforeReference[39;49m[34;49m 2 = "\njust before : dlna4o.nodes [ 3 ] [ 2 ] 32 dump" ps  dlna4o.nodes [ 3 ] [ 2 ] 3 .. [39;49m[32;49m
0x7fb6e79408ef    4881c028060000          add rax, 0x628                                         [39;49m
[34;49m .. a4o.nodes [ 3 ] [ 2 ].BeforeReference [39;49m[33;40m2[39;49m[34;49m = "\njust before : dlna4o.nodes [ 3 ] [ 2 ] 32 dump" ps  dlna4o.nodes [ 3 ] [ 2 ] 32 dump dlna4o.no .. [39;49m[32;49m
0x7fb6e79408f6    48c7c102000000          mov rcx, 0x2                                           [39;49m
[34;49m .. o.nodes [ 3 ] [ 2 ].BeforeReference 2 [39;49m[33;40m=[39;49m[34;49m "\njust before : dlna4o.nodes [ 3 ] [ 2 ] 32 dump" ps  dlna4o.nodes [ 3 ] [ 2 ] 32 dump dlna4o.node .. [39;49m[32;49m
0x7fb6e79408fd    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. nodes [ 3 ] [ 2 ].BeforeReference 2 = [39;49m[33;40m"[39;49m[34;49m\njust before : dlna4o.nodes [ 3 ] [ 2 ] 32 dump" ps  dlna4o.nodes [ 3 ] [ 2 ] 32 dump dlna4o.nodes  .. [39;49m[32;49m
0x7fb6e7940900    48b87e247ee7b67f0000    mov rax, 0x7fb6e77e247e    	[32;49m< string : '[39;49m[39;49m\njust before : dlna4o.nodes [ 3 ] [ 2 ] 32 dump[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fb6e794090a    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e794090e    498906                  mov [r14], rax                                         [39;49m
[34;49m .. e : dlna4o.nodes [ 3 ] [ 2 ] 32 dump" [39;49m[33;40mps[39;49m[34;49m  dlna4o.nodes [ 3 ] [ 2 ] 32 dump dlna4o.nodes [ 3 ] [ 2 ].AfterReference dlna4o.nodes [ 3 ] [ 2 ] .. [39;49m[32;49m
0x7fb6e7940911    49b97da393e7b67f0000    mov r9, 0x7fb6e793a37d                                 [39;49m[32;49m
0x7fb6e794091b    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fb6e793a37d[32;49m >[39;49m[39;49m
[34;49m .. dlna4o.nodes [ 3 ] [ 2 ] 32 dump" ps  [39;49m[33;40mdlna4o[39;49m[34;49m.nodes [ 3 ] [ 2 ] 32 dump dlna4o.nodes [ 3 ] [ 2 ].AfterReference dlna4o.nodes [ 3 ] [ 2 ].Bef .. [39;49m[32;49m
0x7fb6e794091e    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e7940922    4881c020060000          add rax, 0x620                                         [39;49m[32;49m
0x7fb6e7940929    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e794092d    498906                  mov [r14], rax                                         [39;49m
[34;49m .. 32 dump" ps  dlna4o.nodes [ 3 ] [ 2 ] [39;49m[33;40m32[39;49m[34;49m dump dlna4o.nodes [ 3 ] [ 2 ].AfterReference dlna4o.nodes [ 3 ] [ 2 ].BeforeReference = dlna4o.nod .. [39;49m[32;49m
0x7fb6e7940930    48c7c020000000          mov rax, 0x20                                          [39;49m[32;49m
0x7fb6e7940937    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e794093b    498906                  mov [r14], rax                                         [39;49m
[34;49m .. dump" ps  dlna4o.nodes [ 3 ] [ 2 ] 32 [39;49m[33;40mdump[39;49m[34;49m dlna4o.nodes [ 3 ] [ 2 ].AfterReference dlna4o.nodes [ 3 ] [ 2 ].BeforeReference = dlna4o.nodes  .. [39;49m[32;49m
0x7fb6e794093e    49b830a480892d560000    mov r8, 0x562d8980a430                                 [39;49m[32;49m
0x7fb6e7940948    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e7940952    49ffd1                  call r9                    	< Debug.[34;49mdump[39;49m : 0x0000562d8980a430[32;49m >[39;49m[39;49m
[34;49m ..  ps  dlna4o.nodes [ 3 ] [ 2 ] 32 dump [39;49m[33;40mdlna4o[39;49m[34;49m.nodes [ 3 ] [ 2 ].AfterReference dlna4o.nodes [ 3 ] [ 2 ].BeforeReference = dlna4o.nodes [ 3 ] .. [39;49m[32;49m
0x7fb6e7940955    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e7940959    4881c020060000          add rax, 0x620                                         [39;49m
[34;49m .. na4o.nodes [ 3 ] [ 2 ].AfterReference [39;49m[33;40mdlna4o[39;49m[34;49m.nodes [ 3 ] [ 2 ].BeforeReference = dlna4o.nodes [ 3 ] [ 2 ].BeforeReference dlna4o.nodes [ 3  .. [39;49m[32;49m
0x7fb6e7940960    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e7940964    4881c128060000          add rcx, 0x628                                         [39;49m
[34;49m .. a4o.nodes [ 3 ] [ 2 ].BeforeReference [39;49m[33;40m=[39;49m[34;49m dlna4o.nodes [ 3 ] [ 2 ].BeforeReference dlna4o.nodes [ 3 ] [ 2 ].AfterReference = "\njust before : .. [39;49m[32;49m
0x7fb6e794096b    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. o.nodes [ 3 ] [ 2 ].BeforeReference = [39;49m[33;40mdlna4o[39;49m[34;49m.nodes [ 3 ] [ 2 ].BeforeReference dlna4o.nodes [ 3 ] [ 2 ].AfterReference = "\njust before : d .. [39;49m[32;49m
0x7fb6e794096e    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. eReference = dlna4o.nodes [ 3 ] [ 2 ].[39;49m[33;40mBeforeReference[39;49m[34;49m dlna4o.nodes [ 3 ] [ 2 ].AfterReference = "\njust before : dlna4o.nodes [ 3 ] [ 2 ] 3 .. [39;49m[32;49m
0x7fb6e7940972    4881c028060000          add rax, 0x628                                         [39;49m
[34;49m .. a4o.nodes [ 3 ] [ 2 ].BeforeReference [39;49m[33;40mdlna4o[39;49m[34;49m.nodes [ 3 ] [ 2 ].AfterReference = "\njust before : dlna4o.nodes [ 3 ] [ 2 ] 32 dump" ps  dlna .. [39;49m[32;49m
0x7fb6e7940979    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e794097d    4881c120060000          add rcx, 0x620                                         [39;49m
[34;49m .. na4o.nodes [ 3 ] [ 2 ].AfterReference [39;49m[33;40m=[39;49m[34;49m "\njust before : dlna4o.nodes [ 3 ] [ 2 ] 32 dump" ps  dlna4o.nodes [ 3 ] [ 2 ] 32 dump "dlna4o = " .. [39;49m[32;49m
0x7fb6e7940984    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. 4o.nodes [ 3 ] [ 2 ].AfterReference = [39;49m[33;40m"[39;49m[34;49m\njust before : dlna4o.nodes [ 3 ] [ 2 ] 32 dump" ps  dlna4o.nodes [ 3 ] [ 2 ] 32 dump "dlna4o = " p .. [39;49m[32;49m
0x7fb6e7940987    48b829257ee7b67f0000    mov rax, 0x7fb6e77e2529    	[32;49m< string : '[39;49m[39;49m\njust before : dlna4o.nodes [ 3 ] [ 2 ] 32 dump[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fb6e7940991    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7940995    498906                  mov [r14], rax                                         [39;49m
[34;49m .. e : dlna4o.nodes [ 3 ] [ 2 ] 32 dump" [39;49m[33;40mps[39;49m[34;49m  dlna4o.nodes [ 3 ] [ 2 ] 32 dump "dlna4o = " ps dlna4o hp ;  .. [39;49m[32;49m
0x7fb6e7940998    49b97da393e7b67f0000    mov r9, 0x7fb6e793a37d                                 [39;49m[32;49m
0x7fb6e79409a2    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fb6e793a37d[32;49m >[39;49m[39;49m
[34;49m .. dlna4o.nodes [ 3 ] [ 2 ] 32 dump" ps  [39;49m[33;40mdlna4o[39;49m[34;49m.nodes [ 3 ] [ 2 ] 32 dump "dlna4o = " ps dlna4o hp ;  .. [39;49m[32;49m
0x7fb6e79409a5    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e79409a9    4881c020060000          add rax, 0x620                                         [39;49m[32;49m
0x7fb6e79409b0    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e79409b4    498906                  mov [r14], rax                                         [39;49m
[34;49m .. 32 dump" ps  dlna4o.nodes [ 3 ] [ 2 ] [39;49m[33;40m32[39;49m[34;49m dump "dlna4o = " ps dlna4o hp ;  .. [39;49m[32;49m
0x7fb6e79409b7    48c7c020000000          mov rax, 0x20                                          [39;49m[32;49m
0x7fb6e79409be    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e79409c2    498906                  mov [r14], rax                                         [39;49m
[34;49m .. dump" ps  dlna4o.nodes [ 3 ] [ 2 ] 32 [39;49m[33;40mdump[39;49m[34;49m "dlna4o = " ps dlna4o hp ;  .. [39;49m[32;49m
0x7fb6e79409c5    49b830a480892d560000    mov r8, 0x562d8980a430                                 [39;49m[32;49m
0x7fb6e79409cf    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e79409d9    49ffd1                  call r9                    	< Debug.[34;49mdump[39;49m : 0x0000562d8980a430[32;49m >[39;49m[39;49m
[34;49m ..  ps  dlna4o.nodes [ 3 ] [ 2 ] 32 dump [39;49m[33;40m"[39;49m[34;49mdlna4o = " ps dlna4o hp ;  .. [39;49m[32;49m
0x7fb6e79409dc    48b89e257ee7b67f0000    mov rax, 0x7fb6e77e259e    	[32;49m< string : '[39;49m[39;49mdlna4o = [39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fb6e79409e6    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e79409ea    498906                  mov [r14], rax                                         [39;49m
[34;49m .. nodes [ 3 ] [ 2 ] 32 dump "dlna4o = " [39;49m[33;40mps[39;49m[34;49m dlna4o hp ;  .. [39;49m[32;49m
0x7fb6e79409ed    49b97da393e7b67f0000    mov r9, 0x7fb6e793a37d                                 [39;49m[32;49m
0x7fb6e79409f7    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fb6e793a37d[32;49m >[39;49m[39;49m
[34;49m .. es [ 3 ] [ 2 ] 32 dump "dlna4o = " ps [39;49m[33;40mdlna4o[39;49m[34;49m hp ;  .. [39;49m[32;49m
0x7fb6e79409fa    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e79409fe    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fb6e7940a05    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7940a09    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ] [ 2 ] 32 dump "dlna4o = " ps dlna4o [39;49m[33;40mhp[39;49m[34;49m ;  .. [39;49m[32;49m
0x7fb6e7940a0c    49b987a493e7b67f0000    mov r9, 0x7fb6e793a487                                 [39;49m[32;49m
0x7fb6e7940a16    49ffd1                  call r9                    	< Int.[34;49mhp[39;49m : 0x00007fb6e793a487[32;49m >[39;49m[39;49m
[34;49m ..  2 ] 32 dump "dlna4o = " ps dlna4o hp [39;49m[33;40m;[39;49m[34;49m  .. [39;49m[32;49m
0x7fb6e7940a19    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e7940a1d    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e7940a21    4983ee08                sub r14, 0x8                                           [39;49m[32;49m
0x7fb6e7940a25    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'testna5' :: codeSize = 635
Word : 0x00007fb6e7523980 :: Compiled at : 0x00007fb6e79407aa
 =============================
::> 'wdiss' was called at namespaces/test/arrayTest.csl 47.21 <::
 
dlna4o =  0x00007fb6e73b6a90
Dump at : namespaces/test/arrayTest.csl : 49.16 :
Dump : Address = 0x00007fb6e73b6c90 : Number = 32 :: (little endian dump)
0x00007fb6e73b6c90 :  01 00 00 00 00 00 00 00  02 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73b6ca0 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
 
just before : dlna4o.nodes [ 2 ] [ 1 ] 32 dump
Dump at : namespaces/test/arrayTest.csl : 49.16 :
Dump : Address = 0x00007fb6e73b6ea0 : Number = 32 :: (little endian dump)
0x00007fb6e73b6ea0 :  01 00 00 00 00 00 00 00  02 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73b6eb0 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
 
just before : dlna4o.nodes [ 3 ] [ 2 ] 32 dump
Dump at : namespaces/test/arrayTest.csl : 49.16 :
Dump : Address = 0x00007fb6e73b70b0 : Number = 32 :: (little endian dump)
0x00007fb6e73b70b0 :  01 00 00 00 00 00 00 00  02 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73b70c0 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
 
just before : dlna4o.nodes [ 3 ] [ 2 ] 32 dump
Dump at : namespaces/test/arrayTest.csl : 49.16 :
Dump : Address = 0x00007fb6e73b70b0 : Number = 32 :: (little endian dump)
0x00007fb6e73b70b0 :  b8 70 3b e7 b6 7f 00 00  b0 70 3b e7 b6 7f 00 00  .p;..... .p;..... 
0x00007fb6e73b70c0 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
 dlna4o =  0x00007fb6e73b6a90
 =============================
DLLNodeAlloc4.[34;49mtestna5[39;49m <:> csl compiled word
SourceCode for DLLNodeAlloc4.[34;49mtestna5[39;49m :> 
[34;49m: testna5 "\ntestna4 = " ps testna4 hp testna4.nodes [ 1 ] [ 0 ].AfterReference 1 = testna4.nodes [ 1 ] [ 0 ].BeforeReference 2 = testna4.nodes [ 1 ] [ 0 ] 32 dump testna4.nodes [ 2 ] [ 1 ].AfterReference 1 = testna4.nodes [ 2 ] [ 1 ].BeforeReference 2 = "\njust before : testna4.nodes [ 2 ] [ 1 ] 32 dump" ps testna4.nodes [ 2 ] [ 1 ] 32 dump testna4.nodes [ 3 ] [ 2 ].AfterReference 1 = testna4.nodes [ 3 ] [ 2 ].BeforeReference 2 = "\njust before : testna4.nodes [ 3 ] [ 2 ] 32 dump" ps testna4.nodes [ 3 ] [ 2 ] 32 dump testna4.nodes [ 3 ] [ 2 ].AfterReference testna4.nodes [ 3 ] [ 2 ].BeforeReference = testna4.nodes [ 3 ] [ 2 ].BeforeReference testna4.nodes [ 3 ] [ 2 ].AfterReference = "\njust before : testna4.nodes [ 3 ] [ 2 ] 32 dump" ps testna4.nodes [ 3 ] [ 2 ] 32 dump "testna4 = " ps testna4 hp ; [39;49m
Source code file location of [34;49mtestna5[39;49m : "namespaces/test/arrayTest.csl" : 50.2 :: we are now at : namespaces/test/arrayTest.csl : 69.21
Compiled with : optimizeOn, inlineOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xe7940a3a -- code size = 705 bytes
TypeSignature : 
 -----------------------------
Word :: DLLNodeAlloc4.[34;49mtestna5[39;49m : definition = 0x00007fb6e7940a3a : disassembly at namespaces/test/arrayTest.csl : 69.21 :
[34;49m ..                            : testna5  [39;49m[33;40m"[39;49m[34;49m\ntestna4 = " ps testna4 hp testna4.nodes [ 1 ] [ 0 ].AfterReference 1 = testna4.nodes [ 1 ] [ 0 ].B .. [39;49m[32;49m
0x7fb6e7940a3a    48b8fe287ee7b67f0000    mov rax, 0x7fb6e77e28fe    	[32;49m< string : '[39;49m[39;49m\ntestna4 = [39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fb6e7940a44    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7940a48    498906                  mov [r14], rax                                         [39;49m
[34;49m ..             : testna5  "\ntestna4 = " [39;49m[33;40mps[39;49m[34;49m testna4 hp testna4.nodes [ 1 ] [ 0 ].AfterReference 1 = testna4.nodes [ 1 ] [ 0 ].BeforeReference  .. [39;49m[32;49m
0x7fb6e7940a4b    49b97da393e7b67f0000    mov r9, 0x7fb6e793a37d                                 [39;49m[32;49m
0x7fb6e7940a55    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fb6e793a37d[32;49m >[39;49m[39;49m
[34;49m ..          : testna5  "\ntestna4 = " ps [39;49m[33;40mtestna4[39;49m[34;49m hp testna4.nodes [ 1 ] [ 0 ].AfterReference 1 = testna4.nodes [ 1 ] [ 0 ].BeforeReference 2 = .. [39;49m[32;49m
0x7fb6e7940a58    48b8906a3be7b67f0000    mov rax, 0x7fb6e73b6a90                                [39;49m[32;49m
0x7fb6e7940a62    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fb6e7940a69    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7940a6d    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  : testna5  "\ntestna4 = " ps testna4 [39;49m[33;40mhp[39;49m[34;49m testna4.nodes [ 1 ] [ 0 ].AfterReference 1 = testna4.nodes [ 1 ] [ 0 ].BeforeReference 2 = testna4 .. [39;49m[32;49m
0x7fb6e7940a70    49b987a493e7b67f0000    mov r9, 0x7fb6e793a487                                 [39;49m[32;49m
0x7fb6e7940a7a    49ffd1                  call r9                    	< Int.[34;49mhp[39;49m : 0x00007fb6e793a487[32;49m >[39;49m[39;49m
[34;49m  : testna5  "\ntestna4 = " ps testna4 hp [39;49m[33;40mtestna4[39;49m[34;49m.nodes [ 1 ] [ 0 ].AfterReference 1 = testna4.nodes [ 1 ] [ 0 ].BeforeReference 2 = testna4.no .. [39;49m[32;49m
0x7fb6e7940a7d    48b8906a3be7b67f0000    mov rax, 0x7fb6e73b6a90                                [39;49m[32;49m
0x7fb6e7940a87    4881c000020000          add rax, 0x200                                         [39;49m
[34;49m .. tna4.nodes [ 1 ] [ 0 ].AfterReference [39;49m[33;40m1[39;49m[34;49m = testna4.nodes [ 1 ] [ 0 ].BeforeReference 2 = testna4.nodes [ 1 ] [ 0 ] 32 dump testna4.nodes [ 2 .. [39;49m[32;49m
0x7fb6e7940a8e    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m .. a4.nodes [ 1 ] [ 0 ].AfterReference 1 [39;49m[33;40m=[39;49m[34;49m testna4.nodes [ 1 ] [ 0 ].BeforeReference 2 = testna4.nodes [ 1 ] [ 0 ] 32 dump testna4.nodes [ 2 ] .. [39;49m[32;49m
0x7fb6e7940a95    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. .nodes [ 1 ] [ 0 ].AfterReference 1 = [39;49m[33;40mtestna4[39;49m[34;49m.nodes [ 1 ] [ 0 ].BeforeReference 2 = testna4.nodes [ 1 ] [ 0 ] 32 dump testna4.nodes [ 2 ] [ .. [39;49m[32;49m
0x7fb6e7940a98    48b8906a3be7b67f0000    mov rax, 0x7fb6e73b6a90                                [39;49m
[34;49m .. ference 1 = testna4.nodes [ 1 ] [ 0 ].[39;49m[33;40mBeforeReference[39;49m[34;49m 2 = testna4.nodes [ 1 ] [ 0 ] 32 dump testna4.nodes [ 2 ] [ 1 ].AfterReference 1 = te .. [39;49m[32;49m
0x7fb6e7940aa2    4881c008020000          add rax, 0x208                                         [39;49m
[34;49m .. na4.nodes [ 1 ] [ 0 ].BeforeReference [39;49m[33;40m2[39;49m[34;49m = testna4.nodes [ 1 ] [ 0 ] 32 dump testna4.nodes [ 2 ] [ 1 ].AfterReference 1 = testna4.nodes [ 2  .. [39;49m[32;49m
0x7fb6e7940aa9    48c7c102000000          mov rcx, 0x2                                           [39;49m
[34;49m .. 4.nodes [ 1 ] [ 0 ].BeforeReference 2 [39;49m[33;40m=[39;49m[34;49m testna4.nodes [ 1 ] [ 0 ] 32 dump testna4.nodes [ 2 ] [ 1 ].AfterReference 1 = testna4.nodes [ 2 ]  .. [39;49m[32;49m
0x7fb6e7940ab0    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. nodes [ 1 ] [ 0 ].BeforeReference 2 = [39;49m[33;40mtestna4[39;49m[34;49m.nodes [ 1 ] [ 0 ] 32 dump testna4.nodes [ 2 ] [ 1 ].AfterReference 1 = testna4.nodes [ 2 ] [  .. [39;49m[32;49m
0x7fb6e7940ab3    48b8906a3be7b67f0000    mov rax, 0x7fb6e73b6a90                                [39;49m[32;49m
0x7fb6e7940abd    4881c000020000          add rax, 0x200                                         [39;49m[32;49m
0x7fb6e7940ac4    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7940ac8    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ference 2 = testna4.nodes [ 1 ] [ 0 ] [39;49m[33;40m32[39;49m[34;49m dump testna4.nodes [ 2 ] [ 1 ].AfterReference 1 = testna4.nodes [ 2 ] [ 1 ].BeforeReference 2 = "\ .. [39;49m[32;49m
0x7fb6e7940acb    48c7c020000000          mov rax, 0x20                                          [39;49m[32;49m
0x7fb6e7940ad2    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7940ad6    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ence 2 = testna4.nodes [ 1 ] [ 0 ] 32 [39;49m[33;40mdump[39;49m[34;49m testna4.nodes [ 2 ] [ 1 ].AfterReference 1 = testna4.nodes [ 2 ] [ 1 ].BeforeReference 2 = "\nju .. [39;49m[32;49m
0x7fb6e7940ad9    49b830a480892d560000    mov r8, 0x562d8980a430                                 [39;49m[32;49m
0x7fb6e7940ae3    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e7940aed    49ffd1                  call r9                    	< Debug.[34;49mdump[39;49m : 0x0000562d8980a430[32;49m >[39;49m[39;49m
[34;49m .. 2 = testna4.nodes [ 1 ] [ 0 ] 32 dump [39;49m[33;40mtestna4[39;49m[34;49m.nodes [ 2 ] [ 1 ].AfterReference 1 = testna4.nodes [ 2 ] [ 1 ].BeforeReference 2 = "\njust be .. [39;49m[32;49m
0x7fb6e7940af0    48b8906a3be7b67f0000    mov rax, 0x7fb6e73b6a90                                [39;49m[32;49m
0x7fb6e7940afa    4881c010040000          add rax, 0x410                                         [39;49m
[34;49m .. tna4.nodes [ 2 ] [ 1 ].AfterReference [39;49m[33;40m1[39;49m[34;49m = testna4.nodes [ 2 ] [ 1 ].BeforeReference 2 = "\njust before : testna4.nodes [ 2 ] [ 1 ] 32 dump" .. [39;49m[32;49m
0x7fb6e7940b01    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m .. a4.nodes [ 2 ] [ 1 ].AfterReference 1 [39;49m[33;40m=[39;49m[34;49m testna4.nodes [ 2 ] [ 1 ].BeforeReference 2 = "\njust before : testna4.nodes [ 2 ] [ 1 ] 32 dump" p .. [39;49m[32;49m
0x7fb6e7940b08    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. .nodes [ 2 ] [ 1 ].AfterReference 1 = [39;49m[33;40mtestna4[39;49m[34;49m.nodes [ 2 ] [ 1 ].BeforeReference 2 = "\njust before : testna4.nodes [ 2 ] [ 1 ] 32 dump" ps  .. [39;49m[32;49m
0x7fb6e7940b0b    48b8906a3be7b67f0000    mov rax, 0x7fb6e73b6a90                                [39;49m
[34;49m .. ference 1 = testna4.nodes [ 2 ] [ 1 ].[39;49m[33;40mBeforeReference[39;49m[34;49m 2 = "\njust before : testna4.nodes [ 2 ] [ 1 ] 32 dump" ps  testna4.nodes [ 2 ] [ 1 ] .. [39;49m[32;49m
0x7fb6e7940b15    4881c018040000          add rax, 0x418                                         [39;49m
[34;49m .. na4.nodes [ 2 ] [ 1 ].BeforeReference [39;49m[33;40m2[39;49m[34;49m = "\njust before : testna4.nodes [ 2 ] [ 1 ] 32 dump" ps  testna4.nodes [ 2 ] [ 1 ] 32 dump testna4 .. [39;49m[32;49m
0x7fb6e7940b1c    48c7c102000000          mov rcx, 0x2                                           [39;49m
[34;49m .. 4.nodes [ 2 ] [ 1 ].BeforeReference 2 [39;49m[33;40m=[39;49m[34;49m "\njust before : testna4.nodes [ 2 ] [ 1 ] 32 dump" ps  testna4.nodes [ 2 ] [ 1 ] 32 dump testna4.n .. [39;49m[32;49m
0x7fb6e7940b23    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. nodes [ 2 ] [ 1 ].BeforeReference 2 = [39;49m[33;40m"[39;49m[34;49m\njust before : testna4.nodes [ 2 ] [ 1 ] 32 dump" ps  testna4.nodes [ 2 ] [ 1 ] 32 dump testna4.nod .. [39;49m[32;49m
0x7fb6e7940b26    48b86a297ee7b67f0000    mov rax, 0x7fb6e77e296a    	[32;49m< string : '[39;49m[39;49m\njust before : testna4.nodes [ 2 ] [ 1 ] 32 dump[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fb6e7940b30    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7940b34    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  : testna4.nodes [ 2 ] [ 1 ] 32 dump" [39;49m[33;40mps[39;49m[34;49m  testna4.nodes [ 2 ] [ 1 ] 32 dump testna4.nodes [ 3 ] [ 2 ].AfterReference 1 = testna4.nodes [ 3  .. [39;49m[32;49m
0x7fb6e7940b37    49b97da393e7b67f0000    mov r9, 0x7fb6e793a37d                                 [39;49m[32;49m
0x7fb6e7940b41    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fb6e793a37d[32;49m >[39;49m[39;49m
[34;49m .. estna4.nodes [ 2 ] [ 1 ] 32 dump" ps  [39;49m[33;40mtestna4[39;49m[34;49m.nodes [ 2 ] [ 1 ] 32 dump testna4.nodes [ 3 ] [ 2 ].AfterReference 1 = testna4.nodes [ 3 ] [  .. [39;49m[32;49m
0x7fb6e7940b44    48b8906a3be7b67f0000    mov rax, 0x7fb6e73b6a90                                [39;49m[32;49m
0x7fb6e7940b4e    4881c010040000          add rax, 0x410                                         [39;49m[32;49m
0x7fb6e7940b55    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7940b59    498906                  mov [r14], rax                                         [39;49m
[34;49m .. 2 dump" ps  testna4.nodes [ 2 ] [ 1 ] [39;49m[33;40m32[39;49m[34;49m dump testna4.nodes [ 3 ] [ 2 ].AfterReference 1 = testna4.nodes [ 3 ] [ 2 ].BeforeReference 2 = "\ .. [39;49m[32;49m
0x7fb6e7940b5c    48c7c020000000          mov rax, 0x20                                          [39;49m[32;49m
0x7fb6e7940b63    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7940b67    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ump" ps  testna4.nodes [ 2 ] [ 1 ] 32 [39;49m[33;40mdump[39;49m[34;49m testna4.nodes [ 3 ] [ 2 ].AfterReference 1 = testna4.nodes [ 3 ] [ 2 ].BeforeReference 2 = "\nju .. [39;49m[32;49m
0x7fb6e7940b6a    49b830a480892d560000    mov r8, 0x562d8980a430                                 [39;49m[32;49m
0x7fb6e7940b74    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e7940b7e    49ffd1                  call r9                    	< Debug.[34;49mdump[39;49m : 0x0000562d8980a430[32;49m >[39;49m[39;49m
[34;49m .. ps  testna4.nodes [ 2 ] [ 1 ] 32 dump [39;49m[33;40mtestna4[39;49m[34;49m.nodes [ 3 ] [ 2 ].AfterReference 1 = testna4.nodes [ 3 ] [ 2 ].BeforeReference 2 = "\njust be .. [39;49m[32;49m
0x7fb6e7940b81    48b8906a3be7b67f0000    mov rax, 0x7fb6e73b6a90                                [39;49m[32;49m
0x7fb6e7940b8b    4881c020060000          add rax, 0x620                                         [39;49m
[34;49m .. tna4.nodes [ 3 ] [ 2 ].AfterReference [39;49m[33;40m1[39;49m[34;49m = testna4.nodes [ 3 ] [ 2 ].BeforeReference 2 = "\njust before : testna4.nodes [ 3 ] [ 2 ] 32 dump" .. [39;49m[32;49m
0x7fb6e7940b92    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m .. a4.nodes [ 3 ] [ 2 ].AfterReference 1 [39;49m[33;40m=[39;49m[34;49m testna4.nodes [ 3 ] [ 2 ].BeforeReference 2 = "\njust before : testna4.nodes [ 3 ] [ 2 ] 32 dump" p .. [39;49m[32;49m
0x7fb6e7940b99    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. .nodes [ 3 ] [ 2 ].AfterReference 1 = [39;49m[33;40mtestna4[39;49m[34;49m.nodes [ 3 ] [ 2 ].BeforeReference 2 = "\njust before : testna4.nodes [ 3 ] [ 2 ] 32 dump" ps  .. [39;49m[32;49m
0x7fb6e7940b9c    48b8906a3be7b67f0000    mov rax, 0x7fb6e73b6a90                                [39;49m
[34;49m .. ference 1 = testna4.nodes [ 3 ] [ 2 ].[39;49m[33;40mBeforeReference[39;49m[34;49m 2 = "\njust before : testna4.nodes [ 3 ] [ 2 ] 32 dump" ps  testna4.nodes [ 3 ] [ 2 ] .. [39;49m[32;49m
0x7fb6e7940ba6    4881c028060000          add rax, 0x628                                         [39;49m
[34;49m .. na4.nodes [ 3 ] [ 2 ].BeforeReference [39;49m[33;40m2[39;49m[34;49m = "\njust before : testna4.nodes [ 3 ] [ 2 ] 32 dump" ps  testna4.nodes [ 3 ] [ 2 ] 32 dump testna4 .. [39;49m[32;49m
0x7fb6e7940bad    48c7c102000000          mov rcx, 0x2                                           [39;49m
[34;49m .. 4.nodes [ 3 ] [ 2 ].BeforeReference 2 [39;49m[33;40m=[39;49m[34;49m "\njust before : testna4.nodes [ 3 ] [ 2 ] 32 dump" ps  testna4.nodes [ 3 ] [ 2 ] 32 dump testna4.n .. [39;49m[32;49m
0x7fb6e7940bb4    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. nodes [ 3 ] [ 2 ].BeforeReference 2 = [39;49m[33;40m"[39;49m[34;49m\njust before : testna4.nodes [ 3 ] [ 2 ] 32 dump" ps  testna4.nodes [ 3 ] [ 2 ] 32 dump testna4.nod .. [39;49m[32;49m
0x7fb6e7940bb7    48b8142a7ee7b67f0000    mov rax, 0x7fb6e77e2a14    	[32;49m< string : '[39;49m[39;49m\njust before : testna4.nodes [ 3 ] [ 2 ] 32 dump[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fb6e7940bc1    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7940bc5    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  : testna4.nodes [ 3 ] [ 2 ] 32 dump" [39;49m[33;40mps[39;49m[34;49m  testna4.nodes [ 3 ] [ 2 ] 32 dump testna4.nodes [ 3 ] [ 2 ].AfterReference testna4.nodes [ 3 ] [  .. [39;49m[32;49m
0x7fb6e7940bc8    49b97da393e7b67f0000    mov r9, 0x7fb6e793a37d                                 [39;49m[32;49m
0x7fb6e7940bd2    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fb6e793a37d[32;49m >[39;49m[39;49m
[34;49m .. estna4.nodes [ 3 ] [ 2 ] 32 dump" ps  [39;49m[33;40mtestna4[39;49m[34;49m.nodes [ 3 ] [ 2 ] 32 dump testna4.nodes [ 3 ] [ 2 ].AfterReference testna4.nodes [ 3 ] [ 2 ]. .. [39;49m[32;49m
0x7fb6e7940bd5    48b8906a3be7b67f0000    mov rax, 0x7fb6e73b6a90                                [39;49m[32;49m
0x7fb6e7940bdf    4881c020060000          add rax, 0x620                                         [39;49m[32;49m
0x7fb6e7940be6    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7940bea    498906                  mov [r14], rax                                         [39;49m
[34;49m .. 2 dump" ps  testna4.nodes [ 3 ] [ 2 ] [39;49m[33;40m32[39;49m[34;49m dump testna4.nodes [ 3 ] [ 2 ].AfterReference testna4.nodes [ 3 ] [ 2 ].BeforeReference = testna4. .. [39;49m[32;49m
0x7fb6e7940bed    48c7c020000000          mov rax, 0x20                                          [39;49m[32;49m
0x7fb6e7940bf4    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7940bf8    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ump" ps  testna4.nodes [ 3 ] [ 2 ] 32 [39;49m[33;40mdump[39;49m[34;49m testna4.nodes [ 3 ] [ 2 ].AfterReference testna4.nodes [ 3 ] [ 2 ].BeforeReference = testna4.nod .. [39;49m[32;49m
0x7fb6e7940bfb    49b830a480892d560000    mov r8, 0x562d8980a430                                 [39;49m[32;49m
0x7fb6e7940c05    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e7940c0f    49ffd1                  call r9                    	< Debug.[34;49mdump[39;49m : 0x0000562d8980a430[32;49m >[39;49m[39;49m
[34;49m .. ps  testna4.nodes [ 3 ] [ 2 ] 32 dump [39;49m[33;40mtestna4[39;49m[34;49m.nodes [ 3 ] [ 2 ].AfterReference testna4.nodes [ 3 ] [ 2 ].BeforeReference = testna4.nodes [  .. [39;49m[32;49m
0x7fb6e7940c12    48b8906a3be7b67f0000    mov rax, 0x7fb6e73b6a90                                [39;49m[32;49m
0x7fb6e7940c1c    4881c020060000          add rax, 0x620                                         [39;49m
[34;49m .. tna4.nodes [ 3 ] [ 2 ].AfterReference [39;49m[33;40mtestna4[39;49m[34;49m.nodes [ 3 ] [ 2 ].BeforeReference = testna4.nodes [ 3 ] [ 2 ].BeforeReference testna4.nodes [ .. [39;49m[32;49m
0x7fb6e7940c23    48b9906a3be7b67f0000    mov rcx, 0x7fb6e73b6a90                                [39;49m[32;49m
0x7fb6e7940c2d    4881c128060000          add rcx, 0x628                                         [39;49m
[34;49m .. na4.nodes [ 3 ] [ 2 ].BeforeReference [39;49m[33;40m=[39;49m[34;49m testna4.nodes [ 3 ] [ 2 ].BeforeReference testna4.nodes [ 3 ] [ 2 ].AfterReference = "\njust before .. [39;49m[32;49m
0x7fb6e7940c34    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. 4.nodes [ 3 ] [ 2 ].BeforeReference = [39;49m[33;40mtestna4[39;49m[34;49m.nodes [ 3 ] [ 2 ].BeforeReference testna4.nodes [ 3 ] [ 2 ].AfterReference = "\njust before : .. [39;49m[32;49m
0x7fb6e7940c37    48b8906a3be7b67f0000    mov rax, 0x7fb6e73b6a90                                [39;49m
[34;49m .. Reference = testna4.nodes [ 3 ] [ 2 ].[39;49m[33;40mBeforeReference[39;49m[34;49m testna4.nodes [ 3 ] [ 2 ].AfterReference = "\njust before : testna4.nodes [ 3 ] [ 2 ] .. [39;49m[32;49m
0x7fb6e7940c41    4881c028060000          add rax, 0x628                                         [39;49m
[34;49m .. na4.nodes [ 3 ] [ 2 ].BeforeReference [39;49m[33;40mtestna4[39;49m[34;49m.nodes [ 3 ] [ 2 ].AfterReference = "\njust before : testna4.nodes [ 3 ] [ 2 ] 32 dump" ps  te .. [39;49m[32;49m
0x7fb6e7940c48    48b9906a3be7b67f0000    mov rcx, 0x7fb6e73b6a90                                [39;49m[32;49m
0x7fb6e7940c52    4881c120060000          add rcx, 0x620                                         [39;49m
[34;49m .. tna4.nodes [ 3 ] [ 2 ].AfterReference [39;49m[33;40m=[39;49m[34;49m "\njust before : testna4.nodes [ 3 ] [ 2 ] 32 dump" ps  testna4.nodes [ 3 ] [ 2 ] 32 dump "testna4  .. [39;49m[32;49m
0x7fb6e7940c59    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. a4.nodes [ 3 ] [ 2 ].AfterReference = [39;49m[33;40m"[39;49m[34;49m\njust before : testna4.nodes [ 3 ] [ 2 ] 32 dump" ps  testna4.nodes [ 3 ] [ 2 ] 32 dump "testna4 =  .. [39;49m[32;49m
0x7fb6e7940c5c    48b8c22a7ee7b67f0000    mov rax, 0x7fb6e77e2ac2    	[32;49m< string : '[39;49m[39;49m\njust before : testna4.nodes [ 3 ] [ 2 ] 32 dump[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fb6e7940c66    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7940c6a    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  : testna4.nodes [ 3 ] [ 2 ] 32 dump" [39;49m[33;40mps[39;49m[34;49m  testna4.nodes [ 3 ] [ 2 ] 32 dump "testna4 = " ps testna4 hp ;  .. [39;49m[32;49m
0x7fb6e7940c6d    49b97da393e7b67f0000    mov r9, 0x7fb6e793a37d                                 [39;49m[32;49m
0x7fb6e7940c77    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fb6e793a37d[32;49m >[39;49m[39;49m
[34;49m .. estna4.nodes [ 3 ] [ 2 ] 32 dump" ps  [39;49m[33;40mtestna4[39;49m[34;49m.nodes [ 3 ] [ 2 ] 32 dump "testna4 = " ps testna4 hp ;  .. [39;49m[32;49m
0x7fb6e7940c7a    48b8906a3be7b67f0000    mov rax, 0x7fb6e73b6a90                                [39;49m[32;49m
0x7fb6e7940c84    4881c020060000          add rax, 0x620                                         [39;49m[32;49m
0x7fb6e7940c8b    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7940c8f    498906                  mov [r14], rax                                         [39;49m
[34;49m .. 2 dump" ps  testna4.nodes [ 3 ] [ 2 ] [39;49m[33;40m32[39;49m[34;49m dump "testna4 = " ps testna4 hp ;  .. [39;49m[32;49m
0x7fb6e7940c92    48c7c020000000          mov rax, 0x20                                          [39;49m[32;49m
0x7fb6e7940c99    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7940c9d    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ump" ps  testna4.nodes [ 3 ] [ 2 ] 32 [39;49m[33;40mdump[39;49m[34;49m "testna4 = " ps testna4 hp ;  .. [39;49m[32;49m
0x7fb6e7940ca0    49b830a480892d560000    mov r8, 0x562d8980a430                                 [39;49m[32;49m
0x7fb6e7940caa    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e7940cb4    49ffd1                  call r9                    	< Debug.[34;49mdump[39;49m : 0x0000562d8980a430[32;49m >[39;49m[39;49m
[34;49m .. ps  testna4.nodes [ 3 ] [ 2 ] 32 dump [39;49m[33;40m"[39;49m[34;49mtestna4 = " ps testna4 hp ;  .. [39;49m[32;49m
0x7fb6e7940cb7    48b83a2b7ee7b67f0000    mov rax, 0x7fb6e77e2b3a    	[32;49m< string : '[39;49m[39;49mtestna4 = [39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fb6e7940cc1    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7940cc5    498906                  mov [r14], rax                                         [39;49m
[34;49m .. odes [ 3 ] [ 2 ] 32 dump "testna4 = " [39;49m[33;40mps[39;49m[34;49m testna4 hp ;  .. [39;49m[32;49m
0x7fb6e7940cc8    49b97da393e7b67f0000    mov r9, 0x7fb6e793a37d                                 [39;49m[32;49m
0x7fb6e7940cd2    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fb6e793a37d[32;49m >[39;49m[39;49m
[34;49m .. s [ 3 ] [ 2 ] 32 dump "testna4 = " ps [39;49m[33;40mtestna4[39;49m[34;49m hp ;  .. [39;49m[32;49m
0x7fb6e7940cd5    48b8906a3be7b67f0000    mov rax, 0x7fb6e73b6a90                                [39;49m[32;49m
0x7fb6e7940cdf    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fb6e7940ce6    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7940cea    498906                  mov [r14], rax                                         [39;49m
[34;49m .. [ 2 ] 32 dump "testna4 = " ps testna4 [39;49m[33;40mhp[39;49m[34;49m ;  .. [39;49m[32;49m
0x7fb6e7940ced    49b987a493e7b67f0000    mov r9, 0x7fb6e793a487                                 [39;49m[32;49m
0x7fb6e7940cf7    49ffd1                  call r9                    	< Int.[34;49mhp[39;49m : 0x00007fb6e793a487[32;49m >[39;49m[39;49m
[34;49m ..  ] 32 dump "testna4 = " ps testna4 hp [39;49m[33;40m;[39;49m[34;49m  .. [39;49m[32;49m
0x7fb6e7940cfa    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'testna5' :: codeSize = 704
Word : 0x00007fb6e752e5d0 :: Compiled at : 0x00007fb6e7940a3a
 =============================
::> 'wdiss' was called at namespaces/test/arrayTest.csl 69.21 <::
 
testna4 =  0x00007fb6e73b6a90
Dump at : namespaces/test/arrayTest.csl : 71.8 :
Dump : Address = 0x00007fb6e73b6c90 : Number = 32 :: (little endian dump)
0x00007fb6e73b6c90 :  01 00 00 00 00 00 00 00  02 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73b6ca0 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
 
just before : testna4.nodes [ 2 ] [ 1 ] 32 dump
Dump at : namespaces/test/arrayTest.csl : 71.8 :
Dump : Address = 0x00007fb6e73b6ea0 : Number = 32 :: (little endian dump)
0x00007fb6e73b6ea0 :  01 00 00 00 00 00 00 00  02 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73b6eb0 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
 
just before : testna4.nodes [ 3 ] [ 2 ] 32 dump
Dump at : namespaces/test/arrayTest.csl : 71.8 :
Dump : Address = 0x00007fb6e73b70b0 : Number = 32 :: (little endian dump)
0x00007fb6e73b70b0 :  01 00 00 00 00 00 00 00  02 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73b70c0 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
 
just before : testna4.nodes [ 3 ] [ 2 ] 32 dump
Dump at : namespaces/test/arrayTest.csl : 71.8 :
Dump : Address = 0x00007fb6e73b70b0 : Number = 32 :: (little endian dump)
0x00007fb6e73b70b0 :  b8 70 3b e7 b6 7f 00 00  b0 70 3b e7 b6 7f 00 00  .p;..... .p;..... 
0x00007fb6e73b70c0 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
 testna4 =  0x00007fb6e73b6a90 
testna4 =  0x00007fb6e73b6a90
 =============================
DLLNodeAlloc.[34;49mtna[39;49m <:> csl compiled word
SourceCode for DLLNodeAlloc.[34;49mtna[39;49m :> 
[34;49m: tna testnarr2.nodes [ 1 ] 32 dump testnarr2.nodes [ 1 ].AfterReference 1 = testnarr2.nodes [ 1 ]. BeforeReference 2 = testnarr2.nodes [ 1 ] 32 dump ; [39;49m
Source code file location of [34;49mtna[39;49m : "namespaces/test/arrayTest.csl" : 78.2 :: we are now at : namespaces/test/arrayTest.csl : 84.17
Compiled with : optimizeOn, inlineOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xe7940d0f -- code size = 177 bytes
TypeSignature : 
 -----------------------------
Word :: DLLNodeAlloc.[34;49mtna[39;49m : definition = 0x00007fb6e7940d0f : disassembly at namespaces/test/arrayTest.csl : 84.17 :
[34;49m ..                                 : tna [39;49m[33;40mtestnarr2[39;49m[34;49m.nodes [ 1 ] 32 dump  testnarr2.nodes [ 1 ].AfterReference 1 =  testnarr2.nodes [ 1 ]. Befor .. [39;49m[32;49m
0x7fb6e7940d0f    48b8d8de3be7b67f0000    mov rax, 0x7fb6e73bded8                                [39;49m[32;49m
0x7fb6e7940d19    4881c010000000          add rax, 0x10                                          [39;49m[32;49m
0x7fb6e7940d20    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7940d24    498906                  mov [r14], rax                                         [39;49m
[34;49m ..           : tna testnarr2.nodes [ 1 ] [39;49m[33;40m32[39;49m[34;49m dump  testnarr2.nodes [ 1 ].AfterReference 1 =  testnarr2.nodes [ 1 ]. BeforeReference 2 =  testna .. [39;49m[32;49m
0x7fb6e7940d27    48c7c020000000          mov rax, 0x20                                          [39;49m[32;49m
0x7fb6e7940d2e    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7940d32    498906                  mov [r14], rax                                         [39;49m
[34;49m ..        : tna testnarr2.nodes [ 1 ] 32 [39;49m[33;40mdump[39;49m[34;49m  testnarr2.nodes [ 1 ].AfterReference 1 =  testnarr2.nodes [ 1 ]. BeforeReference 2 =  testnarr2 .. [39;49m[32;49m
0x7fb6e7940d35    49b830a480892d560000    mov r8, 0x562d8980a430                                 [39;49m[32;49m
0x7fb6e7940d3f    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e7940d49    49ffd1                  call r9                    	< Debug.[34;49mdump[39;49m : 0x0000562d8980a430[32;49m >[39;49m[39;49m
[34;49m ..  : tna testnarr2.nodes [ 1 ] 32 dump  [39;49m[33;40mtestnarr2[39;49m[34;49m.nodes [ 1 ].AfterReference 1 =  testnarr2.nodes [ 1 ]. BeforeReference 2 =  testnarr2.nodes .. [39;49m[32;49m
0x7fb6e7940d4c    48b8d8de3be7b67f0000    mov rax, 0x7fb6e73bded8                                [39;49m[32;49m
0x7fb6e7940d56    4881c010000000          add rax, 0x10                                          [39;49m
[34;49m ..  testnarr2.nodes [ 1 ].AfterReference [39;49m[33;40m1[39;49m[34;49m =  testnarr2.nodes [ 1 ]. BeforeReference 2 =  testnarr2.nodes [ 1 ] 32 dump  ;  .. [39;49m[32;49m
0x7fb6e7940d5d    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m .. estnarr2.nodes [ 1 ].AfterReference 1 [39;49m[33;40m=[39;49m[34;49m  testnarr2.nodes [ 1 ]. BeforeReference 2 =  testnarr2.nodes [ 1 ] 32 dump  ;  .. [39;49m[32;49m
0x7fb6e7940d64    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. narr2.nodes [ 1 ].AfterReference 1 =  [39;49m[33;40mtestnarr2[39;49m[34;49m.nodes [ 1 ]. BeforeReference 2 =  testnarr2.nodes [ 1 ] 32 dump  ;  .. [39;49m[32;49m
0x7fb6e7940d67    48b8d8de3be7b67f0000    mov rax, 0x7fb6e73bded8                                [39;49m
[34;49m .. Reference 1 =  testnarr2.nodes [ 1 ]. [39;49m[33;40mBeforeReference[39;49m[34;49m 2 =  testnarr2.nodes [ 1 ] 32 dump  ;  .. [39;49m[32;49m
0x7fb6e7940d71    4881c018000000          add rax, 0x18                                          [39;49m
[34;49m .. estnarr2.nodes [ 1 ]. BeforeReference [39;49m[33;40m2[39;49m[34;49m =  testnarr2.nodes [ 1 ] 32 dump  ;  .. [39;49m[32;49m
0x7fb6e7940d78    48c7c102000000          mov rcx, 0x2                                           [39;49m
[34;49m .. tnarr2.nodes [ 1 ]. BeforeReference 2 [39;49m[33;40m=[39;49m[34;49m  testnarr2.nodes [ 1 ] 32 dump  ;  .. [39;49m[32;49m
0x7fb6e7940d7f    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. rr2.nodes [ 1 ]. BeforeReference 2 =  [39;49m[33;40mtestnarr2[39;49m[34;49m.nodes [ 1 ] 32 dump  ;  .. [39;49m[32;49m
0x7fb6e7940d82    48b8d8de3be7b67f0000    mov rax, 0x7fb6e73bded8                                [39;49m[32;49m
0x7fb6e7940d8c    4881c010000000          add rax, 0x10                                          [39;49m[32;49m
0x7fb6e7940d93    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7940d97    498906                  mov [r14], rax                                         [39;49m
[34;49m .. eReference 2 =  testnarr2.nodes [ 1 ] [39;49m[33;40m32[39;49m[34;49m dump  ;  .. [39;49m[32;49m
0x7fb6e7940d9a    48c7c020000000          mov rax, 0x20                                          [39;49m[32;49m
0x7fb6e7940da1    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7940da5    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ference 2 =  testnarr2.nodes [ 1 ] 32 [39;49m[33;40mdump[39;49m[34;49m  ;  .. [39;49m[32;49m
0x7fb6e7940da8    49b830a480892d560000    mov r8, 0x562d8980a430                                 [39;49m[32;49m
0x7fb6e7940db2    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e7940dbc    49ffd1                  call r9                    	< Debug.[34;49mdump[39;49m : 0x0000562d8980a430[32;49m >[39;49m[39;49m
[34;49m .. e 2 =  testnarr2.nodes [ 1 ] 32 dump  [39;49m[33;40m;[39;49m[34;49m  .. [39;49m[32;49m
0x7fb6e7940dbf    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'tna' :: codeSize = 176
Word : 0x00007fb6e7538e78 :: Compiled at : 0x00007fb6e7940d0f
 =============================
::> 'wdiss' was called at namespaces/test/arrayTest.csl 84.17 <::

Dump at : namespaces/test/arrayTest.csl : 85.4 :
Dump : Address = 0x00007fb6e73bdee8 : Number = 32 :: (little endian dump)
0x00007fb6e73bdee8 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73bdef8 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 

Dump at : namespaces/test/arrayTest.csl : 85.4 :
Dump : Address = 0x00007fb6e73bdee8 : Number = 32 :: (little endian dump)
0x00007fb6e73bdee8 :  01 00 00 00 00 00 00 00  02 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73bdef8 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
 tnarr2a

Dump at : namespaces/test/arrayTest.csl : 107.15 :
Dump : Address = 0x00007fb6e73bf730 : Number = 512 :: (little endian dump)
0x00007fb6e73bf730 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73bf740 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73bf750 :  01 00 00 00 00 00 00 00  02 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73bf760 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73bf770 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73bf780 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73bf790 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73bf7a0 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73bf7b0 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73bf7c0 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73bf7d0 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73bf7e0 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73bf7f0 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73bf800 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73bf810 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73bf820 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73bf830 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73bf840 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73bf850 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73bf860 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73bf870 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73bf880 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73bf890 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73bf8a0 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73bf8b0 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73bf8c0 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73bf8d0 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73bf8e0 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73bf8f0 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73bf900 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73bf910 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73bf920 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 

 =============================
DLLNodeAlloc.[34;49mtna3[39;49m <:> csl compiled word
SourceCode for DLLNodeAlloc.[34;49mtna3[39;49m :> 
[34;49m: tna3 ( this ) "tna3" ps this.nodes [ 2 ].AfterReference 1 = this.nodes [ 2 ].BeforeReference 2 = this this.size @ dump ; [39;49m
Source code file location of [34;49mtna3[39;49m : "namespaces/test/arrayTest.csl" : 111.2 :: we are now at : namespaces/test/arrayTest.csl : 121.9
Compiled with : optimizeOn, inlineOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xe7940f9e -- code size = 179 bytes
TypeSignature : 
 -----------------------------
Word :: DLLNodeAlloc.[34;49mtna3[39;49m : definition = 0x00007fb6e7940f9e : disassembly at namespaces/test/arrayTest.csl : 121.9 :
[34;49m ..                                     : [39;49m[33;40mtna3[39;49m[34;49m ( this ) "tna3" ps  this.nodes [ 2 ].AfterReference 1 =  this.nodes [ 2 ].BeforeReference 2 =  t .. [39;49m[32;49m
0x7fb6e7940f9e    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fb6e7940fa2    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e7940fa6    4981c608000000          add r14, 0x8                                           [39;49m
[34;49m ..                       : tna3 ( this ) [39;49m[33;40m"[39;49m[34;49mtna3" ps  this.nodes [ 2 ].AfterReference 1 =  this.nodes [ 2 ].BeforeReference 2 =  this this.size  .. [39;49m[32;49m
0x7fb6e7940fad    48b86c317ee7b67f0000    mov rax, 0x7fb6e77e316c    	[32;49m< string : '[39;49m[39;49mtna3[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fb6e7940fb7    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7940fbb    498906                  mov [r14], rax                                         [39;49m
[34;49m ..                : tna3 ( this ) "tna3" [39;49m[33;40mps[39;49m[34;49m  this.nodes [ 2 ].AfterReference 1 =  this.nodes [ 2 ].BeforeReference 2 =  this this.size @ dump  .. [39;49m[32;49m
0x7fb6e7940fbe    49b97da393e7b67f0000    mov r9, 0x7fb6e793a37d                                 [39;49m[32;49m
0x7fb6e7940fc8    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fb6e793a37d[32;49m >[39;49m[39;49m
[34;49m ..            : tna3 ( this ) "tna3" ps  [39;49m[33;40mthis[39;49m[34;49m.nodes [ 2 ].AfterReference 1 =  this.nodes [ 2 ].BeforeReference 2 =  this this.size @ dump ;  .. [39;49m[32;49m
0x7fb6e7940fcb    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e7940fcf    4881c020000000          add rax, 0x20                                          [39;49m
[34;49m .. " ps  this.nodes [ 2 ].AfterReference [39;49m[33;40m1[39;49m[34;49m =  this.nodes [ 2 ].BeforeReference 2 =  this this.size @ dump ; [39;49m[32;49m
0x7fb6e7940fd6    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m .. ps  this.nodes [ 2 ].AfterReference 1 [39;49m[33;40m=[39;49m[34;49m  this.nodes [ 2 ].BeforeReference 2 =  this this.size @ dump ; [39;49m[32;49m
0x7fb6e7940fdd    488908                  mov [rax], rcx                                         [39;49m
[34;49m ..  this.nodes [ 2 ].AfterReference 1 =  [39;49m[33;40mthis[39;49m[34;49m.nodes [ 2 ].BeforeReference 2 =  this this.size @ dump ; [39;49m[32;49m
0x7fb6e7940fe0    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. .AfterReference 1 =  this.nodes [ 2 ].[39;49m[33;40mBeforeReference[39;49m[34;49m 2 =  this this.size @ dump ; [39;49m[32;49m
0x7fb6e7940fe4    4881c028000000          add rax, 0x28                                          [39;49m
[34;49m .. 1 =  this.nodes [ 2 ].BeforeReference [39;49m[33;40m2[39;49m[34;49m =  this this.size @ dump ; [39;49m[32;49m
0x7fb6e7940feb    48c7c102000000          mov rcx, 0x2                                           [39;49m
[34;49m .. =  this.nodes [ 2 ].BeforeReference 2 [39;49m[33;40m=[39;49m[34;49m  this this.size @ dump ; [39;49m[32;49m
0x7fb6e7940ff2    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. this.nodes [ 2 ].BeforeReference 2 =  [39;49m[33;40mthis[39;49m[34;49m this.size @ dump ; [39;49m[32;49m
0x7fb6e7940ff5    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e7940ff9    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fb6e7941000    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7941004    498906                  mov [r14], rax                                         [39;49m
[34;49m .. nodes [ 2 ].BeforeReference 2 =  this [39;49m[33;40mthis[39;49m[34;49m.size @ dump ; [39;49m[32;49m
0x7fb6e7941007    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e794100b    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fb6e7941012    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7941016    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  [ 2 ].BeforeReference 2 =  this this.[39;49m[33;40msize[39;49m[34;49m @ dump ; [39;49m[32;49m
0x7fb6e7941019    48b8482652e7b67f0000    mov rax, 0x7fb6e7522648                                [39;49m[32;49m
0x7fb6e7941023    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fb6e7941026    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e794102a    498906                  mov [r14], rax                                         [39;49m
[34;49m .. BeforeReference 2 =  this this.size @ [39;49m[33;40mdump[39;49m[34;49m ; [39;49m[32;49m
0x7fb6e794102d    49b830a480892d560000    mov r8, 0x562d8980a430                                 [39;49m[32;49m
0x7fb6e7941037    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e7941041    49ffd1                  call r9                    	< Debug.[34;49mdump[39;49m : 0x0000562d8980a430[32;49m >[39;49m[39;49m
[34;49m .. eReference 2 =  this this.size @ dump [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fb6e7941044    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e7941048    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e794104c    4983ee08                sub r14, 0x8                                           [39;49m[32;49m
0x7fb6e7941050    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'tna3' :: codeSize = 178
Word : 0x00007fb6e753f868 :: Compiled at : 0x00007fb6e7940f9e
 =============================
::> 'wdiss' was called at namespaces/test/arrayTest.csl 121.9 <::
 tna3
Dump at : namespaces/test/arrayTest.csl : 122.12 :
Dump : Address = 0x00007fb6e73c0538 : Number = 512 :: (little endian dump)
0x00007fb6e73c0538 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73c0548 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73c0558 :  01 00 00 00 00 00 00 00  02 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73c0568 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73c0578 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73c0588 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73c0598 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73c05a8 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73c05b8 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73c05c8 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73c05d8 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73c05e8 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73c05f8 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73c0608 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73c0618 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73c0628 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73c0638 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73c0648 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73c0658 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73c0668 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73c0678 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73c0688 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73c0698 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73c06a8 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73c06b8 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73c06c8 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73c06d8 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73c06e8 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73c06f8 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73c0708 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73c0718 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73c0728 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
 0x00007fb6e73c0538 tnarr2

 0x00007fb6e73c0538

Dump at : namespaces/test/arrayTest.csl : 125.14 :
Dump : Address = 0x00007fb6e73c0538 : Number = 512 :: (little endian dump)
0x00007fb6e73c0538 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73c0548 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73c0558 :  01 00 00 00 00 00 00 00  02 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73c0568 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73c0578 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73c0588 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73c0598 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73c05a8 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73c05b8 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73c05c8 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73c05d8 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73c05e8 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73c05f8 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73c0608 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73c0618 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73c0628 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73c0638 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73c0648 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73c0658 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73c0668 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73c0678 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73c0688 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73c0698 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73c06a8 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73c06b8 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73c06c8 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73c06d8 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73c06e8 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73c06f8 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73c0708 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73c0718 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73c0728 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 

 =============================
DLLNodeAlloc.[34;49mtnax1[39;49m <:> csl compiled word
SourceCode for DLLNodeAlloc.[34;49mtnax1[39;49m :> 
[34;49m: tnax1 ( this ) this nl hp nl this.nodes[3].AfterReference 1 = this.nodes[4].BeforeReference 2 = this.nodes[3] hp this.nodes[3].AfterReference dup hp 16 dump this.nodes[4] hp this.nodes[4].BeforeReference dup hp 16 dump ; [39;49m
Source code file location of [34;49mtnax1[39;49m : "namespaces/test/arrayTest.csl" : 127.2 :: we are now at : namespaces/test/arrayTest.csl : 136.19
Compiled with : optimizeOn, inlineOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xe7941056 -- code size = 353 bytes
TypeSignature : 
 -----------------------------
Word :: DLLNodeAlloc.[34;49mtnax1[39;49m : definition = 0x00007fb6e7941056 : disassembly at namespaces/test/arrayTest.csl : 136.19 :
[34;49m ..                                     : [39;49m[33;40mtnax1[39;49m[34;49m ( this ) this nl hp nl  this.nodes[3].AfterReference 1 =  this.nodes[4].BeforeReference 2 =  th .. [39;49m[32;49m
0x7fb6e7941056    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fb6e794105a    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e794105e    4981c608000000          add r14, 0x8                                           [39;49m
[34;49m ..                      : tnax1 ( this ) [39;49m[33;40mthis[39;49m[34;49m nl hp nl  this.nodes[3].AfterReference 1 =  this.nodes[4].BeforeReference 2 =  this.nodes[3] hp  .. [39;49m[32;49m
0x7fb6e7941065    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e7941069    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fb6e7941070    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7941074    498906                  mov [r14], rax                                         [39;49m
[34;49m ..                 : tnax1 ( this ) this [39;49m[33;40mnl[39;49m[34;49m hp nl  this.nodes[3].AfterReference 1 =  this.nodes[4].BeforeReference 2 =  this.nodes[3] hp   thi .. [39;49m[32;49m
0x7fb6e7941077    49b8e08080892d560000    mov r8, 0x562d898080e0                                 [39;49m[32;49m
0x7fb6e7941081    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e794108b    49ffd1                  call r9                    	< Io.[34;49mnewline[39;49m : 0x0000562d898080e0[32;49m >[39;49m[39;49m
[34;49m ..              : tnax1 ( this ) this nl [39;49m[33;40mhp[39;49m[34;49m nl  this.nodes[3].AfterReference 1 =  this.nodes[4].BeforeReference 2 =  this.nodes[3] hp   this.n .. [39;49m[32;49m
0x7fb6e794108e    49b987a493e7b67f0000    mov r9, 0x7fb6e793a487                                 [39;49m[32;49m
0x7fb6e7941098    49ffd1                  call r9                    	< Int.[34;49mhp[39;49m : 0x00007fb6e793a487[32;49m >[39;49m[39;49m
[34;49m ..           : tnax1 ( this ) this nl hp [39;49m[33;40mnl[39;49m[34;49m  this.nodes[3].AfterReference 1 =  this.nodes[4].BeforeReference 2 =  this.nodes[3] hp   this.node .. [39;49m[32;49m
0x7fb6e794109b    49b8e08080892d560000    mov r8, 0x562d898080e0                                 [39;49m[32;49m
0x7fb6e79410a5    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e79410af    49ffd1                  call r9                    	< Io.[34;49mnewline[39;49m : 0x0000562d898080e0[32;49m >[39;49m[39;49m
[34;49m ..       : tnax1 ( this ) this nl hp nl  [39;49m[33;40mthis[39;49m[34;49m.nodes[3].AfterReference 1 =  this.nodes[4].BeforeReference 2 =  this.nodes[3] hp   this.nodes[3] .. [39;49m[32;49m
0x7fb6e79410b2    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e79410b6    4881c030000000          add rax, 0x30                                          [39;49m
[34;49m .. l hp nl  this.nodes[3].AfterReference [39;49m[33;40m1[39;49m[34;49m =  this.nodes[4].BeforeReference 2 =  this.nodes[3] hp   this.nodes[3].AfterReference dup hp 16 dum .. [39;49m[32;49m
0x7fb6e79410bd    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m .. hp nl  this.nodes[3].AfterReference 1 [39;49m[33;40m=[39;49m[34;49m  this.nodes[4].BeforeReference 2 =  this.nodes[3] hp   this.nodes[3].AfterReference dup hp 16 dump  .. [39;49m[32;49m
0x7fb6e79410c4    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. nl  this.nodes[3].AfterReference 1 =  [39;49m[33;40mthis[39;49m[34;49m.nodes[4].BeforeReference 2 =  this.nodes[3] hp   this.nodes[3].AfterReference dup hp 16 dump  th .. [39;49m[32;49m
0x7fb6e79410c7    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. [3].AfterReference 1 =  this.nodes[4].[39;49m[33;40mBeforeReference[39;49m[34;49m 2 =  this.nodes[3] hp   this.nodes[3].AfterReference dup hp 16 dump  this.nodes[4] hp .. [39;49m[32;49m
0x7fb6e79410cb    4881c048000000          add rax, 0x48                                          [39;49m
[34;49m .. ce 1 =  this.nodes[4].BeforeReference [39;49m[33;40m2[39;49m[34;49m =  this.nodes[3] hp   this.nodes[3].AfterReference dup hp 16 dump  this.nodes[4] hp   this.nodes[4] .. [39;49m[32;49m
0x7fb6e79410d2    48c7c102000000          mov rcx, 0x2                                           [39;49m
[34;49m ..  1 =  this.nodes[4].BeforeReference 2 [39;49m[33;40m=[39;49m[34;49m  this.nodes[3] hp   this.nodes[3].AfterReference dup hp 16 dump  this.nodes[4] hp   this.nodes[4].B .. [39;49m[32;49m
0x7fb6e79410d9    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. =  this.nodes[4].BeforeReference 2 =  [39;49m[33;40mthis[39;49m[34;49m.nodes[3] hp   this.nodes[3].AfterReference dup hp 16 dump  this.nodes[4] hp   this.nodes[4].Befo .. [39;49m[32;49m
0x7fb6e79410dc    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e79410e0    4881c030000000          add rax, 0x30                                          [39;49m[32;49m
0x7fb6e79410e7    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e79410eb    498906                  mov [r14], rax                                         [39;49m
[34;49m .. 4].BeforeReference 2 =  this.nodes[3] [39;49m[33;40mhp[39;49m[34;49m   this.nodes[3].AfterReference dup hp 16 dump  this.nodes[4] hp   this.nodes[4].BeforeReference du .. [39;49m[32;49m
0x7fb6e79410ee    49b987a493e7b67f0000    mov r9, 0x7fb6e793a487                                 [39;49m[32;49m
0x7fb6e79410f8    49ffd1                  call r9                    	< Int.[34;49mhp[39;49m : 0x00007fb6e793a487[32;49m >[39;49m[39;49m
[34;49m .. foreReference 2 =  this.nodes[3] hp   [39;49m[33;40mthis[39;49m[34;49m.nodes[3].AfterReference dup hp 16 dump  this.nodes[4] hp   this.nodes[4].BeforeReference dup hp  .. [39;49m[32;49m
0x7fb6e79410fb    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e79410ff    4881c030000000          add rax, 0x30                                          [39;49m[32;49m
0x7fb6e7941106    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fb6e794110a    498906                  mov [r14], rax                                         [39;49m
[34;49m .. [3] hp   this.nodes[3].AfterReference [39;49m[33;40mdup[39;49m[34;49m hp 16 dump  this.nodes[4] hp   this.nodes[4].BeforeReference dup hp 16 dump ;  .. [39;49m[32;49m
0x7fb6e794110d    498946f8                mov [r14-0x8], rax                                     [39;49m
[34;49m .. hp   this.nodes[3].AfterReference dup [39;49m[33;40mhp[39;49m[34;49m 16 dump  this.nodes[4] hp   this.nodes[4].BeforeReference dup hp 16 dump ;  .. [39;49m[32;49m
0x7fb6e7941111    49b987a493e7b67f0000    mov r9, 0x7fb6e793a487                                 [39;49m[32;49m
0x7fb6e794111b    49ffd1                  call r9                    	< Int.[34;49mhp[39;49m : 0x00007fb6e793a487[32;49m >[39;49m[39;49m
[34;49m ..   this.nodes[3].AfterReference dup hp [39;49m[33;40m16[39;49m[34;49m dump  this.nodes[4] hp   this.nodes[4].BeforeReference dup hp 16 dump ;  .. [39;49m[32;49m
0x7fb6e794111e    48c7c010000000          mov rax, 0x10                                          [39;49m[32;49m
0x7fb6e7941125    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7941129    498906                  mov [r14], rax                                         [39;49m
[34;49m .. his.nodes[3].AfterReference dup hp 16 [39;49m[33;40mdump[39;49m[34;49m  this.nodes[4] hp   this.nodes[4].BeforeReference dup hp 16 dump ;  .. [39;49m[32;49m
0x7fb6e794112c    49b830a480892d560000    mov r8, 0x562d8980a430                                 [39;49m[32;49m
0x7fb6e7941136    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e7941140    49ffd1                  call r9                    	< Debug.[34;49mdump[39;49m : 0x0000562d8980a430[32;49m >[39;49m[39;49m
[34;49m .. des[3].AfterReference dup hp 16 dump  [39;49m[33;40mthis[39;49m[34;49m.nodes[4] hp   this.nodes[4].BeforeReference dup hp 16 dump ;  .. [39;49m[32;49m
0x7fb6e7941143    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e7941147    4881c040000000          add rax, 0x40                                          [39;49m[32;49m
0x7fb6e794114e    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7941152    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ference dup hp 16 dump  this.nodes[4] [39;49m[33;40mhp[39;49m[34;49m   this.nodes[4].BeforeReference dup hp 16 dump ;  .. [39;49m[32;49m
0x7fb6e7941155    49b987a493e7b67f0000    mov r9, 0x7fb6e793a487                                 [39;49m[32;49m
0x7fb6e794115f    49ffd1                  call r9                    	< Int.[34;49mhp[39;49m : 0x00007fb6e793a487[32;49m >[39;49m[39;49m
[34;49m .. ce dup hp 16 dump  this.nodes[4] hp   [39;49m[33;40mthis[39;49m[34;49m.nodes[4].BeforeReference dup hp 16 dump ;  .. [39;49m[32;49m
0x7fb6e7941162    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. ump  this.nodes[4] hp   this.nodes[4].[39;49m[33;40mBeforeReference[39;49m[34;49m dup hp 16 dump ;  .. [39;49m[32;49m
0x7fb6e7941166    4881c048000000          add rax, 0x48                                          [39;49m[32;49m
0x7fb6e794116d    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fb6e7941171    498906                  mov [r14], rax                                         [39;49m
[34;49m .. 4] hp   this.nodes[4].BeforeReference [39;49m[33;40mdup[39;49m[34;49m hp 16 dump ;  .. [39;49m[32;49m
0x7fb6e7941174    498946f8                mov [r14-0x8], rax                                     [39;49m
[34;49m .. p   this.nodes[4].BeforeReference dup [39;49m[33;40mhp[39;49m[34;49m 16 dump ;  .. [39;49m[32;49m
0x7fb6e7941178    49b987a493e7b67f0000    mov r9, 0x7fb6e793a487                                 [39;49m[32;49m
0x7fb6e7941182    49ffd1                  call r9                    	< Int.[34;49mhp[39;49m : 0x00007fb6e793a487[32;49m >[39;49m[39;49m
[34;49m ..  this.nodes[4].BeforeReference dup hp [39;49m[33;40m16[39;49m[34;49m dump ;  .. [39;49m[32;49m
0x7fb6e7941185    48c7c010000000          mov rax, 0x10                                          [39;49m[32;49m
0x7fb6e794118c    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7941190    498906                  mov [r14], rax                                         [39;49m
[34;49m .. is.nodes[4].BeforeReference dup hp 16 [39;49m[33;40mdump[39;49m[34;49m ;  .. [39;49m[32;49m
0x7fb6e7941193    49b830a480892d560000    mov r8, 0x562d8980a430                                 [39;49m[32;49m
0x7fb6e794119d    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e79411a7    49ffd1                  call r9                    	< Debug.[34;49mdump[39;49m : 0x0000562d8980a430[32;49m >[39;49m[39;49m
[34;49m .. des[4].BeforeReference dup hp 16 dump [39;49m[33;40m;[39;49m[34;49m  .. [39;49m[32;49m
0x7fb6e79411aa    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e79411ae    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e79411b2    4983ee08                sub r14, 0x8                                           [39;49m[32;49m
0x7fb6e79411b6    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'tnax1' :: codeSize = 352
Word : 0x00007fb6e75419b8 :: Compiled at : 0x00007fb6e7941056
 =============================
::> 'wdiss' was called at namespaces/test/arrayTest.csl 136.19 <::

 0x00007fb6e73c1340
 0x00007fb6e73c1370 0x00007fb6e73c1370
Dump at : namespaces/test/arrayTest.csl : 139.13 :
Dump : Address = 0x00007fb6e73c1370 : Number = 16 :: (little endian dump)
0x00007fb6e73c1370 :  01 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
 0x00007fb6e73c1380 0x00007fb6e73c1388
Dump at : namespaces/test/arrayTest.csl : 139.13 :
Dump : Address = 0x00007fb6e73c1388 : Number = 16 :: (little endian dump)
0x00007fb6e73c1388 :  02 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
 arr1 :  namespaces/test/arrayTest.csl 145.22
Dump at : namespaces/test/arrayTest.csl : 145.39 :
Dump : Address = 0x00007fb6e73c18b0 : Number = 32 :: (little endian dump)
0x00007fb6e73c18b0 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73c18c0 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
 arr1 :  namespaces/test/arrayTest.csl 150.22
Dump at : namespaces/test/arrayTest.csl : 150.39 :
Dump : Address = 0x00007fb6e73c18b0 : Number = 32 :: (little endian dump)
0x00007fb6e73c18b0 :  89 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73c18c0 :  00 00 00 00 00 00 00 00  89 00 00 00 00 00 00 00  ........ ........ 

 =============================
Ar1.[34;49marr2[39;49m <:> csl compiled word
SourceCode for Ar1.[34;49marr2[39;49m :> 
[34;49m: arr2 ( Ar1 a ) a.ar[1] a.ar[3] @ = a.ar[2] a.ar[3] @ = a.ar[1] @ dup decimal p 0x89 _assert ; [39;49m
Source code file location of [34;49marr2[39;49m : "namespaces/test/arrayTest.csl" : 151.2 :: we are now at : namespaces/test/arrayTest.csl : 157.18
Compiled with : optimizeOn, inlineOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xe79411bc -- code size = 172 bytes
TypeSignature : Object 
 -----------------------------
Word :: Ar1.[34;49marr2[39;49m : definition = 0x00007fb6e79411bc : disassembly at namespaces/test/arrayTest.csl : 157.18 :
[34;49m ..                                     : [39;49m[33;40marr2[39;49m[34;49m ( Ar1 a )  a.ar[1] a.ar[3] @ =  a.ar[2] a.ar[3] @ =  a.ar[1] @ dup decimal p 0x89 _assert  ;  .. [39;49m[32;49m
0x7fb6e79411bc    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fb6e79411c0    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e79411c4    4981c608000000          add r14, 0x8                                           [39;49m
[34;49m ..                     : arr2 ( Ar1 a )  [39;49m[33;40ma[39;49m[34;49m.ar[1] a.ar[3] @ =  a.ar[2] a.ar[3] @ =  a.ar[1] @ dup decimal p 0x89 _assert  ;  .. [39;49m[32;49m
0x7fb6e79411cb    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e79411cf    4881c008000000          add rax, 0x8                                           [39;49m
[34;49m ..             : arr2 ( Ar1 a )  a.ar[1] [39;49m[33;40ma[39;49m[34;49m.ar[3] @ =  a.ar[2] a.ar[3] @ =  a.ar[1] @ dup decimal p 0x89 _assert  ;  .. [39;49m[32;49m
0x7fb6e79411d6    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e79411da    4881c118000000          add rcx, 0x18                                          [39;49m[32;49m
0x7fb6e79411e1    488b09                  mov rcx, [rcx]                                         [39;49m
[34;49m ..   : arr2 ( Ar1 a )  a.ar[1] a.ar[3] @ [39;49m[33;40m=[39;49m[34;49m  a.ar[2] a.ar[3] @ =  a.ar[1] @ dup decimal p 0x89 _assert  ;  .. [39;49m[32;49m
0x7fb6e79411e4    488908                  mov [rax], rcx                                         [39;49m
[34;49m   : arr2 ( Ar1 a )  a.ar[1] a.ar[3] @ =  [39;49m[33;40ma[39;49m[34;49m.ar[2] a.ar[3] @ =  a.ar[1] @ dup decimal p 0x89 _assert  ;  .. [39;49m[32;49m
0x7fb6e79411e7    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e79411eb    4881c010000000          add rax, 0x10                                          [39;49m
[34;49m .. Ar1 a )  a.ar[1] a.ar[3] @ =  a.ar[2] [39;49m[33;40ma[39;49m[34;49m.ar[3] @ =  a.ar[1] @ dup decimal p 0x89 _assert  ; [39;49m[32;49m
0x7fb6e79411f2    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e79411f6    4881c118000000          add rcx, 0x18                                          [39;49m[32;49m
0x7fb6e79411fd    488b09                  mov rcx, [rcx]                                         [39;49m
[34;49m .. .ar[1] a.ar[3] @ =  a.ar[2] a.ar[3] @ [39;49m[33;40m=[39;49m[34;49m  a.ar[1] @ dup decimal p 0x89 _assert  ; [39;49m[32;49m
0x7fb6e7941200    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. [1] a.ar[3] @ =  a.ar[2] a.ar[3] @ =  [39;49m[33;40ma[39;49m[34;49m.ar[1] @ dup decimal p 0x89 _assert  ; [39;49m[32;49m
0x7fb6e7941203    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e7941207    4881c008000000          add rax, 0x8                                           [39;49m[32;49m
0x7fb6e794120e    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fb6e7941211    4983c610                add r14, 0x10                                          [39;49m
[34;49m .. .ar[3] @ =  a.ar[2] a.ar[3] @ =  a.ar[[39;49m[33;40m1[39;49m[34;49m] @ dup decimal p 0x89 _assert  ; [39;49m[32;49m
0x7fb6e7941215    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ] @ =  a.ar[2] a.ar[3] @ =  a.ar[1] @ [39;49m[33;40mdup[39;49m[34;49m decimal p 0x89 _assert  ; [39;49m[32;49m
0x7fb6e7941218    498946f8                mov [r14-0x8], rax                                     [39;49m
[34;49m .. =  a.ar[2] a.ar[3] @ =  a.ar[1] @ dup [39;49m[33;40mdecimal[39;49m[34;49m p 0x89 _assert  ; [39;49m[32;49m
0x7fb6e794121c    49b810a480892d560000    mov r8, 0x562d8980a410                                 [39;49m[32;49m
0x7fb6e7941226    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e7941230    49ffd1                  call r9                    	< System.[34;49mdecimal[39;49m : 0x0000562d8980a410[32;49m >[39;49m[39;49m
[34;49m .. 2] a.ar[3] @ =  a.ar[1] @ dup decimal [39;49m[33;40mp[39;49m[34;49m 0x89 _assert  ; [39;49m[32;49m
0x7fb6e7941233    49b944a493e7b67f0000    mov r9, 0x7fb6e793a444                                 [39;49m[32;49m
0x7fb6e794123d    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fb6e793a444[32;49m >[39;49m[39;49m
[34;49m ..  a.ar[3] @ =  a.ar[1] @ dup decimal p [39;49m[33;40m0x89[39;49m[34;49m _assert  ; [39;49m[32;49m
0x7fb6e7941240    48c7c089000000          mov rax, 0x89                                          [39;49m[32;49m
0x7fb6e7941247    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e794124b    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e794124e    49b9dfbc93e7b67f0000    mov r9, 0x7fb6e793bcdf                                 [39;49m[32;49m
0x7fb6e7941258    49ffd1                  call r9                    	< System.[34;49m_assert0[39;49m : 0x00007fb6e793bcdf[32;49m >[39;49m[39;49m
[34;49m .. a.ar[1] @ dup decimal p 0x89 _assert  [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fb6e794125b    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e794125f    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e7941263    4983ee08                sub r14, 0x8                                           [39;49m[32;49m
0x7fb6e7941267    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'arr2' :: codeSize = 171
Word : 0x00007fb6e75470c8 :: Compiled at : 0x00007fb6e79411bc
 =============================
::> 'wdiss' was called at namespaces/test/arrayTest.csl 157.18 <::
 137 
arr1 :  namespaces/test/arrayTest.csl 159.24
Dump at : namespaces/test/arrayTest.csl : 159.41 :
Dump : Address = 0x00007fb6e73c18b0 : Number = 32 :: (little endian dump)
0x00007fb6e73c18b0 :  89 00 00 00 00 00 00 00  89 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73c18c0 :  89 00 00 00 00 00 00 00  89 00 00 00 00 00 00 00  ........ ........ 

 =============================
Ar1.[34;49ma3[39;49m <:> csl compiled word
SourceCode for Ar1.[34;49ma3[39;49m :> 
[34;49m: a3 ( n Ar1 a ) a.ar [n @ 1 +] a.ar[n @ 2 +] @ = a.ar[ n @ 1 +] @ dup hp 0x89 _assert decimal a.ar[2] @ dup hp 0x89 _assert decimal ; [39;49m
Source code file location of [34;49ma3[39;49m : "namespaces/test/arrayTest.csl" : 161.2 :: we are now at : namespaces/test/arrayTest.csl : 166.16
Compiled with : optimizeOn, inlineOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xe794126d -- code size = 350 bytes
TypeSignature : 
 -----------------------------
Word :: Ar1.[34;49ma3[39;49m : definition = 0x00007fb6e794126d : disassembly at namespaces/test/arrayTest.csl : 166.16 :
[34;49m ..                                     : [39;49m[33;40ma3[39;49m[34;49m ( n Ar1 a )  a.ar [n @ 1 +] a.ar[n @ 2 +] @ =  a.ar[ n @ 1 +] @ dup hp 0x89 _assert decimal a.ar[2 .. [39;49m[32;49m
0x7fb6e794126d    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fb6e7941271    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e7941275    4981c608000000          add r14, 0x8                                           [39;49m
[34;49m ..                     : a3 ( n Ar1 a )  [39;49m[33;40ma[39;49m[34;49m.ar [n @ 1 +] a.ar[n @ 2 +] @ =  a.ar[ n @ 1 +] @ dup hp 0x89 _assert decimal a.ar[2] @ dup hp 0x89  .. [39;49m[32;49m
0x7fb6e794127c    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e7941280    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fb6e7941287    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e794128b    498906                  mov [r14], rax                                         [39;49m
[34;49m ..               : a3 ( n Ar1 a )  a.ar [[39;49m[33;40mn[39;49m[34;49m @ 1 +] a.ar[n @ 2 +] @ =  a.ar[ n @ 1 +] @ dup hp 0x89 _assert decimal a.ar[2] @ dup hp 0x89 _asser .. [39;49m[32;49m
0x7fb6e794128e    498b47f0                mov rax, [r15-0x10]                                    [39;49m
[34;49m ..           : a3 ( n Ar1 a )  a.ar [n @ [39;49m[33;40m1[39;49m[34;49m +] a.ar[n @ 2 +] @ =  a.ar[ n @ 1 +] @ dup hp 0x89 _assert decimal a.ar[2] @ dup hp 0x89 _assert de .. [39;49m[32;49m
0x7fb6e7941292    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m ..         : a3 ( n Ar1 a )  a.ar [n @ 1 [39;49m[33;40m+[39;49m[34;49m] a.ar[n @ 2 +] @ =  a.ar[ n @ 1 +] @ dup hp 0x89 _assert decimal a.ar[2] @ dup hp 0x89 _assert deci .. [39;49m[32;49m
0x7fb6e7941299    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fb6e794129c    486bc008                imul rax, rax, 0x8                                     [39;49m[32;49m
0x7fb6e79412a0    490106                  add [r14], rax                                         [39;49m
[34;49m ..      : a3 ( n Ar1 a )  a.ar [n @ 1 +] [39;49m[33;40ma[39;49m[34;49m.ar[n @ 2 +] @ =  a.ar[ n @ 1 +] @ dup hp 0x89 _assert decimal a.ar[2] @ dup hp 0x89 _assert decimal .. [39;49m[32;49m
0x7fb6e79412a3    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e79412a7    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fb6e79412ae    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e79412b2    498906                  mov [r14], rax                                         [39;49m
[34;49m .. : a3 ( n Ar1 a )  a.ar [n @ 1 +] a.ar[[39;49m[33;40mn[39;49m[34;49m @ 2 +] @ =  a.ar[ n @ 1 +] @ dup hp 0x89 _assert decimal a.ar[2] @ dup hp 0x89 _assert decimal ;  .. [39;49m[32;49m
0x7fb6e79412b5    498b47f0                mov rax, [r15-0x10]                                    [39;49m
[34;49m: a3 ( n Ar1 a )  a.ar [n @ 1 +] a.ar[n @ [39;49m[33;40m2[39;49m[34;49m +] @ =  a.ar[ n @ 1 +] @ dup hp 0x89 _assert decimal a.ar[2] @ dup hp 0x89 _assert decimal ;  .. [39;49m[32;49m
0x7fb6e79412b9    48c7c102000000          mov rcx, 0x2                                           [39;49m
[34;49m ..  n Ar1 a )  a.ar [n @ 1 +] a.ar[n @ 2 [39;49m[33;40m+[39;49m[34;49m] @ =  a.ar[ n @ 1 +] @ dup hp 0x89 _assert decimal a.ar[2] @ dup hp 0x89 _assert decimal ; [39;49m[32;49m
0x7fb6e79412c0    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fb6e79412c3    486bc008                imul rax, rax, 0x8                                     [39;49m[32;49m
0x7fb6e79412c7    490106                  add [r14], rax                                         [39;49m
[34;49m .. Ar1 a )  a.ar [n @ 1 +] a.ar[n @ 2 +] [39;49m[33;40m@[39;49m[34;49m =  a.ar[ n @ 1 +] @ dup hp 0x89 _assert decimal a.ar[2] @ dup hp 0x89 _assert decimal ; [39;49m[32;49m
0x7fb6e79412ca    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fb6e79412cd    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fb6e79412d0    498906                  mov [r14], rax                                         [39;49m
[34;49m .. 1 a )  a.ar [n @ 1 +] a.ar[n @ 2 +] @ [39;49m[33;40m=[39;49m[34;49m  a.ar[ n @ 1 +] @ dup hp 0x89 _assert decimal a.ar[2] @ dup hp 0x89 _assert decimal ; [39;49m[32;49m
0x7fb6e79412d3    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fb6e79412d6    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fb6e79412da    488908                  mov [rax], rcx                                         [39;49m[32;49m
0x7fb6e79412dd    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m ..  )  a.ar [n @ 1 +] a.ar[n @ 2 +] @ =  [39;49m[33;40ma[39;49m[34;49m.ar[ n @ 1 +] @ dup hp 0x89 _assert decimal a.ar[2] @ dup hp 0x89 _assert decimal ; [39;49m[32;49m
0x7fb6e79412e1    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e79412e5    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fb6e79412ec    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e79412f0    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ar [n @ 1 +] a.ar[n @ 2 +] @ =  a.ar[ [39;49m[33;40mn[39;49m[34;49m @ 1 +] @ dup hp 0x89 _assert decimal a.ar[2] @ dup hp 0x89 _assert decimal ; [39;49m[32;49m
0x7fb6e79412f3    498b47f0                mov rax, [r15-0x10]                                    [39;49m
[34;49m .. n @ 1 +] a.ar[n @ 2 +] @ =  a.ar[ n @ [39;49m[33;40m1[39;49m[34;49m +] @ dup hp 0x89 _assert decimal a.ar[2] @ dup hp 0x89 _assert decimal ; [39;49m[32;49m
0x7fb6e79412f7    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m .. @ 1 +] a.ar[n @ 2 +] @ =  a.ar[ n @ 1 [39;49m[33;40m+[39;49m[34;49m] @ dup hp 0x89 _assert decimal a.ar[2] @ dup hp 0x89 _assert decimal ; [39;49m[32;49m
0x7fb6e79412fe    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fb6e7941301    486bc008                imul rax, rax, 0x8                                     [39;49m[32;49m
0x7fb6e7941305    490106                  add [r14], rax                                         [39;49m
[34;49m ..  +] a.ar[n @ 2 +] @ =  a.ar[ n @ 1 +] [39;49m[33;40m@[39;49m[34;49m dup hp 0x89 _assert decimal a.ar[2] @ dup hp 0x89 _assert decimal ; [39;49m[32;49m
0x7fb6e7941308    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fb6e794130b    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fb6e794130e    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ] a.ar[n @ 2 +] @ =  a.ar[ n @ 1 +] @ [39;49m[33;40mdup[39;49m[34;49m hp 0x89 _assert decimal a.ar[2] @ dup hp 0x89 _assert decimal ; [39;49m[32;49m
0x7fb6e7941311    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fb6e7941314    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7941318    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ar[n @ 2 +] @ =  a.ar[ n @ 1 +] @ dup [39;49m[33;40mhp[39;49m[34;49m 0x89 _assert decimal a.ar[2] @ dup hp 0x89 _assert decimal ; [39;49m[32;49m
0x7fb6e794131b    49b987a493e7b67f0000    mov r9, 0x7fb6e793a487                                 [39;49m[32;49m
0x7fb6e7941325    49ffd1                  call r9                    	< Int.[34;49mhp[39;49m : 0x00007fb6e793a487[32;49m >[39;49m[39;49m
[34;49m .. n @ 2 +] @ =  a.ar[ n @ 1 +] @ dup hp [39;49m[33;40m0x89[39;49m[34;49m _assert decimal a.ar[2] @ dup hp 0x89 _assert decimal ; [39;49m[32;49m
0x7fb6e7941328    48c7c089000000          mov rax, 0x89                                          [39;49m[32;49m
0x7fb6e794132f    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7941333    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e7941336    49b9dfbc93e7b67f0000    mov r9, 0x7fb6e793bcdf                                 [39;49m[32;49m
0x7fb6e7941340    49ffd1                  call r9                    	< System.[34;49m_assert0[39;49m : 0x00007fb6e793bcdf[32;49m >[39;49m[39;49m
[34;49m ..  a.ar[ n @ 1 +] @ dup hp 0x89 _assert [39;49m[33;40mdecimal[39;49m[34;49m a.ar[2] @ dup hp 0x89 _assert decimal ; [39;49m[32;49m
0x7fb6e7941343    49b810a480892d560000    mov r8, 0x562d8980a410                                 [39;49m[32;49m
0x7fb6e794134d    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e7941357    49ffd1                  call r9                    	< System.[34;49mdecimal[39;49m : 0x0000562d8980a410[32;49m >[39;49m[39;49m
[34;49m ..  @ 1 +] @ dup hp 0x89 _assert decimal [39;49m[33;40ma[39;49m[34;49m.ar[2] @ dup hp 0x89 _assert decimal ; [39;49m[32;49m
0x7fb6e794135a    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e794135e    4881c010000000          add rax, 0x10                                          [39;49m[32;49m
0x7fb6e7941365    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7941369    498906                  mov [r14], rax                                         [39;49m
[34;49m .. @ dup hp 0x89 _assert decimal a.ar[2] [39;49m[33;40m@[39;49m[34;49m dup hp 0x89 _assert decimal ; [39;49m[32;49m
0x7fb6e794136c    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fb6e794136f    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fb6e7941372    498906                  mov [r14], rax                                         [39;49m
[34;49m .. dup hp 0x89 _assert decimal a.ar[2] @ [39;49m[33;40mdup[39;49m[34;49m hp 0x89 _assert decimal ; [39;49m[32;49m
0x7fb6e7941375    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fb6e7941378    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e794137c    498906                  mov [r14], rax                                         [39;49m
[34;49m .. hp 0x89 _assert decimal a.ar[2] @ dup [39;49m[33;40mhp[39;49m[34;49m 0x89 _assert decimal ; [39;49m[32;49m
0x7fb6e794137f    49b987a493e7b67f0000    mov r9, 0x7fb6e793a487                                 [39;49m[32;49m
0x7fb6e7941389    49ffd1                  call r9                    	< Int.[34;49mhp[39;49m : 0x00007fb6e793a487[32;49m >[39;49m[39;49m
[34;49m .. 0x89 _assert decimal a.ar[2] @ dup hp [39;49m[33;40m0x89[39;49m[34;49m _assert decimal ; [39;49m[32;49m
0x7fb6e794138c    48c7c089000000          mov rax, 0x89                                          [39;49m[32;49m
0x7fb6e7941393    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7941397    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e794139a    49b9dfbc93e7b67f0000    mov r9, 0x7fb6e793bcdf                                 [39;49m[32;49m
0x7fb6e79413a4    49ffd1                  call r9                    	< System.[34;49m_assert0[39;49m : 0x00007fb6e793bcdf[32;49m >[39;49m[39;49m
[34;49m .. decimal a.ar[2] @ dup hp 0x89 _assert [39;49m[33;40mdecimal[39;49m[34;49m ; [39;49m[32;49m
0x7fb6e79413a7    49b810a480892d560000    mov r8, 0x562d8980a410                                 [39;49m[32;49m
0x7fb6e79413b1    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e79413bb    49ffd1                  call r9                    	< System.[34;49mdecimal[39;49m : 0x0000562d8980a410[32;49m >[39;49m[39;49m
[34;49m .. a.ar[2] @ dup hp 0x89 _assert decimal [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fb6e79413be    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e79413c2    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e79413c6    4983ee10                sub r14, 0x10                                          [39;49m[32;49m
0x7fb6e79413ca    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'a3' :: codeSize = 349
Word : 0x00007fb6e7549fa0 :: Compiled at : 0x00007fb6e794126d
 =============================
::> 'wdiss' was called at namespaces/test/arrayTest.csl 166.16 <::
 0x0000000000000089 0x0000000000000089 a4 :  namespaces/test/arrayTest.csl 172.20
Dump at : namespaces/test/arrayTest.csl : 172.35 :
Dump : Address = 0x00007fb6e73c3ea0 : Number = 128 :: (little endian dump)
0x00007fb6e73c3ea0 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73c3eb0 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73c3ec0 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73c3ed0 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73c3ee0 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73c3ef0 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73c3f00 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73c3f10 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
 a4 :  namespaces/test/arrayTest.csl 174.20
Dump at : namespaces/test/arrayTest.csl : 174.35 :
Dump : Address = 0x00007fb6e73c3ea0 : Number = 128 :: (little endian dump)
0x00007fb6e73c3ea0 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73c3eb0 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73c3ec0 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73c3ed0 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73c3ee0 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73c3ef0 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73c3f00 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73c3f10 :  89 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 

 =============================
Ar2.[34;49ma5[39;49m <:> csl compiled word
SourceCode for Ar2.[34;49ma5[39;49m :> 
[34;49m: a5 ( n m Ar2 a ) a.ar[n @ 1 +][m @] a.ar[n @ 2 +][m @] @ = nl "a4 : " ps location a a.size @ dump a.ar[n @ 1 +][m @] @ dup hp 0x89 _assert ; [39;49m
Source code file location of [34;49ma5[39;49m : "namespaces/test/arrayTest.csl" : 175.2 :: we are now at : namespaces/test/arrayTest.csl : 180.16
Compiled with : optimizeOn, inlineOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xe79413d0 -- code size = 405 bytes
TypeSignature : 
 -----------------------------
Word :: Ar2.[34;49ma5[39;49m : definition = 0x00007fb6e79413d0 : disassembly at namespaces/test/arrayTest.csl : 180.16 :
[34;49m ..                                     : [39;49m[33;40ma5[39;49m[34;49m ( n m Ar2 a )  a.ar[n @ 1 +][m @] a.ar[n @ 2 +][m @] @ =  nl "a4 : " ps location a a.size @ dump a .. [39;49m[32;49m
0x7fb6e79413d0    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fb6e79413d4    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e79413d8    4981c608000000          add r14, 0x8                                           [39;49m
[34;49m ..                   : a5 ( n m Ar2 a )  [39;49m[33;40ma[39;49m[34;49m.ar[n @ 1 +][m @] a.ar[n @ 2 +][m @] @ =  nl "a4 : " ps location a a.size @ dump a.ar[n @ 1 +][m @]  .. [39;49m[32;49m
0x7fb6e79413df    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e79413e3    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fb6e79413ea    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e79413ee    498906                  mov [r14], rax                                         [39;49m
[34;49m ..              : a5 ( n m Ar2 a )  a.ar[[39;49m[33;40mn[39;49m[34;49m @ 1 +][m @] a.ar[n @ 2 +][m @] @ =  nl "a4 : " ps location a a.size @ dump a.ar[n @ 1 +][m @] @ dup .. [39;49m[32;49m
0x7fb6e79413f1    498b47e8                mov rax, [r15-0x18]                                    [39;49m
[34;49m ..          : a5 ( n m Ar2 a )  a.ar[n @ [39;49m[33;40m1[39;49m[34;49m +][m @] a.ar[n @ 2 +][m @] @ =  nl "a4 : " ps location a a.size @ dump a.ar[n @ 1 +][m @] @ dup hp  .. [39;49m[32;49m
0x7fb6e79413f5    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m ..        : a5 ( n m Ar2 a )  a.ar[n @ 1 [39;49m[33;40m+[39;49m[34;49m][m @] a.ar[n @ 2 +][m @] @ =  nl "a4 : " ps location a a.size @ dump a.ar[n @ 1 +][m @] @ dup hp 0x .. [39;49m[32;49m
0x7fb6e79413fc    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fb6e79413ff    486bc020                imul rax, rax, 0x20                                    [39;49m[32;49m
0x7fb6e7941403    490106                  add [r14], rax                                         [39;49m
[34;49m ..     : a5 ( n m Ar2 a )  a.ar[n @ 1 +][[39;49m[33;40mm[39;49m[34;49m @] a.ar[n @ 2 +][m @] @ =  nl "a4 : " ps location a a.size @ dump a.ar[n @ 1 +][m @] @ dup hp 0x89  .. [39;49m[32;49m
0x7fb6e7941406    498b47f0                mov rax, [r15-0x10]                                    [39;49m[32;49m
0x7fb6e794140a    486bc008                imul rax, rax, 0x8                                     [39;49m[32;49m
0x7fb6e794140e    490106                  add [r14], rax                                         [39;49m
[34;49m   : a5 ( n m Ar2 a )  a.ar[n @ 1 +][m @] [39;49m[33;40ma[39;49m[34;49m.ar[n @ 2 +][m @] @ =  nl "a4 : " ps location a a.size @ dump a.ar[n @ 1 +][m @] @ dup hp 0x89 _asse .. [39;49m[32;49m
0x7fb6e7941411    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e7941415    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fb6e794141c    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7941420    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  n m Ar2 a )  a.ar[n @ 1 +][m @] a.ar[[39;49m[33;40mn[39;49m[34;49m @ 2 +][m @] @ =  nl "a4 : " ps location a a.size @ dump a.ar[n @ 1 +][m @] @ dup hp 0x89 _assert  ; [39;49m[32;49m
0x7fb6e7941423    498b47e8                mov rax, [r15-0x18]                                    [39;49m
[34;49m ..  Ar2 a )  a.ar[n @ 1 +][m @] a.ar[n @ [39;49m[33;40m2[39;49m[34;49m +][m @] @ =  nl "a4 : " ps location a a.size @ dump a.ar[n @ 1 +][m @] @ dup hp 0x89 _assert  ; [39;49m[32;49m
0x7fb6e7941427    48c7c102000000          mov rcx, 0x2                                           [39;49m
[34;49m .. r2 a )  a.ar[n @ 1 +][m @] a.ar[n @ 2 [39;49m[33;40m+[39;49m[34;49m][m @] @ =  nl "a4 : " ps location a a.size @ dump a.ar[n @ 1 +][m @] @ dup hp 0x89 _assert  ; [39;49m[32;49m
0x7fb6e794142e    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fb6e7941431    486bc020                imul rax, rax, 0x20                                    [39;49m[32;49m
0x7fb6e7941435    490106                  add [r14], rax                                         [39;49m
[34;49m .. a )  a.ar[n @ 1 +][m @] a.ar[n @ 2 +][[39;49m[33;40mm[39;49m[34;49m @] @ =  nl "a4 : " ps location a a.size @ dump a.ar[n @ 1 +][m @] @ dup hp 0x89 _assert  ; [39;49m[32;49m
0x7fb6e7941438    498b47f0                mov rax, [r15-0x10]                                    [39;49m[32;49m
0x7fb6e794143c    486bc008                imul rax, rax, 0x8                                     [39;49m[32;49m
0x7fb6e7941440    490106                  add [r14], rax                                         [39;49m
[34;49m .. a.ar[n @ 1 +][m @] a.ar[n @ 2 +][m @] [39;49m[33;40m@[39;49m[34;49m =  nl "a4 : " ps location a a.size @ dump a.ar[n @ 1 +][m @] @ dup hp 0x89 _assert  ; [39;49m[32;49m
0x7fb6e7941443    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fb6e7941446    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fb6e7941449    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ar[n @ 1 +][m @] a.ar[n @ 2 +][m @] @ [39;49m[33;40m=[39;49m[34;49m  nl "a4 : " ps location a a.size @ dump a.ar[n @ 1 +][m @] @ dup hp 0x89 _assert  ; [39;49m[32;49m
0x7fb6e794144c    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fb6e794144f    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fb6e7941453    488908                  mov [rax], rcx                                         [39;49m[32;49m
0x7fb6e7941456    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m .. n @ 1 +][m @] a.ar[n @ 2 +][m @] @ =  [39;49m[33;40mnl[39;49m[34;49m "a4 : " ps location a a.size @ dump a.ar[n @ 1 +][m @] @ dup hp 0x89 _assert  ; [39;49m[32;49m
0x7fb6e794145a    49b8e08080892d560000    mov r8, 0x562d898080e0                                 [39;49m[32;49m
0x7fb6e7941464    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e794146e    49ffd1                  call r9                    	< Io.[34;49mnewline[39;49m : 0x0000562d898080e0[32;49m >[39;49m[39;49m
[34;49m ..  1 +][m @] a.ar[n @ 2 +][m @] @ =  nl [39;49m[33;40m"[39;49m[34;49ma4 : " ps location a a.size @ dump a.ar[n @ 1 +][m @] @ dup hp 0x89 _assert  ; [39;49m[32;49m
0x7fb6e7941471    48b8a3357ee7b67f0000    mov rax, 0x7fb6e77e35a3    	[32;49m< string : '[39;49m[39;49ma4 : [39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fb6e794147b    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e794147f    498906                  mov [r14], rax                                         [39;49m
[34;49m .. @] a.ar[n @ 2 +][m @] @ =  nl "a4 : " [39;49m[33;40mps[39;49m[34;49m location a a.size @ dump a.ar[n @ 1 +][m @] @ dup hp 0x89 _assert  ; [39;49m[32;49m
0x7fb6e7941482    49b97da393e7b67f0000    mov r9, 0x7fb6e793a37d                                 [39;49m[32;49m
0x7fb6e794148c    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fb6e793a37d[32;49m >[39;49m[39;49m
[34;49m .. a.ar[n @ 2 +][m @] @ =  nl "a4 : " ps [39;49m[33;40mlocation[39;49m[34;49m a a.size @ dump a.ar[n @ 1 +][m @] @ dup hp 0x89 _assert  ; [39;49m[32;49m
0x7fb6e794148f    49b91fb093e7b67f0000    mov r9, 0x7fb6e793b01f                                 [39;49m[32;49m
0x7fb6e7941499    49ffd1                  call r9                    	< System.[34;49mlocation[39;49m : 0x00007fb6e793b01f[32;49m >[39;49m[39;49m
[34;49m .. 2 +][m @] @ =  nl "a4 : " ps location [39;49m[33;40ma[39;49m[34;49m a.size @ dump a.ar[n @ 1 +][m @] @ dup hp 0x89 _assert  ; [39;49m[32;49m
0x7fb6e794149c    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e79414a0    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fb6e79414a7    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e79414ab    498906                  mov [r14], rax                                         [39;49m
[34;49m .. +][m @] @ =  nl "a4 : " ps location a [39;49m[33;40ma[39;49m[34;49m.size @ dump a.ar[n @ 1 +][m @] @ dup hp 0x89 _assert  ; [39;49m[32;49m
0x7fb6e79414ae    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e79414b2    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fb6e79414b9    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e79414bd    498906                  mov [r14], rax                                         [39;49m
[34;49m .. [m @] @ =  nl "a4 : " ps location a a.[39;49m[33;40msize[39;49m[34;49m @ dump a.ar[n @ 1 +][m @] @ dup hp 0x89 _assert  ; [39;49m[32;49m
0x7fb6e79414c0    48b890d254e7b67f0000    mov rax, 0x7fb6e754d290                                [39;49m[32;49m
0x7fb6e79414ca    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fb6e79414cd    4983c608                add r14, 0x8                                           [39;49m
[34;49m ..  @ =  nl "a4 : " ps location a a.size [39;49m[33;40m@[39;49m[34;49m dump a.ar[n @ 1 +][m @] @ dup hp 0x89 _assert  ; [39;49m[32;49m
0x7fb6e79414d1    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  =  nl "a4 : " ps location a a.size @ [39;49m[33;40mdump[39;49m[34;49m a.ar[n @ 1 +][m @] @ dup hp 0x89 _assert  ; [39;49m[32;49m
0x7fb6e79414d4    49b830a480892d560000    mov r8, 0x562d8980a430                                 [39;49m[32;49m
0x7fb6e79414de    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e79414e8    49ffd1                  call r9                    	< Debug.[34;49mdump[39;49m : 0x0000562d8980a430[32;49m >[39;49m[39;49m
[34;49m .. l "a4 : " ps location a a.size @ dump [39;49m[33;40ma[39;49m[34;49m.ar[n @ 1 +][m @] @ dup hp 0x89 _assert  ; [39;49m[32;49m
0x7fb6e79414eb    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e79414ef    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fb6e79414f6    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e79414fa    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  : " ps location a a.size @ dump a.ar[[39;49m[33;40mn[39;49m[34;49m @ 1 +][m @] @ dup hp 0x89 _assert  ; [39;49m[32;49m
0x7fb6e79414fd    498b47e8                mov rax, [r15-0x18]                                    [39;49m
[34;49m ..  ps location a a.size @ dump a.ar[n @ [39;49m[33;40m1[39;49m[34;49m +][m @] @ dup hp 0x89 _assert  ; [39;49m[32;49m
0x7fb6e7941501    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m .. s location a a.size @ dump a.ar[n @ 1 [39;49m[33;40m+[39;49m[34;49m][m @] @ dup hp 0x89 _assert  ; [39;49m[32;49m
0x7fb6e7941508    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fb6e794150b    486bc020                imul rax, rax, 0x20                                    [39;49m[32;49m
0x7fb6e794150f    490106                  add [r14], rax                                         [39;49m
[34;49m .. ocation a a.size @ dump a.ar[n @ 1 +][[39;49m[33;40mm[39;49m[34;49m @] @ dup hp 0x89 _assert  ; [39;49m[32;49m
0x7fb6e7941512    498b47f0                mov rax, [r15-0x10]                                    [39;49m[32;49m
0x7fb6e7941516    486bc008                imul rax, rax, 0x8                                     [39;49m[32;49m
0x7fb6e794151a    490106                  add [r14], rax                                         [39;49m
[34;49m .. on a a.size @ dump a.ar[n @ 1 +][m @] [39;49m[33;40m@[39;49m[34;49m dup hp 0x89 _assert  ; [39;49m[32;49m
0x7fb6e794151d    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fb6e7941520    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fb6e7941523    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  a a.size @ dump a.ar[n @ 1 +][m @] @ [39;49m[33;40mdup[39;49m[34;49m hp 0x89 _assert  ; [39;49m[32;49m
0x7fb6e7941526    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fb6e7941529    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e794152d    498906                  mov [r14], rax                                         [39;49m
[34;49m .. .size @ dump a.ar[n @ 1 +][m @] @ dup [39;49m[33;40mhp[39;49m[34;49m 0x89 _assert  ; [39;49m[32;49m
0x7fb6e7941530    49b987a493e7b67f0000    mov r9, 0x7fb6e793a487                                 [39;49m[32;49m
0x7fb6e794153a    49ffd1                  call r9                    	< Int.[34;49mhp[39;49m : 0x00007fb6e793a487[32;49m >[39;49m[39;49m
[34;49m .. ze @ dump a.ar[n @ 1 +][m @] @ dup hp [39;49m[33;40m0x89[39;49m[34;49m _assert  ; [39;49m[32;49m
0x7fb6e794153d    48c7c089000000          mov rax, 0x89                                          [39;49m[32;49m
0x7fb6e7941544    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7941548    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e794154b    49b9dfbc93e7b67f0000    mov r9, 0x7fb6e793bcdf                                 [39;49m[32;49m
0x7fb6e7941555    49ffd1                  call r9                    	< System.[34;49m_assert0[39;49m : 0x00007fb6e793bcdf[32;49m >[39;49m[39;49m
[34;49m .. [n @ 1 +][m @] @ dup hp 0x89 _assert  [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fb6e7941558    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e794155c    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e7941560    4983ee18                sub r14, 0x18                                          [39;49m[32;49m
0x7fb6e7941564    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'a5' :: codeSize = 404
Word : 0x00007fb6e754d948 :: Compiled at : 0x00007fb6e79413d0
 =============================
::> 'wdiss' was called at namespaces/test/arrayTest.csl 180.16 <::

 a4 :  namespaces/test/arrayTest.csl 182.10
Dump at : namespaces/test/arrayTest.csl : 182.10 :
Dump : Address = 0x00007fb6e73c3ea0 : Number = 128 :: (little endian dump)
0x00007fb6e73c3ea0 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73c3eb0 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73c3ec0 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73c3ed0 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73c3ee0 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73c3ef0 :  89 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73c3f00 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73c3f10 :  89 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
 0x0000000000000089
DataStack at : [34;49mnamespaces/test/arrayTest.csl : 182.12[39;49m :
DataStack depth =   3 : Dsp (R14) = Top = 0x00007fb6e7cd3a58, InitialTos = 0x00007fb6e7cd3a40, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fb6e7cd3a58 > = 0x0000000000000005	
  DataStack   [  -1 ] < 0x00007fb6e7cd3a50 > = 0x0000000000000005	
  DataStack   [  -2 ] < 0x00007fb6e7cd3a48 > = 0x0000000000000005	
 a4 :  namespaces/test/arrayTest.csl 183.20
Dump at : namespaces/test/arrayTest.csl : 183.32 :
Dump : Address = 0x00007fb6e73c3ea0 : Number = 128 :: (little endian dump)
0x00007fb6e73c3ea0 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73c3eb0 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73c3ec0 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73c3ed0 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73c3ee0 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73c3ef0 :  89 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73c3f00 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73c3f10 :  89 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 

DataStack at : [34;49mnamespaces/test/arrayTest.csl : 185.11[39;49m :
DataStack depth =   4 : Dsp (R14) = Top = 0x00007fb6e7cd3a60, InitialTos = 0x00007fb6e7cd3a40, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fb6e7cd3a60 > = 0x00007fb6e77e369e	[32;49m< string : '[39;49m[34;49ma6[39;49m[32;49m' >[39;49m
  DataStack   [  -1 ] < 0x00007fb6e7cd3a58 > = 0x0000000000000005	
  DataStack   [  -2 ] < 0x00007fb6e7cd3a50 > = 0x0000000000000005	
  DataStack   [  -3 ] < 0x00007fb6e7cd3a48 > = 0x0000000000000005	
 0x00007fb6e73c5d20 0x00007fb6e73c5d20 0x0000000000000089 0x00007fb6e73c5d20 0x0000000000000089 a6 :  namespaces/test/arrayTest.csl 193.20
Dump at : namespaces/test/arrayTest.csl : 193.38 :
Dump : Address = 0x00007fb6e73c5c58 : Number = 144 :: (little endian dump)
0x00007fb6e73c5c58 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73c5c68 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73c5c78 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73c5c88 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73c5c98 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73c5ca8 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73c5cb8 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73c5cc8 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73c5cd8 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 

 0x00007fb6e73c5d20 0x00007fb6e73c5d20 0x0000000000000089
 0x00007fb6e73c5cd8
DataStack at : [34;49mnamespaces/test/arrayTest.csl : 197.42[39;49m :
DataStack depth =   5 : Dsp (R14) = Top = 0x00007fb6e7cd3a68, InitialTos = 0x00007fb6e7cd3a40, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fb6e7cd3a68 > = 0x00007fb6e73c5d20	
  DataStack   [  -1 ] < 0x00007fb6e7cd3a60 > = 0x00007fb6e73c5cd8	
  DataStack   [  -2 ] < 0x00007fb6e7cd3a58 > = 0x0000000000000005	
  DataStack   [  -3 ] < 0x00007fb6e7cd3a50 > = 0x0000000000000005	
  DataStack   [  -4 ] < 0x00007fb6e7cd3a48 > = 0x0000000000000005	
 0x00007fb6e73c5d20 0x00007fb6e73c5d20 0x0000000000000089
 a6 :  namespaces/test/arrayTest.csl 200.23
Dump at : namespaces/test/arrayTest.csl : 200.38 :
Dump : Address = 0x00007fb6e73c5c58 : Number = 144 :: (little endian dump)
0x00007fb6e73c5c58 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73c5c68 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73c5c78 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73c5c88 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73c5c98 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73c5ca8 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73c5cb8 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73c5cc8 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73c5cd8 :  89 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
 137 0x00007fb6e73c5d20 0x0000000000000089 0x00007fb6e73c5cd8 0x0000000000000089 0x00007fb6e73c5cd8 0x0000000000000089 0x00007fb6e73c5cd8 0x0000000000000000
 a6 :  namespaces/test/arrayTest.csl 208.23
Dump at : namespaces/test/arrayTest.csl : 208.43 :
Dump : Address = 0x00007fb6e73c5cd0 : Number = 16 :: (little endian dump)
0x00007fb6e73c5cd0 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 

 =============================
Ar3.[34;49ma8[39;49m <:> csl compiled word
SourceCode for Ar3.[34;49ma8[39;49m :> 
[34;49m: a8 ( Ar3 a ) a.ar[1][2][1] a.ar[2][2][1] @ = nl "a8.a : " ps location a size @ dump a.ar[1][2][1] dup hp @ dup hp 0x89 _assert a.ar[2][2][1] dup hp @ dup hp 0x89 _assert ; [39;49m
Source code file location of [34;49ma8[39;49m : "namespaces/test/arrayTest.csl" : 210.2 :: we are now at : namespaces/test/arrayTest.csl : 221.16
Compiled with : optimizeOn, inlineOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xe794156a -- code size = 371 bytes
TypeSignature : Object 
 -----------------------------
Word :: Ar3.[34;49ma8[39;49m : definition = 0x00007fb6e794156a : disassembly at namespaces/test/arrayTest.csl : 221.16 :
[34;49m ..                                     : [39;49m[33;40ma8[39;49m[34;49m ( Ar3 a )  a.ar[1][2][1] a.ar[2][2][1] @ =  nl "a8.a : " ps location a size @ dump a.ar[1][2][1] d .. [39;49m[32;49m
0x7fb6e794156a    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fb6e794156e    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e7941572    4981c608000000          add r14, 0x8                                           [39;49m
[34;49m ..                       : a8 ( Ar3 a )  [39;49m[33;40ma[39;49m[34;49m.ar[1][2][1] a.ar[2][2][1] @ =  nl "a8.a : " ps location a size @ dump a.ar[1][2][1] dup hp @ dup hp .. [39;49m[32;49m
0x7fb6e7941579    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e794157d    4881c080000000          add rax, 0x80                                          [39;49m
[34;49m ..         : a8 ( Ar3 a )  a.ar[1][2][1] [39;49m[33;40ma[39;49m[34;49m.ar[2][2][1] @ =  nl "a8.a : " ps location a size @ dump a.ar[1][2][1] dup hp @ dup hp 0x89 _assert  .. [39;49m[32;49m
0x7fb6e7941584    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e7941588    4881c1c8000000          add rcx, 0xc8                                          [39;49m[32;49m
0x7fb6e794158f    488b09                  mov rcx, [rcx]                                         [39;49m
[34;49m .. r3 a )  a.ar[1][2][1] a.ar[2][2][1] @ [39;49m[33;40m=[39;49m[34;49m  nl "a8.a : " ps location a size @ dump a.ar[1][2][1] dup hp @ dup hp 0x89 _assert  a.ar[2][2][1] d .. [39;49m[32;49m
0x7fb6e7941592    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. a )  a.ar[1][2][1] a.ar[2][2][1] @ =  [39;49m[33;40mnl[39;49m[34;49m "a8.a : " ps location a size @ dump a.ar[1][2][1] dup hp @ dup hp 0x89 _assert  a.ar[2][2][1] dup  .. [39;49m[32;49m
0x7fb6e7941595    49b8e08080892d560000    mov r8, 0x562d898080e0                                 [39;49m[32;49m
0x7fb6e794159f    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e79415a9    49ffd1                  call r9                    	< Io.[34;49mnewline[39;49m : 0x0000562d898080e0[32;49m >[39;49m[39;49m
[34;49m ..   a.ar[1][2][1] a.ar[2][2][1] @ =  nl [39;49m[33;40m"[39;49m[34;49ma8.a : " ps location a size @ dump a.ar[1][2][1] dup hp @ dup hp 0x89 _assert  a.ar[2][2][1] dup hp  .. [39;49m[32;49m
0x7fb6e79415ac    48b899377ee7b67f0000    mov rax, 0x7fb6e77e3799    	[32;49m< string : '[39;49m[39;49ma8.a : [39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fb6e79415b6    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e79415ba    498906                  mov [r14], rax                                         [39;49m
[34;49m .. 2][1] a.ar[2][2][1] @ =  nl "a8.a : " [39;49m[33;40mps[39;49m[34;49m location a size @ dump a.ar[1][2][1] dup hp @ dup hp 0x89 _assert  a.ar[2][2][1] dup hp @ dup hp 0 .. [39;49m[32;49m
0x7fb6e79415bd    49b97da393e7b67f0000    mov r9, 0x7fb6e793a37d                                 [39;49m[32;49m
0x7fb6e79415c7    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fb6e793a37d[32;49m >[39;49m[39;49m
[34;49m .. 1] a.ar[2][2][1] @ =  nl "a8.a : " ps [39;49m[33;40mlocation[39;49m[34;49m a size @ dump a.ar[1][2][1] dup hp @ dup hp 0x89 _assert  a.ar[2][2][1] dup hp @ dup hp 0x89 .. [39;49m[32;49m
0x7fb6e79415ca    49b91fb093e7b67f0000    mov r9, 0x7fb6e793b01f                                 [39;49m[32;49m
0x7fb6e79415d4    49ffd1                  call r9                    	< System.[34;49mlocation[39;49m : 0x00007fb6e793b01f[32;49m >[39;49m[39;49m
[34;49m .. ][2][1] @ =  nl "a8.a : " ps location [39;49m[33;40ma[39;49m[34;49m size @ dump a.ar[1][2][1] dup hp @ dup hp 0x89 _assert  a.ar[2][2][1] dup hp @ dup hp 0x89 _assert  .. [39;49m[32;49m
0x7fb6e79415d7    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e79415db    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fb6e79415e2    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e79415e6    498906                  mov [r14], rax                                         [39;49m
[34;49m .. 2][1] @ =  nl "a8.a : " ps location a [39;49m[33;40msize[39;49m[34;49m @ dump a.ar[1][2][1] dup hp @ dup hp 0x89 _assert  a.ar[2][2][1] dup hp @ dup hp 0x89 _assert  ; .. [39;49m[32;49m
0x7fb6e79415e9    48b8401855e7b67f0000    mov rax, 0x7fb6e7551840                                [39;49m[32;49m
0x7fb6e79415f3    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fb6e79415f6    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e79415fa    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  =  nl "a8.a : " ps location a size @ [39;49m[33;40mdump[39;49m[34;49m a.ar[1][2][1] dup hp @ dup hp 0x89 _assert  a.ar[2][2][1] dup hp @ dup hp 0x89 _assert  ;  .. [39;49m[32;49m
0x7fb6e79415fd    49b830a480892d560000    mov r8, 0x562d8980a430                                 [39;49m[32;49m
0x7fb6e7941607    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e7941611    49ffd1                  call r9                    	< Debug.[34;49mdump[39;49m : 0x0000562d8980a430[32;49m >[39;49m[39;49m
[34;49m .. l "a8.a : " ps location a size @ dump [39;49m[33;40ma[39;49m[34;49m.ar[1][2][1] dup hp @ dup hp 0x89 _assert  a.ar[2][2][1] dup hp @ dup hp 0x89 _assert  ;  .. [39;49m[32;49m
0x7fb6e7941614    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e7941618    4881c080000000          add rax, 0x80                                          [39;49m[32;49m
0x7fb6e794161f    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fb6e7941623    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  location a size @ dump a.ar[1][2][1] [39;49m[33;40mdup[39;49m[34;49m hp @ dup hp 0x89 _assert  a.ar[2][2][1] dup hp @ dup hp 0x89 _assert  ;  .. [39;49m[32;49m
0x7fb6e7941626    498946f8                mov [r14-0x8], rax                                     [39;49m
[34;49m .. ation a size @ dump a.ar[1][2][1] dup [39;49m[33;40mhp[39;49m[34;49m @ dup hp 0x89 _assert  a.ar[2][2][1] dup hp @ dup hp 0x89 _assert  ;  .. [39;49m[32;49m
0x7fb6e794162a    49b987a493e7b67f0000    mov r9, 0x7fb6e793a487                                 [39;49m[32;49m
0x7fb6e7941634    49ffd1                  call r9                    	< Int.[34;49mhp[39;49m : 0x00007fb6e793a487[32;49m >[39;49m[39;49m
[34;49m .. on a size @ dump a.ar[1][2][1] dup hp [39;49m[33;40m@[39;49m[34;49m dup hp 0x89 _assert  a.ar[2][2][1] dup hp @ dup hp 0x89 _assert  ;  .. [39;49m[32;49m
0x7fb6e7941637    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fb6e794163a    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fb6e794163d    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  a size @ dump a.ar[1][2][1] dup hp @ [39;49m[33;40mdup[39;49m[34;49m hp 0x89 _assert  a.ar[2][2][1] dup hp @ dup hp 0x89 _assert  ;  .. [39;49m[32;49m
0x7fb6e7941640    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fb6e7941643    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7941647    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ize @ dump a.ar[1][2][1] dup hp @ dup [39;49m[33;40mhp[39;49m[34;49m 0x89 _assert  a.ar[2][2][1] dup hp @ dup hp 0x89 _assert  ;  .. [39;49m[32;49m
0x7fb6e794164a    49b987a493e7b67f0000    mov r9, 0x7fb6e793a487                                 [39;49m[32;49m
0x7fb6e7941654    49ffd1                  call r9                    	< Int.[34;49mhp[39;49m : 0x00007fb6e793a487[32;49m >[39;49m[39;49m
[34;49m ..  @ dump a.ar[1][2][1] dup hp @ dup hp [39;49m[33;40m0x89[39;49m[34;49m _assert  a.ar[2][2][1] dup hp @ dup hp 0x89 _assert  ;  .. [39;49m[32;49m
0x7fb6e7941657    48c7c089000000          mov rax, 0x89                                          [39;49m[32;49m
0x7fb6e794165e    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7941662    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e7941665    49b9dfbc93e7b67f0000    mov r9, 0x7fb6e793bcdf                                 [39;49m[32;49m
0x7fb6e794166f    49ffd1                  call r9                    	< System.[34;49m_assert0[39;49m : 0x00007fb6e793bcdf[32;49m >[39;49m[39;49m
[34;49m .. ][2][1] dup hp @ dup hp 0x89 _assert  [39;49m[33;40ma[39;49m[34;49m.ar[2][2][1] dup hp @ dup hp 0x89 _assert  ;  .. [39;49m[32;49m
0x7fb6e7941672    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e7941676    4881c0c8000000          add rax, 0xc8                                          [39;49m[32;49m
0x7fb6e794167d    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fb6e7941681    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  @ dup hp 0x89 _assert  a.ar[2][2][1] [39;49m[33;40mdup[39;49m[34;49m hp @ dup hp 0x89 _assert  ;  .. [39;49m[32;49m
0x7fb6e7941684    498946f8                mov [r14-0x8], rax                                     [39;49m
[34;49m .. up hp 0x89 _assert  a.ar[2][2][1] dup [39;49m[33;40mhp[39;49m[34;49m @ dup hp 0x89 _assert  ;  .. [39;49m[32;49m
0x7fb6e7941688    49b987a493e7b67f0000    mov r9, 0x7fb6e793a487                                 [39;49m[32;49m
0x7fb6e7941692    49ffd1                  call r9                    	< Int.[34;49mhp[39;49m : 0x00007fb6e793a487[32;49m >[39;49m[39;49m
[34;49m .. hp 0x89 _assert  a.ar[2][2][1] dup hp [39;49m[33;40m@[39;49m[34;49m dup hp 0x89 _assert  ;  .. [39;49m[32;49m
0x7fb6e7941695    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fb6e7941698    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fb6e794169b    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  0x89 _assert  a.ar[2][2][1] dup hp @ [39;49m[33;40mdup[39;49m[34;49m hp 0x89 _assert  ;  .. [39;49m[32;49m
0x7fb6e794169e    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fb6e79416a1    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e79416a5    498906                  mov [r14], rax                                         [39;49m
[34;49m .. 9 _assert  a.ar[2][2][1] dup hp @ dup [39;49m[33;40mhp[39;49m[34;49m 0x89 _assert  ;  .. [39;49m[32;49m
0x7fb6e79416a8    49b987a493e7b67f0000    mov r9, 0x7fb6e793a487                                 [39;49m[32;49m
0x7fb6e79416b2    49ffd1                  call r9                    	< Int.[34;49mhp[39;49m : 0x00007fb6e793a487[32;49m >[39;49m[39;49m
[34;49m .. assert  a.ar[2][2][1] dup hp @ dup hp [39;49m[33;40m0x89[39;49m[34;49m _assert  ;  .. [39;49m[32;49m
0x7fb6e79416b5    48c7c089000000          mov rax, 0x89                                          [39;49m[32;49m
0x7fb6e79416bc    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e79416c0    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e79416c3    49b9dfbc93e7b67f0000    mov r9, 0x7fb6e793bcdf                                 [39;49m[32;49m
0x7fb6e79416cd    49ffd1                  call r9                    	< System.[34;49m_assert0[39;49m : 0x00007fb6e793bcdf[32;49m >[39;49m[39;49m
[34;49m .. ][2][1] dup hp @ dup hp 0x89 _assert  [39;49m[33;40m;[39;49m[34;49m  .. [39;49m[32;49m
0x7fb6e79416d0    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e79416d4    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e79416d8    4983ee08                sub r14, 0x8                                           [39;49m[32;49m
0x7fb6e79416dc    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'a8' :: codeSize = 370
Word : 0x00007fb6e75520b8 :: Compiled at : 0x00007fb6e794156a
 =============================
::> 'wdiss' was called at namespaces/test/arrayTest.csl 221.16 <::
 0x00007fb6e73c5d20 137 a6 :  namespaces/test/arrayTest.csl 224.20
Dump at : namespaces/test/arrayTest.csl : 224.43 :
Dump : Address = 0x00007fb6e73c5d20 : Number = 16 :: (little endian dump)
0x00007fb6e73c5d20 :  89 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 

 a8.a :  namespaces/test/arrayTest.csl 225.6
Dump at : namespaces/test/arrayTest.csl : 225.6 :
Dump : Address = 0x00007fb6e73c5c58 : Number = 144 :: (little endian dump)
0x00007fb6e73c5c58 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73c5c68 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73c5c78 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73c5c88 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73c5c98 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73c5ca8 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73c5cb8 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73c5cc8 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73c5cd8 :  89 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
 0x00007fb6e73c5cd8 0x0000000000000089 0x00007fb6e73c5d20 0x0000000000000089 a6 :  namespaces/test/arrayTest.csl 226.20
Dump at : namespaces/test/arrayTest.csl : 226.43 :
Dump : Address = 0x00007fb6e73c5d20 : Number = 16 :: (little endian dump)
0x00007fb6e73c5d20 :  89 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 

 =============================
Ar3.[34;49ma7[39;49m <:> csl compiled word, prefix
SourceCode for Ar3.[34;49ma7[39;49m :> 
[34;49m: a7 ( n, m, o, Ar3 a ) a.ar[n @ 1 +][m @][o @] a.ar[n @ 2 +][m @][o @] @ = nl "a7.a : " ps location a.ar[n @ 1 +][m @][o @] 16 dump a.ar[n @ 1 +][m @][o @] @ dup hp 0x89 s _assert ;; [39;49m
Source code file location of [34;49ma7[39;49m : "namespaces/test/arrayTest.csl" : 227.2 :: we are now at : namespaces/test/arrayTest.csl : 233.16
Compiled with : optimizeOn, inlineOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xe79416e2 -- code size = 480 bytes
TypeSignature : 
 -----------------------------
Word :: Ar3.[34;49ma7[39;49m : definition = 0x00007fb6e79416e2 : disassembly at namespaces/test/arrayTest.csl : 233.16 :
[34;49m ..                                     : [39;49m[33;40ma7[39;49m[34;49m ( n, m, o, Ar3 a )  a.ar[n @ 1 +][m @][o @] a.ar[n @ 2 +][m @][o @] @ =  nl "a7.a : " ps location  .. [39;49m[32;49m
0x7fb6e79416e2    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fb6e79416e6    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e79416ea    4981c608000000          add r14, 0x8                                           [39;49m
[34;49m ..              : a7 ( n, m, o, Ar3 a )  [39;49m[33;40ma[39;49m[34;49m.ar[n @ 1 +][m @][o @] a.ar[n @ 2 +][m @][o @] @ =  nl "a7.a : " ps location a.ar[n @ 1 +][m @][o @] .. [39;49m[32;49m
0x7fb6e79416f1    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e79416f5    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fb6e79416fc    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7941700    498906                  mov [r14], rax                                         [39;49m
[34;49m ..         : a7 ( n, m, o, Ar3 a )  a.ar[[39;49m[33;40mn[39;49m[34;49m @ 1 +][m @][o @] a.ar[n @ 2 +][m @][o @] @ =  nl "a7.a : " ps location a.ar[n @ 1 +][m @][o @] 16 d .. [39;49m[32;49m
0x7fb6e7941703    498b47e0                mov rax, [r15-0x20]                                    [39;49m
[34;49m ..     : a7 ( n, m, o, Ar3 a )  a.ar[n @ [39;49m[33;40m1[39;49m[34;49m +][m @][o @] a.ar[n @ 2 +][m @][o @] @ =  nl "a7.a : " ps location a.ar[n @ 1 +][m @][o @] 16 dump  .. [39;49m[32;49m
0x7fb6e7941707    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m ..   : a7 ( n, m, o, Ar3 a )  a.ar[n @ 1 [39;49m[33;40m+[39;49m[34;49m][m @][o @] a.ar[n @ 2 +][m @][o @] @ =  nl "a7.a : " ps location a.ar[n @ 1 +][m @][o @] 16 dump a. .. [39;49m[32;49m
0x7fb6e794170e    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fb6e7941711    486bc048                imul rax, rax, 0x48                                    [39;49m[32;49m
0x7fb6e7941715    490106                  add [r14], rax                                         [39;49m
[34;49m   : a7 ( n, m, o, Ar3 a )  a.ar[n @ 1 +][[39;49m[33;40mm[39;49m[34;49m @][o @] a.ar[n @ 2 +][m @][o @] @ =  nl "a7.a : " ps location a.ar[n @ 1 +][m @][o @] 16 dump a.ar[ .. [39;49m[32;49m
0x7fb6e7941718    498b47e8                mov rax, [r15-0x18]                                    [39;49m[32;49m
0x7fb6e794171c    486bc018                imul rax, rax, 0x18                                    [39;49m[32;49m
0x7fb6e7941720    490106                  add [r14], rax                                         [39;49m
[34;49m ..  n, m, o, Ar3 a )  a.ar[n @ 1 +][m @][[39;49m[33;40mo[39;49m[34;49m @] a.ar[n @ 2 +][m @][o @] @ =  nl "a7.a : " ps location a.ar[n @ 1 +][m @][o @] 16 dump a.ar[n @ 1 .. [39;49m[32;49m
0x7fb6e7941723    498b47f0                mov rax, [r15-0x10]                                    [39;49m[32;49m
0x7fb6e7941727    486bc008                imul rax, rax, 0x8                                     [39;49m[32;49m
0x7fb6e794172b    490106                  add [r14], rax                                         [39;49m
[34;49m .. , o, Ar3 a )  a.ar[n @ 1 +][m @][o @] [39;49m[33;40ma[39;49m[34;49m.ar[n @ 2 +][m @][o @] @ =  nl "a7.a : " ps location a.ar[n @ 1 +][m @][o @] 16 dump a.ar[n @ 1 +][m .. [39;49m[32;49m
0x7fb6e794172e    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e7941732    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fb6e7941739    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e794173d    498906                  mov [r14], rax                                         [39;49m
[34;49m .. Ar3 a )  a.ar[n @ 1 +][m @][o @] a.ar[[39;49m[33;40mn[39;49m[34;49m @ 2 +][m @][o @] @ =  nl "a7.a : " ps location a.ar[n @ 1 +][m @][o @] 16 dump a.ar[n @ 1 +][m @][o .. [39;49m[32;49m
0x7fb6e7941740    498b47e0                mov rax, [r15-0x20]                                    [39;49m
[34;49m .. a )  a.ar[n @ 1 +][m @][o @] a.ar[n @ [39;49m[33;40m2[39;49m[34;49m +][m @][o @] @ =  nl "a7.a : " ps location a.ar[n @ 1 +][m @][o @] 16 dump a.ar[n @ 1 +][m @][o @]  .. [39;49m[32;49m
0x7fb6e7941744    48c7c102000000          mov rcx, 0x2                                           [39;49m
[34;49m .. )  a.ar[n @ 1 +][m @][o @] a.ar[n @ 2 [39;49m[33;40m+[39;49m[34;49m][m @][o @] @ =  nl "a7.a : " ps location a.ar[n @ 1 +][m @][o @] 16 dump a.ar[n @ 1 +][m @][o @] @  .. [39;49m[32;49m
0x7fb6e794174b    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fb6e794174e    486bc048                imul rax, rax, 0x48                                    [39;49m[32;49m
0x7fb6e7941752    490106                  add [r14], rax                                         [39;49m
[34;49m .. a.ar[n @ 1 +][m @][o @] a.ar[n @ 2 +][[39;49m[33;40mm[39;49m[34;49m @][o @] @ =  nl "a7.a : " ps location a.ar[n @ 1 +][m @][o @] 16 dump a.ar[n @ 1 +][m @][o @] @ dup .. [39;49m[32;49m
0x7fb6e7941755    498b47e8                mov rax, [r15-0x18]                                    [39;49m[32;49m
0x7fb6e7941759    486bc018                imul rax, rax, 0x18                                    [39;49m[32;49m
0x7fb6e794175d    490106                  add [r14], rax                                         [39;49m
[34;49m .. n @ 1 +][m @][o @] a.ar[n @ 2 +][m @][[39;49m[33;40mo[39;49m[34;49m @] @ =  nl "a7.a : " ps location a.ar[n @ 1 +][m @][o @] 16 dump a.ar[n @ 1 +][m @][o @] @ dup hp 0 .. [39;49m[32;49m
0x7fb6e7941760    498b47f0                mov rax, [r15-0x10]                                    [39;49m[32;49m
0x7fb6e7941764    486bc008                imul rax, rax, 0x8                                     [39;49m[32;49m
0x7fb6e7941768    490106                  add [r14], rax                                         [39;49m
[34;49m ..  +][m @][o @] a.ar[n @ 2 +][m @][o @] [39;49m[33;40m@[39;49m[34;49m =  nl "a7.a : " ps location a.ar[n @ 1 +][m @][o @] 16 dump a.ar[n @ 1 +][m @][o @] @ dup hp 0x89 s .. [39;49m[32;49m
0x7fb6e794176b    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fb6e794176e    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fb6e7941771    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ][m @][o @] a.ar[n @ 2 +][m @][o @] @ [39;49m[33;40m=[39;49m[34;49m  nl "a7.a : " ps location a.ar[n @ 1 +][m @][o @] 16 dump a.ar[n @ 1 +][m @][o @] @ dup hp 0x89 s _ .. [39;49m[32;49m
0x7fb6e7941774    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fb6e7941777    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fb6e794177b    488908                  mov [rax], rcx                                         [39;49m[32;49m
0x7fb6e794177e    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m ..  @][o @] a.ar[n @ 2 +][m @][o @] @ =  [39;49m[33;40mnl[39;49m[34;49m "a7.a : " ps location a.ar[n @ 1 +][m @][o @] 16 dump a.ar[n @ 1 +][m @][o @] @ dup hp 0x89 s _ass .. [39;49m[32;49m
0x7fb6e7941782    49b8e08080892d560000    mov r8, 0x562d898080e0                                 [39;49m[32;49m
0x7fb6e794178c    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e7941796    49ffd1                  call r9                    	< Io.[34;49mnewline[39;49m : 0x0000562d898080e0[32;49m >[39;49m[39;49m
[34;49m .. [o @] a.ar[n @ 2 +][m @][o @] @ =  nl [39;49m[33;40m"[39;49m[34;49ma7.a : " ps location a.ar[n @ 1 +][m @][o @] 16 dump a.ar[n @ 1 +][m @][o @] @ dup hp 0x89 s _assert .. [39;49m[32;49m
0x7fb6e7941799    48b8e1387ee7b67f0000    mov rax, 0x7fb6e77e38e1    	[32;49m< string : '[39;49m[39;49ma7.a : [39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fb6e79417a3    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e79417a7    498906                  mov [r14], rax                                         [39;49m
[34;49m .. [n @ 2 +][m @][o @] @ =  nl "a7.a : " [39;49m[33;40mps[39;49m[34;49m location a.ar[n @ 1 +][m @][o @] 16 dump a.ar[n @ 1 +][m @][o @] @ dup hp 0x89 s _assert ;;  .. [39;49m[32;49m
0x7fb6e79417aa    49b97da393e7b67f0000    mov r9, 0x7fb6e793a37d                                 [39;49m[32;49m
0x7fb6e79417b4    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fb6e793a37d[32;49m >[39;49m[39;49m
[34;49m .. @ 2 +][m @][o @] @ =  nl "a7.a : " ps [39;49m[33;40mlocation[39;49m[34;49m a.ar[n @ 1 +][m @][o @] 16 dump a.ar[n @ 1 +][m @][o @] @ dup hp 0x89 s _assert ;;  .. [39;49m[32;49m
0x7fb6e79417b7    49b91fb093e7b67f0000    mov r9, 0x7fb6e793b01f                                 [39;49m[32;49m
0x7fb6e79417c1    49ffd1                  call r9                    	< System.[34;49mlocation[39;49m : 0x00007fb6e793b01f[32;49m >[39;49m[39;49m
[34;49m .. @][o @] @ =  nl "a7.a : " ps location [39;49m[33;40ma[39;49m[34;49m.ar[n @ 1 +][m @][o @] 16 dump a.ar[n @ 1 +][m @][o @] @ dup hp 0x89 s _assert ;;  .. [39;49m[32;49m
0x7fb6e79417c4    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e79417c8    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fb6e79417cf    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e79417d3    498906                  mov [r14], rax                                         [39;49m
[34;49m .. @] @ =  nl "a7.a : " ps location a.ar[[39;49m[33;40mn[39;49m[34;49m @ 1 +][m @][o @] 16 dump a.ar[n @ 1 +][m @][o @] @ dup hp 0x89 s _assert ;;  .. [39;49m[32;49m
0x7fb6e79417d6    498b47e0                mov rax, [r15-0x20]                                    [39;49m
[34;49m ..  =  nl "a7.a : " ps location a.ar[n @ [39;49m[33;40m1[39;49m[34;49m +][m @][o @] 16 dump a.ar[n @ 1 +][m @][o @] @ dup hp 0x89 s _assert ;;  .. [39;49m[32;49m
0x7fb6e79417da    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m ..   nl "a7.a : " ps location a.ar[n @ 1 [39;49m[33;40m+[39;49m[34;49m][m @][o @] 16 dump a.ar[n @ 1 +][m @][o @] @ dup hp 0x89 s _assert ;;  .. [39;49m[32;49m
0x7fb6e79417e1    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fb6e79417e4    486bc048                imul rax, rax, 0x48                                    [39;49m[32;49m
0x7fb6e79417e8    490106                  add [r14], rax                                         [39;49m
[34;49m .. l "a7.a : " ps location a.ar[n @ 1 +][[39;49m[33;40mm[39;49m[34;49m @][o @] 16 dump a.ar[n @ 1 +][m @][o @] @ dup hp 0x89 s _assert ;;  .. [39;49m[32;49m
0x7fb6e79417eb    498b47e8                mov rax, [r15-0x18]                                    [39;49m[32;49m
0x7fb6e79417ef    486bc018                imul rax, rax, 0x18                                    [39;49m[32;49m
0x7fb6e79417f3    490106                  add [r14], rax                                         [39;49m
[34;49m .. .a : " ps location a.ar[n @ 1 +][m @][[39;49m[33;40mo[39;49m[34;49m @] 16 dump a.ar[n @ 1 +][m @][o @] @ dup hp 0x89 s _assert ;;  .. [39;49m[32;49m
0x7fb6e79417f6    498b47f0                mov rax, [r15-0x10]                                    [39;49m[32;49m
0x7fb6e79417fa    486bc008                imul rax, rax, 0x8                                     [39;49m[32;49m
0x7fb6e79417fe    490106                  add [r14], rax                                         [39;49m
[34;49m .. " ps location a.ar[n @ 1 +][m @][o @] [39;49m[33;40m16[39;49m[34;49m dump a.ar[n @ 1 +][m @][o @] @ dup hp 0x89 s _assert ;;  .. [39;49m[32;49m
0x7fb6e7941801    48c7c010000000          mov rax, 0x10                                          [39;49m[32;49m
0x7fb6e7941808    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e794180c    498906                  mov [r14], rax                                         [39;49m
[34;49m .. s location a.ar[n @ 1 +][m @][o @] 16 [39;49m[33;40mdump[39;49m[34;49m a.ar[n @ 1 +][m @][o @] @ dup hp 0x89 s _assert ;;  .. [39;49m[32;49m
0x7fb6e794180f    49b830a480892d560000    mov r8, 0x562d8980a430                                 [39;49m[32;49m
0x7fb6e7941819    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e7941823    49ffd1                  call r9                    	< Debug.[34;49mdump[39;49m : 0x0000562d8980a430[32;49m >[39;49m[39;49m
[34;49m .. ation a.ar[n @ 1 +][m @][o @] 16 dump [39;49m[33;40ma[39;49m[34;49m.ar[n @ 1 +][m @][o @] @ dup hp 0x89 s _assert ;;  .. [39;49m[32;49m
0x7fb6e7941826    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e794182a    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fb6e7941831    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7941835    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  a.ar[n @ 1 +][m @][o @] 16 dump a.ar[[39;49m[33;40mn[39;49m[34;49m @ 1 +][m @][o @] @ dup hp 0x89 s _assert ;;  .. [39;49m[32;49m
0x7fb6e7941838    498b47e0                mov rax, [r15-0x20]                                    [39;49m
[34;49m .. r[n @ 1 +][m @][o @] 16 dump a.ar[n @ [39;49m[33;40m1[39;49m[34;49m +][m @][o @] @ dup hp 0x89 s _assert ;;  .. [39;49m[32;49m
0x7fb6e794183c    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m .. n @ 1 +][m @][o @] 16 dump a.ar[n @ 1 [39;49m[33;40m+[39;49m[34;49m][m @][o @] @ dup hp 0x89 s _assert ;;  .. [39;49m[32;49m
0x7fb6e7941843    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fb6e7941846    486bc048                imul rax, rax, 0x48                                    [39;49m[32;49m
0x7fb6e794184a    490106                  add [r14], rax                                         [39;49m
[34;49m ..  1 +][m @][o @] 16 dump a.ar[n @ 1 +][[39;49m[33;40mm[39;49m[34;49m @][o @] @ dup hp 0x89 s _assert ;;  .. [39;49m[32;49m
0x7fb6e794184d    498b47e8                mov rax, [r15-0x18]                                    [39;49m[32;49m
0x7fb6e7941851    486bc018                imul rax, rax, 0x18                                    [39;49m[32;49m
0x7fb6e7941855    490106                  add [r14], rax                                         [39;49m
[34;49m .. [m @][o @] 16 dump a.ar[n @ 1 +][m @][[39;49m[33;40mo[39;49m[34;49m @] @ dup hp 0x89 s _assert ;;  .. [39;49m[32;49m
0x7fb6e7941858    498b47f0                mov rax, [r15-0x10]                                    [39;49m[32;49m
0x7fb6e794185c    486bc008                imul rax, rax, 0x8                                     [39;49m[32;49m
0x7fb6e7941860    490106                  add [r14], rax                                         [39;49m
[34;49m .. [o @] 16 dump a.ar[n @ 1 +][m @][o @] [39;49m[33;40m@[39;49m[34;49m dup hp 0x89 s _assert ;;  .. [39;49m[32;49m
0x7fb6e7941863    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fb6e7941866    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fb6e7941869    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  @] 16 dump a.ar[n @ 1 +][m @][o @] @ [39;49m[33;40mdup[39;49m[34;49m hp 0x89 s _assert ;;  .. [39;49m[32;49m
0x7fb6e794186c    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fb6e794186f    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7941873    498906                  mov [r14], rax                                         [39;49m
[34;49m .. 16 dump a.ar[n @ 1 +][m @][o @] @ dup [39;49m[33;40mhp[39;49m[34;49m 0x89 s _assert ;;  .. [39;49m[32;49m
0x7fb6e7941876    49b987a493e7b67f0000    mov r9, 0x7fb6e793a487                                 [39;49m[32;49m
0x7fb6e7941880    49ffd1                  call r9                    	< Int.[34;49mhp[39;49m : 0x00007fb6e793a487[32;49m >[39;49m[39;49m
[34;49m .. dump a.ar[n @ 1 +][m @][o @] @ dup hp [39;49m[33;40m0x89[39;49m[34;49m s _assert ;;  .. [39;49m[32;49m
0x7fb6e7941883    48c7c089000000          mov rax, 0x89                                          [39;49m[32;49m
0x7fb6e794188a    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e794188e    498906                  mov [r14], rax                                         [39;49m
[34;49m .. a.ar[n @ 1 +][m @][o @] @ dup hp 0x89 [39;49m[33;40ms[39;49m[34;49m _assert ;;  .. [39;49m[32;49m
0x7fb6e7941891    49b8e0267e892d560000    mov r8, 0x562d897e26e0                                 [39;49m[32;49m
0x7fb6e794189b    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e79418a5    49ffd1                  call r9                    	< Debug.[34;49mstack[39;49m : 0x0000562d897e26e0[32;49m >[39;49m[39;49m[32;49m
0x7fb6e79418a8    49b9dfbc93e7b67f0000    mov r9, 0x7fb6e793bcdf                                 [39;49m[32;49m
0x7fb6e79418b2    49ffd1                  call r9                    	< System.[34;49m_assert0[39;49m : 0x00007fb6e793bcdf[32;49m >[39;49m[39;49m
[34;49m ..  +][m @][o @] @ dup hp 0x89 s _assert [39;49m[33;40m;;[39;49m[34;49m  .. [39;49m[32;49m
0x7fb6e79418b5    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e79418b9    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e79418bd    4983ee20                sub r14, 0x20                                          [39;49m[32;49m
0x7fb6e79418c1    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'a7' :: codeSize = 479
Word : 0x00007fb6e7555b98 :: Compiled at : 0x00007fb6e79416e2
 =============================
::> 'wdiss' was called at namespaces/test/arrayTest.csl 233.16 <::
 a6 :  namespaces/test/arrayTest.csl 235.20
Dump at : namespaces/test/arrayTest.csl : 235.43 :
Dump : Address = 0x00007fb6e73c5d20 : Number = 16 :: (little endian dump)
0x00007fb6e73c5d20 :  89 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 

 a7.a :  namespaces/test/arrayTest.csl 237.12
Dump at : namespaces/test/arrayTest.csl : 237.12 :
Dump : Address = 0x00007fb6e73c5cd8 : Number = 16 :: (little endian dump)
0x00007fb6e73c5cd8 :  89 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
 0x0000000000000089
DataStack at : [34;49mnamespaces/test/arrayTest.csl : 237.12[39;49m :
DataStack depth =  10 : Dsp (R14) = Top = 0x00007fb6e7cd3a90, InitialTos = 0x00007fb6e7cd3a40, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fb6e7cd3a90 > = 0x0000000000000089	
  DataStack   [  -1 ] < 0x00007fb6e7cd3a88 > = 0x0000000000000089	
  DataStack   [  -2 ] < 0x00007fb6e7cd3a80 > = 0x0000000000000000	
  DataStack   [  -3 ] < 0x00007fb6e7cd3a78 > = 0x00007fb6e73c5c58	
  DataStack   [  -4 ] < 0x00007fb6e7cd3a70 > = 0x0000000000000001	
  DataStack   [  -5 ] < 0x00007fb6e7cd3a68 > = 0x0000000000000002	
  DataStack   [  -6 ] < 0x00007fb6e7cd3a60 > = 0x0000000000000000	
  DataStack   [  -7 ] < 0x00007fb6e7cd3a58 > = 0x0000000000000005	
  DataStack   [  -8 ] < 0x00007fb6e7cd3a50 > = 0x0000000000000005	
  DataStack   [  -9 ] < 0x00007fb6e7cd3a48 > = 0x0000000000000005	
 a6 :  namespaces/test/arrayTest.csl 238.20
Dump at : namespaces/test/arrayTest.csl : 238.38 :
Dump : Address = 0x00007fb6e73c5c58 : Number = 144 :: (little endian dump)
0x00007fb6e73c5c58 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73c5c68 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73c5c78 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73c5c88 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73c5c98 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73c5ca8 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73c5cb8 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73c5cc8 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e73c5cd8 :  89 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 

 =============================
Ar9.[34;49ma9[39;49m <:> csl compiled word
SourceCode for Ar9.[34;49ma9[39;49m :> 
[34;49m: a9 ( Ar9 a | x y z ) x 0 = y 0 = z 0 = { z @ 256 < } { { y @ 256 < } { { x @ 256 < } { a.ar [z @][y @][x @ ] x @ = x ++ } while x 0 = y ++ } while x 0 = y 0 = z ++ } while adump ( 0 246 67 a ) ; [39;49m
Source code file location of [34;49ma9[39;49m : "namespaces/test/arrayTest.csl" : 261.2 :: we are now at : namespaces/test/arrayTest.csl : 290.16
Compiled with : optimizeOn, inlineOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xe7941ad5 -- code size = 437 bytes
TypeSignature : Object 
 -----------------------------
Word :: Ar9.[34;49ma9[39;49m : definition = 0x00007fb6e7941ad5 : disassembly at namespaces/test/arrayTest.csl : 290.16 :
[34;49m ..                                     : [39;49m[33;40ma9[39;49m[34;49m ( Ar9 a | x y z )  x 0 = y 0 = z 0 =  { z @ 256 < } { { y @ 256 < } { { x @ 256 < } { a.ar [z @][y .. [39;49m[32;49m
0x7fb6e7941ad5    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fb6e7941ad9    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e7941add    4981c620000000          add r14, 0x20                                          [39;49m
[34;49m ..               : a9 ( Ar9 a | x y z )  [39;49m[33;40mx[39;49m[34;49m 0 = y 0 = z 0 =  { z @ 256 < } { { y @ 256 < } { { x @ 256 < } { a.ar [z @][y @][x @ ] x @ = x ++   .. [39;49m[32;49m
0x7fb6e7941ae4    498d4708                lea rax, [r15+0x8]                                     [39;49m
[34;49m ..             : a9 ( Ar9 a | x y z )  x [39;49m[33;40m0[39;49m[34;49m = y 0 = z 0 =  { z @ 256 < } { { y @ 256 < } { { x @ 256 < } { a.ar [z @][y @][x @ ] x @ = x ++  }  .. [39;49m[32;49m
0x7fb6e7941ae8    48c7c100000000          mov rcx, 0x0                                           [39;49m
[34;49m ..           : a9 ( Ar9 a | x y z )  x 0 [39;49m[33;40m=[39;49m[34;49m y 0 = z 0 =  { z @ 256 < } { { y @ 256 < } { { x @ 256 < } { a.ar [z @][y @][x @ ] x @ = x ++  } wh .. [39;49m[32;49m
0x7fb6e7941aef    488908                  mov [rax], rcx                                         [39;49m
[34;49m ..         : a9 ( Ar9 a | x y z )  x 0 = [39;49m[33;40my[39;49m[34;49m 0 = z 0 =  { z @ 256 < } { { y @ 256 < } { { x @ 256 < } { a.ar [z @][y @][x @ ] x @ = x ++  } whil .. [39;49m[32;49m
0x7fb6e7941af2    498d4710                lea rax, [r15+0x10]                                    [39;49m
[34;49m ..       : a9 ( Ar9 a | x y z )  x 0 = y [39;49m[33;40m0[39;49m[34;49m = z 0 =  { z @ 256 < } { { y @ 256 < } { { x @ 256 < } { a.ar [z @][y @][x @ ] x @ = x ++  } while  .. [39;49m[32;49m
0x7fb6e7941af6    48c7c100000000          mov rcx, 0x0                                           [39;49m
[34;49m ..     : a9 ( Ar9 a | x y z )  x 0 = y 0 [39;49m[33;40m=[39;49m[34;49m z 0 =  { z @ 256 < } { { y @ 256 < } { { x @ 256 < } { a.ar [z @][y @][x @ ] x @ = x ++  } while  x .. [39;49m[32;49m
0x7fb6e7941afd    488908                  mov [rax], rcx                                         [39;49m
[34;49m ..   : a9 ( Ar9 a | x y z )  x 0 = y 0 = [39;49m[33;40mz[39;49m[34;49m 0 =  { z @ 256 < } { { y @ 256 < } { { x @ 256 < } { a.ar [z @][y @][x @ ] x @ = x ++  } while  x 0 .. [39;49m[32;49m
0x7fb6e7941b00    498d4718                lea rax, [r15+0x18]                                    [39;49m
[34;49m .. : a9 ( Ar9 a | x y z )  x 0 = y 0 = z [39;49m[33;40m0[39;49m[34;49m =  { z @ 256 < } { { y @ 256 < } { { x @ 256 < } { a.ar [z @][y @][x @ ] x @ = x ++  } while  x 0 = .. [39;49m[32;49m
0x7fb6e7941b04    48c7c100000000          mov rcx, 0x0                                           [39;49m
[34;49m  : a9 ( Ar9 a | x y z )  x 0 = y 0 = z 0 [39;49m[33;40m=[39;49m[34;49m  { z @ 256 < } { { y @ 256 < } { { x @ 256 < } { a.ar [z @][y @][x @ ] x @ = x ++  } while  x 0 = y .. [39;49m[32;49m
0x7fb6e7941b0b    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. Ar9 a | x y z )  x 0 = y 0 = z 0 =  { [39;49m[33;40mz[39;49m[34;49m @ 256 < } { { y @ 256 < } { { x @ 256 < } { a.ar [z @][y @][x @ ] x @ = x ++  } while  x 0 = y ++   .. [39;49m[32;49m
0x7fb6e7941b0e    498b4718                mov rax, [r15+0x18]                                    [39;49m
[34;49m .. x y z )  x 0 = y 0 = z 0 =  { z @ 256 [39;49m[33;40m<[39;49m[34;49m } { { y @ 256 < } { { x @ 256 < } { a.ar [z @][y @][x @ ] x @ = x ++  } while  x 0 = y ++  } while  .. [39;49m[32;49m
0x7fb6e7941b12    4881f800010000          cmp rax, 0x100                                         [39;49m
[34;49m .. a | x y z )  x 0 = y 0 = z 0 =  { z @ [39;49m[33;40m256[39;49m[34;49m < } { { y @ 256 < } { { x @ 256 < } { a.ar [z @][y @][x @ ] x @ = x ++  } while  x 0 = y ++  } wh .. [39;49m[32;49m
0x7fb6e7941b19    0f8d15010000            jge 0x7fb6e7941c34         	< Ar9.[34;49ma9[39;49m+351[32;49m >[39;49m[39;49m
[34;49m ..  x 0 = y 0 = z 0 =  { z @ 256 < } { { [39;49m[33;40my[39;49m[34;49m @ 256 < } { { x @ 256 < } { a.ar [z @][y @][x @ ] x @ = x ++  } while  x 0 = y ++  } while x 0 = y  .. [39;49m[32;49m
0x7fb6e7941b1f    498b4710                mov rax, [r15+0x10]                                    [39;49m
[34;49m ..  0 = z 0 =  { z @ 256 < } { { y @ 256 [39;49m[33;40m<[39;49m[34;49m } { { x @ 256 < } { a.ar [z @][y @][x @ ] x @ = x ++  } while  x 0 = y ++  } while x 0 = y 0 = z ++ .. [39;49m[32;49m
0x7fb6e7941b23    4881f800010000          cmp rax, 0x100                                         [39;49m
[34;49m ..  = y 0 = z 0 =  { z @ 256 < } { { y @ [39;49m[33;40m256[39;49m[34;49m < } { { x @ 256 < } { a.ar [z @][y @][x @ ] x @ = x ++  } while  x 0 = y ++  } while x 0 = y 0 =  .. [39;49m[32;49m
0x7fb6e7941b2a    0f8da6000000            jge 0x7fb6e7941bd6         	< Ar9.[34;49ma9[39;49m+257[32;49m >[39;49m[39;49m
[34;49m ..  =  { z @ 256 < } { { y @ 256 < } { { [39;49m[33;40mx[39;49m[34;49m @ 256 < } { a.ar [z @][y @][x @ ] x @ = x ++  } while  x 0 = y ++  } while x 0 = y 0 = z ++ } while .. [39;49m[32;49m
0x7fb6e7941b30    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m .. @ 256 < } { { y @ 256 < } { { x @ 256 [39;49m[33;40m<[39;49m[34;49m } { a.ar [z @][y @][x @ ] x @ = x ++  } while  x 0 = y ++  } while x 0 = y 0 = z ++ } while adump ( .. [39;49m[32;49m
0x7fb6e7941b34    4881f800010000          cmp rax, 0x100                                         [39;49m
[34;49m .. { z @ 256 < } { { y @ 256 < } { { x @ [39;49m[33;40m256[39;49m[34;49m < } { a.ar [z @][y @][x @ ] x @ = x ++  } while  x 0 = y ++  } while x 0 = y 0 = z ++ } while adu .. [39;49m[32;49m
0x7fb6e7941b3b    0f8d5e000000            jge 0x7fb6e7941b9f         	< Ar9.[34;49ma9[39;49m+202[32;49m >[39;49m[39;49m
[34;49m .. < } { { y @ 256 < } { { x @ 256 < } { [39;49m[33;40ma[39;49m[34;49m.ar [z @][y @][x @ ] x @ = x ++  } while  x 0 = y ++  } while x 0 = y 0 = z ++ } while adump ( 0 246 .. [39;49m[32;49m
0x7fb6e7941b41    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e7941b45    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fb6e7941b4c    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7941b50    498906                  mov [r14], rax                                         [39;49m
[34;49m .. { y @ 256 < } { { x @ 256 < } { a.ar [[39;49m[33;40mz[39;49m[34;49m @][y @][x @ ] x @ = x ++  } while  x 0 = y ++  } while x 0 = y 0 = z ++ } while adump ( 0 246 67 a  .. [39;49m[32;49m
0x7fb6e7941b53    498b4718                mov rax, [r15+0x18]                                    [39;49m[32;49m
0x7fb6e7941b57    4869c000000100          imul rax, rax, 0x10000                                 [39;49m[32;49m
0x7fb6e7941b5e    490106                  add [r14], rax                                         [39;49m
[34;49m ..  256 < } { { x @ 256 < } { a.ar [z @][[39;49m[33;40my[39;49m[34;49m @][x @ ] x @ = x ++  } while  x 0 = y ++  } while x 0 = y 0 = z ++ } while adump ( 0 246 67 a ) ;  .. [39;49m[32;49m
0x7fb6e7941b61    498b4710                mov rax, [r15+0x10]                                    [39;49m[32;49m
0x7fb6e7941b65    4869c000010000          imul rax, rax, 0x100                                   [39;49m[32;49m
0x7fb6e7941b6c    490106                  add [r14], rax                                         [39;49m
[34;49m .. < } { { x @ 256 < } { a.ar [z @][y @][[39;49m[33;40mx[39;49m[34;49m @ ] x @ = x ++  } while  x 0 = y ++  } while x 0 = y 0 = z ++ } while adump ( 0 246 67 a ) ;  .. [39;49m[32;49m
0x7fb6e7941b6f    498b4708                mov rax, [r15+0x8]                                     [39;49m[32;49m
0x7fb6e7941b73    490106                  add [r14], rax                                         [39;49m
[34;49m .. { x @ 256 < } { a.ar [z @][y @][x @ ] [39;49m[33;40mx[39;49m[34;49m @ = x ++  } while  x 0 = y ++  } while x 0 = y 0 = z ++ } while adump ( 0 246 67 a ) ;  .. [39;49m[32;49m
0x7fb6e7941b76    498d4708                lea rax, [r15+0x8]                                     [39;49m[32;49m
0x7fb6e7941b7a    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fb6e7941b7d    4983c608                add r14, 0x8                                           [39;49m
[34;49m .. x @ 256 < } { a.ar [z @][y @][x @ ] x [39;49m[33;40m@[39;49m[34;49m = x ++  } while  x 0 = y ++  } while x 0 = y 0 = z ++ } while adump ( 0 246 67 a ) ;  .. [39;49m[32;49m
0x7fb6e7941b81    498906                  mov [r14], rax                                         [39;49m
[34;49m .. @ 256 < } { a.ar [z @][y @][x @ ] x @ [39;49m[33;40m=[39;49m[34;49m x ++  } while  x 0 = y ++  } while x 0 = y 0 = z ++ } while adump ( 0 246 67 a ) ;  .. [39;49m[32;49m
0x7fb6e7941b84    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fb6e7941b87    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fb6e7941b8b    488908                  mov [rax], rcx                                         [39;49m[32;49m
0x7fb6e7941b8e    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m .. 256 < } { a.ar [z @][y @][x @ ] x @ = [39;49m[33;40mx[39;49m[34;49m ++  } while  x 0 = y ++  } while x 0 = y 0 = z ++ } while adump ( 0 246 67 a ) ;  .. [39;49m[32;49m
0x7fb6e7941b92    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m .. 6 < } { a.ar [z @][y @][x @ ] x @ = x [39;49m[33;40m++[39;49m[34;49m  } while  x 0 = y ++  } while x 0 = y 0 = z ++ } while adump ( 0 246 67 a ) ;  .. [39;49m[32;49m
0x7fb6e7941b96    48ffc0                  inc rax                                                [39;49m[32;49m
0x7fb6e7941b99    49894708                mov [r15+0x8], rax                                     [39;49m
[34;49m .. } { a.ar [z @][y @][x @ ] x @ = x ++  [39;49m[33;40m}[39;49m[34;49m while  x 0 = y ++  } while x 0 = y 0 = z ++ } while adump ( 0 246 67 a ) ;  .. [39;49m[32;49m
0x7fb6e7941b9d    eb91                    jmp 0x7fb6e7941b30         	< Ar9.[34;49ma9[39;49m+91[32;49m >[39;49m[39;49m
[34;49m .. [z @][y @][x @ ] x @ = x ++  } while  [39;49m[33;40mx[39;49m[34;49m 0 = y ++  } while x 0 = y 0 = z ++ } while adump ( 0 246 67 a ) ;  .. [39;49m[32;49m
0x7fb6e7941b9f    498d4708                lea rax, [r15+0x8]                                     [39;49m[32;49m
0x7fb6e7941ba3    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7941ba7    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  @][y @][x @ ] x @ = x ++  } while  x [39;49m[33;40m0[39;49m[34;49m = y ++  } while x 0 = y 0 = z ++ } while adump ( 0 246 67 a ) ;  .. [39;49m[32;49m
0x7fb6e7941baa    48c7c000000000          mov rax, 0x0                                           [39;49m[32;49m
0x7fb6e7941bb1    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7941bb5    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ][y @][x @ ] x @ = x ++  } while  x 0 [39;49m[33;40m=[39;49m[34;49m y ++  } while x 0 = y 0 = z ++ } while adump ( 0 246 67 a ) ;  .. [39;49m[32;49m
0x7fb6e7941bb8    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fb6e7941bbb    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fb6e7941bbf    488908                  mov [rax], rcx                                         [39;49m[32;49m
0x7fb6e7941bc2    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m .. y @][x @ ] x @ = x ++  } while  x 0 = [39;49m[33;40my[39;49m[34;49m ++  } while x 0 = y 0 = z ++ } while adump ( 0 246 67 a ) ;  .. [39;49m[32;49m
0x7fb6e7941bc6    498b4710                mov rax, [r15+0x10]                                    [39;49m
[34;49m .. @][x @ ] x @ = x ++  } while  x 0 = y [39;49m[33;40m++[39;49m[34;49m  } while x 0 = y 0 = z ++ } while adump ( 0 246 67 a ) ;  .. [39;49m[32;49m
0x7fb6e7941bca    48ffc0                  inc rax                                                [39;49m[32;49m
0x7fb6e7941bcd    49894710                mov [r15+0x10], rax                                    [39;49m
[34;49m ..  @ ] x @ = x ++  } while  x 0 = y ++  [39;49m[33;40m}[39;49m[34;49m while x 0 = y 0 = z ++ } while adump ( 0 246 67 a ) ;  .. [39;49m[32;49m
0x7fb6e7941bd1    e949ffffff              jmp 0x7fb6e7941b1f         	< Ar9.[34;49ma9[39;49m+74[32;49m >[39;49m[39;49m
[34;49m ..  = x ++  } while  x 0 = y ++  } while [39;49m[33;40mx[39;49m[34;49m 0 = y 0 = z ++ } while adump ( 0 246 67 a ) ;  .. [39;49m[32;49m
0x7fb6e7941bd6    498d4708                lea rax, [r15+0x8]                                     [39;49m[32;49m
0x7fb6e7941bda    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7941bde    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  x ++  } while  x 0 = y ++  } while x [39;49m[33;40m0[39;49m[34;49m = y 0 = z ++ } while adump ( 0 246 67 a ) ;  .. [39;49m[32;49m
0x7fb6e7941be1    48c7c000000000          mov rax, 0x0                                           [39;49m[32;49m
0x7fb6e7941be8    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7941bec    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  ++  } while  x 0 = y ++  } while x 0 [39;49m[33;40m=[39;49m[34;49m y 0 = z ++ } while adump ( 0 246 67 a ) ;  .. [39;49m[32;49m
0x7fb6e7941bef    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fb6e7941bf2    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fb6e7941bf6    488908                  mov [rax], rcx                                         [39;49m[32;49m
0x7fb6e7941bf9    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m .. +  } while  x 0 = y ++  } while x 0 = [39;49m[33;40my[39;49m[34;49m 0 = z ++ } while adump ( 0 246 67 a ) ;  .. [39;49m[32;49m
0x7fb6e7941bfd    498d4710                lea rax, [r15+0x10]                                    [39;49m[32;49m
0x7fb6e7941c01    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7941c05    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  } while  x 0 = y ++  } while x 0 = y [39;49m[33;40m0[39;49m[34;49m = z ++ } while adump ( 0 246 67 a ) ;  .. [39;49m[32;49m
0x7fb6e7941c08    48c7c000000000          mov rax, 0x0                                           [39;49m[32;49m
0x7fb6e7941c0f    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7941c13    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  while  x 0 = y ++  } while x 0 = y 0 [39;49m[33;40m=[39;49m[34;49m z ++ } while adump ( 0 246 67 a ) ;  .. [39;49m[32;49m
0x7fb6e7941c16    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fb6e7941c19    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fb6e7941c1d    488908                  mov [rax], rcx                                         [39;49m[32;49m
0x7fb6e7941c20    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m .. hile  x 0 = y ++  } while x 0 = y 0 = [39;49m[33;40mz[39;49m[34;49m ++ } while adump ( 0 246 67 a ) ;  .. [39;49m[32;49m
0x7fb6e7941c24    498b4718                mov rax, [r15+0x18]                                    [39;49m
[34;49m .. le  x 0 = y ++  } while x 0 = y 0 = z [39;49m[33;40m++[39;49m[34;49m } while adump ( 0 246 67 a ) ;  .. [39;49m[32;49m
0x7fb6e7941c28    48ffc0                  inc rax                                                [39;49m[32;49m
0x7fb6e7941c2b    49894718                mov [r15+0x18], rax                                    [39;49m
[34;49m ..  x 0 = y ++  } while x 0 = y 0 = z ++ [39;49m[33;40m}[39;49m[34;49m while adump ( 0 246 67 a ) ;  .. [39;49m[32;49m
0x7fb6e7941c2f    e9dafeffff              jmp 0x7fb6e7941b0e         	< Ar9.[34;49ma9[39;49m+57[32;49m >[39;49m[39;49m
[34;49m .. hile x 0 = y 0 = z ++ } while adump ( [39;49m[33;40m0[39;49m[34;49m 246 67 a ) ;  .. [39;49m[32;49m
0x7fb6e7941c34    48c7c000000000          mov rax, 0x0                                           [39;49m[32;49m
0x7fb6e7941c3b    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7941c3f    498906                  mov [r14], rax                                         [39;49m
[34;49m .. le x 0 = y 0 = z ++ } while adump ( 0 [39;49m[33;40m246[39;49m[34;49m 67 a ) ;  .. [39;49m[32;49m
0x7fb6e7941c42    48c7c0f6000000          mov rax, 0xf6                                          [39;49m[32;49m
0x7fb6e7941c49    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7941c4d    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  0 = y 0 = z ++ } while adump ( 0 246 [39;49m[33;40m67[39;49m[34;49m a ) ;  .. [39;49m[32;49m
0x7fb6e7941c50    48c7c043000000          mov rax, 0x43                                          [39;49m[32;49m
0x7fb6e7941c57    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7941c5b    498906                  mov [r14], rax                                         [39;49m
[34;49m .. = y 0 = z ++ } while adump ( 0 246 67 [39;49m[33;40ma[39;49m[34;49m ) ;  .. [39;49m[32;49m
0x7fb6e7941c5e    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e7941c62    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fb6e7941c69    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7941c6d    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  ++  } while x 0 = y 0 = z ++ } while [39;49m[33;40madump[39;49m[34;49m ( 0 246 67 a ) ;  .. [39;49m[32;49m
0x7fb6e7941c70    49b9151994e7b67f0000    mov r9, 0x7fb6e7941915                                 [39;49m[32;49m
0x7fb6e7941c7a    49ffd1                  call r9                    	< Ar9.[34;49madump[39;49m : 0x00007fb6e7941915[32;49m >[39;49m[39;49m
[34;49m .. 0 = z ++ } while adump ( 0 246 67 a ) [39;49m[33;40m;[39;49m[34;49m  .. [39;49m[32;49m
0x7fb6e7941c7d    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e7941c81    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e7941c85    4983ee08                sub r14, 0x8                                           [39;49m[32;49m
0x7fb6e7941c89    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'a9' :: codeSize = 436
Word : 0x00007fb6e7560080 :: Compiled at : 0x00007fb6e7941ad5
 =============================
::> 'wdiss' was called at namespaces/test/arrayTest.csl 290.16 <::

DataStack at : [34;49mnamespaces/test/arrayTest.csl : 290.18[39;49m :
DataStack depth =   3 : Dsp (R14) = Top = 0x00007fb6e7cd3a58, InitialTos = 0x00007fb6e7cd3a40, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fb6e7cd3a58 > = 0x0000000000000005	
  DataStack   [  -1 ] < 0x00007fb6e7cd3a50 > = 0x0000000000000005	
  DataStack   [  -2 ] < 0x00007fb6e7cd3a48 > = 0x0000000000000005	

 Ar9 :  namespaces/test/arrayTest.csl 291.23 : x = 0 y = 246 z = 67
 a.ar = 0x00007fb6e624c1f8

Dump at : namespaces/test/arrayTest.csl : 291.23 :
Dump : Address = 0x00007fb6e668b7f8 : Number = 256 :: (little endian dump)
0x00007fb6e668b7f8 :  00 01 02 03 04 05 06 07  08 09 0a 0b 0c 0d 0e 0f  ........ ........ 
0x00007fb6e668b808 :  10 11 12 13 14 15 16 17  18 19 1a 1b 1c 1d 1e 1f  ........ ........ 
0x00007fb6e668b818 :  20 21 22 23 24 25 26 27  28 29 2a 2b 2c 2d 2e 2f   !"#$%&' ()*+,-./ 
0x00007fb6e668b828 :  30 31 32 33 34 35 36 37  38 39 3a 3b 3c 3d 3e 3f  01234567 89:;<=>? 
0x00007fb6e668b838 :  40 41 42 43 44 45 46 47  48 49 4a 4b 4c 4d 4e 4f  @ABCDEFG HIJKLMNO 
0x00007fb6e668b848 :  50 51 52 53 54 55 56 57  58 59 5a 5b 5c 5d 5e 5f  PQRSTUVW XYZ[\]^_ 
0x00007fb6e668b858 :  60 61 62 63 64 65 66 67  68 69 6a 6b 6c 6d 6e 6f  `abcdefg hijklmno 
0x00007fb6e668b868 :  70 71 72 73 74 75 76 77  78 79 7a 7b 7c 7d 7e 7f  pqrstuvw xyz{|}~. 
0x00007fb6e668b878 :  80 81 82 83 84 85 86 87  88 89 8a 8b 8c 8d 8e 8f  ........ ........ 
0x00007fb6e668b888 :  90 91 92 93 94 95 96 97  98 99 9a 9b 9c 9d 9e 9f  ........ ........ 
0x00007fb6e668b898 :  a0 a1 a2 a3 a4 a5 a6 a7  a8 a9 aa ab ac ad ae af  ........ ........ 
0x00007fb6e668b8a8 :  b0 b1 b2 b3 b4 b5 b6 b7  b8 b9 ba bb bc bd be bf  ........ ........ 
0x00007fb6e668b8b8 :  c0 c1 c2 c3 c4 c5 c6 c7  c8 c9 ca cb cc cd ce cf  ........ ........ 
0x00007fb6e668b8c8 :  d0 d1 d2 d3 d4 d5 d6 d7  d8 d9 da db dc dd de df  ........ ........ 
0x00007fb6e668b8d8 :  e0 e1 e2 e3 e4 e5 e6 e7  e8 e9 ea eb ec ed ee ef  ........ ........ 
0x00007fb6e668b8e8 :  f0 f1 f2 f3 f4 f5 f6 f7  f8 f9 fa fb fc fd fe ff  ........ ........ 

 Ar9 :  namespaces/test/arrayTest.csl 292.24 : x = 0 y = 123 z = 234
 a.ar = 0x00007fb6e624c1f8

Dump at : namespaces/test/arrayTest.csl : 292.24 :
Dump : Address = 0x00007fb6e70f3cf8 : Number = 256 :: (little endian dump)
0x00007fb6e70f3cf8 :  00 01 02 03 04 05 06 07  08 09 0a 0b 0c 0d 0e 0f  ........ ........ 
0x00007fb6e70f3d08 :  10 11 12 13 14 15 16 17  18 19 1a 1b 1c 1d 1e 1f  ........ ........ 
0x00007fb6e70f3d18 :  20 21 22 23 24 25 26 27  28 29 2a 2b 2c 2d 2e 2f   !"#$%&' ()*+,-./ 
0x00007fb6e70f3d28 :  30 31 32 33 34 35 36 37  38 39 3a 3b 3c 3d 3e 3f  01234567 89:;<=>? 
0x00007fb6e70f3d38 :  40 41 42 43 44 45 46 47  48 49 4a 4b 4c 4d 4e 4f  @ABCDEFG HIJKLMNO 
0x00007fb6e70f3d48 :  50 51 52 53 54 55 56 57  58 59 5a 5b 5c 5d 5e 5f  PQRSTUVW XYZ[\]^_ 
0x00007fb6e70f3d58 :  60 61 62 63 64 65 66 67  68 69 6a 6b 6c 6d 6e 6f  `abcdefg hijklmno 
0x00007fb6e70f3d68 :  70 71 72 73 74 75 76 77  78 79 7a 7b 7c 7d 7e 7f  pqrstuvw xyz{|}~. 
0x00007fb6e70f3d78 :  80 81 82 83 84 85 86 87  88 89 8a 8b 8c 8d 8e 8f  ........ ........ 
0x00007fb6e70f3d88 :  90 91 92 93 94 95 96 97  98 99 9a 9b 9c 9d 9e 9f  ........ ........ 
0x00007fb6e70f3d98 :  a0 a1 a2 a3 a4 a5 a6 a7  a8 a9 aa ab ac ad ae af  ........ ........ 
0x00007fb6e70f3da8 :  b0 b1 b2 b3 b4 b5 b6 b7  b8 b9 ba bb bc bd be bf  ........ ........ 
0x00007fb6e70f3db8 :  c0 c1 c2 c3 c4 c5 c6 c7  c8 c9 ca cb cc cd ce cf  ........ ........ 
0x00007fb6e70f3dc8 :  d0 d1 d2 d3 d4 d5 d6 d7  d8 d9 da db dc dd de df  ........ ........ 
0x00007fb6e70f3dd8 :  e0 e1 e2 e3 e4 e5 e6 e7  e8 e9 ea eb ec ed ee ef  ........ ........ 
0x00007fb6e70f3de8 :  f0 f1 f2 f3 f4 f5 f6 f7  f8 f9 fa fb fc fd fe ff  ........ ........ 
 0x00007fb6e724cfb8 0x00007fb6e724cfb9 0x00007fb6e724cfc1 26 254
 =============================
ct.[34;49mtct[39;49m <:> csl compiled word
SourceCode for ct.[34;49mtct[39;49m :> 
[34;49m: tct ( y ct a ) a.ar [0][0][0] 0x77 = a.ar [0][y @][0] a.ar [0][0][0] @ = a.ar [y @][y @][0] a.ar [0][0][0] @ = a.ar [y @ 1 +][y @][y @] dup nl hp a.ar [0][0][0] @ = a.ar [y @][y @][y @ 1 +] dup nl hp a.ar [0][0][0] @ = TODO ( "array out of bounds checking with variables?!" ) a.ar 32 dump ; [39;49m
Source code file location of [34;49mtct[39;49m : "namespaces/test/arrayTest.csl" : 303.2 :: we are now at : namespaces/test/arrayTest.csl : 313.16
Compiled with : optimizeOn, inlineOn, Jcc8 on
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xe7941c8f -- code size = 567 bytes
TypeSignature : 
 -----------------------------
Word :: ct.[34;49mtct[39;49m : definition = 0x00007fb6e7941c8f : disassembly at namespaces/test/arrayTest.csl : 313.16 :
[34;49m ..                                     : [39;49m[33;40mtct[39;49m[34;49m ( y ct a ) a.ar [0][0][0] 0x77 =  a.ar [0][y @][0] a.ar [0][0][0] @ = a.ar [y @][y @][0] a.ar [0] .. [39;49m[32;49m
0x7fb6e7941c8f    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fb6e7941c93    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e7941c97    4981c608000000          add r14, 0x8                                           [39;49m
[34;49m ..                      : tct ( y ct a ) [39;49m[33;40ma[39;49m[34;49m.ar [0][0][0] 0x77 =  a.ar [0][y @][0] a.ar [0][0][0] @ = a.ar [y @][y @][0] a.ar [0][0][0] @ = a.ar .. [39;49m[32;49m
0x7fb6e7941c9e    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e7941ca2    4881c000000000          add rax, 0x0                                           [39;49m
[34;49m ..       : tct ( y ct a ) a.ar [0][0][0] [39;49m[33;40m0x77[39;49m[34;49m =  a.ar [0][y @][0] a.ar [0][0][0] @ = a.ar [y @][y @][0] a.ar [0][0][0] @ = a.ar [y @ 1 +][y @] .. [39;49m[32;49m
0x7fb6e7941ca9    b177                    mov cl, 0x77                                           [39;49m
[34;49m ..  : tct ( y ct a ) a.ar [0][0][0] 0x77 [39;49m[33;40m=[39;49m[34;49m  a.ar [0][y @][0] a.ar [0][0][0] @ = a.ar [y @][y @][0] a.ar [0][0][0] @ = a.ar [y @ 1 +][y @][y @] .. [39;49m[32;49m
0x7fb6e7941cab    8808                    mov [rax], cl                                          [39;49m
[34;49m  : tct ( y ct a ) a.ar [0][0][0] 0x77 =  [39;49m[33;40ma[39;49m[34;49m.ar [0][y @][0] a.ar [0][0][0] @ = a.ar [y @][y @][0] a.ar [0][0][0] @ = a.ar [y @ 1 +][y @][y @] du .. [39;49m[32;49m
0x7fb6e7941cad    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e7941cb1    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fb6e7941cb8    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7941cbc    498906                  mov [r14], rax                                         [39;49m
[34;49m .. t a ) a.ar [0][0][0] 0x77 =  a.ar [0][[39;49m[33;40my[39;49m[34;49m @][0] a.ar [0][0][0] @ = a.ar [y @][y @][0] a.ar [0][0][0] @ = a.ar [y @ 1 +][y @][y @] dup nl hp a .. [39;49m[32;49m
0x7fb6e7941cbf    498b47f0                mov rax, [r15-0x10]                                    [39;49m[32;49m
0x7fb6e7941cc3    486bc003                imul rax, rax, 0x3                                     [39;49m[32;49m
0x7fb6e7941cc7    490106                  add [r14], rax                                         [39;49m
[34;49m .. ar [0][0][0] 0x77 =  a.ar [0][y @][0] [39;49m[33;40ma[39;49m[34;49m.ar [0][0][0] @ = a.ar [y @][y @][0] a.ar [0][0][0] @ = a.ar [y @ 1 +][y @][y @] dup nl hp a.ar [0][ .. [39;49m[32;49m
0x7fb6e7941cca    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e7941cce    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fb6e7941cd5    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7941cd9    498906                  mov [r14], rax                                         [39;49m
[34;49m .. 77 =  a.ar [0][y @][0] a.ar [0][0][0] [39;49m[33;40m@[39;49m[34;49m = a.ar [y @][y @][0] a.ar [0][0][0] @ = a.ar [y @ 1 +][y @][y @] dup nl hp a.ar [0][0][0] @ = a.ar  .. [39;49m[32;49m
0x7fb6e7941cdc    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fb6e7941cdf    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fb6e7941ce2    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  =  a.ar [0][y @][0] a.ar [0][0][0] @ [39;49m[33;40m=[39;49m[34;49m a.ar [y @][y @][0] a.ar [0][0][0] @ = a.ar [y @ 1 +][y @][y @] dup nl hp a.ar [0][0][0] @ = a.ar [y .. [39;49m[32;49m
0x7fb6e7941ce5    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fb6e7941ce8    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fb6e7941cec    488908                  mov [rax], rcx                                         [39;49m[32;49m
0x7fb6e7941cef    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m ..   a.ar [0][y @][0] a.ar [0][0][0] @ = [39;49m[33;40ma[39;49m[34;49m.ar [y @][y @][0] a.ar [0][0][0] @ = a.ar [y @ 1 +][y @][y @] dup nl hp a.ar [0][0][0] @ = a.ar [y @ .. [39;49m[32;49m
0x7fb6e7941cf3    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e7941cf7    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fb6e7941cfe    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7941d02    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  [0][y @][0] a.ar [0][0][0] @ = a.ar [[39;49m[33;40my[39;49m[34;49m @][y @][0] a.ar [0][0][0] @ = a.ar [y @ 1 +][y @][y @] dup nl hp a.ar [0][0][0] @ = a.ar [y @][y @] .. [39;49m[32;49m
0x7fb6e7941d05    498b47f0                mov rax, [r15-0x10]                                    [39;49m[32;49m
0x7fb6e7941d09    486bc009                imul rax, rax, 0x9                                     [39;49m[32;49m
0x7fb6e7941d0d    490106                  add [r14], rax                                         [39;49m
[34;49m .. y @][0] a.ar [0][0][0] @ = a.ar [y @][[39;49m[33;40my[39;49m[34;49m @][0] a.ar [0][0][0] @ = a.ar [y @ 1 +][y @][y @] dup nl hp a.ar [0][0][0] @ = a.ar [y @][y @][y @  .. [39;49m[32;49m
0x7fb6e7941d10    498b47f0                mov rax, [r15-0x10]                                    [39;49m[32;49m
0x7fb6e7941d14    486bc003                imul rax, rax, 0x3                                     [39;49m[32;49m
0x7fb6e7941d18    490106                  add [r14], rax                                         [39;49m
[34;49m .. a.ar [0][0][0] @ = a.ar [y @][y @][0] [39;49m[33;40ma[39;49m[34;49m.ar [0][0][0] @ = a.ar [y @ 1 +][y @][y @] dup nl hp a.ar [0][0][0] @ = a.ar [y @][y @][y @ 1 +] dup .. [39;49m[32;49m
0x7fb6e7941d1b    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e7941d1f    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fb6e7941d26    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7941d2a    498906                  mov [r14], rax                                         [39;49m
[34;49m .. @ = a.ar [y @][y @][0] a.ar [0][0][0] [39;49m[33;40m@[39;49m[34;49m = a.ar [y @ 1 +][y @][y @] dup nl hp a.ar [0][0][0] @ = a.ar [y @][y @][y @ 1 +] dup nl hp a.ar [0] .. [39;49m[32;49m
0x7fb6e7941d2d    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fb6e7941d30    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fb6e7941d33    498906                  mov [r14], rax                                         [39;49m
[34;49m .. = a.ar [y @][y @][0] a.ar [0][0][0] @ [39;49m[33;40m=[39;49m[34;49m a.ar [y @ 1 +][y @][y @] dup nl hp a.ar [0][0][0] @ = a.ar [y @][y @][y @ 1 +] dup nl hp a.ar [0][0 .. [39;49m[32;49m
0x7fb6e7941d36    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fb6e7941d39    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fb6e7941d3d    488908                  mov [rax], rcx                                         [39;49m[32;49m
0x7fb6e7941d40    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m .. a.ar [y @][y @][0] a.ar [0][0][0] @ = [39;49m[33;40ma[39;49m[34;49m.ar [y @ 1 +][y @][y @] dup nl hp a.ar [0][0][0] @ = a.ar [y @][y @][y @ 1 +] dup nl hp a.ar [0][0][ .. [39;49m[32;49m
0x7fb6e7941d44    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e7941d48    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fb6e7941d4f    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7941d53    498906                  mov [r14], rax                                         [39;49m
[34;49m .. y @][y @][0] a.ar [0][0][0] @ = a.ar [[39;49m[33;40my[39;49m[34;49m @ 1 +][y @][y @] dup nl hp a.ar [0][0][0] @ = a.ar [y @][y @][y @ 1 +] dup nl hp a.ar [0][0][0] @ = .. [39;49m[32;49m
0x7fb6e7941d56    498b47f0                mov rax, [r15-0x10]                                    [39;49m
[34;49m .. [y @][0] a.ar [0][0][0] @ = a.ar [y @ [39;49m[33;40m1[39;49m[34;49m +][y @][y @] dup nl hp a.ar [0][0][0] @ = a.ar [y @][y @][y @ 1 +] dup nl hp a.ar [0][0][0] @ = TOD .. [39;49m[32;49m
0x7fb6e7941d5a    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m ..  @][0] a.ar [0][0][0] @ = a.ar [y @ 1 [39;49m[33;40m+[39;49m[34;49m][y @][y @] dup nl hp a.ar [0][0][0] @ = a.ar [y @][y @][y @ 1 +] dup nl hp a.ar [0][0][0] @ = TODO  .. [39;49m[32;49m
0x7fb6e7941d61    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fb6e7941d64    486bc009                imul rax, rax, 0x9                                     [39;49m[32;49m
0x7fb6e7941d68    490106                  add [r14], rax                                         [39;49m
[34;49m .. [0] a.ar [0][0][0] @ = a.ar [y @ 1 +][[39;49m[33;40my[39;49m[34;49m @][y @] dup nl hp a.ar [0][0][0] @ = a.ar [y @][y @][y @ 1 +] dup nl hp a.ar [0][0][0] @ = TODO ( " .. [39;49m[32;49m
0x7fb6e7941d6b    498b47f0                mov rax, [r15-0x10]                                    [39;49m[32;49m
0x7fb6e7941d6f    486bc003                imul rax, rax, 0x3                                     [39;49m[32;49m
0x7fb6e7941d73    490106                  add [r14], rax                                         [39;49m
[34;49m .. .ar [0][0][0] @ = a.ar [y @ 1 +][y @][[39;49m[33;40my[39;49m[34;49m @] dup nl hp a.ar [0][0][0] @ = a.ar [y @][y @][y @ 1 +] dup nl hp a.ar [0][0][0] @ = TODO ( "array .. [39;49m[32;49m
0x7fb6e7941d76    498b47f0                mov rax, [r15-0x10]                                    [39;49m[32;49m
0x7fb6e7941d7a    490106                  add [r14], rax                                         [39;49m
[34;49m .. 0][0][0] @ = a.ar [y @ 1 +][y @][y @] [39;49m[33;40mdup[39;49m[34;49m nl hp a.ar [0][0][0] @ = a.ar [y @][y @][y @ 1 +] dup nl hp a.ar [0][0][0] @ = TODO ( "array out  .. [39;49m[32;49m
0x7fb6e7941d7d    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fb6e7941d80    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7941d84    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ][0] @ = a.ar [y @ 1 +][y @][y @] dup [39;49m[33;40mnl[39;49m[34;49m hp a.ar [0][0][0] @ = a.ar [y @][y @][y @ 1 +] dup nl hp a.ar [0][0][0] @ = TODO ( "array out of b .. [39;49m[32;49m
0x7fb6e7941d87    49b8e08080892d560000    mov r8, 0x562d898080e0                                 [39;49m[32;49m
0x7fb6e7941d91    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e7941d9b    49ffd1                  call r9                    	< Io.[34;49mnewline[39;49m : 0x0000562d898080e0[32;49m >[39;49m[39;49m
[34;49m .. ] @ = a.ar [y @ 1 +][y @][y @] dup nl [39;49m[33;40mhp[39;49m[34;49m a.ar [0][0][0] @ = a.ar [y @][y @][y @ 1 +] dup nl hp a.ar [0][0][0] @ = TODO ( "array out of boun .. [39;49m[32;49m
0x7fb6e7941d9e    49b987a493e7b67f0000    mov r9, 0x7fb6e793a487                                 [39;49m[32;49m
0x7fb6e7941da8    49ffd1                  call r9                    	< Int.[34;49mhp[39;49m : 0x00007fb6e793a487[32;49m >[39;49m[39;49m
[34;49m ..  = a.ar [y @ 1 +][y @][y @] dup nl hp [39;49m[33;40ma[39;49m[34;49m.ar [0][0][0] @ = a.ar [y @][y @][y @ 1 +] dup nl hp a.ar [0][0][0] @ = TODO ( "array out of bounds  .. [39;49m[32;49m
0x7fb6e7941dab    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e7941daf    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fb6e7941db6    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7941dba    498906                  mov [r14], rax                                         [39;49m
[34;49m .. +][y @][y @] dup nl hp a.ar [0][0][0] [39;49m[33;40m@[39;49m[34;49m = a.ar [y @][y @][y @ 1 +] dup nl hp a.ar [0][0][0] @ = TODO ( "array out of bounds checking with v .. [39;49m[32;49m
0x7fb6e7941dbd    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fb6e7941dc0    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fb6e7941dc3    498906                  mov [r14], rax                                         [39;49m
[34;49m .. [y @][y @] dup nl hp a.ar [0][0][0] @ [39;49m[33;40m=[39;49m[34;49m a.ar [y @][y @][y @ 1 +] dup nl hp a.ar [0][0][0] @ = TODO ( "array out of bounds checking with var .. [39;49m[32;49m
0x7fb6e7941dc6    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fb6e7941dc9    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fb6e7941dcd    488908                  mov [rax], rcx                                         [39;49m[32;49m
0x7fb6e7941dd0    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m ..  @][y @] dup nl hp a.ar [0][0][0] @ = [39;49m[33;40ma[39;49m[34;49m.ar [y @][y @][y @ 1 +] dup nl hp a.ar [0][0][0] @ = TODO ( "array out of bounds checking with varia .. [39;49m[32;49m
0x7fb6e7941dd4    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e7941dd8    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fb6e7941ddf    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7941de3    498906                  mov [r14], rax                                         [39;49m
[34;49m .. @] dup nl hp a.ar [0][0][0] @ = a.ar [[39;49m[33;40my[39;49m[34;49m @][y @][y @ 1 +] dup nl hp a.ar [0][0][0] @ = TODO ( "array out of bounds checking with variables?! .. [39;49m[32;49m
0x7fb6e7941de6    498b47f0                mov rax, [r15-0x10]                                    [39;49m[32;49m
0x7fb6e7941dea    486bc009                imul rax, rax, 0x9                                     [39;49m[32;49m
0x7fb6e7941dee    490106                  add [r14], rax                                         [39;49m
[34;49m .. p nl hp a.ar [0][0][0] @ = a.ar [y @][[39;49m[33;40my[39;49m[34;49m @][y @ 1 +] dup nl hp a.ar [0][0][0] @ = TODO ( "array out of bounds checking with variables?!" ) a .. [39;49m[32;49m
0x7fb6e7941df1    498b47f0                mov rax, [r15-0x10]                                    [39;49m[32;49m
0x7fb6e7941df5    486bc003                imul rax, rax, 0x3                                     [39;49m[32;49m
0x7fb6e7941df9    490106                  add [r14], rax                                         [39;49m
[34;49m .. hp a.ar [0][0][0] @ = a.ar [y @][y @][[39;49m[33;40my[39;49m[34;49m @ 1 +] dup nl hp a.ar [0][0][0] @ = TODO ( "array out of bounds checking with variables?!" ) a.ar 3 .. [39;49m[32;49m
0x7fb6e7941dfc    498b47f0                mov rax, [r15-0x10]                                    [39;49m
[34;49m .. .ar [0][0][0] @ = a.ar [y @][y @][y @ [39;49m[33;40m1[39;49m[34;49m +] dup nl hp a.ar [0][0][0] @ = TODO ( "array out of bounds checking with variables?!" ) a.ar 32 du .. [39;49m[32;49m
0x7fb6e7941e00    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m .. r [0][0][0] @ = a.ar [y @][y @][y @ 1 [39;49m[33;40m+[39;49m[34;49m] dup nl hp a.ar [0][0][0] @ = TODO ( "array out of bounds checking with variables?!" ) a.ar 32 dump .. [39;49m[32;49m
0x7fb6e7941e07    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fb6e7941e0a    490106                  add [r14], rax                                         [39;49m
[34;49m .. 0][0][0] @ = a.ar [y @][y @][y @ 1 +] [39;49m[33;40mdup[39;49m[34;49m nl hp a.ar [0][0][0] @ = TODO ( "array out of bounds checking with variables?!" ) a.ar 32 dump ;  .. [39;49m[32;49m
0x7fb6e7941e0d    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fb6e7941e10    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7941e14    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ][0] @ = a.ar [y @][y @][y @ 1 +] dup [39;49m[33;40mnl[39;49m[34;49m hp a.ar [0][0][0] @ = TODO ( "array out of bounds checking with variables?!" ) a.ar 32 dump ;  .. [39;49m[32;49m
0x7fb6e7941e17    49b8e08080892d560000    mov r8, 0x562d898080e0                                 [39;49m[32;49m
0x7fb6e7941e21    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e7941e2b    49ffd1                  call r9                    	< Io.[34;49mnewline[39;49m : 0x0000562d898080e0[32;49m >[39;49m[39;49m
[34;49m .. ] @ = a.ar [y @][y @][y @ 1 +] dup nl [39;49m[33;40mhp[39;49m[34;49m a.ar [0][0][0] @ = TODO ( "array out of bounds checking with variables?!" ) a.ar 32 dump ;  .. [39;49m[32;49m
0x7fb6e7941e2e    49b987a493e7b67f0000    mov r9, 0x7fb6e793a487                                 [39;49m[32;49m
0x7fb6e7941e38    49ffd1                  call r9                    	< Int.[34;49mhp[39;49m : 0x00007fb6e793a487[32;49m >[39;49m[39;49m
[34;49m ..  = a.ar [y @][y @][y @ 1 +] dup nl hp [39;49m[33;40ma[39;49m[34;49m.ar [0][0][0] @ = TODO ( "array out of bounds checking with variables?!" ) a.ar 32 dump ;  .. [39;49m[32;49m
0x7fb6e7941e3b    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e7941e3f    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fb6e7941e46    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7941e4a    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  @][y @ 1 +] dup nl hp a.ar [0][0][0] [39;49m[33;40m@[39;49m[34;49m = TODO ( "array out of bounds checking with variables?!" ) a.ar 32 dump ;  .. [39;49m[32;49m
0x7fb6e7941e4d    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fb6e7941e50    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fb6e7941e53    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ][y @ 1 +] dup nl hp a.ar [0][0][0] @ [39;49m[33;40m=[39;49m[34;49m TODO ( "array out of bounds checking with variables?!" ) a.ar 32 dump ;  .. [39;49m[32;49m
0x7fb6e7941e56    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fb6e7941e59    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fb6e7941e5d    488908                  mov [rax], rcx                                         [39;49m[32;49m
0x7fb6e7941e60    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m .. ] dup nl hp a.ar [0][0][0] @ = TODO ( [39;49m[33;40m"[39;49m[34;49marray out of bounds checking with variables?!" ) a.ar 32 dump ;  .. [39;49m[32;49m
0x7fb6e7941e64    48b8953d7ee7b67f0000    mov rax, 0x7fb6e77e3d95    	[32;49m< string : '[39;49m[39;49marray out of bounds checking with variables?![39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fb6e7941e6e    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7941e72    498906                  mov [r14], rax                                         [39;49m
[34;49m .. y @ 1 +] dup nl hp a.ar [0][0][0] @ = [39;49m[33;40mTODO[39;49m[34;49m ( "array out of bounds checking with variables?!" ) a.ar 32 dump ;  .. [39;49m[32;49m
0x7fb6e7941e75    49b927cc93e7b67f0000    mov r9, 0x7fb6e793cc27                                 [39;49m[32;49m
0x7fb6e7941e7f    49ffd1                  call r9                    	< Root.[34;49mTODO[39;49m : 0x00007fb6e793cc27[32;49m >[39;49m[39;49m
[34;49m .. f bounds checking with variables?!" ) [39;49m[33;40ma[39;49m[34;49m.ar 32 dump ;  .. [39;49m[32;49m
0x7fb6e7941e82    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e7941e86    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fb6e7941e8d    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7941e91    498906                  mov [r14], rax                                         [39;49m
[34;49m .. nds checking with variables?!" ) a.ar [39;49m[33;40m32[39;49m[34;49m dump ;  .. [39;49m[32;49m
0x7fb6e7941e94    48c7c020000000          mov rax, 0x20                                          [39;49m[32;49m
0x7fb6e7941e9b    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7941e9f    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  checking with variables?!" ) a.ar 32 [39;49m[33;40mdump[39;49m[34;49m ;  .. [39;49m[32;49m
0x7fb6e7941ea2    49b830a480892d560000    mov r8, 0x562d8980a430                                 [39;49m[32;49m
0x7fb6e7941eac    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e7941eb6    49ffd1                  call r9                    	< Debug.[34;49mdump[39;49m : 0x0000562d8980a430[32;49m >[39;49m[39;49m
[34;49m .. king with variables?!" ) a.ar 32 dump [39;49m[33;40m;[39;49m[34;49m  .. [39;49m[32;49m
0x7fb6e7941eb9    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e7941ebd    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e7941ec1    4983ee10                sub r14, 0x10                                          [39;49m[32;49m
0x7fb6e7941ec5    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'tct' :: codeSize = 566
Word : 0x00007fb6e7566c40 :: Compiled at : 0x00007fb6e7941c8f
 =============================
::> 'wdiss' was called at namespaces/test/arrayTest.csl 313.16 <::

 0x00007fb6e72514b6
 0x00007fb6e72514ae

 -----------------------------
[35;40m array out of bounds checking with variables?![39;49m namespaces/test/arrayTest.csl 315.9
 -----------------------------


Dump at : namespaces/test/arrayTest.csl : 315.9 :
Dump : Address = 0x00007fb6e7251493 : Number = 32 :: (little endian dump)
0x00007fb6e7251493 :  77 00 00 00 00 00 77 00  00 00 00 00 00 00 00 00  w.....w. ........ 
0x00007fb6e72514a3 :  00 00 00 00 00 00 00 00  77 00 00 77 00 00 00 00  ........ w..w.... 

 0x00007fb6e7251f07
 0x00007fb6e7251f19
 0x00007fb6e7251f07
Dump at : namespaces/test/arrayTest.csl : 325.11 :
Dump : Address = 0x00007fb6e7251efe : Number = 32 :: (little endian dump)
0x00007fb6e7251efe :  00 00 00 00 00 00 00 00  00 4d 00 00 00 00 00 00  ........ .M...... 
0x00007fb6e7251f0e :  00 00 00 00 00 00 00 00  00 00 00 4d 00 00 00 00  ........ ...M.... 
 0x004d000000000010 0x00007fb6e72525f9
Dump at : namespaces/test/arrayTest.csl : 348.16 :
Dump : Address = 0x00007fb6e72525f9 : Number = 27 :: (little endian dump)
0x00007fb6e72525f9 :  00 00 00 00 00 00 4d 00  00 00 00 00 00 00 00 06  ......M. ........ 
0x00007fb6e7252609 :  0f 00 00 00 00 00 4d 00  10 19 19 00 00 00 00 00  ......M. ........ 

 =============================
C_Syntax.[34;49mctcta[39;49m <:> csl compiled word, prefix
SourceCode for C_Syntax.[34;49mctcta[39;49m :> 
[34;49mvoid ctcta ( y cta a ) { a.ar [0][y + 1][0] = ' ; a.ar [y ][y + 1][ 0] = a.ar [0][y + 1][0] ; a.ar [y ][y + 1][1] = a.ar [y ][y + 1][0] ; a.ar [y + 1][y + 1][ 0 ] = a.ar [y ][y + 1][1] ; hp ( a.ar [y ][y + 1][1] ) ; a.ar [y + 1][y + 1][1] = a.ar [y + 1][y + 1][0] ; a.ar [y + 1][y + 1][ y ] = a.ar [y + 1][y + 1][1] ; a.ar [y + 1][y + 1][y + 1] = a.ar [y + 1][y + 1][y] ; hp ( &a.ar ) ; cadump ( &a.ar 27 ) ; } [39;49m
Source code file location of [34;49mctcta[39;49m : "namespaces/test/arrayTest.csl" : 334.6 :: we are now at : namespaces/test/arrayTest.csl : 350.19
Compiled with : optimizeOn, inlineOn, c_syntaxOn, infixOn, Jcc8 on
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xe79420b4 -- code size = 1079 bytes
TypeSignature : Any . Object 
 -----------------------------
Word :: C_Syntax.[34;49mctcta[39;49m : definition = 0x00007fb6e79420b4 : disassembly at namespaces/test/arrayTest.csl : 350.19 :
[34;49m ..                                  void [39;49m[33;40mctcta[39;49m[34;49m ( y cta a ) { a.ar [0][y + 1][0] = ' ; a.ar [y ][y + 1][ 0] = a.ar [0][y + 1][0] ;  a.ar [y ][y .. [39;49m[32;49m
0x7fb6e79420b4    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fb6e79420b8    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e79420bc    4981c608000000          add r14, 0x8                                           [39;49m
[34;49m ..              void ctcta ( y cta a ) { [39;49m[33;40ma[39;49m[34;49m.ar [0][y + 1][0] = ' ; a.ar [y ][y + 1][ 0] = a.ar [0][y + 1][0] ;  a.ar [y ][y + 1][1] = a.ar [y ] .. [39;49m[32;49m
0x7fb6e79420c3    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e79420c7    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fb6e79420ce    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e79420d2    498906                  mov [r14], rax                                         [39;49m
[34;49m ..     void ctcta ( y cta a ) { a.ar [0][[39;49m[33;40my[39;49m[34;49m + 1][0] = ' ; a.ar [y ][y + 1][ 0] = a.ar [0][y + 1][0] ;  a.ar [y ][y + 1][1] = a.ar [y ][y + 1][0 .. [39;49m[32;49m
0x7fb6e79420d5    498b47f0                mov rax, [r15-0x10]                                    [39;49m
[34;49m .. void ctcta ( y cta a ) { a.ar [0][y + [39;49m[33;40m1[39;49m[34;49m][0] = ' ; a.ar [y ][y + 1][ 0] = a.ar [0][y + 1][0] ;  a.ar [y ][y + 1][1] = a.ar [y ][y + 1][0] ;  .. [39;49m[32;49m
0x7fb6e79420d9    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m ..   void ctcta ( y cta a ) { a.ar [0][y [39;49m[33;40m+[39;49m[34;49m 1][0] = ' ; a.ar [y ][y + 1][ 0] = a.ar [0][y + 1][0] ;  a.ar [y ][y + 1][1] = a.ar [y ][y + 1][0]  .. [39;49m[32;49m
0x7fb6e79420e0    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fb6e79420e3    486bc003                imul rax, rax, 0x3                                     [39;49m[32;49m
0x7fb6e79420e7    490106                  add [r14], rax                                         [39;49m
[34;49m .. ta ( y cta a ) { a.ar [0][y + 1][0] = [39;49m[33;40m'M'[39;49m[34;49m a.ar [y ][y + 1][ 0] = a.ar [0][y + 1][0] ;  a.ar [y ][y + 1][1] = a.ar [y ][y + 1][0] ;  a.ar [y .. [39;49m[32;49m
0x7fb6e79420ea    48c7c04d000000          mov rax, 0x4d                                          [39;49m[32;49m
0x7fb6e79420f1    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e79420f5    498906                  mov [r14], rax                                         [39;49m
[34;49m .. tcta ( y cta a ) { a.ar [0][y + 1][0] [39;49m[33;40m=[39;49m[34;49m ' ; a.ar [y ][y + 1][ 0] = a.ar [0][y + 1][0] ;  a.ar [y ][y + 1][1] = a.ar [y ][y + 1][0] ;  a.ar  .. [39;49m[32;49m
0x7fb6e79420f8    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fb6e79420fb    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fb6e79420ff    488908                  mov [rax], rcx                                         [39;49m[32;49m
0x7fb6e7942102    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m ..  y cta a ) { a.ar [0][y + 1][0] = ' ; [39;49m[33;40ma[39;49m[34;49m.ar [y ][y + 1][ 0] = a.ar [0][y + 1][0] ;  a.ar [y ][y + 1][1] = a.ar [y ][y + 1][0] ;  a.ar [y + 1 .. [39;49m[32;49m
0x7fb6e7942106    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e794210a    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fb6e7942111    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7942115    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  a ) { a.ar [0][y + 1][0] = ' ; a.ar [[39;49m[33;40my[39;49m[34;49m ][y + 1][ 0] = a.ar [0][y + 1][0] ;  a.ar [y ][y + 1][1] = a.ar [y ][y + 1][0] ;  a.ar [y + 1][y +  .. [39;49m[32;49m
0x7fb6e7942118    498b47f0                mov rax, [r15-0x10]                                    [39;49m[32;49m
0x7fb6e794211c    486bc009                imul rax, rax, 0x9                                     [39;49m[32;49m
0x7fb6e7942120    490106                  add [r14], rax                                         [39;49m
[34;49m ..  { a.ar [0][y + 1][0] = ' ; a.ar [y ][[39;49m[33;40my[39;49m[34;49m + 1][ 0] = a.ar [0][y + 1][0] ;  a.ar [y ][y + 1][1] = a.ar [y ][y + 1][0] ;  a.ar [y + 1][y + 1][  .. [39;49m[32;49m
0x7fb6e7942123    498b47f0                mov rax, [r15-0x10]                                    [39;49m
[34;49m .. .ar [0][y + 1][0] = ' ; a.ar [y ][y + [39;49m[33;40m1[39;49m[34;49m][ 0] = a.ar [0][y + 1][0] ;  a.ar [y ][y + 1][1] = a.ar [y ][y + 1][0] ;  a.ar [y + 1][y + 1][ 0 ]  .. [39;49m[32;49m
0x7fb6e7942127    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m ..  a.ar [0][y + 1][0] = ' ; a.ar [y ][y [39;49m[33;40m+[39;49m[34;49m 1][ 0] = a.ar [0][y + 1][0] ;  a.ar [y ][y + 1][1] = a.ar [y ][y + 1][0] ;  a.ar [y + 1][y + 1][ 0  .. [39;49m[32;49m
0x7fb6e794212e    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fb6e7942131    486bc003                imul rax, rax, 0x3                                     [39;49m[32;49m
0x7fb6e7942135    490106                  add [r14], rax                                         [39;49m
[34;49m ..  + 1][0] = ' ; a.ar [y ][y + 1][ 0] = [39;49m[33;40ma[39;49m[34;49m.ar [0][y + 1][0] ;  a.ar [y ][y + 1][1] = a.ar [y ][y + 1][0] ;  a.ar [y + 1][y + 1][ 0 ] = a.ar [y .. [39;49m[32;49m
0x7fb6e7942138    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e794213c    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fb6e7942143    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fb6e7942146    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e794214a    498906                  mov [r14], rax                                         [39;49m
[34;49m .. = ' ; a.ar [y ][y + 1][ 0] = a.ar [0][[39;49m[33;40my[39;49m[34;49m + 1][0] ;  a.ar [y ][y + 1][1] = a.ar [y ][y + 1][0] ;  a.ar [y + 1][y + 1][ 0 ] = a.ar [y ][y + 1] .. [39;49m[32;49m
0x7fb6e794214d    498b47f0                mov rax, [r15-0x10]                                    [39;49m
[34;49m .. ; a.ar [y ][y + 1][ 0] = a.ar [0][y + [39;49m[33;40m1[39;49m[34;49m][0] ;  a.ar [y ][y + 1][1] = a.ar [y ][y + 1][0] ;  a.ar [y + 1][y + 1][ 0 ] = a.ar [y ][y + 1][1]  .. [39;49m[32;49m
0x7fb6e7942151    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m .. ' ; a.ar [y ][y + 1][ 0] = a.ar [0][y [39;49m[33;40m+[39;49m[34;49m 1][0] ;  a.ar [y ][y + 1][1] = a.ar [y ][y + 1][0] ;  a.ar [y + 1][y + 1][ 0 ] = a.ar [y ][y + 1][1 .. [39;49m[32;49m
0x7fb6e7942158    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fb6e794215b    486bc003                imul rax, rax, 0x3                                     [39;49m[32;49m
0x7fb6e794215f    490106                  add [r14], rax                                         [39;49m
[34;49m .. [y + 1][0] = ' ; a.ar [y ][y + 1][ 0] [39;49m[33;40m=[39;49m[34;49m a.ar [0][y + 1][0] ;  a.ar [y ][y + 1][1] = a.ar [y ][y + 1][0] ;  a.ar [y + 1][y + 1][ 0 ] = a.ar  .. [39;49m[32;49m
0x7fb6e7942162    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fb6e7942165    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fb6e7942169    488908                  mov [rax], rcx                                         [39;49m[32;49m
0x7fb6e794216c    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m ..  ][y + 1][ 0] = a.ar [0][y + 1][0] ;  [39;49m[33;40ma[39;49m[34;49m.ar [y ][y + 1][1] = a.ar [y ][y + 1][0] ;  a.ar [y + 1][y + 1][ 0 ] = a.ar [y ][y + 1][1] ;  hp ( a .. [39;49m[32;49m
0x7fb6e7942170    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e7942174    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fb6e794217b    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e794217f    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  1][ 0] = a.ar [0][y + 1][0] ;  a.ar [[39;49m[33;40my[39;49m[34;49m ][y + 1][1] = a.ar [y ][y + 1][0] ;  a.ar [y + 1][y + 1][ 0 ] = a.ar [y ][y + 1][1] ;  hp ( a.ar [y .. [39;49m[32;49m
0x7fb6e7942182    498b47f0                mov rax, [r15-0x10]                                    [39;49m[32;49m
0x7fb6e7942186    486bc009                imul rax, rax, 0x9                                     [39;49m[32;49m
0x7fb6e794218a    490106                  add [r14], rax                                         [39;49m
[34;49m ..  0] = a.ar [0][y + 1][0] ;  a.ar [y ][[39;49m[33;40my[39;49m[34;49m + 1][1] = a.ar [y ][y + 1][0] ;  a.ar [y + 1][y + 1][ 0 ] = a.ar [y ][y + 1][1] ;  hp ( a.ar [y ][y .. [39;49m[32;49m
0x7fb6e794218d    498b47f0                mov rax, [r15-0x10]                                    [39;49m
[34;49m .. = a.ar [0][y + 1][0] ;  a.ar [y ][y + [39;49m[33;40m1[39;49m[34;49m][1] = a.ar [y ][y + 1][0] ;  a.ar [y + 1][y + 1][ 0 ] = a.ar [y ][y + 1][1] ;  hp ( a.ar [y ][y + 1 .. [39;49m[32;49m
0x7fb6e7942191    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m .. ] = a.ar [0][y + 1][0] ;  a.ar [y ][y [39;49m[33;40m+[39;49m[34;49m 1][1] = a.ar [y ][y + 1][0] ;  a.ar [y + 1][y + 1][ 0 ] = a.ar [y ][y + 1][1] ;  hp ( a.ar [y ][y + .. [39;49m[32;49m
0x7fb6e7942198    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fb6e794219b    486bc003                imul rax, rax, 0x3                                     [39;49m[32;49m
0x7fb6e794219f    490106                  add [r14], rax                                         [39;49m
[34;49m .. .ar [0][y + 1][0] ;  a.ar [y ][y + 1][[39;49m[33;40m1[39;49m[34;49m] = a.ar [y ][y + 1][0] ;  a.ar [y + 1][y + 1][ 0 ] = a.ar [y ][y + 1][1] ;  hp ( a.ar [y ][y + 1][1 .. [39;49m[32;49m
0x7fb6e79421a2    48c7c001000000          mov rax, 0x1                                           [39;49m[32;49m
0x7fb6e79421a9    490106                  add [r14], rax                                         [39;49m
[34;49m .. 0][y + 1][0] ;  a.ar [y ][y + 1][1] = [39;49m[33;40ma[39;49m[34;49m.ar [y ][y + 1][0] ;  a.ar [y + 1][y + 1][ 0 ] = a.ar [y ][y + 1][1] ;  hp ( a.ar [y ][y + 1][1] ) ; .. [39;49m[32;49m
0x7fb6e79421ac    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e79421b0    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fb6e79421b7    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fb6e79421ba    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e79421be    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  1][0] ;  a.ar [y ][y + 1][1] = a.ar [[39;49m[33;40my[39;49m[34;49m ][y + 1][0] ;  a.ar [y + 1][y + 1][ 0 ] = a.ar [y ][y + 1][1] ;  hp ( a.ar [y ][y + 1][1] ) ; a.ar  .. [39;49m[32;49m
0x7fb6e79421c1    498b47f0                mov rax, [r15-0x10]                                    [39;49m[32;49m
0x7fb6e79421c5    486bc009                imul rax, rax, 0x9                                     [39;49m[32;49m
0x7fb6e79421c9    490106                  add [r14], rax                                         [39;49m
[34;49m .. 0] ;  a.ar [y ][y + 1][1] = a.ar [y ][[39;49m[33;40my[39;49m[34;49m + 1][0] ;  a.ar [y + 1][y + 1][ 0 ] = a.ar [y ][y + 1][1] ;  hp ( a.ar [y ][y + 1][1] ) ; a.ar [y + .. [39;49m[32;49m
0x7fb6e79421cc    498b47f0                mov rax, [r15-0x10]                                    [39;49m
[34;49m ..   a.ar [y ][y + 1][1] = a.ar [y ][y + [39;49m[33;40m1[39;49m[34;49m][0] ;  a.ar [y + 1][y + 1][ 0 ] = a.ar [y ][y + 1][1] ;  hp ( a.ar [y ][y + 1][1] ) ; a.ar [y + 1][ .. [39;49m[32;49m
0x7fb6e79421d0    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m ..  ;  a.ar [y ][y + 1][1] = a.ar [y ][y [39;49m[33;40m+[39;49m[34;49m 1][0] ;  a.ar [y + 1][y + 1][ 0 ] = a.ar [y ][y + 1][1] ;  hp ( a.ar [y ][y + 1][1] ) ; a.ar [y + 1 .. [39;49m[32;49m
0x7fb6e79421d7    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fb6e79421da    486bc003                imul rax, rax, 0x3                                     [39;49m[32;49m
0x7fb6e79421de    490106                  add [r14], rax                                         [39;49m
[34;49m ..  [0][y + 1][0] ;  a.ar [y ][y + 1][1] [39;49m[33;40m=[39;49m[34;49m a.ar [y ][y + 1][0] ;  a.ar [y + 1][y + 1][ 0 ] = a.ar [y ][y + 1][1] ;  hp ( a.ar [y ][y + 1][1] ) .. [39;49m[32;49m
0x7fb6e79421e1    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fb6e79421e4    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fb6e79421e8    488908                  mov [rax], rcx                                         [39;49m[32;49m
0x7fb6e79421eb    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m ..  ][y + 1][1] = a.ar [y ][y + 1][0] ;  [39;49m[33;40ma[39;49m[34;49m.ar [y + 1][y + 1][ 0 ] = a.ar [y ][y + 1][1] ;  hp ( a.ar [y ][y + 1][1] ) ; a.ar [y + 1][y + 1][1] .. [39;49m[32;49m
0x7fb6e79421ef    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e79421f3    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fb6e79421fa    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e79421fe    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  1][1] = a.ar [y ][y + 1][0] ;  a.ar [[39;49m[33;40my[39;49m[34;49m + 1][y + 1][ 0 ] = a.ar [y ][y + 1][1] ;  hp ( a.ar [y ][y + 1][1] ) ; a.ar [y + 1][y + 1][1] = a.a .. [39;49m[32;49m
0x7fb6e7942201    498b47f0                mov rax, [r15-0x10]                                    [39;49m
[34;49m .. 1] = a.ar [y ][y + 1][0] ;  a.ar [y + [39;49m[33;40m1[39;49m[34;49m][y + 1][ 0 ] = a.ar [y ][y + 1][1] ;  hp ( a.ar [y ][y + 1][1] ) ; a.ar [y + 1][y + 1][1] = a.ar [y .. [39;49m[32;49m
0x7fb6e7942205    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m .. ][1] = a.ar [y ][y + 1][0] ;  a.ar [y [39;49m[33;40m+[39;49m[34;49m 1][y + 1][ 0 ] = a.ar [y ][y + 1][1] ;  hp ( a.ar [y ][y + 1][1] ) ; a.ar [y + 1][y + 1][1] = a.ar  .. [39;49m[32;49m
0x7fb6e794220c    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fb6e794220f    486bc009                imul rax, rax, 0x9                                     [39;49m[32;49m
0x7fb6e7942213    490106                  add [r14], rax                                         [39;49m
[34;49m .. = a.ar [y ][y + 1][0] ;  a.ar [y + 1][[39;49m[33;40my[39;49m[34;49m + 1][ 0 ] = a.ar [y ][y + 1][1] ;  hp ( a.ar [y ][y + 1][1] ) ; a.ar [y + 1][y + 1][1] = a.ar [y +  .. [39;49m[32;49m
0x7fb6e7942216    498b47f0                mov rax, [r15-0x10]                                    [39;49m
[34;49m .. ar [y ][y + 1][0] ;  a.ar [y + 1][y + [39;49m[33;40m1[39;49m[34;49m][ 0 ] = a.ar [y ][y + 1][1] ;  hp ( a.ar [y ][y + 1][1] ) ; a.ar [y + 1][y + 1][1] = a.ar [y + 1][y .. [39;49m[32;49m
0x7fb6e794221a    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m .. a.ar [y ][y + 1][0] ;  a.ar [y + 1][y [39;49m[33;40m+[39;49m[34;49m 1][ 0 ] = a.ar [y ][y + 1][1] ;  hp ( a.ar [y ][y + 1][1] ) ; a.ar [y + 1][y + 1][1] = a.ar [y + 1] .. [39;49m[32;49m
0x7fb6e7942221    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fb6e7942224    486bc003                imul rax, rax, 0x3                                     [39;49m[32;49m
0x7fb6e7942228    490106                  add [r14], rax                                         [39;49m
[34;49m .. + 1][0] ;  a.ar [y + 1][y + 1][ 0 ] = [39;49m[33;40ma[39;49m[34;49m.ar [y ][y + 1][1] ;  hp ( a.ar [y ][y + 1][1] ) ; a.ar [y + 1][y + 1][1] = a.ar [y + 1][y + 1][0] ; .. [39;49m[32;49m
0x7fb6e794222b    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e794222f    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fb6e7942236    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fb6e7942239    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e794223d    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ] ;  a.ar [y + 1][y + 1][ 0 ] = a.ar [[39;49m[33;40my[39;49m[34;49m ][y + 1][1] ;  hp ( a.ar [y ][y + 1][1] ) ; a.ar [y + 1][y + 1][1] = a.ar [y + 1][y + 1][0] ;  a.ar .. [39;49m[32;49m
0x7fb6e7942240    498b47f0                mov rax, [r15-0x10]                                    [39;49m[32;49m
0x7fb6e7942244    486bc009                imul rax, rax, 0x9                                     [39;49m[32;49m
0x7fb6e7942248    490106                  add [r14], rax                                         [39;49m
[34;49m ..  a.ar [y + 1][y + 1][ 0 ] = a.ar [y ][[39;49m[33;40my[39;49m[34;49m + 1][1] ;  hp ( a.ar [y ][y + 1][1] ) ; a.ar [y + 1][y + 1][1] = a.ar [y + 1][y + 1][0] ;  a.ar [y  .. [39;49m[32;49m
0x7fb6e794224b    498b47f0                mov rax, [r15-0x10]                                    [39;49m
[34;49m .. r [y + 1][y + 1][ 0 ] = a.ar [y ][y + [39;49m[33;40m1[39;49m[34;49m][1] ;  hp ( a.ar [y ][y + 1][1] ) ; a.ar [y + 1][y + 1][1] = a.ar [y + 1][y + 1][0] ;  a.ar [y + 1] .. [39;49m[32;49m
0x7fb6e794224f    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m .. .ar [y + 1][y + 1][ 0 ] = a.ar [y ][y [39;49m[33;40m+[39;49m[34;49m 1][1] ;  hp ( a.ar [y ][y + 1][1] ) ; a.ar [y + 1][y + 1][1] = a.ar [y + 1][y + 1][0] ;  a.ar [y +  .. [39;49m[32;49m
0x7fb6e7942256    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fb6e7942259    486bc003                imul rax, rax, 0x3                                     [39;49m[32;49m
0x7fb6e794225d    490106                  add [r14], rax                                         [39;49m
[34;49m .. y + 1][y + 1][ 0 ] = a.ar [y ][y + 1][[39;49m[33;40m1[39;49m[34;49m] ;  hp ( a.ar [y ][y + 1][1] ) ; a.ar [y + 1][y + 1][1] = a.ar [y + 1][y + 1][0] ;  a.ar [y + 1][y  .. [39;49m[32;49m
0x7fb6e7942260    48c7c001000000          mov rax, 0x1                                           [39;49m[32;49m
0x7fb6e7942267    490106                  add [r14], rax                                         [39;49m
[34;49m .. y + 1][0] ;  a.ar [y + 1][y + 1][ 0 ] [39;49m[33;40m=[39;49m[34;49m a.ar [y ][y + 1][1] ;  hp ( a.ar [y ][y + 1][1] ) ; a.ar [y + 1][y + 1][1] = a.ar [y + 1][y + 1][0] .. [39;49m[32;49m
0x7fb6e794226a    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fb6e794226d    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fb6e7942271    488908                  mov [rax], rcx                                         [39;49m[32;49m
0x7fb6e7942274    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m .. 1][ 0 ] = a.ar [y ][y + 1][1] ;  hp ( [39;49m[33;40ma[39;49m[34;49m.ar [y ][y + 1][1] ) ; a.ar [y + 1][y + 1][1] = a.ar [y + 1][y + 1][0] ;  a.ar [y + 1][y + 1][ y ] = .. [39;49m[32;49m
0x7fb6e7942278    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e794227c    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fb6e7942283    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fb6e7942286    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e794228a    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ] = a.ar [y ][y + 1][1] ;  hp ( a.ar [[39;49m[33;40my[39;49m[34;49m ][y + 1][1] ) ; a.ar [y + 1][y + 1][1] = a.ar [y + 1][y + 1][0] ;  a.ar [y + 1][y + 1][ y ] = a.ar  .. [39;49m[32;49m
0x7fb6e794228d    498b47f0                mov rax, [r15-0x10]                                    [39;49m[32;49m
0x7fb6e7942291    486bc009                imul rax, rax, 0x9                                     [39;49m[32;49m
0x7fb6e7942295    490106                  add [r14], rax                                         [39;49m
[34;49m .. a.ar [y ][y + 1][1] ;  hp ( a.ar [y ][[39;49m[33;40my[39;49m[34;49m + 1][1] ) ; a.ar [y + 1][y + 1][1] = a.ar [y + 1][y + 1][0] ;  a.ar [y + 1][y + 1][ y ] = a.ar [y + .. [39;49m[32;49m
0x7fb6e7942298    498b47f0                mov rax, [r15-0x10]                                    [39;49m
[34;49m ..  [y ][y + 1][1] ;  hp ( a.ar [y ][y + [39;49m[33;40m1[39;49m[34;49m][1] ) ; a.ar [y + 1][y + 1][1] = a.ar [y + 1][y + 1][0] ;  a.ar [y + 1][y + 1][ y ] = a.ar [y + 1][ .. [39;49m[32;49m
0x7fb6e794229c    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m .. ar [y ][y + 1][1] ;  hp ( a.ar [y ][y [39;49m[33;40m+[39;49m[34;49m 1][1] ) ; a.ar [y + 1][y + 1][1] = a.ar [y + 1][y + 1][0] ;  a.ar [y + 1][y + 1][ y ] = a.ar [y + 1 .. [39;49m[32;49m
0x7fb6e79422a3    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fb6e79422a6    486bc003                imul rax, rax, 0x3                                     [39;49m[32;49m
0x7fb6e79422aa    490106                  add [r14], rax                                         [39;49m
[34;49m ..  ][y + 1][1] ;  hp ( a.ar [y ][y + 1][[39;49m[33;40m1[39;49m[34;49m] ) ; a.ar [y + 1][y + 1][1] = a.ar [y + 1][y + 1][0] ;  a.ar [y + 1][y + 1][ y ] = a.ar [y + 1][y + .. [39;49m[32;49m
0x7fb6e79422ad    48c7c001000000          mov rax, 0x1                                           [39;49m[32;49m
0x7fb6e79422b4    490106                  add [r14], rax                                         [39;49m
[34;49m .. [y + 1][ 0 ] = a.ar [y ][y + 1][1] ;  [39;49m[33;40mhp[39;49m[34;49m ( a.ar [y ][y + 1][1] ) ; a.ar [y + 1][y + 1][1] = a.ar [y + 1][y + 1][0] ;  a.ar [y + 1][y + 1][  .. [39;49m[32;49m
0x7fb6e79422b7    49b987a493e7b67f0000    mov r9, 0x7fb6e793a487                                 [39;49m[32;49m
0x7fb6e79422c1    49ffd1                  call r9                    	< Int.[34;49mhp[39;49m : 0x00007fb6e793a487[32;49m >[39;49m[39;49m
[34;49m .. 1][1] ;  hp ( a.ar [y ][y + 1][1] ) ; [39;49m[33;40ma[39;49m[34;49m.ar [y + 1][y + 1][1] = a.ar [y + 1][y + 1][0] ;  a.ar [y + 1][y + 1][ y ] = a.ar [y + 1][y + 1][1]  .. [39;49m[32;49m
0x7fb6e79422c4    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e79422c8    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fb6e79422cf    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e79422d3    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ;  hp ( a.ar [y ][y + 1][1] ) ; a.ar [[39;49m[33;40my[39;49m[34;49m + 1][y + 1][1] = a.ar [y + 1][y + 1][0] ;  a.ar [y + 1][y + 1][ y ] = a.ar [y + 1][y + 1][1] ;  a.a .. [39;49m[32;49m
0x7fb6e79422d6    498b47f0                mov rax, [r15-0x10]                                    [39;49m
[34;49m .. p ( a.ar [y ][y + 1][1] ) ; a.ar [y + [39;49m[33;40m1[39;49m[34;49m][y + 1][1] = a.ar [y + 1][y + 1][0] ;  a.ar [y + 1][y + 1][ y ] = a.ar [y + 1][y + 1][1] ;  a.ar [y .. [39;49m[32;49m
0x7fb6e79422da    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m ..  hp ( a.ar [y ][y + 1][1] ) ; a.ar [y [39;49m[33;40m+[39;49m[34;49m 1][y + 1][1] = a.ar [y + 1][y + 1][0] ;  a.ar [y + 1][y + 1][ y ] = a.ar [y + 1][y + 1][1] ;  a.ar  .. [39;49m[32;49m
0x7fb6e79422e1    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fb6e79422e4    486bc009                imul rax, rax, 0x9                                     [39;49m[32;49m
0x7fb6e79422e8    490106                  add [r14], rax                                         [39;49m
[34;49m ..  a.ar [y ][y + 1][1] ) ; a.ar [y + 1][[39;49m[33;40my[39;49m[34;49m + 1][1] = a.ar [y + 1][y + 1][0] ;  a.ar [y + 1][y + 1][ y ] = a.ar [y + 1][y + 1][1] ;  a.ar [y +  .. [39;49m[32;49m
0x7fb6e79422eb    498b47f0                mov rax, [r15-0x10]                                    [39;49m
[34;49m .. r [y ][y + 1][1] ) ; a.ar [y + 1][y + [39;49m[33;40m1[39;49m[34;49m][1] = a.ar [y + 1][y + 1][0] ;  a.ar [y + 1][y + 1][ y ] = a.ar [y + 1][y + 1][1] ;  a.ar [y + 1][y .. [39;49m[32;49m
0x7fb6e79422ef    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m .. .ar [y ][y + 1][1] ) ; a.ar [y + 1][y [39;49m[33;40m+[39;49m[34;49m 1][1] = a.ar [y + 1][y + 1][0] ;  a.ar [y + 1][y + 1][ y ] = a.ar [y + 1][y + 1][1] ;  a.ar [y + 1] .. [39;49m[32;49m
0x7fb6e79422f6    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fb6e79422f9    486bc003                imul rax, rax, 0x3                                     [39;49m[32;49m
0x7fb6e79422fd    490106                  add [r14], rax                                         [39;49m
[34;49m .. y ][y + 1][1] ) ; a.ar [y + 1][y + 1][[39;49m[33;40m1[39;49m[34;49m] = a.ar [y + 1][y + 1][0] ;  a.ar [y + 1][y + 1][ y ] = a.ar [y + 1][y + 1][1] ;  a.ar [y + 1][y +  .. [39;49m[32;49m
0x7fb6e7942300    48c7c001000000          mov rax, 0x1                                           [39;49m[32;49m
0x7fb6e7942307    490106                  add [r14], rax                                         [39;49m
[34;49m ..  + 1][1] ) ; a.ar [y + 1][y + 1][1] = [39;49m[33;40ma[39;49m[34;49m.ar [y + 1][y + 1][0] ;  a.ar [y + 1][y + 1][ y ] = a.ar [y + 1][y + 1][1] ;  a.ar [y + 1][y + 1][y  .. [39;49m[32;49m
0x7fb6e794230a    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e794230e    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fb6e7942315    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fb6e7942318    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e794231c    498906                  mov [r14], rax                                         [39;49m
[34;49m .. 1] ) ; a.ar [y + 1][y + 1][1] = a.ar [[39;49m[33;40my[39;49m[34;49m + 1][y + 1][0] ;  a.ar [y + 1][y + 1][ y ] = a.ar [y + 1][y + 1][1] ;  a.ar [y + 1][y + 1][y + 1] = .. [39;49m[32;49m
0x7fb6e794231f    498b47f0                mov rax, [r15-0x10]                                    [39;49m
[34;49m ..  ; a.ar [y + 1][y + 1][1] = a.ar [y + [39;49m[33;40m1[39;49m[34;49m][y + 1][0] ;  a.ar [y + 1][y + 1][ y ] = a.ar [y + 1][y + 1][1] ;  a.ar [y + 1][y + 1][y + 1] = a.a .. [39;49m[32;49m
0x7fb6e7942323    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m ..  ) ; a.ar [y + 1][y + 1][1] = a.ar [y [39;49m[33;40m+[39;49m[34;49m 1][y + 1][0] ;  a.ar [y + 1][y + 1][ y ] = a.ar [y + 1][y + 1][1] ;  a.ar [y + 1][y + 1][y + 1] = a .. [39;49m[32;49m
0x7fb6e794232a    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fb6e794232d    486bc009                imul rax, rax, 0x9                                     [39;49m[32;49m
0x7fb6e7942331    490106                  add [r14], rax                                         [39;49m
[34;49m .. a.ar [y + 1][y + 1][1] = a.ar [y + 1][[39;49m[33;40my[39;49m[34;49m + 1][0] ;  a.ar [y + 1][y + 1][ y ] = a.ar [y + 1][y + 1][1] ;  a.ar [y + 1][y + 1][y + 1] = a.ar [ .. [39;49m[32;49m
0x7fb6e7942334    498b47f0                mov rax, [r15-0x10]                                    [39;49m
[34;49m ..  [y + 1][y + 1][1] = a.ar [y + 1][y + [39;49m[33;40m1[39;49m[34;49m][0] ;  a.ar [y + 1][y + 1][ y ] = a.ar [y + 1][y + 1][1] ;  a.ar [y + 1][y + 1][y + 1] = a.ar [y +  .. [39;49m[32;49m
0x7fb6e7942338    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m .. ar [y + 1][y + 1][1] = a.ar [y + 1][y [39;49m[33;40m+[39;49m[34;49m 1][0] ;  a.ar [y + 1][y + 1][ y ] = a.ar [y + 1][y + 1][1] ;  a.ar [y + 1][y + 1][y + 1] = a.ar [y  .. [39;49m[32;49m
0x7fb6e794233f    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fb6e7942342    486bc003                imul rax, rax, 0x3                                     [39;49m[32;49m
0x7fb6e7942346    490106                  add [r14], rax                                         [39;49m
[34;49m .. [y + 1][1] ) ; a.ar [y + 1][y + 1][1] [39;49m[33;40m=[39;49m[34;49m a.ar [y + 1][y + 1][0] ;  a.ar [y + 1][y + 1][ y ] = a.ar [y + 1][y + 1][1] ;  a.ar [y + 1][y + 1][ .. [39;49m[32;49m
0x7fb6e7942349    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fb6e794234c    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fb6e7942350    488908                  mov [rax], rcx                                         [39;49m[32;49m
0x7fb6e7942353    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m .. y + 1][1] = a.ar [y + 1][y + 1][0] ;  [39;49m[33;40ma[39;49m[34;49m.ar [y + 1][y + 1][ y ] = a.ar [y + 1][y + 1][1] ;  a.ar [y + 1][y + 1][y + 1] = a.ar [y + 1][y + 1] .. [39;49m[32;49m
0x7fb6e7942357    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e794235b    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fb6e7942362    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7942366    498906                  mov [r14], rax                                         [39;49m
[34;49m .. [1] = a.ar [y + 1][y + 1][0] ;  a.ar [[39;49m[33;40my[39;49m[34;49m + 1][y + 1][ y ] = a.ar [y + 1][y + 1][1] ;  a.ar [y + 1][y + 1][y + 1] = a.ar [y + 1][y + 1][y] ;  .. [39;49m[32;49m
0x7fb6e7942369    498b47f0                mov rax, [r15-0x10]                                    [39;49m
[34;49m .. = a.ar [y + 1][y + 1][0] ;  a.ar [y + [39;49m[33;40m1[39;49m[34;49m][y + 1][ y ] = a.ar [y + 1][y + 1][1] ;  a.ar [y + 1][y + 1][y + 1] = a.ar [y + 1][y + 1][y] ;  hp  .. [39;49m[32;49m
0x7fb6e794236d    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m .. ] = a.ar [y + 1][y + 1][0] ;  a.ar [y [39;49m[33;40m+[39;49m[34;49m 1][y + 1][ y ] = a.ar [y + 1][y + 1][1] ;  a.ar [y + 1][y + 1][y + 1] = a.ar [y + 1][y + 1][y] ;  h .. [39;49m[32;49m
0x7fb6e7942374    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fb6e7942377    486bc009                imul rax, rax, 0x9                                     [39;49m[32;49m
0x7fb6e794237b    490106                  add [r14], rax                                         [39;49m
[34;49m .. .ar [y + 1][y + 1][0] ;  a.ar [y + 1][[39;49m[33;40my[39;49m[34;49m + 1][ y ] = a.ar [y + 1][y + 1][1] ;  a.ar [y + 1][y + 1][y + 1] = a.ar [y + 1][y + 1][y] ;  hp ( & .. [39;49m[32;49m
0x7fb6e794237e    498b47f0                mov rax, [r15-0x10]                                    [39;49m
[34;49m .. [y + 1][y + 1][0] ;  a.ar [y + 1][y + [39;49m[33;40m1[39;49m[34;49m][ y ] = a.ar [y + 1][y + 1][1] ;  a.ar [y + 1][y + 1][y + 1] = a.ar [y + 1][y + 1][y] ;  hp ( &a.ar .. [39;49m[32;49m
0x7fb6e7942382    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m .. r [y + 1][y + 1][0] ;  a.ar [y + 1][y [39;49m[33;40m+[39;49m[34;49m 1][ y ] = a.ar [y + 1][y + 1][1] ;  a.ar [y + 1][y + 1][y + 1] = a.ar [y + 1][y + 1][y] ;  hp ( &a. .. [39;49m[32;49m
0x7fb6e7942389    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fb6e794238c    486bc003                imul rax, rax, 0x3                                     [39;49m[32;49m
0x7fb6e7942390    490106                  add [r14], rax                                         [39;49m
[34;49m ..  1][y + 1][0] ;  a.ar [y + 1][y + 1][ [39;49m[33;40my[39;49m[34;49m ] = a.ar [y + 1][y + 1][1] ;  a.ar [y + 1][y + 1][y + 1] = a.ar [y + 1][y + 1][y] ;  hp ( &a.ar ) ; .. [39;49m[32;49m
0x7fb6e7942393    498b47f0                mov rax, [r15-0x10]                                    [39;49m[32;49m
0x7fb6e7942397    490106                  add [r14], rax                                         [39;49m
[34;49m .. + 1][0] ;  a.ar [y + 1][y + 1][ y ] = [39;49m[33;40ma[39;49m[34;49m.ar [y + 1][y + 1][1] ;  a.ar [y + 1][y + 1][y + 1] = a.ar [y + 1][y + 1][y] ;  hp ( &a.ar ) ; cadum .. [39;49m[32;49m
0x7fb6e794239a    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e794239e    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fb6e79423a5    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fb6e79423a8    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e79423ac    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ] ;  a.ar [y + 1][y + 1][ y ] = a.ar [[39;49m[33;40my[39;49m[34;49m + 1][y + 1][1] ;  a.ar [y + 1][y + 1][y + 1] = a.ar [y + 1][y + 1][y] ;  hp ( &a.ar ) ; cadump ( &a .. [39;49m[32;49m
0x7fb6e79423af    498b47f0                mov rax, [r15-0x10]                                    [39;49m
[34;49m ..  a.ar [y + 1][y + 1][ y ] = a.ar [y + [39;49m[33;40m1[39;49m[34;49m][y + 1][1] ;  a.ar [y + 1][y + 1][y + 1] = a.ar [y + 1][y + 1][y] ;  hp ( &a.ar ) ; cadump ( &a.ar  .. [39;49m[32;49m
0x7fb6e79423b3    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m .. ;  a.ar [y + 1][y + 1][ y ] = a.ar [y [39;49m[33;40m+[39;49m[34;49m 1][y + 1][1] ;  a.ar [y + 1][y + 1][y + 1] = a.ar [y + 1][y + 1][y] ;  hp ( &a.ar ) ; cadump ( &a.a .. [39;49m[32;49m
0x7fb6e79423ba    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fb6e79423bd    486bc009                imul rax, rax, 0x9                                     [39;49m[32;49m
0x7fb6e79423c1    490106                  add [r14], rax                                         [39;49m
[34;49m .. ar [y + 1][y + 1][ y ] = a.ar [y + 1][[39;49m[33;40my[39;49m[34;49m + 1][1] ;  a.ar [y + 1][y + 1][y + 1] = a.ar [y + 1][y + 1][y] ;  hp ( &a.ar ) ; cadump ( &a.ar 27  .. [39;49m[32;49m
0x7fb6e79423c4    498b47f0                mov rax, [r15-0x10]                                    [39;49m
[34;49m .. y + 1][y + 1][ y ] = a.ar [y + 1][y + [39;49m[33;40m1[39;49m[34;49m][1] ;  a.ar [y + 1][y + 1][y + 1] = a.ar [y + 1][y + 1][y] ;  hp ( &a.ar ) ; cadump ( &a.ar 27 ) ;  .. [39;49m[32;49m
0x7fb6e79423c8    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m ..  [y + 1][y + 1][ y ] = a.ar [y + 1][y [39;49m[33;40m+[39;49m[34;49m 1][1] ;  a.ar [y + 1][y + 1][y + 1] = a.ar [y + 1][y + 1][y] ;  hp ( &a.ar ) ; cadump ( &a.ar 27 )  .. [39;49m[32;49m
0x7fb6e79423cf    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fb6e79423d2    486bc003                imul rax, rax, 0x3                                     [39;49m[32;49m
0x7fb6e79423d6    490106                  add [r14], rax                                         [39;49m
[34;49m ..  1][y + 1][ y ] = a.ar [y + 1][y + 1][[39;49m[33;40m1[39;49m[34;49m] ;  a.ar [y + 1][y + 1][y + 1] = a.ar [y + 1][y + 1][y] ;  hp ( &a.ar ) ; cadump ( &a.ar 27 ) ;  }  .. [39;49m[32;49m
0x7fb6e79423d9    48c7c001000000          mov rax, 0x1                                           [39;49m[32;49m
0x7fb6e79423e0    490106                  add [r14], rax                                         [39;49m
[34;49m .. y + 1][0] ;  a.ar [y + 1][y + 1][ y ] [39;49m[33;40m=[39;49m[34;49m a.ar [y + 1][y + 1][1] ;  a.ar [y + 1][y + 1][y + 1] = a.ar [y + 1][y + 1][y] ;  hp ( &a.ar ) ; cad .. [39;49m[32;49m
0x7fb6e79423e3    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fb6e79423e6    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fb6e79423ea    488908                  mov [rax], rcx                                         [39;49m[32;49m
0x7fb6e79423ed    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m .. + 1][ y ] = a.ar [y + 1][y + 1][1] ;  [39;49m[33;40ma[39;49m[34;49m.ar [y + 1][y + 1][y + 1] = a.ar [y + 1][y + 1][y] ;  hp ( &a.ar ) ; cadump ( &a.ar 27 ) ;  }  .. [39;49m[32;49m
0x7fb6e79423f1    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e79423f5    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fb6e79423fc    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7942400    498906                  mov [r14], rax                                         [39;49m
[34;49m .. y ] = a.ar [y + 1][y + 1][1] ;  a.ar [[39;49m[33;40my[39;49m[34;49m + 1][y + 1][y + 1] = a.ar [y + 1][y + 1][y] ;  hp ( &a.ar ) ; cadump ( &a.ar 27 ) ;  }  .. [39;49m[32;49m
0x7fb6e7942403    498b47f0                mov rax, [r15-0x10]                                    [39;49m
[34;49m .. = a.ar [y + 1][y + 1][1] ;  a.ar [y + [39;49m[33;40m1[39;49m[34;49m][y + 1][y + 1] = a.ar [y + 1][y + 1][y] ;  hp ( &a.ar ) ; cadump ( &a.ar 27 ) ;  }  .. [39;49m[32;49m
0x7fb6e7942407    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m .. ] = a.ar [y + 1][y + 1][1] ;  a.ar [y [39;49m[33;40m+[39;49m[34;49m 1][y + 1][y + 1] = a.ar [y + 1][y + 1][y] ;  hp ( &a.ar ) ; cadump ( &a.ar 27 ) ;  }  .. [39;49m[32;49m
0x7fb6e794240e    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fb6e7942411    486bc009                imul rax, rax, 0x9                                     [39;49m[32;49m
0x7fb6e7942415    490106                  add [r14], rax                                         [39;49m
[34;49m .. .ar [y + 1][y + 1][1] ;  a.ar [y + 1][[39;49m[33;40my[39;49m[34;49m + 1][y + 1] = a.ar [y + 1][y + 1][y] ;  hp ( &a.ar ) ; cadump ( &a.ar 27 ) ;  }  .. [39;49m[32;49m
0x7fb6e7942418    498b47f0                mov rax, [r15-0x10]                                    [39;49m
[34;49m .. [y + 1][y + 1][1] ;  a.ar [y + 1][y + [39;49m[33;40m1[39;49m[34;49m][y + 1] = a.ar [y + 1][y + 1][y] ;  hp ( &a.ar ) ; cadump ( &a.ar 27 ) ;  }  .. [39;49m[32;49m
0x7fb6e794241c    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m .. r [y + 1][y + 1][1] ;  a.ar [y + 1][y [39;49m[33;40m+[39;49m[34;49m 1][y + 1] = a.ar [y + 1][y + 1][y] ;  hp ( &a.ar ) ; cadump ( &a.ar 27 ) ;  }  .. [39;49m[32;49m
0x7fb6e7942423    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fb6e7942426    486bc003                imul rax, rax, 0x3                                     [39;49m[32;49m
0x7fb6e794242a    490106                  add [r14], rax                                         [39;49m
[34;49m .. + 1][y + 1][1] ;  a.ar [y + 1][y + 1][[39;49m[33;40my[39;49m[34;49m + 1] = a.ar [y + 1][y + 1][y] ;  hp ( &a.ar ) ; cadump ( &a.ar 27 ) ;  }  .. [39;49m[32;49m
0x7fb6e794242d    498b47f0                mov rax, [r15-0x10]                                    [39;49m
[34;49m .. [y + 1][1] ;  a.ar [y + 1][y + 1][y + [39;49m[33;40m1[39;49m[34;49m] = a.ar [y + 1][y + 1][y] ;  hp ( &a.ar ) ; cadump ( &a.ar 27 ) ;  }  .. [39;49m[32;49m
0x7fb6e7942431    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m .. 1][y + 1][1] ;  a.ar [y + 1][y + 1][y [39;49m[33;40m+[39;49m[34;49m 1] = a.ar [y + 1][y + 1][y] ;  hp ( &a.ar ) ; cadump ( &a.ar 27 ) ;  }  .. [39;49m[32;49m
0x7fb6e7942438    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fb6e794243b    490106                  add [r14], rax                                         [39;49m
[34;49m .. 1][1] ;  a.ar [y + 1][y + 1][y + 1] = [39;49m[33;40ma[39;49m[34;49m.ar [y + 1][y + 1][y] ;  hp ( &a.ar ) ; cadump ( &a.ar 27 ) ;  }  .. [39;49m[32;49m
0x7fb6e794243e    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e7942442    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fb6e7942449    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fb6e794244c    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7942450    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ;  a.ar [y + 1][y + 1][y + 1] = a.ar [[39;49m[33;40my[39;49m[34;49m + 1][y + 1][y] ;  hp ( &a.ar ) ; cadump ( &a.ar 27 ) ;  }  .. [39;49m[32;49m
0x7fb6e7942453    498b47f0                mov rax, [r15-0x10]                                    [39;49m
[34;49m .. .ar [y + 1][y + 1][y + 1] = a.ar [y + [39;49m[33;40m1[39;49m[34;49m][y + 1][y] ;  hp ( &a.ar ) ; cadump ( &a.ar 27 ) ;  }  .. [39;49m[32;49m
0x7fb6e7942457    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m ..  a.ar [y + 1][y + 1][y + 1] = a.ar [y [39;49m[33;40m+[39;49m[34;49m 1][y + 1][y] ;  hp ( &a.ar ) ; cadump ( &a.ar 27 ) ;  }  .. [39;49m[32;49m
0x7fb6e794245e    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fb6e7942461    486bc009                imul rax, rax, 0x9                                     [39;49m[32;49m
0x7fb6e7942465    490106                  add [r14], rax                                         [39;49m
[34;49m ..  [y + 1][y + 1][y + 1] = a.ar [y + 1][[39;49m[33;40my[39;49m[34;49m + 1][y] ;  hp ( &a.ar ) ; cadump ( &a.ar 27 ) ;  }  .. [39;49m[32;49m
0x7fb6e7942468    498b47f0                mov rax, [r15-0x10]                                    [39;49m
[34;49m .. + 1][y + 1][y + 1] = a.ar [y + 1][y + [39;49m[33;40m1[39;49m[34;49m][y] ;  hp ( &a.ar ) ; cadump ( &a.ar 27 ) ;  }  .. [39;49m[32;49m
0x7fb6e794246c    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m .. y + 1][y + 1][y + 1] = a.ar [y + 1][y [39;49m[33;40m+[39;49m[34;49m 1][y] ;  hp ( &a.ar ) ; cadump ( &a.ar 27 ) ;  }  .. [39;49m[32;49m
0x7fb6e7942473    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fb6e7942476    486bc003                imul rax, rax, 0x3                                     [39;49m[32;49m
0x7fb6e794247a    490106                  add [r14], rax                                         [39;49m
[34;49m .. ][y + 1][y + 1] = a.ar [y + 1][y + 1][[39;49m[33;40my[39;49m[34;49m] ;  hp ( &a.ar ) ; cadump ( &a.ar 27 ) ;  }  .. [39;49m[32;49m
0x7fb6e794247d    498b47f0                mov rax, [r15-0x10]                                    [39;49m[32;49m
0x7fb6e7942481    490106                  add [r14], rax                                         [39;49m
[34;49m .. + 1][1] ;  a.ar [y + 1][y + 1][y + 1] [39;49m[33;40m=[39;49m[34;49m a.ar [y + 1][y + 1][y] ;  hp ( &a.ar ) ; cadump ( &a.ar 27 ) ;  }  .. [39;49m[32;49m
0x7fb6e7942484    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fb6e7942487    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fb6e794248b    488908                  mov [rax], rcx                                         [39;49m[32;49m
0x7fb6e794248e    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m ..  1] = a.ar [y + 1][y + 1][y] ;  hp ( &[39;49m[33;40ma[39;49m[34;49m.ar ) ; cadump ( &a.ar 27 ) ;  }  .. [39;49m[32;49m
0x7fb6e7942492    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e7942496    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fb6e794249d    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e79424a1    498906                  mov [r14], rax                                         [39;49m
[34;49m .. 1][y + 1] = a.ar [y + 1][y + 1][y] ;  [39;49m[33;40mhp[39;49m[34;49m ( &a.ar ) ; cadump ( &a.ar 27 ) ;  }  .. [39;49m[32;49m
0x7fb6e79424a4    49b987a493e7b67f0000    mov r9, 0x7fb6e793a487                                 [39;49m[32;49m
0x7fb6e79424ae    49ffd1                  call r9                    	< Int.[34;49mhp[39;49m : 0x00007fb6e793a487[32;49m >[39;49m[39;49m
[34;49m .. y + 1][y] ;  hp ( &a.ar ) ; cadump ( &[39;49m[33;40ma[39;49m[34;49m.ar 27 ) ;  }  .. [39;49m[32;49m
0x7fb6e79424b1    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e79424b5    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fb6e79424bc    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e79424c0    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ][y] ;  hp ( &a.ar ) ; cadump ( &a.ar [39;49m[33;40m27[39;49m[34;49m ) ;  }  .. [39;49m[32;49m
0x7fb6e79424c3    48c7c01b000000          mov rax, 0x1b                                          [39;49m[32;49m
0x7fb6e79424ca    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e79424ce    498906                  mov [r14], rax                                         [39;49m
[34;49m .. r [y + 1][y + 1][y] ;  hp ( &a.ar ) ; [39;49m[33;40mcadump[39;49m[34;49m ( &a.ar 27 ) ;  }  .. [39;49m[32;49m
0x7fb6e79424d1    49b9662094e7b67f0000    mov r9, 0x7fb6e7942066                                 [39;49m[32;49m
0x7fb6e79424db    49ffd1                  call r9                    	< cta.[34;49mcadump[39;49m : 0x00007fb6e7942066[32;49m >[39;49m[39;49m
[34;49m .. hp ( &a.ar ) ; cadump ( &a.ar 27 ) ;  [39;49m[33;40m}[39;49m[34;49m  .. [39;49m[32;49m
0x7fb6e79424de    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e79424e2    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e79424e6    4983ee10                sub r14, 0x10                                          [39;49m[32;49m
0x7fb6e79424ea    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'ctcta' :: codeSize = 1078
Word : 0x00007fb6e7574038 :: Compiled at : 0x00007fb6e79420b4
 =============================
::> 'wdiss' was called at namespaces/test/arrayTest.csl 350.19 <::
 1 0
 =============================
Bits.[34;49mlnt[39;49m <:> csl compiled word
SourceCode for Bits.[34;49mlnt[39;49m :> 
[34;49m: lnt ( n ) n @ 7 < dup p return tos ; [39;49m
Source code file location of [34;49mlnt[39;49m : "namespaces/test/logic.csl" : 12.2 :: we are now at : namespaces/test/logic.csl : 13.17
Compiled with : optimizeOn, inlineOn, Jcc8 on
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xe794256d -- code size = 69 bytes
TypeSignature : 
 -----------------------------
Word :: Bits.[34;49mlnt[39;49m : definition = 0x00007fb6e794256d : disassembly at namespaces/test/logic.csl : 13.17 :
[34;49m ..                                     : [39;49m[33;40mlnt[39;49m[34;49m ( n ) n @ 7 < dup p return tos ;  .. [39;49m[32;49m
0x7fb6e794256d    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fb6e7942571    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e7942575    4981c608000000          add r14, 0x8                                           [39;49m
[34;49m ..                           : lnt ( n ) [39;49m[33;40mn[39;49m[34;49m @ 7 < dup p return tos ;  .. [39;49m[32;49m
0x7fb6e794257c    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m ..                     : lnt ( n ) n @ 7 [39;49m[33;40m<[39;49m[34;49m dup p return tos ;  .. [39;49m[32;49m
0x7fb6e7942580    4883f807                cmp rax, 0x7                                           [39;49m[32;49m
0x7fb6e7942584    0f9cc0                  setl al                                                [39;49m
[34;49m ..                       : lnt ( n ) n @ [39;49m[33;40m7[39;49m[34;49m < dup p return tos ;  .. [39;49m[32;49m
0x7fb6e7942587    480fb6c0                movzx rax, al                                          [39;49m[32;49m
0x7fb6e794258b    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fb6e794258f    498906                  mov [r14], rax                                         [39;49m
[34;49m ..                   : lnt ( n ) n @ 7 < [39;49m[33;40mdup[39;49m[34;49m p return tos ;  .. [39;49m[32;49m
0x7fb6e7942592    498946f8                mov [r14-0x8], rax                                     [39;49m
[34;49m ..               : lnt ( n ) n @ 7 < dup [39;49m[33;40mp[39;49m[34;49m return tos ;  .. [39;49m[32;49m
0x7fb6e7942596    49b944a493e7b67f0000    mov r9, 0x7fb6e793a444                                 [39;49m[32;49m
0x7fb6e79425a0    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fb6e793a444[32;49m >[39;49m[39;49m
[34;49m ..             : lnt ( n ) n @ 7 < dup p [39;49m[33;40mreturn[39;49m[34;49m tos ;  .. [39;49m[32;49m
0x7fb6e79425a3    498b06                  mov rax, [r14]                                         [39;49m
[34;49m ..  : lnt ( n ) n @ 7 < dup p return tos [39;49m[33;40m;[39;49m[34;49m  .. [39;49m[32;49m
0x7fb6e79425a6    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e79425aa    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e79425ae    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e79425b1    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'lnt' :: codeSize = 68
Word : 0x00007fb6e7581af0 :: Compiled at : 0x00007fb6e794256d
 =============================
::> 'wdiss' was called at namespaces/test/logic.csl 13.17 <::
 1 0 0 1 0 0 0 1 0 1 1 1 0 1 1 0 0 1 1 1 1 0
 =============================
Bits.[34;49mlnt2[39;49m <:> csl compiled word
SourceCode for Bits.[34;49mlnt2[39;49m :> 
[34;49m: lnt2 ( n m ) n @ m @ >= dup p return tos ; [39;49m
Source code file location of [34;49mlnt2[39;49m : "namespaces/test/logic.csl" : 25.2 :: we are now at : namespaces/test/logic.csl : 26.18
Compiled with : optimizeOn, inlineOn, Jcc8 on
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xe7942788 -- code size = 76 bytes
TypeSignature : 
 -----------------------------
Word :: Bits.[34;49mlnt2[39;49m : definition = 0x00007fb6e7942788 : disassembly at namespaces/test/logic.csl : 26.18 :
[34;49m ..                                     : [39;49m[33;40mlnt2[39;49m[34;49m ( n m ) n @ m @ >= dup p return tos ;  .. [39;49m[32;49m
0x7fb6e7942788    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fb6e794278c    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e7942790    4981c608000000          add r14, 0x8                                           [39;49m
[34;49m ..                        : lnt2 ( n m ) [39;49m[33;40mn[39;49m[34;49m @ m @ >= dup p return tos ;  .. [39;49m[32;49m
0x7fb6e7942797    498b47f0                mov rax, [r15-0x10]                                    [39;49m
[34;49m ..                    : lnt2 ( n m ) n @ [39;49m[33;40mm[39;49m[34;49m @ >= dup p return tos ;  .. [39;49m[32;49m
0x7fb6e794279b    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m
[34;49m ..                : lnt2 ( n m ) n @ m @ [39;49m[33;40m>=[39;49m[34;49m dup p return tos ;  .. [39;49m[32;49m
0x7fb6e794279f    483bc1                  cmp rax, rcx                                           [39;49m[32;49m
0x7fb6e79427a2    0f9dc0                  setge al                                               [39;49m[32;49m
0x7fb6e79427a5    480fb6c0                movzx rax, al                                          [39;49m[32;49m
0x7fb6e79427a9    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fb6e79427ad    498906                  mov [r14], rax                                         [39;49m
[34;49m ..             : lnt2 ( n m ) n @ m @ >= [39;49m[33;40mdup[39;49m[34;49m p return tos ;  .. [39;49m[32;49m
0x7fb6e79427b0    498946f8                mov [r14-0x8], rax                                     [39;49m
[34;49m ..         : lnt2 ( n m ) n @ m @ >= dup [39;49m[33;40mp[39;49m[34;49m return tos ;  .. [39;49m[32;49m
0x7fb6e79427b4    49b944a493e7b67f0000    mov r9, 0x7fb6e793a444                                 [39;49m[32;49m
0x7fb6e79427be    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fb6e793a444[32;49m >[39;49m[39;49m
[34;49m ..       : lnt2 ( n m ) n @ m @ >= dup p [39;49m[33;40mreturn[39;49m[34;49m tos ;  .. [39;49m[32;49m
0x7fb6e79427c1    498b06                  mov rax, [r14]                                         [39;49m
[34;49m .. 2 ( n m ) n @ m @ >= dup p return tos [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fb6e79427c4    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e79427c8    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e79427cc    4983ee08                sub r14, 0x8                                           [39;49m[32;49m
0x7fb6e79427d0    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e79427d3    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'lnt2' :: codeSize = 75
Word : 0x00007fb6e758a0a0 :: Compiled at : 0x00007fb6e7942788
 =============================
::> 'wdiss' was called at namespaces/test/logic.csl 26.18 <::

 0 0 1 1 0 0 0 0 1 1
 1 1 0 0
 =============================
Bits.[34;49mtnot[39;49m <:> csl compiled word
SourceCode for Bits.[34;49mtnot[39;49m :> 
[34;49m: tnot ( n ) n @ not dup n store n @ dup p return tos ; [39;49m
Source code file location of [34;49mtnot[39;49m : "namespaces/test/logic.csl" : 46.2 :: we are now at : namespaces/test/logic.csl : 47.18
Compiled with : optimizeOn, inlineOn, Jcc8 on
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xe7942b1a -- code size = 111 bytes
TypeSignature : Integer -> Integer 
 -----------------------------
Word :: Bits.[34;49mtnot[39;49m : definition = 0x00007fb6e7942b1a : disassembly at namespaces/test/logic.csl : 47.18 :
[34;49m ..                                     : [39;49m[33;40mtnot[39;49m[34;49m ( n ) n @ not dup n store n @ dup p return tos ;  .. [39;49m[32;49m
0x7fb6e7942b1a    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fb6e7942b1e    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e7942b22    4981c608000000          add r14, 0x8                                           [39;49m
[34;49m ..                          : tnot ( n ) [39;49m[33;40mn[39;49m[34;49m @ not dup n store n @ dup p return tos ;  .. [39;49m[32;49m
0x7fb6e7942b29    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m ..                      : tnot ( n ) n @ [39;49m[33;40mnot[39;49m[34;49m dup n store n @ dup p return tos ;  .. [39;49m[32;49m
0x7fb6e7942b2d    4885c0                  test rax, rax                                          [39;49m[32;49m
0x7fb6e7942b30    7409                    jz 0xe7942b3b                                          [39;49m[32;49m
0x7fb6e7942b32    48c7c000000000          mov rax, 0x0                                           [39;49m[32;49m
0x7fb6e7942b39    eb07                    jmp 0x7fb6e7942b42         	< Bits.[34;49mtnot[39;49m+40[32;49m >[39;49m[39;49m[32;49m
0x7fb6e7942b3b    48c7c001000000          mov rax, 0x1                                           [39;49m[32;49m
0x7fb6e7942b42    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fb6e7942b46    498906                  mov [r14], rax                                         [39;49m
[34;49m ..                  : tnot ( n ) n @ not [39;49m[33;40mdup[39;49m[34;49m n store n @ dup p return tos ;  .. [39;49m[32;49m
0x7fb6e7942b49    498946f8                mov [r14-0x8], rax                                     [39;49m
[34;49m ..              : tnot ( n ) n @ not dup [39;49m[33;40mn[39;49m[34;49m store n @ dup p return tos ;  .. [39;49m[32;49m
0x7fb6e7942b4d    498d47f8                lea rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e7942b51    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fb6e7942b54    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fb6e7942b57    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m ..            : tnot ( n ) n @ not dup n [39;49m[33;40mstore[39;49m[34;49m n @ dup p return tos ;  .. [39;49m[32;49m
0x7fb6e7942b5b    488901                  mov [rcx], rax                                         [39;49m
[34;49m ..      : tnot ( n ) n @ not dup n store [39;49m[33;40mn[39;49m[34;49m @ dup p return tos ;  .. [39;49m[32;49m
0x7fb6e7942b5e    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e7942b62    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fb6e7942b66    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  : tnot ( n ) n @ not dup n store n @ [39;49m[33;40mdup[39;49m[34;49m p return tos ;  .. [39;49m[32;49m
0x7fb6e7942b69    498946f8                mov [r14-0x8], rax                                     [39;49m
[34;49m : tnot ( n ) n @ not dup n store n @ dup [39;49m[33;40mp[39;49m[34;49m return tos ;  .. [39;49m[32;49m
0x7fb6e7942b6d    49b944a493e7b67f0000    mov r9, 0x7fb6e793a444                                 [39;49m[32;49m
0x7fb6e7942b77    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fb6e793a444[32;49m >[39;49m[39;49m
[34;49m .. t ( n ) n @ not dup n store n @ dup p [39;49m[33;40mreturn[39;49m[34;49m tos ; [39;49m[32;49m
0x7fb6e7942b7a    498b06                  mov rax, [r14]                                         [39;49m
[34;49m ..  not dup n store n @ dup p return tos [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fb6e7942b7d    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e7942b81    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e7942b85    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e7942b88    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'tnot' :: codeSize = 110
Word : 0x00007fb6e7594768 :: Compiled at : 0x00007fb6e7942b1a
 =============================
::> 'wdiss' was called at namespaces/test/logic.csl 47.18 <::
 tnot1_assert  : ok

 tnot2_assert  : ok

 1 tnot3_assert  : ok

 0 tnot4_assert  : ok


 =============================
Bits.[34;49mtnot2[39;49m <:> csl compiled word
SourceCode for Bits.[34;49mtnot2[39;49m :> 
[34;49m: tnot2 ( n m | v ) n @ m @ | not dup v store p return ( v @ ) ; [39;49m
Source code file location of [34;49mtnot2[39;49m : "namespaces/test/logic.csl" : 53.2 :: we are now at : namespaces/test/logic.csl : 54.19
Compiled with : optimizeOn, inlineOn, Jcc8 on
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xe7942b8e -- code size = 108 bytes
TypeSignature : 
 -----------------------------
Word :: Bits.[34;49mtnot2[39;49m : definition = 0x00007fb6e7942b8e : disassembly at namespaces/test/logic.csl : 54.19 :
[34;49m ..                                     : [39;49m[33;40mtnot2[39;49m[34;49m ( n m | v ) n @ m @ | not dup v store p return ( v @ ) ;  .. [39;49m[32;49m
0x7fb6e7942b8e    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fb6e7942b92    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e7942b96    4981c610000000          add r14, 0x10                                          [39;49m
[34;49m ..                   : tnot2 ( n m | v ) [39;49m[33;40mn[39;49m[34;49m @ m @ | not dup v store p return ( v @ ) ;  .. [39;49m[32;49m
0x7fb6e7942b9d    498b47f0                mov rax, [r15-0x10]                                    [39;49m
[34;49m ..               : tnot2 ( n m | v ) n @ [39;49m[33;40mm[39;49m[34;49m @ | not dup v store p return ( v @ ) ;  .. [39;49m[32;49m
0x7fb6e7942ba1    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m
[34;49m ..           : tnot2 ( n m | v ) n @ m @ [39;49m[33;40m|[39;49m[34;49m not dup v store p return ( v @ ) ;  .. [39;49m[32;49m
0x7fb6e7942ba5    480bc1                  or rax, rcx                                            [39;49m
[34;49m ..         : tnot2 ( n m | v ) n @ m @ | [39;49m[33;40mnot[39;49m[34;49m dup v store p return ( v @ ) ;  .. [39;49m[32;49m
0x7fb6e7942ba8    4885c0                  test rax, rax                                          [39;49m[32;49m
0x7fb6e7942bab    7409                    jz 0xe7942bb6                                          [39;49m[32;49m
0x7fb6e7942bad    48c7c000000000          mov rax, 0x0                                           [39;49m[32;49m
0x7fb6e7942bb4    eb07                    jmp 0x7fb6e7942bbd         	< Bits.[34;49mtnot2[39;49m+47[32;49m >[39;49m[39;49m[32;49m
0x7fb6e7942bb6    48c7c001000000          mov rax, 0x1                                           [39;49m[32;49m
0x7fb6e7942bbd    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fb6e7942bc1    498906                  mov [r14], rax                                         [39;49m
[34;49m ..     : tnot2 ( n m | v ) n @ m @ | not [39;49m[33;40mdup[39;49m[34;49m v store p return ( v @ ) ;  .. [39;49m[32;49m
0x7fb6e7942bc4    498946f8                mov [r14-0x8], rax                                     [39;49m
[34;49m .. : tnot2 ( n m | v ) n @ m @ | not dup [39;49m[33;40mv[39;49m[34;49m store p return ( v @ ) ;  .. [39;49m[32;49m
0x7fb6e7942bc8    498d4708                lea rax, [r15+0x8]                                     [39;49m[32;49m
0x7fb6e7942bcc    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fb6e7942bcf    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fb6e7942bd2    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m  : tnot2 ( n m | v ) n @ m @ | not dup v [39;49m[33;40mstore[39;49m[34;49m p return ( v @ ) ;  .. [39;49m[32;49m
0x7fb6e7942bd6    488901                  mov [rcx], rax                                         [39;49m
[34;49m .. ( n m | v ) n @ m @ | not dup v store [39;49m[33;40mp[39;49m[34;49m return ( v @ ) ; [39;49m[32;49m
0x7fb6e7942bd9    49b944a493e7b67f0000    mov r9, 0x7fb6e793a444                                 [39;49m[32;49m
0x7fb6e7942be3    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fb6e793a444[32;49m >[39;49m[39;49m[32;49m
0x7fb6e7942be6    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m ..  @ | not dup v store p return ( v @ ) [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fb6e7942bea    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e7942bee    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e7942bf2    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m ..  n @ m @ | not dup v store p return ( [39;49m[33;40mv[39;49m[34;49m @ ) ; [39;49m[32;49m
0x7fb6e7942bf6    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e7942bf9    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'tnot2' :: codeSize = 107
Word : 0x00007fb6e7595fe8 :: Compiled at : 0x00007fb6e7942b8e
 =============================
::> 'wdiss' was called at namespaces/test/logic.csl 54.19 <::
 1 0
 =============================
Bits.[34;49mtnot3[39;49m <:> csl compiled word
SourceCode for Bits.[34;49mtnot3[39;49m :> 
[34;49m: tnot3 ( n ) n @ not dup p return tos ; [39;49m
Source code file location of [34;49mtnot3[39;49m : "namespaces/test/logic.csl" : 57.2 :: we are now at : namespaces/test/logic.csl : 58.19
Compiled with : optimizeOn, inlineOn, Jcc8 on
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xe7942bff -- code size = 79 bytes
TypeSignature : 
 -----------------------------
Word :: Bits.[34;49mtnot3[39;49m : definition = 0x00007fb6e7942bff : disassembly at namespaces/test/logic.csl : 58.19 :
[34;49m ..                                     : [39;49m[33;40mtnot3[39;49m[34;49m ( n ) n @ not dup p return tos ;  .. [39;49m[32;49m
0x7fb6e7942bff    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fb6e7942c03    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e7942c07    4981c608000000          add r14, 0x8                                           [39;49m
[34;49m ..                         : tnot3 ( n ) [39;49m[33;40mn[39;49m[34;49m @ not dup p return tos ;  .. [39;49m[32;49m
0x7fb6e7942c0e    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m ..                     : tnot3 ( n ) n @ [39;49m[33;40mnot[39;49m[34;49m dup p return tos ;  .. [39;49m[32;49m
0x7fb6e7942c12    4885c0                  test rax, rax                                          [39;49m[32;49m
0x7fb6e7942c15    7409                    jz 0xe7942c20                                          [39;49m[32;49m
0x7fb6e7942c17    48c7c000000000          mov rax, 0x0                                           [39;49m[32;49m
0x7fb6e7942c1e    eb07                    jmp 0x7fb6e7942c27         	< Bits.[34;49mtnot3[39;49m+40[32;49m >[39;49m[39;49m[32;49m
0x7fb6e7942c20    48c7c001000000          mov rax, 0x1                                           [39;49m[32;49m
0x7fb6e7942c27    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fb6e7942c2b    498906                  mov [r14], rax                                         [39;49m
[34;49m ..                 : tnot3 ( n ) n @ not [39;49m[33;40mdup[39;49m[34;49m p return tos ;  .. [39;49m[32;49m
0x7fb6e7942c2e    498946f8                mov [r14-0x8], rax                                     [39;49m
[34;49m ..             : tnot3 ( n ) n @ not dup [39;49m[33;40mp[39;49m[34;49m return tos ;  .. [39;49m[32;49m
0x7fb6e7942c32    49b944a493e7b67f0000    mov r9, 0x7fb6e793a444                                 [39;49m[32;49m
0x7fb6e7942c3c    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fb6e793a444[32;49m >[39;49m[39;49m
[34;49m ..           : tnot3 ( n ) n @ not dup p [39;49m[33;40mreturn[39;49m[34;49m tos ;  .. [39;49m[32;49m
0x7fb6e7942c3f    498b06                  mov rax, [r14]                                         [39;49m
[34;49m   : tnot3 ( n ) n @ not dup p return tos [39;49m[33;40m;[39;49m[34;49m  .. [39;49m[32;49m
0x7fb6e7942c42    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e7942c46    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e7942c4a    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e7942c4d    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'tnot3' :: codeSize = 78
Word : 0x00007fb6e7597a20 :: Compiled at : 0x00007fb6e7942bff
 =============================
::> 'wdiss' was called at namespaces/test/logic.csl 58.19 <::
 0
 =============================
Bits.[34;49mtAnd[39;49m <:> csl compiled word
SourceCode for Bits.[34;49mtAnd[39;49m :> 
[34;49m: tAnd ( n m ) n @ m @ && dup p return tos ; [39;49m
Source code file location of [34;49mtAnd[39;49m : "namespaces/test/logic.csl" : 61.2 :: we are now at : namespaces/test/logic.csl : 62.18
Compiled with : optimizeOn, inlineOn, Jcc8 on
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xe7942c53 -- code size = 92 bytes
TypeSignature : Integer . Integer -> Integer 
 -----------------------------
Word :: Bits.[34;49mtAnd[39;49m : definition = 0x00007fb6e7942c53 : disassembly at namespaces/test/logic.csl : 62.18 :
[34;49m ..                                     : [39;49m[33;40mtAnd[39;49m[34;49m ( n m ) n @ m @ && dup p return tos ;  .. [39;49m[32;49m
0x7fb6e7942c53    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fb6e7942c57    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e7942c5b    4981c608000000          add r14, 0x8                                           [39;49m
[34;49m ..                        : tAnd ( n m ) [39;49m[33;40mn[39;49m[34;49m @ m @ && dup p return tos ;  .. [39;49m[32;49m
0x7fb6e7942c62    498b47f0                mov rax, [r15-0x10]                                    [39;49m
[34;49m ..                    : tAnd ( n m ) n @ [39;49m[33;40mm[39;49m[34;49m @ && dup p return tos ;  .. [39;49m[32;49m
0x7fb6e7942c66    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e7942c6a    4885c9                  test rcx, rcx                                          [39;49m[32;49m
0x7fb6e7942c6d    7405                    jz 0xe7942c74                                          [39;49m
[34;49m ..                : tAnd ( n m ) n @ m @ [39;49m[33;40m&&[39;49m[34;49m dup p return tos ;  .. [39;49m[32;49m
0x7fb6e7942c6f    4885c0                  test rax, rax                                          [39;49m[32;49m
0x7fb6e7942c72    7509                    jnz 0xe7942c7d                                         [39;49m[32;49m
0x7fb6e7942c74    48c7c000000000          mov rax, 0x0                                           [39;49m[32;49m
0x7fb6e7942c7b    eb07                    jmp 0x7fb6e7942c84         	< Bits.[34;49mtAnd[39;49m+49[32;49m >[39;49m[39;49m[32;49m
0x7fb6e7942c7d    48c7c001000000          mov rax, 0x1                                           [39;49m[32;49m
0x7fb6e7942c84    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fb6e7942c88    498906                  mov [r14], rax                                         [39;49m
[34;49m ..             : tAnd ( n m ) n @ m @ && [39;49m[33;40mdup[39;49m[34;49m p return tos ;  .. [39;49m[32;49m
0x7fb6e7942c8b    498946f8                mov [r14-0x8], rax                                     [39;49m
[34;49m ..         : tAnd ( n m ) n @ m @ && dup [39;49m[33;40mp[39;49m[34;49m return tos ;  .. [39;49m[32;49m
0x7fb6e7942c8f    49b944a493e7b67f0000    mov r9, 0x7fb6e793a444                                 [39;49m[32;49m
0x7fb6e7942c99    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fb6e793a444[32;49m >[39;49m[39;49m
[34;49m ..       : tAnd ( n m ) n @ m @ && dup p [39;49m[33;40mreturn[39;49m[34;49m tos ;  .. [39;49m[32;49m
0x7fb6e7942c9c    498b06                  mov rax, [r14]                                         [39;49m
[34;49m .. d ( n m ) n @ m @ && dup p return tos [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fb6e7942c9f    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e7942ca3    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e7942ca7    4983ee08                sub r14, 0x8                                           [39;49m[32;49m
0x7fb6e7942cab    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e7942cae    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'tAnd' :: codeSize = 91
Word : 0x00007fb6e7598bc0 :: Compiled at : 0x00007fb6e7942c53
 =============================
::> 'wdiss' was called at namespaces/test/logic.csl 62.18 <::
 0 1 0  : ok

 1 1 1  : ok

 0 0 0  : ok

 0 0 1  : ok


 =============================
Bits.[34;49mtNotAnd[39;49m <:> csl compiled word
SourceCode for Bits.[34;49mtNotAnd[39;49m :> 
[34;49m: tNotAnd ( n m ) n @ m @ not && dup p return tos ; [39;49m
Source code file location of [34;49mtNotAnd[39;49m : "namespaces/test/logic.csl" : 68.2 :: we are now at : namespaces/test/logic.csl : 69.21
Compiled with : optimizeOn, inlineOn, Jcc8 on
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xe7942cb4 -- code size = 130 bytes
TypeSignature : Integer . Integer -> Integer 
 -----------------------------
Word :: Bits.[34;49mtNotAnd[39;49m : definition = 0x00007fb6e7942cb4 : disassembly at namespaces/test/logic.csl : 69.21 :
[34;49m ..                                     : [39;49m[33;40mtNotAnd[39;49m[34;49m ( n m ) n @ m @ not && dup p return tos ;  .. [39;49m[32;49m
0x7fb6e7942cb4    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fb6e7942cb8    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e7942cbc    4981c608000000          add r14, 0x8                                           [39;49m
[34;49m ..                     : tNotAnd ( n m ) [39;49m[33;40mn[39;49m[34;49m @ m @ not && dup p return tos ;  .. [39;49m[32;49m
0x7fb6e7942cc3    498b47f0                mov rax, [r15-0x10]                                    [39;49m[32;49m
0x7fb6e7942cc7    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7942ccb    498906                  mov [r14], rax                                         [39;49m
[34;49m ..                 : tNotAnd ( n m ) n @ [39;49m[33;40mm[39;49m[34;49m @ not && dup p return tos ;  .. [39;49m[32;49m
0x7fb6e7942cce    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m ..             : tNotAnd ( n m ) n @ m @ [39;49m[33;40mnot[39;49m[34;49m && dup p return tos ;  .. [39;49m[32;49m
0x7fb6e7942cd2    4885c0                  test rax, rax                                          [39;49m[32;49m
0x7fb6e7942cd5    7409                    jz 0xe7942ce0                                          [39;49m[32;49m
0x7fb6e7942cd7    48c7c000000000          mov rax, 0x0                                           [39;49m[32;49m
0x7fb6e7942cde    eb07                    jmp 0x7fb6e7942ce7         	< Bits.[34;49mtNotAnd[39;49m+51[32;49m >[39;49m[39;49m[32;49m
0x7fb6e7942ce0    48c7c001000000          mov rax, 0x1                                           [39;49m[32;49m
0x7fb6e7942ce7    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fb6e7942cea    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fb6e7942ced    4983ee08                sub r14, 0x8                                           [39;49m[32;49m
0x7fb6e7942cf1    4885c9                  test rcx, rcx                                          [39;49m[32;49m
0x7fb6e7942cf4    7405                    jz 0xe7942cfb                                          [39;49m
[34;49m ..         : tNotAnd ( n m ) n @ m @ not [39;49m[33;40m&&[39;49m[34;49m dup p return tos ;  .. [39;49m[32;49m
0x7fb6e7942cf6    4885c0                  test rax, rax                                          [39;49m[32;49m
0x7fb6e7942cf9    7509                    jnz 0xe7942d04                                         [39;49m[32;49m
0x7fb6e7942cfb    48c7c000000000          mov rax, 0x0                                           [39;49m[32;49m
0x7fb6e7942d02    eb07                    jmp 0x7fb6e7942d0b         	< Bits.[34;49mtNotAnd[39;49m+87[32;49m >[39;49m[39;49m[32;49m
0x7fb6e7942d04    48c7c001000000          mov rax, 0x1                                           [39;49m[32;49m
0x7fb6e7942d0b    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fb6e7942d0f    498906                  mov [r14], rax                                         [39;49m
[34;49m ..      : tNotAnd ( n m ) n @ m @ not && [39;49m[33;40mdup[39;49m[34;49m p return tos ;  .. [39;49m[32;49m
0x7fb6e7942d12    498946f8                mov [r14-0x8], rax                                     [39;49m
[34;49m ..  : tNotAnd ( n m ) n @ m @ not && dup [39;49m[33;40mp[39;49m[34;49m return tos ;  .. [39;49m[32;49m
0x7fb6e7942d16    49b944a493e7b67f0000    mov r9, 0x7fb6e793a444                                 [39;49m[32;49m
0x7fb6e7942d20    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fb6e793a444[32;49m >[39;49m[39;49m
[34;49m   : tNotAnd ( n m ) n @ m @ not && dup p [39;49m[33;40mreturn[39;49m[34;49m tos ;  .. [39;49m[32;49m
0x7fb6e7942d23    498b06                  mov rax, [r14]                                         [39;49m
[34;49m .. n m ) n @ m @ not && dup p return tos [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fb6e7942d26    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e7942d2a    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e7942d2e    4983ee08                sub r14, 0x8                                           [39;49m[32;49m
0x7fb6e7942d32    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e7942d35    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'tNotAnd' :: codeSize = 129
Word : 0x00007fb6e759a0d0 :: Compiled at : 0x00007fb6e7942cb4
 =============================
::> 'wdiss' was called at namespaces/test/logic.csl 69.21 <::
 1 tNotAnd1 1 0  : ok

 0 tNotAnd2 1 1  : ok

 0 tNotAnd3 0 0  : ok

 0 tNotAnd4 0 1  : ok


 0x0000000100000000  >  0x00000000ffffffff 1
DataStack at : [34;49mnamespaces/test/logic.csl : 77.2[39;49m :
DataStack depth =   3 : Dsp (R14) = Top = 0x00007fb6e7cd3a58, InitialTos = 0x00007fb6e7cd3a40, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fb6e7cd3a58 > = 0x0000000000000005	
  DataStack   [  -1 ] < 0x00007fb6e7cd3a50 > = 0x0000000000000005	
  DataStack   [  -2 ] < 0x00007fb6e7cd3a48 > = 0x0000000000000005	

 0x00000000ffffffff  >  0x0000000100000000 0
 =============================
Logic.[34;49mnt[39;49m <:> csl compiled word
SourceCode for Logic.[34;49mnt[39;49m :> 
[34;49m: nt ( n ) n @ ! ! ! return tos ; [39;49m
Source code file location of [34;49mnt[39;49m : "namespaces/test/logic.csl" : 80.2 :: we are now at : namespaces/test/logic.csl : 83.15
Compiled with : optimizeOn, inlineOn, Jcc8 on
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xe7942df1 -- code size = 101 bytes
TypeSignature : 
 -----------------------------
Word :: Logic.[34;49mnt[39;49m : definition = 0x00007fb6e7942df1 : disassembly at namespaces/test/logic.csl : 83.15 :
[34;49m ..                                     : [39;49m[33;40mnt[39;49m[34;49m ( n ) n @ ! ! ! return tos ;  .. [39;49m[32;49m
0x7fb6e7942df1    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fb6e7942df5    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e7942df9    4981c608000000          add r14, 0x8                                           [39;49m
[34;49m ..                            : nt ( n ) [39;49m[33;40mn[39;49m[34;49m @ ! ! ! return tos ;  .. [39;49m[32;49m
0x7fb6e7942e00    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m ..                        : nt ( n ) n @ [39;49m[33;40m![39;49m[34;49m ! ! return tos ;  .. [39;49m[32;49m
0x7fb6e7942e04    4885c0                  test rax, rax                                          [39;49m[32;49m
0x7fb6e7942e07    7409                    jz 0xe7942e12                                          [39;49m[32;49m
0x7fb6e7942e09    48c7c000000000          mov rax, 0x0                                           [39;49m[32;49m
0x7fb6e7942e10    eb07                    jmp 0x7fb6e7942e19         	< Logic.[34;49mnt[39;49m+40[32;49m >[39;49m[39;49m[32;49m
0x7fb6e7942e12    48c7c001000000          mov rax, 0x1                                           [39;49m
[34;49m ..                      : nt ( n ) n @ ! [39;49m[33;40m![39;49m[34;49m ! return tos ;  .. [39;49m[32;49m
0x7fb6e7942e19    4885c0                  test rax, rax                                          [39;49m[32;49m
0x7fb6e7942e1c    7409                    jz 0xe7942e27                                          [39;49m[32;49m
0x7fb6e7942e1e    48c7c000000000          mov rax, 0x0                                           [39;49m[32;49m
0x7fb6e7942e25    eb07                    jmp 0x7fb6e7942e2e         	< Logic.[34;49mnt[39;49m+61[32;49m >[39;49m[39;49m[32;49m
0x7fb6e7942e27    48c7c001000000          mov rax, 0x1                                           [39;49m
[34;49m ..                    : nt ( n ) n @ ! ! [39;49m[33;40m![39;49m[34;49m return tos ;  .. [39;49m[32;49m
0x7fb6e7942e2e    4885c0                  test rax, rax                                          [39;49m[32;49m
0x7fb6e7942e31    7409                    jz 0xe7942e3c                                          [39;49m[32;49m
0x7fb6e7942e33    48c7c000000000          mov rax, 0x0                                           [39;49m[32;49m
0x7fb6e7942e3a    eb07                    jmp 0x7fb6e7942e43         	< Logic.[34;49mnt[39;49m+82[32;49m >[39;49m[39;49m[32;49m
0x7fb6e7942e3c    48c7c001000000          mov rax, 0x1                                           [39;49m[32;49m
0x7fb6e7942e43    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7942e47    498906                  mov [r14], rax                                         [39;49m
[34;49m ..       : nt ( n ) n @ ! ! ! return tos [39;49m[33;40m;[39;49m[34;49m  .. [39;49m[32;49m
0x7fb6e7942e4a    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e7942e4e    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e7942e52    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e7942e55    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'nt' :: codeSize = 100
Word : 0x00007fb6e759da68 :: Compiled at : 0x00007fb6e7942df1
 =============================
::> 'wdiss' was called at namespaces/test/logic.csl 83.15 <::
 1 2 3 12

 =============================
C_Syntax.[34;49mtaa[39;49m <:> csl compiled word
SourceCode for C_Syntax.[34;49mtaa[39;49m :> 
[34;49mint64 taa ( one two three ) { int64 four, five ; four = one + two + three ; five = one + two + three + four ; p ( one ) ; p ( two ) ; p ( three ) ; p ( five ) ; nl () ; } [39;49m
Source code file location of [34;49mtaa[39;49m : "namespaces/test/localsTest.csl" : 23.4 :: we are now at : namespaces/test/localsTest.csl : 35.16
Compiled with : optimizeOn, inlineOn, c_syntaxOn, infixOn, Jcc8 on
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xe7942edd -- code size = 204 bytes
TypeSignature : 
 -----------------------------
Word :: C_Syntax.[34;49mtaa[39;49m : definition = 0x00007fb6e7942edd : disassembly at namespaces/test/localsTest.csl : 35.16 :
[34;49m ..                                 int64 [39;49m[33;40mtaa[39;49m[34;49m ( one two three ) { int64 four, five ; four = one + two + three ; five = one + two + three + four .. [39;49m[32;49m
0x7fb6e7942edd    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fb6e7942ee1    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e7942ee5    4981c618000000          add r14, 0x18                                          [39;49m
[34;49m .. o three ) { int64 four, five ; four = [39;49m[33;40mone[39;49m[34;49m + two + three ; five = one + two + three + four ; p ( one ) ; p ( two ) ; p ( three ) ; p ( five  .. [39;49m[32;49m
0x7fb6e7942eec    498b47e8                mov rax, [r15-0x18]                                    [39;49m
[34;49m .. e ) { int64 four, five ; four = one + [39;49m[33;40mtwo[39;49m[34;49m + three ; five = one + two + three + four ; p ( one ) ; p ( two ) ; p ( three ) ; p ( five ) ; nl .. [39;49m[32;49m
0x7fb6e7942ef0    498b4ff0                mov rcx, [r15-0x10]                                    [39;49m
[34;49m .. ree ) { int64 four, five ; four = one [39;49m[33;40m+[39;49m[34;49m two + three ; five = one + two + three + four ; p ( one ) ; p ( two ) ; p ( three ) ; p ( five ) ;  .. [39;49m[32;49m
0x7fb6e7942ef4    4803c1                  add rax, rcx                                           [39;49m
[34;49m .. int64 four, five ; four = one + two + [39;49m[33;40mthree[39;49m[34;49m ; five = one + two + three + four ; p ( one ) ; p ( two ) ; p ( three ) ; p ( five ) ; nl () ;  .. [39;49m[32;49m
0x7fb6e7942ef7    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m
[34;49m .. { int64 four, five ; four = one + two [39;49m[33;40m+[39;49m[34;49m three ; five = one + two + three + four ; p ( one ) ; p ( two ) ; p ( three ) ; p ( five ) ; nl ()  .. [39;49m[32;49m
0x7fb6e7942efb    4803c1                  add rax, rcx                                           [39;49m
[34;49m ..  one two three ) { int64 four, five ; [39;49m[33;40mfour[39;49m[34;49m = one + two + three ; five = one + two + three + four ; p ( one ) ; p ( two ) ; p ( three ) ; p  .. [39;49m[32;49m
0x7fb6e7942efe    498d4f08                lea rcx, [r15+0x8]                                     [39;49m
[34;49m .. two three ) { int64 four, five ; four [39;49m[33;40m=[39;49m[34;49m one + two + three ; five = one + two + three + four ; p ( one ) ; p ( two ) ; p ( three ) ; p ( fiv .. [39;49m[32;49m
0x7fb6e7942f02    488901                  mov [rcx], rax                                         [39;49m
[34;49m .. e ; four = one + two + three ; five = [39;49m[33;40mone[39;49m[34;49m + two + three + four ; p ( one ) ; p ( two ) ; p ( three ) ; p ( five ) ; nl () ; }  .. [39;49m[32;49m
0x7fb6e7942f05    498b47e8                mov rax, [r15-0x18]                                    [39;49m
[34;49m .. ur = one + two + three ; five = one + [39;49m[33;40mtwo[39;49m[34;49m + three + four ; p ( one ) ; p ( two ) ; p ( three ) ; p ( five ) ; nl () ; }  .. [39;49m[32;49m
0x7fb6e7942f09    498b4ff0                mov rcx, [r15-0x10]                                    [39;49m
[34;49m .. four = one + two + three ; five = one [39;49m[33;40m+[39;49m[34;49m two + three + four ; p ( one ) ; p ( two ) ; p ( three ) ; p ( five ) ; nl () ; }  .. [39;49m[32;49m
0x7fb6e7942f0d    4803c1                  add rax, rcx                                           [39;49m
[34;49m .. ne + two + three ; five = one + two + [39;49m[33;40mthree[39;49m[34;49m + four ; p ( one ) ; p ( two ) ; p ( three ) ; p ( five ) ; nl () ; }  .. [39;49m[32;49m
0x7fb6e7942f10    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m
[34;49m ..  one + two + three ; five = one + two [39;49m[33;40m+[39;49m[34;49m three + four ; p ( one ) ; p ( two ) ; p ( three ) ; p ( five ) ; nl () ; }  .. [39;49m[32;49m
0x7fb6e7942f14    4803c1                  add rax, rcx                                           [39;49m
[34;49m ..  + three ; five = one + two + three + [39;49m[33;40mfour[39;49m[34;49m ; p ( one ) ; p ( two ) ; p ( three ) ; p ( five ) ; nl () ; }  .. [39;49m[32;49m
0x7fb6e7942f17    498b4f08                mov rcx, [r15+0x8]                                     [39;49m
[34;49m .. wo + three ; five = one + two + three [39;49m[33;40m+[39;49m[34;49m four ; p ( one ) ; p ( two ) ; p ( three ) ; p ( five ) ; nl () ; }  .. [39;49m[32;49m
0x7fb6e7942f1b    4803c1                  add rax, rcx                                           [39;49m
[34;49m .. ur, five ; four = one + two + three ; [39;49m[33;40mfive[39;49m[34;49m = one + two + three + four ; p ( one ) ; p ( two ) ; p ( three ) ; p ( five ) ; nl () ; }  .. [39;49m[32;49m
0x7fb6e7942f1e    498d4f10                lea rcx, [r15+0x10]                                    [39;49m
[34;49m .. ive ; four = one + two + three ; five [39;49m[33;40m=[39;49m[34;49m one + two + three + four ; p ( one ) ; p ( two ) ; p ( three ) ; p ( five ) ; nl () ; }  .. [39;49m[32;49m
0x7fb6e7942f22    488901                  mov [rcx], rax                                         [39;49m
[34;49m .. five = one + two + three + four ; p ( [39;49m[33;40mone[39;49m[34;49m ) ; p ( two ) ; p ( three ) ; p ( five ) ; nl () ; }  .. [39;49m[32;49m
0x7fb6e7942f25    498b47e8                mov rax, [r15-0x18]                                    [39;49m[32;49m
0x7fb6e7942f29    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7942f2d    498906                  mov [r14], rax                                         [39;49m
[34;49m .. e ; five = one + two + three + four ; [39;49m[33;40mp[39;49m[34;49m ( one ) ; p ( two ) ; p ( three ) ; p ( five ) ; nl () ; }  .. [39;49m[32;49m
0x7fb6e7942f30    49b9d9a593e7b67f0000    mov r9, 0x7fb6e793a5d9                                 [39;49m[32;49m
0x7fb6e7942f3a    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fb6e793a5d9[32;49m >[39;49m[39;49m
[34;49m ..  two + three + four ; p ( one ) ; p ( [39;49m[33;40mtwo[39;49m[34;49m ) ; p ( three ) ; p ( five ) ; nl () ; }  .. [39;49m[32;49m
0x7fb6e7942f3d    498b47f0                mov rax, [r15-0x10]                                    [39;49m[32;49m
0x7fb6e7942f41    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7942f45    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ne + two + three + four ; p ( one ) ; [39;49m[33;40mp[39;49m[34;49m ( two ) ; p ( three ) ; p ( five ) ; nl () ; }  .. [39;49m[32;49m
0x7fb6e7942f48    49b9d9a593e7b67f0000    mov r9, 0x7fb6e793a5d9                                 [39;49m[32;49m
0x7fb6e7942f52    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fb6e793a5d9[32;49m >[39;49m[39;49m
[34;49m ..  + four ; p ( one ) ; p ( two ) ; p ( [39;49m[33;40mthree[39;49m[34;49m ) ; p ( five ) ; nl () ; }  .. [39;49m[32;49m
0x7fb6e7942f55    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e7942f59    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7942f5d    498906                  mov [r14], rax                                         [39;49m
[34;49m .. hree + four ; p ( one ) ; p ( two ) ; [39;49m[33;40mp[39;49m[34;49m ( three ) ; p ( five ) ; nl () ; }  .. [39;49m[32;49m
0x7fb6e7942f60    49b9d9a593e7b67f0000    mov r9, 0x7fb6e793a5d9                                 [39;49m[32;49m
0x7fb6e7942f6a    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fb6e793a5d9[32;49m >[39;49m[39;49m
[34;49m .. one ) ; p ( two ) ; p ( three ) ; p ( [39;49m[33;40mfive[39;49m[34;49m ) ; nl () ; }  .. [39;49m[32;49m
0x7fb6e7942f6d    498b4710                mov rax, [r15+0x10]                                    [39;49m[32;49m
0x7fb6e7942f71    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7942f75    498906                  mov [r14], rax                                         [39;49m
[34;49m .. p ( one ) ; p ( two ) ; p ( three ) ; [39;49m[33;40mp[39;49m[34;49m ( five ) ; nl () ; }  .. [39;49m[32;49m
0x7fb6e7942f78    49b9d9a593e7b67f0000    mov r9, 0x7fb6e793a5d9                                 [39;49m[32;49m
0x7fb6e7942f82    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fb6e793a5d9[32;49m >[39;49m[39;49m
[34;49m ..  ( two ) ; p ( three ) ; p ( five ) ; [39;49m[33;40mnl[39;49m[34;49m () ; }  .. [39;49m[32;49m
0x7fb6e7942f85    49b8e08080892d560000    mov r8, 0x562d898080e0                                 [39;49m[32;49m
0x7fb6e7942f8f    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e7942f99    49ffd1                  call r9                    	< Io.[34;49mnewline[39;49m : 0x0000562d898080e0[32;49m >[39;49m[39;49m
[34;49m .. wo ) ; p ( three ) ; p ( five ) ; nl ([39;49m[33;40m)[39;49m[34;49m ; }  .. [39;49m[32;49m
0x7fb6e7942f9c    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e7942fa0    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e7942fa4    4983ee18                sub r14, 0x18                                          [39;49m[32;49m
0x7fb6e7942fa8    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'taa' :: codeSize = 203
Word : 0x00007fb6e759f9c8 :: Compiled at : 0x00007fb6e7942edd
 =============================
::> 'wdiss' was called at namespaces/test/localsTest.csl 35.16 <::
 1 2 3 12
 3 3 3
 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7
 1 2 3
 1 2 3 4 3 3 3 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 1 2 3
 1 2 3 4
 =============================
C.[34;49mhey[39;49m <:> csl compiled word
SourceCode for C.[34;49mhey[39;49m :> 
[34;49m: hey ( n m | o q ) o m @ = m @ o @ "hey_1_assert" assert q n @ = n @ q @ "hey_2_assert" assert n @ m @ o @ q @ + + + 1 + dup p 7 "hey_3_assert" assert n @ m @ + o @ + q @ + 1 + dup p 7 "hey_4_assert" assert ; [39;49m
Source code file location of [34;49mhey[39;49m : "namespaces/test/localsTest.csl" : 103.2 :: we are now at : namespaces/test/localsTest.csl : 111.17
Compiled with : optimizeOn, inlineOn, Jcc8 on
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xe79437d2 -- code size = 394 bytes
TypeSignature : 
 -----------------------------
Word :: C.[34;49mhey[39;49m : definition = 0x00007fb6e79437d2 : disassembly at namespaces/test/localsTest.csl : 111.17 :
[34;49m ..                                     : [39;49m[33;40mhey[39;49m[34;49m ( n m | o q )  o m @ =  m @ o @ "hey_1_assert" assert  q n @ =  n @ q @ "hey_2_assert" assert  n  .. [39;49m[32;49m
0x7fb6e79437d2    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fb6e79437d6    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e79437da    4981c618000000          add r14, 0x18                                          [39;49m
[34;49m ..                  : hey ( n m | o q )  [39;49m[33;40mo[39;49m[34;49m m @ =  m @ o @ "hey_1_assert" assert  q n @ =  n @ q @ "hey_2_assert" assert  n @ m @ o @ q @ + + + .. [39;49m[32;49m
0x7fb6e79437e1    498d4708                lea rax, [r15+0x8]                                     [39;49m
[34;49m ..                : hey ( n m | o q )  o [39;49m[33;40mm[39;49m[34;49m @ =  m @ o @ "hey_1_assert" assert  q n @ =  n @ q @ "hey_2_assert" assert  n @ m @ o @ q @ + + + 1 .. [39;49m[32;49m
0x7fb6e79437e5    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m
[34;49m ..            : hey ( n m | o q )  o m @ [39;49m[33;40m=[39;49m[34;49m  m @ o @ "hey_1_assert" assert  q n @ =  n @ q @ "hey_2_assert" assert  n @ m @ o @ q @ + + + 1 + d .. [39;49m[32;49m
0x7fb6e79437e9    488908                  mov [rax], rcx                                         [39;49m
[34;49m ..         : hey ( n m | o q )  o m @ =  [39;49m[33;40mm[39;49m[34;49m @ o @ "hey_1_assert" assert  q n @ =  n @ q @ "hey_2_assert" assert  n @ m @ o @ q @ + + + 1 + dup  .. [39;49m[32;49m
0x7fb6e79437ec    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e79437f0    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e79437f4    498906                  mov [r14], rax                                         [39;49m
[34;49m ..     : hey ( n m | o q )  o m @ =  m @ [39;49m[33;40mo[39;49m[34;49m @ "hey_1_assert" assert  q n @ =  n @ q @ "hey_2_assert" assert  n @ m @ o @ q @ + + + 1 + dup p 7  .. [39;49m[32;49m
0x7fb6e79437f7    498b4708                mov rax, [r15+0x8]                                     [39;49m[32;49m
0x7fb6e79437fb    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e79437ff    498906                  mov [r14], rax                                         [39;49m
[34;49m .. : hey ( n m | o q )  o m @ =  m @ o @ [39;49m[33;40m"[39;49m[34;49mhey_1_assert" assert  q n @ =  n @ q @ "hey_2_assert" assert  n @ m @ o @ q @ + + + 1 + dup p 7 "hey .. [39;49m[32;49m
0x7fb6e7943802    48b89b527ee7b67f0000    mov rax, 0x7fb6e77e529b    	[32;49m< string : '[39;49m[39;49mhey_1_assert[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fb6e794380c    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7943810    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e7943813    49b92bbb93e7b67f0000    mov r9, 0x7fb6e793bb2b                                 [39;49m[32;49m
0x7fb6e794381d    49ffd1                  call r9                    	< System.[34;49m_assert1[39;49m : 0x00007fb6e793bb2b[32;49m >[39;49m[39;49m
[34;49m .. m @ =  m @ o @ "hey_1_assert" assert  [39;49m[33;40mq[39;49m[34;49m n @ =  n @ q @ "hey_2_assert" assert  n @ m @ o @ q @ + + + 1 + dup p 7 "hey_3_assert" assert  n @  .. [39;49m[32;49m
0x7fb6e7943820    498d4710                lea rax, [r15+0x10]                                    [39;49m
[34;49m .. @ =  m @ o @ "hey_1_assert" assert  q [39;49m[33;40mn[39;49m[34;49m @ =  n @ q @ "hey_2_assert" assert  n @ m @ o @ q @ + + + 1 + dup p 7 "hey_3_assert" assert  n @ m  .. [39;49m[32;49m
0x7fb6e7943824    498b4ff0                mov rcx, [r15-0x10]                                    [39;49m
[34;49m ..  m @ o @ "hey_1_assert" assert  q n @ [39;49m[33;40m=[39;49m[34;49m  n @ q @ "hey_2_assert" assert  n @ m @ o @ q @ + + + 1 + dup p 7 "hey_3_assert" assert  n @ m @ +  .. [39;49m[32;49m
0x7fb6e7943828    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. @ o @ "hey_1_assert" assert  q n @ =  [39;49m[33;40mn[39;49m[34;49m @ q @ "hey_2_assert" assert  n @ m @ o @ q @ + + + 1 + dup p 7 "hey_3_assert" assert  n @ m @ + o @ .. [39;49m[32;49m
0x7fb6e794382b    498b47f0                mov rax, [r15-0x10]                                    [39;49m[32;49m
0x7fb6e794382f    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7943833    498906                  mov [r14], rax                                         [39;49m
[34;49m .. @ "hey_1_assert" assert  q n @ =  n @ [39;49m[33;40mq[39;49m[34;49m @ "hey_2_assert" assert  n @ m @ o @ q @ + + + 1 + dup p 7 "hey_3_assert" assert  n @ m @ + o @ + q .. [39;49m[32;49m
0x7fb6e7943836    498b4710                mov rax, [r15+0x10]                                    [39;49m[32;49m
0x7fb6e794383a    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e794383e    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ey_1_assert" assert  q n @ =  n @ q @ [39;49m[33;40m"[39;49m[34;49mhey_2_assert" assert  n @ m @ o @ q @ + + + 1 + dup p 7 "hey_3_assert" assert  n @ m @ + o @ + q @ + .. [39;49m[32;49m
0x7fb6e7943841    48b8c6527ee7b67f0000    mov rax, 0x7fb6e77e52c6    	[32;49m< string : '[39;49m[39;49mhey_2_assert[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fb6e794384b    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e794384f    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e7943852    49b92bbb93e7b67f0000    mov r9, 0x7fb6e793bb2b                                 [39;49m[32;49m
0x7fb6e794385c    49ffd1                  call r9                    	< System.[34;49m_assert1[39;49m : 0x00007fb6e793bb2b[32;49m >[39;49m[39;49m
[34;49m .. n @ =  n @ q @ "hey_2_assert" assert  [39;49m[33;40mn[39;49m[34;49m @ m @ o @ q @ + + + 1 + dup p 7 "hey_3_assert" assert  n @ m @ + o @ + q @ + 1 + dup p 7 "hey_4_ass .. [39;49m[32;49m
0x7fb6e794385f    498b47f0                mov rax, [r15-0x10]                                    [39;49m[32;49m
0x7fb6e7943863    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7943867    498906                  mov [r14], rax                                         [39;49m
[34;49m .. =  n @ q @ "hey_2_assert" assert  n @ [39;49m[33;40mm[39;49m[34;49m @ o @ q @ + + + 1 + dup p 7 "hey_3_assert" assert  n @ m @ + o @ + q @ + 1 + dup p 7 "hey_4_assert" .. [39;49m[32;49m
0x7fb6e794386a    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e794386e    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7943872    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  @ q @ "hey_2_assert" assert  n @ m @ [39;49m[33;40mo[39;49m[34;49m @ q @ + + + 1 + dup p 7 "hey_3_assert" assert  n @ m @ + o @ + q @ + 1 + dup p 7 "hey_4_assert" ass .. [39;49m[32;49m
0x7fb6e7943875    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m ..  @ "hey_2_assert" assert  n @ m @ o @ [39;49m[33;40mq[39;49m[34;49m @ + + + 1 + dup p 7 "hey_3_assert" assert  n @ m @ + o @ + q @ + 1 + dup p 7 "hey_4_assert" assert  .. [39;49m[32;49m
0x7fb6e7943879    498b4f10                mov rcx, [r15+0x10]                                    [39;49m
[34;49m .. hey_2_assert" assert  n @ m @ o @ q @ [39;49m[33;40m+[39;49m[34;49m + + 1 + dup p 7 "hey_3_assert" assert  n @ m @ + o @ + q @ + 1 + dup p 7 "hey_4_assert" assert ;  .. [39;49m[32;49m
0x7fb6e794387d    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fb6e7943880    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fb6e7943883    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fb6e7943886    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m .. y_2_assert" assert  n @ m @ o @ q @ + [39;49m[33;40m+[39;49m[34;49m + 1 + dup p 7 "hey_3_assert" assert  n @ m @ + o @ + q @ + 1 + dup p 7 "hey_4_assert" assert ;  .. [39;49m[32;49m
0x7fb6e794388a    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fb6e794388d    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fb6e7943890    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fb6e7943893    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m .. 2_assert" assert  n @ m @ o @ q @ + + [39;49m[33;40m+[39;49m[34;49m 1 + dup p 7 "hey_3_assert" assert  n @ m @ + o @ + q @ + 1 + dup p 7 "hey_4_assert" assert ;  .. [39;49m[32;49m
0x7fb6e7943897    4803c1                  add rax, rcx                                           [39;49m
[34;49m .. assert" assert  n @ m @ o @ q @ + + + [39;49m[33;40m1[39;49m[34;49m + dup p 7 "hey_3_assert" assert  n @ m @ + o @ + q @ + 1 + dup p 7 "hey_4_assert" assert ;  .. [39;49m[32;49m
0x7fb6e794389a    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m .. sert" assert  n @ m @ o @ q @ + + + 1 [39;49m[33;40m+[39;49m[34;49m dup p 7 "hey_3_assert" assert  n @ m @ + o @ + q @ + 1 + dup p 7 "hey_4_assert" assert ;  .. [39;49m[32;49m
0x7fb6e79438a1    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fb6e79438a4    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fb6e79438a8    498906                  mov [r14], rax                                         [39;49m
[34;49m .. rt" assert  n @ m @ o @ q @ + + + 1 + [39;49m[33;40mdup[39;49m[34;49m p 7 "hey_3_assert" assert  n @ m @ + o @ + q @ + 1 + dup p 7 "hey_4_assert" assert ;  .. [39;49m[32;49m
0x7fb6e79438ab    498946f8                mov [r14-0x8], rax                                     [39;49m
[34;49m .. assert  n @ m @ o @ q @ + + + 1 + dup [39;49m[33;40mp[39;49m[34;49m 7 "hey_3_assert" assert  n @ m @ + o @ + q @ + 1 + dup p 7 "hey_4_assert" assert ;  .. [39;49m[32;49m
0x7fb6e79438af    49b9d9a593e7b67f0000    mov r9, 0x7fb6e793a5d9                                 [39;49m[32;49m
0x7fb6e79438b9    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fb6e793a5d9[32;49m >[39;49m[39;49m
[34;49m .. sert  n @ m @ o @ q @ + + + 1 + dup p [39;49m[33;40m7[39;49m[34;49m "hey_3_assert" assert  n @ m @ + o @ + q @ + 1 + dup p 7 "hey_4_assert" assert ;  .. [39;49m[32;49m
0x7fb6e79438bc    48c7c007000000          mov rax, 0x7                                           [39;49m[32;49m
0x7fb6e79438c3    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e79438c7    498906                  mov [r14], rax                                         [39;49m
[34;49m .. rt  n @ m @ o @ q @ + + + 1 + dup p 7 [39;49m[33;40m"[39;49m[34;49mhey_3_assert" assert  n @ m @ + o @ + q @ + 1 + dup p 7 "hey_4_assert" assert ;  .. [39;49m[32;49m
0x7fb6e79438ca    48b8f5527ee7b67f0000    mov rax, 0x7fb6e77e52f5    	[32;49m< string : '[39;49m[39;49mhey_3_assert[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fb6e79438d4    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e79438d8    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e79438db    49b92bbb93e7b67f0000    mov r9, 0x7fb6e793bb2b                                 [39;49m[32;49m
0x7fb6e79438e5    49ffd1                  call r9                    	< System.[34;49m_assert1[39;49m : 0x00007fb6e793bb2b[32;49m >[39;49m[39;49m
[34;49m ..  + 1 + dup p 7 "hey_3_assert" assert  [39;49m[33;40mn[39;49m[34;49m @ m @ + o @ + q @ + 1 + dup p 7 "hey_4_assert" assert ;  .. [39;49m[32;49m
0x7fb6e79438e8    498b47f0                mov rax, [r15-0x10]                                    [39;49m
[34;49m ..  + dup p 7 "hey_3_assert" assert  n @ [39;49m[33;40mm[39;49m[34;49m @ + o @ + q @ + 1 + dup p 7 "hey_4_assert" assert ;  .. [39;49m[32;49m
0x7fb6e79438ec    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m
[34;49m .. up p 7 "hey_3_assert" assert  n @ m @ [39;49m[33;40m+[39;49m[34;49m o @ + q @ + 1 + dup p 7 "hey_4_assert" assert ;  .. [39;49m[32;49m
0x7fb6e79438f0    4803c1                  add rax, rcx                                           [39;49m
[34;49m ..  p 7 "hey_3_assert" assert  n @ m @ + [39;49m[33;40mo[39;49m[34;49m @ + q @ + 1 + dup p 7 "hey_4_assert" assert ;  .. [39;49m[32;49m
0x7fb6e79438f3    498b4f08                mov rcx, [r15+0x8]                                     [39;49m
[34;49m ..  "hey_3_assert" assert  n @ m @ + o @ [39;49m[33;40m+[39;49m[34;49m q @ + 1 + dup p 7 "hey_4_assert" assert ;  .. [39;49m[32;49m
0x7fb6e79438f7    4803c1                  add rax, rcx                                           [39;49m
[34;49m .. hey_3_assert" assert  n @ m @ + o @ + [39;49m[33;40mq[39;49m[34;49m @ + 1 + dup p 7 "hey_4_assert" assert ;  .. [39;49m[32;49m
0x7fb6e79438fa    498b4f10                mov rcx, [r15+0x10]                                    [39;49m
[34;49m .. 3_assert" assert  n @ m @ + o @ + q @ [39;49m[33;40m+[39;49m[34;49m 1 + dup p 7 "hey_4_assert" assert ;  .. [39;49m[32;49m
0x7fb6e79438fe    4803c1                  add rax, rcx                                           [39;49m
[34;49m .. assert" assert  n @ m @ + o @ + q @ + [39;49m[33;40m1[39;49m[34;49m + dup p 7 "hey_4_assert" assert ;  .. [39;49m[32;49m
0x7fb6e7943901    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m .. sert" assert  n @ m @ + o @ + q @ + 1 [39;49m[33;40m+[39;49m[34;49m dup p 7 "hey_4_assert" assert ;  .. [39;49m[32;49m
0x7fb6e7943908    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fb6e794390b    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fb6e794390f    498906                  mov [r14], rax                                         [39;49m
[34;49m .. rt" assert  n @ m @ + o @ + q @ + 1 + [39;49m[33;40mdup[39;49m[34;49m p 7 "hey_4_assert" assert ;  .. [39;49m[32;49m
0x7fb6e7943912    498946f8                mov [r14-0x8], rax                                     [39;49m
[34;49m .. assert  n @ m @ + o @ + q @ + 1 + dup [39;49m[33;40mp[39;49m[34;49m 7 "hey_4_assert" assert ;  .. [39;49m[32;49m
0x7fb6e7943916    49b9d9a593e7b67f0000    mov r9, 0x7fb6e793a5d9                                 [39;49m[32;49m
0x7fb6e7943920    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fb6e793a5d9[32;49m >[39;49m[39;49m
[34;49m .. sert  n @ m @ + o @ + q @ + 1 + dup p [39;49m[33;40m7[39;49m[34;49m "hey_4_assert" assert ;  .. [39;49m[32;49m
0x7fb6e7943923    48c7c007000000          mov rax, 0x7                                           [39;49m[32;49m
0x7fb6e794392a    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e794392e    498906                  mov [r14], rax                                         [39;49m
[34;49m .. rt  n @ m @ + o @ + q @ + 1 + dup p 7 [39;49m[33;40m"[39;49m[34;49mhey_4_assert" assert ;  .. [39;49m[32;49m
0x7fb6e7943931    48b824537ee7b67f0000    mov rax, 0x7fb6e77e5324    	[32;49m< string : '[39;49m[39;49mhey_4_assert[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fb6e794393b    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e794393f    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e7943942    49b92bbb93e7b67f0000    mov r9, 0x7fb6e793bb2b                                 [39;49m[32;49m
0x7fb6e794394c    49ffd1                  call r9                    	< System.[34;49m_assert1[39;49m : 0x00007fb6e793bb2b[32;49m >[39;49m[39;49m
[34;49m .. @ + 1 + dup p 7 "hey_4_assert" assert [39;49m[33;40m;[39;49m[34;49m  .. [39;49m[32;49m
0x7fb6e794394f    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e7943953    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e7943957    4983ee10                sub r14, 0x10                                          [39;49m[32;49m
0x7fb6e794395b    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'hey' :: codeSize = 393
Word : 0x00007fb6e6110a78 :: Compiled at : 0x00007fb6e79437d2
 =============================
::> 'wdiss' was called at namespaces/test/localsTest.csl 111.17 <::
 hey_1_assert  : ok

 hey_2_assert  : ok

 7 hey_3_assert  : ok

 7 hey_4_assert  : ok

 hey_1_assert  : ok

 hey_2_assert  : ok

 7 hey_3_assert  : ok

 7 hey_4_assert  : ok

 hey_1_assert  : ok

 hey_2_assert  : ok

 7 hey_3_assert  : ok

 7 hey_4_assert  : ok

 7
beforeHeey
 hey_1_assert  : ok

 hey_2_assert  : ok

 7 hey_3_assert  : ok

 7 hey_4_assert  : ok

 7 hey_1_assert  : ok

 hey_2_assert  : ok

 7 hey_3_assert  : ok

 7 hey_4_assert  : ok

 7 hey_1_assert  : ok

 hey_2_assert  : ok

 7 hey_3_assert  : ok

 7 hey_4_assert  : ok

 7 hey_1_assert  : ok

 hey_2_assert  : ok

 7 hey_3_assert  : ok

 7 hey_4_assert  : ok

 7 hey_1_assert  : ok

 hey_2_assert  : ok

 7 hey_3_assert  : ok

 7 hey_4_assert  : ok

 7 hey_1_assert  : ok

 hey_2_assert  : ok

 7 hey_3_assert  : ok

 7 hey_4_assert  : ok

 7 hey_1_assert  : ok

 hey_2_assert  : ok

 7 hey_3_assert  : ok

 7 hey_4_assert  : ok

 7 hey_1_assert  : ok

 hey_2_assert  : ok

 7 hey_3_assert  : ok

 7 hey_4_assert  : ok

 7 hey_1_assert  : ok

 hey_2_assert  : ok

 7 hey_3_assert  : ok

 7 hey_4_assert  : ok

 7 hey_1_assert  : ok

 hey_2_assert  : ok

 7 hey_3_assert  : ok

 7 hey_4_assert  : ok

 7 hey_1_assert  : ok

 hey_2_assert  : ok

 7 hey_3_assert  : ok

 7 hey_4_assert  : ok

 7 hey_1_assert  : ok

 hey_2_assert  : ok

 7 hey_3_assert  : ok

 7 hey_4_assert  : ok

 7 hey_1_assert  : ok

 hey_2_assert  : ok

 7 hey_3_assert  : ok

 7 hey_4_assert  : ok

 7 hey_1_assert  : ok

 hey_2_assert  : ok

 7 hey_3_assert  : ok

 7 hey_4_assert  : ok

 7 hey_1_assert  : ok

 hey_2_assert  : ok

 7 hey_3_assert  : ok

 7 hey_4_assert  : ok

 7 hey_1_assert  : ok

 hey_2_assert  : ok

 7 hey_3_assert  : ok

 7 hey_4_assert  : ok

 7 hey_1_assert  : ok

 hey_2_assert  : ok

 7 hey_3_assert  : ok

 7 hey_4_assert  : ok

 7 hey_1_assert  : ok

 hey_2_assert  : ok

 7 hey_3_assert  : ok

 7 hey_4_assert  : ok

 7 hey_1_assert  : ok

 hey_2_assert  : ok

 7 hey_3_assert  : ok

 7 hey_4_assert  : ok

 7 hey_1_assert  : ok

 hey_2_assert  : ok

 7 hey_3_assert  : ok

 7 hey_4_assert  : ok

 7 hey_1_assert  : ok

 hey_2_assert  : ok

 7 hey_3_assert  : ok

 7 hey_4_assert  : ok

 7 hey_1_assert  : ok

 hey_2_assert  : ok

 7 hey_3_assert  : ok

 7 hey_4_assert  : ok

 7
afterHeey
testA1 =  0x00007fb6e7268144
 0x00007fb6e7268144 0x00007fb6e7cd3a70 0x00007fb6e7268144
 this =  0x00007fb6e7268144

 t1 @ =  0x00007fb6e7268144
 t1 =  0x00007fb6e7cd3a70
 done showing variables

Dump at : namespaces/test/localsTest.csl : 157.48 :
Dump : Address = 0x00007fb6e7268144 : Number = 0x0000000000000080 :: (little endian dump)
0x00007fb6e7268144 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e7268154 :  01 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e7268164 :  02 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e7268174 :  00 00 00 00 00 00 00 00  03 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e7268184 :  00 00 00 00 00 00 00 00  04 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e7268194 :  00 00 00 00 00 00 00 00  05 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e72681a4 :  00 00 00 00 00 00 00 00  06 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e72681b4 :  00 00 00 00 00 00 00 00  07 00 00 00 00 00 00 00  ........ ........ 

Dump at : namespaces/test/localsTest.csl : 166.15 :
Dump : Address = 0x00007fb6e7268a6c : Number = 0x0000000000000032 :: (little endian dump)
0x00007fb6e7268a6c :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e7268a7c :  03 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e7268a8c :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e7268a9c :  00 00 00 00 00 00 00 00  04 00 00 00 00 00 00 00  ........ ........ 
 0x0000000000000003 0x0000000000000004
 before test

Using Namespaces :> DLLNodeAlloc DLLNode Buffer Class Root C int64 User Logic Bits Int cta void ct Ar9 Ar3 Ar2 Ar1 DLLNodeAlloc4 DLListClone DLList byte Integer Pointer Compiler Combinators int System Shell OpenVmTil Lexer Interpreter Debug Word Namespace StartupMacros Io Compiling Reserved Compiler DObject Macro PreProcessor List Stack Memory Colors File String Asm Locals Forth Experimental 

 array test ok
 0x0000000000000001
Dump at : namespaces/test/localsTest.csl : 175.15 :
Dump : Address = 0x00007fb6e7268a6c : Number = 0x0000000000000032 :: (little endian dump)
0x00007fb6e7268a6c :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e7268a7c :  03 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e7268a8c :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e7268a9c :  00 00 00 00 00 00 00 00  04 00 00 00 00 00 00 00  ........ ........ 

Dump at : namespaces/test/localsTest.csl : 178.15 :
Dump : Address = 0x00007fb6e7268e24 : Number = 0x0000000000000032 :: (little endian dump)
0x00007fb6e7268e24 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e7268e34 :  05 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e7268e44 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e7268e54 :  00 00 00 00 00 00 00 00  06 00 00 00 00 00 00 00  ........ ........ 
 0x0000000000000077 0x00007fb6e7cd3a60 0x0000000000000001 0x00007fb6e7cd3a70 0x0000000000000000 0x0000000000000001 0x00007fb6e7cd3a78 0x0000000000000001 0x00007fb6e7cd3a88 0x00007fb6e7cd3a70 0x0000000000000001 0x00007fb6e7cd3a78 0x0000000000000001 0x00007fb6e7cd3a88 0x0000000000000001 0x0000000000000001 

testing nested locals

 =============================
User.[34;49mgoedel[39;49m <:> csl compiled word
SourceCode for User.[34;49mgoedel[39;49m :> 
[34;49m: goedel { (| n ) n 1 = n @ 6 + dup 7 _assert p } ix { (| m ) m 3 = m @ 4 + dup 7 _assert p } ix ; [39;49m
Source code file location of [34;49mgoedel[39;49m : "namespaces/test/localsTest.csl" : 214.2 :: we are now at : namespaces/test/localsTest.csl : 216.19
Compiled with : optimizeOn, inlineOn, Jcc8 on
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xe79440f8 -- code size = 182 bytes
TypeSignature : 
 -----------------------------
Word :: User.[34;49mgoedel[39;49m : definition = 0x00007fb6e79440f8 : disassembly at namespaces/test/localsTest.csl : 216.19 :
[34;49m ..                                     : [39;49m[33;40mgoedel[39;49m[34;49m { (| n ) n 1 = n @ 6 + dup 7 _assert p } ix { (| m ) m 3 = m @ 4 + dup 7 _assert p } ix ;  .. [39;49m[32;49m
0x7fb6e79440f8    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fb6e79440fc    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e7944100    4981c618000000          add r14, 0x18                                          [39;49m
[34;49m ..                     : goedel { (| n ) [39;49m[33;40mn[39;49m[34;49m 1 = n @ 6 + dup 7 _assert p } ix { (| m ) m 3 = m @ 4 + dup 7 _assert p } ix ;  .. [39;49m[32;49m
0x7fb6e7944107    498d4708                lea rax, [r15+0x8]                                     [39;49m
[34;49m ..                   : goedel { (| n ) n [39;49m[33;40m1[39;49m[34;49m = n @ 6 + dup 7 _assert p } ix { (| m ) m 3 = m @ 4 + dup 7 _assert p } ix ;  .. [39;49m[32;49m
0x7fb6e794410b    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m ..                 : goedel { (| n ) n 1 [39;49m[33;40m=[39;49m[34;49m n @ 6 + dup 7 _assert p } ix { (| m ) m 3 = m @ 4 + dup 7 _assert p } ix ;  .. [39;49m[32;49m
0x7fb6e7944112    488908                  mov [rax], rcx                                         [39;49m
[34;49m ..               : goedel { (| n ) n 1 = [39;49m[33;40mn[39;49m[34;49m @ 6 + dup 7 _assert p } ix { (| m ) m 3 = m @ 4 + dup 7 _assert p } ix ;  .. [39;49m[32;49m
0x7fb6e7944115    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m ..           : goedel { (| n ) n 1 = n @ [39;49m[33;40m6[39;49m[34;49m + dup 7 _assert p } ix { (| m ) m 3 = m @ 4 + dup 7 _assert p } ix ;  .. [39;49m[32;49m
0x7fb6e7944119    48c7c106000000          mov rcx, 0x6                                           [39;49m
[34;49m ..         : goedel { (| n ) n 1 = n @ 6 [39;49m[33;40m+[39;49m[34;49m dup 7 _assert p } ix { (| m ) m 3 = m @ 4 + dup 7 _assert p } ix ;  .. [39;49m[32;49m
0x7fb6e7944120    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fb6e7944123    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fb6e7944127    498906                  mov [r14], rax                                         [39;49m
[34;49m ..       : goedel { (| n ) n 1 = n @ 6 + [39;49m[33;40mdup[39;49m[34;49m 7 _assert p } ix { (| m ) m 3 = m @ 4 + dup 7 _assert p } ix ;  .. [39;49m[32;49m
0x7fb6e794412a    498946f8                mov [r14-0x8], rax                                     [39;49m
[34;49m ..   : goedel { (| n ) n 1 = n @ 6 + dup [39;49m[33;40m7[39;49m[34;49m _assert p } ix { (| m ) m 3 = m @ 4 + dup 7 _assert p } ix ;  .. [39;49m[32;49m
0x7fb6e794412e    48c7c007000000          mov rax, 0x7                                           [39;49m[32;49m
0x7fb6e7944135    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7944139    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e794413c    49b9dfbc93e7b67f0000    mov r9, 0x7fb6e793bcdf                                 [39;49m[32;49m
0x7fb6e7944146    49ffd1                  call r9                    	< System.[34;49m_assert0[39;49m : 0x00007fb6e793bcdf[32;49m >[39;49m[39;49m
[34;49m ..  { (| n ) n 1 = n @ 6 + dup 7 _assert [39;49m[33;40mp[39;49m[34;49m } ix { (| m ) m 3 = m @ 4 + dup 7 _assert p } ix ; [39;49m[32;49m
0x7fb6e7944149    49b9d9a593e7b67f0000    mov r9, 0x7fb6e793a5d9                                 [39;49m[32;49m
0x7fb6e7944153    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fb6e793a5d9[32;49m >[39;49m[39;49m
[34;49m .. n @ 6 + dup 7 _assert p } ix { (| m ) [39;49m[33;40mm[39;49m[34;49m 3 = m @ 4 + dup 7 _assert p } ix ; [39;49m[32;49m
0x7fb6e7944156    498d4710                lea rax, [r15+0x10]                                    [39;49m
[34;49m .. @ 6 + dup 7 _assert p } ix { (| m ) m [39;49m[33;40m3[39;49m[34;49m = m @ 4 + dup 7 _assert p } ix ; [39;49m[32;49m
0x7fb6e794415a    48c7c103000000          mov rcx, 0x3                                           [39;49m
[34;49m .. 6 + dup 7 _assert p } ix { (| m ) m 3 [39;49m[33;40m=[39;49m[34;49m m @ 4 + dup 7 _assert p } ix ; [39;49m[32;49m
0x7fb6e7944161    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. + dup 7 _assert p } ix { (| m ) m 3 = [39;49m[33;40mm[39;49m[34;49m @ 4 + dup 7 _assert p } ix ; [39;49m[32;49m
0x7fb6e7944164    498b4710                mov rax, [r15+0x10]                                    [39;49m
[34;49m .. p 7 _assert p } ix { (| m ) m 3 = m @ [39;49m[33;40m4[39;49m[34;49m + dup 7 _assert p } ix ; [39;49m[32;49m
0x7fb6e7944168    48c7c104000000          mov rcx, 0x4                                           [39;49m
[34;49m .. 7 _assert p } ix { (| m ) m 3 = m @ 4 [39;49m[33;40m+[39;49m[34;49m dup 7 _assert p } ix ; [39;49m[32;49m
0x7fb6e794416f    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fb6e7944172    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fb6e7944176    498906                  mov [r14], rax                                         [39;49m
[34;49m .. _assert p } ix { (| m ) m 3 = m @ 4 + [39;49m[33;40mdup[39;49m[34;49m 7 _assert p } ix ; [39;49m[32;49m
0x7fb6e7944179    498946f8                mov [r14-0x8], rax                                     [39;49m
[34;49m .. ert p } ix { (| m ) m 3 = m @ 4 + dup [39;49m[33;40m7[39;49m[34;49m _assert p } ix ; [39;49m[32;49m
0x7fb6e794417d    48c7c007000000          mov rax, 0x7                                           [39;49m[32;49m
0x7fb6e7944184    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7944188    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e794418b    49b9dfbc93e7b67f0000    mov r9, 0x7fb6e793bcdf                                 [39;49m[32;49m
0x7fb6e7944195    49ffd1                  call r9                    	< System.[34;49m_assert0[39;49m : 0x00007fb6e793bcdf[32;49m >[39;49m[39;49m
[34;49m ..  { (| m ) m 3 = m @ 4 + dup 7 _assert [39;49m[33;40mp[39;49m[34;49m } ix ; [39;49m[32;49m
0x7fb6e7944198    49b9d9a593e7b67f0000    mov r9, 0x7fb6e793a5d9                                 [39;49m[32;49m
0x7fb6e79441a2    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fb6e793a5d9[32;49m >[39;49m[39;49m
[34;49m ..  ) m 3 = m @ 4 + dup 7 _assert p } ix [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fb6e79441a5    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e79441a9    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e79441ad    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'goedel' :: codeSize = 181
Word : 0x00007fb6e6130c10 :: Compiled at : 0x00007fb6e79440f8
 =============================
::> 'wdiss' was called at namespaces/test/localsTest.csl 216.19 <::

 goedel ::  7 7
 =============================
User.[34;49mgoedel2[39;49m <:> csl compiled word
SourceCode for User.[34;49mgoedel2[39;49m :> 
[34;49m: goedel2 { (| n ) n 2 = n @ 5 + dup 7 "goedel2_1_assert" assert p } ix { (| n ) n @ p n 3 = n @ 4 + dup p 7 "goedel2_2_assert" assert } ix ; [39;49m
Source code file location of [34;49mgoedel2[39;49m : "namespaces/test/localsTest.csl" : 218.2 :: we are now at : namespaces/test/localsTest.csl : 219.20
Compiled with : optimizeOn, inlineOn, Jcc8 on
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xe79441b3 -- code size = 240 bytes
TypeSignature : 
 -----------------------------
Word :: User.[34;49mgoedel2[39;49m : definition = 0x00007fb6e79441b3 : disassembly at namespaces/test/localsTest.csl : 219.20 :
[34;49m ..                                     : [39;49m[33;40mgoedel2[39;49m[34;49m { (| n ) n 2 = n @ 5 + dup 7 "goedel2_1_assert" assert p } ix { (| n ) n @ p n 3 = n @ 4 + du .. [39;49m[32;49m
0x7fb6e79441b3    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fb6e79441b7    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e79441bb    4981c618000000          add r14, 0x18                                          [39;49m
[34;49m ..                    : goedel2 { (| n ) [39;49m[33;40mn[39;49m[34;49m 2 = n @ 5 + dup 7 "goedel2_1_assert" assert p } ix { (| n ) n @ p n 3 = n @ 4 + dup p 7 "goedel2_2_ .. [39;49m[32;49m
0x7fb6e79441c2    498d4708                lea rax, [r15+0x8]                                     [39;49m
[34;49m ..                  : goedel2 { (| n ) n [39;49m[33;40m2[39;49m[34;49m = n @ 5 + dup 7 "goedel2_1_assert" assert p } ix { (| n ) n @ p n 3 = n @ 4 + dup p 7 "goedel2_2_as .. [39;49m[32;49m
0x7fb6e79441c6    48c7c102000000          mov rcx, 0x2                                           [39;49m
[34;49m ..                : goedel2 { (| n ) n 2 [39;49m[33;40m=[39;49m[34;49m n @ 5 + dup 7 "goedel2_1_assert" assert p } ix { (| n ) n @ p n 3 = n @ 4 + dup p 7 "goedel2_2_asse .. [39;49m[32;49m
0x7fb6e79441cd    488908                  mov [rax], rcx                                         [39;49m
[34;49m ..              : goedel2 { (| n ) n 2 = [39;49m[33;40mn[39;49m[34;49m @ 5 + dup 7 "goedel2_1_assert" assert p } ix { (| n ) n @ p n 3 = n @ 4 + dup p 7 "goedel2_2_assert .. [39;49m[32;49m
0x7fb6e79441d0    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m ..          : goedel2 { (| n ) n 2 = n @ [39;49m[33;40m5[39;49m[34;49m + dup 7 "goedel2_1_assert" assert p } ix { (| n ) n @ p n 3 = n @ 4 + dup p 7 "goedel2_2_assert" as .. [39;49m[32;49m
0x7fb6e79441d4    48c7c105000000          mov rcx, 0x5                                           [39;49m
[34;49m ..        : goedel2 { (| n ) n 2 = n @ 5 [39;49m[33;40m+[39;49m[34;49m dup 7 "goedel2_1_assert" assert p } ix { (| n ) n @ p n 3 = n @ 4 + dup p 7 "goedel2_2_assert" asse .. [39;49m[32;49m
0x7fb6e79441db    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fb6e79441de    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fb6e79441e2    498906                  mov [r14], rax                                         [39;49m
[34;49m ..      : goedel2 { (| n ) n 2 = n @ 5 + [39;49m[33;40mdup[39;49m[34;49m 7 "goedel2_1_assert" assert p } ix { (| n ) n @ p n 3 = n @ 4 + dup p 7 "goedel2_2_assert" assert .. [39;49m[32;49m
0x7fb6e79441e5    498946f8                mov [r14-0x8], rax                                     [39;49m
[34;49m ..  : goedel2 { (| n ) n 2 = n @ 5 + dup [39;49m[33;40m7[39;49m[34;49m "goedel2_1_assert" assert p } ix { (| n ) n @ p n 3 = n @ 4 + dup p 7 "goedel2_2_assert" assert } i .. [39;49m[32;49m
0x7fb6e79441e9    48c7c007000000          mov rax, 0x7                                           [39;49m[32;49m
0x7fb6e79441f0    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e79441f4    498906                  mov [r14], rax                                         [39;49m
[34;49m   : goedel2 { (| n ) n 2 = n @ 5 + dup 7 [39;49m[33;40m"[39;49m[34;49mgoedel2_1_assert" assert p } ix { (| n ) n @ p n 3 = n @ 4 + dup p 7 "goedel2_2_assert" assert } ix  .. [39;49m[32;49m
0x7fb6e79441f7    48b8773441e7b67f0000    mov rax, 0x7fb6e7413477    	[32;49m< string : '[39;49m[39;49mgoedel2_1_assert[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fb6e7944201    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7944205    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e7944208    49b92bbb93e7b67f0000    mov r9, 0x7fb6e793bb2b                                 [39;49m[32;49m
0x7fb6e7944212    49ffd1                  call r9                    	< System.[34;49m_assert1[39;49m : 0x00007fb6e793bb2b[32;49m >[39;49m[39;49m
[34;49m .. @ 5 + dup 7 "goedel2_1_assert" assert [39;49m[33;40mp[39;49m[34;49m } ix { (| n ) n @ p n 3 = n @ 4 + dup p 7 "goedel2_2_assert" assert } ix ; [39;49m[32;49m
0x7fb6e7944215    49b9d9a593e7b67f0000    mov r9, 0x7fb6e793a5d9                                 [39;49m[32;49m
0x7fb6e794421f    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fb6e793a5d9[32;49m >[39;49m[39;49m
[34;49m .. del2_1_assert" assert p } ix { (| n ) [39;49m[33;40mn[39;49m[34;49m @ p n 3 = n @ 4 + dup p 7 "goedel2_2_assert" assert } ix ; [39;49m[32;49m
0x7fb6e7944222    498b4710                mov rax, [r15+0x10]                                    [39;49m[32;49m
0x7fb6e7944226    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e794422a    498906                  mov [r14], rax                                         [39;49m
[34;49m .. _1_assert" assert p } ix { (| n ) n @ [39;49m[33;40mp[39;49m[34;49m n 3 = n @ 4 + dup p 7 "goedel2_2_assert" assert } ix ; [39;49m[32;49m
0x7fb6e794422d    49b9d9a593e7b67f0000    mov r9, 0x7fb6e793a5d9                                 [39;49m[32;49m
0x7fb6e7944237    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fb6e793a5d9[32;49m >[39;49m[39;49m
[34;49m .. _assert" assert p } ix { (| n ) n @ p [39;49m[33;40mn[39;49m[34;49m 3 = n @ 4 + dup p 7 "goedel2_2_assert" assert } ix ; [39;49m[32;49m
0x7fb6e794423a    498d4710                lea rax, [r15+0x10]                                    [39;49m
[34;49m .. ssert" assert p } ix { (| n ) n @ p n [39;49m[33;40m3[39;49m[34;49m = n @ 4 + dup p 7 "goedel2_2_assert" assert } ix ; [39;49m[32;49m
0x7fb6e794423e    48c7c103000000          mov rcx, 0x3                                           [39;49m
[34;49m .. ert" assert p } ix { (| n ) n @ p n 3 [39;49m[33;40m=[39;49m[34;49m n @ 4 + dup p 7 "goedel2_2_assert" assert } ix ; [39;49m[32;49m
0x7fb6e7944245    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. t" assert p } ix { (| n ) n @ p n 3 = [39;49m[33;40mn[39;49m[34;49m @ 4 + dup p 7 "goedel2_2_assert" assert } ix ; [39;49m[32;49m
0x7fb6e7944248    498b4710                mov rax, [r15+0x10]                                    [39;49m
[34;49m .. ssert p } ix { (| n ) n @ p n 3 = n @ [39;49m[33;40m4[39;49m[34;49m + dup p 7 "goedel2_2_assert" assert } ix ; [39;49m[32;49m
0x7fb6e794424c    48c7c104000000          mov rcx, 0x4                                           [39;49m
[34;49m .. ert p } ix { (| n ) n @ p n 3 = n @ 4 [39;49m[33;40m+[39;49m[34;49m dup p 7 "goedel2_2_assert" assert } ix ; [39;49m[32;49m
0x7fb6e7944253    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fb6e7944256    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fb6e794425a    498906                  mov [r14], rax                                         [39;49m
[34;49m .. t p } ix { (| n ) n @ p n 3 = n @ 4 + [39;49m[33;40mdup[39;49m[34;49m p 7 "goedel2_2_assert" assert } ix ; [39;49m[32;49m
0x7fb6e794425d    498946f8                mov [r14-0x8], rax                                     [39;49m
[34;49m .. } ix { (| n ) n @ p n 3 = n @ 4 + dup [39;49m[33;40mp[39;49m[34;49m 7 "goedel2_2_assert" assert } ix ; [39;49m[32;49m
0x7fb6e7944261    49b9d9a593e7b67f0000    mov r9, 0x7fb6e793a5d9                                 [39;49m[32;49m
0x7fb6e794426b    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fb6e793a5d9[32;49m >[39;49m[39;49m
[34;49m .. ix { (| n ) n @ p n 3 = n @ 4 + dup p [39;49m[33;40m7[39;49m[34;49m "goedel2_2_assert" assert } ix ; [39;49m[32;49m
0x7fb6e794426e    48c7c007000000          mov rax, 0x7                                           [39;49m[32;49m
0x7fb6e7944275    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7944279    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  { (| n ) n @ p n 3 = n @ 4 + dup p 7 [39;49m[33;40m"[39;49m[34;49mgoedel2_2_assert" assert } ix ; [39;49m[32;49m
0x7fb6e794427c    48b8bf3441e7b67f0000    mov rax, 0x7fb6e74134bf    	[32;49m< string : '[39;49m[39;49mgoedel2_2_assert[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fb6e7944286    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e794428a    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e794428d    49b92bbb93e7b67f0000    mov r9, 0x7fb6e793bb2b                                 [39;49m[32;49m
0x7fb6e7944297    49ffd1                  call r9                    	< System.[34;49m_assert1[39;49m : 0x00007fb6e793bb2b[32;49m >[39;49m[39;49m
[34;49m .. up p 7 "goedel2_2_assert" assert } ix [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fb6e794429a    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e794429e    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e79442a2    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'goedel2' :: codeSize = 239
Word : 0x00007fb6e6133630 :: Compiled at : 0x00007fb6e79441b3
 =============================
::> 'wdiss' was called at namespaces/test/localsTest.csl 219.20 <::

 goedel2 ::  goedel2_1_assert  : ok

 7 0 7 goedel2_2_assert  : ok


 =============================
User.[34;49mgoedel4[39;49m <:> csl compiled word
SourceCode for User.[34;49mgoedel4[39;49m :> 
[34;49m: goedel4 (| n ) nl "goedel4 :: " ps nl n 9 = { (| n ) n @ p n 2 = n @ dup p 2 "goedel4_1_assert" assert { (| n ) n @ p n 3 = n @ 4 + dup p 7 "goedel4_2_assert" assert } ix n @ 6 + 8 _assert } ix { (| n ) n @ p n 3 = n dup @ 4 + dup dup 7 "goedel4_3_assert" assert p = n @ p n @ 7 "goedel4_4_assert" assert } ix n @ dup p return tos ; [39;49m
Source code file location of [34;49mgoedel4[39;49m : "namespaces/test/localsTest.csl" : 222.2 :: we are now at : namespaces/test/localsTest.csl : 242.21
Compiled with : optimizeOn, inlineOn, Jcc8 on
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xe79442a8 -- code size = 682 bytes
TypeSignature : -> Integer 
 -----------------------------
Word :: User.[34;49mgoedel4[39;49m : definition = 0x00007fb6e79442a8 : disassembly at namespaces/test/localsTest.csl : 242.21 :
[34;49m ..                                     : [39;49m[33;40mgoedel4[39;49m[34;49m (| n )  nl "goedel4 :: " ps nl n 9 = {  (| n ) n @ p n 2 = n @ dup p 2 "goedel4_1_assert" ass .. [39;49m[32;49m
0x7fb6e79442a8    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fb6e79442ac    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e79442b0    4981c628000000          add r14, 0x28                                          [39;49m
[34;49m ..                     : goedel4 (| n )  [39;49m[33;40mnl[39;49m[34;49m "goedel4 :: " ps nl n 9 = {  (| n ) n @ p n 2 = n @ dup p 2 "goedel4_1_assert" assert { (| n ) n @ .. [39;49m[32;49m
0x7fb6e79442b7    49b8e08080892d560000    mov r8, 0x562d898080e0                                 [39;49m[32;49m
0x7fb6e79442c1    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e79442cb    49ffd1                  call r9                    	< Io.[34;49mnewline[39;49m : 0x0000562d898080e0[32;49m >[39;49m[39;49m
[34;49m ..                  : goedel4 (| n )  nl [39;49m[33;40m"[39;49m[34;49mgoedel4 :: " ps nl n 9 = {  (| n ) n @ p n 2 = n @ dup p 2 "goedel4_1_assert" assert { (| n ) n @ p  .. [39;49m[32;49m
0x7fb6e79442ce    48b8bb3541e7b67f0000    mov rax, 0x7fb6e74135bb    	[32;49m< string : '[39;49m[39;49mgoedel4 :: [39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fb6e79442d8    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e79442dc    498906                  mov [r14], rax                                         [39;49m
[34;49m ..    : goedel4 (| n )  nl "goedel4 :: " [39;49m[33;40mps[39;49m[34;49m nl n 9 = {  (| n ) n @ p n 2 = n @ dup p 2 "goedel4_1_assert" assert { (| n ) n @ p n 3 = n @ 4 +  .. [39;49m[32;49m
0x7fb6e79442df    49b97da393e7b67f0000    mov r9, 0x7fb6e793a37d                                 [39;49m[32;49m
0x7fb6e79442e9    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fb6e793a37d[32;49m >[39;49m[39;49m
[34;49m .. : goedel4 (| n )  nl "goedel4 :: " ps [39;49m[33;40mnl[39;49m[34;49m n 9 = {  (| n ) n @ p n 2 = n @ dup p 2 "goedel4_1_assert" assert { (| n ) n @ p n 3 = n @ 4 + dup .. [39;49m[32;49m
0x7fb6e79442ec    49b8e08080892d560000    mov r8, 0x562d898080e0                                 [39;49m[32;49m
0x7fb6e79442f6    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e7944300    49ffd1                  call r9                    	< Io.[34;49mnewline[39;49m : 0x0000562d898080e0[32;49m >[39;49m[39;49m
[34;49m : goedel4 (| n )  nl "goedel4 :: " ps nl [39;49m[33;40mn[39;49m[34;49m 9 = {  (| n ) n @ p n 2 = n @ dup p 2 "goedel4_1_assert" assert { (| n ) n @ p n 3 = n @ 4 + dup p  .. [39;49m[32;49m
0x7fb6e7944303    498d4708                lea rax, [r15+0x8]                                     [39;49m
[34;49m .. del4 (| n )  nl "goedel4 :: " ps nl n [39;49m[33;40m9[39;49m[34;49m = {  (| n ) n @ p n 2 = n @ dup p 2 "goedel4_1_assert" assert { (| n ) n @ p n 3 = n @ 4 + dup p 7  .. [39;49m[32;49m
0x7fb6e7944307    48c7c109000000          mov rcx, 0x9                                           [39;49m
[34;49m .. l4 (| n )  nl "goedel4 :: " ps nl n 9 [39;49m[33;40m=[39;49m[34;49m {  (| n ) n @ p n 2 = n @ dup p 2 "goedel4_1_assert" assert { (| n ) n @ p n 3 = n @ 4 + dup p 7 "g .. [39;49m[32;49m
0x7fb6e794430e    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. l "goedel4 :: " ps nl n 9 = {  (| n ) [39;49m[33;40mn[39;49m[34;49m @ p n 2 = n @ dup p 2 "goedel4_1_assert" assert { (| n ) n @ p n 3 = n @ 4 + dup p 7 "goedel4_2_ass .. [39;49m[32;49m
0x7fb6e7944311    498b4710                mov rax, [r15+0x10]                                    [39;49m[32;49m
0x7fb6e7944315    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7944319    498906                  mov [r14], rax                                         [39;49m
[34;49m .. oedel4 :: " ps nl n 9 = {  (| n ) n @ [39;49m[33;40mp[39;49m[34;49m n 2 = n @ dup p 2 "goedel4_1_assert" assert { (| n ) n @ p n 3 = n @ 4 + dup p 7 "goedel4_2_assert" .. [39;49m[32;49m
0x7fb6e794431c    49b9d9a593e7b67f0000    mov r9, 0x7fb6e793a5d9                                 [39;49m[32;49m
0x7fb6e7944326    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fb6e793a5d9[32;49m >[39;49m[39;49m
[34;49m .. del4 :: " ps nl n 9 = {  (| n ) n @ p [39;49m[33;40mn[39;49m[34;49m 2 = n @ dup p 2 "goedel4_1_assert" assert { (| n ) n @ p n 3 = n @ 4 + dup p 7 "goedel4_2_assert" a .. [39;49m[32;49m
0x7fb6e7944329    498d4710                lea rax, [r15+0x10]                                    [39;49m
[34;49m .. l4 :: " ps nl n 9 = {  (| n ) n @ p n [39;49m[33;40m2[39;49m[34;49m = n @ dup p 2 "goedel4_1_assert" assert { (| n ) n @ p n 3 = n @ 4 + dup p 7 "goedel4_2_assert" ass .. [39;49m[32;49m
0x7fb6e794432d    48c7c102000000          mov rcx, 0x2                                           [39;49m
[34;49m ..  :: " ps nl n 9 = {  (| n ) n @ p n 2 [39;49m[33;40m=[39;49m[34;49m n @ dup p 2 "goedel4_1_assert" assert { (| n ) n @ p n 3 = n @ 4 + dup p 7 "goedel4_2_assert" asser .. [39;49m[32;49m
0x7fb6e7944334    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. : " ps nl n 9 = {  (| n ) n @ p n 2 = [39;49m[33;40mn[39;49m[34;49m @ dup p 2 "goedel4_1_assert" assert { (| n ) n @ p n 3 = n @ 4 + dup p 7 "goedel4_2_assert" assert  .. [39;49m[32;49m
0x7fb6e7944337    498b4710                mov rax, [r15+0x10]                                    [39;49m[32;49m
0x7fb6e794433b    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fb6e794433f    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ps nl n 9 = {  (| n ) n @ p n 2 = n @ [39;49m[33;40mdup[39;49m[34;49m p 2 "goedel4_1_assert" assert { (| n ) n @ p n 3 = n @ 4 + dup p 7 "goedel4_2_assert" assert } ix .. [39;49m[32;49m
0x7fb6e7944342    498946f8                mov [r14-0x8], rax                                     [39;49m
[34;49m .. l n 9 = {  (| n ) n @ p n 2 = n @ dup [39;49m[33;40mp[39;49m[34;49m 2 "goedel4_1_assert" assert { (| n ) n @ p n 3 = n @ 4 + dup p 7 "goedel4_2_assert" assert } ix n @ .. [39;49m[32;49m
0x7fb6e7944346    49b9d9a593e7b67f0000    mov r9, 0x7fb6e793a5d9                                 [39;49m[32;49m
0x7fb6e7944350    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fb6e793a5d9[32;49m >[39;49m[39;49m
[34;49m .. n 9 = {  (| n ) n @ p n 2 = n @ dup p [39;49m[33;40m2[39;49m[34;49m "goedel4_1_assert" assert { (| n ) n @ p n 3 = n @ 4 + dup p 7 "goedel4_2_assert" assert } ix n @ 6 .. [39;49m[32;49m
0x7fb6e7944353    48c7c002000000          mov rax, 0x2                                           [39;49m[32;49m
0x7fb6e794435a    4983c608                add r14, 0x8                                           [39;49m
[34;49m .. 4 + dup p 7 "goedel4_2_assert" assert [39;49m[33;40m}[39;49m[34;49m ix n @ 6 + 8 _assert  } ix { (| n )  n @ p  n 3 = n dup @ 4 + dup dup 7 "goedel4_3_assert" assert p .. [39;49m[32;49m
0x7fb6e794435e    498906                  mov [r14], rax                                         [39;49m
[34;49m .. 9 = {  (| n ) n @ p n 2 = n @ dup p 2 [39;49m[33;40m"[39;49m[34;49mgoedel4_1_assert" assert { (| n ) n @ p n 3 = n @ 4 + dup p 7 "goedel4_2_assert" assert } ix n @ 6 + .. [39;49m[32;49m
0x7fb6e7944361    48b8f93541e7b67f0000    mov rax, 0x7fb6e74135f9    	[32;49m< string : '[39;49m[39;49mgoedel4_1_assert[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fb6e794436b    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e794436f    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e7944372    49b92bbb93e7b67f0000    mov r9, 0x7fb6e793bb2b                                 [39;49m[32;49m
0x7fb6e794437c    49ffd1                  call r9                    	< System.[34;49m_assert1[39;49m : 0x00007fb6e793bb2b[32;49m >[39;49m[39;49m
[34;49m ..  2 "goedel4_1_assert" assert { (| n ) [39;49m[33;40mn[39;49m[34;49m @ p n 3 = n @ 4 + dup p 7 "goedel4_2_assert" assert } ix n @ 6 + 8 _assert  } ix { (| n )  n @ p  n .. [39;49m[32;49m
0x7fb6e794437f    498b4718                mov rax, [r15+0x18]                                    [39;49m[32;49m
0x7fb6e7944383    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7944387    498906                  mov [r14], rax                                         [39;49m
[34;49m .. goedel4_1_assert" assert { (| n ) n @ [39;49m[33;40mp[39;49m[34;49m n 3 = n @ 4 + dup p 7 "goedel4_2_assert" assert } ix n @ 6 + 8 _assert  } ix { (| n )  n @ p  n 3 = .. [39;49m[32;49m
0x7fb6e794438a    49b9d9a593e7b67f0000    mov r9, 0x7fb6e793a5d9                                 [39;49m[32;49m
0x7fb6e7944394    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fb6e793a5d9[32;49m >[39;49m[39;49m
[34;49m .. edel4_1_assert" assert { (| n ) n @ p [39;49m[33;40mn[39;49m[34;49m 3 = n @ 4 + dup p 7 "goedel4_2_assert" assert } ix n @ 6 + 8 _assert  } ix { (| n )  n @ p  n 3 = n .. [39;49m[32;49m
0x7fb6e7944397    498d4718                lea rax, [r15+0x18]                                    [39;49m
[34;49m .. el4_1_assert" assert { (| n ) n @ p n [39;49m[33;40m3[39;49m[34;49m = n @ 4 + dup p 7 "goedel4_2_assert" assert } ix n @ 6 + 8 _assert  } ix { (| n )  n @ p  n 3 = n d .. [39;49m[32;49m
0x7fb6e794439b    48c7c103000000          mov rcx, 0x3                                           [39;49m
[34;49m .. 4_1_assert" assert { (| n ) n @ p n 3 [39;49m[33;40m=[39;49m[34;49m n @ 4 + dup p 7 "goedel4_2_assert" assert } ix n @ 6 + 8 _assert  } ix { (| n )  n @ p  n 3 = n dup .. [39;49m[32;49m
0x7fb6e79443a2    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. 1_assert" assert { (| n ) n @ p n 3 = [39;49m[33;40mn[39;49m[34;49m @ 4 + dup p 7 "goedel4_2_assert" assert } ix n @ 6 + 8 _assert  } ix { (| n )  n @ p  n 3 = n dup @ .. [39;49m[32;49m
0x7fb6e79443a5    498b4718                mov rax, [r15+0x18]                                    [39;49m
[34;49m .. sert" assert { (| n ) n @ p n 3 = n @ [39;49m[33;40m4[39;49m[34;49m + dup p 7 "goedel4_2_assert" assert } ix n @ 6 + 8 _assert  } ix { (| n )  n @ p  n 3 = n dup @ 4 + .. [39;49m[32;49m
0x7fb6e79443a9    48c7c104000000          mov rcx, 0x4                                           [39;49m
[34;49m .. rt" assert { (| n ) n @ p n 3 = n @ 4 [39;49m[33;40m+[39;49m[34;49m dup p 7 "goedel4_2_assert" assert } ix n @ 6 + 8 _assert  } ix { (| n )  n @ p  n 3 = n dup @ 4 + d .. [39;49m[32;49m
0x7fb6e79443b0    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fb6e79443b3    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fb6e79443b7    498906                  mov [r14], rax                                         [39;49m
[34;49m .. " assert { (| n ) n @ p n 3 = n @ 4 + [39;49m[33;40mdup[39;49m[34;49m p 7 "goedel4_2_assert" assert } ix n @ 6 + 8 _assert  } ix { (| n )  n @ p  n 3 = n dup @ 4 + dup .. [39;49m[32;49m
0x7fb6e79443ba    498946f8                mov [r14-0x8], rax                                     [39;49m
[34;49m .. sert { (| n ) n @ p n 3 = n @ 4 + dup [39;49m[33;40mp[39;49m[34;49m 7 "goedel4_2_assert" assert } ix n @ 6 + 8 _assert  } ix { (| n )  n @ p  n 3 = n dup @ 4 + dup dup .. [39;49m[32;49m
0x7fb6e79443be    49b9d9a593e7b67f0000    mov r9, 0x7fb6e793a5d9                                 [39;49m[32;49m
0x7fb6e79443c8    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fb6e793a5d9[32;49m >[39;49m[39;49m
[34;49m .. rt { (| n ) n @ p n 3 = n @ 4 + dup p [39;49m[33;40m7[39;49m[34;49m "goedel4_2_assert" assert } ix n @ 6 + 8 _assert  } ix { (| n )  n @ p  n 3 = n dup @ 4 + dup dup 7 .. [39;49m[32;49m
0x7fb6e79443cb    48c7c007000000          mov rax, 0x7                                           [39;49m[32;49m
0x7fb6e79443d2    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e79443d6    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  { (| n ) n @ p n 3 = n @ 4 + dup p 7 [39;49m[33;40m"[39;49m[34;49mgoedel4_2_assert" assert } ix n @ 6 + 8 _assert  } ix { (| n )  n @ p  n 3 = n dup @ 4 + dup dup 7 " .. [39;49m[32;49m
0x7fb6e79443d9    48b8413641e7b67f0000    mov rax, 0x7fb6e7413641    	[32;49m< string : '[39;49m[39;49mgoedel4_2_assert[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fb6e79443e3    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e79443e7    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e79443ea    49b92bbb93e7b67f0000    mov r9, 0x7fb6e793bb2b                                 [39;49m[32;49m
0x7fb6e79443f4    49ffd1                  call r9                    	< System.[34;49m_assert1[39;49m : 0x00007fb6e793bb2b[32;49m >[39;49m[39;49m
[34;49m .. up p 7 "goedel4_2_assert" assert } ix [39;49m[33;40mn[39;49m[34;49m @ 6 + 8 _assert  } ix { (| n )  n @ p  n 3 = n dup @ 4 + dup dup 7 "goedel4_3_assert" assert p = n  .. [39;49m[32;49m
0x7fb6e79443f7    498b4710                mov rax, [r15+0x10]                                    [39;49m
[34;49m ..  7 "goedel4_2_assert" assert } ix n @ [39;49m[33;40m6[39;49m[34;49m + 8 _assert  } ix { (| n )  n @ p  n 3 = n dup @ 4 + dup dup 7 "goedel4_3_assert" assert p = n @ p  .. [39;49m[32;49m
0x7fb6e79443fb    48c7c106000000          mov rcx, 0x6                                           [39;49m
[34;49m ..  "goedel4_2_assert" assert } ix n @ 6 [39;49m[33;40m+[39;49m[34;49m 8 _assert  } ix { (| n )  n @ p  n 3 = n dup @ 4 + dup dup 7 "goedel4_3_assert" assert p = n @ p n  .. [39;49m[32;49m
0x7fb6e7944402    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fb6e7944405    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7944409    498906                  mov [r14], rax                                         [39;49m
[34;49m .. goedel4_2_assert" assert } ix n @ 6 + [39;49m[33;40m8[39;49m[34;49m _assert  } ix { (| n )  n @ p  n 3 = n dup @ 4 + dup dup 7 "goedel4_3_assert" assert p = n @ p n @  .. [39;49m[32;49m
0x7fb6e794440c    48c7c008000000          mov rax, 0x8                                           [39;49m[32;49m
0x7fb6e7944413    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7944417    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e794441a    49b9dfbc93e7b67f0000    mov r9, 0x7fb6e793bcdf                                 [39;49m[32;49m
0x7fb6e7944424    49ffd1                  call r9                    	< System.[34;49m_assert0[39;49m : 0x00007fb6e793bcdf[32;49m >[39;49m[39;49m
[34;49m ..  ix n @ 6 + 8 _assert  } ix { (| n )  [39;49m[33;40mn[39;49m[34;49m @ p  n 3 = n dup @ 4 + dup dup 7 "goedel4_3_assert" assert p = n @ p n @ 7 "goedel4_4_assert" asser .. [39;49m[32;49m
0x7fb6e7944427    498b4720                mov rax, [r15+0x20]                                    [39;49m[32;49m
0x7fb6e794442b    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e794442f    498906                  mov [r14], rax                                         [39;49m
[34;49m .. n @ 6 + 8 _assert  } ix { (| n )  n @ [39;49m[33;40mp[39;49m[34;49m  n 3 = n dup @ 4 + dup dup 7 "goedel4_3_assert" assert p = n @ p n @ 7 "goedel4_4_assert" assert }  .. [39;49m[32;49m
0x7fb6e7944432    49b9d9a593e7b67f0000    mov r9, 0x7fb6e793a5d9                                 [39;49m[32;49m
0x7fb6e794443c    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fb6e793a5d9[32;49m >[39;49m[39;49m
[34;49m ..  6 + 8 _assert  } ix { (| n )  n @ p  [39;49m[33;40mn[39;49m[34;49m 3 = n dup @ 4 + dup dup 7 "goedel4_3_assert" assert p = n @ p n @ 7 "goedel4_4_assert" assert } ix  .. [39;49m[32;49m
0x7fb6e794443f    498d4720                lea rax, [r15+0x20]                                    [39;49m
[34;49m ..  + 8 _assert  } ix { (| n )  n @ p  n [39;49m[33;40m3[39;49m[34;49m = n dup @ 4 + dup dup 7 "goedel4_3_assert" assert p = n @ p n @ 7 "goedel4_4_assert" assert } ix  n .. [39;49m[32;49m
0x7fb6e7944443    48c7c103000000          mov rcx, 0x3                                           [39;49m
[34;49m ..  8 _assert  } ix { (| n )  n @ p  n 3 [39;49m[33;40m=[39;49m[34;49m n dup @ 4 + dup dup 7 "goedel4_3_assert" assert p = n @ p n @ 7 "goedel4_4_assert" assert } ix  n @ .. [39;49m[32;49m
0x7fb6e794444a    488908                  mov [rax], rcx                                         [39;49m
[34;49m ..  _assert  } ix { (| n )  n @ p  n 3 = [39;49m[33;40mn[39;49m[34;49m dup @ 4 + dup dup 7 "goedel4_3_assert" assert p = n @ p n @ 7 "goedel4_4_assert" assert } ix  n @ d .. [39;49m[32;49m
0x7fb6e794444d    498d4720                lea rax, [r15+0x20]                                    [39;49m[32;49m
0x7fb6e7944451    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fb6e7944455    498906                  mov [r14], rax                                         [39;49m
[34;49m .. assert  } ix { (| n )  n @ p  n 3 = n [39;49m[33;40mdup[39;49m[34;49m @ 4 + dup dup 7 "goedel4_3_assert" assert p = n @ p n @ 7 "goedel4_4_assert" assert } ix  n @ dup .. [39;49m[32;49m
0x7fb6e7944458    498946f8                mov [r14-0x8], rax                                     [39;49m
[34;49m .. rt  } ix { (| n )  n @ p  n 3 = n dup [39;49m[33;40m@[39;49m[34;49m 4 + dup dup 7 "goedel4_3_assert" assert p = n @ p n @ 7 "goedel4_4_assert" assert } ix  n @ dup p r .. [39;49m[32;49m
0x7fb6e794445c    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fb6e794445f    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fb6e7944462    498906                  mov [r14], rax                                         [39;49m
[34;49m ..   } ix { (| n )  n @ p  n 3 = n dup @ [39;49m[33;40m4[39;49m[34;49m + dup dup 7 "goedel4_3_assert" assert p = n @ p n @ 7 "goedel4_4_assert" assert } ix  n @ dup p ret .. [39;49m[32;49m
0x7fb6e7944465    48c7c004000000          mov rax, 0x4                                           [39;49m[32;49m
0x7fb6e794446c    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fb6e794446f    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fb6e7944472    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m .. } ix { (| n )  n @ p  n 3 = n dup @ 4 [39;49m[33;40m+[39;49m[34;49m dup dup 7 "goedel4_3_assert" assert p = n @ p n @ 7 "goedel4_4_assert" assert } ix  n @ dup p retur .. [39;49m[32;49m
0x7fb6e7944476    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fb6e7944479    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fb6e794447d    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ix { (| n )  n @ p  n 3 = n dup @ 4 + [39;49m[33;40mdup[39;49m[34;49m dup 7 "goedel4_3_assert" assert p = n @ p n @ 7 "goedel4_4_assert" assert } ix  n @ dup p return  .. [39;49m[32;49m
0x7fb6e7944480    498946f8                mov [r14-0x8], rax                                     [39;49m
[34;49m ..  (| n )  n @ p  n 3 = n dup @ 4 + dup [39;49m[33;40mdup[39;49m[34;49m 7 "goedel4_3_assert" assert p = n @ p n @ 7 "goedel4_4_assert" assert } ix  n @ dup p return tos  .. [39;49m[32;49m
0x7fb6e7944484    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fb6e7944487    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e794448b    498906                  mov [r14], rax                                         [39;49m
[34;49m .. n )  n @ p  n 3 = n dup @ 4 + dup dup [39;49m[33;40m7[39;49m[34;49m "goedel4_3_assert" assert p = n @ p n @ 7 "goedel4_4_assert" assert } ix  n @ dup p return tos ;  .. [39;49m[32;49m
0x7fb6e794448e    48c7c007000000          mov rax, 0x7                                           [39;49m[32;49m
0x7fb6e7944495    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7944499    498906                  mov [r14], rax                                         [39;49m
[34;49m .. )  n @ p  n 3 = n dup @ 4 + dup dup 7 [39;49m[33;40m"[39;49m[34;49mgoedel4_3_assert" assert p = n @ p n @ 7 "goedel4_4_assert" assert } ix  n @ dup p return tos ;  .. [39;49m[32;49m
0x7fb6e794449c    48b88d3641e7b67f0000    mov rax, 0x7fb6e741368d    	[32;49m< string : '[39;49m[39;49mgoedel4_3_assert[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fb6e79444a6    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e79444aa    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e79444ad    49b92bbb93e7b67f0000    mov r9, 0x7fb6e793bb2b                                 [39;49m[32;49m
0x7fb6e79444b7    49ffd1                  call r9                    	< System.[34;49m_assert1[39;49m : 0x00007fb6e793bb2b[32;49m >[39;49m[39;49m
[34;49m .. + dup dup 7 "goedel4_3_assert" assert [39;49m[33;40mp[39;49m[34;49m = n @ p n @ 7 "goedel4_4_assert" assert } ix  n @ dup p return tos ;  .. [39;49m[32;49m
0x7fb6e79444ba    49b9d9a593e7b67f0000    mov r9, 0x7fb6e793a5d9                                 [39;49m[32;49m
0x7fb6e79444c4    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fb6e793a5d9[32;49m >[39;49m[39;49m[32;49m
0x7fb6e79444c7    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fb6e79444ca    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fb6e79444ce    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m .. dup dup 7 "goedel4_3_assert" assert p [39;49m[33;40m=[39;49m[34;49m n @ p n @ 7 "goedel4_4_assert" assert } ix  n @ dup p return tos ;  .. [39;49m[32;49m
0x7fb6e79444d2    8808                    mov [rax], cl                                          [39;49m
[34;49m .. p dup 7 "goedel4_3_assert" assert p = [39;49m[33;40mn[39;49m[34;49m @ p n @ 7 "goedel4_4_assert" assert } ix  n @ dup p return tos ;  .. [39;49m[32;49m
0x7fb6e79444d4    498b4720                mov rax, [r15+0x20]                                    [39;49m[32;49m
0x7fb6e79444d8    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e79444dc    498906                  mov [r14], rax                                         [39;49m
[34;49m .. p 7 "goedel4_3_assert" assert p = n @ [39;49m[33;40mp[39;49m[34;49m n @ 7 "goedel4_4_assert" assert } ix  n @ dup p return tos ;  .. [39;49m[32;49m
0x7fb6e79444df    49b9d9a593e7b67f0000    mov r9, 0x7fb6e793a5d9                                 [39;49m[32;49m
0x7fb6e79444e9    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fb6e793a5d9[32;49m >[39;49m[39;49m
[34;49m .. 7 "goedel4_3_assert" assert p = n @ p [39;49m[33;40mn[39;49m[34;49m @ 7 "goedel4_4_assert" assert } ix  n @ dup p return tos ;  .. [39;49m[32;49m
0x7fb6e79444ec    498b4720                mov rax, [r15+0x20]                                    [39;49m[32;49m
0x7fb6e79444f0    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e79444f4    498906                  mov [r14], rax                                         [39;49m
[34;49m .. oedel4_3_assert" assert p = n @ p n @ [39;49m[33;40m7[39;49m[34;49m "goedel4_4_assert" assert } ix  n @ dup p return tos ;  .. [39;49m[32;49m
0x7fb6e79444f7    48c7c007000000          mov rax, 0x7                                           [39;49m[32;49m
0x7fb6e79444fe    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7944502    498906                  mov [r14], rax                                         [39;49m
[34;49m .. del4_3_assert" assert p = n @ p n @ 7 [39;49m[33;40m"[39;49m[34;49mgoedel4_4_assert" assert } ix  n @ dup p return tos ;  .. [39;49m[32;49m
0x7fb6e7944505    48b8c63641e7b67f0000    mov rax, 0x7fb6e74136c6    	[32;49m< string : '[39;49m[39;49mgoedel4_4_assert[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fb6e794450f    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7944513    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e7944516    49b92bbb93e7b67f0000    mov r9, 0x7fb6e793bb2b                                 [39;49m[32;49m
0x7fb6e7944520    49ffd1                  call r9                    	< System.[34;49m_assert1[39;49m : 0x00007fb6e793bb2b[32;49m >[39;49m[39;49m
[34;49m .. n @ 7 "goedel4_4_assert" assert } ix  [39;49m[33;40mn[39;49m[34;49m @ dup p return tos ;  .. [39;49m[32;49m
0x7fb6e7944523    498b4708                mov rax, [r15+0x8]                                     [39;49m[32;49m
0x7fb6e7944527    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fb6e794452b    498906                  mov [r14], rax                                         [39;49m
[34;49m .. 7 "goedel4_4_assert" assert } ix  n @ [39;49m[33;40mdup[39;49m[34;49m p return tos ;  .. [39;49m[32;49m
0x7fb6e794452e    498946f8                mov [r14-0x8], rax                                     [39;49m
[34;49m .. oedel4_4_assert" assert } ix  n @ dup [39;49m[33;40mp[39;49m[34;49m return tos ;  .. [39;49m[32;49m
0x7fb6e7944532    49b9d9a593e7b67f0000    mov r9, 0x7fb6e793a5d9                                 [39;49m[32;49m
0x7fb6e794453c    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fb6e793a5d9[32;49m >[39;49m[39;49m
[34;49m .. del4_4_assert" assert } ix  n @ dup p [39;49m[33;40mreturn[39;49m[34;49m tos ;  .. [39;49m[32;49m
0x7fb6e794453f    498b06                  mov rax, [r14]                                         [39;49m
[34;49m .. rt" assert } ix  n @ dup p return tos [39;49m[33;40m;[39;49m[34;49m  .. [39;49m[32;49m
0x7fb6e7944542    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e7944546    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e794454a    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e794454e    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e7944551    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'goedel4' :: codeSize = 681
Word : 0x00007fb6e61368e8 :: Compiled at : 0x00007fb6e79442a8
 =============================
::> 'wdiss' was called at namespaces/test/localsTest.csl 242.21 <::

 goedel4 :: 
 140423520807144 2 goedel4_1_assert  : ok

 140423549762152 7 goedel4_2_assert  : ok

 140423544778010 goedel4_3_assert  : ok

 7 7 goedel4_4_assert  : ok

 9 goedel4_0_assert  : ok

 
goedel4 :: output should have read : 
'junk' 2 'junk' 7 'junk' 7 7 9
 goedel5 :: 
 0 2 goedel5_1_assert  : ok

 140423544779669 7 goedel5_2_assert  : ok

 goedel5_3_assert  : ok

 7 7 goedel5_4_assert  : ok

 9 goedel5_0_assert  : ok

 
goedel5 :: output should read : junk' 2 'junk' 7 7 9
 goedel6 :: 
 0 2 goedel6_1_assert  : ok

 140423544779669 7 goedel6_2_assert  : ok

 goedel6_3_assert  : ok

 7 7 goedel6_4_assert  : ok

 9 goedel6_0_assert  : ok

 
goedel6 :: goedel6 output should read : 
'junk' 2 'junk' 7 7 'junk' 9
 goedel7 :: 

 goedel7 :: 
 0 2 goedel7_1_assert  : ok

 140423544779669 7 goedel7_2_assert  : ok

 18 goedel7_0_assert  : ok

 
goedel7 :: goedel7 output should read : 
'junk' 2 'junk' 7 18
 =============================
Lexer.[34;49mofile[39;49m <:> csl compiled word, prefix
SourceCode for Lexer.[34;49mofile[39;49m :> 
[34;49m: ofile ( name | file input result ) input 0 = "open/read/print :: " ps name @ ps nl file name @ fopen = nl { result file @ input 1 fread = input @ emit } { result @ 1 == } doWhile file @ fclose ; [39;49m
Source code file location of [34;49mofile[39;49m : "namespaces/test/file.csl" : 4.2 :: we are now at : namespaces/test/file.csl : 13.19
Compiled with : optimizeOn, inlineOn, Jcc8 on
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xe7944bdf -- code size = 368 bytes
TypeSignature : 
 -----------------------------
Word :: Lexer.[34;49mofile[39;49m : definition = 0x00007fb6e7944bdf : disassembly at namespaces/test/file.csl : 13.19 :
[34;49m ..                                     : [39;49m[33;40mofile[39;49m[34;49m ( name | file input result ) input 0 = "open/read/print :: " ps name @ ps nl file name @ fopen  .. [39;49m[32;49m
0x7fb6e7944bdf    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fb6e7944be3    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e7944be7    4981c620000000          add r14, 0x20                                          [39;49m
[34;49m ..  : ofile ( name | file input result ) [39;49m[33;40minput[39;49m[34;49m 0 = "open/read/print :: " ps name @ ps nl file name @ fopen = nl { result file @ input 1 fread  .. [39;49m[32;49m
0x7fb6e7944bee    498d4710                lea rax, [r15+0x10]                                    [39;49m
[34;49m .. le ( name | file input result ) input [39;49m[33;40m0[39;49m[34;49m = "open/read/print :: " ps name @ ps nl file name @ fopen = nl { result file @ input 1 fread = inpu .. [39;49m[32;49m
0x7fb6e7944bf2    48c7c100000000          mov rcx, 0x0                                           [39;49m
[34;49m ..  ( name | file input result ) input 0 [39;49m[33;40m=[39;49m[34;49m "open/read/print :: " ps name @ ps nl file name @ fopen = nl { result file @ input 1 fread = input  .. [39;49m[32;49m
0x7fb6e7944bf9    488908                  mov [rax], rcx                                         [39;49m
[34;49m ..  name | file input result ) input 0 = [39;49m[33;40m"[39;49m[34;49mopen/read/print :: " ps name @ ps nl file name @ fopen = nl { result file @ input 1 fread = input @  .. [39;49m[32;49m
0x7fb6e7944bfc    48b8f04341e7b67f0000    mov rax, 0x7fb6e74143f0    	[32;49m< string : '[39;49m[39;49mopen/read/print :: [39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fb6e7944c06    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7944c0a    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ult ) input 0 = "open/read/print :: " [39;49m[33;40mps[39;49m[34;49m name @ ps nl file name @ fopen = nl { result file @ input 1 fread = input @ emit } { result @ 1 == .. [39;49m[32;49m
0x7fb6e7944c0d    49b97da393e7b67f0000    mov r9, 0x7fb6e793a37d                                 [39;49m[32;49m
0x7fb6e7944c17    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fb6e793a37d[32;49m >[39;49m[39;49m
[34;49m ..  ) input 0 = "open/read/print :: " ps [39;49m[33;40mname[39;49m[34;49m @ ps nl file name @ fopen = nl { result file @ input 1 fread = input @ emit } { result @ 1 == }  .. [39;49m[32;49m
0x7fb6e7944c1a    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e7944c1e    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7944c22    498906                  mov [r14], rax                                         [39;49m
[34;49m .. t 0 = "open/read/print :: " ps name @ [39;49m[33;40mps[39;49m[34;49m nl file name @ fopen = nl { result file @ input 1 fread = input @ emit } { result @ 1 == } doWhile .. [39;49m[32;49m
0x7fb6e7944c25    49b97da393e7b67f0000    mov r9, 0x7fb6e793a37d                                 [39;49m[32;49m
0x7fb6e7944c2f    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fb6e793a37d[32;49m >[39;49m[39;49m
[34;49m ..  = "open/read/print :: " ps name @ ps [39;49m[33;40mnl[39;49m[34;49m file name @ fopen = nl { result file @ input 1 fread = input @ emit } { result @ 1 == } doWhile  f .. [39;49m[32;49m
0x7fb6e7944c32    49b8e08080892d560000    mov r8, 0x562d898080e0                                 [39;49m[32;49m
0x7fb6e7944c3c    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e7944c46    49ffd1                  call r9                    	< Io.[34;49mnewline[39;49m : 0x0000562d898080e0[32;49m >[39;49m[39;49m
[34;49m .. "open/read/print :: " ps name @ ps nl [39;49m[33;40mfile[39;49m[34;49m name @ fopen = nl { result file @ input 1 fread = input @ emit } { result @ 1 == } doWhile  file .. [39;49m[32;49m
0x7fb6e7944c49    498d4708                lea rax, [r15+0x8]                                     [39;49m[32;49m
0x7fb6e7944c4d    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7944c51    498906                  mov [r14], rax                                         [39;49m
[34;49m .. /read/print :: " ps name @ ps nl file [39;49m[33;40mname[39;49m[34;49m @ fopen = nl { result file @ input 1 fread = input @ emit } { result @ 1 == } doWhile  file @ fc .. [39;49m[32;49m
0x7fb6e7944c54    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e7944c58    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7944c5c    498906                  mov [r14], rax                                         [39;49m
[34;49m .. rint :: " ps name @ ps nl file name @ [39;49m[33;40mfopen[39;49m[34;49m = nl { result file @ input 1 fread = input @ emit } { result @ 1 == } doWhile  file @ fclose ;  .. [39;49m[32;49m
0x7fb6e7944c5f    49b840c480892d560000    mov r8, 0x562d8980c440                                 [39;49m[32;49m
0x7fb6e7944c69    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e7944c73    49ffd1                  call r9                    	< File.[34;49mfopen[39;49m : 0x0000562d8980c440[32;49m >[39;49m[39;49m[32;49m
0x7fb6e7944c76    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fb6e7944c79    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fb6e7944c7d    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m .. : " ps name @ ps nl file name @ fopen [39;49m[33;40m=[39;49m[34;49m nl { result file @ input 1 fread = input @ emit } { result @ 1 == } doWhile  file @ fclose ;  .. [39;49m[32;49m
0x7fb6e7944c81    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. " ps name @ ps nl file name @ fopen = [39;49m[33;40mnl[39;49m[34;49m { result file @ input 1 fread = input @ emit } { result @ 1 == } doWhile  file @ fclose ;  .. [39;49m[32;49m
0x7fb6e7944c84    49b8e08080892d560000    mov r8, 0x562d898080e0                                 [39;49m[32;49m
0x7fb6e7944c8e    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e7944c98    49ffd1                  call r9                    	< Io.[34;49mnewline[39;49m : 0x0000562d898080e0[32;49m >[39;49m[39;49m
[34;49m .. name @ ps nl file name @ fopen = nl { [39;49m[33;40mresult[39;49m[34;49m file @ input 1 fread = input @ emit } { result @ 1 == } doWhile  file @ fclose ;  .. [39;49m[32;49m
0x7fb6e7944c9b    498d4718                lea rax, [r15+0x18]                                    [39;49m[32;49m
0x7fb6e7944c9f    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7944ca3    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ps nl file name @ fopen = nl { result [39;49m[33;40mfile[39;49m[34;49m @ input 1 fread = input @ emit } { result @ 1 == } doWhile  file @ fclose ;  .. [39;49m[32;49m
0x7fb6e7944ca6    498b4708                mov rax, [r15+0x8]                                     [39;49m[32;49m
0x7fb6e7944caa    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7944cae    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ile name @ fopen = nl { result file @ [39;49m[33;40minput[39;49m[34;49m 1 fread = input @ emit } { result @ 1 == } doWhile  file @ fclose ;  .. [39;49m[32;49m
0x7fb6e7944cb1    498d4710                lea rax, [r15+0x10]                                    [39;49m[32;49m
0x7fb6e7944cb5    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7944cb9    498906                  mov [r14], rax                                         [39;49m
[34;49m .. me @ fopen = nl { result file @ input [39;49m[33;40m1[39;49m[34;49m fread = input @ emit } { result @ 1 == } doWhile  file @ fclose ;  .. [39;49m[32;49m
0x7fb6e7944cbc    48c7c001000000          mov rax, 0x1                                           [39;49m[32;49m
0x7fb6e7944cc3    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7944cc7    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  @ fopen = nl { result file @ input 1 [39;49m[33;40mfread[39;49m[34;49m = input @ emit } { result @ 1 == } doWhile  file @ fclose ;  .. [39;49m[32;49m
0x7fb6e7944cca    49b8b0c480892d560000    mov r8, 0x562d8980c4b0                                 [39;49m[32;49m
0x7fb6e7944cd4    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e7944cde    49ffd1                  call r9                    	< File.[34;49mfread[39;49m : 0x0000562d8980c4b0[32;49m >[39;49m[39;49m[32;49m
0x7fb6e7944ce1    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fb6e7944ce4    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fb6e7944ce8    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m .. en = nl { result file @ input 1 fread [39;49m[33;40m=[39;49m[34;49m input @ emit } { result @ 1 == } doWhile  file @ fclose ;  .. [39;49m[32;49m
0x7fb6e7944cec    488908                  mov [rax], rcx                                         [39;49m
[34;49m ..  = nl { result file @ input 1 fread = [39;49m[33;40minput[39;49m[34;49m @ emit } { result @ 1 == } doWhile  file @ fclose ;  .. [39;49m[32;49m
0x7fb6e7944cef    498b4710                mov rax, [r15+0x10]                                    [39;49m[32;49m
0x7fb6e7944cf3    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7944cf7    498906                  mov [r14], rax                                         [39;49m
[34;49m .. result file @ input 1 fread = input @ [39;49m[33;40memit[39;49m[34;49m } { result @ 1 == } doWhile  file @ fclose ;  .. [39;49m[32;49m
0x7fb6e7944cfa    49b8208480892d560000    mov r8, 0x562d89808420                                 [39;49m[32;49m
0x7fb6e7944d04    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e7944d0e    49ffd1                  call r9                    	< Io.[34;49memit[39;49m : 0x0000562d89808420[32;49m >[39;49m[39;49m
[34;49m .. le @ input 1 fread = input @ emit } { [39;49m[33;40mresult[39;49m[34;49m @ 1 == } doWhile  file @ fclose ;  .. [39;49m[32;49m
0x7fb6e7944d11    498b4718                mov rax, [r15+0x18]                                    [39;49m
[34;49m .. 1 fread = input @ emit } { result @ 1 [39;49m[33;40m==[39;49m[34;49m } doWhile  file @ fclose ;  .. [39;49m[32;49m
0x7fb6e7944d15    4883f801                cmp rax, 0x1                                           [39;49m[32;49m
0x7fb6e7944d19    7505                    jnz 0xe7944d20                                         [39;49m[32;49m
0x7fb6e7944d1b    e97bffffff              jmp 0x7fb6e7944c9b         	< Lexer.[34;49mofile[39;49m+188[32;49m >[39;49m[39;49m
[34;49m .. t @ emit } { result @ 1 == } doWhile  [39;49m[33;40mfile[39;49m[34;49m @ fclose ;  .. [39;49m[32;49m
0x7fb6e7944d20    498b4708                mov rax, [r15+0x8]                                     [39;49m[32;49m
0x7fb6e7944d24    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7944d28    498906                  mov [r14], rax                                         [39;49m
[34;49m .. t } { result @ 1 == } doWhile  file @ [39;49m[33;40mfclose[39;49m[34;49m ;  .. [39;49m[32;49m
0x7fb6e7944d2b    49b890c480892d560000    mov r8, 0x562d8980c490                                 [39;49m[32;49m
0x7fb6e7944d35    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e7944d3f    49ffd1                  call r9                    	< File.[34;49mfclose[39;49m : 0x0000562d8980c490[32;49m >[39;49m[39;49m
[34;49m .. esult @ 1 == } doWhile  file @ fclose [39;49m[33;40m;[39;49m[34;49m  .. [39;49m[32;49m
0x7fb6e7944d42    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e7944d46    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e7944d4a    4983ee08                sub r14, 0x8                                           [39;49m[32;49m
0x7fb6e7944d4e    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'ofile' :: codeSize = 367
Word : 0x00007fb6e6153c18 :: Compiled at : 0x00007fb6e7944bdf
 =============================
::> 'wdiss' was called at namespaces/test/file.csl 13.19 <::
 open/read/print ::  namespaces/test/file.csl

5
#if 1 // already added to .init.csl
C Compiler Int Lexer
: ofile ( name | file input result )
    input 0 =
    "open/read/print :: " ps name @ ps nl
    file name @ fopen =
    nl { result file @ input 1 fread = input @ emit } { result @ 1 == } doWhile 
    file @ fclose
; prefix
//pause
#endif 
' ofile find wdiss //pause
ofile ( "namespaces/test/file.csl" )
// pause
: hi 1 2 + p ;
: hey hi hi ;
: heey hey hey ;
heey
2 + 7 assertStkChk // stack checking


 3 3 3 3[34;49m 
dynamic object test
[39;49m object new slot test :   : ok

 object clone test :   : ok

 object clone test2 :   : ok

 object clone test3 :   : ok

 object clone test4 :   : ok

 object clone test5 :   : ok

 object compile test6 :   : ok

 object compile test7 :   : ok

 object compile test8 :   : ok


 =============================
Control.[34;49mabrkcon[39;49m <:> csl compiled word
SourceCode for Control.[34;49mabrkcon[39;49m :> 
[34;49m: abrkcon { { x @ 0 == } { break } { x @ p x dup @ 1 - = continue } ifElse 2 p } loop ; [39;49m
Source code file location of [34;49mabrkcon[39;49m : "namespaces/test/control.csl" : 16.2 :: we are now at : namespaces/test/control.csl : 17.20
Compiled with : optimizeOn, inlineOn, Jcc8 on
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xe7944f41 -- code size = 162 bytes
TypeSignature : 
 -----------------------------
Word :: Control.[34;49mabrkcon[39;49m : definition = 0x00007fb6e7944f41 : disassembly at namespaces/test/control.csl : 17.20 :
[34;49m ..                         : abrkcon { { [39;49m[33;40mx[39;49m[34;49m @ 0 == } { break } { x @ p x dup @ 1 - = continue } ifElse 2 p } loop ;  .. [39;49m[32;49m
0x7fb6e7944f41    48b858e015e6b67f0000    mov rax, 0x7fb6e615e058    	[32;49m< string : '[39;49m[39;49m\n[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fb6e7944f4b    488b00                  mov rax, [rax]                                         [39;49m
[34;49m ..                   : abrkcon { { x @ 0 [39;49m[33;40m==[39;49m[34;49m } { break } { x @ p x dup @ 1 - = continue } ifElse 2 p } loop ;  .. [39;49m[32;49m
0x7fb6e7944f4e    4885c0                  test rax, rax                                          [39;49m[32;49m
0x7fb6e7944f51    750a                    jnz 0xe7944f5d                                         [39;49m
[34;49m ..            : abrkcon { { x @ 0 == } { [39;49m[33;40mbreak[39;49m[34;49m } { x @ p x dup @ 1 - = continue } ifElse 2 p } loop ;  .. [39;49m[32;49m
0x7fb6e7944f53    e98a000000              jmp 0x7fb6e7944fe2         	< Control.[34;49mabrkcon[39;49m+161[32;49m >[39;49m[39;49m
[34;49m ..      : abrkcon { { x @ 0 == } { break [39;49m[33;40m}[39;49m[34;49m { x @ p x dup @ 1 - = continue } ifElse 2 p } loop ;  .. [39;49m[32;49m
0x7fb6e7944f58    e965000000              jmp 0x7fb6e7944fc2         	< Control.[34;49mabrkcon[39;49m+129[32;49m >[39;49m[39;49m
[34;49m ..  : abrkcon { { x @ 0 == } { break } { [39;49m[33;40mx[39;49m[34;49m @ p x dup @ 1 - = continue } ifElse 2 p } loop ;  .. [39;49m[32;49m
0x7fb6e7944f5d    48b858e015e6b67f0000    mov rax, 0x7fb6e615e058    	[32;49m< string : '[39;49m[39;49m\n[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fb6e7944f67    488b00                  mov rax, [rax]                                         [39;49m
[34;49m ..              : abrkcon { { x @ 0 == } [39;49m[33;40m{[39;49m[34;49m break } { x @ p x dup @ 1 - = continue } ifElse 2 p } loop ;  .. [39;49m[32;49m
0x7fb6e7944f6a    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7944f6e    498906                  mov [r14], rax                                         [39;49m
[34;49m : abrkcon { { x @ 0 == } { break } { x @ [39;49m[33;40mp[39;49m[34;49m x dup @ 1 - = continue } ifElse 2 p } loop ;  .. [39;49m[32;49m
0x7fb6e7944f71    49b944a493e7b67f0000    mov r9, 0x7fb6e793a444                                 [39;49m[32;49m
0x7fb6e7944f7b    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fb6e793a444[32;49m >[39;49m[39;49m
[34;49m .. kcon { { x @ 0 == } { break } { x @ p [39;49m[33;40mx[39;49m[34;49m dup @ 1 - = continue } ifElse 2 p } loop ; [39;49m[32;49m
0x7fb6e7944f7e    48b858e015e6b67f0000    mov rax, 0x7fb6e615e058    	[32;49m< string : '[39;49m[39;49m\n[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fb6e7944f88    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fb6e7944f8c    498906                  mov [r14], rax                                         [39;49m
[34;49m .. on { { x @ 0 == } { break } { x @ p x [39;49m[33;40mdup[39;49m[34;49m @ 1 - = continue } ifElse 2 p } loop ; [39;49m[32;49m
0x7fb6e7944f8f    498946f8                mov [r14-0x8], rax                                     [39;49m
[34;49m ..  { x @ 0 == } { break } { x @ p x dup [39;49m[33;40m@[39;49m[34;49m 1 - = continue } ifElse 2 p } loop ; [39;49m[32;49m
0x7fb6e7944f93    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fb6e7944f96    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fb6e7944f99    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  x @ 0 == } { break } { x @ p x dup @ [39;49m[33;40m1[39;49m[34;49m - = continue } ifElse 2 p } loop ; [39;49m[32;49m
0x7fb6e7944f9c    48c7c001000000          mov rax, 0x1                                           [39;49m[32;49m
0x7fb6e7944fa3    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fb6e7944fa6    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fb6e7944fa9    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m ..  @ 0 == } { break } { x @ p x dup @ 1 [39;49m[33;40m-[39;49m[34;49m = continue } ifElse 2 p } loop ; [39;49m[32;49m
0x7fb6e7944fad    482bc1                  sub rax, rcx                                           [39;49m[32;49m
0x7fb6e7944fb0    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fb6e7944fb3    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fb6e7944fb6    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m ..  0 == } { break } { x @ p x dup @ 1 - [39;49m[33;40m=[39;49m[34;49m continue } ifElse 2 p } loop ; [39;49m[32;49m
0x7fb6e7944fba    488908                  mov [rax], rcx                                         [39;49m
[34;49m ..  == } { break } { x @ p x dup @ 1 - = [39;49m[33;40mcontinue[39;49m[34;49m } ifElse 2 p } loop ; [39;49m[32;49m
0x7fb6e7944fbd    e97fffffff              jmp 0x7fb6e7944f41         	< Control.[34;49mabrkcon[39;49m : 0x00007fb6e7944f41[32;49m >[39;49m[39;49m
[34;49m .. x @ p x dup @ 1 - = continue } ifElse [39;49m[33;40m2[39;49m[34;49m p } loop ; [39;49m[32;49m
0x7fb6e7944fc2    48c7c002000000          mov rax, 0x2                                           [39;49m[32;49m
0x7fb6e7944fc9    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7944fcd    498906                  mov [r14], rax                                         [39;49m
[34;49m .. @ p x dup @ 1 - = continue } ifElse 2 [39;49m[33;40mp[39;49m[34;49m } loop ; [39;49m[32;49m
0x7fb6e7944fd0    49b944a493e7b67f0000    mov r9, 0x7fb6e793a444                                 [39;49m[32;49m
0x7fb6e7944fda    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fb6e793a444[32;49m >[39;49m[39;49m
[34;49m .. p x dup @ 1 - = continue } ifElse 2 p [39;49m[33;40m}[39;49m[34;49m loop ; [39;49m[32;49m
0x7fb6e7944fdd    e95fffffff              jmp 0x7fb6e7944f41         	< Control.[34;49mabrkcon[39;49m : 0x00007fb6e7944f41[32;49m >[39;49m[39;49m
[34;49m ..  @ 1 - = continue } ifElse 2 p } loop [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fb6e7944fe2    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'abrkcon' :: codeSize = 161
Word : 0x00007fb6e615e1a0 :: Compiled at : 0x00007fb6e7944f41
 =============================
::> 'wdiss' was called at namespaces/test/control.csl 17.20 <::
 10 9 8 7 6 5 4 3 2 1
 10 9 8 7 6 5 4 3 2 1
 =============================
Control.[34;49mct00[39;49m <:> csl compiled word
SourceCode for Control.[34;49mct00[39;49m :> 
[34;49m: ct00 ( n | j ) { j 1 = } { j @ n @ <= } { j ++ } { n @ p j @ p } for ; [39;49m
Source code file location of [34;49mct00[39;49m : "namespaces/test/control.csl" : 34.2 :: we are now at : namespaces/test/control.csl : 41.17
Compiled with : optimizeOn, inlineOn, Jcc8 on
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xe794515c -- code size = 109 bytes
TypeSignature : 
 -----------------------------
Word :: Control.[34;49mct00[39;49m : definition = 0x00007fb6e794515c : disassembly at namespaces/test/control.csl : 41.17 :
[34;49m ..                                     : [39;49m[33;40mct00[39;49m[34;49m ( n | j )  { j 1 = } { j @ n @ <= } { j ++ } { n @ p j @ p  } for ;  .. [39;49m[32;49m
0x7fb6e794515c    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fb6e7945160    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e7945164    4981c610000000          add r14, 0x10                                          [39;49m
[34;49m ..                   : ct00 ( n | j )  { [39;49m[33;40mj[39;49m[34;49m 1 = } { j @ n @ <= } { j ++ } { n @ p j @ p  } for ;  .. [39;49m[32;49m
0x7fb6e794516b    498d4708                lea rax, [r15+0x8]                                     [39;49m
[34;49m ..                 : ct00 ( n | j )  { j [39;49m[33;40m1[39;49m[34;49m = } { j @ n @ <= } { j ++ } { n @ p j @ p  } for ;  .. [39;49m[32;49m
0x7fb6e794516f    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m ..               : ct00 ( n | j )  { j 1 [39;49m[33;40m=[39;49m[34;49m } { j @ n @ <= } { j ++ } { n @ p j @ p  } for ;  .. [39;49m[32;49m
0x7fb6e7945176    488908                  mov [rax], rcx                                         [39;49m
[34;49m ..         : ct00 ( n | j )  { j 1 = } { [39;49m[33;40mj[39;49m[34;49m @ n @ <= } { j ++ } { n @ p j @ p  } for ;  .. [39;49m[32;49m
0x7fb6e7945179    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m ..     : ct00 ( n | j )  { j 1 = } { j @ [39;49m[33;40mn[39;49m[34;49m @ <= } { j ++ } { n @ p j @ p  } for ;  .. [39;49m[32;49m
0x7fb6e794517d    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m
[34;49m .. : ct00 ( n | j )  { j 1 = } { j @ n @ [39;49m[33;40m<=[39;49m[34;49m } { j ++ } { n @ p j @ p  } for ;  .. [39;49m[32;49m
0x7fb6e7945181    483bc1                  cmp rax, rcx                                           [39;49m[32;49m
0x7fb6e7945184    7f36                    jg 0xe79451bc                                          [39;49m
[34;49m ..   { j 1 = } { j @ n @ <= } { j ++ } { [39;49m[33;40mn[39;49m[34;49m @ p j @ p  } for ; [39;49m[32;49m
0x7fb6e7945186    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e794518a    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e794518e    498906                  mov [r14], rax                                         [39;49m
[34;49m .. j 1 = } { j @ n @ <= } { j ++ } { n @ [39;49m[33;40mp[39;49m[34;49m j @ p  } for ; [39;49m[32;49m
0x7fb6e7945191    49b944a493e7b67f0000    mov r9, 0x7fb6e793a444                                 [39;49m[32;49m
0x7fb6e794519b    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fb6e793a444[32;49m >[39;49m[39;49m
[34;49m .. 1 = } { j @ n @ <= } { j ++ } { n @ p [39;49m[33;40mj[39;49m[34;49m @ p  } for ; [39;49m[32;49m
0x7fb6e794519e    498b4708                mov rax, [r15+0x8]                                     [39;49m[32;49m
0x7fb6e79451a2    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e79451a6    498906                  mov [r14], rax                                         [39;49m
[34;49m .. } { j @ n @ <= } { j ++ } { n @ p j @ [39;49m[33;40mp[39;49m[34;49m  } for ; [39;49m[32;49m
0x7fb6e79451a9    49b944a493e7b67f0000    mov r9, 0x7fb6e793a444                                 [39;49m[32;49m
0x7fb6e79451b3    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fb6e793a444[32;49m >[39;49m[39;49m
[34;49m .. n | j )  { j 1 = } { j @ n @ <= } { j [39;49m[33;40m++[39;49m[34;49m } { n @ p j @ p  } for ; [39;49m[32;49m
0x7fb6e79451b6    49ff4708                inc qword [r15+0x8]                                    [39;49m
[34;49m ..  j )  { j 1 = } { j @ n @ <= } { j ++ [39;49m[33;40m}[39;49m[34;49m { n @ p j @ p  } for ; [39;49m[32;49m
0x7fb6e79451ba    ebbd                    jmp 0x7fb6e7945179         	< Control.[34;49mct00[39;49m+29[32;49m >[39;49m[39;49m
[34;49m ..  @ <= } { j ++ } { n @ p j @ p  } for [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fb6e79451bc    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e79451c0    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e79451c4    4983ee08                sub r14, 0x8                                           [39;49m[32;49m
0x7fb6e79451c8    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'ct00' :: codeSize = 108
Word : 0x00007fb6e61647e8 :: Compiled at : 0x00007fb6e794515c
 =============================
::> 'wdiss' was called at namespaces/test/control.csl 41.17 <::
 17 1 17 2 17 3 17 4 17 5 17 6 17 7 17 8 17 9 17 10 17 11 17 12 17 13 17 14 17 15 17 16 17 17
 =============================
Control.[34;49mct0[39;49m <:> csl compiled word
SourceCode for Control.[34;49mct0[39;49m :> 
[34;49m: ct0 ( n | j ) nl "ct0 : " ps nl { label: test1 "ct0 before goto/label works" ps nl goto: leave } _ { j 1 = } { j @ n @ <= } { j ++ } { n @ p j @ p { n @ j @ == } { nl "testing ct0 : goto/label \'hi\' ->" ps goto: test1 } { "continuing ct0" ps } ifElse } for label: leave "ct0" n @ j @ leaving ; [39;49m
Source code file location of [34;49mct0[39;49m : "namespaces/test/control.csl" : 44.2 :: we are now at : namespaces/test/control.csl : 60.16
Compiled with : optimizeOn, inlineOn, Jcc8 on
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xe79451ce -- code size = 410 bytes
TypeSignature : 
 -----------------------------
Word :: Control.[34;49mct0[39;49m : definition = 0x00007fb6e79451ce : disassembly at namespaces/test/control.csl : 60.16 :
[34;49m ..                                     : [39;49m[33;40mct0[39;49m[34;49m ( n | j )  nl "ct0 : " ps nl {  label: test1  "ct0 before goto/label works" ps nl  goto: leave  } .. [39;49m[32;49m
0x7fb6e79451ce    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fb6e79451d2    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e79451d6    4981c610000000          add r14, 0x10                                          [39;49m
[34;49m ..                      : ct0 ( n | j )  [39;49m[33;40mnl[39;49m[34;49m "ct0 : " ps nl {  label: test1  "ct0 before goto/label works" ps nl  goto: leave  } _ { j 1 = } {  .. [39;49m[32;49m
0x7fb6e79451dd    49b8e08080892d560000    mov r8, 0x562d898080e0                                 [39;49m[32;49m
0x7fb6e79451e7    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e79451f1    49ffd1                  call r9                    	< Io.[34;49mnewline[39;49m : 0x0000562d898080e0[32;49m >[39;49m[39;49m
[34;49m ..                   : ct0 ( n | j )  nl [39;49m[33;40m"[39;49m[34;49mct0 : " ps nl {  label: test1  "ct0 before goto/label works" ps nl  goto: leave  } _ { j 1 = } { j @ .. [39;49m[32;49m
0x7fb6e79451f4    48b8ee4c41e7b67f0000    mov rax, 0x7fb6e7414cee    	[32;49m< string : '[39;49m[39;49mct0 : [39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fb6e79451fe    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7945202    498906                  mov [r14], rax                                         [39;49m
[34;49m ..          : ct0 ( n | j )  nl "ct0 : " [39;49m[33;40mps[39;49m[34;49m nl {  label: test1  "ct0 before goto/label works" ps nl  goto: leave  } _ { j 1 = } { j @ n @ <= } .. [39;49m[32;49m
0x7fb6e7945205    49b97da393e7b67f0000    mov r9, 0x7fb6e793a37d                                 [39;49m[32;49m
0x7fb6e794520f    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fb6e793a37d[32;49m >[39;49m[39;49m
[34;49m ..       : ct0 ( n | j )  nl "ct0 : " ps [39;49m[33;40mnl[39;49m[34;49m {  label: test1  "ct0 before goto/label works" ps nl  goto: leave  } _ { j 1 = } { j @ n @ <= } {  .. [39;49m[32;49m
0x7fb6e7945212    49b8e08080892d560000    mov r8, 0x562d898080e0                                 [39;49m[32;49m
0x7fb6e794521c    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e7945226    49ffd1                  call r9                    	< Io.[34;49mnewline[39;49m : 0x0000562d898080e0[32;49m >[39;49m[39;49m
[34;49m ..    : ct0 ( n | j )  nl "ct0 : " ps nl [39;49m[33;40m{[39;49m[34;49m  label: test1  "ct0 before goto/label works" ps nl  goto: leave  } _ { j 1 = } { j @ n @ <= } { j + .. [39;49m[32;49m
0x7fb6e7945229    e93b000000              jmp 0x7fb6e7945269         	< Control.[34;49mct0[39;49m+155[32;49m >[39;49m[39;49m
[34;49m .. )  nl "ct0 : " ps nl {  label: test1  [39;49m[33;40m"[39;49m[34;49mct0 before goto/label works" ps nl  goto: leave  } _ { j 1 = } { j @ n @ <= } { j ++ } { n @ p j @ p .. [39;49m[32;49m
0x7fb6e794522e    48b82d4d41e7b67f0000    mov rax, 0x7fb6e7414d2d    	[32;49m< string : '[39;49m[39;49mct0 before goto/label works[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fb6e7945238    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e794523c    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  test1  "ct0 before goto/label works" [39;49m[33;40mps[39;49m[34;49m nl  goto: leave  } _ { j 1 = } { j @ n @ <= } { j ++ } { n @ p j @ p  { n @ j @ == } { nl "testing .. [39;49m[32;49m
0x7fb6e794523f    49b97da393e7b67f0000    mov r9, 0x7fb6e793a37d                                 [39;49m[32;49m
0x7fb6e7945249    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fb6e793a37d[32;49m >[39;49m[39;49m
[34;49m .. st1  "ct0 before goto/label works" ps [39;49m[33;40mnl[39;49m[34;49m  goto: leave  } _ { j 1 = } { j @ n @ <= } { j ++ } { n @ p j @ p  { n @ j @ == } { nl "testing ct .. [39;49m[32;49m
0x7fb6e794524c    49b8e08080892d560000    mov r8, 0x562d898080e0                                 [39;49m[32;49m
0x7fb6e7945256    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e7945260    49ffd1                  call r9                    	< Io.[34;49mnewline[39;49m : 0x0000562d898080e0[32;49m >[39;49m[39;49m
[34;49m ..  "ct0 before goto/label works" ps nl  [39;49m[33;40mgoto:[39;49m[34;49m leave  } _ { j 1 = } { j @ n @ <= } { j ++ } { n @ p j @ p  { n @ j @ == } { nl "testing ct0 :  .. [39;49m[32;49m
0x7fb6e7945263    e9bf000000              jmp 0x7fb6e7945327         	< Control.[34;49mct0[39;49m+345[32;49m >[39;49m[39;49m
[34;49m .. goto/label works" ps nl  goto: leave  [39;49m[33;40m}[39;49m[34;49m _ { j 1 = } { j @ n @ <= } { j ++ } { n @ p j @ p  { n @ j @ == } { nl "testing ct0 : goto/label \' .. [39;49m[32;49m
0x7fb6e7945268    c3                      ret                                                    [39;49m
[34;49m .. abel works" ps nl  goto: leave  } _ { [39;49m[33;40mj[39;49m[34;49m 1 = } { j @ n @ <= } { j ++ } { n @ p j @ p  { n @ j @ == } { nl "testing ct0 : goto/label \'hi\' - .. [39;49m[32;49m
0x7fb6e7945269    498d4708                lea rax, [r15+0x8]                                     [39;49m
[34;49m .. el works" ps nl  goto: leave  } _ { j [39;49m[33;40m1[39;49m[34;49m = } { j @ n @ <= } { j ++ } { n @ p j @ p  { n @ j @ == } { nl "testing ct0 : goto/label \'hi\' ->" .. [39;49m[32;49m
0x7fb6e794526d    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m ..  works" ps nl  goto: leave  } _ { j 1 [39;49m[33;40m=[39;49m[34;49m } { j @ n @ <= } { j ++ } { n @ p j @ p  { n @ j @ == } { nl "testing ct0 : goto/label \'hi\' ->" p .. [39;49m[32;49m
0x7fb6e7945274    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. " ps nl  goto: leave  } _ { j 1 = } { [39;49m[33;40mj[39;49m[34;49m @ n @ <= } { j ++ } { n @ p j @ p  { n @ j @ == } { nl "testing ct0 : goto/label \'hi\' ->" ps goto .. [39;49m[32;49m
0x7fb6e7945277    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m ..  nl  goto: leave  } _ { j 1 = } { j @ [39;49m[33;40mn[39;49m[34;49m @ <= } { j ++ } { n @ p j @ p  { n @ j @ == } { nl "testing ct0 : goto/label \'hi\' ->" ps goto: te .. [39;49m[32;49m
0x7fb6e794527b    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m
[34;49m ..  goto: leave  } _ { j 1 = } { j @ n @ [39;49m[33;40m<=[39;49m[34;49m } { j ++ } { n @ p j @ p  { n @ j @ == } { nl "testing ct0 : goto/label \'hi\' ->" ps goto: test1  .. [39;49m[32;49m
0x7fb6e794527f    483bc1                  cmp rax, rcx                                           [39;49m[32;49m
0x7fb6e7945282    7f00                    jg 0xe7945284                                          [39;49m
[34;49m .. _ { j 1 = } { j @ n @ <= } { j ++ } { [39;49m[33;40mn[39;49m[34;49m @ p j @ p  { n @ j @ == } { nl "testing ct0 : goto/label \'hi\' ->" ps goto: test1 } { "continuing  .. [39;49m[32;49m
0x7fb6e7945284    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e7945288    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e794528c    498906                  mov [r14], rax                                         [39;49m
[34;49m .. j 1 = } { j @ n @ <= } { j ++ } { n @ [39;49m[33;40mp[39;49m[34;49m j @ p  { n @ j @ == } { nl "testing ct0 : goto/label \'hi\' ->" ps goto: test1 } { "continuing ct0" .. [39;49m[32;49m
0x7fb6e794528f    49b944a493e7b67f0000    mov r9, 0x7fb6e793a444                                 [39;49m[32;49m
0x7fb6e7945299    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fb6e793a444[32;49m >[39;49m[39;49m
[34;49m .. 1 = } { j @ n @ <= } { j ++ } { n @ p [39;49m[33;40mj[39;49m[34;49m @ p  { n @ j @ == } { nl "testing ct0 : goto/label \'hi\' ->" ps goto: test1 } { "continuing ct0" p .. [39;49m[32;49m
0x7fb6e794529c    498b4708                mov rax, [r15+0x8]                                     [39;49m[32;49m
0x7fb6e79452a0    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e79452a4    498906                  mov [r14], rax                                         [39;49m
[34;49m .. } { j @ n @ <= } { j ++ } { n @ p j @ [39;49m[33;40mp[39;49m[34;49m  { n @ j @ == } { nl "testing ct0 : goto/label \'hi\' ->" ps goto: test1 } { "continuing ct0" ps }  .. [39;49m[32;49m
0x7fb6e79452a7    49b944a493e7b67f0000    mov r9, 0x7fb6e793a444                                 [39;49m[32;49m
0x7fb6e79452b1    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fb6e793a444[32;49m >[39;49m[39;49m
[34;49m ..  @ n @ <= } { j ++ } { n @ p j @ p  { [39;49m[33;40mn[39;49m[34;49m @ j @ == } { nl "testing ct0 : goto/label \'hi\' ->" ps goto: test1 } { "continuing ct0" ps } ifEls .. [39;49m[32;49m
0x7fb6e79452b4    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m ..  @ <= } { j ++ } { n @ p j @ p  { n @ [39;49m[33;40mj[39;49m[34;49m @ == } { nl "testing ct0 : goto/label \'hi\' ->" ps goto: test1 } { "continuing ct0" ps } ifElse }  .. [39;49m[32;49m
0x7fb6e79452b8    498b4f08                mov rcx, [r15+0x8]                                     [39;49m
[34;49m .. = } { j ++ } { n @ p j @ p  { n @ j @ [39;49m[33;40m==[39;49m[34;49m } { nl "testing ct0 : goto/label \'hi\' ->" ps goto: test1 } { "continuing ct0" ps } ifElse } for  .. [39;49m[32;49m
0x7fb6e79452bc    483bc1                  cmp rax, rcx                                           [39;49m[32;49m
0x7fb6e79452bf    753f                    jnz 0xe7945300                                         [39;49m
[34;49m ..  ++ } { n @ p j @ p  { n @ j @ == } { [39;49m[33;40mnl[39;49m[34;49m "testing ct0 : goto/label \'hi\' ->" ps goto: test1 } { "continuing ct0" ps } ifElse } for label:  .. [39;49m[32;49m
0x7fb6e79452c1    49b8e08080892d560000    mov r8, 0x562d898080e0                                 [39;49m[32;49m
0x7fb6e79452cb    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e79452d5    49ffd1                  call r9                    	< Io.[34;49mnewline[39;49m : 0x0000562d898080e0[32;49m >[39;49m[39;49m
[34;49m ..  } { n @ p j @ p  { n @ j @ == } { nl [39;49m[33;40m"[39;49m[34;49mtesting ct0 : goto/label \'hi\' ->" ps goto: test1 } { "continuing ct0" ps } ifElse } for label: lea .. [39;49m[32;49m
0x7fb6e79452d8    48b88c4d41e7b67f0000    mov rax, 0x7fb6e7414d8c    	[32;49m< string : '[39;49m[39;49mtesting ct0 : goto/label 'hi' ->[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fb6e79452e2    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e79452e6    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  "testing ct0 : goto/label \'hi\' ->" [39;49m[33;40mps[39;49m[34;49m goto: test1 } { "continuing ct0" ps } ifElse } for label: leave  "ct0" n @ j @ leaving ;  .. [39;49m[32;49m
0x7fb6e79452e9    49b97da393e7b67f0000    mov r9, 0x7fb6e793a37d                                 [39;49m[32;49m
0x7fb6e79452f3    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fb6e793a37d[32;49m >[39;49m[39;49m
[34;49m .. esting ct0 : goto/label \'hi\' ->" ps [39;49m[33;40mgoto:[39;49m[34;49m test1 } { "continuing ct0" ps } ifElse } for label: leave  "ct0" n @ j @ leaving ;  .. [39;49m[32;49m
0x7fb6e79452f6    e933ffffff              jmp 0x7fb6e794522e         	< Control.[34;49mct0[39;49m+96[32;49m >[39;49m[39;49m
[34;49m ..  goto/label \'hi\' ->" ps goto: test1 [39;49m[33;40m}[39;49m[34;49m { "continuing ct0" ps } ifElse } for label: leave  "ct0" n @ j @ leaving ;  .. [39;49m[32;49m
0x7fb6e79452fb    e91e000000              jmp 0x7fb6e794531e         	< Control.[34;49mct0[39;49m+336[32;49m >[39;49m[39;49m
[34;49m .. o/label \'hi\' ->" ps goto: test1 } { [39;49m[33;40m"[39;49m[34;49mcontinuing ct0" ps } ifElse } for label: leave  "ct0" n @ j @ leaving ;  .. [39;49m[32;49m
0x7fb6e7945300    48b8e14d41e7b67f0000    mov rax, 0x7fb6e7414de1    	[32;49m< string : '[39;49m[39;49mcontinuing ct0[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fb6e794530a    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e794530e    498906                  mov [r14], rax                                         [39;49m
[34;49m .. " ps goto: test1 } { "continuing ct0" [39;49m[33;40mps[39;49m[34;49m } ifElse } for label: leave  "ct0" n @ j @ leaving ;  .. [39;49m[32;49m
0x7fb6e7945311    49b97da393e7b67f0000    mov r9, 0x7fb6e793a37d                                 [39;49m[32;49m
0x7fb6e794531b    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fb6e793a37d[32;49m >[39;49m[39;49m
[34;49m .. ave  } _ { j 1 = } { j @ n @ <= } { j [39;49m[33;40m++[39;49m[34;49m } { n @ p j @ p  { n @ j @ == } { nl "testing ct0 : goto/label \'hi\' ->" ps goto: test1 } { "cont .. [39;49m[32;49m
0x7fb6e794531e    49ff4708                inc qword [r15+0x8]                                    [39;49m
[34;49m ..   } _ { j 1 = } { j @ n @ <= } { j ++ [39;49m[33;40m}[39;49m[34;49m { n @ p j @ p  { n @ j @ == } { nl "testing ct0 : goto/label \'hi\' ->" ps goto: test1 } { "continu .. [39;49m[32;49m
0x7fb6e7945322    e950ffffff              jmp 0x7fb6e7945277         	< Control.[34;49mct0[39;49m+169[32;49m >[39;49m[39;49m
[34;49m ..  ct0" ps } ifElse } for label: leave  [39;49m[33;40m"[39;49m[34;49mct0" n @ j @ leaving ;  .. [39;49m[32;49m
0x7fb6e7945327    48b80d4e41e7b67f0000    mov rax, 0x7fb6e7414e0d    	[32;49m< string : '[39;49m[39;49mct0[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fb6e7945331    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7945335    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ps } ifElse } for label: leave  "ct0" [39;49m[33;40mn[39;49m[34;49m @ j @ leaving ;  .. [39;49m[32;49m
0x7fb6e7945338    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e794533c    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7945340    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  ifElse } for label: leave  "ct0" n @ [39;49m[33;40mj[39;49m[34;49m @ leaving ;  .. [39;49m[32;49m
0x7fb6e7945343    498b4708                mov rax, [r15+0x8]                                     [39;49m[32;49m
0x7fb6e7945347    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e794534b    498906                  mov [r14], rax                                         [39;49m
[34;49m .. lse } for label: leave  "ct0" n @ j @ [39;49m[33;40mleaving[39;49m[34;49m ;  .. [39;49m[32;49m
0x7fb6e794534e    49b96b5094e7b67f0000    mov r9, 0x7fb6e794506b                                 [39;49m[32;49m
0x7fb6e7945358    49ffd1                  call r9                    	< Control.[34;49mleaving[39;49m : 0x00007fb6e794506b[32;49m >[39;49m[39;49m
[34;49m .. r label: leave  "ct0" n @ j @ leaving [39;49m[33;40m;[39;49m[34;49m  .. [39;49m[32;49m
0x7fb6e794535b    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e794535f    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e7945363    4983ee08                sub r14, 0x8                                           [39;49m[32;49m
0x7fb6e7945367    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'ct0' :: codeSize = 409
Word : 0x00007fb6e6167508 :: Compiled at : 0x00007fb6e79451ce
 =============================
::> 'wdiss' was called at namespaces/test/control.csl 60.16 <::

 ct0 : 
 17 1 continuing ct0 17 2 continuing ct0 17 3 continuing ct0 17 4 continuing ct0 17 5 continuing ct0 17 6 continuing ct0 17 7 continuing ct0 17 8 continuing ct0 17 9 continuing ct0 17 10 continuing ct0 17 11 continuing ct0 17 12 continuing ct0 17 13 continuing ct0 17 14 continuing ct0 17 15 continuing ct0 17 16 continuing ct0 17 17
 testing ct0 : goto/label 'hi' -> ct0 before goto/label works

DataStack at : [34;49mnamespaces/test/control.csl : 61.7[39;49m :
DataStack depth =  10 : Dsp (R14) = Top = 0x00007fb6e7cd3a90, InitialTos = 0x00007fb6e7cd3a40, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fb6e7cd3a90 > = 0x00007fb6e7cd3a68	
  DataStack   [  -1 ] < 0x00007fb6e7cd3a88 > = 0x0000000000000011	
  DataStack   [  -2 ] < 0x00007fb6e7cd3a80 > = 0x0000000000000011	
  DataStack   [  -3 ] < 0x00007fb6e7cd3a78 > = 0x00007fb6e7414e0d	[32;49m< string : '[39;49m[34;49mct0[39;49m[32;49m' >[39;49m
  DataStack   [  -4 ] < 0x00007fb6e7cd3a70 > = 0x0000000000000011	
  DataStack   [  -5 ] < 0x00007fb6e7cd3a68 > = 0x0000000000000000	
  DataStack   [  -6 ] < 0x00007fb6e7cd3a60 > = 0x0000000000000011	
  DataStack   [  -7 ] < 0x00007fb6e7cd3a58 > = 0x0000000000000005	
  DataStack   [  -8 ] < 0x00007fb6e7cd3a50 > = 0x0000000000000005	
  DataStack   [  -9 ] < 0x00007fb6e7cd3a48 > = 0x0000000000000005	
 leaving ct0 n = 17 j =  17
DataStack at : [34;49mnamespaces/test/control.csl : 61.7[39;49m :
DataStack depth =  10 : Dsp (R14) = Top = 0x00007fb6e7cd3a90, InitialTos = 0x00007fb6e7cd3a40, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fb6e7cd3a90 > = 0x00007fb6e7cd3a68	
  DataStack   [  -1 ] < 0x00007fb6e7cd3a88 > = 0x0000000000000011	
  DataStack   [  -2 ] < 0x00007fb6e7cd3a80 > = 0x0000000000000011	
  DataStack   [  -3 ] < 0x00007fb6e7cd3a78 > = 0x00007fb6e7414e0d	[32;49m< string : '[39;49m[34;49mct0[39;49m[32;49m' >[39;49m
  DataStack   [  -4 ] < 0x00007fb6e7cd3a70 > = 0x0000000000000011	
  DataStack   [  -5 ] < 0x00007fb6e7cd3a68 > = 0x0000000000000000	
  DataStack   [  -6 ] < 0x00007fb6e7cd3a60 > = 0x0000000000000011	
  DataStack   [  -7 ] < 0x00007fb6e7cd3a58 > = 0x0000000000000005	
  DataStack   [  -8 ] < 0x00007fb6e7cd3a50 > = 0x0000000000000005	
  DataStack   [  -9 ] < 0x00007fb6e7cd3a48 > = 0x0000000000000005	

 ct1 : 
 17 1 continuing ct1 17 2 continuing ct1 17 3 continuing ct1 17 4 continuing ct1 17 5 continuing ct1 17 6 continuing ct1 17 7 continuing ct1 17 8 continuing ct1 17 9 continuing ct1 17 10 continuing ct1 17 11 continuing ct1 17 12 continuing ct1 17 13 continuing ct1 17 14 continuing ct1 17 15 continuing ct1 17 16 continuing ct1 17 17
 testing ct1 : goto/label1 -> ct1 after nested goto/label1 works

 ct2 : 

 testing ct2 : goto/label2 -> ct2 after goto/label2 works

 =============================
Control.[34;49mhic2[39;49m <:> csl compiled word
SourceCode for Control.[34;49mhic2[39;49m :> 
[34;49m: hic2 ( n ) nl "hic2 : start " ps nl s n @ p n @ s ct0 s n @ s ct1 n @ s ct2 s n @ p nl "hic2 : done " ps nl ; [39;49m
Source code file location of [34;49mhic2[39;49m : "namespaces/test/control.csl" : 83.2 :: we are now at : namespaces/test/control.csl : 88.17
Compiled with : optimizeOn, inlineOn, Jcc8 on
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xe79455ba -- code size = 438 bytes
TypeSignature : 
 -----------------------------
Word :: Control.[34;49mhic2[39;49m : definition = 0x00007fb6e79455ba : disassembly at namespaces/test/control.csl : 88.17 :
[34;49m ..                                     : [39;49m[33;40mhic2[39;49m[34;49m ( n )  nl "hic2 : start " ps nl s n @ p n @ s ct0 s n @ s ct1 n @ s ct2 s n @ p  nl "hic2 : done .. [39;49m[32;49m
0x7fb6e79455ba    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fb6e79455be    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e79455c2    4981c608000000          add r14, 0x8                                           [39;49m
[34;49m ..                         : hic2 ( n )  [39;49m[33;40mnl[39;49m[34;49m "hic2 : start " ps nl s n @ p n @ s ct0 s n @ s ct1 n @ s ct2 s n @ p  nl "hic2 : done " ps nl  ;  .. [39;49m[32;49m
0x7fb6e79455c9    49b8e08080892d560000    mov r8, 0x562d898080e0                                 [39;49m[32;49m
0x7fb6e79455d3    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e79455dd    49ffd1                  call r9                    	< Io.[34;49mnewline[39;49m : 0x0000562d898080e0[32;49m >[39;49m[39;49m
[34;49m ..                      : hic2 ( n )  nl [39;49m[33;40m"[39;49m[34;49mhic2 : start " ps nl s n @ p n @ s ct0 s n @ s ct1 n @ s ct2 s n @ p  nl "hic2 : done " ps nl  ;  .. [39;49m[32;49m
0x7fb6e79455e0    48b8155341e7b67f0000    mov rax, 0x7fb6e7415315    	[32;49m< string : '[39;49m[39;49mhic2 : start [39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fb6e79455ea    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e79455ee    498906                  mov [r14], rax                                         [39;49m
[34;49m ..      : hic2 ( n )  nl "hic2 : start " [39;49m[33;40mps[39;49m[34;49m nl s n @ p n @ s ct0 s n @ s ct1 n @ s ct2 s n @ p  nl "hic2 : done " ps nl  ;  .. [39;49m[32;49m
0x7fb6e79455f1    49b97da393e7b67f0000    mov r9, 0x7fb6e793a37d                                 [39;49m[32;49m
0x7fb6e79455fb    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fb6e793a37d[32;49m >[39;49m[39;49m
[34;49m ..   : hic2 ( n )  nl "hic2 : start " ps [39;49m[33;40mnl[39;49m[34;49m s n @ p n @ s ct0 s n @ s ct1 n @ s ct2 s n @ p  nl "hic2 : done " ps nl  ;  .. [39;49m[32;49m
0x7fb6e79455fe    49b8e08080892d560000    mov r8, 0x562d898080e0                                 [39;49m[32;49m
0x7fb6e7945608    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e7945612    49ffd1                  call r9                    	< Io.[34;49mnewline[39;49m : 0x0000562d898080e0[32;49m >[39;49m[39;49m
[34;49m   : hic2 ( n )  nl "hic2 : start " ps nl [39;49m[33;40ms[39;49m[34;49m n @ p n @ s ct0 s n @ s ct1 n @ s ct2 s n @ p  nl "hic2 : done " ps nl  ;  .. [39;49m[32;49m
0x7fb6e7945615    49b8e0267e892d560000    mov r8, 0x562d897e26e0                                 [39;49m[32;49m
0x7fb6e794561f    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e7945629    49ffd1                  call r9                    	< Debug.[34;49mstack[39;49m : 0x0000562d897e26e0[32;49m >[39;49m[39;49m
[34;49m : hic2 ( n )  nl "hic2 : start " ps nl s [39;49m[33;40mn[39;49m[34;49m @ p n @ s ct0 s n @ s ct1 n @ s ct2 s n @ p  nl "hic2 : done " ps nl  ;  .. [39;49m[32;49m
0x7fb6e794562c    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e7945630    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7945634    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ( n )  nl "hic2 : start " ps nl s n @ [39;49m[33;40mp[39;49m[34;49m n @ s ct0 s n @ s ct1 n @ s ct2 s n @ p  nl "hic2 : done " ps nl  ; [39;49m[32;49m
0x7fb6e7945637    49b944a493e7b67f0000    mov r9, 0x7fb6e793a444                                 [39;49m[32;49m
0x7fb6e7945641    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fb6e793a444[32;49m >[39;49m[39;49m
[34;49m .. n )  nl "hic2 : start " ps nl s n @ p [39;49m[33;40mn[39;49m[34;49m @ s ct0 s n @ s ct1 n @ s ct2 s n @ p  nl "hic2 : done " ps nl  ; [39;49m[32;49m
0x7fb6e7945644    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e7945648    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e794564c    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  nl "hic2 : start " ps nl s n @ p n @ [39;49m[33;40ms[39;49m[34;49m ct0 s n @ s ct1 n @ s ct2 s n @ p  nl "hic2 : done " ps nl  ; [39;49m[32;49m
0x7fb6e794564f    49b8e0267e892d560000    mov r8, 0x562d897e26e0                                 [39;49m[32;49m
0x7fb6e7945659    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e7945663    49ffd1                  call r9                    	< Debug.[34;49mstack[39;49m : 0x0000562d897e26e0[32;49m >[39;49m[39;49m
[34;49m .. l "hic2 : start " ps nl s n @ p n @ s [39;49m[33;40mct0[39;49m[34;49m s n @ s ct1 n @ s ct2 s n @ p  nl "hic2 : done " ps nl  ; [39;49m[32;49m
0x7fb6e7945666    49b9ce5194e7b67f0000    mov r9, 0x7fb6e79451ce                                 [39;49m[32;49m
0x7fb6e7945670    49ffd1                  call r9                    	< Control.[34;49mct0[39;49m : 0x00007fb6e79451ce[32;49m >[39;49m[39;49m
[34;49m .. ic2 : start " ps nl s n @ p n @ s ct0 [39;49m[33;40ms[39;49m[34;49m n @ s ct1 n @ s ct2 s n @ p  nl "hic2 : done " ps nl  ; [39;49m[32;49m
0x7fb6e7945673    49b8e0267e892d560000    mov r8, 0x562d897e26e0                                 [39;49m[32;49m
0x7fb6e794567d    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e7945687    49ffd1                  call r9                    	< Debug.[34;49mstack[39;49m : 0x0000562d897e26e0[32;49m >[39;49m[39;49m
[34;49m .. 2 : start " ps nl s n @ p n @ s ct0 s [39;49m[33;40mn[39;49m[34;49m @ s ct1 n @ s ct2 s n @ p  nl "hic2 : done " ps nl  ; [39;49m[32;49m
0x7fb6e794568a    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e794568e    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7945692    498906                  mov [r14], rax                                         [39;49m
[34;49m .. start " ps nl s n @ p n @ s ct0 s n @ [39;49m[33;40ms[39;49m[34;49m ct1 n @ s ct2 s n @ p  nl "hic2 : done " ps nl  ; [39;49m[32;49m
0x7fb6e7945695    49b8e0267e892d560000    mov r8, 0x562d897e26e0                                 [39;49m[32;49m
0x7fb6e794569f    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e79456a9    49ffd1                  call r9                    	< Debug.[34;49mstack[39;49m : 0x0000562d897e26e0[32;49m >[39;49m[39;49m
[34;49m .. art " ps nl s n @ p n @ s ct0 s n @ s [39;49m[33;40mct1[39;49m[34;49m n @ s ct2 s n @ p  nl "hic2 : done " ps nl  ; [39;49m[32;49m
0x7fb6e79456ac    49b96d5394e7b67f0000    mov r9, 0x7fb6e794536d                                 [39;49m[32;49m
0x7fb6e79456b6    49ffd1                  call r9                    	< Control.[34;49mct1[39;49m : 0x00007fb6e794536d[32;49m >[39;49m[39;49m
[34;49m .. " ps nl s n @ p n @ s ct0 s n @ s ct1 [39;49m[33;40mn[39;49m[34;49m @ s ct2 s n @ p  nl "hic2 : done " ps nl  ; [39;49m[32;49m
0x7fb6e79456b9    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e79456bd    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e79456c1    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  nl s n @ p n @ s ct0 s n @ s ct1 n @ [39;49m[33;40ms[39;49m[34;49m ct2 s n @ p  nl "hic2 : done " ps nl  ; [39;49m[32;49m
0x7fb6e79456c4    49b8e0267e892d560000    mov r8, 0x562d897e26e0                                 [39;49m[32;49m
0x7fb6e79456ce    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e79456d8    49ffd1                  call r9                    	< Debug.[34;49mstack[39;49m : 0x0000562d897e26e0[32;49m >[39;49m[39;49m
[34;49m .. l s n @ p n @ s ct0 s n @ s ct1 n @ s [39;49m[33;40mct2[39;49m[34;49m s n @ p  nl "hic2 : done " ps nl  ; [39;49m[32;49m
0x7fb6e79456db    49b9f35494e7b67f0000    mov r9, 0x7fb6e79454f3                                 [39;49m[32;49m
0x7fb6e79456e5    49ffd1                  call r9                    	< Control.[34;49mct2[39;49m : 0x00007fb6e79454f3[32;49m >[39;49m[39;49m
[34;49m .. n @ p n @ s ct0 s n @ s ct1 n @ s ct2 [39;49m[33;40ms[39;49m[34;49m n @ p  nl "hic2 : done " ps nl  ; [39;49m[32;49m
0x7fb6e79456e8    49b8e0267e892d560000    mov r8, 0x562d897e26e0                                 [39;49m[32;49m
0x7fb6e79456f2    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e79456fc    49ffd1                  call r9                    	< Debug.[34;49mstack[39;49m : 0x0000562d897e26e0[32;49m >[39;49m[39;49m
[34;49m .. @ p n @ s ct0 s n @ s ct1 n @ s ct2 s [39;49m[33;40mn[39;49m[34;49m @ p  nl "hic2 : done " ps nl  ; [39;49m[32;49m
0x7fb6e79456ff    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e7945703    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7945707    498906                  mov [r14], rax                                         [39;49m
[34;49m .. n @ s ct0 s n @ s ct1 n @ s ct2 s n @ [39;49m[33;40mp[39;49m[34;49m  nl "hic2 : done " ps nl  ; [39;49m[32;49m
0x7fb6e794570a    49b944a493e7b67f0000    mov r9, 0x7fb6e793a444                                 [39;49m[32;49m
0x7fb6e7945714    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fb6e793a444[32;49m >[39;49m[39;49m
[34;49m ..  s ct0 s n @ s ct1 n @ s ct2 s n @ p  [39;49m[33;40mnl[39;49m[34;49m "hic2 : done " ps nl  ; [39;49m[32;49m
0x7fb6e7945717    49b8e08080892d560000    mov r8, 0x562d898080e0                                 [39;49m[32;49m
0x7fb6e7945721    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e794572b    49ffd1                  call r9                    	< Io.[34;49mnewline[39;49m : 0x0000562d898080e0[32;49m >[39;49m[39;49m
[34;49m .. ct0 s n @ s ct1 n @ s ct2 s n @ p  nl [39;49m[33;40m"[39;49m[34;49mhic2 : done " ps nl  ; [39;49m[32;49m
0x7fb6e794572e    48b8425341e7b67f0000    mov rax, 0x7fb6e7415342    	[32;49m< string : '[39;49m[39;49mhic2 : done [39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fb6e7945738    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e794573c    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  n @ s ct2 s n @ p  nl "hic2 : done " [39;49m[33;40mps[39;49m[34;49m nl  ; [39;49m[32;49m
0x7fb6e794573f    49b97da393e7b67f0000    mov r9, 0x7fb6e793a37d                                 [39;49m[32;49m
0x7fb6e7945749    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fb6e793a37d[32;49m >[39;49m[39;49m
[34;49m .. @ s ct2 s n @ p  nl "hic2 : done " ps [39;49m[33;40mnl[39;49m[34;49m  ; [39;49m[32;49m
0x7fb6e794574c    49b8e08080892d560000    mov r8, 0x562d898080e0                                 [39;49m[32;49m
0x7fb6e7945756    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e7945760    49ffd1                  call r9                    	< Io.[34;49mnewline[39;49m : 0x0000562d898080e0[32;49m >[39;49m[39;49m
[34;49m .. ct2 s n @ p  nl "hic2 : done " ps nl  [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fb6e7945763    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e7945767    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e794576b    4983ee08                sub r14, 0x8                                           [39;49m[32;49m
0x7fb6e794576f    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'hic2' :: codeSize = 437
Word : 0x00007fb6e6176990 :: Compiled at : 0x00007fb6e79455ba
 =============================
::> 'wdiss' was called at namespaces/test/control.csl 88.17 <::

 hic2 : start 

DataStack at : [34;49mnamespaces/test/control.csl : 89.7[39;49m :
DataStack depth =   5 : Dsp (R14) = Top = 0x00007fb6e7cd3a68, InitialTos = 0x00007fb6e7cd3a40, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fb6e7cd3a68 > = 0x0000000000000000	
  DataStack   [  -1 ] < 0x00007fb6e7cd3a60 > = 0x0000000000000003	
  DataStack   [  -2 ] < 0x00007fb6e7cd3a58 > = 0x0000000000000005	
  DataStack   [  -3 ] < 0x00007fb6e7cd3a50 > = 0x0000000000000005	
  DataStack   [  -4 ] < 0x00007fb6e7cd3a48 > = 0x0000000000000005	
 3
DataStack at : [34;49mnamespaces/test/control.csl : 89.7[39;49m :
DataStack depth =   6 : Dsp (R14) = Top = 0x00007fb6e7cd3a70, InitialTos = 0x00007fb6e7cd3a40, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fb6e7cd3a70 > = 0x0000000000000003	
  DataStack   [  -1 ] < 0x00007fb6e7cd3a68 > = 0x0000000000000000	
  DataStack   [  -2 ] < 0x00007fb6e7cd3a60 > = 0x0000000000000003	
  DataStack   [  -3 ] < 0x00007fb6e7cd3a58 > = 0x0000000000000005	
  DataStack   [  -4 ] < 0x00007fb6e7cd3a50 > = 0x0000000000000005	
  DataStack   [  -5 ] < 0x00007fb6e7cd3a48 > = 0x0000000000000005	

 ct0 : 
 3 1 continuing ct0 3 2 continuing ct0 3 3
 testing ct0 : goto/label 'hi' -> ct0 before goto/label works

DataStack at : [34;49mnamespaces/test/control.csl : 89.7[39;49m :
DataStack depth =  12 : Dsp (R14) = Top = 0x00007fb6e7cd3aa0, InitialTos = 0x00007fb6e7cd3a40, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fb6e7cd3aa0 > = 0x00007fb6e7cd3a78	
  DataStack   [  -1 ] < 0x00007fb6e7cd3a98 > = 0x0000000000000003	
  DataStack   [  -2 ] < 0x00007fb6e7cd3a90 > = 0x0000000000000003	
  DataStack   [  -3 ] < 0x00007fb6e7cd3a88 > = 0x00007fb6e7414e0d	[32;49m< string : '[39;49m[34;49mct0[39;49m[32;49m' >[39;49m
  DataStack   [  -4 ] < 0x00007fb6e7cd3a80 > = 0x0000000000000003	
  DataStack   [  -5 ] < 0x00007fb6e7cd3a78 > = 0x00007fb6e7cd3a68	
  DataStack   [  -6 ] < 0x00007fb6e7cd3a70 > = 0x0000000000000003	
  DataStack   [  -7 ] < 0x00007fb6e7cd3a68 > = 0x0000000000000000	
  DataStack   [  -8 ] < 0x00007fb6e7cd3a60 > = 0x0000000000000003	
  DataStack   [  -9 ] < 0x00007fb6e7cd3a58 > = 0x0000000000000005	
  DataStack   [ -10 ] < 0x00007fb6e7cd3a50 > = 0x0000000000000005	
  DataStack   [ -11 ] < 0x00007fb6e7cd3a48 > = 0x0000000000000005	
 leaving ct0 n = 3 j =  3
DataStack at : [34;49mnamespaces/test/control.csl : 89.7[39;49m :
DataStack depth =  12 : Dsp (R14) = Top = 0x00007fb6e7cd3aa0, InitialTos = 0x00007fb6e7cd3a40, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fb6e7cd3aa0 > = 0x00007fb6e7cd3a78	
  DataStack   [  -1 ] < 0x00007fb6e7cd3a98 > = 0x0000000000000003	
  DataStack   [  -2 ] < 0x00007fb6e7cd3a90 > = 0x0000000000000003	
  DataStack   [  -3 ] < 0x00007fb6e7cd3a88 > = 0x00007fb6e7414e0d	[32;49m< string : '[39;49m[34;49mct0[39;49m[32;49m' >[39;49m
  DataStack   [  -4 ] < 0x00007fb6e7cd3a80 > = 0x0000000000000003	
  DataStack   [  -5 ] < 0x00007fb6e7cd3a78 > = 0x00007fb6e7cd3a68	
  DataStack   [  -6 ] < 0x00007fb6e7cd3a70 > = 0x0000000000000003	
  DataStack   [  -7 ] < 0x00007fb6e7cd3a68 > = 0x0000000000000000	
  DataStack   [  -8 ] < 0x00007fb6e7cd3a60 > = 0x0000000000000003	
  DataStack   [  -9 ] < 0x00007fb6e7cd3a58 > = 0x0000000000000005	
  DataStack   [ -10 ] < 0x00007fb6e7cd3a50 > = 0x0000000000000005	
  DataStack   [ -11 ] < 0x00007fb6e7cd3a48 > = 0x0000000000000005	

DataStack at : [34;49mnamespaces/test/control.csl : 89.7[39;49m :
DataStack depth =   5 : Dsp (R14) = Top = 0x00007fb6e7cd3a68, InitialTos = 0x00007fb6e7cd3a40, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fb6e7cd3a68 > = 0x0000000000000000	
  DataStack   [  -1 ] < 0x00007fb6e7cd3a60 > = 0x0000000000000003	
  DataStack   [  -2 ] < 0x00007fb6e7cd3a58 > = 0x0000000000000005	
  DataStack   [  -3 ] < 0x00007fb6e7cd3a50 > = 0x0000000000000005	
  DataStack   [  -4 ] < 0x00007fb6e7cd3a48 > = 0x0000000000000005	

DataStack at : [34;49mnamespaces/test/control.csl : 89.7[39;49m :
DataStack depth =   6 : Dsp (R14) = Top = 0x00007fb6e7cd3a70, InitialTos = 0x00007fb6e7cd3a40, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fb6e7cd3a70 > = 0x0000000000000003	
  DataStack   [  -1 ] < 0x00007fb6e7cd3a68 > = 0x0000000000000000	
  DataStack   [  -2 ] < 0x00007fb6e7cd3a60 > = 0x0000000000000003	
  DataStack   [  -3 ] < 0x00007fb6e7cd3a58 > = 0x0000000000000005	
  DataStack   [  -4 ] < 0x00007fb6e7cd3a50 > = 0x0000000000000005	
  DataStack   [  -5 ] < 0x00007fb6e7cd3a48 > = 0x0000000000000005	

 ct1 : 
 3 1 continuing ct1 3 2 continuing ct1 3 3
 testing ct1 : goto/label1 -> ct1 after nested goto/label1 works

DataStack at : [34;49mnamespaces/test/control.csl : 89.7[39;49m :
DataStack depth =   6 : Dsp (R14) = Top = 0x00007fb6e7cd3a70, InitialTos = 0x00007fb6e7cd3a40, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fb6e7cd3a70 > = 0x0000000000000003	
  DataStack   [  -1 ] < 0x00007fb6e7cd3a68 > = 0x0000000000000000	
  DataStack   [  -2 ] < 0x00007fb6e7cd3a60 > = 0x0000000000000003	
  DataStack   [  -3 ] < 0x00007fb6e7cd3a58 > = 0x0000000000000005	
  DataStack   [  -4 ] < 0x00007fb6e7cd3a50 > = 0x0000000000000005	
  DataStack   [  -5 ] < 0x00007fb6e7cd3a48 > = 0x0000000000000005	

 ct2 : 

 testing ct2 : goto/label2 -> ct2 after goto/label2 works

DataStack at : [34;49mnamespaces/test/control.csl : 89.7[39;49m :
DataStack depth =   6 : Dsp (R14) = Top = 0x00007fb6e7cd3a70, InitialTos = 0x00007fb6e7cd3a40, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fb6e7cd3a70 > = 0x0000000000000003	
  DataStack   [  -1 ] < 0x00007fb6e7cd3a68 > = 0x0000000000000000	
  DataStack   [  -2 ] < 0x00007fb6e7cd3a60 > = 0x0000000000000003	
  DataStack   [  -3 ] < 0x00007fb6e7cd3a58 > = 0x0000000000000005	
  DataStack   [  -4 ] < 0x00007fb6e7cd3a50 > = 0x0000000000000005	
  DataStack   [  -5 ] < 0x00007fb6e7cd3a48 > = 0x0000000000000005	
 3
 hic2 : done 

 hic2 : start 

DataStack at : [34;49mnamespaces/test/control.csl : 91.7[39;49m :
DataStack depth =   5 : Dsp (R14) = Top = 0x00007fb6e7cd3a68, InitialTos = 0x00007fb6e7cd3a40, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fb6e7cd3a68 > = 0x0000000000000000	
  DataStack   [  -1 ] < 0x00007fb6e7cd3a60 > = 0x0000000000000007	
  DataStack   [  -2 ] < 0x00007fb6e7cd3a58 > = 0x0000000000000005	
  DataStack   [  -3 ] < 0x00007fb6e7cd3a50 > = 0x0000000000000005	
  DataStack   [  -4 ] < 0x00007fb6e7cd3a48 > = 0x0000000000000005	
 7
DataStack at : [34;49mnamespaces/test/control.csl : 91.7[39;49m :
DataStack depth =   6 : Dsp (R14) = Top = 0x00007fb6e7cd3a70, InitialTos = 0x00007fb6e7cd3a40, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fb6e7cd3a70 > = 0x0000000000000007	
  DataStack   [  -1 ] < 0x00007fb6e7cd3a68 > = 0x0000000000000000	
  DataStack   [  -2 ] < 0x00007fb6e7cd3a60 > = 0x0000000000000007	
  DataStack   [  -3 ] < 0x00007fb6e7cd3a58 > = 0x0000000000000005	
  DataStack   [  -4 ] < 0x00007fb6e7cd3a50 > = 0x0000000000000005	
  DataStack   [  -5 ] < 0x00007fb6e7cd3a48 > = 0x0000000000000005	

 ct0 : 
 7 1 continuing ct0 7 2 continuing ct0 7 3 continuing ct0 7 4 continuing ct0 7 5 continuing ct0 7 6 continuing ct0 7 7
 testing ct0 : goto/label 'hi' -> ct0 before goto/label works

DataStack at : [34;49mnamespaces/test/control.csl : 91.7[39;49m :
DataStack depth =  12 : Dsp (R14) = Top = 0x00007fb6e7cd3aa0, InitialTos = 0x00007fb6e7cd3a40, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fb6e7cd3aa0 > = 0x00007fb6e7cd3a78	
  DataStack   [  -1 ] < 0x00007fb6e7cd3a98 > = 0x0000000000000007	
  DataStack   [  -2 ] < 0x00007fb6e7cd3a90 > = 0x0000000000000007	
  DataStack   [  -3 ] < 0x00007fb6e7cd3a88 > = 0x00007fb6e7414e0d	[32;49m< string : '[39;49m[34;49mct0[39;49m[32;49m' >[39;49m
  DataStack   [  -4 ] < 0x00007fb6e7cd3a80 > = 0x0000000000000007	
  DataStack   [  -5 ] < 0x00007fb6e7cd3a78 > = 0x00007fb6e7cd3a68	
  DataStack   [  -6 ] < 0x00007fb6e7cd3a70 > = 0x0000000000000007	
  DataStack   [  -7 ] < 0x00007fb6e7cd3a68 > = 0x0000000000000000	
  DataStack   [  -8 ] < 0x00007fb6e7cd3a60 > = 0x0000000000000007	
  DataStack   [  -9 ] < 0x00007fb6e7cd3a58 > = 0x0000000000000005	
  DataStack   [ -10 ] < 0x00007fb6e7cd3a50 > = 0x0000000000000005	
  DataStack   [ -11 ] < 0x00007fb6e7cd3a48 > = 0x0000000000000005	
 leaving ct0 n = 7 j =  7
DataStack at : [34;49mnamespaces/test/control.csl : 91.7[39;49m :
DataStack depth =  12 : Dsp (R14) = Top = 0x00007fb6e7cd3aa0, InitialTos = 0x00007fb6e7cd3a40, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fb6e7cd3aa0 > = 0x00007fb6e7cd3a78	
  DataStack   [  -1 ] < 0x00007fb6e7cd3a98 > = 0x0000000000000007	
  DataStack   [  -2 ] < 0x00007fb6e7cd3a90 > = 0x0000000000000007	
  DataStack   [  -3 ] < 0x00007fb6e7cd3a88 > = 0x00007fb6e7414e0d	[32;49m< string : '[39;49m[34;49mct0[39;49m[32;49m' >[39;49m
  DataStack   [  -4 ] < 0x00007fb6e7cd3a80 > = 0x0000000000000007	
  DataStack   [  -5 ] < 0x00007fb6e7cd3a78 > = 0x00007fb6e7cd3a68	
  DataStack   [  -6 ] < 0x00007fb6e7cd3a70 > = 0x0000000000000007	
  DataStack   [  -7 ] < 0x00007fb6e7cd3a68 > = 0x0000000000000000	
  DataStack   [  -8 ] < 0x00007fb6e7cd3a60 > = 0x0000000000000007	
  DataStack   [  -9 ] < 0x00007fb6e7cd3a58 > = 0x0000000000000005	
  DataStack   [ -10 ] < 0x00007fb6e7cd3a50 > = 0x0000000000000005	
  DataStack   [ -11 ] < 0x00007fb6e7cd3a48 > = 0x0000000000000005	

DataStack at : [34;49mnamespaces/test/control.csl : 91.7[39;49m :
DataStack depth =   5 : Dsp (R14) = Top = 0x00007fb6e7cd3a68, InitialTos = 0x00007fb6e7cd3a40, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fb6e7cd3a68 > = 0x0000000000000000	
  DataStack   [  -1 ] < 0x00007fb6e7cd3a60 > = 0x0000000000000007	
  DataStack   [  -2 ] < 0x00007fb6e7cd3a58 > = 0x0000000000000005	
  DataStack   [  -3 ] < 0x00007fb6e7cd3a50 > = 0x0000000000000005	
  DataStack   [  -4 ] < 0x00007fb6e7cd3a48 > = 0x0000000000000005	

DataStack at : [34;49mnamespaces/test/control.csl : 91.7[39;49m :
DataStack depth =   6 : Dsp (R14) = Top = 0x00007fb6e7cd3a70, InitialTos = 0x00007fb6e7cd3a40, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fb6e7cd3a70 > = 0x0000000000000007	
  DataStack   [  -1 ] < 0x00007fb6e7cd3a68 > = 0x0000000000000000	
  DataStack   [  -2 ] < 0x00007fb6e7cd3a60 > = 0x0000000000000007	
  DataStack   [  -3 ] < 0x00007fb6e7cd3a58 > = 0x0000000000000005	
  DataStack   [  -4 ] < 0x00007fb6e7cd3a50 > = 0x0000000000000005	
  DataStack   [  -5 ] < 0x00007fb6e7cd3a48 > = 0x0000000000000005	

 ct1 : 
 7 1 continuing ct1 7 2 continuing ct1 7 3 continuing ct1 7 4 continuing ct1 7 5 continuing ct1 7 6 continuing ct1 7 7
 testing ct1 : goto/label1 -> ct1 after nested goto/label1 works

DataStack at : [34;49mnamespaces/test/control.csl : 91.7[39;49m :
DataStack depth =   6 : Dsp (R14) = Top = 0x00007fb6e7cd3a70, InitialTos = 0x00007fb6e7cd3a40, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fb6e7cd3a70 > = 0x0000000000000007	
  DataStack   [  -1 ] < 0x00007fb6e7cd3a68 > = 0x0000000000000000	
  DataStack   [  -2 ] < 0x00007fb6e7cd3a60 > = 0x0000000000000007	
  DataStack   [  -3 ] < 0x00007fb6e7cd3a58 > = 0x0000000000000005	
  DataStack   [  -4 ] < 0x00007fb6e7cd3a50 > = 0x0000000000000005	
  DataStack   [  -5 ] < 0x00007fb6e7cd3a48 > = 0x0000000000000005	

 ct2 : 

 testing ct2 : goto/label2 -> ct2 after goto/label2 works

DataStack at : [34;49mnamespaces/test/control.csl : 91.7[39;49m :
DataStack depth =   6 : Dsp (R14) = Top = 0x00007fb6e7cd3a70, InitialTos = 0x00007fb6e7cd3a40, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fb6e7cd3a70 > = 0x0000000000000007	
  DataStack   [  -1 ] < 0x00007fb6e7cd3a68 > = 0x0000000000000000	
  DataStack   [  -2 ] < 0x00007fb6e7cd3a60 > = 0x0000000000000007	
  DataStack   [  -3 ] < 0x00007fb6e7cd3a58 > = 0x0000000000000005	
  DataStack   [  -4 ] < 0x00007fb6e7cd3a50 > = 0x0000000000000005	
  DataStack   [  -5 ] < 0x00007fb6e7cd3a48 > = 0x0000000000000005	
 7
 hic2 : done 

 7
 3
 2
 '1
 1
 77
 7
 9
 9
 8

 7
 7
 3
 2
 1
 77
 3
 8
 9

 =============================
C_Syntax.[34;49mcsMatchExWithReturn[39;49m <:> csl compiled word
SourceCode for C_Syntax.[34;49mcsMatchExWithReturn[39;49m :> 
[34;49mvoid csMatchExWithReturn ( n | x rtn ) { x = 1111 ; match ( n ) { case '1 { nl ; p (1) ; rtn = x ; } case '2 { nl ; p (2) ; rtn = n ; } case '3 { nl ; p (3) ; rtn = x ; } case 3 { nl ; p (3) ; rtn = n ; } case 77 { nl ; p (77) ; rtn = n ; } case 'seven { nl ; p (7) ; rtn = n ; } case 'eight { nl ; p (8) ; rtn = n ; } case ( 'nine ) { nl ; ps ( n ) ; p (9) ; ps ( "singleQuote1" ) ; rtn = x ; } case 'nine { nl ; ps ( n ) ; p (9) ; ps ( "singleQuote2" ) ; rtn = x ; } case ( "nine" ) { nl ; ps (n) ; p (9) ; ps ( "doubleQuote" ) ; rtn = x ; } } p ( x - 103 ) ; return rtn ; } [39;49m
Source code file location of [34;49mcsMatchExWithReturn[39;49m : "namespaces/test/control.csl" : 153.20 :: we are now at : namespaces/test/control.csl : 172.24
Compiled with : optimizeOn, inlineOn, c_syntaxOn, infixOn, Jcc8 on
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xe7945c39 -- code size = 996 bytes
TypeSignature : 
 -----------------------------
Word :: C_Syntax.[34;49mcsMatchExWithReturn[39;49m : definition = 0x00007fb6e7945c39 : disassembly at namespaces/test/control.csl : 172.24 :
[34;49m ..                                  void [39;49m[33;40mcsMatchExWithReturn[39;49m[34;49m ( n | x rtn ) { x = 1111 ; match ( n ) { case '1 { nl ; p (1) ; rtn = x ; }  case .. [39;49m[32;49m
0x7fb6e7945c39    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fb6e7945c3d    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e7945c41    4981c618000000          add r14, 0x18                                          [39;49m
[34;49m .. MatchExWithReturn ( n | x rtn ) { x = [39;49m[33;40m1111[39;49m[34;49m ; match ( n ) { case '1 { nl ; p (1) ; rtn = x ; }  case '2 { nl ; p (2) ; rtn = n ; }  case '3  .. [39;49m[32;49m
0x7fb6e7945c48    48c7c057040000          mov rax, 0x457                                         [39;49m
[34;49m void csMatchExWithReturn ( n | x rtn ) { [39;49m[33;40mx[39;49m[34;49m = 1111 ; match ( n ) { case '1 { nl ; p (1) ; rtn = x ; }  case '2 { nl ; p (2) ; rtn = n ; }  case .. [39;49m[32;49m
0x7fb6e7945c4f    498d4f08                lea rcx, [r15+0x8]                                     [39;49m
[34;49m .. csMatchExWithReturn ( n | x rtn ) { x [39;49m[33;40m=[39;49m[34;49m 1111 ; match ( n ) { case '1 { nl ; p (1) ; rtn = x ; }  case '2 { nl ; p (2) ; rtn = n ; }  case ' .. [39;49m[32;49m
0x7fb6e7945c53    488901                  mov [rcx], rax                                         [39;49m
[34;49m .. rn ( n | x rtn ) { x = 1111 ; match ( [39;49m[33;40mn[39;49m[34;49m ) { case '1 { nl ; p (1) ; rtn = x ; }  case '2 { nl ; p (2) ; rtn = n ; }  case '3 { nl ; p (3) ;  .. [39;49m[32;49m
0x7fb6e7945c56    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e7945c5a    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7945c5e    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  n | x rtn ) { x = 1111 ; match ( n ) [39;49m[33;40m{[39;49m[34;49m case '1 { nl ; p (1) ; rtn = x ; }  case '2 { nl ; p (2) ; rtn = n ; }  case '3 { nl ; p (3) ; rtn  .. [39;49m[32;49m
0x7fb6e7945c61    e95d030000              jmp 0x7fb6e7945fc3         	< C_Syntax.[34;49mcsMatchExWithReturn[39;49m+906[32;49m >[39;49m[39;49m
[34;49m ..  ) { x = 1111 ; match ( n ) { case '1 [39;49m[33;40m{[39;49m[34;49m nl ; p (1) ; rtn = x ; }  case '2 { nl ; p (2) ; rtn = n ; }  case '3 { nl ; p (3) ; rtn = x ; }  c .. [39;49m[32;49m
0x7fb6e7945c66    e93e000000              jmp 0x7fb6e7945ca9         	< C_Syntax.[34;49mcsMatchExWithReturn[39;49m+112[32;49m >[39;49m[39;49m
[34;49m ..  { x = 1111 ; match ( n ) { case '1 { [39;49m[33;40mnl[39;49m[34;49m ; p (1) ; rtn = x ; }  case '2 { nl ; p (2) ; rtn = n ; }  case '3 { nl ; p (3) ; rtn = x ; }  cas .. [39;49m[32;49m
0x7fb6e7945c6b    49b8e08080892d560000    mov r8, 0x562d898080e0                                 [39;49m[32;49m
0x7fb6e7945c75    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e7945c7f    49ffd1                  call r9                    	< Io.[34;49mnewline[39;49m : 0x0000562d898080e0[32;49m >[39;49m[39;49m
[34;49m .. 111 ; match ( n ) { case '1 { nl ; p ([39;49m[33;40m1[39;49m[34;49m) ; rtn = x ; }  case '2 { nl ; p (2) ; rtn = n ; }  case '3 { nl ; p (3) ; rtn = x ; }  case 3 { nl .. [39;49m[32;49m
0x7fb6e7945c82    48c7c001000000          mov rax, 0x1                                           [39;49m[32;49m
0x7fb6e7945c89    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7945c8d    498906                  mov [r14], rax                                         [39;49m
[34;49m .. = 1111 ; match ( n ) { case '1 { nl ; [39;49m[33;40mp[39;49m[34;49m (1) ; rtn = x ; }  case '2 { nl ; p (2) ; rtn = n ; }  case '3 { nl ; p (3) ; rtn = x ; }  case 3 { .. [39;49m[32;49m
0x7fb6e7945c90    49b9d9a593e7b67f0000    mov r9, 0x7fb6e793a5d9                                 [39;49m[32;49m
0x7fb6e7945c9a    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fb6e793a5d9[32;49m >[39;49m[39;49m
[34;49m ..  ( n ) { case '1 { nl ; p (1) ; rtn = [39;49m[33;40mx[39;49m[34;49m ; }  case '2 { nl ; p (2) ; rtn = n ; }  case '3 { nl ; p (3) ; rtn = x ; }  case 3 { nl ; p (3) ;  .. [39;49m[32;49m
0x7fb6e7945c9d    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m ..  match ( n ) { case '1 { nl ; p (1) ; [39;49m[33;40mrtn[39;49m[34;49m = x ; }  case '2 { nl ; p (2) ; rtn = n ; }  case '3 { nl ; p (3) ; rtn = x ; }  case 3 { nl ; p  .. [39;49m[32;49m
0x7fb6e7945ca1    498d4f10                lea rcx, [r15+0x10]                                    [39;49m
[34;49m .. ch ( n ) { case '1 { nl ; p (1) ; rtn [39;49m[33;40m=[39;49m[34;49m x ; }  case '2 { nl ; p (2) ; rtn = n ; }  case '3 { nl ; p (3) ; rtn = x ; }  case 3 { nl ; p (3)  .. [39;49m[32;49m
0x7fb6e7945ca5    488901                  mov [rcx], rax                                         [39;49m
[34;49m ..  ) { case '1 { nl ; p (1) ; rtn = x ; [39;49m[33;40m}[39;49m[34;49m  case '2 { nl ; p (2) ; rtn = n ; }  case '3 { nl ; p (3) ; rtn = x ; }  case 3 { nl ; p (3) ; rtn  .. [39;49m[32;49m
0x7fb6e7945ca8    c3                      ret                                                    [39;49m
[34;49m .. 1 { nl ; p (1) ; rtn = x ; }  case '2 [39;49m[33;40m{[39;49m[34;49m nl ; p (2) ; rtn = n ; }  case '3 { nl ; p (3) ; rtn = x ; }  case 3 { nl ; p (3) ; rtn = n ; }  ca .. [39;49m[32;49m
0x7fb6e7945ca9    e93e000000              jmp 0x7fb6e7945cec         	< C_Syntax.[34;49mcsMatchExWithReturn[39;49m+179[32;49m >[39;49m[39;49m
[34;49m .. { nl ; p (1) ; rtn = x ; }  case '2 { [39;49m[33;40mnl[39;49m[34;49m ; p (2) ; rtn = n ; }  case '3 { nl ; p (3) ; rtn = x ; }  case 3 { nl ; p (3) ; rtn = n ; }  case .. [39;49m[32;49m
0x7fb6e7945cae    49b8e08080892d560000    mov r8, 0x562d898080e0                                 [39;49m[32;49m
0x7fb6e7945cb8    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e7945cc2    49ffd1                  call r9                    	< Io.[34;49mnewline[39;49m : 0x0000562d898080e0[32;49m >[39;49m[39;49m
[34;49m ..  (1) ; rtn = x ; }  case '2 { nl ; p ([39;49m[33;40m2[39;49m[34;49m) ; rtn = n ; }  case '3 { nl ; p (3) ; rtn = x ; }  case 3 { nl ; p (3) ; rtn = n ; }  case 77 { nl .. [39;49m[32;49m
0x7fb6e7945cc5    48c7c002000000          mov rax, 0x2                                           [39;49m[32;49m
0x7fb6e7945ccc    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7945cd0    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ; p (1) ; rtn = x ; }  case '2 { nl ; [39;49m[33;40mp[39;49m[34;49m (2) ; rtn = n ; }  case '3 { nl ; p (3) ; rtn = x ; }  case 3 { nl ; p (3) ; rtn = n ; }  case 77 { .. [39;49m[32;49m
0x7fb6e7945cd3    49b9d9a593e7b67f0000    mov r9, 0x7fb6e793a5d9                                 [39;49m[32;49m
0x7fb6e7945cdd    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fb6e793a5d9[32;49m >[39;49m[39;49m
[34;49m .. = x ; }  case '2 { nl ; p (2) ; rtn = [39;49m[33;40mn[39;49m[34;49m ; }  case '3 { nl ; p (3) ; rtn = x ; }  case 3 { nl ; p (3) ; rtn = n ; }  case 77 { nl ; p (77) ; .. [39;49m[32;49m
0x7fb6e7945ce0    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. ; rtn = x ; }  case '2 { nl ; p (2) ; [39;49m[33;40mrtn[39;49m[34;49m = n ; }  case '3 { nl ; p (3) ; rtn = x ; }  case 3 { nl ; p (3) ; rtn = n ; }  case 77 { nl ; p  .. [39;49m[32;49m
0x7fb6e7945ce4    498d4f10                lea rcx, [r15+0x10]                                    [39;49m
[34;49m .. n = x ; }  case '2 { nl ; p (2) ; rtn [39;49m[33;40m=[39;49m[34;49m n ; }  case '3 { nl ; p (3) ; rtn = x ; }  case 3 { nl ; p (3) ; rtn = n ; }  case 77 { nl ; p (77) .. [39;49m[32;49m
0x7fb6e7945ce8    488901                  mov [rcx], rax                                         [39;49m
[34;49m .. ; }  case '2 { nl ; p (2) ; rtn = n ; [39;49m[33;40m}[39;49m[34;49m  case '3 { nl ; p (3) ; rtn = x ; }  case 3 { nl ; p (3) ; rtn = n ; }  case 77 { nl ; p (77) ; rtn .. [39;49m[32;49m
0x7fb6e7945ceb    c3                      ret                                                    [39;49m
[34;49m .. 2 { nl ; p (2) ; rtn = n ; }  case '3 [39;49m[33;40m{[39;49m[34;49m nl ; p (3) ; rtn = x ; }  case 3 { nl ; p (3) ; rtn = n ; }  case 77 { nl ; p (77) ; rtn = n ; }  c .. [39;49m[32;49m
0x7fb6e7945cec    e93e000000              jmp 0x7fb6e7945d2f         	< C_Syntax.[34;49mcsMatchExWithReturn[39;49m+246[32;49m >[39;49m[39;49m
[34;49m .. { nl ; p (2) ; rtn = n ; }  case '3 { [39;49m[33;40mnl[39;49m[34;49m ; p (3) ; rtn = x ; }  case 3 { nl ; p (3) ; rtn = n ; }  case 77 { nl ; p (77) ; rtn = n ; }  cas .. [39;49m[32;49m
0x7fb6e7945cf1    49b8e08080892d560000    mov r8, 0x562d898080e0                                 [39;49m[32;49m
0x7fb6e7945cfb    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e7945d05    49ffd1                  call r9                    	< Io.[34;49mnewline[39;49m : 0x0000562d898080e0[32;49m >[39;49m[39;49m
[34;49m ..  (2) ; rtn = n ; }  case '3 { nl ; p ([39;49m[33;40m3[39;49m[34;49m) ; rtn = x ; }  case 3 { nl ; p (3) ; rtn = n ; }  case 77 { nl ; p (77) ; rtn = n ; }  case 'seven .. [39;49m[32;49m
0x7fb6e7945d08    48c7c003000000          mov rax, 0x3                                           [39;49m[32;49m
0x7fb6e7945d0f    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7945d13    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ; p (2) ; rtn = n ; }  case '3 { nl ; [39;49m[33;40mp[39;49m[34;49m (3) ; rtn = x ; }  case 3 { nl ; p (3) ; rtn = n ; }  case 77 { nl ; p (77) ; rtn = n ; }  case 'se .. [39;49m[32;49m
0x7fb6e7945d16    49b9d9a593e7b67f0000    mov r9, 0x7fb6e793a5d9                                 [39;49m[32;49m
0x7fb6e7945d20    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fb6e793a5d9[32;49m >[39;49m[39;49m
[34;49m .. = n ; }  case '3 { nl ; p (3) ; rtn = [39;49m[33;40mx[39;49m[34;49m ; }  case 3 { nl ; p (3) ; rtn = n ; }  case 77 { nl ; p (77) ; rtn = n ; }  case 'seven { nl ; p ( .. [39;49m[32;49m
0x7fb6e7945d23    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m .. ; rtn = n ; }  case '3 { nl ; p (3) ; [39;49m[33;40mrtn[39;49m[34;49m = x ; }  case 3 { nl ; p (3) ; rtn = n ; }  case 77 { nl ; p (77) ; rtn = n ; }  case 'seven { nl .. [39;49m[32;49m
0x7fb6e7945d27    498d4f10                lea rcx, [r15+0x10]                                    [39;49m
[34;49m .. n = n ; }  case '3 { nl ; p (3) ; rtn [39;49m[33;40m=[39;49m[34;49m x ; }  case 3 { nl ; p (3) ; rtn = n ; }  case 77 { nl ; p (77) ; rtn = n ; }  case 'seven { nl ; p .. [39;49m[32;49m
0x7fb6e7945d2b    488901                  mov [rcx], rax                                         [39;49m
[34;49m .. ; }  case '3 { nl ; p (3) ; rtn = x ; [39;49m[33;40m}[39;49m[34;49m  case 3 { nl ; p (3) ; rtn = n ; }  case 77 { nl ; p (77) ; rtn = n ; }  case 'seven { nl ; p (7) ; .. [39;49m[32;49m
0x7fb6e7945d2e    c3                      ret                                                    [39;49m
[34;49m .. e '3 { nl ; p (3) ; rtn = x ; }  case [39;49m[33;40m3[39;49m[34;49m { nl ; p (3) ; rtn = n ; }  case 77 { nl ; p (77) ; rtn = n ; }  case 'seven { nl ; p (7) ; rtn = n .. [39;49m[32;49m
0x7fb6e7945d2f    48c7c003000000          mov rax, 0x3                                           [39;49m[32;49m
0x7fb6e7945d36    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7945d3a    498906                  mov [r14], rax                                         [39;49m
[34;49m .. '3 { nl ; p (3) ; rtn = x ; }  case 3 [39;49m[33;40m{[39;49m[34;49m nl ; p (3) ; rtn = n ; }  case 77 { nl ; p (77) ; rtn = n ; }  case 'seven { nl ; p (7) ; rtn = n ; .. [39;49m[32;49m
0x7fb6e7945d3d    e93e000000              jmp 0x7fb6e7945d80         	< C_Syntax.[34;49mcsMatchExWithReturn[39;49m+327[32;49m >[39;49m[39;49m
[34;49m ..  { nl ; p (3) ; rtn = x ; }  case 3 { [39;49m[33;40mnl[39;49m[34;49m ; p (3) ; rtn = n ; }  case 77 { nl ; p (77) ; rtn = n ; }  case 'seven { nl ; p (7) ; rtn = n ; } .. [39;49m[32;49m
0x7fb6e7945d42    49b8e08080892d560000    mov r8, 0x562d898080e0                                 [39;49m[32;49m
0x7fb6e7945d4c    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e7945d56    49ffd1                  call r9                    	< Io.[34;49mnewline[39;49m : 0x0000562d898080e0[32;49m >[39;49m[39;49m
[34;49m .. p (3) ; rtn = x ; }  case 3 { nl ; p ([39;49m[33;40m3[39;49m[34;49m) ; rtn = n ; }  case 77 { nl ; p (77) ; rtn = n ; }  case 'seven { nl ; p (7) ; rtn = n ; }  case ' .. [39;49m[32;49m
0x7fb6e7945d59    48c7c003000000          mov rax, 0x3                                           [39;49m[32;49m
0x7fb6e7945d60    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7945d64    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  ; p (3) ; rtn = x ; }  case 3 { nl ; [39;49m[33;40mp[39;49m[34;49m (3) ; rtn = n ; }  case 77 { nl ; p (77) ; rtn = n ; }  case 'seven { nl ; p (7) ; rtn = n ; }  cas .. [39;49m[32;49m
0x7fb6e7945d67    49b9d9a593e7b67f0000    mov r9, 0x7fb6e793a5d9                                 [39;49m[32;49m
0x7fb6e7945d71    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fb6e793a5d9[32;49m >[39;49m[39;49m
[34;49m ..  = x ; }  case 3 { nl ; p (3) ; rtn = [39;49m[33;40mn[39;49m[34;49m ; }  case 77 { nl ; p (77) ; rtn = n ; }  case 'seven { nl ; p (7) ; rtn = n ; }  case 'eight { nl  .. [39;49m[32;49m
0x7fb6e7945d74    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m ..  ; rtn = x ; }  case 3 { nl ; p (3) ; [39;49m[33;40mrtn[39;49m[34;49m = n ; }  case 77 { nl ; p (77) ; rtn = n ; }  case 'seven { nl ; p (7) ; rtn = n ; }  case 'eight .. [39;49m[32;49m
0x7fb6e7945d78    498d4f10                lea rcx, [r15+0x10]                                    [39;49m
[34;49m .. tn = x ; }  case 3 { nl ; p (3) ; rtn [39;49m[33;40m=[39;49m[34;49m n ; }  case 77 { nl ; p (77) ; rtn = n ; }  case 'seven { nl ; p (7) ; rtn = n ; }  case 'eight { n .. [39;49m[32;49m
0x7fb6e7945d7c    488901                  mov [rcx], rax                                         [39;49m
[34;49m ..  ; }  case 3 { nl ; p (3) ; rtn = n ; [39;49m[33;40m}[39;49m[34;49m  case 77 { nl ; p (77) ; rtn = n ; }  case 'seven { nl ; p (7) ; rtn = n ; }  case 'eight { nl ; p  .. [39;49m[32;49m
0x7fb6e7945d7f    c3                      ret                                                    [39;49m
[34;49m .. se 3 { nl ; p (3) ; rtn = n ; }  case [39;49m[33;40m77[39;49m[34;49m { nl ; p (77) ; rtn = n ; }  case 'seven { nl ; p (7) ; rtn = n ; }  case 'eight { nl ; p (8) ; rt .. [39;49m[32;49m
0x7fb6e7945d80    48c7c04d000000          mov rax, 0x4d                                          [39;49m[32;49m
0x7fb6e7945d87    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7945d8b    498906                  mov [r14], rax                                         [39;49m
[34;49m .. 3 { nl ; p (3) ; rtn = n ; }  case 77 [39;49m[33;40m{[39;49m[34;49m nl ; p (77) ; rtn = n ; }  case 'seven { nl ; p (7) ; rtn = n ; }  case 'eight { nl ; p (8) ; rtn = .. [39;49m[32;49m
0x7fb6e7945d8e    e93e000000              jmp 0x7fb6e7945dd1         	< C_Syntax.[34;49mcsMatchExWithReturn[39;49m+408[32;49m >[39;49m[39;49m
[34;49m .. { nl ; p (3) ; rtn = n ; }  case 77 { [39;49m[33;40mnl[39;49m[34;49m ; p (77) ; rtn = n ; }  case 'seven { nl ; p (7) ; rtn = n ; }  case 'eight { nl ; p (8) ; rtn = n .. [39;49m[32;49m
0x7fb6e7945d93    49b8e08080892d560000    mov r8, 0x562d898080e0                                 [39;49m[32;49m
0x7fb6e7945d9d    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e7945da7    49ffd1                  call r9                    	< Io.[34;49mnewline[39;49m : 0x0000562d898080e0[32;49m >[39;49m[39;49m
[34;49m ..  (3) ; rtn = n ; }  case 77 { nl ; p ([39;49m[33;40m77[39;49m[34;49m) ; rtn = n ; }  case 'seven { nl ; p (7) ; rtn = n ; }  case 'eight { nl ; p (8) ; rtn = n ; }  ca .. [39;49m[32;49m
0x7fb6e7945daa    48c7c04d000000          mov rax, 0x4d                                          [39;49m[32;49m
0x7fb6e7945db1    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7945db5    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ; p (3) ; rtn = n ; }  case 77 { nl ; [39;49m[33;40mp[39;49m[34;49m (77) ; rtn = n ; }  case 'seven { nl ; p (7) ; rtn = n ; }  case 'eight { nl ; p (8) ; rtn = n ; }  .. [39;49m[32;49m
0x7fb6e7945db8    49b9d9a593e7b67f0000    mov r9, 0x7fb6e793a5d9                                 [39;49m[32;49m
0x7fb6e7945dc2    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fb6e793a5d9[32;49m >[39;49m[39;49m
[34;49m ..  n ; }  case 77 { nl ; p (77) ; rtn = [39;49m[33;40mn[39;49m[34;49m ; }  case 'seven { nl ; p (7) ; rtn = n ; }  case 'eight { nl ; p (8) ; rtn = n ; }  case ( 'nine ) .. [39;49m[32;49m
0x7fb6e7945dc5    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m ..  rtn = n ; }  case 77 { nl ; p (77) ; [39;49m[33;40mrtn[39;49m[34;49m = n ; }  case 'seven { nl ; p (7) ; rtn = n ; }  case 'eight { nl ; p (8) ; rtn = n ; }  case ( ' .. [39;49m[32;49m
0x7fb6e7945dc9    498d4f10                lea rcx, [r15+0x10]                                    [39;49m
[34;49m ..  = n ; }  case 77 { nl ; p (77) ; rtn [39;49m[33;40m=[39;49m[34;49m n ; }  case 'seven { nl ; p (7) ; rtn = n ; }  case 'eight { nl ; p (8) ; rtn = n ; }  case ( 'nine .. [39;49m[32;49m
0x7fb6e7945dcd    488901                  mov [rcx], rax                                         [39;49m
[34;49m ..  }  case 77 { nl ; p (77) ; rtn = n ; [39;49m[33;40m}[39;49m[34;49m  case 'seven { nl ; p (7) ; rtn = n ; }  case 'eight { nl ; p (8) ; rtn = n ; }  case ( 'nine ) { n .. [39;49m[32;49m
0x7fb6e7945dd0    c3                      ret                                                    [39;49m
[34;49m .. l ; p (77) ; rtn = n ; }  case 'seven [39;49m[33;40m{[39;49m[34;49m nl ; p (7) ; rtn = n ; }  case 'eight { nl ; p (8) ; rtn = n ; }  case ( 'nine ) { nl ; ps ( n ) ;  .. [39;49m[32;49m
0x7fb6e7945dd1    e93e000000              jmp 0x7fb6e7945e14         	< C_Syntax.[34;49mcsMatchExWithReturn[39;49m+475[32;49m >[39;49m[39;49m
[34;49m .. ; p (77) ; rtn = n ; }  case 'seven { [39;49m[33;40mnl[39;49m[34;49m ; p (7) ; rtn = n ; }  case 'eight { nl ; p (8) ; rtn = n ; }  case ( 'nine ) { nl ; ps ( n ) ; p  .. [39;49m[32;49m
0x7fb6e7945dd6    49b8e08080892d560000    mov r8, 0x562d898080e0                                 [39;49m[32;49m
0x7fb6e7945de0    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e7945dea    49ffd1                  call r9                    	< Io.[34;49mnewline[39;49m : 0x0000562d898080e0[32;49m >[39;49m[39;49m
[34;49m ..  ; rtn = n ; }  case 'seven { nl ; p ([39;49m[33;40m7[39;49m[34;49m) ; rtn = n ; }  case 'eight { nl ; p (8) ; rtn = n ; }  case ( 'nine ) { nl ; ps ( n ) ; p (9) ; ps .. [39;49m[32;49m
0x7fb6e7945ded    48c7c007000000          mov rax, 0x7                                           [39;49m[32;49m
0x7fb6e7945df4    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7945df8    498906                  mov [r14], rax                                         [39;49m
[34;49m .. 77) ; rtn = n ; }  case 'seven { nl ; [39;49m[33;40mp[39;49m[34;49m (7) ; rtn = n ; }  case 'eight { nl ; p (8) ; rtn = n ; }  case ( 'nine ) { nl ; ps ( n ) ; p (9) ; .. [39;49m[32;49m
0x7fb6e7945dfb    49b9d9a593e7b67f0000    mov r9, 0x7fb6e793a5d9                                 [39;49m[32;49m
0x7fb6e7945e05    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fb6e793a5d9[32;49m >[39;49m[39;49m
[34;49m .. ; }  case 'seven { nl ; p (7) ; rtn = [39;49m[33;40mn[39;49m[34;49m ; }  case 'eight { nl ; p (8) ; rtn = n ; }  case ( 'nine ) { nl ; ps ( n ) ; p (9) ; ps ( "singleQ .. [39;49m[32;49m
0x7fb6e7945e08    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. n = n ; }  case 'seven { nl ; p (7) ; [39;49m[33;40mrtn[39;49m[34;49m = n ; }  case 'eight { nl ; p (8) ; rtn = n ; }  case ( 'nine ) { nl ; ps ( n ) ; p (9) ; ps ( "s .. [39;49m[32;49m
0x7fb6e7945e0c    498d4f10                lea rcx, [r15+0x10]                                    [39;49m
[34;49m .. n ; }  case 'seven { nl ; p (7) ; rtn [39;49m[33;40m=[39;49m[34;49m n ; }  case 'eight { nl ; p (8) ; rtn = n ; }  case ( 'nine ) { nl ; ps ( n ) ; p (9) ; ps ( "singl .. [39;49m[32;49m
0x7fb6e7945e10    488901                  mov [rcx], rax                                         [39;49m
[34;49m ..  case 'seven { nl ; p (7) ; rtn = n ; [39;49m[33;40m}[39;49m[34;49m  case 'eight { nl ; p (8) ; rtn = n ; }  case ( 'nine ) { nl ; ps ( n ) ; p (9) ; ps ( "singleQuote .. [39;49m[32;49m
0x7fb6e7945e13    c3                      ret                                                    [39;49m
[34;49m .. nl ; p (7) ; rtn = n ; }  case 'eight [39;49m[33;40m{[39;49m[34;49m nl ; p (8) ; rtn = n ; }  case ( 'nine ) { nl ; ps ( n ) ; p (9) ; ps ( "singleQuote1" ) ; rtn = x  .. [39;49m[32;49m
0x7fb6e7945e14    e93e000000              jmp 0x7fb6e7945e57         	< C_Syntax.[34;49mcsMatchExWithReturn[39;49m+542[32;49m >[39;49m[39;49m
[34;49m ..  ; p (7) ; rtn = n ; }  case 'eight { [39;49m[33;40mnl[39;49m[34;49m ; p (8) ; rtn = n ; }  case ( 'nine ) { nl ; ps ( n ) ; p (9) ; ps ( "singleQuote1" ) ; rtn = x ;  .. [39;49m[32;49m
0x7fb6e7945e19    49b8e08080892d560000    mov r8, 0x562d898080e0                                 [39;49m[32;49m
0x7fb6e7945e23    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e7945e2d    49ffd1                  call r9                    	< Io.[34;49mnewline[39;49m : 0x0000562d898080e0[32;49m >[39;49m[39;49m
[34;49m ..  ; rtn = n ; }  case 'eight { nl ; p ([39;49m[33;40m8[39;49m[34;49m) ; rtn = n ; }  case ( 'nine ) { nl ; ps ( n ) ; p (9) ; ps ( "singleQuote1" ) ; rtn = x ; }  case  .. [39;49m[32;49m
0x7fb6e7945e30    48c7c008000000          mov rax, 0x8                                           [39;49m[32;49m
0x7fb6e7945e37    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7945e3b    498906                  mov [r14], rax                                         [39;49m
[34;49m .. (7) ; rtn = n ; }  case 'eight { nl ; [39;49m[33;40mp[39;49m[34;49m (8) ; rtn = n ; }  case ( 'nine ) { nl ; ps ( n ) ; p (9) ; ps ( "singleQuote1" ) ; rtn = x ; }  ca .. [39;49m[32;49m
0x7fb6e7945e3e    49b9d9a593e7b67f0000    mov r9, 0x7fb6e793a5d9                                 [39;49m[32;49m
0x7fb6e7945e48    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fb6e793a5d9[32;49m >[39;49m[39;49m
[34;49m .. ; }  case 'eight { nl ; p (8) ; rtn = [39;49m[33;40mn[39;49m[34;49m ; }  case ( 'nine ) { nl ; ps ( n ) ; p (9) ; ps ( "singleQuote1" ) ; rtn = x ; }  case 'nine { nl  .. [39;49m[32;49m
0x7fb6e7945e4b    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. n = n ; }  case 'eight { nl ; p (8) ; [39;49m[33;40mrtn[39;49m[34;49m = n ; }  case ( 'nine ) { nl ; ps ( n ) ; p (9) ; ps ( "singleQuote1" ) ; rtn = x ; }  case 'nine .. [39;49m[32;49m
0x7fb6e7945e4f    498d4f10                lea rcx, [r15+0x10]                                    [39;49m
[34;49m .. n ; }  case 'eight { nl ; p (8) ; rtn [39;49m[33;40m=[39;49m[34;49m n ; }  case ( 'nine ) { nl ; ps ( n ) ; p (9) ; ps ( "singleQuote1" ) ; rtn = x ; }  case 'nine { n .. [39;49m[32;49m
0x7fb6e7945e53    488901                  mov [rcx], rax                                         [39;49m
[34;49m ..  case 'eight { nl ; p (8) ; rtn = n ; [39;49m[33;40m}[39;49m[34;49m  case ( 'nine ) { nl ; ps ( n ) ; p (9) ; ps ( "singleQuote1" ) ; rtn = x ; }  case 'nine { nl ; ps .. [39;49m[32;49m
0x7fb6e7945e56    c3                      ret                                                    [39;49m
[34;49m .. ; p (8) ; rtn = n ; }  case ( 'nine ) [39;49m[33;40m{[39;49m[34;49m nl ; ps ( n ) ; p (9) ; ps ( "singleQuote1" ) ; rtn = x ; }  case 'nine { nl ; ps ( n ) ; p (9) ; p .. [39;49m[32;49m
0x7fb6e7945e57    e974000000              jmp 0x7fb6e7945ed0         	< C_Syntax.[34;49mcsMatchExWithReturn[39;49m+663[32;49m >[39;49m[39;49m
[34;49m .. p (8) ; rtn = n ; }  case ( 'nine ) { [39;49m[33;40mnl[39;49m[34;49m ; ps ( n ) ; p (9) ; ps ( "singleQuote1" ) ; rtn = x ; }  case 'nine { nl ; ps ( n ) ; p (9) ; ps  .. [39;49m[32;49m
0x7fb6e7945e5c    49b8e08080892d560000    mov r8, 0x562d898080e0                                 [39;49m[32;49m
0x7fb6e7945e66    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e7945e70    49ffd1                  call r9                    	< Io.[34;49mnewline[39;49m : 0x0000562d898080e0[32;49m >[39;49m[39;49m
[34;49m .. n = n ; }  case ( 'nine ) { nl ; ps ( [39;49m[33;40mn[39;49m[34;49m ) ; p (9) ; ps ( "singleQuote1" ) ; rtn = x ; }  case 'nine { nl ; ps ( n ) ; p (9) ; ps ( "singleQ .. [39;49m[32;49m
0x7fb6e7945e73    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e7945e77    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7945e7b    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  ; rtn = n ; }  case ( 'nine ) { nl ; [39;49m[33;40mps[39;49m[34;49m ( n ) ; p (9) ; ps ( "singleQuote1" ) ; rtn = x ; }  case 'nine { nl ; ps ( n ) ; p (9) ; ps ( "si .. [39;49m[32;49m
0x7fb6e7945e7e    49b97da393e7b67f0000    mov r9, 0x7fb6e793a37d                                 [39;49m[32;49m
0x7fb6e7945e88    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fb6e793a37d[32;49m >[39;49m[39;49m
[34;49m ..   case ( 'nine ) { nl ; ps ( n ) ; p ([39;49m[33;40m9[39;49m[34;49m) ; ps ( "singleQuote1" ) ; rtn = x ; }  case 'nine { nl ; ps ( n ) ; p (9) ; ps ( "singleQuote2" )  .. [39;49m[32;49m
0x7fb6e7945e8b    48c7c009000000          mov rax, 0x9                                           [39;49m[32;49m
0x7fb6e7945e92    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7945e96    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ; }  case ( 'nine ) { nl ; ps ( n ) ; [39;49m[33;40mp[39;49m[34;49m (9) ; ps ( "singleQuote1" ) ; rtn = x ; }  case 'nine { nl ; ps ( n ) ; p (9) ; ps ( "singleQuote2" .. [39;49m[32;49m
0x7fb6e7945e99    49b9d9a593e7b67f0000    mov r9, 0x7fb6e793a5d9                                 [39;49m[32;49m
0x7fb6e7945ea3    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fb6e793a5d9[32;49m >[39;49m[39;49m
[34;49m .. nine ) { nl ; ps ( n ) ; p (9) ; ps ( [39;49m[33;40m"[39;49m[34;49msingleQuote1" ) ; rtn = x ; }  case 'nine { nl ; ps ( n ) ; p (9) ; ps ( "singleQuote2" ) ; rtn = x  .. [39;49m[32;49m
0x7fb6e7945ea6    48b84b5741e7b67f0000    mov rax, 0x7fb6e741574b    	[32;49m< string : '[39;49m[39;49msingleQuote1[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fb6e7945eb0    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7945eb4    498906                  mov [r14], rax                                         [39;49m
[34;49m .. e ( 'nine ) { nl ; ps ( n ) ; p (9) ; [39;49m[33;40mps[39;49m[34;49m ( "singleQuote1" ) ; rtn = x ; }  case 'nine { nl ; ps ( n ) ; p (9) ; ps ( "singleQuote2" ) ; rtn .. [39;49m[32;49m
0x7fb6e7945eb7    49b97da393e7b67f0000    mov r9, 0x7fb6e793a37d                                 [39;49m[32;49m
0x7fb6e7945ec1    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fb6e793a37d[32;49m >[39;49m[39;49m
[34;49m .. p (9) ; ps ( "singleQuote1" ) ; rtn = [39;49m[33;40mx[39;49m[34;49m ; }  case 'nine { nl ; ps ( n ) ; p (9) ; ps ( "singleQuote2" ) ; rtn = x ; }  case ( "nine" ) { nl .. [39;49m[32;49m
0x7fb6e7945ec4    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m .. n ) ; p (9) ; ps ( "singleQuote1" ) ; [39;49m[33;40mrtn[39;49m[34;49m = x ; }  case 'nine { nl ; ps ( n ) ; p (9) ; ps ( "singleQuote2" ) ; rtn = x ; }  case ( "nine"  .. [39;49m[32;49m
0x7fb6e7945ec8    498d4f10                lea rcx, [r15+0x10]                                    [39;49m
[34;49m .. ; p (9) ; ps ( "singleQuote1" ) ; rtn [39;49m[33;40m=[39;49m[34;49m x ; }  case 'nine { nl ; ps ( n ) ; p (9) ; ps ( "singleQuote2" ) ; rtn = x ; }  case ( "nine" ) {  .. [39;49m[32;49m
0x7fb6e7945ecc    488901                  mov [rcx], rax                                         [39;49m
[34;49m .. ) ; ps ( "singleQuote1" ) ; rtn = x ; [39;49m[33;40m}[39;49m[34;49m  case 'nine { nl ; ps ( n ) ; p (9) ; ps ( "singleQuote2" ) ; rtn = x ; }  case ( "nine" ) { nl ; p .. [39;49m[32;49m
0x7fb6e7945ecf    c3                      ret                                                    [39;49m
[34;49m .. leQuote1" ) ; rtn = x ; }  case 'nine [39;49m[33;40m{[39;49m[34;49m nl ; ps ( n ) ; p (9) ; ps ( "singleQuote2" ) ; rtn = x ; }  case ( "nine" ) { nl ; ps (n) ; p (9)  .. [39;49m[32;49m
0x7fb6e7945ed0    e974000000              jmp 0x7fb6e7945f49         	< C_Syntax.[34;49mcsMatchExWithReturn[39;49m+784[32;49m >[39;49m[39;49m
[34;49m .. Quote1" ) ; rtn = x ; }  case 'nine { [39;49m[33;40mnl[39;49m[34;49m ; ps ( n ) ; p (9) ; ps ( "singleQuote2" ) ; rtn = x ; }  case ( "nine" ) { nl ; ps (n) ; p (9) ;  .. [39;49m[32;49m
0x7fb6e7945ed5    49b8e08080892d560000    mov r8, 0x562d898080e0                                 [39;49m[32;49m
0x7fb6e7945edf    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e7945ee9    49ffd1                  call r9                    	< Io.[34;49mnewline[39;49m : 0x0000562d898080e0[32;49m >[39;49m[39;49m
[34;49m .. ; rtn = x ; }  case 'nine { nl ; ps ( [39;49m[33;40mn[39;49m[34;49m ) ; p (9) ; ps ( "singleQuote2" ) ; rtn = x ; }  case ( "nine" ) { nl ; ps (n) ; p (9) ; ps ( "doub .. [39;49m[32;49m
0x7fb6e7945eec    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e7945ef0    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7945ef4    498906                  mov [r14], rax                                         [39;49m
[34;49m .. 1" ) ; rtn = x ; }  case 'nine { nl ; [39;49m[33;40mps[39;49m[34;49m ( n ) ; p (9) ; ps ( "singleQuote2" ) ; rtn = x ; }  case ( "nine" ) { nl ; ps (n) ; p (9) ; ps (  .. [39;49m[32;49m
0x7fb6e7945ef7    49b97da393e7b67f0000    mov r9, 0x7fb6e793a37d                                 [39;49m[32;49m
0x7fb6e7945f01    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fb6e793a37d[32;49m >[39;49m[39;49m
[34;49m ..  ; }  case 'nine { nl ; ps ( n ) ; p ([39;49m[33;40m9[39;49m[34;49m) ; ps ( "singleQuote2" ) ; rtn = x ; }  case ( "nine" ) { nl ; ps (n) ; p (9) ; ps ( "doubleQuote"  .. [39;49m[32;49m
0x7fb6e7945f04    48c7c009000000          mov rax, 0x9                                           [39;49m[32;49m
0x7fb6e7945f0b    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7945f0f    498906                  mov [r14], rax                                         [39;49m
[34;49m .. = x ; }  case 'nine { nl ; ps ( n ) ; [39;49m[33;40mp[39;49m[34;49m (9) ; ps ( "singleQuote2" ) ; rtn = x ; }  case ( "nine" ) { nl ; ps (n) ; p (9) ; ps ( "doubleQuot .. [39;49m[32;49m
0x7fb6e7945f12    49b9d9a593e7b67f0000    mov r9, 0x7fb6e793a5d9                                 [39;49m[32;49m
0x7fb6e7945f1c    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fb6e793a5d9[32;49m >[39;49m[39;49m
[34;49m ..  'nine { nl ; ps ( n ) ; p (9) ; ps ( [39;49m[33;40m"[39;49m[34;49msingleQuote2" ) ; rtn = x ; }  case ( "nine" ) { nl ; ps (n) ; p (9) ; ps ( "doubleQuote" ) ; rtn =  .. [39;49m[32;49m
0x7fb6e7945f1f    48b87d5741e7b67f0000    mov rax, 0x7fb6e741577d    	[32;49m< string : '[39;49m[39;49msingleQuote2[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fb6e7945f29    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7945f2d    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  case 'nine { nl ; ps ( n ) ; p (9) ; [39;49m[33;40mps[39;49m[34;49m ( "singleQuote2" ) ; rtn = x ; }  case ( "nine" ) { nl ; ps (n) ; p (9) ; ps ( "doubleQuote" ) ; r .. [39;49m[32;49m
0x7fb6e7945f30    49b97da393e7b67f0000    mov r9, 0x7fb6e793a37d                                 [39;49m[32;49m
0x7fb6e7945f3a    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fb6e793a37d[32;49m >[39;49m[39;49m
[34;49m .. p (9) ; ps ( "singleQuote2" ) ; rtn = [39;49m[33;40mx[39;49m[34;49m ; }  case ( "nine" ) { nl ; ps (n) ; p (9) ; ps ( "doubleQuote" ) ; rtn = x ; }  }  p ( x - 103 ) ; .. [39;49m[32;49m
0x7fb6e7945f3d    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m .. n ) ; p (9) ; ps ( "singleQuote2" ) ; [39;49m[33;40mrtn[39;49m[34;49m = x ; }  case ( "nine" ) { nl ; ps (n) ; p (9) ; ps ( "doubleQuote" ) ; rtn = x ; }  }  p ( x - 1 .. [39;49m[32;49m
0x7fb6e7945f41    498d4f10                lea rcx, [r15+0x10]                                    [39;49m
[34;49m .. ; p (9) ; ps ( "singleQuote2" ) ; rtn [39;49m[33;40m=[39;49m[34;49m x ; }  case ( "nine" ) { nl ; ps (n) ; p (9) ; ps ( "doubleQuote" ) ; rtn = x ; }  }  p ( x - 103 ) .. [39;49m[32;49m
0x7fb6e7945f45    488901                  mov [rcx], rax                                         [39;49m
[34;49m .. ) ; ps ( "singleQuote2" ) ; rtn = x ; [39;49m[33;40m}[39;49m[34;49m  case ( "nine" ) { nl ; ps (n) ; p (9) ; ps ( "doubleQuote" ) ; rtn = x ; }  }  p ( x - 103 ) ; ret .. [39;49m[32;49m
0x7fb6e7945f48    c3                      ret                                                    [39;49m
[34;49m .. te2" ) ; rtn = x ; }  case ( "nine" ) [39;49m[33;40m{[39;49m[34;49m nl ; ps (n) ; p (9) ; ps ( "doubleQuote" ) ; rtn = x ; }  }  p ( x - 103 ) ; return rtn ; }  .. [39;49m[32;49m
0x7fb6e7945f49    e974000000              jmp 0x7fb6e7945fc2         	< C_Syntax.[34;49mcsMatchExWithReturn[39;49m+905[32;49m >[39;49m[39;49m
[34;49m .. 2" ) ; rtn = x ; }  case ( "nine" ) { [39;49m[33;40mnl[39;49m[34;49m ; ps (n) ; p (9) ; ps ( "doubleQuote" ) ; rtn = x ; }  }  p ( x - 103 ) ; return rtn ; }  .. [39;49m[32;49m
0x7fb6e7945f4e    49b8e08080892d560000    mov r8, 0x562d898080e0                                 [39;49m[32;49m
0x7fb6e7945f58    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e7945f62    49ffd1                  call r9                    	< Io.[34;49mnewline[39;49m : 0x0000562d898080e0[32;49m >[39;49m[39;49m
[34;49m .. n = x ; }  case ( "nine" ) { nl ; ps ([39;49m[33;40mn[39;49m[34;49m) ; p (9) ; ps ( "doubleQuote" ) ; rtn = x ; }  }  p ( x - 103 ) ; return rtn ; }  .. [39;49m[32;49m
0x7fb6e7945f65    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e7945f69    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7945f6d    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ; rtn = x ; }  case ( "nine" ) { nl ; [39;49m[33;40mps[39;49m[34;49m (n) ; p (9) ; ps ( "doubleQuote" ) ; rtn = x ; }  }  p ( x - 103 ) ; return rtn ; }  .. [39;49m[32;49m
0x7fb6e7945f70    49b97da393e7b67f0000    mov r9, 0x7fb6e793a37d                                 [39;49m[32;49m
0x7fb6e7945f7a    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fb6e793a37d[32;49m >[39;49m[39;49m
[34;49m .. }  case ( "nine" ) { nl ; ps (n) ; p ([39;49m[33;40m9[39;49m[34;49m) ; ps ( "doubleQuote" ) ; rtn = x ; }  }  p ( x - 103 ) ; return rtn ; }  .. [39;49m[32;49m
0x7fb6e7945f7d    48c7c009000000          mov rax, 0x9                                           [39;49m[32;49m
0x7fb6e7945f84    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7945f88    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  ; }  case ( "nine" ) { nl ; ps (n) ; [39;49m[33;40mp[39;49m[34;49m (9) ; ps ( "doubleQuote" ) ; rtn = x ; }  }  p ( x - 103 ) ; return rtn ; }  .. [39;49m[32;49m
0x7fb6e7945f8b    49b9d9a593e7b67f0000    mov r9, 0x7fb6e793a5d9                                 [39;49m[32;49m
0x7fb6e7945f95    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fb6e793a5d9[32;49m >[39;49m[39;49m
[34;49m .. "nine" ) { nl ; ps (n) ; p (9) ; ps ( [39;49m[33;40m"[39;49m[34;49mdoubleQuote" ) ; rtn = x ; }  }  p ( x - 103 ) ; return rtn ; }  .. [39;49m[32;49m
0x7fb6e7945f98    48b8bc5741e7b67f0000    mov rax, 0x7fb6e74157bc    	[32;49m< string : '[39;49m[39;49mdoubleQuote[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fb6e7945fa2    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7945fa6    498906                  mov [r14], rax                                         [39;49m
[34;49m .. se ( "nine" ) { nl ; ps (n) ; p (9) ; [39;49m[33;40mps[39;49m[34;49m ( "doubleQuote" ) ; rtn = x ; }  }  p ( x - 103 ) ; return rtn ; }  .. [39;49m[32;49m
0x7fb6e7945fa9    49b97da393e7b67f0000    mov r9, 0x7fb6e793a37d                                 [39;49m[32;49m
0x7fb6e7945fb3    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fb6e793a37d[32;49m >[39;49m[39;49m
[34;49m ..  p (9) ; ps ( "doubleQuote" ) ; rtn = [39;49m[33;40mx[39;49m[34;49m ; }  }  p ( x - 103 ) ; return rtn ; }  .. [39;49m[32;49m
0x7fb6e7945fb6    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m ..  (n) ; p (9) ; ps ( "doubleQuote" ) ; [39;49m[33;40mrtn[39;49m[34;49m = x ; }  }  p ( x - 103 ) ; return rtn ; }  .. [39;49m[32;49m
0x7fb6e7945fba    498d4f10                lea rcx, [r15+0x10]                                    [39;49m
[34;49m ..  ; p (9) ; ps ( "doubleQuote" ) ; rtn [39;49m[33;40m=[39;49m[34;49m x ; }  }  p ( x - 103 ) ; return rtn ; }  .. [39;49m[32;49m
0x7fb6e7945fbe    488901                  mov [rcx], rax                                         [39;49m
[34;49m .. 9) ; ps ( "doubleQuote" ) ; rtn = x ; [39;49m[33;40m}[39;49m[34;49m  }  p ( x - 103 ) ; return rtn ; }  .. [39;49m[32;49m
0x7fb6e7945fc1    c3                      ret                                                    [39;49m
[34;49m .. ; ps ( "doubleQuote" ) ; rtn = x ; }  [39;49m[33;40m}[39;49m[34;49m  p ( x - 103 ) ; return rtn ; }  .. [39;49m[32;49m
0x7fb6e7945fc2    c3                      ret                                                    [39;49m[32;49m
0x7fb6e7945fc3    48b8a89318e6b67f0000    mov rax, 0x7fb6e61893a8                                [39;49m[32;49m
0x7fb6e7945fcd    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7945fd1    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e7945fd4    49b8c03b7c892d560000    mov r8, 0x562d897c3bc0                                 [39;49m[32;49m
0x7fb6e7945fde    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e7945fe8    49ffd1                  call r9                    	< C compiler code >        [39;49m
[34;49m .. "doubleQuote" ) ; rtn = x ; }  }  p ( [39;49m[33;40mx[39;49m[34;49m - 103 ) ; return rtn ; }  .. [39;49m[32;49m
0x7fb6e7945feb    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m .. bleQuote" ) ; rtn = x ; }  }  p ( x - [39;49m[33;40m103[39;49m[34;49m ) ; return rtn ; }  .. [39;49m[32;49m
0x7fb6e7945fef    48c7c167000000          mov rcx, 0x67                                          [39;49m
[34;49m .. oubleQuote" ) ; rtn = x ; }  }  p ( x [39;49m[33;40m-[39;49m[34;49m 103 ) ; return rtn ; }  .. [39;49m[32;49m
0x7fb6e7945ff6    482bc1                  sub rax, rcx                                           [39;49m[32;49m
0x7fb6e7945ff9    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7945ffd    498906                  mov [r14], rax                                         [39;49m
[34;49m .. s ( "doubleQuote" ) ; rtn = x ; }  }  [39;49m[33;40mp[39;49m[34;49m ( x - 103 ) ; return rtn ; }  .. [39;49m[32;49m
0x7fb6e7946000    49b9d9a593e7b67f0000    mov r9, 0x7fb6e793a5d9                                 [39;49m[32;49m
0x7fb6e794600a    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fb6e793a5d9[32;49m >[39;49m[39;49m[32;49m
0x7fb6e794600d    498b4710                mov rax, [r15+0x10]                                    [39;49m
[34;49m ..  ; }  }  p ( x - 103 ) ; return rtn ; [39;49m[33;40m}[39;49m[34;49m  .. [39;49m[32;49m
0x7fb6e7946011    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e7946015    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m
[34;49m .. tn = x ; }  }  p ( x - 103 ) ; return [39;49m[33;40mrtn[39;49m[34;49m ; }  .. [39;49m[32;49m
0x7fb6e7946019    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e794601c    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'csMatchExWithReturn' :: codeSize = 995
Word : 0x00007fb6e6186ff8 :: Compiled at : 0x00007fb6e7945c39
 =============================
::> 'wdiss' was called at namespaces/test/control.csl 172.24 <::

 1 1008 1111
 7 1008 seven
 7 1008 seven
 3 1008 1111
 2 1008 2
 77 1008 77
 3 1008 3
 8 1008 eight
 nine 9 singleQuote1 1008 1111
 nine 9 singleQuote1 1008 1111
 1008 1111
 2 2 2 
last line should show : 2 2 2[34;49m 
starting lisp.csl
[39;49m[39;49m 7
[39;49m ( 1 2 ( 3 4 ) 5 6 ( 7 ( 8 ( 9 ) 10 11 ) ( ( ( ( 12 ) ) 121 ) ) 13 ( 14 ) ) 15 ( 16 ( 17 ( 18 ) ) ) )
[39;49m ( 1 2 ( 3 4 ) 5 6 ( 7 ( 8 ( 9 ) 10 11 ) ( ) ( ( ( ( 12 ) ) 121 ) 122 ) 13 ( 14 ( 141 ) ) 15 ( 16 ( 161 ( 162 ( 163 ) ) ) ( 17 ( 18 ) ) ) ) )
[39;49m ( 1 2 ( 3 4 ) 5 6 ( 7 ( 8 9 10 11 ) 12 13 14 ) 15 ( 16 ( 17 18 ) ) )
[39;49m 7
[39;49m 777
[39;49m f

 =============================
LispDefines.[34;49mf[39;49m <:> variable[34;49mf[39;49m <:> lambdaCalculus compiled word
SourceCode for LispDefines.[34;49mf[39;49m :> 
[34;49m( define f ( lambda x ( + x 1 2 ) ) )[39;49m
Source code file location of [34;49mf[39;49m : "namespaces/test/lisp.csl" : 28.36 :: we are now at : namespaces/test/lisp.csl : 29.18
Compiled with : optimizeOn, inlineOn, Jcc8 on
Debug Source Code on : BigNum off : Lisp on : Word Source Code on
starting at address : 0xe7946167 -- code size = 58 bytes
 -----------------------------
Word :: LispDefines.[34;49mf[39;49m : definition = 0x00007fb6e7946167 : disassembly at namespaces/test/lisp.csl : 29.18 :[32;49m
0x7fb6e7946167    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fb6e794616b    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e794616f    4981c608000000          add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7946176    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e794617a    48c7c101000000          mov rcx, 0x1                                           [39;49m[32;49m
0x7fb6e7946181    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fb6e7946184    48c7c102000000          mov rcx, 0x2                                           [39;49m[32;49m
0x7fb6e794618b    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fb6e794618e    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7946192    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e7946195    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e7946199    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e794619d    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e79461a0    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'f' :: codeSize = 57
Word : 0x00007fb6e7656808 :: Compiled at : 0x00007fb6e7946167
 =============================
::> 'wdiss' was called at namespaces/test/lisp.csl 29.18 <::
[39;49m 7
[39;49m 7
[39;49m 7
[39;49m 777
[39;49m 7
[39;49m 77
[39;49m 77
[39;49m 77
[39;49m 77
[39;49m 77
[39;49m 77
[39;49m 77
[39;49m x
[39;49m 7
[39;49m 7
[39;49m f1
[39;49m 7
[39;49m 7
[39;49m 7
[39;49m f4
[39;49m zs1[39;49m abc[39;49m
[39;49m zs1
[39;49m f3
[39;49m 13
[39;49m f4
[39;49m 77
[39;49m zs1
[39;49m 7
[39;49m 7
[39;49m 7
[39;49m 7
[39;49m 7
[39;49m 11
 
 cond :: should show 7 7 7 11
[39;49m g
[39;49m h
[39;49m 7
[39;49m 7
[39;49m 7
[39;49m 7
[39;49m 7
[39;49m 7
[39;49m 7
[39;49m h1
[39;49m 7
[39;49m 7
[39;49m 7
[39;49m 7
[39;49m 7
[39;49m 7
[39;49m 7
[39;49m 7
[39;49m 77
[39;49m 77
[39;49m pd
[39;49m 7
[34;49m 
starting BigNum
[39;49m[39;49m g
[39;49m h
[39;49m1.0000000000000000
[39;49m-1.0000000000000000
[39;49m-2.0000000000000000
[39;49m0.3333358764648438
[39;49m3.0000000000000000
[39;49m7.0000000000000000
[39;49m7.0000000000000000
[34;49m 
ending BigNum
[39;49m[39;49m a
[39;49m b
[39;49m ( 3 4 1 2 )
[39;49m ( a b 1 2 )
[39;49m x
[39;49m ( x ( 3 4 1 2 ) ( 3 4 1 2 ) 3 4 1 2 )
[39;49m ( x x x x )
[39;49m ( x x x 3 4 1 2 )
[39;49m y
[39;49m ( y ( x ( 3 4 1 2 ) ( 3 4 1 2 ) 3 4 1 2 ) ( x ( 3 4 1 2 ) ( 3 4 1 2 ) 3 4 1 2 ) x ( 3 4 1 2 ) ( 3 4 1 2 ) 3 4 1 2 )
[39;49m ( y y y y )
[39;49m ( y y y x ( 3 4 1 2 ) ( 3 4 1 2 ) 3 4 1 2 )
[34;49m 
lisp test
[39;49m namespaces/test/lisp.csl 149.30[39;49m a
[39;49m b
[39;49m y
[39;49m x
[39;49m y
[39;49m ( x x x 1 2 3 4 5 6 7 8 9 y )
[39;49m ( 1 2 ( 3 4 ) 5 6 ( 7 ( 8 ( 9 ) 10 11 ) ( ( ( ( 12 ) ) 121 ) ) 13 ( 14 ) ) 15 ( 16 ( 17 ( 18 ) ) ) )
[39;49m ( 1 2 ( 3 4 ) 5 6 ( 7 ( 8 9 10 11 ) 12 13 14 ) 15 ( 16 ( 17 18 ) ) )
[39;49m 7
[39;49m 7
[39;49m x
[39;49m ( 1 2 3 x )
[39;49m ( 1 2 3 ( 7 8 9 47 ) )
[39;49m ( 1 2 3 ( 7 8 9 47 ) )
[39;49m ( 1 2 3 7 8 9 47 )
[39;49m 77
[39;49m q1x
[39;49m q2
[39;49m 7
[39;49m q3
[39;49m q4
[39;49m q2
[39;49m 77
[39;49m 7
[39;49m yfac
[39;49m 3628800
[39;49m 5040
[39;49m fibc

 =============================
LispDefines.[34;49mfibc[39;49m <:> variable[34;49mfibc[39;49m <:> lambdaCalculus compiled word
SourceCode for LispDefines.[34;49mfibc[39;49m :> 
[34;49m(define fibc (lambda ( n ) (ifElse (< n 2) n (+ (fibc (- n 1)) (fibc (- n 2))))))[39;49m
Source code file location of [34;49mfibc[39;49m : "namespaces/test/lisp.csl" : 182.80 :: we are now at : namespaces/test/lisp.csl : 183.21
Compiled with : optimizeOn, inlineOn, Jcc8 on
Debug Source Code on : BigNum off : Lisp on : Word Source Code on
starting at address : 0xe7946358 -- code size = 126 bytes
 -----------------------------
Word :: LispDefines.[34;49mfibc[39;49m : definition = 0x00007fb6e7946358 : disassembly at namespaces/test/lisp.csl : 183.21 :[32;49m
0x7fb6e7946358    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fb6e794635c    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e7946360    4981c608000000          add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7946367    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e794636b    4883f802                cmp rax, 0x2                                           [39;49m[32;49m
0x7fb6e794636f    7d10                    jge 0xe7946381                                         [39;49m[32;49m
0x7fb6e7946371    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e7946375    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7946379    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e794637c    e949000000              jmp 0x7fb6e79463ca         	< LispDefines.[34;49mfibc[39;49m+114[32;49m >[39;49m[39;49m[32;49m
0x7fb6e7946381    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e7946385    48c7c101000000          mov rcx, 0x1                                           [39;49m[32;49m
0x7fb6e794638c    482bc1                  sub rax, rcx                                           [39;49m[32;49m
0x7fb6e794638f    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7946393    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e7946396    e8bdffffff              call 0x7fb6e7946358        	< LispDefines.[34;49mfibc[39;49m : 0x00007fb6e7946358[32;49m >[39;49m[39;49m[32;49m
0x7fb6e794639b    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e794639f    48c7c102000000          mov rcx, 0x2                                           [39;49m[32;49m
0x7fb6e79463a6    482bc1                  sub rax, rcx                                           [39;49m[32;49m
0x7fb6e79463a9    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e79463ad    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e79463b0    e8a3ffffff              call 0x7fb6e7946358        	< LispDefines.[34;49mfibc[39;49m : 0x00007fb6e7946358[32;49m >[39;49m[39;49m[32;49m
0x7fb6e79463b5    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fb6e79463b8    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fb6e79463bc    4983ee10                sub r14, 0x10                                          [39;49m[32;49m
0x7fb6e79463c0    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fb6e79463c3    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e79463c7    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e79463ca    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e79463ce    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e79463d2    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e79463d5    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'fibc' :: codeSize = 125
Word : 0x00007fb6e5f06848 :: Compiled at : 0x00007fb6e7946358
 =============================
::> 'wdiss' was called at namespaces/test/lisp.csl 183.21 <::
 
fibc 20 = [39;49m 6765
 11 7[39;49m

DataStack at : [34;49mnamespaces/test/lisp.csl : 189.80[39;49m :
DataStack depth =   3 : Dsp (R14) = Top = 0x00007fb6e7cd3a58, InitialTos = 0x00007fb6e7cd3a40, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fb6e7cd3a58 > = 0x0000000000000005	
  DataStack   [  -1 ] < 0x00007fb6e7cd3a50 > = 0x0000000000000005	
  DataStack   [  -2 ] < 0x00007fb6e7cd3a48 > = 0x0000000000000005	
 7[39;49m
 11[39;49m
 11 7
 =============================
Root.[34;49mhioo[39;49m <:> csl compiled word
SourceCode for Root.[34;49mhioo[39;49m :> 
[34;49m( :: : hioo 3 4 + dup p ; : hio 5 6 + dup p ; hio hioo )[39;49m
Source code file location of [34;49mhioo[39;49m : "namespaces/test/lisp.csl" : 189.55 :: we are now at : namespaces/test/lisp.csl : 191.21
Compiled with : optimizeOn, inlineOn, Jcc8 on
Debug Source Code on : BigNum off : Lisp on : Word Source Code on
starting at address : 0xe79463ea -- code size = 32 bytes
TypeSignature : 
 -----------------------------
Word :: Root.[34;49mhioo[39;49m : definition = 0x00007fb6e79463ea : disassembly at namespaces/test/lisp.csl : 191.21 :
[34;49m ..                           ( :: : hioo [39;49m[33;40m3[39;49m[34;49m 4 + dup p ; : hio 5 6 + dup p ; hio hioo ) .. [39;49m[32;49m
0x7fb6e79463ea    48c7c007000000          mov rax, 0x7                                           [39;49m[32;49m
0x7fb6e79463f1    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fb6e79463f5    498906                  mov [r14], rax                                         [39;49m
[34;49m ..                     ( :: : hioo 3 4 + [39;49m[33;40mdup[39;49m[34;49m p ; : hio 5 6 + dup p ; hio hioo ) .. [39;49m[32;49m
0x7fb6e79463f8    498946f8                mov [r14-0x8], rax                                     [39;49m
[34;49m ..                 ( :: : hioo 3 4 + dup [39;49m[33;40mp[39;49m[34;49m ; : hio 5 6 + dup p ; hio hioo ) .. [39;49m[32;49m
0x7fb6e79463fc    49b944a493e7b67f0000    mov r9, 0x7fb6e793a444                                 [39;49m
[34;49m ..                       ( :: : hioo 3 4 [39;49m[33;40m+[39;49m[34;49m dup p ; : hio 5 6 + dup p ; hio hioo ) .. [39;49m[32;49m
0x7fb6e7946406    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fb6e793a444[32;49m >[39;49m[39;49m[32;49m
0x7fb6e7946409    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'hioo' :: codeSize = 31
Word : 0x00007fb6e61a32d8 :: Compiled at : 0x00007fb6e79463ea
 =============================
::> 'wdiss' was called at namespaces/test/lisp.csl 191.21 <::

 =============================
Root.[34;49mhio[39;49m <:> csl compiled word
SourceCode for Root.[34;49mhio[39;49m :> 
[34;49m( :: : hioo 3 4 + dup p ; : hio 5 6 + dup p ; hio hioo )[39;49m
Source code file location of [34;49mhio[39;49m : "namespaces/test/lisp.csl" : 189.55 :: we are now at : namespaces/test/lisp.csl : 192.20
Compiled with : optimizeOn, inlineOn, Jcc8 on
Debug Source Code on : BigNum off : Lisp on : Word Source Code on
starting at address : 0xe794641e -- code size = 32 bytes
TypeSignature : 
 -----------------------------
Word :: Root.[34;49mhio[39;49m : definition = 0x00007fb6e794641e : disassembly at namespaces/test/lisp.csl : 192.20 :
[34;49m ..       ( :: : hioo 3 4 + dup p ; : hio [39;49m[33;40m5[39;49m[34;49m 6 + dup p ; hio hioo ) .. [39;49m[32;49m
0x7fb6e794641e    48c7c00b000000          mov rax, 0xb                                           [39;49m[32;49m
0x7fb6e7946425    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fb6e7946429    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ( :: : hioo 3 4 + dup p ; : hio 5 6 + [39;49m[33;40mdup[39;49m[34;49m p ; hio hioo ) .. [39;49m[32;49m
0x7fb6e794642c    498946f8                mov [r14-0x8], rax                                     [39;49m
[34;49m( :: : hioo 3 4 + dup p ; : hio 5 6 + dup [39;49m[33;40mp[39;49m[34;49m ; hio hioo ) .. [39;49m[32;49m
0x7fb6e7946430    49b944a493e7b67f0000    mov r9, 0x7fb6e793a444                                 [39;49m
[34;49m ..   ( :: : hioo 3 4 + dup p ; : hio 5 6 [39;49m[33;40m+[39;49m[34;49m dup p ; hio hioo ) .. [39;49m[32;49m
0x7fb6e794643a    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fb6e793a444[32;49m >[39;49m[39;49m[32;49m
0x7fb6e794643d    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'hio' :: codeSize = 31
Word : 0x00007fb6e61a39b8 :: Compiled at : 0x00007fb6e794641e
 =============================
::> 'wdiss' was called at namespaces/test/lisp.csl 192.20 <::

 =============================
C.[34;49mbexp43[39;49m <:> csl compiled word
SourceCode for C.[34;49mbexp43[39;49m :> 
[34;49m: bexp43 ( n ) { n @ 1 > } { n @ n @ -- bexp43 * } { 1 } ifElse ; [39;49m
Source code file location of [34;49mbexp43[39;49m : "namespaces/test/lisp.csl" : 195.2 :: we are now at : namespaces/test/lisp.csl : 196.19
Compiled with : optimizeOn, inlineOn, Jcc8 on
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xe7946443 -- code size = 108 bytes
TypeSignature : 
 -----------------------------
Word :: C.[34;49mbexp43[39;49m : definition = 0x00007fb6e7946443 : disassembly at namespaces/test/lisp.csl : 196.19 :
[34;49m ..                                     : [39;49m[33;40mbexp43[39;49m[34;49m ( n ) { n @ 1 > } { n @ n @ -- bexp43 * } { 1 } ifElse ;  .. [39;49m[32;49m
0x7fb6e7946443    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fb6e7946447    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e794644b    4981c608000000          add r14, 0x8                                           [39;49m
[34;49m ..                      : bexp43 ( n ) { [39;49m[33;40mn[39;49m[34;49m @ 1 > } { n @ n @ -- bexp43 * } { 1 } ifElse ;  .. [39;49m[32;49m
0x7fb6e7946452    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m ..                : bexp43 ( n ) { n @ 1 [39;49m[33;40m>[39;49m[34;49m } { n @ n @ -- bexp43 * } { 1 } ifElse ;  .. [39;49m[32;49m
0x7fb6e7946456    4883f801                cmp rax, 0x1                                           [39;49m[32;49m
0x7fb6e794645a    7e39                    jle 0xe7946495                                         [39;49m
[34;49m ..          : bexp43 ( n ) { n @ 1 > } { [39;49m[33;40mn[39;49m[34;49m @ n @ -- bexp43 * } { 1 } ifElse ;  .. [39;49m[32;49m
0x7fb6e794645c    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e7946460    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7946464    498906                  mov [r14], rax                                         [39;49m
[34;49m ..      : bexp43 ( n ) { n @ 1 > } { n @ [39;49m[33;40mn[39;49m[34;49m @ -- bexp43 * } { 1 } ifElse ;  .. [39;49m[32;49m
0x7fb6e7946467    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m ..  : bexp43 ( n ) { n @ 1 > } { n @ n @ [39;49m[33;40m--[39;49m[34;49m bexp43 * } { 1 } ifElse ;  .. [39;49m[32;49m
0x7fb6e794646b    48ffc8                  dec rax                                                [39;49m
[34;49m ..            : bexp43 ( n ) { n @ 1 > } [39;49m[33;40m{[39;49m[34;49m n @ n @ -- bexp43 * } { 1 } ifElse ;  .. [39;49m[32;49m
0x7fb6e794646e    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7946472    498906                  mov [r14], rax                                         [39;49m
[34;49m  : bexp43 ( n ) { n @ 1 > } { n @ n @ -- [39;49m[33;40mbexp43[39;49m[34;49m * } { 1 } ifElse ;  .. [39;49m[32;49m
0x7fb6e7946475    e8c9ffffff              call 0x7fb6e7946443        	< C.[34;49mbexp43[39;49m : 0x00007fb6e7946443[32;49m >[39;49m[39;49m[32;49m
0x7fb6e794647a    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fb6e794647d    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fb6e7946481    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m .. ( n ) { n @ 1 > } { n @ n @ -- bexp43 [39;49m[33;40m*[39;49m[34;49m } { 1 } ifElse ; [39;49m[32;49m
0x7fb6e7946485    480fafc1                imul rax, rcx                                          [39;49m[32;49m
0x7fb6e7946489    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e794648d    498906                  mov [r14], rax                                         [39;49m
[34;49m .. n ) { n @ 1 > } { n @ n @ -- bexp43 * [39;49m[33;40m}[39;49m[34;49m { 1 } ifElse ; [39;49m[32;49m
0x7fb6e7946490    e90e000000              jmp 0x7fb6e79464a3         	< C.[34;49mbexp43[39;49m+96[32;49m >[39;49m[39;49m
[34;49m .. { n @ 1 > } { n @ n @ -- bexp43 * } { [39;49m[33;40m1[39;49m[34;49m } ifElse ; [39;49m[32;49m
0x7fb6e7946495    48c7c001000000          mov rax, 0x1                                           [39;49m[32;49m
0x7fb6e794649c    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e79464a0    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  { n @ n @ -- bexp43 * } { 1 } ifElse [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fb6e79464a3    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e79464a7    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e79464ab    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e79464ae    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'bexp43' :: codeSize = 107
Word : 0x00007fb6e61a4098 :: Compiled at : 0x00007fb6e7946443
 =============================
::> 'wdiss' was called at namespaces/test/lisp.csl 196.19 <::
 C : bexp43_assert  : ok

 5040[39;49m

 =============================
C.[34;49mbexp44[39;49m <:> csl compiled word
SourceCode for C.[34;49mbexp44[39;49m :> 
[34;49m( :: C : bexp44 ( n ) { n @ 1 > } { n @ n @ -- bexp44 * } { 1 } ifElse ; )[39;49m
Source code file location of [34;49mbexp44[39;49m : "namespaces/test/lisp.csl" : 201.73 :: we are now at : namespaces/test/lisp.csl : 202.23
Compiled with : optimizeOn, inlineOn, Jcc8 on
Debug Source Code on : BigNum off : Lisp on : Word Source Code on
starting at address : 0xe79464b4 -- code size = 108 bytes
TypeSignature : 
 -----------------------------
Word :: C.[34;49mbexp44[39;49m : definition = 0x00007fb6e79464b4 : disassembly at namespaces/test/lisp.csl : 202.23 :
[34;49m ..  n @ -- bexp44 * } { 1 } ifElse ; )[39;49m[33;40m([39;49m[34;49m[39;49m[32;49m
0x7fb6e79464b4    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fb6e79464b8    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e79464bc    4981c608000000          add r14, 0x8                                           [39;49m
[34;49m ..               ( :: C : bexp44 ( n ) { [39;49m[33;40mn[39;49m[34;49m @ 1 > } { n @ n @ -- bexp44 * } { 1 } ifElse ; ) .. [39;49m[32;49m
0x7fb6e79464c3    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m ..         ( :: C : bexp44 ( n ) { n @ 1 [39;49m[33;40m>[39;49m[34;49m } { n @ n @ -- bexp44 * } { 1 } ifElse ; ) .. [39;49m[32;49m
0x7fb6e79464c7    4883f801                cmp rax, 0x1                                           [39;49m[32;49m
0x7fb6e79464cb    7e39                    jle 0xe7946506                                         [39;49m
[34;49m ..   ( :: C : bexp44 ( n ) { n @ 1 > } { [39;49m[33;40mn[39;49m[34;49m @ n @ -- bexp44 * } { 1 } ifElse ; ) .. [39;49m[32;49m
0x7fb6e79464cd    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e79464d1    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e79464d5    498906                  mov [r14], rax                                         [39;49m
[34;49m  ( :: C : bexp44 ( n ) { n @ 1 > } { n @ [39;49m[33;40mn[39;49m[34;49m @ -- bexp44 * } { 1 } ifElse ; ) .. [39;49m[32;49m
0x7fb6e79464d8    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m ..  : bexp44 ( n ) { n @ 1 > } { n @ n @ [39;49m[33;40m--[39;49m[34;49m bexp44 * } { 1 } ifElse ; )[39;49m[32;49m
0x7fb6e79464dc    48ffc8                  dec rax                                                [39;49m
[34;49m ..     ( :: C : bexp44 ( n ) { n @ 1 > } [39;49m[33;40m{[39;49m[34;49m n @ n @ -- bexp44 * } { 1 } ifElse ; ) .. [39;49m[32;49m
0x7fb6e79464df    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e79464e3    498906                  mov [r14], rax                                         [39;49m
[34;49m .. bexp44 ( n ) { n @ 1 > } { n @ n @ -- [39;49m[33;40mbexp44[39;49m[34;49m * } { 1 } ifElse ; )[39;49m[32;49m
0x7fb6e79464e6    e8c9ffffff              call 0x7fb6e79464b4        	< C.[34;49mbexp44[39;49m : 0x00007fb6e79464b4[32;49m >[39;49m[39;49m[32;49m
0x7fb6e79464eb    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fb6e79464ee    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fb6e79464f2    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m .. ( n ) { n @ 1 > } { n @ n @ -- bexp44 [39;49m[33;40m*[39;49m[34;49m } { 1 } ifElse ; )[39;49m[32;49m
0x7fb6e79464f6    480fafc1                imul rax, rcx                                          [39;49m[32;49m
0x7fb6e79464fa    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e79464fe    498906                  mov [r14], rax                                         [39;49m
[34;49m .. n ) { n @ 1 > } { n @ n @ -- bexp44 * [39;49m[33;40m}[39;49m[34;49m { 1 } ifElse ; )[39;49m[32;49m
0x7fb6e7946501    e90e000000              jmp 0x7fb6e7946514         	< C.[34;49mbexp44[39;49m+96[32;49m >[39;49m[39;49m
[34;49m .. { n @ 1 > } { n @ n @ -- bexp44 * } { [39;49m[33;40m1[39;49m[34;49m } ifElse ; )[39;49m[32;49m
0x7fb6e7946506    48c7c001000000          mov rax, 0x1                                           [39;49m[32;49m
0x7fb6e794650d    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7946511    498906                  mov [r14], rax                                         [39;49m
[34;49m .. @ 1 > } { n @ n @ -- bexp44 * } { 1 } [39;49m[33;40mifElse[39;49m[34;49m ; )[39;49m[32;49m
0x7fb6e7946514    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e7946518    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e794651c    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e794651f    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'bexp44' :: codeSize = 107
Word : 0x00007fb6e61a61e8 :: Compiled at : 0x00007fb6e79464b4
 =============================
::> 'wdiss' was called at namespaces/test/lisp.csl 202.23 <::
 C : bexp43_assert  : ok

 5040
DataStack at : [34;49mnamespaces/test/lisp.csl : 205.2[39;49m :
DataStack depth =   3 : Dsp (R14) = Top = 0x00007fb6e7cd3a58, InitialTos = 0x00007fb6e7cd3a40, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fb6e7cd3a58 > = 0x0000000000000005	
  DataStack   [  -1 ] < 0x00007fb6e7cd3a50 > = 0x0000000000000005	
  DataStack   [  -2 ] < 0x00007fb6e7cd3a48 > = 0x0000000000000005	
 goedel3 ::  
 goedel3 ::  140423540604454 2 goedel3_assert1  : ok

 0 7 goedel3_assert2  : ok

 goedel3_assert4  : ok

 140423544779669 7 goedel3_assert5  : ok

 9 
goedel3 output should read (after ignoring _asserts) : 
'junk' 2 'junk' 7 'junk' 7 9
 =============================
Root.[34;49mgoedel6[39;49m <:> csl compiled word
SourceCode for Root.[34;49mgoedel6[39;49m :> 
[34;49m( :: : goedel6 (| n ) "\n goedel6 :: " ps n 9 = { (| n ) n @ p n 2 = n @ dup p 2 "goedel6_1_assert" assert { (| n ) n @ p n 3 = n @ 4 + dup p 7 "goedel6_2_assert" assert } ix n @ 6 + 8 "goedel6_3_assert" assert } ix { (| n ) n @ p n 3 = n dup @ 4 + = n @ dup p 7 "goedel6_4_assert" assert } ix n @ dup p return tos ; ".I" typeSignature ' goedel6 find wdiss 9 goedel6 "goedel6_0_assert" assert "\ngoedel6 output should read (after ignoring _asserts) : \n 'junk' 2 'junk' 7 'junk' 7 9" ps )[39;49m
Source code file location of [34;49mgoedel6[39;49m : "namespaces/test/lisp.csl" : 252.0 :: we are now at : namespaces/test/lisp.csl : 252.1
Compiled with : optimizeOn, inlineOn, Jcc8 on
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xe7946762 -- code size = 568 bytes
TypeSignature : -> Integer 
 -----------------------------
Word :: Root.[34;49mgoedel6[39;49m : definition = 0x00007fb6e7946762 : disassembly at namespaces/test/lisp.csl : 252.1 :
[34;49m ..  assert { (| n ) n @ p n 3 = n @ 4 + d[39;49m[33;40m([39;49m[34;49mp p 7 "goedel6_2_assert" assert } ix n @ 6 + 8 "goedel6_3_assert" assert  } ix { (| n )  n @ p  n 3  .. [39;49m[32;49m
0x7fb6e7946762    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fb6e7946766    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e794676a    4981c628000000          add r14, 0x28                                          [39;49m
[34;49m ..               ( ::  : goedel6 (| n )  [39;49m[33;40m"\n goedel6 :: "[39;49m[34;49m ps  n 9 = {  (| n ) n @ p n 2 = n @ dup p 2 "goedel6_1_assert" assert { (| n ) n @ p .. [39;49m[32;49m
0x7fb6e7946771    48b83b8841e7b67f0000    mov rax, 0x7fb6e741883b    	[32;49m< string : '[39;49m[39;49m\n goedel6 :: [39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fb6e794677b    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e794677f    498906                  mov [r14], rax                                         [39;49m
[34;49m ( ::  : goedel6 (| n )  "\n goedel6 :: " [39;49m[33;40mps[39;49m[34;49m  n 9 = {  (| n ) n @ p n 2 = n @ dup p 2 "goedel6_1_assert" assert { (| n ) n @ p n 3 = n @ 4 + du .. [39;49m[32;49m
0x7fb6e7946782    49b97da393e7b67f0000    mov r9, 0x7fb6e793a37d                                 [39;49m[32;49m
0x7fb6e794678c    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fb6e793a37d[32;49m >[39;49m[39;49m
[34;49m ..  goedel6 (| n )  "\n goedel6 :: " ps  [39;49m[33;40mn[39;49m[34;49m 9 = {  (| n ) n @ p n 2 = n @ dup p 2 "goedel6_1_assert" assert { (| n ) n @ p n 3 = n @ 4 + dup p  .. [39;49m[32;49m
0x7fb6e794678f    498d4708                lea rax, [r15+0x8]                                     [39;49m
[34;49m .. oedel6 (| n )  "\n goedel6 :: " ps  n [39;49m[33;40m9[39;49m[34;49m = {  (| n ) n @ p n 2 = n @ dup p 2 "goedel6_1_assert" assert { (| n ) n @ p n 3 = n @ 4 + dup p 7  .. [39;49m[32;49m
0x7fb6e7946793    48c7c109000000          mov rcx, 0x9                                           [39;49m
[34;49m .. del6 (| n )  "\n goedel6 :: " ps  n 9 [39;49m[33;40m=[39;49m[34;49m {  (| n ) n @ p n 2 = n @ dup p 2 "goedel6_1_assert" assert { (| n ) n @ p n 3 = n @ 4 + dup p 7 "g .. [39;49m[32;49m
0x7fb6e794679a    488908                  mov [rax], rcx                                         [39;49m
[34;49m ..  "\n goedel6 :: " ps  n 9 = {  (| n ) [39;49m[33;40mn[39;49m[34;49m @ p n 2 = n @ dup p 2 "goedel6_1_assert" assert { (| n ) n @ p n 3 = n @ 4 + dup p 7 "goedel6_2_ass .. [39;49m[32;49m
0x7fb6e794679d    498b4710                mov rax, [r15+0x10]                                    [39;49m[32;49m
0x7fb6e79467a1    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e79467a5    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  goedel6 :: " ps  n 9 = {  (| n ) n @ [39;49m[33;40mp[39;49m[34;49m n 2 = n @ dup p 2 "goedel6_1_assert" assert { (| n ) n @ p n 3 = n @ 4 + dup p 7 "goedel6_2_assert" .. [39;49m[32;49m
0x7fb6e79467a8    49b944a493e7b67f0000    mov r9, 0x7fb6e793a444                                 [39;49m[32;49m
0x7fb6e79467b2    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fb6e793a444[32;49m >[39;49m[39;49m
[34;49m .. oedel6 :: " ps  n 9 = {  (| n ) n @ p [39;49m[33;40mn[39;49m[34;49m 2 = n @ dup p 2 "goedel6_1_assert" assert { (| n ) n @ p n 3 = n @ 4 + dup p 7 "goedel6_2_assert" a .. [39;49m[32;49m
0x7fb6e79467b5    498d4710                lea rax, [r15+0x10]                                    [39;49m
[34;49m .. del6 :: " ps  n 9 = {  (| n ) n @ p n [39;49m[33;40m2[39;49m[34;49m = n @ dup p 2 "goedel6_1_assert" assert { (| n ) n @ p n 3 = n @ 4 + dup p 7 "goedel6_2_assert" ass .. [39;49m[32;49m
0x7fb6e79467b9    48c7c102000000          mov rcx, 0x2                                           [39;49m
[34;49m .. l6 :: " ps  n 9 = {  (| n ) n @ p n 2 [39;49m[33;40m=[39;49m[34;49m n @ dup p 2 "goedel6_1_assert" assert { (| n ) n @ p n 3 = n @ 4 + dup p 7 "goedel6_2_assert" asser .. [39;49m[32;49m
0x7fb6e79467c0    488908                  mov [rax], rcx                                         [39;49m
[34;49m ..  :: " ps  n 9 = {  (| n ) n @ p n 2 = [39;49m[33;40mn[39;49m[34;49m @ dup p 2 "goedel6_1_assert" assert { (| n ) n @ p n 3 = n @ 4 + dup p 7 "goedel6_2_assert" assert  .. [39;49m[32;49m
0x7fb6e79467c3    498b4710                mov rax, [r15+0x10]                                    [39;49m[32;49m
0x7fb6e79467c7    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fb6e79467cb    498906                  mov [r14], rax                                         [39;49m
[34;49m .. " ps  n 9 = {  (| n ) n @ p n 2 = n @ [39;49m[33;40mdup[39;49m[34;49m p 2 "goedel6_1_assert" assert { (| n ) n @ p n 3 = n @ 4 + dup p 7 "goedel6_2_assert" assert } ix .. [39;49m[32;49m
0x7fb6e79467ce    498946f8                mov [r14-0x8], rax                                     [39;49m
[34;49m ..   n 9 = {  (| n ) n @ p n 2 = n @ dup [39;49m[33;40mp[39;49m[34;49m 2 "goedel6_1_assert" assert { (| n ) n @ p n 3 = n @ 4 + dup p 7 "goedel6_2_assert" assert } ix n @ .. [39;49m[32;49m
0x7fb6e79467d2    49b944a493e7b67f0000    mov r9, 0x7fb6e793a444                                 [39;49m[32;49m
0x7fb6e79467dc    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fb6e793a444[32;49m >[39;49m[39;49m
[34;49m .. n 9 = {  (| n ) n @ p n 2 = n @ dup p [39;49m[33;40m2[39;49m[34;49m "goedel6_1_assert" assert { (| n ) n @ p n 3 = n @ 4 + dup p 7 "goedel6_2_assert" assert } ix n @ 6 .. [39;49m[32;49m
0x7fb6e79467df    48c7c002000000          mov rax, 0x2                                           [39;49m[32;49m
0x7fb6e79467e6    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e79467ea    498906                  mov [r14], rax                                         [39;49m
[34;49m .. 9 = {  (| n ) n @ p n 2 = n @ dup p 2 [39;49m[33;40m"goedel6_1_assert"[39;49m[34;49m assert { (| n ) n @ p n 3 = n @ 4 + dup p 7 "goedel6_2_assert" assert } ix n @ 6 + .. [39;49m[32;49m
0x7fb6e79467ed    48b86a8841e7b67f0000    mov rax, 0x7fb6e741886a    	[32;49m< string : '[39;49m[39;49mgoedel6_1_assert[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fb6e79467f7    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e79467fb    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e79467fe    49b92bbb93e7b67f0000    mov r9, 0x7fb6e793bb2b                                 [39;49m[32;49m
0x7fb6e7946808    49ffd1                  call r9                    	< System.[34;49m_assert1[39;49m : 0x00007fb6e793bb2b[32;49m >[39;49m[39;49m
[34;49m ..  2 "goedel6_1_assert" assert { (| n ) [39;49m[33;40mn[39;49m[34;49m @ p n 3 = n @ 4 + dup p 7 "goedel6_2_assert" assert } ix n @ 6 + 8 "goedel6_3_assert" assert  } ix  .. [39;49m[32;49m
0x7fb6e794680b    498b4718                mov rax, [r15+0x18]                                    [39;49m[32;49m
0x7fb6e794680f    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7946813    498906                  mov [r14], rax                                         [39;49m
[34;49m .. goedel6_1_assert" assert { (| n ) n @ [39;49m[33;40mp[39;49m[34;49m n 3 = n @ 4 + dup p 7 "goedel6_2_assert" assert } ix n @ 6 + 8 "goedel6_3_assert" assert  } ix { (| .. [39;49m[32;49m
0x7fb6e7946816    49b944a493e7b67f0000    mov r9, 0x7fb6e793a444                                 [39;49m[32;49m
0x7fb6e7946820    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fb6e793a444[32;49m >[39;49m[39;49m
[34;49m .. edel6_1_assert" assert { (| n ) n @ p [39;49m[33;40mn[39;49m[34;49m 3 = n @ 4 + dup p 7 "goedel6_2_assert" assert } ix n @ 6 + 8 "goedel6_3_assert" assert  } ix { (| n .. [39;49m[32;49m
0x7fb6e7946823    498d4718                lea rax, [r15+0x18]                                    [39;49m
[34;49m .. el6_1_assert" assert { (| n ) n @ p n [39;49m[33;40m3[39;49m[34;49m = n @ 4 + dup p 7 "goedel6_2_assert" assert } ix n @ 6 + 8 "goedel6_3_assert" assert  } ix { (| n ) .. [39;49m[32;49m
0x7fb6e7946827    48c7c103000000          mov rcx, 0x3                                           [39;49m
[34;49m .. 6_1_assert" assert { (| n ) n @ p n 3 [39;49m[33;40m=[39;49m[34;49m n @ 4 + dup p 7 "goedel6_2_assert" assert } ix n @ 6 + 8 "goedel6_3_assert" assert  } ix { (| n )   .. [39;49m[32;49m
0x7fb6e794682e    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. 1_assert" assert { (| n ) n @ p n 3 = [39;49m[33;40mn[39;49m[34;49m @ 4 + dup p 7 "goedel6_2_assert" assert } ix n @ 6 + 8 "goedel6_3_assert" assert  } ix { (| n )  n  .. [39;49m[32;49m
0x7fb6e7946831    498b4718                mov rax, [r15+0x18]                                    [39;49m
[34;49m .. sert" assert { (| n ) n @ p n 3 = n @ [39;49m[33;40m4[39;49m[34;49m + dup p 7 "goedel6_2_assert" assert } ix n @ 6 + 8 "goedel6_3_assert" assert  } ix { (| n )  n @ p  .. [39;49m[32;49m
0x7fb6e7946835    48c7c104000000          mov rcx, 0x4                                           [39;49m
[34;49m .. rt" assert { (| n ) n @ p n 3 = n @ 4 [39;49m[33;40m+[39;49m[34;49m dup p 7 "goedel6_2_assert" assert } ix n @ 6 + 8 "goedel6_3_assert" assert  } ix { (| n )  n @ p  n .. [39;49m[32;49m
0x7fb6e794683c    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fb6e794683f    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fb6e7946843    498906                  mov [r14], rax                                         [39;49m
[34;49m .. " assert { (| n ) n @ p n 3 = n @ 4 + [39;49m[33;40mdup[39;49m[34;49m p 7 "goedel6_2_assert" assert } ix n @ 6 + 8 "goedel6_3_assert" assert  } ix { (| n )  n @ p  n 3 .. [39;49m[32;49m
0x7fb6e7946846    498946f8                mov [r14-0x8], rax                                     [39;49m
[34;49m .. sert { (| n ) n @ p n 3 = n @ 4 + dup [39;49m[33;40mp[39;49m[34;49m 7 "goedel6_2_assert" assert } ix n @ 6 + 8 "goedel6_3_assert" assert  } ix { (| n )  n @ p  n 3 =   .. [39;49m[32;49m
0x7fb6e794684a    49b944a493e7b67f0000    mov r9, 0x7fb6e793a444                                 [39;49m[32;49m
0x7fb6e7946854    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fb6e793a444[32;49m >[39;49m[39;49m
[34;49m .. rt { (| n ) n @ p n 3 = n @ 4 + dup p [39;49m[33;40m7[39;49m[34;49m "goedel6_2_assert" assert } ix n @ 6 + 8 "goedel6_3_assert" assert  } ix { (| n )  n @ p  n 3 =  n  .. [39;49m[32;49m
0x7fb6e7946857    48c7c007000000          mov rax, 0x7                                           [39;49m[32;49m
0x7fb6e794685e    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7946862    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  { (| n ) n @ p n 3 = n @ 4 + dup p 7 [39;49m[33;40m"goedel6_2_assert"[39;49m[34;49m assert } ix n @ 6 + 8 "goedel6_3_assert" assert  } ix { (| n )  n @ p  n 3 =  n du .. [39;49m[32;49m
0x7fb6e7946865    48b89f8841e7b67f0000    mov rax, 0x7fb6e741889f    	[32;49m< string : '[39;49m[39;49mgoedel6_2_assert[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fb6e794686f    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7946873    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e7946876    49b92bbb93e7b67f0000    mov r9, 0x7fb6e793bb2b                                 [39;49m[32;49m
0x7fb6e7946880    49ffd1                  call r9                    	< System.[34;49m_assert1[39;49m : 0x00007fb6e793bb2b[32;49m >[39;49m[39;49m
[34;49m .. up p 7 "goedel6_2_assert" assert } ix [39;49m[33;40mn[39;49m[34;49m @ 6 + 8 "goedel6_3_assert" assert  } ix { (| n )  n @ p  n 3 =  n dup @ 4 + =  n @ dup p 7 "goedel6 .. [39;49m[32;49m
0x7fb6e7946883    498b4710                mov rax, [r15+0x10]                                    [39;49m
[34;49m ..  7 "goedel6_2_assert" assert } ix n @ [39;49m[33;40m6[39;49m[34;49m + 8 "goedel6_3_assert" assert  } ix { (| n )  n @ p  n 3 =  n dup @ 4 + =  n @ dup p 7 "goedel6_4_a .. [39;49m[32;49m
0x7fb6e7946887    48c7c106000000          mov rcx, 0x6                                           [39;49m
[34;49m ..  "goedel6_2_assert" assert } ix n @ 6 [39;49m[33;40m+[39;49m[34;49m 8 "goedel6_3_assert" assert  } ix { (| n )  n @ p  n 3 =  n dup @ 4 + =  n @ dup p 7 "goedel6_4_ass .. [39;49m[32;49m
0x7fb6e794688e    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fb6e7946891    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7946895    498906                  mov [r14], rax                                         [39;49m
[34;49m .. goedel6_2_assert" assert } ix n @ 6 + [39;49m[33;40m8[39;49m[34;49m "goedel6_3_assert" assert  } ix { (| n )  n @ p  n 3 =  n dup @ 4 + =  n @ dup p 7 "goedel6_4_asser .. [39;49m[32;49m
0x7fb6e7946898    48c7c008000000          mov rax, 0x8                                           [39;49m[32;49m
0x7fb6e794689f    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e79468a3    498906                  mov [r14], rax                                         [39;49m
[34;49m .. edel6_2_assert" assert } ix n @ 6 + 8 [39;49m[33;40m"goedel6_3_assert"[39;49m[34;49m assert  } ix { (| n )  n @ p  n 3 =  n dup @ 4 + =  n @ dup p 7 "goedel6_4_assert" .. [39;49m[32;49m
0x7fb6e79468a6    48b8c78841e7b67f0000    mov rax, 0x7fb6e74188c7    	[32;49m< string : '[39;49m[39;49mgoedel6_3_assert[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fb6e79468b0    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e79468b4    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e79468b7    49b92bbb93e7b67f0000    mov r9, 0x7fb6e793bb2b                                 [39;49m[32;49m
0x7fb6e79468c1    49ffd1                  call r9                    	< System.[34;49m_assert1[39;49m : 0x00007fb6e793bb2b[32;49m >[39;49m[39;49m
[34;49m .. del6_3_assert" assert  } ix { (| n )  [39;49m[33;40mn[39;49m[34;49m @ p  n 3 =  n dup @ 4 + =  n @ dup p 7 "goedel6_4_assert" assert  } ix n @ dup p return tos ; ".I"  .. [39;49m[32;49m
0x7fb6e79468c4    498b4720                mov rax, [r15+0x20]                                    [39;49m[32;49m
0x7fb6e79468c8    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e79468cc    498906                  mov [r14], rax                                         [39;49m
[34;49m .. _3_assert" assert  } ix { (| n )  n @ [39;49m[33;40mp[39;49m[34;49m  n 3 =  n dup @ 4 + =  n @ dup p 7 "goedel6_4_assert" assert  } ix n @ dup p return tos ; ".I" type .. [39;49m[32;49m
0x7fb6e79468cf    49b944a493e7b67f0000    mov r9, 0x7fb6e793a444                                 [39;49m[32;49m
0x7fb6e79468d9    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fb6e793a444[32;49m >[39;49m[39;49m
[34;49m .. assert" assert  } ix { (| n )  n @ p  [39;49m[33;40mn[39;49m[34;49m 3 =  n dup @ 4 + =  n @ dup p 7 "goedel6_4_assert" assert  } ix n @ dup p return tos ; ".I" typeSig .. [39;49m[32;49m
0x7fb6e79468dc    498d4720                lea rax, [r15+0x20]                                    [39;49m
[34;49m .. sert" assert  } ix { (| n )  n @ p  n [39;49m[33;40m3[39;49m[34;49m =  n dup @ 4 + =  n @ dup p 7 "goedel6_4_assert" assert  } ix n @ dup p return tos ; ".I" typeSigna .. [39;49m[32;49m
0x7fb6e79468e0    48c7c103000000          mov rcx, 0x3                                           [39;49m
[34;49m .. rt" assert  } ix { (| n )  n @ p  n 3 [39;49m[33;40m=[39;49m[34;49m  n dup @ 4 + =  n @ dup p 7 "goedel6_4_assert" assert  } ix n @ dup p return tos ; ".I" typeSignatu .. [39;49m[32;49m
0x7fb6e79468e7    488908                  mov [rax], rcx                                         [39;49m
[34;49m ..  assert  } ix { (| n )  n @ p  n 3 =  [39;49m[33;40mn[39;49m[34;49m dup @ 4 + =  n @ dup p 7 "goedel6_4_assert" assert  } ix n @ dup p return tos ; ".I" typeSignature  .. [39;49m[32;49m
0x7fb6e79468ea    498d4720                lea rax, [r15+0x20]                                    [39;49m[32;49m
0x7fb6e79468ee    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fb6e79468f2    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ssert  } ix { (| n )  n @ p  n 3 =  n [39;49m[33;40mdup[39;49m[34;49m @ 4 + =  n @ dup p 7 "goedel6_4_assert" assert  } ix n @ dup p return tos ; ".I" typeSignature '  .. [39;49m[32;49m
0x7fb6e79468f5    498946f8                mov [r14-0x8], rax                                     [39;49m
[34;49m .. t  } ix { (| n )  n @ p  n 3 =  n dup [39;49m[33;40m@[39;49m[34;49m 4 + =  n @ dup p 7 "goedel6_4_assert" assert  } ix n @ dup p return tos ; ".I" typeSignature ' goed .. [39;49m[32;49m
0x7fb6e79468f9    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fb6e79468fc    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fb6e79468ff    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  } ix { (| n )  n @ p  n 3 =  n dup @ [39;49m[33;40m4[39;49m[34;49m + =  n @ dup p 7 "goedel6_4_assert" assert  } ix n @ dup p return tos ; ".I" typeSignature ' goedel .. [39;49m[32;49m
0x7fb6e7946902    48c7c004000000          mov rax, 0x4                                           [39;49m[32;49m
0x7fb6e7946909    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fb6e794690c    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fb6e794690f    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m ..  ix { (| n )  n @ p  n 3 =  n dup @ 4 [39;49m[33;40m+[39;49m[34;49m =  n @ dup p 7 "goedel6_4_assert" assert  } ix n @ dup p return tos ; ".I" typeSignature ' goedel6  .. [39;49m[32;49m
0x7fb6e7946913    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fb6e7946916    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fb6e7946919    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fb6e794691c    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m .. x { (| n )  n @ p  n 3 =  n dup @ 4 + [39;49m[33;40m=[39;49m[34;49m  n @ dup p 7 "goedel6_4_assert" assert  } ix n @ dup p return tos ; ".I" typeSignature ' goedel6 fi .. [39;49m[32;49m
0x7fb6e7946920    488908                  mov [rax], rcx                                         [39;49m
[34;49m ..  (| n )  n @ p  n 3 =  n dup @ 4 + =  [39;49m[33;40mn[39;49m[34;49m @ dup p 7 "goedel6_4_assert" assert  } ix n @ dup p return tos ; ".I" typeSignature ' goedel6 find  .. [39;49m[32;49m
0x7fb6e7946923    498b4720                mov rax, [r15+0x20]                                    [39;49m[32;49m
0x7fb6e7946927    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fb6e794692b    498906                  mov [r14], rax                                         [39;49m
[34;49m .. n )  n @ p  n 3 =  n dup @ 4 + =  n @ [39;49m[33;40mdup[39;49m[34;49m p 7 "goedel6_4_assert" assert  } ix n @ dup p return tos ; ".I" typeSignature ' goedel6 find wdis .. [39;49m[32;49m
0x7fb6e794692e    498946f8                mov [r14-0x8], rax                                     [39;49m
[34;49m ..  n @ p  n 3 =  n dup @ 4 + =  n @ dup [39;49m[33;40mp[39;49m[34;49m 7 "goedel6_4_assert" assert  } ix n @ dup p return tos ; ".I" typeSignature ' goedel6 find wdiss 9  .. [39;49m[32;49m
0x7fb6e7946932    49b944a493e7b67f0000    mov r9, 0x7fb6e793a444                                 [39;49m[32;49m
0x7fb6e794693c    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fb6e793a444[32;49m >[39;49m[39;49m
[34;49m ..  @ p  n 3 =  n dup @ 4 + =  n @ dup p [39;49m[33;40m7[39;49m[34;49m "goedel6_4_assert" assert  } ix n @ dup p return tos ; ".I" typeSignature ' goedel6 find wdiss 9 go .. [39;49m[32;49m
0x7fb6e794693f    48c7c007000000          mov rax, 0x7                                           [39;49m[32;49m
0x7fb6e7946946    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e794694a    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  p  n 3 =  n dup @ 4 + =  n @ dup p 7 [39;49m[33;40m"goedel6_4_assert"[39;49m[34;49m assert  } ix n @ dup p return tos ; ".I" typeSignature ' goedel6 find wdiss 9 goed .. [39;49m[32;49m
0x7fb6e794694d    48b8fc8841e7b67f0000    mov rax, 0x7fb6e74188fc    	[32;49m< string : '[39;49m[39;49mgoedel6_4_assert[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fb6e7946957    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e794695b    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e794695e    49b92bbb93e7b67f0000    mov r9, 0x7fb6e793bb2b                                 [39;49m[32;49m
0x7fb6e7946968    49ffd1                  call r9                    	< System.[34;49m_assert1[39;49m : 0x00007fb6e793bb2b[32;49m >[39;49m[39;49m
[34;49m .. p p 7 "goedel6_4_assert" assert  } ix [39;49m[33;40mn[39;49m[34;49m @ dup p return tos ; ".I" typeSignature ' goedel6 find wdiss 9 goedel6 "goedel6_0_assert" assert "\ .. [39;49m[32;49m
0x7fb6e794696b    498b4708                mov rax, [r15+0x8]                                     [39;49m[32;49m
0x7fb6e794696f    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fb6e7946973    498906                  mov [r14], rax                                         [39;49m
[34;49m .. 7 "goedel6_4_assert" assert  } ix n @ [39;49m[33;40mdup[39;49m[34;49m p return tos ; ".I" typeSignature ' goedel6 find wdiss 9 goedel6 "goedel6_0_assert" assert "\ngoe .. [39;49m[32;49m
0x7fb6e7946976    498946f8                mov [r14-0x8], rax                                     [39;49m[32;49m
0x7fb6e794697a    49b944a493e7b67f0000    mov r9, 0x7fb6e793a444                                 [39;49m[32;49m
0x7fb6e7946984    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fb6e793a444[32;49m >[39;49m[39;49m[32;49m
0x7fb6e7946987    498b06                  mov rax, [r14]                                         [39;49m
[34;49m .. oedel6_4_assert" assert  } ix n @ dup [39;49m[33;40mp[39;49m[34;49m return tos ; ".I" typeSignature ' goedel6 find wdiss 9 goedel6 "goedel6_0_assert" assert "\ngoedel6 .. [39;49m[32;49m
0x7fb6e794698a    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e794698e    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e7946992    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7946996    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e7946999    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'goedel6' :: codeSize = 567
Word : 0x00007fb6e61af478 :: Compiled at : 0x00007fb6e7946762
 =============================
::> 'wdiss' was called at namespaces/test/lisp.csl 252.1 <::
 
 goedel6 ::  140423521301624 2 goedel6_1_assert  : ok

 140423549762152 7 goedel6_2_assert  : ok

 goedel6_3_assert  : ok

 140423544778010 7 goedel6_4_assert  : ok

 9 goedel6_0_assert  : ok

 
goedel6 output should read (after ignoring _asserts) : 
 'junk' 2 'junk' 7 'junk' 7 9[39;49m
 
goedel8 output :  140423540607299 2 goedel8_1_assert  : ok

 0 7 goedel8_3_assert  : ok

 goedel8_4_assert  : ok

 140423544779669 10 goedel8_5_assert  : ok

 9 goedel8_6_assert  : ok

 
goedel8 output should read : 
'junk' 2 'junk' 7 'junk' 10 9[39;49m

 =============================
Root.[34;49mgoedel8[39;49m <:> csl compiled word
SourceCode for Root.[34;49mgoedel8[39;49m :> 
[34;49m( :: "\ngoedel8 output : " ps : goedel8 (| n -t "V.I" ) n 1 = { 'n var n @ p n 2 = n @ dup p 2 "goedel8_1_assert" assert { 'n var n @ p n 3 = n @ 4 + dup p 7 "goedel8_3_assert" assert } ix n @ 6 + 8 "goedel8_4_assert" assert } ix { 'n var n @ p n 3 = n dup @ 7 + = n @ dup p 10 "goedel8_5_assert" assert } ix n @ 8 + dup p return tos ; goedel8 9 "goedel8_6_assert" assert1 "\ngoedel8 output should read : \n'junk' 2 'junk' 7 'junk' 10 9" ps )[39;49m
Source code file location of [34;49mgoedel8[39;49m : "namespaces/test/lisp.csl" : 275.0 :: we are now at : namespaces/test/lisp.csl : 276.24
Compiled with : optimizeOn, inlineOn, Jcc8 on
Debug Source Code on : BigNum off : Lisp on : Word Source Code on
starting at address : 0xe794699f -- code size = 548 bytes
TypeSignature : 
 -----------------------------
Word :: Root.[34;49mgoedel8[39;49m : definition = 0x00007fb6e794699f : disassembly at namespaces/test/lisp.csl : 276.24 :
[34;49m ..            ( :: "\ngoedel8 output : " [39;49m[33;40mps[39;49m[34;49m  : goedel8 (| n -t "V.I" )  n 1 = {  'n var n @ p  n 2 = n @ dup p 2 "goedel8_1_assert" assert { ' .. [39;49m[32;49m
0x7fb6e794699f    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fb6e79469a3    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e79469a7    4981c628000000          add r14, 0x28                                          [39;49m
[34;49m .. ut : " ps  : goedel8 (| n -t "V.I" )  [39;49m[33;40mn[39;49m[34;49m 1 = {  'n var n @ p  n 2 = n @ dup p 2 "goedel8_1_assert" assert { 'n var n @ p n 3 = n @ 4 + dup p .. [39;49m[32;49m
0x7fb6e79469ae    498d4708                lea rax, [r15+0x8]                                     [39;49m
[34;49m ..  : " ps  : goedel8 (| n -t "V.I" )  n [39;49m[33;40m1[39;49m[34;49m = {  'n var n @ p  n 2 = n @ dup p 2 "goedel8_1_assert" assert { 'n var n @ p n 3 = n @ 4 + dup p 7 .. [39;49m[32;49m
0x7fb6e79469b2    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m ..  " ps  : goedel8 (| n -t "V.I" )  n 1 [39;49m[33;40m=[39;49m[34;49m {  'n var n @ p  n 2 = n @ dup p 2 "goedel8_1_assert" assert { 'n var n @ p n 3 = n @ 4 + dup p 7 " .. [39;49m[32;49m
0x7fb6e79469b9    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. del8 (| n -t "V.I" )  n 1 = {  'n var [39;49m[33;40mn[39;49m[34;49m @ p  n 2 = n @ dup p 2 "goedel8_1_assert" assert { 'n var n @ p n 3 = n @ 4 + dup p 7 "goedel8_3_as .. [39;49m[32;49m
0x7fb6e79469bc    498b4710                mov rax, [r15+0x10]                                    [39;49m[32;49m
0x7fb6e79469c0    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e79469c4    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  (| n -t "V.I" )  n 1 = {  'n var n @ [39;49m[33;40mp[39;49m[34;49m  n 2 = n @ dup p 2 "goedel8_1_assert" assert { 'n var n @ p n 3 = n @ 4 + dup p 7 "goedel8_3_assert .. [39;49m[32;49m
0x7fb6e79469c7    49b944a493e7b67f0000    mov r9, 0x7fb6e793a444                                 [39;49m[32;49m
0x7fb6e79469d1    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fb6e793a444[32;49m >[39;49m[39;49m
[34;49m ..  n -t "V.I" )  n 1 = {  'n var n @ p  [39;49m[33;40mn[39;49m[34;49m 2 = n @ dup p 2 "goedel8_1_assert" assert { 'n var n @ p n 3 = n @ 4 + dup p 7 "goedel8_3_assert" a .. [39;49m[32;49m
0x7fb6e79469d4    498d4710                lea rax, [r15+0x10]                                    [39;49m
[34;49m ..  -t "V.I" )  n 1 = {  'n var n @ p  n [39;49m[33;40m2[39;49m[34;49m = n @ dup p 2 "goedel8_1_assert" assert { 'n var n @ p n 3 = n @ 4 + dup p 7 "goedel8_3_assert" ass .. [39;49m[32;49m
0x7fb6e79469d8    48c7c102000000          mov rcx, 0x2                                           [39;49m
[34;49m .. t "V.I" )  n 1 = {  'n var n @ p  n 2 [39;49m[33;40m=[39;49m[34;49m n @ dup p 2 "goedel8_1_assert" assert { 'n var n @ p n 3 = n @ 4 + dup p 7 "goedel8_3_assert" asser .. [39;49m[32;49m
0x7fb6e79469df    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. "V.I" )  n 1 = {  'n var n @ p  n 2 = [39;49m[33;40mn[39;49m[34;49m @ dup p 2 "goedel8_1_assert" assert { 'n var n @ p n 3 = n @ 4 + dup p 7 "goedel8_3_assert" assert  .. [39;49m[32;49m
0x7fb6e79469e2    498b4710                mov rax, [r15+0x10]                                    [39;49m[32;49m
0x7fb6e79469e6    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fb6e79469ea    498906                  mov [r14], rax                                         [39;49m
[34;49m .. " )  n 1 = {  'n var n @ p  n 2 = n @ [39;49m[33;40mdup[39;49m[34;49m p 2 "goedel8_1_assert" assert { 'n var n @ p n 3 = n @ 4 + dup p 7 "goedel8_3_assert" assert } ix .. [39;49m[32;49m
0x7fb6e79469ed    498946f8                mov [r14-0x8], rax                                     [39;49m
[34;49m ..  n 1 = {  'n var n @ p  n 2 = n @ dup [39;49m[33;40mp[39;49m[34;49m 2 "goedel8_1_assert" assert { 'n var n @ p n 3 = n @ 4 + dup p 7 "goedel8_3_assert" assert } ix n @ .. [39;49m[32;49m
0x7fb6e79469f1    49b944a493e7b67f0000    mov r9, 0x7fb6e793a444                                 [39;49m[32;49m
0x7fb6e79469fb    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fb6e793a444[32;49m >[39;49m[39;49m
[34;49m ..  1 = {  'n var n @ p  n 2 = n @ dup p [39;49m[33;40m2[39;49m[34;49m "goedel8_1_assert" assert { 'n var n @ p n 3 = n @ 4 + dup p 7 "goedel8_3_assert" assert } ix n @ 6 .. [39;49m[32;49m
0x7fb6e79469fe    48c7c002000000          mov rax, 0x2                                           [39;49m[32;49m
0x7fb6e7946a05    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7946a09    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  = {  'n var n @ p  n 2 = n @ dup p 2 [39;49m[33;40m"goedel8_1_assert"[39;49m[34;49m assert { 'n var n @ p n 3 = n @ 4 + dup p 7 "goedel8_3_assert" assert } ix n @ 6 + .. [39;49m[32;49m
0x7fb6e7946a0c    48b8fa8f41e7b67f0000    mov rax, 0x7fb6e7418ffa    	[32;49m< string : '[39;49m[39;49mgoedel8_1_assert[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fb6e7946a16    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7946a1a    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e7946a1d    49b92bbb93e7b67f0000    mov r9, 0x7fb6e793bb2b                                 [39;49m[32;49m
0x7fb6e7946a27    49ffd1                  call r9                    	< System.[34;49m_assert1[39;49m : 0x00007fb6e793bb2b[32;49m >[39;49m[39;49m
[34;49m ..  2 "goedel8_1_assert" assert { 'n var [39;49m[33;40mn[39;49m[34;49m @ p n 3 = n @ 4 + dup p 7 "goedel8_3_assert" assert } ix n @ 6 + 8 "goedel8_4_assert" assert  } ix  .. [39;49m[32;49m
0x7fb6e7946a2a    498b4718                mov rax, [r15+0x18]                                    [39;49m[32;49m
0x7fb6e7946a2e    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7946a32    498906                  mov [r14], rax                                         [39;49m
[34;49m .. goedel8_1_assert" assert { 'n var n @ [39;49m[33;40mp[39;49m[34;49m n 3 = n @ 4 + dup p 7 "goedel8_3_assert" assert } ix n @ 6 + 8 "goedel8_4_assert" assert  } ix {  ' .. [39;49m[32;49m
0x7fb6e7946a35    49b944a493e7b67f0000    mov r9, 0x7fb6e793a444                                 [39;49m[32;49m
0x7fb6e7946a3f    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fb6e793a444[32;49m >[39;49m[39;49m
[34;49m .. edel8_1_assert" assert { 'n var n @ p [39;49m[33;40mn[39;49m[34;49m 3 = n @ 4 + dup p 7 "goedel8_3_assert" assert } ix n @ 6 + 8 "goedel8_4_assert" assert  } ix {  'n  .. [39;49m[32;49m
0x7fb6e7946a42    498d4718                lea rax, [r15+0x18]                                    [39;49m
[34;49m .. el8_1_assert" assert { 'n var n @ p n [39;49m[33;40m3[39;49m[34;49m = n @ 4 + dup p 7 "goedel8_3_assert" assert } ix n @ 6 + 8 "goedel8_4_assert" assert  } ix {  'n va .. [39;49m[32;49m
0x7fb6e7946a46    48c7c103000000          mov rcx, 0x3                                           [39;49m
[34;49m .. 8_1_assert" assert { 'n var n @ p n 3 [39;49m[33;40m=[39;49m[34;49m n @ 4 + dup p 7 "goedel8_3_assert" assert } ix n @ 6 + 8 "goedel8_4_assert" assert  } ix {  'n var  .. [39;49m[32;49m
0x7fb6e7946a4d    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. 1_assert" assert { 'n var n @ p n 3 = [39;49m[33;40mn[39;49m[34;49m @ 4 + dup p 7 "goedel8_3_assert" assert } ix n @ 6 + 8 "goedel8_4_assert" assert  } ix {  'n var n  .. [39;49m[32;49m
0x7fb6e7946a50    498b4718                mov rax, [r15+0x18]                                    [39;49m
[34;49m .. sert" assert { 'n var n @ p n 3 = n @ [39;49m[33;40m4[39;49m[34;49m + dup p 7 "goedel8_3_assert" assert } ix n @ 6 + 8 "goedel8_4_assert" assert  } ix {  'n var n @ p  .. [39;49m[32;49m
0x7fb6e7946a54    48c7c104000000          mov rcx, 0x4                                           [39;49m
[34;49m .. rt" assert { 'n var n @ p n 3 = n @ 4 [39;49m[33;40m+[39;49m[34;49m dup p 7 "goedel8_3_assert" assert } ix n @ 6 + 8 "goedel8_4_assert" assert  } ix {  'n var n @ p  n .. [39;49m[32;49m
0x7fb6e7946a5b    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fb6e7946a5e    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fb6e7946a62    498906                  mov [r14], rax                                         [39;49m
[34;49m .. " assert { 'n var n @ p n 3 = n @ 4 + [39;49m[33;40mdup[39;49m[34;49m p 7 "goedel8_3_assert" assert } ix n @ 6 + 8 "goedel8_4_assert" assert  } ix {  'n var n @ p  n 3 .. [39;49m[32;49m
0x7fb6e7946a65    498946f8                mov [r14-0x8], rax                                     [39;49m
[34;49m .. sert { 'n var n @ p n 3 = n @ 4 + dup [39;49m[33;40mp[39;49m[34;49m 7 "goedel8_3_assert" assert } ix n @ 6 + 8 "goedel8_4_assert" assert  } ix {  'n var n @ p  n 3 =   .. [39;49m[32;49m
0x7fb6e7946a69    49b944a493e7b67f0000    mov r9, 0x7fb6e793a444                                 [39;49m[32;49m
0x7fb6e7946a73    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fb6e793a444[32;49m >[39;49m[39;49m
[34;49m .. rt { 'n var n @ p n 3 = n @ 4 + dup p [39;49m[33;40m7[39;49m[34;49m "goedel8_3_assert" assert } ix n @ 6 + 8 "goedel8_4_assert" assert  } ix {  'n var n @ p  n 3 =  n  .. [39;49m[32;49m
0x7fb6e7946a76    48c7c007000000          mov rax, 0x7                                           [39;49m[32;49m
0x7fb6e7946a7d    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7946a81    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  { 'n var n @ p n 3 = n @ 4 + dup p 7 [39;49m[33;40m"goedel8_3_assert"[39;49m[34;49m assert } ix n @ 6 + 8 "goedel8_4_assert" assert  } ix {  'n var n @ p  n 3 =  n du .. [39;49m[32;49m
0x7fb6e7946a84    48b82f9041e7b67f0000    mov rax, 0x7fb6e741902f    	[32;49m< string : '[39;49m[39;49mgoedel8_3_assert[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fb6e7946a8e    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7946a92    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e7946a95    49b92bbb93e7b67f0000    mov r9, 0x7fb6e793bb2b                                 [39;49m[32;49m
0x7fb6e7946a9f    49ffd1                  call r9                    	< System.[34;49m_assert1[39;49m : 0x00007fb6e793bb2b[32;49m >[39;49m[39;49m
[34;49m .. up p 7 "goedel8_3_assert" assert } ix [39;49m[33;40mn[39;49m[34;49m @ 6 + 8 "goedel8_4_assert" assert  } ix {  'n var n @ p  n 3 =  n dup @ 7 + =  n @ dup p 10 "goedel .. [39;49m[32;49m
0x7fb6e7946aa2    498b4710                mov rax, [r15+0x10]                                    [39;49m
[34;49m ..  7 "goedel8_3_assert" assert } ix n @ [39;49m[33;40m6[39;49m[34;49m + 8 "goedel8_4_assert" assert  } ix {  'n var n @ p  n 3 =  n dup @ 7 + =  n @ dup p 10 "goedel8_5_ .. [39;49m[32;49m
0x7fb6e7946aa6    48c7c106000000          mov rcx, 0x6                                           [39;49m
[34;49m ..  "goedel8_3_assert" assert } ix n @ 6 [39;49m[33;40m+[39;49m[34;49m 8 "goedel8_4_assert" assert  } ix {  'n var n @ p  n 3 =  n dup @ 7 + =  n @ dup p 10 "goedel8_5_as .. [39;49m[32;49m
0x7fb6e7946aad    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fb6e7946ab0    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7946ab4    498906                  mov [r14], rax                                         [39;49m
[34;49m .. goedel8_3_assert" assert } ix n @ 6 + [39;49m[33;40m8[39;49m[34;49m "goedel8_4_assert" assert  } ix {  'n var n @ p  n 3 =  n dup @ 7 + =  n @ dup p 10 "goedel8_5_asse .. [39;49m[32;49m
0x7fb6e7946ab7    48c7c008000000          mov rax, 0x8                                           [39;49m[32;49m
0x7fb6e7946abe    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7946ac2    498906                  mov [r14], rax                                         [39;49m
[34;49m .. edel8_3_assert" assert } ix n @ 6 + 8 [39;49m[33;40m"goedel8_4_assert"[39;49m[34;49m assert  } ix {  'n var n @ p  n 3 =  n dup @ 7 + =  n @ dup p 10 "goedel8_5_assert .. [39;49m[32;49m
0x7fb6e7946ac5    48b8579041e7b67f0000    mov rax, 0x7fb6e7419057    	[32;49m< string : '[39;49m[39;49mgoedel8_4_assert[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fb6e7946acf    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7946ad3    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e7946ad6    49b92bbb93e7b67f0000    mov r9, 0x7fb6e793bb2b                                 [39;49m[32;49m
0x7fb6e7946ae0    49ffd1                  call r9                    	< System.[34;49m_assert1[39;49m : 0x00007fb6e793bb2b[32;49m >[39;49m[39;49m
[34;49m .. del8_4_assert" assert  } ix {  'n var [39;49m[33;40mn[39;49m[34;49m @ p  n 3 =  n dup @ 7 + =  n @ dup p 10 "goedel8_5_assert" assert  } ix n @ 8 + dup p return tos  ; .. [39;49m[32;49m
0x7fb6e7946ae3    498b4720                mov rax, [r15+0x20]                                    [39;49m[32;49m
0x7fb6e7946ae7    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7946aeb    498906                  mov [r14], rax                                         [39;49m
[34;49m .. _4_assert" assert  } ix {  'n var n @ [39;49m[33;40mp[39;49m[34;49m  n 3 =  n dup @ 7 + =  n @ dup p 10 "goedel8_5_assert" assert  } ix n @ 8 + dup p return tos  ; goe .. [39;49m[32;49m
0x7fb6e7946aee    49b944a493e7b67f0000    mov r9, 0x7fb6e793a444                                 [39;49m[32;49m
0x7fb6e7946af8    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fb6e793a444[32;49m >[39;49m[39;49m
[34;49m .. assert" assert  } ix {  'n var n @ p  [39;49m[33;40mn[39;49m[34;49m 3 =  n dup @ 7 + =  n @ dup p 10 "goedel8_5_assert" assert  } ix n @ 8 + dup p return tos  ; goedel .. [39;49m[32;49m
0x7fb6e7946afb    498d4720                lea rax, [r15+0x20]                                    [39;49m
[34;49m .. sert" assert  } ix {  'n var n @ p  n [39;49m[33;40m3[39;49m[34;49m =  n dup @ 7 + =  n @ dup p 10 "goedel8_5_assert" assert  } ix n @ 8 + dup p return tos  ; goedel8  .. [39;49m[32;49m
0x7fb6e7946aff    48c7c103000000          mov rcx, 0x3                                           [39;49m
[34;49m .. rt" assert  } ix {  'n var n @ p  n 3 [39;49m[33;40m=[39;49m[34;49m  n dup @ 7 + =  n @ dup p 10 "goedel8_5_assert" assert  } ix n @ 8 + dup p return tos  ; goedel8 9  .. [39;49m[32;49m
0x7fb6e7946b06    488908                  mov [rax], rcx                                         [39;49m
[34;49m ..  assert  } ix {  'n var n @ p  n 3 =  [39;49m[33;40mn[39;49m[34;49m dup @ 7 + =  n @ dup p 10 "goedel8_5_assert" assert  } ix n @ 8 + dup p return tos  ; goedel8 9 "go .. [39;49m[32;49m
0x7fb6e7946b09    498d4720                lea rax, [r15+0x20]                                    [39;49m[32;49m
0x7fb6e7946b0d    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fb6e7946b11    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ssert  } ix {  'n var n @ p  n 3 =  n [39;49m[33;40mdup[39;49m[34;49m @ 7 + =  n @ dup p 10 "goedel8_5_assert" assert  } ix n @ 8 + dup p return tos  ; goedel8 9 "goed .. [39;49m[32;49m
0x7fb6e7946b14    498946f8                mov [r14-0x8], rax                                     [39;49m
[34;49m .. t  } ix {  'n var n @ p  n 3 =  n dup [39;49m[33;40m@[39;49m[34;49m 7 + =  n @ dup p 10 "goedel8_5_assert" assert  } ix n @ 8 + dup p return tos  ; goedel8 9 "goedel8_ .. [39;49m[32;49m
0x7fb6e7946b18    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fb6e7946b1b    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fb6e7946b1e    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  } ix {  'n var n @ p  n 3 =  n dup @ [39;49m[33;40m7[39;49m[34;49m + =  n @ dup p 10 "goedel8_5_assert" assert  } ix n @ 8 + dup p return tos  ; goedel8 9 "goedel8_6_ .. [39;49m[32;49m
0x7fb6e7946b21    48c7c007000000          mov rax, 0x7                                           [39;49m[32;49m
0x7fb6e7946b28    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fb6e7946b2b    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fb6e7946b2e    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m ..  ix {  'n var n @ p  n 3 =  n dup @ 7 [39;49m[33;40m+[39;49m[34;49m =  n @ dup p 10 "goedel8_5_assert" assert  } ix n @ 8 + dup p return tos  ; goedel8 9 "goedel8_6_as .. [39;49m[32;49m
0x7fb6e7946b32    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fb6e7946b35    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fb6e7946b38    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fb6e7946b3b    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m .. x {  'n var n @ p  n 3 =  n dup @ 7 + [39;49m[33;40m=[39;49m[34;49m  n @ dup p 10 "goedel8_5_assert" assert  } ix n @ 8 + dup p return tos  ; goedel8 9 "goedel8_6_asse .. [39;49m[32;49m
0x7fb6e7946b3f    488908                  mov [rax], rcx                                         [39;49m
[34;49m ..   'n var n @ p  n 3 =  n dup @ 7 + =  [39;49m[33;40mn[39;49m[34;49m @ dup p 10 "goedel8_5_assert" assert  } ix n @ 8 + dup p return tos  ; goedel8 9 "goedel8_6_assert" .. [39;49m[32;49m
0x7fb6e7946b42    498b4720                mov rax, [r15+0x20]                                    [39;49m[32;49m
0x7fb6e7946b46    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fb6e7946b4a    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  var n @ p  n 3 =  n dup @ 7 + =  n @ [39;49m[33;40mdup[39;49m[34;49m p 10 "goedel8_5_assert" assert  } ix n @ 8 + dup p return tos  ; goedel8 9 "goedel8_6_assert" ass .. [39;49m[32;49m
0x7fb6e7946b4d    498946f8                mov [r14-0x8], rax                                     [39;49m
[34;49m ..  n @ p  n 3 =  n dup @ 7 + =  n @ dup [39;49m[33;40mp[39;49m[34;49m 10 "goedel8_5_assert" assert  } ix n @ 8 + dup p return tos  ; goedel8 9 "goedel8_6_assert" assert1 .. [39;49m[32;49m
0x7fb6e7946b51    49b944a493e7b67f0000    mov r9, 0x7fb6e793a444                                 [39;49m[32;49m
0x7fb6e7946b5b    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fb6e793a444[32;49m >[39;49m[39;49m
[34;49m ..  @ p  n 3 =  n dup @ 7 + =  n @ dup p [39;49m[33;40m10[39;49m[34;49m "goedel8_5_assert" assert  } ix n @ 8 + dup p return tos  ; goedel8 9 "goedel8_6_assert" assert1 " .. [39;49m[32;49m
0x7fb6e7946b5e    48c7c00a000000          mov rax, 0xa                                           [39;49m[32;49m
0x7fb6e7946b65    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7946b69    498906                  mov [r14], rax                                         [39;49m
[34;49m .. p  n 3 =  n dup @ 7 + =  n @ dup p 10 [39;49m[33;40m"goedel8_5_assert"[39;49m[34;49m assert  } ix n @ 8 + dup p return tos  ; goedel8 9 "goedel8_6_assert" assert1 "\ng .. [39;49m[32;49m
0x7fb6e7946b6c    48b88d9041e7b67f0000    mov rax, 0x7fb6e741908d    	[32;49m< string : '[39;49m[39;49mgoedel8_5_assert[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fb6e7946b76    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7946b7a    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e7946b7d    49b92bbb93e7b67f0000    mov r9, 0x7fb6e793bb2b                                 [39;49m[32;49m
0x7fb6e7946b87    49ffd1                  call r9                    	< System.[34;49m_assert1[39;49m : 0x00007fb6e793bb2b[32;49m >[39;49m[39;49m
[34;49m ..  p 10 "goedel8_5_assert" assert  } ix [39;49m[33;40mn[39;49m[34;49m @ 8 + dup p return tos  ; goedel8 9 "goedel8_6_assert" assert1 "\ngoedel8 output should read : \n'j .. [39;49m[32;49m
0x7fb6e7946b8a    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m .. 0 "goedel8_5_assert" assert  } ix n @ [39;49m[33;40m8[39;49m[34;49m + dup p return tos  ; goedel8 9 "goedel8_6_assert" assert1 "\ngoedel8 output should read : \n'junk' .. [39;49m[32;49m
0x7fb6e7946b8e    48c7c108000000          mov rcx, 0x8                                           [39;49m
[34;49m .. "goedel8_5_assert" assert  } ix n @ 8 [39;49m[33;40m+[39;49m[34;49m dup p return tos  ; goedel8 9 "goedel8_6_assert" assert1 "\ngoedel8 output should read : \n'junk' 2 .. [39;49m[32;49m
0x7fb6e7946b95    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fb6e7946b98    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fb6e7946b9c    498906                  mov [r14], rax                                         [39;49m
[34;49m .. oedel8_5_assert" assert  } ix n @ 8 + [39;49m[33;40mdup[39;49m[34;49m p return tos  ; goedel8 9 "goedel8_6_assert" assert1 "\ngoedel8 output should read : \n'junk' 2 ' .. [39;49m[32;49m
0x7fb6e7946b9f    498946f8                mov [r14-0x8], rax                                     [39;49m[32;49m
0x7fb6e7946ba3    49b944a493e7b67f0000    mov r9, 0x7fb6e793a444                                 [39;49m[32;49m
0x7fb6e7946bad    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fb6e793a444[32;49m >[39;49m[39;49m[32;49m
0x7fb6e7946bb0    498b06                  mov rax, [r14]                                         [39;49m
[34;49m .. l8_5_assert" assert  } ix n @ 8 + dup [39;49m[33;40mp[39;49m[34;49m return tos  ; goedel8 9 "goedel8_6_assert" assert1 "\ngoedel8 output should read : \n'junk' 2 'junk .. [39;49m[32;49m
0x7fb6e7946bb3    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e7946bb7    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e7946bbb    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7946bbf    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e7946bc2    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'goedel8' :: codeSize = 547
Word : 0x00007fb6e61b54c0 :: Compiled at : 0x00007fb6e794699f
 =============================
::> 'wdiss' was called at namespaces/test/lisp.csl 276.24 <::
[39;49m ( ( 1 2 ) )
[39;49m ( 1 2 )
[39;49m x
[39;49m a
[39;49m x1
[39;49m a1
[39;49m ( Its a beautiful day don't let it get away )
[39;49m ( Its "the" beautiful day don't "let" it get away )
[39;49m ( Its a beautiful day don't let it get away )
[39;49m ( Its a beautiful day don't x1 it get away )
[39;49m ( Its a beautiful day don't let it get away )
[39;49m ( Its a beautiful day don't x it get away )
 testing unquote above line should show : ( Its a beautiful day don't x it get away )
[39;49m ( Its a beautiful day don't x1 it get away )
 testing unquote above line should show : ( Its a beautiful day don't x1 it get away )
[39;49m ( Its "the" beautiful day don't "let" it get away )
[39;49m ( Its a beautiful day don't let it get away )
[34;49m 
ending lisp.csl
total 40
drwxr-xr-x 10 root root 4096 Jul 31 09:26 .
drwxr-xr-x 14 root root 4096 Jul 31 09:28 ..
drwxr-xr-x  2 root root 4096 Oct 26 11:21 bin
drwxr-xr-x  2 root root 4096 Oct 26 11:21 etc
drwxr-xr-x  2 root root 4096 Jul 31 09:26 games
drwxr-xr-x  3 root root 4096 Oct 26 11:08 include
drwxr-xr-x  5 root root 4096 Oct 30 07:08 lib
lrwxrwxrwx  1 root root    9 Oct 26 09:49 man -> share/man
drwxr-xr-x  2 root root 4096 Jul 31 09:26 sbin
drwxr-xr-x  9 root root 4096 Nov 18 12:09 share
drwxr-xr-x  2 root root 4096 Jul 31 09:26 src
[39;49m[39;49m[39;49m
typeChecking is on, optimize is on, inlining is on, infixMode is off, 
prefixMode is off, c_syntax is off, postfixMode is on
Debug is off. Verbosity = 1. Console = 0, NumberBase = 10.
DebugSourceCode on : BigNum off : Lisp off : jcc8 off
interpreting : at etc/script : 7.6
SignalExceptionsHandled = 0 ; SigSegvs = 0 ; Restarts = 0
StartedTimes = 0 ; RestartCondition = INITIAL_START ; LastRestartCondtion = INITIAL_START
InNamespace = Root.C
version 0.909.237
 7 7 7
version 0.909.237
[39;49m yfac
[39;49m 3628800

[39;49m yfacc
[39;49m 3628800

[39;49m 5040

[34;49m
Increase the verbosity setting to 2 or more for more info here. ( Eg. : verbosity 2 = )[39;49m
ContextSpace                                InUse =     29989 : Unused =       859 : ReAllocations =    1 : Largest =      768 : Smallest =       91
ContextSpace                                InUse =      8872 : Unused =      1368 : ReAllocations =    0 : Largest =     1368 : Smallest =     1368
StringSpace                                 InUse =     18101 : Unused =      2379 : ReAllocations =    0 : Largest =     2379 : Smallest =     2379
HistorySpace                                InUse =         0 : Unused =     10240 : ReAllocations =    0 : Largest =    10240 : Smallest =    10240
BufferSpace                                 InUse =     59098 : Unused =      1318 : ReAllocations =    0 : Largest =     1318 : Smallest =     1318
LispTempSpace                               InUse =    172072 : Unused =     35464 : ReAllocations =    4 : Largest =    34840 : Smallest =        0
DictionarySpace                             InUse =    696856 : Unused =    351720 : ReAllocations =    0 : Largest =   351720 : Smallest =   351720
SessionObjectsSpace                         InUse =     26758 : Unused =     24442 : ReAllocations =    0 : Largest =    24442 : Smallest =    24442
CodeSpace                                   InUse =     24374 : Unused =     78026 : ReAllocations =    0 : Largest =    78026 : Smallest =    78026
WordRecylingSpace                           InUse =    300728 : Unused =    137392 : ReAllocations =    2 : Largest =   136920 : Smallest =       40
CompilerTempObjectSpace                     InUse =    276776 : Unused =     32808 : ReAllocations =    3 : Largest =    32264 : Smallest =       40
TempObjectSpace                             InUse =      1066 : Unused =      9185 : ReAllocations =    1 : Largest =     9185 : Smallest =        0
LispSpace                                   InUse =    123072 : Unused =     85168 : ReAllocations =    4 : Largest =    84560 : Smallest =        0
InternalObjectSpace                         InUse =     69195 : Unused =      7605 : ReAllocations =    0 : Largest =     7605 : Smallest =     7605
CSLInternalSpace                            InUse =     79952 : Unused =      1968 : ReAllocations =    0 : Largest =     1968 : Smallest =     1968
OpenVmTilSpace                              InUse =      5376 : Unused =       768 : ReAllocations =    0 : Largest =      768 : Smallest =      768
Data Stack                                  InUse =         0 : Unused =     16384
Total Accounted Mem                         InUse =   1917381 : Unused =    780710
Mmap_RemainingMemoryAllocated                     =   2814971 : <=: ovt->Mmap_RemainingMemoryAllocated
Total Memory Allocated                            =   2698091
Total Memory leaks                                =         0
RecycledWordCount ::     4 x 440 bytes : Recycled =      1760
WrdInRecycling ::     0 x 440 bytes : InRecycling =         0[39;49m fibc
[39;49m 6765

 =============================
Int.[34;49mfac[39;49m <:> csl compiled word
SourceCode for Int.[34;49mfac[39;49m :> 
[34;49m: fac ( n | rec1 ) rec1 1 = { n @ 1 > } { n @ rec1 @ * rec1 store n -- } while return rec1 @ ; [39;49m
Source code file location of [34;49mfac[39;49m : "etc/script" : 27.2 :: we are now at : etc/script : 32.17
Compiled with : optimizeOn, inlineOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0x289fa032 -- code size = 89 bytes
TypeSignature : 
 -----------------------------
Word :: Int.[34;49mfac[39;49m : definition = 0x00007fa6289fa032 : disassembly at etc/script : 32.17 :
[34;49m ..                                     : [39;49m[33;40mfac[39;49m[34;49m ( n | rec1 )  rec1 1 =  { n @ 1 > } { n @ rec1 @ * rec1 store n -- } while  return rec1 @ ;  .. [39;49m[32;49m
0x7fa6289fa032    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fa6289fa036    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa6289fa03a    4981c610000000          add r14, 0x10                                          [39;49m
[34;49m ..                   : fac ( n | rec1 )  [39;49m[33;40mrec1[39;49m[34;49m 1 =  { n @ 1 > } { n @ rec1 @ * rec1 store n -- } while  return rec1 @ ;  .. [39;49m[32;49m
0x7fa6289fa041    498d4708                lea rax, [r15+0x8]                                     [39;49m
[34;49m ..              : fac ( n | rec1 )  rec1 [39;49m[33;40m1[39;49m[34;49m =  { n @ 1 > } { n @ rec1 @ * rec1 store n -- } while  return rec1 @ ;  .. [39;49m[32;49m
0x7fa6289fa045    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m ..            : fac ( n | rec1 )  rec1 1 [39;49m[33;40m=[39;49m[34;49m  { n @ 1 > } { n @ rec1 @ * rec1 store n -- } while  return rec1 @ ;  .. [39;49m[32;49m
0x7fa6289fa04c    488908                  mov [rax], rcx                                         [39;49m
[34;49m ..       : fac ( n | rec1 )  rec1 1 =  { [39;49m[33;40mn[39;49m[34;49m @ 1 > } { n @ rec1 @ * rec1 store n -- } while  return rec1 @ ;  .. [39;49m[32;49m
0x7fa6289fa04f    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. : fac ( n | rec1 )  rec1 1 =  { n @ 1 [39;49m[33;40m>[39;49m[34;49m } { n @ rec1 @ * rec1 store n -- } while  return rec1 @ ;  .. [39;49m[32;49m
0x7fa6289fa053    4883f801                cmp rax, 0x1                                           [39;49m[32;49m
0x7fa6289fa057    0f8e19000000            jle 0x7fa6289fa076         	< Int.[34;49mfac[39;49m+68[32;49m >[39;49m[39;49m
[34;49m .. ( n | rec1 )  rec1 1 =  { n @ 1 > } { [39;49m[33;40mn[39;49m[34;49m @ rec1 @ * rec1 store n -- } while  return rec1 @ ; [39;49m[32;49m
0x7fa6289fa05d    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. | rec1 )  rec1 1 =  { n @ 1 > } { n @ [39;49m[33;40mrec1[39;49m[34;49m @ * rec1 store n -- } while  return rec1 @ ; [39;49m[32;49m
0x7fa6289fa061    498b4f08                mov rcx, [r15+0x8]                                     [39;49m
[34;49m .. )  rec1 1 =  { n @ 1 > } { n @ rec1 @ [39;49m[33;40m*[39;49m[34;49m rec1 store n -- } while  return rec1 @ ; [39;49m[32;49m
0x7fa6289fa065    480fafc1                imul rax, rcx                                          [39;49m
[34;49m ..  rec1 1 =  { n @ 1 > } { n @ rec1 @ * [39;49m[33;40mrec1[39;49m[34;49m store n -- } while  return rec1 @ ; [39;49m[32;49m
0x7fa6289fa069    498d4f08                lea rcx, [r15+0x8]                                     [39;49m
[34;49m ..  1 =  { n @ 1 > } { n @ rec1 @ * rec1 [39;49m[33;40mstore[39;49m[34;49m n -- } while  return rec1 @ ; [39;49m[32;49m
0x7fa6289fa06d    488901                  mov [rcx], rax                                         [39;49m
[34;49m .. n @ 1 > } { n @ rec1 @ * rec1 store n [39;49m[33;40m--[39;49m[34;49m } while  return rec1 @ ; [39;49m[32;49m
0x7fa6289fa070    49ff4ff8                dec qword [r15-0x8]                                    [39;49m
[34;49m ..  1 > } { n @ rec1 @ * rec1 store n -- [39;49m[33;40m}[39;49m[34;49m while  return rec1 @ ; [39;49m[32;49m
0x7fa6289fa074    ebd9                    jmp 0x7fa6289fa04f         	< Int.[34;49mfac[39;49m+29[32;49m >[39;49m[39;49m[32;49m
0x7fa6289fa076    498b4708                mov rax, [r15+0x8]                                     [39;49m[32;49m
0x7fa6289fa07a    e900000000              jmp 0x7fa6289fa07f         	< Int.[34;49mfac[39;49m+77[32;49m >[39;49m[39;49m
[34;49m .. ec1 store n -- } while  return rec1 @ [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fa6289fa07f    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fa6289fa083    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m
[34;49m .. 1 @ * rec1 store n -- } while  return [39;49m[33;40mrec1[39;49m[34;49m @ ; [39;49m[32;49m
0x7fa6289fa087    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fa6289fa08a    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'fac' :: codeSize = 88
Word : 0x00007fa628994768 :: Compiled at : 0x00007fa6289fa032
 =============================
::> 'wdiss' was called at etc/script 32.17 <::
 5040
bye
[39;49m[39;49m
typeChecking is on, optimize is on, inlining is on, infixMode is off, 
prefixMode is off, c_syntax is off, postfixMode is on
Debug is off. Verbosity = 1. Console = 0, NumberBase = 10.
DebugSourceCode on : BigNum off : Lisp off : jcc8 off
interpreting : at etc/lispScript : 4.6
SignalExceptionsHandled = 0 ; SigSegvs = 0 ; Restarts = 0
StartedTimes = 0 ; RestartCondition = INITIAL_START ; LastRestartCondtion = INITIAL_START
InNamespace = Root.C
version 0.909.237
[39;49m 7
[39;49m yfac
[39;49m 3628800

[39;49m yfacc
[39;49m 3628800

[39;49m 5040

[39;49m fibc
[39;49m 6765

 =============================
Int.[34;49mfac[39;49m <:> csl compiled word
SourceCode for Int.[34;49mfac[39;49m :> 
[34;49m: fac ( n | rec1 ) rec1 1 = { n @ 1 > } { n @ rec1 @ * rec1 store n -- } while return rec1 @ ; [39;49m
Source code file location of [34;49mfac[39;49m : "etc/lispScript" : 22.2 :: we are now at : etc/lispScript : 27.17
Compiled with : optimizeOn, inlineOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0x35cc8faf -- code size = 89 bytes
TypeSignature : 
 -----------------------------
Word :: Int.[34;49mfac[39;49m : definition = 0x00007fa435cc8faf : disassembly at etc/lispScript : 27.17 :
[34;49m ..                                     : [39;49m[33;40mfac[39;49m[34;49m ( n | rec1 )  rec1 1 =  { n @ 1 > } { n @ rec1 @ * rec1 store n -- } while  return rec1 @ ;  .. [39;49m[32;49m
0x7fa435cc8faf    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fa435cc8fb3    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fa435cc8fb7    4981c610000000          add r14, 0x10                                          [39;49m
[34;49m ..                   : fac ( n | rec1 )  [39;49m[33;40mrec1[39;49m[34;49m 1 =  { n @ 1 > } { n @ rec1 @ * rec1 store n -- } while  return rec1 @ ;  .. [39;49m[32;49m
0x7fa435cc8fbe    498d4708                lea rax, [r15+0x8]                                     [39;49m
[34;49m ..              : fac ( n | rec1 )  rec1 [39;49m[33;40m1[39;49m[34;49m =  { n @ 1 > } { n @ rec1 @ * rec1 store n -- } while  return rec1 @ ;  .. [39;49m[32;49m
0x7fa435cc8fc2    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m ..            : fac ( n | rec1 )  rec1 1 [39;49m[33;40m=[39;49m[34;49m  { n @ 1 > } { n @ rec1 @ * rec1 store n -- } while  return rec1 @ ;  .. [39;49m[32;49m
0x7fa435cc8fc9    488908                  mov [rax], rcx                                         [39;49m
[34;49m ..       : fac ( n | rec1 )  rec1 1 =  { [39;49m[33;40mn[39;49m[34;49m @ 1 > } { n @ rec1 @ * rec1 store n -- } while  return rec1 @ ;  .. [39;49m[32;49m
0x7fa435cc8fcc    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. : fac ( n | rec1 )  rec1 1 =  { n @ 1 [39;49m[33;40m>[39;49m[34;49m } { n @ rec1 @ * rec1 store n -- } while  return rec1 @ ;  .. [39;49m[32;49m
0x7fa435cc8fd0    4883f801                cmp rax, 0x1                                           [39;49m[32;49m
0x7fa435cc8fd4    0f8e19000000            jle 0x7fa435cc8ff3         	< Int.[34;49mfac[39;49m+68[32;49m >[39;49m[39;49m
[34;49m .. ( n | rec1 )  rec1 1 =  { n @ 1 > } { [39;49m[33;40mn[39;49m[34;49m @ rec1 @ * rec1 store n -- } while  return rec1 @ ; [39;49m[32;49m
0x7fa435cc8fda    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. | rec1 )  rec1 1 =  { n @ 1 > } { n @ [39;49m[33;40mrec1[39;49m[34;49m @ * rec1 store n -- } while  return rec1 @ ; [39;49m[32;49m
0x7fa435cc8fde    498b4f08                mov rcx, [r15+0x8]                                     [39;49m
[34;49m .. )  rec1 1 =  { n @ 1 > } { n @ rec1 @ [39;49m[33;40m*[39;49m[34;49m rec1 store n -- } while  return rec1 @ ; [39;49m[32;49m
0x7fa435cc8fe2    480fafc1                imul rax, rcx                                          [39;49m
[34;49m ..  rec1 1 =  { n @ 1 > } { n @ rec1 @ * [39;49m[33;40mrec1[39;49m[34;49m store n -- } while  return rec1 @ ; [39;49m[32;49m
0x7fa435cc8fe6    498d4f08                lea rcx, [r15+0x8]                                     [39;49m
[34;49m ..  1 =  { n @ 1 > } { n @ rec1 @ * rec1 [39;49m[33;40mstore[39;49m[34;49m n -- } while  return rec1 @ ; [39;49m[32;49m
0x7fa435cc8fea    488901                  mov [rcx], rax                                         [39;49m
[34;49m .. n @ 1 > } { n @ rec1 @ * rec1 store n [39;49m[33;40m--[39;49m[34;49m } while  return rec1 @ ; [39;49m[32;49m
0x7fa435cc8fed    49ff4ff8                dec qword [r15-0x8]                                    [39;49m
[34;49m ..  1 > } { n @ rec1 @ * rec1 store n -- [39;49m[33;40m}[39;49m[34;49m while  return rec1 @ ; [39;49m[32;49m
0x7fa435cc8ff1    ebd9                    jmp 0x7fa435cc8fcc         	< Int.[34;49mfac[39;49m+29[32;49m >[39;49m[39;49m[32;49m
0x7fa435cc8ff3    498b4708                mov rax, [r15+0x8]                                     [39;49m[32;49m
0x7fa435cc8ff7    e900000000              jmp 0x7fa435cc8ffc         	< Int.[34;49mfac[39;49m+77[32;49m >[39;49m[39;49m
[34;49m .. ec1 store n -- } while  return rec1 @ [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fa435cc8ffc    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fa435cc9000    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m
[34;49m .. 1 @ * rec1 store n -- } while  return [39;49m[33;40mrec1[39;49m[34;49m @ ; [39;49m[32;49m
0x7fa435cc9004    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fa435cc9007    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'fac' :: codeSize = 88
Word : 0x00007fa435c627f0 :: Compiled at : 0x00007fa435cc8faf
 =============================
::> 'wdiss' was called at etc/lispScript 27.17 <::
 5040
bye
 3
total 3044
drwxrwxr-x   8 dennisj dennisj    4096 Nov 19 19:09 .
drwxrwxrwx 144 dennisj dennisj   36864 Nov 19 16:02 ..
drwxrwxr-x   2 dennisj dennisj    4096 Nov 11 12:12 bin
-rw-rw-r--   1 dennisj dennisj  793979 Nov 19 19:09 csl.1.txt
-rw-rw-r--   1 dennisj dennisj 1725745 Nov 18 11:48 csl.txt
drwxrwxr-x   2 dennisj dennisj    4096 Sep 16 04:03 etc
drwxrwxr-x   8 dennisj dennisj    4096 Nov 17 14:32 .git
-rw-rw-r--   1 dennisj dennisj   15740 Sep 19 08:25 init.csl
-rw-rw-r--   1 dennisj dennisj     163 May 26 00:23 itestf
-rw-rw-r--   1 dennisj dennisj    1078 May 26 00:23 LICENSE
-rwxrwxr-x   1 dennisj dennisj     220 May 26 00:23 m
-rwxrwxr-x   1 dennisj dennisj     664 May 26 00:23 m0
-rw-rw-r--   1 dennisj dennisj    7059 Oct 26 11:20 Makefile
-rwxrwxr-x   1 dennisj dennisj     487 Oct 22 10:10 mir
-rwxrwxr-x   1 dennisj dennisj     549 May 26 00:23 mirAll
drwxrwxr-x   4 dennisj dennisj    4096 Sep 16 04:03 namespaces
drwxrwxr-x   3 dennisj dennisj    4096 May 26 00:23 nbproject
-rw-rw-r--   1 dennisj dennisj      40 May 26 00:23 nt.csl
-rwxrwxr-x   1 dennisj dennisj     124 May 26 00:23 r
-rw-rw-r--   1 dennisj dennisj   14186 Jul 17 21:49 README.txt
drwxrwxr-x   5 dennisj dennisj    4096 Sep 16 04:03 src
-rw-rw-r--   1 dennisj dennisj      90 May 26 00:23 test
-rw-rw-r--   1 dennisj dennisj      90 May 26 00:23 test.txt
-rw-rw-r--   1 dennisj dennisj  445085 Sep  1  2013 udis86-1.7.2.tar.gz

3
 namespaces/test/lisp.csl 316.9
 =============================
Infix.[34;49mhi[39;49m <:> csl compiled word
SourceCode for Infix.[34;49mhi[39;49m :> 
[34;49m: hi ( | x ) x = ( 2 + ( 3 * 4 ) ), x p return x [39;49m
Source code file location of [34;49mhi[39;49m : "namespaces/compiler/syntax.csl" : 6.2 :: we are now at : namespaces/compiler/syntax.csl : 7.16
Compiled with : optimizeOn, inlineOn, c_syntaxOn, infixOn, Jcc8 on
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xe779824b -- code size = 108 bytes
TypeSignature : 
 -----------------------------
Word :: Infix.[34;49mhi[39;49m : definition = 0x00007fb6e779824b : disassembly at namespaces/compiler/syntax.csl : 7.16 :
[34;49m ..                                     : [39;49m[33;40mhi[39;49m[34;49m ( | x ) x = ( 2 + ( 3 * 4 ) ), x p return x  .. [39;49m[32;49m
0x7fb6e779824b    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fb6e779824f    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e7798253    4981c610000000          add r14, 0x10                                          [39;49m
[34;49m ..                    : hi ( | x ) x = ( [39;49m[33;40m2[39;49m[34;49m + ( 3 * 4 ) ), x p return x  .. [39;49m[32;49m
0x7fb6e779825a    48c7c002000000          mov rax, 0x2                                           [39;49m[32;49m
0x7fb6e7798261    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7798265    498906                  mov [r14], rax                                         [39;49m
[34;49m ..              : hi ( | x ) x = ( 2 + ( [39;49m[33;40m3[39;49m[34;49m * 4 ) ), x p return x  .. [39;49m[32;49m
0x7fb6e7798268    48c7c00c000000          mov rax, 0xc                                           [39;49m[32;49m
0x7fb6e779826f    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7798273    498906                  mov [r14], rax                                         [39;49m
[34;49m ..        : hi ( | x ) x = ( 2 + ( 3 * 4 [39;49m[33;40m)[39;49m[34;49m ), x p return x  .. [39;49m[32;49m
0x7fb6e7798276    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fb6e7798279    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fb6e779827d    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m ..                  : hi ( | x ) x = ( 2 [39;49m[33;40m+[39;49m[34;49m ( 3 * 4 ) ), x p return x  .. [39;49m[32;49m
0x7fb6e7798281    4803c1                  add rax, rcx                                           [39;49m
[34;49m ..                          : hi ( | x ) [39;49m[33;40mx[39;49m[34;49m = ( 2 + ( 3 * 4 ) ), x p return x  .. [39;49m[32;49m
0x7fb6e7798284    498d4f08                lea rcx, [r15+0x8]                                     [39;49m
[34;49m ..                        : hi ( | x ) x [39;49m[33;40m=[39;49m[34;49m ( 2 + ( 3 * 4 ) ), x p return x  .. [39;49m[32;49m
0x7fb6e7798288    488901                  mov [rcx], rax                                         [39;49m
[34;49m ..   : hi ( | x ) x = ( 2 + ( 3 * 4 ) ), [39;49m[33;40mx[39;49m[34;49m p return x  .. [39;49m[32;49m
0x7fb6e779828b    498b4708                mov rax, [r15+0x8]                                     [39;49m[32;49m
0x7fb6e779828f    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7798293    498906                  mov [r14], rax                                         [39;49m
[34;49m .. : hi ( | x ) x = ( 2 + ( 3 * 4 ) ), x [39;49m[33;40mp[39;49m[34;49m return x  .. [39;49m[32;49m
0x7fb6e7798296    49b9d9a593e7b67f0000    mov r9, 0x7fb6e793a5d9                                 [39;49m[32;49m
0x7fb6e77982a0    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fb6e793a5d9[32;49m >[39;49m[39;49m[32;49m
0x7fb6e77982a3    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m .. ) x = ( 2 + ( 3 * 4 ) ), x p return x [39;49m[33;40m;[39;49m[34;49m[39;49m[32;49m
0x7fb6e77982a7    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e77982ab    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e77982af    4983c608                add r14, 0x8                                           [39;49m
[34;49m .. x ) x = ( 2 + ( 3 * 4 ) ), x p return [39;49m[33;40mx[39;49m[34;49m [39;49m[32;49m
0x7fb6e77982b3    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e77982b6    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'hi' :: codeSize = 107
Word : 0x00007fb6e61bdeb8 :: Compiled at : 0x00007fb6e779824b
 =============================
::> 'wdiss' was called at namespaces/compiler/syntax.csl 7.16 <::
 14
DataStack at : [34;49mnamespaces/compiler/syntax.csl : 8.15[39;49m :
DataStack depth =   3 : Dsp (R14) = Top = 0x00007fb6e7cd3a58, InitialTos = 0x00007fb6e7cd3a40, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fb6e7cd3a58 > = 0x0000000000000005	
  DataStack   [  -1 ] < 0x00007fb6e7cd3a50 > = 0x0000000000000005	
  DataStack   [  -2 ] < 0x00007fb6e7cd3a48 > = 0x0000000000000005	

 =============================
Infix.[34;49mhi1[39;49m <:> csl compiled word
SourceCode for Infix.[34;49mhi1[39;49m :> 
[34;49m: hi1 ( a b | x ) x = 2 + ( ( a ) / ( b ) ) * ( 3 * 4 ), return x ; [39;49m
Source code file location of [34;49mhi1[39;49m : "namespaces/compiler/syntax.csl" : 11.2 :: we are now at : namespaces/compiler/syntax.csl : 12.17
Compiled with : optimizeOn, inlineOn, c_syntaxOn, infixOn, Jcc8 on
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xe77982bc -- code size = 131 bytes
TypeSignature : 
 -----------------------------
Word :: Infix.[34;49mhi1[39;49m : definition = 0x00007fb6e77982bc : disassembly at namespaces/compiler/syntax.csl : 12.17 :
[34;49m ..                                     : [39;49m[33;40mhi1[39;49m[34;49m ( a b | x ) x = 2 + ( ( a ) / ( b ) ) * ( 3 * 4 ), return x ;  .. [39;49m[32;49m
0x7fb6e77982bc    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fb6e77982c0    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e77982c4    4981c610000000          add r14, 0x10                                          [39;49m
[34;49m ..                 : hi1 ( a b | x ) x = [39;49m[33;40m2[39;49m[34;49m + ( ( a ) / ( b ) ) * ( 3 * 4 ), return x ;  .. [39;49m[32;49m
0x7fb6e77982cb    48c7c002000000          mov rax, 0x2                                           [39;49m[32;49m
0x7fb6e77982d2    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e77982d6    498906                  mov [r14], rax                                         [39;49m
[34;49m ..         : hi1 ( a b | x ) x = 2 + ( ( [39;49m[33;40ma[39;49m[34;49m ) / ( b ) ) * ( 3 * 4 ), return x ;  .. [39;49m[32;49m
0x7fb6e77982d9    498b47f0                mov rax, [r15-0x10]                                    [39;49m
[34;49m .. : hi1 ( a b | x ) x = 2 + ( ( a ) / ( [39;49m[33;40mb[39;49m[34;49m ) ) * ( 3 * 4 ), return x ;  .. [39;49m[32;49m
0x7fb6e77982dd    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m
[34;49m ..     : hi1 ( a b | x ) x = 2 + ( ( a ) [39;49m[33;40m/[39;49m[34;49m ( b ) ) * ( 3 * 4 ), return x ;  .. [39;49m[32;49m
0x7fb6e77982e1    48c7c200000000          mov rdx, 0x0                                           [39;49m[32;49m
0x7fb6e77982e8    48f7f9                  idiv rcx                                               [39;49m[32;49m
0x7fb6e77982eb    4983c608                add r14, 0x8                                           [39;49m
[34;49m  : hi1 ( a b | x ) x = 2 + ( ( a ) / ( b [39;49m[33;40m)[39;49m[34;49m ) * ( 3 * 4 ), return x ;  .. [39;49m[32;49m
0x7fb6e77982ef    498906                  mov [r14], rax                                         [39;49m
[34;49m: hi1 ( a b | x ) x = 2 + ( ( a ) / ( b ) [39;49m[33;40m)[39;49m[34;49m * ( 3 * 4 ), return x ;  .. [39;49m[32;49m
0x7fb6e77982f2    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fb6e77982f5    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fb6e77982f9    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m ..               : hi1 ( a b | x ) x = 2 [39;49m[33;40m+[39;49m[34;49m ( ( a ) / ( b ) ) * ( 3 * 4 ), return x ;  .. [39;49m[32;49m
0x7fb6e77982fd    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fb6e7798300    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7798304    498906                  mov [r14], rax                                         [39;49m
[34;49m .. b | x ) x = 2 + ( ( a ) / ( b ) ) * ( [39;49m[33;40m3[39;49m[34;49m * 4 ), return x ; [39;49m[32;49m
0x7fb6e7798307    48c7c00c000000          mov rax, 0xc                                           [39;49m[32;49m
0x7fb6e779830e    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7798312    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ) x = 2 + ( ( a ) / ( b ) ) * ( 3 * 4 [39;49m[33;40m)[39;49m[34;49m, return x ; [39;49m[32;49m
0x7fb6e7798315    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fb6e7798318    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fb6e779831c    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m .. | x ) x = 2 + ( ( a ) / ( b ) ) * ( 3 [39;49m[33;40m*[39;49m[34;49m 4 ), return x ; [39;49m[32;49m
0x7fb6e7798320    480fafc1                imul rax, rcx                                          [39;49m
[34;49m ..                     : hi1 ( a b | x ) [39;49m[33;40mx[39;49m[34;49m = 2 + ( ( a ) / ( b ) ) * ( 3 * 4 ), return x ;  .. [39;49m[32;49m
0x7fb6e7798324    498d4f08                lea rcx, [r15+0x8]                                     [39;49m
[34;49m ..                   : hi1 ( a b | x ) x [39;49m[33;40m=[39;49m[34;49m 2 + ( ( a ) / ( b ) ) * ( 3 * 4 ), return x ;  .. [39;49m[32;49m
0x7fb6e7798328    488901                  mov [rcx], rax                                         [39;49m[32;49m
0x7fb6e779832b    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m .. ( a ) / ( b ) ) * ( 3 * 4 ), return x [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fb6e779832f    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e7798333    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e7798337    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m .. ( ( a ) / ( b ) ) * ( 3 * 4 ), return [39;49m[33;40mx[39;49m[34;49m ; [39;49m[32;49m
0x7fb6e779833b    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e779833e    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'hi1' :: codeSize = 130
Word : 0x00007fb6e61bfe18 :: Compiled at : 0x00007fb6e77982bc
 =============================
::> 'wdiss' was called at namespaces/compiler/syntax.csl 12.17 <::
 48
 =============================
Infix.[34;49mhi1[39;49m <:> csl compiled word
SourceCode for Infix.[34;49mhi1[39;49m :> 
[34;49m: hi1 ( a b | x ) x = ( 2 + ( a / b ) * ( 3 * 4 ) ), return x ; [39;49m
Source code file location of [34;49mhi1[39;49m : "namespaces/compiler/syntax.csl" : 14.2 :: we are now at : namespaces/compiler/syntax.csl : 15.17
Compiled with : optimizeOn, inlineOn, c_syntaxOn, infixOn, Jcc8 on
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xe7798344 -- code size = 131 bytes
TypeSignature : 
 -----------------------------
Word :: Infix.[34;49mhi1[39;49m : definition = 0x00007fb6e7798344 : disassembly at namespaces/compiler/syntax.csl : 15.17 :
[34;49m ..                                     : [39;49m[33;40mhi1[39;49m[34;49m ( a b | x ) x = ( 2 + ( a / b ) * ( 3 * 4 ) ), return x ;  .. [39;49m[32;49m
0x7fb6e7798344    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fb6e7798348    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e779834c    4981c610000000          add r14, 0x10                                          [39;49m
[34;49m ..               : hi1 ( a b | x ) x = ( [39;49m[33;40m2[39;49m[34;49m + ( a / b ) * ( 3 * 4 ) ), return x ;  .. [39;49m[32;49m
0x7fb6e7798353    48c7c002000000          mov rax, 0x2                                           [39;49m[32;49m
0x7fb6e779835a    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e779835e    498906                  mov [r14], rax                                         [39;49m
[34;49m ..         : hi1 ( a b | x ) x = ( 2 + ( [39;49m[33;40ma[39;49m[34;49m / b ) * ( 3 * 4 ) ), return x ;  .. [39;49m[32;49m
0x7fb6e7798361    498b47f0                mov rax, [r15-0x10]                                    [39;49m
[34;49m ..     : hi1 ( a b | x ) x = ( 2 + ( a / [39;49m[33;40mb[39;49m[34;49m ) * ( 3 * 4 ) ), return x ;  .. [39;49m[32;49m
0x7fb6e7798365    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m
[34;49m ..       : hi1 ( a b | x ) x = ( 2 + ( a [39;49m[33;40m/[39;49m[34;49m b ) * ( 3 * 4 ) ), return x ;  .. [39;49m[32;49m
0x7fb6e7798369    48c7c200000000          mov rdx, 0x0                                           [39;49m[32;49m
0x7fb6e7798370    48f7f9                  idiv rcx                                               [39;49m[32;49m
0x7fb6e7798373    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7798377    498906                  mov [r14], rax                                         [39;49m
[34;49m ..   : hi1 ( a b | x ) x = ( 2 + ( a / b [39;49m[33;40m)[39;49m[34;49m * ( 3 * 4 ) ), return x ;  .. [39;49m[32;49m
0x7fb6e779837a    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fb6e779837d    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fb6e7798381    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m ..             : hi1 ( a b | x ) x = ( 2 [39;49m[33;40m+[39;49m[34;49m ( a / b ) * ( 3 * 4 ) ), return x ;  .. [39;49m[32;49m
0x7fb6e7798385    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fb6e7798388    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e779838c    498906                  mov [r14], rax                                         [39;49m
[34;49m: hi1 ( a b | x ) x = ( 2 + ( a / b ) * ( [39;49m[33;40m3[39;49m[34;49m * 4 ) ), return x ;  .. [39;49m[32;49m
0x7fb6e779838f    48c7c00c000000          mov rax, 0xc                                           [39;49m[32;49m
0x7fb6e7798396    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e779839a    498906                  mov [r14], rax                                         [39;49m
[34;49m .. b | x ) x = ( 2 + ( a / b ) * ( 3 * 4 [39;49m[33;40m)[39;49m[34;49m ), return x ; [39;49m[32;49m
0x7fb6e779839d    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fb6e77983a0    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fb6e77983a4    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m .. ( a b | x ) x = ( 2 + ( a / b ) * ( 3 [39;49m[33;40m*[39;49m[34;49m 4 ) ), return x ; [39;49m[32;49m
0x7fb6e77983a8    480fafc1                imul rax, rcx                                          [39;49m
[34;49m ..                     : hi1 ( a b | x ) [39;49m[33;40mx[39;49m[34;49m = ( 2 + ( a / b ) * ( 3 * 4 ) ), return x ;  .. [39;49m[32;49m
0x7fb6e77983ac    498d4f08                lea rcx, [r15+0x8]                                     [39;49m
[34;49m ..                   : hi1 ( a b | x ) x [39;49m[33;40m=[39;49m[34;49m ( 2 + ( a / b ) * ( 3 * 4 ) ), return x ;  .. [39;49m[32;49m
0x7fb6e77983b0    488901                  mov [rcx], rax                                         [39;49m[32;49m
0x7fb6e77983b3    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m .. 2 + ( a / b ) * ( 3 * 4 ) ), return x [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fb6e77983b7    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e77983bb    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e77983bf    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m .. ( 2 + ( a / b ) * ( 3 * 4 ) ), return [39;49m[33;40mx[39;49m[34;49m ; [39;49m[32;49m
0x7fb6e77983c3    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e77983c6    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'hi1' :: codeSize = 130
Word : 0x00007fb6e61c27c8 :: Compiled at : 0x00007fb6e7798344
 =============================
::> 'wdiss' was called at namespaces/compiler/syntax.csl 15.17 <::
 48 48
DataStack at : [34;49mnamespaces/compiler/syntax.csl : 18.27[39;49m :
DataStack depth =   3 : Dsp (R14) = Top = 0x00007fb6e7cd3a58, InitialTos = 0x00007fb6e7cd3a40, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fb6e7cd3a58 > = 0x0000000000000005	
  DataStack   [  -1 ] < 0x00007fb6e7cd3a50 > = 0x0000000000000005	
  DataStack   [  -2 ] < 0x00007fb6e7cd3a48 > = 0x0000000000000005	

 =============================
Infix.[34;49mhi2[39;49m <:> csl compiled word
SourceCode for Infix.[34;49mhi2[39;49m :> 
[34;49m: hi2 ( a b | x ) ( x = ( ( ( ( 2 + ( a / b ) ) * ( ( 3 * 4 ) ) ) ) ) ), return x ; [39;49m
Source code file location of [34;49mhi2[39;49m : "namespaces/compiler/syntax.csl" : 19.2 :: we are now at : namespaces/compiler/syntax.csl : 20.17
Compiled with : optimizeOn, inlineOn, c_syntaxOn, infixOn, Jcc8 on
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xe77983cc -- code size = 131 bytes
TypeSignature : 
 -----------------------------
Word :: Infix.[34;49mhi2[39;49m : definition = 0x00007fb6e77983cc : disassembly at namespaces/compiler/syntax.csl : 20.17 :
[34;49m ..                                     : [39;49m[33;40mhi2[39;49m[34;49m ( a b | x ) ( x = ( ( ( ( 2 + ( a / b ) ) * ( ( 3 * 4 ) ) ) ) ) ), return x ;  .. [39;49m[32;49m
0x7fb6e77983cc    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fb6e77983d0    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e77983d4    4981c610000000          add r14, 0x10                                          [39;49m
[34;49m ..       : hi2 ( a b | x ) ( x = ( ( ( ( [39;49m[33;40m2[39;49m[34;49m + ( a / b ) ) * ( ( 3 * 4 ) ) ) ) ) ), return x ;  .. [39;49m[32;49m
0x7fb6e77983db    48c7c002000000          mov rax, 0x2                                           [39;49m[32;49m
0x7fb6e77983e2    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e77983e6    498906                  mov [r14], rax                                         [39;49m
[34;49m .. : hi2 ( a b | x ) ( x = ( ( ( ( 2 + ( [39;49m[33;40ma[39;49m[34;49m / b ) ) * ( ( 3 * 4 ) ) ) ) ) ), return x ;  .. [39;49m[32;49m
0x7fb6e77983e9    498b47f0                mov rax, [r15-0x10]                                    [39;49m
[34;49m: hi2 ( a b | x ) ( x = ( ( ( ( 2 + ( a / [39;49m[33;40mb[39;49m[34;49m ) ) * ( ( 3 * 4 ) ) ) ) ) ), return x ;  .. [39;49m[32;49m
0x7fb6e77983ed    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m
[34;49m  : hi2 ( a b | x ) ( x = ( ( ( ( 2 + ( a [39;49m[33;40m/[39;49m[34;49m b ) ) * ( ( 3 * 4 ) ) ) ) ) ), return x ;  .. [39;49m[32;49m
0x7fb6e77983f1    48c7c200000000          mov rdx, 0x0                                           [39;49m[32;49m
0x7fb6e77983f8    48f7f9                  idiv rcx                                               [39;49m[32;49m
0x7fb6e77983fb    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e77983ff    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ( a b | x ) ( x = ( ( ( ( 2 + ( a / b [39;49m[33;40m)[39;49m[34;49m ) * ( ( 3 * 4 ) ) ) ) ) ), return x ; [39;49m[32;49m
0x7fb6e7798402    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fb6e7798405    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fb6e7798409    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m ..     : hi2 ( a b | x ) ( x = ( ( ( ( 2 [39;49m[33;40m+[39;49m[34;49m ( a / b ) ) * ( ( 3 * 4 ) ) ) ) ) ), return x ;  .. [39;49m[32;49m
0x7fb6e779840d    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fb6e7798410    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7798414    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ) ( x = ( ( ( ( 2 + ( a / b ) ) * ( ( [39;49m[33;40m3[39;49m[34;49m * 4 ) ) ) ) ) ), return x ; [39;49m[32;49m
0x7fb6e7798417    48c7c00c000000          mov rax, 0xc                                           [39;49m[32;49m
0x7fb6e779841e    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7798422    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ( ( ( ( 2 + ( a / b ) ) * ( ( 3 * 4 ) [39;49m[33;40m)[39;49m[34;49m ) ) ) ), return x ; [39;49m[32;49m
0x7fb6e7798425    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fb6e7798428    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fb6e779842c    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m .. ( x = ( ( ( ( 2 + ( a / b ) ) * ( ( 3 [39;49m[33;40m*[39;49m[34;49m 4 ) ) ) ) ) ), return x ; [39;49m[32;49m
0x7fb6e7798430    480fafc1                imul rax, rcx                                          [39;49m
[34;49m ..                   : hi2 ( a b | x ) ( [39;49m[33;40mx[39;49m[34;49m = ( ( ( ( 2 + ( a / b ) ) * ( ( 3 * 4 ) ) ) ) ) ), return x ;  .. [39;49m[32;49m
0x7fb6e7798434    498d4f08                lea rcx, [r15+0x8]                                     [39;49m
[34;49m ..                 : hi2 ( a b | x ) ( x [39;49m[33;40m=[39;49m[34;49m ( ( ( ( 2 + ( a / b ) ) * ( ( 3 * 4 ) ) ) ) ) ), return x ;  .. [39;49m[32;49m
0x7fb6e7798438    488901                  mov [rcx], rax                                         [39;49m[32;49m
0x7fb6e779843b    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m .. ) ) * ( ( 3 * 4 ) ) ) ) ) ), return x [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fb6e779843f    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e7798443    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e7798447    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m .. b ) ) * ( ( 3 * 4 ) ) ) ) ) ), return [39;49m[33;40mx[39;49m[34;49m ; [39;49m[32;49m
0x7fb6e779844b    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e779844e    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'hi2' :: codeSize = 130
Word : 0x00007fb6e61c4e08 :: Compiled at : 0x00007fb6e77983cc
 =============================
::> 'wdiss' was called at namespaces/compiler/syntax.csl 20.17 <::
 48
DataStack at : [34;49mnamespaces/compiler/syntax.csl : 21.26[39;49m :
DataStack depth =   3 : Dsp (R14) = Top = 0x00007fb6e7cd3a58, InitialTos = 0x00007fb6e7cd3a40, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fb6e7cd3a58 > = 0x0000000000000005	
  DataStack   [  -1 ] < 0x00007fb6e7cd3a50 > = 0x0000000000000005	
  DataStack   [  -2 ] < 0x00007fb6e7cd3a48 > = 0x0000000000000005	
 48
DataStack at : [34;49mnamespaces/compiler/syntax.csl : 23.27[39;49m :
DataStack depth =   3 : Dsp (R14) = Top = 0x00007fb6e7cd3a58, InitialTos = 0x00007fb6e7cd3a40, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fb6e7cd3a58 > = 0x0000000000000005	
  DataStack   [  -1 ] < 0x00007fb6e7cd3a50 > = 0x0000000000000005	
  DataStack   [  -2 ] < 0x00007fb6e7cd3a48 > = 0x0000000000000005	

 =============================
Infix.[34;49mh3[39;49m <:> csl compiled word
SourceCode for Infix.[34;49mh3[39;49m :> 
[34;49m: h3 ( a b | x ) ( x = ( ( ( ( 2 + ( ( 3 * 4 ) ) - ( (a) / (b) ) ) ) ) ) ), return x ; [39;49m
Source code file location of [34;49mh3[39;49m : "namespaces/compiler/syntax.csl" : 24.2 :: we are now at : namespaces/compiler/syntax.csl : 25.16
Compiled with : optimizeOn, inlineOn, c_syntaxOn, infixOn, Jcc8 on
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xe7798454 -- code size = 130 bytes
TypeSignature : Any 
 -----------------------------
Word :: Infix.[34;49mh3[39;49m : definition = 0x00007fb6e7798454 : disassembly at namespaces/compiler/syntax.csl : 25.16 :
[34;49m ..                                     : [39;49m[33;40mh3[39;49m[34;49m ( a b | x ) ( x = ( ( ( ( 2 + ( ( 3 * 4 ) ) - ( (a) / (b) ) ) ) ) ) ), return x ;  .. [39;49m[32;49m
0x7fb6e7798454    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fb6e7798458    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e779845c    4981c610000000          add r14, 0x10                                          [39;49m
[34;49m ..        : h3 ( a b | x ) ( x = ( ( ( ( [39;49m[33;40m2[39;49m[34;49m + ( ( 3 * 4 ) ) - ( (a) / (b) ) ) ) ) ) ), return x ;  .. [39;49m[32;49m
0x7fb6e7798463    48c7c002000000          mov rax, 0x2                                           [39;49m[32;49m
0x7fb6e779846a    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e779846e    498906                  mov [r14], rax                                         [39;49m
[34;49m   : h3 ( a b | x ) ( x = ( ( ( ( 2 + ( ( [39;49m[33;40m3[39;49m[34;49m * 4 ) ) - ( (a) / (b) ) ) ) ) ) ), return x ;  .. [39;49m[32;49m
0x7fb6e7798471    48c7c00c000000          mov rax, 0xc                                           [39;49m[32;49m
0x7fb6e7798478    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e779847c    498906                  mov [r14], rax                                         [39;49m
[34;49m .. b | x ) ( x = ( ( ( ( 2 + ( ( 3 * 4 ) [39;49m[33;40m)[39;49m[34;49m - ( (a) / (b) ) ) ) ) ) ), return x ; [39;49m[32;49m
0x7fb6e779847f    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fb6e7798482    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fb6e7798486    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m ..      : h3 ( a b | x ) ( x = ( ( ( ( 2 [39;49m[33;40m+[39;49m[34;49m ( ( 3 * 4 ) ) - ( (a) / (b) ) ) ) ) ) ), return x ;  .. [39;49m[32;49m
0x7fb6e779848a    4803c1                  add rax, rcx                                           [39;49m
[34;49m : h3 ( a b | x ) ( x = ( ( ( ( 2 + ( ( 3 [39;49m[33;40m*[39;49m[34;49m 4 ) ) - ( (a) / (b) ) ) ) ) ) ), return x ;  .. [39;49m[32;49m
0x7fb6e779848d    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7798491    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  ( x = ( ( ( ( 2 + ( ( 3 * 4 ) ) - ( ([39;49m[33;40ma[39;49m[34;49m) / (b) ) ) ) ) ) ), return x ; [39;49m[32;49m
0x7fb6e7798494    498b47f0                mov rax, [r15-0x10]                                    [39;49m
[34;49m ..  ( ( ( ( 2 + ( ( 3 * 4 ) ) - ( (a) / ([39;49m[33;40mb[39;49m[34;49m) ) ) ) ) ) ), return x ; [39;49m[32;49m
0x7fb6e7798498    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m
[34;49m .. x = ( ( ( ( 2 + ( ( 3 * 4 ) ) - ( (a) [39;49m[33;40m/[39;49m[34;49m (b) ) ) ) ) ) ), return x ; [39;49m[32;49m
0x7fb6e779849c    48c7c200000000          mov rdx, 0x0                                           [39;49m[32;49m
0x7fb6e77984a3    48f7f9                  idiv rcx                                               [39;49m[32;49m
0x7fb6e77984a6    4983c608                add r14, 0x8                                           [39;49m
[34;49m .. ( ( ( ( 2 + ( ( 3 * 4 ) ) - ( (a) / (b[39;49m[33;40m)[39;49m[34;49m ) ) ) ) ) ), return x ; [39;49m[32;49m
0x7fb6e77984aa    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ( ( ( 2 + ( ( 3 * 4 ) ) - ( (a) / (b) [39;49m[33;40m)[39;49m[34;49m ) ) ) ) ), return x ; [39;49m[32;49m
0x7fb6e77984ad    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fb6e77984b0    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fb6e77984b4    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m .. | x ) ( x = ( ( ( ( 2 + ( ( 3 * 4 ) ) [39;49m[33;40m-[39;49m[34;49m ( (a) / (b) ) ) ) ) ) ), return x ; [39;49m[32;49m
0x7fb6e77984b8    482bc1                  sub rax, rcx                                           [39;49m
[34;49m ..                    : h3 ( a b | x ) ( [39;49m[33;40mx[39;49m[34;49m = ( ( ( ( 2 + ( ( 3 * 4 ) ) - ( (a) / (b) ) ) ) ) ) ), return x ;  .. [39;49m[32;49m
0x7fb6e77984bb    498d4f08                lea rcx, [r15+0x8]                                     [39;49m
[34;49m ..                  : h3 ( a b | x ) ( x [39;49m[33;40m=[39;49m[34;49m ( ( ( ( 2 + ( ( 3 * 4 ) ) - ( (a) / (b) ) ) ) ) ) ), return x ;  .. [39;49m[32;49m
0x7fb6e77984bf    488901                  mov [rcx], rax                                         [39;49m[32;49m
0x7fb6e77984c2    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m .. ) - ( (a) / (b) ) ) ) ) ) ), return x [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fb6e77984c6    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e77984ca    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e77984ce    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m .. ) ) - ( (a) / (b) ) ) ) ) ) ), return [39;49m[33;40mx[39;49m[34;49m ; [39;49m[32;49m
0x7fb6e77984d2    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e77984d5    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'h3' :: codeSize = 129
Word : 0x00007fb6e61c8578 :: Compiled at : 0x00007fb6e7798454
 =============================
::> 'wdiss' was called at namespaces/compiler/syntax.csl 25.16 <::
 12 6 3 h3_assert1  : ok

 12
DataStack at : [34;49mnamespaces/compiler/syntax.csl : 27.26[39;49m :
DataStack depth =   3 : Dsp (R14) = Top = 0x00007fb6e7cd3a58, InitialTos = 0x00007fb6e7cd3a40, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fb6e7cd3a58 > = 0x0000000000000005	
  DataStack   [  -1 ] < 0x00007fb6e7cd3a50 > = 0x0000000000000005	
  DataStack   [  -2 ] < 0x00007fb6e7cd3a48 > = 0x0000000000000005	

 =============================
Infix.[34;49mh4[39;49m <:> csl compiled word
SourceCode for Infix.[34;49mh4[39;49m :> 
[34;49m: h4 ( a b | x ) x = ( 20 - ( 3 * 4 ) - ( a / b ) ), return x ; [39;49m
Source code file location of [34;49mh4[39;49m : "namespaces/compiler/syntax.csl" : 28.2 :: we are now at : namespaces/compiler/syntax.csl : 29.16
Compiled with : optimizeOn, inlineOn, c_syntaxOn, infixOn, Jcc8 on
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xe77984db -- code size = 130 bytes
TypeSignature : Any 
 -----------------------------
Word :: Infix.[34;49mh4[39;49m : definition = 0x00007fb6e77984db : disassembly at namespaces/compiler/syntax.csl : 29.16 :
[34;49m ..                                     : [39;49m[33;40mh4[39;49m[34;49m ( a b | x ) x = ( 20 - ( 3 * 4 ) - ( a / b ) ), return x ;  .. [39;49m[32;49m
0x7fb6e77984db    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fb6e77984df    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e77984e3    4981c610000000          add r14, 0x10                                          [39;49m
[34;49m ..                : h4 ( a b | x ) x = ( [39;49m[33;40m20[39;49m[34;49m - ( 3 * 4 ) - ( a / b ) ), return x ;  .. [39;49m[32;49m
0x7fb6e77984ea    48c7c014000000          mov rax, 0x14                                          [39;49m[32;49m
0x7fb6e77984f1    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e77984f5    498906                  mov [r14], rax                                         [39;49m
[34;49m ..         : h4 ( a b | x ) x = ( 20 - ( [39;49m[33;40m3[39;49m[34;49m * 4 ) - ( a / b ) ), return x ;  .. [39;49m[32;49m
0x7fb6e77984f8    48c7c00c000000          mov rax, 0xc                                           [39;49m[32;49m
0x7fb6e77984ff    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7798503    498906                  mov [r14], rax                                         [39;49m
[34;49m ..   : h4 ( a b | x ) x = ( 20 - ( 3 * 4 [39;49m[33;40m)[39;49m[34;49m - ( a / b ) ), return x ;  .. [39;49m[32;49m
0x7fb6e7798506    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fb6e7798509    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fb6e779850d    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m ..             : h4 ( a b | x ) x = ( 20 [39;49m[33;40m-[39;49m[34;49m ( 3 * 4 ) - ( a / b ) ), return x ;  .. [39;49m[32;49m
0x7fb6e7798511    482bc1                  sub rax, rcx                                           [39;49m
[34;49m ..       : h4 ( a b | x ) x = ( 20 - ( 3 [39;49m[33;40m*[39;49m[34;49m 4 ) - ( a / b ) ), return x ;  .. [39;49m[32;49m
0x7fb6e7798514    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7798518    498906                  mov [r14], rax                                         [39;49m
[34;49m: h4 ( a b | x ) x = ( 20 - ( 3 * 4 ) - ( [39;49m[33;40ma[39;49m[34;49m / b ) ), return x ;  .. [39;49m[32;49m
0x7fb6e779851b    498b47f0                mov rax, [r15-0x10]                                    [39;49m
[34;49m ..  b | x ) x = ( 20 - ( 3 * 4 ) - ( a / [39;49m[33;40mb[39;49m[34;49m ) ), return x ; [39;49m[32;49m
0x7fb6e779851f    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m
[34;49m ..  a b | x ) x = ( 20 - ( 3 * 4 ) - ( a [39;49m[33;40m/[39;49m[34;49m b ) ), return x ; [39;49m[32;49m
0x7fb6e7798523    48c7c200000000          mov rdx, 0x0                                           [39;49m[32;49m
0x7fb6e779852a    48f7f9                  idiv rcx                                               [39;49m[32;49m
0x7fb6e779852d    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7798531    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  | x ) x = ( 20 - ( 3 * 4 ) - ( a / b [39;49m[33;40m)[39;49m[34;49m ), return x ; [39;49m[32;49m
0x7fb6e7798534    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fb6e7798537    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fb6e779853b    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m .. : h4 ( a b | x ) x = ( 20 - ( 3 * 4 ) [39;49m[33;40m-[39;49m[34;49m ( a / b ) ), return x ;  .. [39;49m[32;49m
0x7fb6e779853f    482bc1                  sub rax, rcx                                           [39;49m
[34;49m ..                      : h4 ( a b | x ) [39;49m[33;40mx[39;49m[34;49m = ( 20 - ( 3 * 4 ) - ( a / b ) ), return x ;  .. [39;49m[32;49m
0x7fb6e7798542    498d4f08                lea rcx, [r15+0x8]                                     [39;49m
[34;49m ..                    : h4 ( a b | x ) x [39;49m[33;40m=[39;49m[34;49m ( 20 - ( 3 * 4 ) - ( a / b ) ), return x ;  .. [39;49m[32;49m
0x7fb6e7798546    488901                  mov [rcx], rax                                         [39;49m[32;49m
0x7fb6e7798549    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m .. 0 - ( 3 * 4 ) - ( a / b ) ), return x [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fb6e779854d    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e7798551    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e7798555    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m ..  20 - ( 3 * 4 ) - ( a / b ) ), return [39;49m[33;40mx[39;49m[34;49m ; [39;49m[32;49m
0x7fb6e7798559    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e779855c    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'h4' :: codeSize = 129
Word : 0x00007fb6e61cc3c8 :: Compiled at : 0x00007fb6e77984db
 =============================
::> 'wdiss' was called at namespaces/compiler/syntax.csl 29.16 <::
 6
DataStack at : [34;49mnamespaces/compiler/syntax.csl : 30.24[39;49m :
DataStack depth =   3 : Dsp (R14) = Top = 0x00007fb6e7cd3a58, InitialTos = 0x00007fb6e7cd3a40, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fb6e7cd3a58 > = 0x0000000000000005	
  DataStack   [  -1 ] < 0x00007fb6e7cd3a50 > = 0x0000000000000005	
  DataStack   [  -2 ] < 0x00007fb6e7cd3a48 > = 0x0000000000000005	
 6
DataStack at : [34;49mnamespaces/compiler/syntax.csl : 31.25[39;49m :
DataStack depth =   3 : Dsp (R14) = Top = 0x00007fb6e7cd3a58, InitialTos = 0x00007fb6e7cd3a40, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fb6e7cd3a58 > = 0x0000000000000005	
  DataStack   [  -1 ] < 0x00007fb6e7cd3a50 > = 0x0000000000000005	
  DataStack   [  -2 ] < 0x00007fb6e7cd3a48 > = 0x0000000000000005	

DataStack at : [34;49mnamespaces/compiler/syntax.csl : 34.42[39;49m :
DataStack depth =   5 : Dsp (R14) = Top = 0x00007fb6e7cd3a68, InitialTos = 0x00007fb6e7cd3a40, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fb6e7cd3a68 > = 0x0000000000000000	
  DataStack   [  -1 ] < 0x00007fb6e7cd3a60 > = 0x0000000000000003	
  DataStack   [  -2 ] < 0x00007fb6e7cd3a58 > = 0x0000000000000005	
  DataStack   [  -3 ] < 0x00007fb6e7cd3a50 > = 0x0000000000000005	
  DataStack   [  -4 ] < 0x00007fb6e7cd3a48 > = 0x0000000000000005	
 3 
above line should read 3
 hi1 hi2 hi3 hi42 hi42
 hi2 hi3 hi42
 hi1 hi2 hi3 hi42
 hi42
 hi42
 hi42 ok ok
hello world! - parse this!?
1234		and this! 
	also this!
Hello world! = 0x000004d2


Hello world! = 42


hello world! - parse this!?
	 
	also this!
DataStack at : [34;49mnamespaces/test/system.csl : 32.18[39;49m :
DataStack depth =   8 : Dsp (R14) = Top = 0x00007fb6e7cd3a80, InitialTos = 0x00007fb6e7cd3a40, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fb6e7cd3a80 > = 0x00007fb6e7cd3a68	
  DataStack   [  -1 ] < 0x00007fb6e7cd3a78 > = 0x00007fb6e78bf800	< word : User.[34;49ms[39;49m : value = 0x0000562d897e26e0 >
  DataStack   [  -2 ] < 0x00007fb6e7cd3a70 > = 0x0000000000000000	
  DataStack   [  -3 ] < 0x00007fb6e7cd3a68 > = 0x0000000000000000	
  DataStack   [  -4 ] < 0x00007fb6e7cd3a60 > = 0x00007fb6e78bf800	< word : User.[34;49ms[39;49m : value = 0x0000562d897e26e0 >
  DataStack   [  -5 ] < 0x00007fb6e7cd3a58 > = 0x0000000000000005	
  DataStack   [  -6 ] < 0x00007fb6e7cd3a50 > = 0x0000000000000005	
  DataStack   [  -7 ] < 0x00007fb6e7cd3a48 > = 0x0000000000000005	

Hello world! = 0x000004d2


hello world!
parse this!


 
 and this!

hello world! - parse this!?
	 	 and this!
Hello world! = 0x000004d2


Hello world! = 0x000004d2


yes, Hello world! = 0x000004d2
yes, Hello world! = 0x000004d2 : and more yet
e
	eui 
line above should read... 
i	e
 =============================
Shell.[34;49mhio[39;49m <:> csl compiled word
SourceCode for Shell.[34;49mhio[39;49m :> 
[34;49m: hio if 1 p else 0 p endif ; [39;49m
Source code file location of [34;49mhio[39;49m : "namespaces/test/system.csl" : 63.2 :: we are now at : namespaces/test/system.csl : 64.17
Compiled with : optimizeOn, inlineOn, Jcc8 on
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xe7799155 -- code size = 76 bytes
 -----------------------------
Word :: Shell.[34;49mhio[39;49m : definition = 0x00007fb6e7799155 : disassembly at namespaces/test/system.csl : 64.17 :[32;49m
0x7fb6e7799155    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fb6e7799158    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m ..                                 : hio [39;49m[33;40mif[39;49m[34;49m 1 p else 0 p endif ;  .. [39;49m[32;49m
0x7fb6e779915c    4885c0                  test rax, rax                                          [39;49m[32;49m
0x7fb6e779915f    0f8420000000            jz 0x7fb6e7799185          	< Shell.[34;49mhio[39;49m+48[32;49m >[39;49m[39;49m
[34;49m ..                              : hio if [39;49m[33;40m1[39;49m[34;49m p else 0 p endif ;  .. [39;49m[32;49m
0x7fb6e7799165    48c7c001000000          mov rax, 0x1                                           [39;49m[32;49m
0x7fb6e779916c    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7799170    498906                  mov [r14], rax                                         [39;49m
[34;49m ..                            : hio if 1 [39;49m[33;40mp[39;49m[34;49m else 0 p endif ;  .. [39;49m[32;49m
0x7fb6e7799173    49b9d9a593e7b67f0000    mov r9, 0x7fb6e793a5d9                                 [39;49m[32;49m
0x7fb6e779917d    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fb6e793a5d9[32;49m >[39;49m[39;49m
[34;49m ..                          : hio if 1 p [39;49m[33;40melse[39;49m[34;49m 0 p endif ;  .. [39;49m[32;49m
0x7fb6e7799180    e91b000000              jmp 0x7fb6e77991a0         	< Shell.[34;49mhio[39;49m+75[32;49m >[39;49m[39;49m
[34;49m ..                     : hio if 1 p else [39;49m[33;40m0[39;49m[34;49m p endif ;  .. [39;49m[32;49m
0x7fb6e7799185    48c7c000000000          mov rax, 0x0                                           [39;49m[32;49m
0x7fb6e779918c    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7799190    498906                  mov [r14], rax                                         [39;49m
[34;49m ..                   : hio if 1 p else 0 [39;49m[33;40mp[39;49m[34;49m endif ;  .. [39;49m[32;49m
0x7fb6e7799193    49b9d9a593e7b67f0000    mov r9, 0x7fb6e793a5d9                                 [39;49m[32;49m
0x7fb6e779919d    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fb6e793a5d9[32;49m >[39;49m[39;49m
[34;49m ..           : hio if 1 p else 0 p endif [39;49m[33;40m;[39;49m[34;49m  .. [39;49m[32;49m
0x7fb6e77991a0    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'hio' :: codeSize = 75
Word : 0x00007fb6e61e91d0 :: Compiled at : 0x00007fb6e7799155
 =============================
::> 'wdiss' was called at namespaces/test/system.csl 64.17 <::
 1 0
 876543

 =============================
C.[34;49m$$[39;49m <:> csl compiled word
SourceCode for C.[34;49m$$[39;49m :> 
[34;49m: $$ "" { token dup ";" strcmp } { { dup "." strcmp } { strcat " " strcat } { strcat } if3 } while drop location "$$" ps dup ps _sh return ; [39;49m
Source code file location of [34;49m$$[39;49m : "namespaces/test/system.csl" : 74.2 :: we are now at : namespaces/test/system.csl : 82.15
Compiled with : optimizeOn, inlineOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xe779920f -- code size = 362 bytes
TypeSignature : 
 -----------------------------
Word :: C.[34;49m$$[39;49m : definition = 0x00007fb6e779920f : disassembly at namespaces/test/system.csl : 82.15 :
[34;49m ..                                 : $$  [39;49m[33;40m"[39;49m[34;49m" { token dup ";" strcmp }  {  { dup "." strcmp } { strcat " " strcat } { strcat } if3 }  while drop .. [39;49m[32;49m
0x7fb6e779920f    48b8a6ad41e7b67f0000    mov rax, 0x7fb6e741ada6                                [39;49m[32;49m
0x7fb6e7799219    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e779921d    498906                  mov [r14], rax                                         [39;49m
[34;49m ..                            : $$  "" { [39;49m[33;40mtoken[39;49m[34;49m dup ";" strcmp }  {  { dup "." strcmp } { strcat " " strcat } { strcat } if3 }  while drop loca .. [39;49m[32;49m
0x7fb6e7799220    49b8f08580892d560000    mov r8, 0x562d898085f0                                 [39;49m[32;49m
0x7fb6e779922a    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e7799234    49ffd1                  call r9                    	< Compiler.[34;49mtoken[39;49m : 0x0000562d898085f0[32;49m >[39;49m[39;49m
[34;49m ..                      : $$  "" { token [39;49m[33;40mdup[39;49m[34;49m ";" strcmp }  {  { dup "." strcmp } { strcat " " strcat } { strcat } if3 }  while drop location " .. [39;49m[32;49m
0x7fb6e7799237    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fb6e779923a    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e779923e    498906                  mov [r14], rax                                         [39;49m
[34;49m ..                  : $$  "" { token dup [39;49m[33;40m"[39;49m[34;49m;" strcmp }  {  { dup "." strcmp } { strcat " " strcat } { strcat } if3 }  while drop location "$$"  .. [39;49m[32;49m
0x7fb6e7799241    48b8aead41e7b67f0000    mov rax, 0x7fb6e741adae    	[32;49m< string : '[39;49m[39;49m;[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fb6e779924b    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e779924f    498906                  mov [r14], rax                                         [39;49m
[34;49m ..              : $$  "" { token dup ";" [39;49m[33;40mstrcmp[39;49m[34;49m }  {  { dup "." strcmp } { strcat " " strcat } { strcat } if3 }  while drop location "$$" ps d .. [39;49m[32;49m
0x7fb6e7799252    49b8306e80892d560000    mov r8, 0x562d89806e30                                 [39;49m[32;49m
0x7fb6e779925c    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e7799266    49ffd1                  call r9                    	< String.[34;49mstrcmp[39;49m : 0x0000562d89806e30[32;49m >[39;49m[39;49m
[34;49m ..       : $$  "" { token dup ";" strcmp [39;49m[33;40m}[39;49m[34;49m  {  { dup "." strcmp } { strcat " " strcat } { strcat } if3 }  while drop location "$$" ps dup ps _ .. [39;49m[32;49m
0x7fb6e7799269    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fb6e779926c    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m .. strcat " " strcat } { strcat } if3 }  [39;49m[33;40mwhile[39;49m[34;49m drop location "$$" ps dup ps _sh return ; [39;49m[32;49m
0x7fb6e7799270    4885c0                  test rax, rax                                          [39;49m[32;49m
0x7fb6e7799273    0f84a2000000            jz 0x7fb6e779931b          	< C.[34;49m$$[39;49m+268[32;49m >[39;49m[39;49m
[34;49m  : $$  "" { token dup ";" strcmp }  {  { [39;49m[33;40mdup[39;49m[34;49m "." strcmp } { strcat " " strcat } { strcat } if3 }  while drop location "$$" ps dup ps _sh retur .. [39;49m[32;49m
0x7fb6e7799279    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fb6e779927c    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7799280    498906                  mov [r14], rax                                         [39;49m
[34;49m .. "" { token dup ";" strcmp }  {  { dup [39;49m[33;40m"[39;49m[34;49m." strcmp } { strcat " " strcat } { strcat } if3 }  while drop location "$$" ps dup ps _sh return ; [39;49m[32;49m
0x7fb6e7799283    48b8b8ad41e7b67f0000    mov rax, 0x7fb6e741adb8    	[32;49m< string : '[39;49m[39;49m.[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fb6e779928d    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7799291    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  token dup ";" strcmp }  {  { dup "." [39;49m[33;40mstrcmp[39;49m[34;49m } { strcat " " strcat } { strcat } if3 }  while drop location "$$" ps dup ps _sh return ; [39;49m[32;49m
0x7fb6e7799294    49b8306e80892d560000    mov r8, 0x562d89806e30                                 [39;49m[32;49m
0x7fb6e779929e    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e77992a8    49ffd1                  call r9                    	< String.[34;49mstrcmp[39;49m : 0x0000562d89806e30[32;49m >[39;49m[39;49m
[34;49m .. dup ";" strcmp }  {  { dup "." strcmp [39;49m[33;40m}[39;49m[34;49m { strcat " " strcat } { strcat } if3 }  while drop location "$$" ps dup ps _sh return ; [39;49m[32;49m
0x7fb6e77992ab    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fb6e77992ae    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m .. mp } { strcat " " strcat } { strcat } [39;49m[33;40mif3[39;49m[34;49m }  while drop location "$$" ps dup ps _sh return ; [39;49m[32;49m
0x7fb6e77992b2    4885c0                  test rax, rax                                          [39;49m[32;49m
0x7fb6e77992b5    0f8444000000            jz 0x7fb6e77992ff          	< C.[34;49m$$[39;49m+240[32;49m >[39;49m[39;49m
[34;49m .. ";" strcmp }  {  { dup "." strcmp } { [39;49m[33;40mstrcat[39;49m[34;49m " " strcat } { strcat } if3 }  while drop location "$$" ps dup ps _sh return ; [39;49m[32;49m
0x7fb6e77992bb    49b8906e80892d560000    mov r8, 0x562d89806e90                                 [39;49m[32;49m
0x7fb6e77992c5    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e77992cf    49ffd1                  call r9                    	< String.[34;49mstrcat[39;49m : 0x0000562d89806e90[32;49m >[39;49m[39;49m
[34;49m .. cmp }  {  { dup "." strcmp } { strcat [39;49m[33;40m"[39;49m[34;49m " strcat } { strcat } if3 }  while drop location "$$" ps dup ps _sh return ; [39;49m[32;49m
0x7fb6e77992d2    48b8c2ad41e7b67f0000    mov rax, 0x7fb6e741adc2    	[32;49m< string : '[39;49m[39;49m [39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fb6e77992dc    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e77992e0    498906                  mov [r14], rax                                         [39;49m
[34;49m .. }  {  { dup "." strcmp } { strcat " " [39;49m[33;40mstrcat[39;49m[34;49m } { strcat } if3 }  while drop location "$$" ps dup ps _sh return ; [39;49m[32;49m
0x7fb6e77992e3    49b8906e80892d560000    mov r8, 0x562d89806e90                                 [39;49m[32;49m
0x7fb6e77992ed    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e77992f7    49ffd1                  call r9                    	< String.[34;49mstrcat[39;49m : 0x0000562d89806e90[32;49m >[39;49m[39;49m
[34;49m ..  dup "." strcmp } { strcat " " strcat [39;49m[33;40m}[39;49m[34;49m { strcat } if3 }  while drop location "$$" ps dup ps _sh return ; [39;49m[32;49m
0x7fb6e77992fa    e917000000              jmp 0x7fb6e7799316         	< C.[34;49m$$[39;49m+263[32;49m >[39;49m[39;49m
[34;49m ..  "." strcmp } { strcat " " strcat } { [39;49m[33;40mstrcat[39;49m[34;49m } if3 }  while drop location "$$" ps dup ps _sh return ; [39;49m[32;49m
0x7fb6e77992ff    49b8906e80892d560000    mov r8, 0x562d89806e90                                 [39;49m[32;49m
0x7fb6e7799309    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e7799313    49ffd1                  call r9                    	< String.[34;49mstrcat[39;49m : 0x0000562d89806e90[32;49m >[39;49m[39;49m
[34;49m ..  { strcat " " strcat } { strcat } if3 [39;49m[33;40m}[39;49m[34;49m  while drop location "$$" ps dup ps _sh return ; [39;49m[32;49m
0x7fb6e7799316    e905ffffff              jmp 0x7fb6e7799220         	< C.[34;49m$$[39;49m+17[32;49m >[39;49m[39;49m
[34;49m ..  " " strcat } { strcat } if3 }  while [39;49m[33;40mdrop[39;49m[34;49m location "$$" ps dup ps _sh return ; [39;49m[32;49m
0x7fb6e779931b    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m .. strcat } { strcat } if3 }  while drop [39;49m[33;40mlocation[39;49m[34;49m "$$" ps dup ps _sh return ; [39;49m[32;49m
0x7fb6e779931f    49b91fb093e7b67f0000    mov r9, 0x7fb6e793b01f                                 [39;49m[32;49m
0x7fb6e7799329    49ffd1                  call r9                    	< System.[34;49mlocation[39;49m : 0x00007fb6e793b01f[32;49m >[39;49m[39;49m
[34;49m .. { strcat } if3 }  while drop location [39;49m[33;40m"[39;49m[34;49m$$" ps dup ps _sh return ; [39;49m[32;49m
0x7fb6e779932c    48b8cdad41e7b67f0000    mov rax, 0x7fb6e741adcd    	[32;49m< string : '[39;49m[39;49m$$[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fb6e7799336    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e779933a    498906                  mov [r14], rax                                         [39;49m
[34;49m .. cat } if3 }  while drop location "$$" [39;49m[33;40mps[39;49m[34;49m dup ps _sh return ; [39;49m[32;49m
0x7fb6e779933d    49b97da393e7b67f0000    mov r9, 0x7fb6e793a37d                                 [39;49m[32;49m
0x7fb6e7799347    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fb6e793a37d[32;49m >[39;49m[39;49m
[34;49m ..  } if3 }  while drop location "$$" ps [39;49m[33;40mdup[39;49m[34;49m ps _sh return ; [39;49m[32;49m
0x7fb6e779934a    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fb6e779934d    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7799351    498906                  mov [r14], rax                                         [39;49m
[34;49m .. f3 }  while drop location "$$" ps dup [39;49m[33;40mps[39;49m[34;49m _sh return ; [39;49m[32;49m
0x7fb6e7799354    49b97da393e7b67f0000    mov r9, 0x7fb6e793a37d                                 [39;49m[32;49m
0x7fb6e779935e    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fb6e793a37d[32;49m >[39;49m[39;49m
[34;49m .. }  while drop location "$$" ps dup ps [39;49m[33;40m_sh[39;49m[34;49m return ; [39;49m[32;49m
0x7fb6e7799361    49b8b09e80892d560000    mov r8, 0x562d89809eb0                                 [39;49m[32;49m
0x7fb6e779936b    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e7799375    49ffd1                  call r9                    	< Shell.[34;49m_sh[39;49m : 0x0000562d89809eb0[32;49m >[39;49m[39;49m
[34;49m .. op location "$$" ps dup ps _sh return [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fb6e7799378    c3                      ret                                                    [39;49m
Word_Disassemble : word - '$$' :: codeSize = 361
Word : 0x00007fb6e61eb6c8 :: Compiled at : 0x00007fb6e779920f
 =============================
::> 'wdiss' was called at namespaces/test/system.csl 82.15 <::

 =============================
C_Syntax.[34;49mtestc1[39;49m <:> csl compiled word, prefix
SourceCode for C_Syntax.[34;49mtestc1[39;49m :> 
[34;49mvoid testc1 () { int tdbg = 1, tdbg2 = 2, tdbg3 = 3 ; int tdbg4 = 4, tdbg5 = 5, tdbg6 = 6 ; ps ( "\ntdbg =" ) ; p ( tdbg ) ; ps ( "\ntdbg2 =" ) ; p ( tdbg2 ) ; ps ( "\ntdbg3 =" ) ; p ( tdbg3 ) ; ps ( "\ntdbg4 =" ) ; p ( tdbg4 ) ; ps ( "\ntdbg5 =" ) ; p ( tdbg5 ) ; ps ( "\ntdbg6 =" ) ; p ( tdbg6 ) ; ps ( "\nxhii =" ) ; xhii () ; xhi0(); xhi1 () ; xhi( 4 ); xhi01 ; xhi1 ; xhi2(8) ; xhi2a ( "xhi2a =", 8 ) ; } [39;49m
Source code file location of [34;49mtestc1[39;49m : "namespaces/compiler/interpreter.csl" : 32.7 :: we are now at : namespaces/compiler/interpreter.csl : 44.19
Compiled with : optimizeOn, inlineOn, c_syntaxOn, infixOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xe779970b -- code size = 1071 bytes
TypeSignature : 
 -----------------------------
Word :: C_Syntax.[34;49mtestc1[39;49m : definition = 0x00007fb6e779970b : disassembly at namespaces/compiler/interpreter.csl : 44.19 :
[34;49m ..                                  void [39;49m[33;40mtestc1[39;49m[34;49m ()  { int tdbg = 1, tdbg2 = 2, tdbg3 = 3 ;  int tdbg4 = 4, tdbg5 = 5, tdbg6 = 6 ;  ps ( "\ntdb .. [39;49m[32;49m
0x7fb6e779970b    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fb6e779970f    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e7799713    4981c638000000          add r14, 0x38                                          [39;49m
[34;49m ..          void testc1 ()  { int tdbg = [39;49m[33;40m1[39;49m[34;49m, tdbg2 = 2, tdbg3 = 3 ;  int tdbg4 = 4, tdbg5 = 5, tdbg6 = 6 ;  ps ( "\ntdbg =" ) ; p ( tdbg ) ;  p .. [39;49m[32;49m
0x7fb6e779971a    48c7c001000000          mov rax, 0x1                                           [39;49m
[34;49m ..       void testc1 ()  { int tdbg = 1, [39;49m[33;40mtdbg[39;49m[34;49m2 = 2, tdbg3 = 3 ;  int tdbg4 = 4, tdbg5 = 5, tdbg6 = 6 ;  ps ( "\ntdbg =" ) ; p ( tdbg ) ;  ps ( .. [39;49m[32;49m
0x7fb6e7799721    498d4f08                lea rcx, [r15+0x8]                                     [39;49m
[34;49m ..            void testc1 ()  { int tdbg [39;49m[33;40mstore[39;49m[34;49mtdbg2 = 2, tdbg3 = 3 ;  int tdbg4 = 4, tdbg5 = 5, tdbg6 = 6 ;  ps ( "\ntdbg =" ) ; p ( tdbg ) ;  .. [39;49m[32;49m
0x7fb6e7799725    488901                  mov [rcx], rax                                         [39;49m
[34;49m  void testc1 ()  { int tdbg = 1, tdbg2 = [39;49m[33;40m2[39;49m[34;49m, tdbg3 = 3 ;  int tdbg4 = 4, tdbg5 = 5, tdbg6 = 6 ;  ps ( "\ntdbg =" ) ; p ( tdbg ) ;  ps ( "\ntdbg .. [39;49m[32;49m
0x7fb6e7799728    48c7c002000000          mov rax, 0x2                                           [39;49m
[34;49m ..       void testc1 ()  { int tdbg = 1, [39;49m[33;40mtdbg2[39;49m[34;49m = 2, tdbg3 = 3 ;  int tdbg4 = 4, tdbg5 = 5, tdbg6 = 6 ;  ps ( "\ntdbg =" ) ; p ( tdbg ) ;  ps ( .. [39;49m[32;49m
0x7fb6e779972f    498d4f10                lea rcx, [r15+0x10]                                    [39;49m
[34;49m .. void testc1 ()  { int tdbg = 1, tdbg2 [39;49m[33;40m=[39;49m[34;49m 2, tdbg3 = 3 ;  int tdbg4 = 4, tdbg5 = 5, tdbg6 = 6 ;  ps ( "\ntdbg =" ) ; p ( tdbg ) ;  ps ( "\ntd .. [39;49m[32;49m
0x7fb6e7799733    488901                  mov [rcx], rax                                         [39;49m
[34;49m .. )  { int tdbg = 1, tdbg2 = 2, tdbg3 = [39;49m[33;40m3[39;49m[34;49m ;  int tdbg4 = 4, tdbg5 = 5, tdbg6 = 6 ;  ps ( "\ntdbg =" ) ; p ( tdbg ) ;  ps ( "\ntdbg2 =" ) ; p  .. [39;49m[32;49m
0x7fb6e7799736    48c7c003000000          mov rax, 0x3                                           [39;49m
[34;49m .. testc1 ()  { int tdbg = 1, tdbg2 = 2, [39;49m[33;40mtdbg3[39;49m[34;49m = 3 ;  int tdbg4 = 4, tdbg5 = 5, tdbg6 = 6 ;  ps ( "\ntdbg =" ) ; p ( tdbg ) ;  ps ( "\ntdbg2 = .. [39;49m[32;49m
0x7fb6e779973d    498d4f18                lea rcx, [r15+0x18]                                    [39;49m
[34;49m ..  ()  { int tdbg = 1, tdbg2 = 2, tdbg3 [39;49m[33;40m=[39;49m[34;49m 3 ;  int tdbg4 = 4, tdbg5 = 5, tdbg6 = 6 ;  ps ( "\ntdbg =" ) ; p ( tdbg ) ;  ps ( "\ntdbg2 =" ) ;  .. [39;49m[32;49m
0x7fb6e7799741    488901                  mov [rcx], rax                                         [39;49m
[34;49m .. , tdbg2 = 2, tdbg3 = 3 ;  int tdbg4 = [39;49m[33;40m4[39;49m[34;49m, tdbg5 = 5, tdbg6 = 6 ;  ps ( "\ntdbg =" ) ; p ( tdbg ) ;  ps ( "\ntdbg2 =" ) ; p ( tdbg2 ) ;  ps ( .. [39;49m[32;49m
0x7fb6e7799744    48c7c004000000          mov rax, 0x4                                           [39;49m
[34;49m .. tdbg = 1, tdbg2 = 2, tdbg3 = 3 ;  int [39;49m[33;40mtdbg4[39;49m[34;49m = 4, tdbg5 = 5, tdbg6 = 6 ;  ps ( "\ntdbg =" ) ; p ( tdbg ) ;  ps ( "\ntdbg2 =" ) ; p ( tdbg2 ) .. [39;49m[32;49m
0x7fb6e779974b    498d4f20                lea rcx, [r15+0x20]                                    [39;49m
[34;49m ..  1, tdbg2 = 2, tdbg3 = 3 ;  int tdbg4 [39;49m[33;40m=[39;49m[34;49m 4, tdbg5 = 5, tdbg6 = 6 ;  ps ( "\ntdbg =" ) ; p ( tdbg ) ;  ps ( "\ntdbg2 =" ) ; p ( tdbg2 ) ;  ps .. [39;49m[32;49m
0x7fb6e779974f    488901                  mov [rcx], rax                                         [39;49m
[34;49m .. , tdbg3 = 3 ;  int tdbg4 = 4, tdbg5 = [39;49m[33;40m5[39;49m[34;49m, tdbg6 = 6 ;  ps ( "\ntdbg =" ) ; p ( tdbg ) ;  ps ( "\ntdbg2 =" ) ; p ( tdbg2 ) ;  ps ( "\ntdbg3 = .. [39;49m[32;49m
0x7fb6e7799752    48c7c005000000          mov rax, 0x5                                           [39;49m
[34;49m .. dbg2 = 2, tdbg3 = 3 ;  int tdbg4 = 4, [39;49m[33;40mtdbg5[39;49m[34;49m = 5, tdbg6 = 6 ;  ps ( "\ntdbg =" ) ; p ( tdbg ) ;  ps ( "\ntdbg2 =" ) ; p ( tdbg2 ) ;  ps ( "\ .. [39;49m[32;49m
0x7fb6e7799759    498d4f28                lea rcx, [r15+0x28]                                    [39;49m
[34;49m ..  2, tdbg3 = 3 ;  int tdbg4 = 4, tdbg5 [39;49m[33;40m=[39;49m[34;49m 5, tdbg6 = 6 ;  ps ( "\ntdbg =" ) ; p ( tdbg ) ;  ps ( "\ntdbg2 =" ) ; p ( tdbg2 ) ;  ps ( "\ntdbg3 .. [39;49m[32;49m
0x7fb6e779975d    488901                  mov [rcx], rax                                         [39;49m
[34;49m ..  ;  int tdbg4 = 4, tdbg5 = 5, tdbg6 = [39;49m[33;40m6[39;49m[34;49m ;  ps ( "\ntdbg =" ) ; p ( tdbg ) ;  ps ( "\ntdbg2 =" ) ; p ( tdbg2 ) ;  ps ( "\ntdbg3 =" ) ; p ( t .. [39;49m[32;49m
0x7fb6e7799760    48c7c006000000          mov rax, 0x6                                           [39;49m
[34;49m .. dbg3 = 3 ;  int tdbg4 = 4, tdbg5 = 5, [39;49m[33;40mtdbg6[39;49m[34;49m = 6 ;  ps ( "\ntdbg =" ) ; p ( tdbg ) ;  ps ( "\ntdbg2 =" ) ; p ( tdbg2 ) ;  ps ( "\ntdbg3 =" ) .. [39;49m[32;49m
0x7fb6e7799767    498d4f30                lea rcx, [r15+0x30]                                    [39;49m
[34;49m ..  3 ;  int tdbg4 = 4, tdbg5 = 5, tdbg6 [39;49m[33;40m=[39;49m[34;49m 6 ;  ps ( "\ntdbg =" ) ; p ( tdbg ) ;  ps ( "\ntdbg2 =" ) ; p ( tdbg2 ) ;  ps ( "\ntdbg3 =" ) ; p ( .. [39;49m[32;49m
0x7fb6e779976b    488901                  mov [rcx], rax                                         [39;49m
[34;49m .. bg4 = 4, tdbg5 = 5, tdbg6 = 6 ;  ps ( [39;49m[33;40m"[39;49m[34;49m\ntdbg =" ) ; p ( tdbg ) ;  ps ( "\ntdbg2 =" ) ; p ( tdbg2 ) ;  ps ( "\ntdbg3 =" ) ; p ( tdbg3 ) ; p .. [39;49m[32;49m
0x7fb6e779976e    48b858b141e7b67f0000    mov rax, 0x7fb6e741b158    	[32;49m< string : '[39;49m[39;49m\ntdbg =[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fb6e7799778    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e779977c    498906                  mov [r14], rax                                         [39;49m
[34;49m .. nt tdbg4 = 4, tdbg5 = 5, tdbg6 = 6 ;  [39;49m[33;40mps[39;49m[34;49m ( "\ntdbg =" ) ; p ( tdbg ) ;  ps ( "\ntdbg2 =" ) ; p ( tdbg2 ) ;  ps ( "\ntdbg3 =" ) ; p ( tdbg3  .. [39;49m[32;49m
0x7fb6e779977f    49b97da393e7b67f0000    mov r9, 0x7fb6e793a37d                                 [39;49m[32;49m
0x7fb6e7799789    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fb6e793a37d[32;49m >[39;49m[39;49m
[34;49m ..  tdbg6 = 6 ;  ps ( "\ntdbg =" ) ; p ( [39;49m[33;40mtdbg[39;49m[34;49m ) ;  ps ( "\ntdbg2 =" ) ; p ( tdbg2 ) ;  ps ( "\ntdbg3 =" ) ; p ( tdbg3 ) ; ps ( "\ntdbg4 =" ) ; .. [39;49m[32;49m
0x7fb6e779978c    498b4708                mov rax, [r15+0x8]                                     [39;49m[32;49m
0x7fb6e7799790    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7799794    498906                  mov [r14], rax                                         [39;49m
[34;49m .. = 5, tdbg6 = 6 ;  ps ( "\ntdbg =" ) ; [39;49m[33;40mp[39;49m[34;49m ( tdbg ) ;  ps ( "\ntdbg2 =" ) ; p ( tdbg2 ) ;  ps ( "\ntdbg3 =" ) ; p ( tdbg3 ) ; ps ( "\ntdbg4 =" .. [39;49m[32;49m
0x7fb6e7799797    49b9d9a593e7b67f0000    mov r9, 0x7fb6e793a5d9                                 [39;49m[32;49m
0x7fb6e77997a1    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fb6e793a5d9[32;49m >[39;49m[39;49m
[34;49m .. s ( "\ntdbg =" ) ; p ( tdbg ) ;  ps ( [39;49m[33;40m"[39;49m[34;49m\ntdbg2 =" ) ; p ( tdbg2 ) ;  ps ( "\ntdbg3 =" ) ; p ( tdbg3 ) ; ps ( "\ntdbg4 =" ) ; p ( tdbg4 ) ;  .. [39;49m[32;49m
0x7fb6e77997a4    48b875b141e7b67f0000    mov rax, 0x7fb6e741b175    	[32;49m< string : '[39;49m[39;49m\ntdbg2 =[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fb6e77997ae    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e77997b2    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  ;  ps ( "\ntdbg =" ) ; p ( tdbg ) ;  [39;49m[33;40mps[39;49m[34;49m ( "\ntdbg2 =" ) ; p ( tdbg2 ) ;  ps ( "\ntdbg3 =" ) ; p ( tdbg3 ) ; ps ( "\ntdbg4 =" ) ; p ( tdbg4 .. [39;49m[32;49m
0x7fb6e77997b5    49b97da393e7b67f0000    mov r9, 0x7fb6e793a37d                                 [39;49m[32;49m
0x7fb6e77997bf    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fb6e793a37d[32;49m >[39;49m[39;49m
[34;49m ..  ( tdbg ) ;  ps ( "\ntdbg2 =" ) ; p ( [39;49m[33;40mtdbg2[39;49m[34;49m ) ;  ps ( "\ntdbg3 =" ) ; p ( tdbg3 ) ; ps ( "\ntdbg4 =" ) ; p ( tdbg4 ) ;  ps ( "\ntdbg5 =" )  .. [39;49m[32;49m
0x7fb6e77997c2    498b4710                mov rax, [r15+0x10]                                    [39;49m[32;49m
0x7fb6e77997c6    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e77997ca    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  ; p ( tdbg ) ;  ps ( "\ntdbg2 =" ) ; [39;49m[33;40mp[39;49m[34;49m ( tdbg2 ) ;  ps ( "\ntdbg3 =" ) ; p ( tdbg3 ) ; ps ( "\ntdbg4 =" ) ; p ( tdbg4 ) ;  ps ( "\ntdbg5 = .. [39;49m[32;49m
0x7fb6e77997cd    49b9d9a593e7b67f0000    mov r9, 0x7fb6e793a5d9                                 [39;49m[32;49m
0x7fb6e77997d7    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fb6e793a5d9[32;49m >[39;49m[39;49m
[34;49m .. ( "\ntdbg2 =" ) ; p ( tdbg2 ) ;  ps ( [39;49m[33;40m"[39;49m[34;49m\ntdbg3 =" ) ; p ( tdbg3 ) ; ps ( "\ntdbg4 =" ) ; p ( tdbg4 ) ;  ps ( "\ntdbg5 =" ) ; p ( tdbg5 ) ;  .. [39;49m[32;49m
0x7fb6e77997da    48b894b141e7b67f0000    mov rax, 0x7fb6e741b194    	[32;49m< string : '[39;49m[39;49m\ntdbg3 =[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fb6e77997e4    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e77997e8    498906                  mov [r14], rax                                         [39;49m
[34;49m ..   ps ( "\ntdbg2 =" ) ; p ( tdbg2 ) ;  [39;49m[33;40mps[39;49m[34;49m ( "\ntdbg3 =" ) ; p ( tdbg3 ) ; ps ( "\ntdbg4 =" ) ; p ( tdbg4 ) ;  ps ( "\ntdbg5 =" ) ; p ( tdbg5 .. [39;49m[32;49m
0x7fb6e77997eb    49b97da393e7b67f0000    mov r9, 0x7fb6e793a37d                                 [39;49m[32;49m
0x7fb6e77997f5    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fb6e793a37d[32;49m >[39;49m[39;49m
[34;49m .. ( tdbg2 ) ;  ps ( "\ntdbg3 =" ) ; p ( [39;49m[33;40mtdbg3[39;49m[34;49m ) ; ps ( "\ntdbg4 =" ) ; p ( tdbg4 ) ;  ps ( "\ntdbg5 =" ) ; p ( tdbg5 ) ;  ps ( "\ntdbg6 =" )  .. [39;49m[32;49m
0x7fb6e77997f8    498b4718                mov rax, [r15+0x18]                                    [39;49m[32;49m
0x7fb6e77997fc    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7799800    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ; p ( tdbg2 ) ;  ps ( "\ntdbg3 =" ) ; [39;49m[33;40mp[39;49m[34;49m ( tdbg3 ) ; ps ( "\ntdbg4 =" ) ; p ( tdbg4 ) ;  ps ( "\ntdbg5 =" ) ; p ( tdbg5 ) ;  ps ( "\ntdbg6 = .. [39;49m[32;49m
0x7fb6e7799803    49b9d9a593e7b67f0000    mov r9, 0x7fb6e793a5d9                                 [39;49m[32;49m
0x7fb6e779980d    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fb6e793a5d9[32;49m >[39;49m[39;49m
[34;49m ..  ( "\ntdbg3 =" ) ; p ( tdbg3 ) ; ps ( [39;49m[33;40m"[39;49m[34;49m\ntdbg4 =" ) ; p ( tdbg4 ) ;  ps ( "\ntdbg5 =" ) ; p ( tdbg5 ) ;  ps ( "\ntdbg6 =" ) ; p ( tdbg6 ) ; .. [39;49m[32;49m
0x7fb6e7799810    48b8b3b141e7b67f0000    mov rax, 0x7fb6e741b1b3    	[32;49m< string : '[39;49m[39;49m\ntdbg4 =[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fb6e779981a    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e779981e    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ;  ps ( "\ntdbg3 =" ) ; p ( tdbg3 ) ; [39;49m[33;40mps[39;49m[34;49m ( "\ntdbg4 =" ) ; p ( tdbg4 ) ;  ps ( "\ntdbg5 =" ) ; p ( tdbg5 ) ;  ps ( "\ntdbg6 =" ) ; p ( tdbg .. [39;49m[32;49m
0x7fb6e7799821    49b97da393e7b67f0000    mov r9, 0x7fb6e793a37d                                 [39;49m[32;49m
0x7fb6e779982b    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fb6e793a37d[32;49m >[39;49m[39;49m
[34;49m ..  ( tdbg3 ) ; ps ( "\ntdbg4 =" ) ; p ( [39;49m[33;40mtdbg4[39;49m[34;49m ) ;  ps ( "\ntdbg5 =" ) ; p ( tdbg5 ) ;  ps ( "\ntdbg6 =" ) ; p ( tdbg6 ) ; ps ( "\nxhii =" ) ; .. [39;49m[32;49m
0x7fb6e779982e    498b4720                mov rax, [r15+0x20]                                    [39;49m[32;49m
0x7fb6e7799832    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7799836    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  ; p ( tdbg3 ) ; ps ( "\ntdbg4 =" ) ; [39;49m[33;40mp[39;49m[34;49m ( tdbg4 ) ;  ps ( "\ntdbg5 =" ) ; p ( tdbg5 ) ;  ps ( "\ntdbg6 =" ) ; p ( tdbg6 ) ; ps ( "\nxhii =" .. [39;49m[32;49m
0x7fb6e7799839    49b9d9a593e7b67f0000    mov r9, 0x7fb6e793a5d9                                 [39;49m[32;49m
0x7fb6e7799843    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fb6e793a5d9[32;49m >[39;49m[39;49m
[34;49m .. ( "\ntdbg4 =" ) ; p ( tdbg4 ) ;  ps ( [39;49m[33;40m"[39;49m[34;49m\ntdbg5 =" ) ; p ( tdbg5 ) ;  ps ( "\ntdbg6 =" ) ; p ( tdbg6 ) ; ps ( "\nxhii =" ) ; xhii () ; xhi0( .. [39;49m[32;49m
0x7fb6e7799846    48b8d2b141e7b67f0000    mov rax, 0x7fb6e741b1d2    	[32;49m< string : '[39;49m[39;49m\ntdbg5 =[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fb6e7799850    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7799854    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ; ps ( "\ntdbg4 =" ) ; p ( tdbg4 ) ;  [39;49m[33;40mps[39;49m[34;49m ( "\ntdbg5 =" ) ; p ( tdbg5 ) ;  ps ( "\ntdbg6 =" ) ; p ( tdbg6 ) ; ps ( "\nxhii =" ) ; xhii () ;  .. [39;49m[32;49m
0x7fb6e7799857    49b97da393e7b67f0000    mov r9, 0x7fb6e793a37d                                 [39;49m[32;49m
0x7fb6e7799861    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fb6e793a37d[32;49m >[39;49m[39;49m
[34;49m .. ( tdbg4 ) ;  ps ( "\ntdbg5 =" ) ; p ( [39;49m[33;40mtdbg5[39;49m[34;49m ) ;  ps ( "\ntdbg6 =" ) ; p ( tdbg6 ) ; ps ( "\nxhii =" ) ; xhii () ; xhi0(); xhi1 () ; xhi( 4  .. [39;49m[32;49m
0x7fb6e7799864    498b4728                mov rax, [r15+0x28]                                    [39;49m[32;49m
0x7fb6e7799868    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e779986c    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ; p ( tdbg4 ) ;  ps ( "\ntdbg5 =" ) ; [39;49m[33;40mp[39;49m[34;49m ( tdbg5 ) ;  ps ( "\ntdbg6 =" ) ; p ( tdbg6 ) ; ps ( "\nxhii =" ) ; xhii () ; xhi0(); xhi1 () ; xhi .. [39;49m[32;49m
0x7fb6e779986f    49b9d9a593e7b67f0000    mov r9, 0x7fb6e793a5d9                                 [39;49m[32;49m
0x7fb6e7799879    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fb6e793a5d9[32;49m >[39;49m[39;49m
[34;49m .. ( "\ntdbg5 =" ) ; p ( tdbg5 ) ;  ps ( [39;49m[33;40m"[39;49m[34;49m\ntdbg6 =" ) ; p ( tdbg6 ) ; ps ( "\nxhii =" ) ; xhii () ; xhi0(); xhi1 () ; xhi( 4 ); xhi01 ; xhi1  .. [39;49m[32;49m
0x7fb6e779987c    48b8f1b141e7b67f0000    mov rax, 0x7fb6e741b1f1    	[32;49m< string : '[39;49m[39;49m\ntdbg6 =[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fb6e7799886    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e779988a    498906                  mov [r14], rax                                         [39;49m
[34;49m ..   ps ( "\ntdbg5 =" ) ; p ( tdbg5 ) ;  [39;49m[33;40mps[39;49m[34;49m ( "\ntdbg6 =" ) ; p ( tdbg6 ) ; ps ( "\nxhii =" ) ; xhii () ; xhi0(); xhi1 () ; xhi( 4 ); xhi01 ;  .. [39;49m[32;49m
0x7fb6e779988d    49b97da393e7b67f0000    mov r9, 0x7fb6e793a37d                                 [39;49m[32;49m
0x7fb6e7799897    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fb6e793a37d[32;49m >[39;49m[39;49m
[34;49m .. ( tdbg5 ) ;  ps ( "\ntdbg6 =" ) ; p ( [39;49m[33;40mtdbg6[39;49m[34;49m ) ; ps ( "\nxhii =" ) ; xhii () ; xhi0(); xhi1 () ; xhi( 4 ); xhi01 ; xhi1 ; xhi2(8) ; xhi2a (  .. [39;49m[32;49m
0x7fb6e779989a    498b4730                mov rax, [r15+0x30]                                    [39;49m[32;49m
0x7fb6e779989e    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e77998a2    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ; p ( tdbg5 ) ;  ps ( "\ntdbg6 =" ) ; [39;49m[33;40mp[39;49m[34;49m ( tdbg6 ) ; ps ( "\nxhii =" ) ; xhii () ; xhi0(); xhi1 () ; xhi( 4 ); xhi01 ; xhi1 ; xhi2(8) ; xhi2 .. [39;49m[32;49m
0x7fb6e77998a5    49b9d9a593e7b67f0000    mov r9, 0x7fb6e793a5d9                                 [39;49m[32;49m
0x7fb6e77998af    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fb6e793a5d9[32;49m >[39;49m[39;49m
[34;49m ..  ( "\ntdbg6 =" ) ; p ( tdbg6 ) ; ps ( [39;49m[33;40m"[39;49m[34;49m\nxhii =" ) ; xhii () ; xhi0(); xhi1 () ; xhi( 4 ); xhi01 ; xhi1 ; xhi2(8) ; xhi2a ( "xhi2a =", 8 )  .. [39;49m[32;49m
0x7fb6e77998b2    48b80fb241e7b67f0000    mov rax, 0x7fb6e741b20f    	[32;49m< string : '[39;49m[39;49m\nxhii =[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fb6e77998bc    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e77998c0    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ;  ps ( "\ntdbg6 =" ) ; p ( tdbg6 ) ; [39;49m[33;40mps[39;49m[34;49m ( "\nxhii =" ) ; xhii () ; xhi0(); xhi1 () ; xhi( 4 ); xhi01 ; xhi1 ; xhi2(8) ; xhi2a ( "xhi2a =", .. [39;49m[32;49m
0x7fb6e77998c3    49b97da393e7b67f0000    mov r9, 0x7fb6e793a37d                                 [39;49m[32;49m
0x7fb6e77998cd    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fb6e793a37d[32;49m >[39;49m[39;49m
[34;49m .. ) ; p ( tdbg6 ) ; ps ( "\nxhii =" ) ; [39;49m[33;40mxhii[39;49m[34;49m () ; xhi0(); xhi1 () ; xhi( 4 ); xhi01 ; xhi1 ; xhi2(8) ; xhi2a ( "xhi2a =", 8 ) ;  }  .. [39;49m[32;49m
0x7fb6e77998d0    48c7c003000000          mov rax, 0x3                                           [39;49m[32;49m
0x7fb6e77998d7    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e77998db    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e77998de    49b9d9a593e7b67f0000    mov r9, 0x7fb6e793a5d9                                 [39;49m[32;49m
0x7fb6e77998e8    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fb6e793a5d9[32;49m >[39;49m[39;49m
[34;49m .. bg6 ) ; ps ( "\nxhii =" ) ; xhii () ; [39;49m[33;40mxhi0[39;49m[34;49m(); xhi1 () ; xhi( 4 ); xhi01 ; xhi1 ; xhi2(8) ; xhi2a ( "xhi2a =", 8 ) ;  }  .. [39;49m[32;49m
0x7fb6e77998eb    48c7c003000000          mov rax, 0x3                                           [39;49m[32;49m
0x7fb6e77998f2    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e77998f6    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e77998f9    49b9d9a593e7b67f0000    mov r9, 0x7fb6e793a5d9                                 [39;49m[32;49m
0x7fb6e7799903    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fb6e793a5d9[32;49m >[39;49m[39;49m
[34;49m .. ps ( "\nxhii =" ) ; xhii () ; xhi0(); [39;49m[33;40mxhi1[39;49m[34;49m () ; xhi( 4 ); xhi01 ; xhi1 ; xhi2(8) ; xhi2a ( "xhi2a =", 8 ) ;  }  .. [39;49m[32;49m
0x7fb6e7799906    48c7c003000000          mov rax, 0x3                                           [39;49m[32;49m
0x7fb6e779990d    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7799911    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e7799914    49b9d9a593e7b67f0000    mov r9, 0x7fb6e793a5d9                                 [39;49m[32;49m
0x7fb6e779991e    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fb6e793a5d9[32;49m >[39;49m[39;49m
[34;49m ..  ) ; xhii () ; xhi0(); xhi1 () ; xhi( [39;49m[33;40m4[39;49m[34;49m ); xhi01 ; xhi1 ; xhi2(8) ; xhi2a ( "xhi2a =", 8 ) ;  }  .. [39;49m[32;49m
0x7fb6e7799921    48c7c004000000          mov rax, 0x4                                           [39;49m[32;49m
0x7fb6e7799928    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e779992c    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ii =" ) ; xhii () ; xhi0(); xhi1 () ; [39;49m[33;40mxhi[39;49m[34;49m( 4 ); xhi01 ; xhi1 ; xhi2(8) ; xhi2a ( "xhi2a =", 8 ) ;  }  .. [39;49m[32;49m
0x7fb6e779992f    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fb6e7799933    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e7799937    4981c608000000          add r14, 0x8                                           [39;49m[32;49m
0x7fb6e779993e    48b8b9b041e7b67f0000    mov rax, 0x7fb6e741b0b9    	[32;49m< string : '[39;49m[39;49m\nxhi = [39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fb6e7799948    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e779994c    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e779994f    49b97da393e7b67f0000    mov r9, 0x7fb6e793a37d                                 [39;49m[32;49m
0x7fb6e7799959    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fb6e793a37d[32;49m >[39;49m[39;49m[32;49m
0x7fb6e779995c    48c7c003000000          mov rax, 0x3                                           [39;49m[32;49m
0x7fb6e7799963    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e7799967    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fb6e779996a    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e779996e    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e7799971    49b9d9a593e7b67f0000    mov r9, 0x7fb6e793a5d9                                 [39;49m[32;49m
0x7fb6e779997b    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fb6e793a5d9[32;49m >[39;49m[39;49m[32;49m
0x7fb6e779997e    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e7799982    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e7799986    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m .. xhii () ; xhi0(); xhi1 () ; xhi( 4 ); [39;49m[33;40mxhi01[39;49m[34;49m ; xhi1 ; xhi2(8) ; xhi2a ( "xhi2a =", 8 ) ;  }  .. [39;49m[32;49m
0x7fb6e779998a    48b81baf41e7b67f0000    mov rax, 0x7fb6e741af1b    	[32;49m< string : '[39;49m[39;49mxhi1 =[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fb6e7799994    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7799998    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e779999b    49b8e08080892d560000    mov r8, 0x562d898080e0                                 [39;49m[32;49m
0x7fb6e77999a5    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e77999af    49ffd1                  call r9                    	< Io.[34;49mnewline[39;49m : 0x0000562d898080e0[32;49m >[39;49m[39;49m[32;49m
0x7fb6e77999b2    49b97da393e7b67f0000    mov r9, 0x7fb6e793a37d                                 [39;49m[32;49m
0x7fb6e77999bc    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fb6e793a37d[32;49m >[39;49m[39;49m
[34;49m .. ; xhi0(); xhi1 () ; xhi( 4 ); xhi01 ; [39;49m[33;40mxhi1[39;49m[34;49m ; xhi2(8) ; xhi2a ( "xhi2a =", 8 ) ;  }  .. [39;49m[32;49m
0x7fb6e77999bf    48c7c003000000          mov rax, 0x3                                           [39;49m[32;49m
0x7fb6e77999c6    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e77999ca    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e77999cd    49b9d9a593e7b67f0000    mov r9, 0x7fb6e793a5d9                                 [39;49m[32;49m
0x7fb6e77999d7    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fb6e793a5d9[32;49m >[39;49m[39;49m
[34;49m .. i1 () ; xhi( 4 ); xhi01 ; xhi1 ; xhi2([39;49m[33;40m8[39;49m[34;49m) ; xhi2a ( "xhi2a =", 8 ) ;  }  .. [39;49m[32;49m
0x7fb6e77999da    48c7c008000000          mov rax, 0x8                                           [39;49m[32;49m
0x7fb6e77999e1    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e77999e5    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ); xhi1 () ; xhi( 4 ); xhi01 ; xhi1 ; [39;49m[33;40mxhi2[39;49m[34;49m(8) ; xhi2a ( "xhi2a =", 8 ) ;  }  .. [39;49m[32;49m
0x7fb6e77999e8    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fb6e77999ec    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e77999f0    4981c608000000          add r14, 0x8                                           [39;49m[32;49m
0x7fb6e77999f7    48b81baf41e7b67f0000    mov rax, 0x7fb6e741af1b    	[32;49m< string : '[39;49m[39;49mxhi1 =[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fb6e7799a01    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7799a05    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e7799a08    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fb6e7799a0c    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e7799a10    4981c608000000          add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7799a17    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e7799a1b    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7799a1f    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e7799a22    49b8e08080892d560000    mov r8, 0x562d898080e0                                 [39;49m[32;49m
0x7fb6e7799a2c    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e7799a36    49ffd1                  call r9                    	< Io.[34;49mnewline[39;49m : 0x0000562d898080e0[32;49m >[39;49m[39;49m[32;49m
0x7fb6e7799a39    49b97da393e7b67f0000    mov r9, 0x7fb6e793a37d                                 [39;49m[32;49m
0x7fb6e7799a43    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fb6e793a37d[32;49m >[39;49m[39;49m[32;49m
0x7fb6e7799a46    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e7799a4a    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e7799a4e    4983ee08                sub r14, 0x8                                           [39;49m[32;49m
0x7fb6e7799a52    48c7c003000000          mov rax, 0x3                                           [39;49m[32;49m
0x7fb6e7799a59    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e7799a5d    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fb6e7799a60    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7799a64    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e7799a67    49b9d9a593e7b67f0000    mov r9, 0x7fb6e793a5d9                                 [39;49m[32;49m
0x7fb6e7799a71    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fb6e793a5d9[32;49m >[39;49m[39;49m[32;49m
0x7fb6e7799a74    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e7799a78    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e7799a7c    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m .. 4 ); xhi01 ; xhi1 ; xhi2(8) ; xhi2a ( [39;49m[33;40m"[39;49m[34;49mxhi2a =", 8 ) ;  }  .. [39;49m[32;49m
0x7fb6e7799a80    48b82fb241e7b67f0000    mov rax, 0x7fb6e741b22f    	[32;49m< string : '[39;49m[39;49mxhi2a =[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fb6e7799a8a    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7799a8e    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ; xhi1 ; xhi2(8) ; xhi2a ( "xhi2a =", [39;49m[33;40m8[39;49m[34;49m ) ;  }  .. [39;49m[32;49m
0x7fb6e7799a91    48c7c008000000          mov rax, 0x8                                           [39;49m[32;49m
0x7fb6e7799a98    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7799a9c    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  ; xhi( 4 ); xhi01 ; xhi1 ; xhi2(8) ; [39;49m[33;40mxhi2a[39;49m[34;49m ( "xhi2a =", 8 ) ;  }  .. [39;49m[32;49m
0x7fb6e7799a9f    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fb6e7799aa3    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e7799aa7    4981c608000000          add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7799aae    498b47f0                mov rax, [r15-0x10]                                    [39;49m[32;49m
0x7fb6e7799ab2    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7799ab6    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e7799ab9    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fb6e7799abd    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e7799ac1    4981c608000000          add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7799ac8    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e7799acc    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7799ad0    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e7799ad3    49b8e08080892d560000    mov r8, 0x562d898080e0                                 [39;49m[32;49m
0x7fb6e7799add    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e7799ae7    49ffd1                  call r9                    	< Io.[34;49mnewline[39;49m : 0x0000562d898080e0[32;49m >[39;49m[39;49m[32;49m
0x7fb6e7799aea    49b97da393e7b67f0000    mov r9, 0x7fb6e793a37d                                 [39;49m[32;49m
0x7fb6e7799af4    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fb6e793a37d[32;49m >[39;49m[39;49m[32;49m
0x7fb6e7799af7    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e7799afb    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e7799aff    4983ee08                sub r14, 0x8                                           [39;49m[32;49m
0x7fb6e7799b03    48c7c003000000          mov rax, 0x3                                           [39;49m[32;49m
0x7fb6e7799b0a    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e7799b0e    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fb6e7799b11    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7799b15    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e7799b18    49b9d9a593e7b67f0000    mov r9, 0x7fb6e793a5d9                                 [39;49m[32;49m
0x7fb6e7799b22    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fb6e793a5d9[32;49m >[39;49m[39;49m[32;49m
0x7fb6e7799b25    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e7799b29    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e7799b2d    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m .. ; xhi2(8) ; xhi2a ( "xhi2a =", 8 ) ;  [39;49m[33;40m}[39;49m[34;49m  .. [39;49m[32;49m
0x7fb6e7799b31    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e7799b35    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e7799b39    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'testc1' :: codeSize = 1070
Word : 0x00007fb6e61f5860 :: Compiled at : 0x00007fb6e779970b
 =============================
::> 'wdiss' was called at namespaces/compiler/interpreter.csl 44.19 <::
 
tdbg = 1 
tdbg2 = 2 
tdbg3 = 3 
tdbg4 = 4 
tdbg5 = 5 
tdbg6 = 6 
xhii = 3 3 3 
xhi =  7
 xhi1 = 3
 xhi1 = 11
 xhi2a = 11
 =============================
C_Syntax.[34;49minterpret2[39;49m <:> csl compiled word
SourceCode for C_Syntax.[34;49minterpret2[39;49m :> 
[34;49mvoid interpret2 ( | atoken aword ) { testc1 () ; nl tab () ; ps ( "interpret2 :> " ) ; nl while ( 1 ) { atoken = token () ; printf ( "\n\tinterpret2 : token = %s", atoken ) ; if ( ! ( strcmp ( atoken, "i2halt" ) ) ) { printf ( "\n\tinterpret2 exiting..." ) ; return } else { aword = tokenToWord ( atoken ) ; doWord ( aword ) ; } } } [39;49m
Source code file location of [34;49minterpret2[39;49m : "namespaces/compiler/interpreter.csl" : 76.11 :: we are now at : namespaces/compiler/interpreter.csl : 101.24
Compiled with : optimizeOn, inlineOn, c_syntaxOn, infixOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xe7799b3f -- code size = 458 bytes
TypeSignature : 
 -----------------------------
Word :: C_Syntax.[34;49minterpret2[39;49m : definition = 0x00007fb6e7799b3f : disassembly at namespaces/compiler/interpreter.csl : 101.24 :
[34;49m ..                                  void [39;49m[33;40minterpret2[39;49m[34;49m ( | atoken aword )  { testc1 () ; nl tab () ; ps ( "interpret2 :> " ) ; nl while ( 1 ) {   .. [39;49m[32;49m
0x7fb6e7799b3f    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fb6e7799b43    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e7799b47    4981c618000000          add r14, 0x18                                          [39;49m
[34;49m .. void interpret2 ( | atoken aword )  { [39;49m[33;40mtestc1[39;49m[34;49m () ; nl tab () ; ps ( "interpret2 :> " ) ; nl while ( 1 ) {  atoken = token () ;  printf ( "\n .. [39;49m[32;49m
0x7fb6e7799b4e    49b90b9779e7b67f0000    mov r9, 0x7fb6e779970b                                 [39;49m[32;49m
0x7fb6e7799b58    49ffd1                  call r9                    	< C_Syntax.[34;49mtestc1[39;49m : 0x00007fb6e779970b[32;49m >[39;49m[39;49m
[34;49m .. et2 ( | atoken aword )  { testc1 () ; [39;49m[33;40mnl[39;49m[34;49m tab () ; ps ( "interpret2 :> " ) ; nl while ( 1 ) {  atoken = token () ;  printf ( "\n\tinterpret2 .. [39;49m[32;49m
0x7fb6e7799b5b    49b8e08080892d560000    mov r8, 0x562d898080e0                                 [39;49m[32;49m
0x7fb6e7799b65    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e7799b6f    49ffd1                  call r9                    	< Io.[34;49mnewline[39;49m : 0x0000562d898080e0[32;49m >[39;49m[39;49m
[34;49m ..  ( | atoken aword )  { testc1 () ; nl [39;49m[33;40mtab[39;49m[34;49m () ; ps ( "interpret2 :> " ) ; nl while ( 1 ) {  atoken = token () ;  printf ( "\n\tinterpret2 :  .. [39;49m[32;49m
0x7fb6e7799b72    49b8108180892d560000    mov r8, 0x562d89808110                                 [39;49m[32;49m
0x7fb6e7799b7c    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e7799b86    49ffd1                  call r9                    	< Io.[34;49mtab[39;49m : 0x0000562d89808110[32;49m >[39;49m[39;49m
[34;49m .. ord )  { testc1 () ; nl tab () ; ps ( [39;49m[33;40m"[39;49m[34;49minterpret2 :> " ) ; nl while ( 1 ) {  atoken = token () ;  printf ( "\n\tinterpret2 : token = %s", a .. [39;49m[32;49m
0x7fb6e7799b89    48b81cb441e7b67f0000    mov rax, 0x7fb6e741b41c    	[32;49m< string : '[39;49m[39;49minterpret2 :> [39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fb6e7799b93    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7799b97    498906                  mov [r14], rax                                         [39;49m
[34;49m .. en aword )  { testc1 () ; nl tab () ; [39;49m[33;40mps[39;49m[34;49m ( "interpret2 :> " ) ; nl while ( 1 ) {  atoken = token () ;  printf ( "\n\tinterpret2 : token = % .. [39;49m[32;49m
0x7fb6e7799b9a    49b97da393e7b67f0000    mov r9, 0x7fb6e793a37d                                 [39;49m[32;49m
0x7fb6e7799ba4    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fb6e793a37d[32;49m >[39;49m[39;49m
[34;49m .. nl tab () ; ps ( "interpret2 :> " ) ; [39;49m[33;40mnl[39;49m[34;49m while ( 1 ) {  atoken = token () ;  printf ( "\n\tinterpret2 : token = %s", atoken ) ;  if ( ! ( s .. [39;49m[32;49m
0x7fb6e7799ba7    49b8e08080892d560000    mov r8, 0x562d898080e0                                 [39;49m[32;49m
0x7fb6e7799bb1    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e7799bbb    49ffd1                  call r9                    	< Io.[34;49mnewline[39;49m : 0x0000562d898080e0[32;49m >[39;49m[39;49m
[34;49m ..  ; ps ( "interpret2 :> " ) ; nl while [39;49m[33;40m([39;49m[34;49m 1 ) {  atoken = token () ;  printf ( "\n\tinterpret2 : token = %s", atoken ) ;  if ( ! ( strcmp ( a .. [39;49m[32;49m
0x7fb6e7799bbe    48c7c001000000          mov rax, 0x1                                           [39;49m
[34;49m .. ord ( atoken ) ; doWord ( aword ) ; } [39;49m[33;40m}[39;49m[34;49m }  .. [39;49m[32;49m
0x7fb6e7799bc5    4885c0                  test rax, rax                                          [39;49m[32;49m
0x7fb6e7799bc8    0f8432010000            jz 0x7fb6e7799d00          	< C_Syntax.[34;49minterpret2[39;49m+449[32;49m >[39;49m[39;49m
[34;49m .. 2 :> " ) ; nl while ( 1 ) {  atoken = [39;49m[33;40mtoken[39;49m[34;49m () ;  printf ( "\n\tinterpret2 : token = %s", atoken ) ;  if ( ! ( strcmp ( atoken, "i2halt" )  .. [39;49m[32;49m
0x7fb6e7799bce    49b8f08580892d560000    mov r8, 0x562d898085f0                                 [39;49m[32;49m
0x7fb6e7799bd8    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e7799be2    49ffd1                  call r9                    	< Compiler.[34;49mtoken[39;49m : 0x0000562d898085f0[32;49m >[39;49m[39;49m
[34;49m .. interpret2 :> " ) ; nl while ( 1 ) {  [39;49m[33;40matoken[39;49m[34;49m = token () ;  printf ( "\n\tinterpret2 : token = %s", atoken ) ;  if ( ! ( strcmp ( atoken, "i .. [39;49m[32;49m
0x7fb6e7799be5    498d4708                lea rax, [r15+0x8]                                     [39;49m[32;49m
0x7fb6e7799be9    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fb6e7799bec    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fb6e7799bef    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m .. et2 :> " ) ; nl while ( 1 ) {  atoken [39;49m[33;40m=[39;49m[34;49m token () ;  printf ( "\n\tinterpret2 : token = %s", atoken ) ;  if ( ! ( strcmp ( atoken, "i2halt"  .. [39;49m[32;49m
0x7fb6e7799bf3    488901                  mov [rcx], rax                                         [39;49m
[34;49m ..  1 ) {  atoken = token () ;  printf ( [39;49m[33;40m"\n\tinterpret2 : token = %s"[39;49m[34;49m, atoken ) ;  if ( ! ( strcmp ( atoken, "i2halt" ) ) )  {  printf ( "\n\ .. [39;49m[32;49m
0x7fb6e7799bf6    48b888ede5e5b67f0000    mov rax, 0x7fb6e5e5ed88    	[32;49m< string : '[39;49m[39;49m\n\tinterpret2 : token = %s[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fb6e7799c00    488bf8                  mov rdi, rax                                           [39;49m
[34;49m .. intf ( "\n\tinterpret2 : token = %s", [39;49m[33;40matoken[39;49m[34;49m ) ;  if ( ! ( strcmp ( atoken, "i2halt" ) ) )  {  printf ( "\n\tinterpret2 exiting..." ) ; ret .. [39;49m[32;49m
0x7fb6e7799c03    498b4708                mov rax, [r15+0x8]                                     [39;49m[32;49m
0x7fb6e7799c07    488bf0                  mov rsi, rax                                           [39;49m[32;49m
0x7fb6e7799c0a    48c7c002000000          mov rax, 0x2                                           [39;49m
[34;49m .. l while ( 1 ) {  atoken = token () ;  [39;49m[33;40mprintf[39;49m[34;49m ( "\n\tinterpret2 : token = %s", atoken ) ;  if ( ! ( strcmp ( atoken, "i2halt" ) ) )  {  prin .. [39;49m[32;49m
0x7fb6e7799c11    49b810947c892d560000    mov r8, 0x562d897c9410                                 [39;49m[32;49m
0x7fb6e7799c1b    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e7799c25    49ffd1                  call r9                    	< C.[34;49mprintf[39;49m : 0x0000562d897c9410[32;49m >[39;49m[39;49m
[34;49m ..  = %s", atoken ) ;  if ( ! ( strcmp ( [39;49m[33;40matoken[39;49m[34;49m, "i2halt" ) ) )  {  printf ( "\n\tinterpret2 exiting..." ) ; return } else { aword = tokenToWo .. [39;49m[32;49m
0x7fb6e7799c28    498b4708                mov rax, [r15+0x8]                                     [39;49m[32;49m
0x7fb6e7799c2c    488bf8                  mov rdi, rax                                           [39;49m
[34;49m .. atoken ) ;  if ( ! ( strcmp ( atoken, [39;49m[33;40m"i2halt"[39;49m[34;49m ) ) )  {  printf ( "\n\tinterpret2 exiting..." ) ; return } else { aword = tokenToWord ( ato .. [39;49m[32;49m
0x7fb6e7799c2f    48b8a2ede5e5b67f0000    mov rax, 0x7fb6e5e5eda2    	[32;49m< string : '[39;49m[39;49mi2halt[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fb6e7799c39    488bf0                  mov rsi, rax                                           [39;49m
[34;49m .. 2 : token = %s", atoken ) ;  if ( ! ( [39;49m[33;40mstrcmp[39;49m[34;49m ( atoken, "i2halt" ) ) )  {  printf ( "\n\tinterpret2 exiting..." ) ; return } else { aword =  .. [39;49m[32;49m
0x7fb6e7799c3c    49b8608bc2e7b67f0000    mov r8, 0x7fb6e7c28b60                                 [39;49m[32;49m
0x7fb6e7799c46    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e7799c50    49ffd1                  call r9                    	< libc.[34;49mstrcmp[39;49m : 0x00007fb6e7c28b60[32;49m >[39;49m[39;49m[32;49m
0x7fb6e7799c53    4885c0                  test rax, rax                                          [39;49m[32;49m
0x7fb6e7799c56    7409                    jz 0xe7799c61                                          [39;49m[32;49m
0x7fb6e7799c58    48c7c000000000          mov rax, 0x0                                           [39;49m[32;49m
0x7fb6e7799c5f    eb07                    jmp 0x7fb6e7799c68         	< C_Syntax.[34;49minterpret2[39;49m+297[32;49m >[39;49m[39;49m[32;49m
0x7fb6e7799c61    48c7c001000000          mov rax, 0x1                                           [39;49m
[34;49m .. oWord ( atoken ) ; doWord ( aword ) ; [39;49m[33;40m}[39;49m[34;49m } }  .. [39;49m[32;49m
0x7fb6e7799c68    4885c0                  test rax, rax                                          [39;49m[32;49m
0x7fb6e7799c6b    0f8435000000            jz 0x7fb6e7799ca6          	< C_Syntax.[34;49minterpret2[39;49m+359[32;49m >[39;49m[39;49m
[34;49m .. ( atoken, "i2halt" ) ) )  {  printf ( [39;49m[33;40m"\n\tinterpret2 exiting..."[39;49m[34;49m ) ; return } else { aword = tokenToWord ( atoken ) ; doWord ( aword ) ; } .. [39;49m[32;49m
0x7fb6e7799c71    48b8a9ede5e5b67f0000    mov rax, 0x7fb6e5e5eda9    	[32;49m< string : '[39;49m[39;49m\n\tinterpret2 exiting...[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fb6e7799c7b    488bf8                  mov rdi, rax                                           [39;49m
[34;49m ..  ! ( strcmp ( atoken, "i2halt" ) ) )  [39;49m[33;40m{[39;49m[34;49m  printf ( "\n\tinterpret2 exiting..." ) ; return } else { aword = tokenToWord ( atoken ) ; doWord ( .. [39;49m[32;49m
0x7fb6e7799c7e    48c7c001000000          mov rax, 0x1                                           [39;49m[32;49m
0x7fb6e7799c85    49b810947c892d560000    mov r8, 0x562d897c9410                                 [39;49m[32;49m
0x7fb6e7799c8f    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e7799c99    49ffd1                  call r9                    	< C.[34;49mprintf[39;49m : 0x0000562d897c9410[32;49m >[39;49m[39;49m
[34;49m .. ( strcmp ( atoken, "i2halt" ) ) )  {  [39;49m[33;40mprintf[39;49m[34;49m ( "\n\tinterpret2 exiting..." ) ; return } else { aword = tokenToWord ( atoken ) ; doWord ( aw .. [39;49m[32;49m
0x7fb6e7799c9c    e95f000000              jmp 0x7fb6e7799d00         	< C_Syntax.[34;49minterpret2[39;49m+449[32;49m >[39;49m[39;49m
[34;49m .. \n\tinterpret2 exiting..." ) ; return [39;49m[33;40m}[39;49m[34;49m else { aword = tokenToWord ( atoken ) ; doWord ( aword ) ; } } }  .. [39;49m[32;49m
0x7fb6e7799ca1    e955000000              jmp 0x7fb6e7799cfb         	< C_Syntax.[34;49minterpret2[39;49m+444[32;49m >[39;49m[39;49m
[34;49m .. return } else { aword = tokenToWord ( [39;49m[33;40matoken[39;49m[34;49m ) ; doWord ( aword ) ; } } }  .. [39;49m[32;49m
0x7fb6e7799ca6    498b4708                mov rax, [r15+0x8]                                     [39;49m[32;49m
0x7fb6e7799caa    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7799cae    498906                  mov [r14], rax                                         [39;49m
[34;49m .. iting..." ) ; return } else { aword = [39;49m[33;40mtokenToWord[39;49m[34;49m ( atoken ) ; doWord ( aword ) ; } } }  .. [39;49m[32;49m
0x7fb6e7799cb1    49b8008f80892d560000    mov r8, 0x562d89808f00                                 [39;49m[32;49m
0x7fb6e7799cbb    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e7799cc5    49ffd1                  call r9                    	< Interpreter.[34;49mtokenToWord[39;49m : 0x0000562d89808f00[32;49m >[39;49m[39;49m
[34;49m .. pret2 exiting..." ) ; return } else { [39;49m[33;40maword[39;49m[34;49m = tokenToWord ( atoken ) ; doWord ( aword ) ; } } }  .. [39;49m[32;49m
0x7fb6e7799cc8    498d4710                lea rax, [r15+0x10]                                    [39;49m[32;49m
0x7fb6e7799ccc    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fb6e7799ccf    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fb6e7799cd2    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m .. exiting..." ) ; return } else { aword [39;49m[33;40m=[39;49m[34;49m tokenToWord ( atoken ) ; doWord ( aword ) ; } } }  .. [39;49m[32;49m
0x7fb6e7799cd6    488901                  mov [rcx], rax                                         [39;49m
[34;49m .. d = tokenToWord ( atoken ) ; doWord ( [39;49m[33;40maword[39;49m[34;49m ) ; } } }  .. [39;49m[32;49m
0x7fb6e7799cd9    498b4710                mov rax, [r15+0x10]                                    [39;49m[32;49m
0x7fb6e7799cdd    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e7799ce1    498906                  mov [r14], rax                                         [39;49m
[34;49m .. se { aword = tokenToWord ( atoken ) ; [39;49m[33;40mdoWord[39;49m[34;49m ( aword ) ; } } }  .. [39;49m[32;49m
0x7fb6e7799ce4    49b8108b80892d560000    mov r8, 0x562d89808b10                                 [39;49m[32;49m
0x7fb6e7799cee    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e7799cf8    49ffd1                  call r9                    	< Interpreter.[34;49mdoWord[39;49m : 0x0000562d89808b10[32;49m >[39;49m[39;49m[32;49m
0x7fb6e7799cfb    e9befeffff              jmp 0x7fb6e7799bbe         	< C_Syntax.[34;49minterpret2[39;49m+127[32;49m >[39;49m[39;49m
[34;49m .. d ( atoken ) ; doWord ( aword ) ; } } [39;49m[33;40m}[39;49m[34;49m  .. [39;49m[32;49m
0x7fb6e7799d00    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e7799d04    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e7799d08    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'interpret2' :: codeSize = 457
Word : 0x00007fb6e61ff080 :: Compiled at : 0x00007fb6e7799b3f
 =============================
::> 'wdiss' was called at namespaces/compiler/interpreter.csl 101.24 <::
 
tdbg = 1 
tdbg2 = 2 
tdbg3 = 3 
tdbg4 = 4 
tdbg5 = 5 
tdbg6 = 6 
xhii = 3 3 3 
xhi =  7
 xhi1 = 3
 xhi1 = 11
 xhi2a = 11
	 interpret2 :> 

	interpret2 : token = using
Using Namespaces :> libc void C Root C_Syntax Infix PrefixCombinators Dlsym int Interpreter System Shell String Compiler User Int Debug x o1 DO_Experimental DObject a xxy Class Logic Control Bits Lexer Combinators testD DLLNodeAlloc DLLNode Buffer a112 int64 cta ct Ar9 Ar3 Ar2 Ar1 DLLNodeAlloc4 DLListClone DLList byte Integer Pointer OpenVmTil Word Namespace StartupMacros Io Compiling Reserved Compiler Macro PreProcessor List Stack Memory Colors File Asm Locals Forth Experimental 

	interpret2 : token = //
	interpret2 : token = c_syntaxOff
	interpret2 : token = sp
	interpret2 : token = User
	interpret2 : token = #
	interpret2 : token = :
	interpret2 : token = 1
	interpret2 : token = 2
	interpret2 : token = +
	interpret2 : token = p
	interpret2 : token = ;
	interpret2 : token = hi1 3
	interpret2 : token = :
	interpret2 : token = hi1
	interpret2 : token = hi1
	interpret2 : token = ;
	interpret2 : token = :
	interpret2 : token = hey1
	interpret2 : token = hey1
	interpret2 : token = hey1
	interpret2 : token = ;
	interpret2 : token = nl

	interpret2 : token = heey1 3 3 3 3 3 3
	interpret2 : token = #
	interpret2 : token = i2halt
	interpret2 exiting... hi
DataStack at : [34;49mnamespaces/test/stack.csl : 2.6[39;49m :
DataStack depth =   3 : Dsp (R14) = Top = 0x00007fb6e7cd3a58, InitialTos = 0x00007fb6e7cd3a40, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fb6e7cd3a58 > = 0x0000000000000005	
  DataStack   [  -1 ] < 0x00007fb6e7cd3a50 > = 0x0000000000000005	
  DataStack   [  -2 ] < 0x00007fb6e7cd3a48 > = 0x0000000000000005	

DataStack at : [34;49mnamespaces/test/stack.csl : 2.27[39;49m :
DataStack depth =   3 : Dsp (R14) = Top = 0x00007fb6e7cd3a58, InitialTos = 0x00007fb6e7cd3a40, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fb6e7cd3a58 > = 0x0000000000000005	
  DataStack   [  -1 ] < 0x00007fb6e7cd3a50 > = 0x0000000000000005	
  DataStack   [  -2 ] < 0x00007fb6e7cd3a48 > = 0x0000000000000005	

DataStack at : [34;49mnamespaces/test/stack.csl : 2.45[39;49m :
DataStack depth =   9 : Dsp (R14) = Top = 0x00007fb6e7cd3a88, InitialTos = 0x00007fb6e7cd3a40, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fb6e7cd3a88 > = 0x0000000000000000	
  DataStack   [  -1 ] < 0x00007fb6e7cd3a80 > = 0x0000000000000001	
  DataStack   [  -2 ] < 0x00007fb6e7cd3a78 > = 0x0000000000000002	
  DataStack   [  -3 ] < 0x00007fb6e7cd3a70 > = 0x0000000000000003	
  DataStack   [  -4 ] < 0x00007fb6e7cd3a68 > = 0x0000000000000004	
  DataStack   [  -5 ] < 0x00007fb6e7cd3a60 > = 0x0000000000000005	
  DataStack   [  -6 ] < 0x00007fb6e7cd3a58 > = 0x0000000000000005	
  DataStack   [  -7 ] < 0x00007fb6e7cd3a50 > = 0x0000000000000005	
  DataStack   [  -8 ] < 0x00007fb6e7cd3a48 > = 0x0000000000000005	

DataStack at : [34;49mnamespaces/test/stack.csl : 2.53[39;49m :
DataStack depth =  10 : Dsp (R14) = Top = 0x00007fb6e7cd3a90, InitialTos = 0x00007fb6e7cd3a40, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fb6e7cd3a90 > = 0x0000000000000003	
  DataStack   [  -1 ] < 0x00007fb6e7cd3a88 > = 0x0000000000000000	
  DataStack   [  -2 ] < 0x00007fb6e7cd3a80 > = 0x0000000000000001	
  DataStack   [  -3 ] < 0x00007fb6e7cd3a78 > = 0x0000000000000002	
  DataStack   [  -4 ] < 0x00007fb6e7cd3a70 > = 0x0000000000000003	
  DataStack   [  -5 ] < 0x00007fb6e7cd3a68 > = 0x0000000000000004	
  DataStack   [  -6 ] < 0x00007fb6e7cd3a60 > = 0x0000000000000005	
  DataStack   [  -7 ] < 0x00007fb6e7cd3a58 > = 0x0000000000000005	
  DataStack   [  -8 ] < 0x00007fb6e7cd3a50 > = 0x0000000000000005	
  DataStack   [  -9 ] < 0x00007fb6e7cd3a48 > = 0x0000000000000005	
3
DataStack at : [34;49mnamespaces/test/stack.csl : 2.81[39;49m :
DataStack depth =   3 : Dsp (R14) = Top = 0x00007fb6e7cd3a58, InitialTos = 0x00007fb6e7cd3a40, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fb6e7cd3a58 > = 0x0000000000000005	
  DataStack   [  -1 ] < 0x00007fb6e7cd3a50 > = 0x0000000000000005	
  DataStack   [  -2 ] < 0x00007fb6e7cd3a48 > = 0x0000000000000005	

DataStack at : [34;49mnamespaces/test/stack.csl : 3.59[39;49m :
DataStack depth =   3 : Dsp (R14) = Top = 0x00007fb6e7cd3a58, InitialTos = 0x00007fb6e7cd3a40, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fb6e7cd3a58 > = 0x0000000000000005	
  DataStack   [  -1 ] < 0x00007fb6e7cd3a50 > = 0x0000000000000005	
  DataStack   [  -2 ] < 0x00007fb6e7cd3a48 > = 0x0000000000000005	

 1
DataStack at : [34;49mnamespaces/test/stack.csl : 3.59[39;49m :
DataStack depth =   4 : Dsp (R14) = Top = 0x00007fb6e7cd3a60, InitialTos = 0x00007fb6e7cd3a40, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fb6e7cd3a60 > = 0x0000000000000001	
  DataStack   [  -1 ] < 0x00007fb6e7cd3a58 > = 0x0000000000000005	
  DataStack   [  -2 ] < 0x00007fb6e7cd3a50 > = 0x0000000000000005	
  DataStack   [  -3 ] < 0x00007fb6e7cd3a48 > = 0x0000000000000005	
 
testpick : above line should read 1
 namespaces/compiler/c_syntax.csl 10.9
hello 7
 CObj size = 104
Dump at : namespaces/compiler/c_syntax.csl : 46.24 :
Dump : Address = 0x00007fb6e4d15828 : Number = 104 :: (little endian dump)
0x00007fb6e4d15828 :  d2 04 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e4d15838 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e4d15848 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e4d15858 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e4d15868 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e4d15878 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e4d15888 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 

	chey.hi = 1234
Dump at : namespaces/compiler/c_syntax.csl : 51.24 :
Dump : Address = 0x00007fb6e4d15828 : Number = 104 :: (little endian dump)
0x00007fb6e4d15828 :  d2 04 00 00 00 00 00 00  00 00 ff 00 00 00 00 00  ........ ........ 
0x00007fb6e4d15838 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e4d15848 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e4d15858 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e4d15868 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e4d15878 :  00 00 00 00 00 00 00 00  ef cd ab 89 67 45 23 01  ........ ....gE#. 
0x00007fb6e4d15888 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 

	chey.heey = 123456789abcdef
Dump at : namespaces/compiler/c_syntax.csl : 54.24 :
Dump : Address = 0x00007fb6e4d15828 : Number = 104 :: (little endian dump)
0x00007fb6e4d15828 :  d2 04 00 00 00 00 00 00  00 00 ff 00 00 00 00 00  ........ ........ 
0x00007fb6e4d15838 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e4d15848 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e4d15858 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e4d15868 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e4d15878 :  00 00 00 00 00 00 00 00  ef cd ab 89 67 45 23 01  ........ ....gE#. 
0x00007fb6e4d15888 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 

Dump at : namespaces/compiler/c_syntax.csl : 62.24 :
Dump : Address = 0x00007fb6e4d15828 : Number = 104 :: (little endian dump)
0x00007fb6e4d15828 :  d2 04 00 00 00 00 00 00  00 00 ff 00 00 00 00 00  ........ ........ 
0x00007fb6e4d15838 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e4d15848 :  00 00 00 00 00 00 00 00  ef cd ab 89 67 45 23 01  ........ ....gE#. 
0x00007fb6e4d15858 :  ef cd ab 89 67 45 23 01  00 00 00 00 00 00 00 00  ....gE#. ........ 
0x00007fb6e4d15868 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e4d15878 :  00 00 00 00 00 00 00 00  ef cd ab 89 67 45 23 01  ........ ....gE#. 
0x00007fb6e4d15888 :  ef cd ab 89 67 45 23 01  00 00 00 00 00 00 00 00  ....gE#. ........ 

	chey.hey = 123456789abcdef
Dump at : namespaces/compiler/c_syntax.csl : 69.25 :
Dump : Address = 0x00007fb6e4d15828 : Number = 104 :: (little endian dump)
0x00007fb6e4d15828 :  d2 04 00 00 00 00 00 00  00 00 ff 00 00 00 00 00  ........ ........ 
0x00007fb6e4d15838 :  00 00 00 00 00 00 00 00  00 00 16 00 00 00 00 ff  ........ ........ 
0x00007fb6e4d15848 :  00 00 00 00 00 00 00 00  ef cd ab 89 67 45 23 01  ........ ....gE#. 
0x00007fb6e4d15858 :  ef cd ab 89 67 45 23 01  00 00 00 00 00 00 00 00  ....gE#. ........ 
0x00007fb6e4d15868 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e4d15878 :  00 00 00 00 00 00 00 00  ef cd ab 89 67 45 23 01  ........ ....gE#. 
0x00007fb6e4d15888 :  ef cd ab 89 67 45 23 01  00 00 00 00 00 00 00 00  ....gE#. ........ 

CObj.size = 104

chey = 4d2

chey.hey = 123456789abcdef

&chey.hey = 7fb6e4d15850 0x0123456789abcdef 0x00007fb6e4d15850
	hoot
Dump at : namespaces/compiler/c_syntax.csl : 86.24 :
Dump : Address = 0x00007fb6e4d15828 : Number = 104 :: (little endian dump)
0x00007fb6e4d15828 :  d2 04 00 00 00 00 00 00  77 65 6c 6c 00 00 00 00  ........ well.... 
0x00007fb6e4d15838 :  00 00 00 00 00 00 00 00  00 00 0a 09 68 6f 6f 74  ........ ....hoot 
0x00007fb6e4d15848 :  00 00 00 00 00 00 00 00  ef cd ab 89 67 45 23 01  ........ ....gE#. 
0x00007fb6e4d15858 :  ef cd ab 89 67 45 23 01  00 00 00 00 00 00 00 00  ....gE#. ........ 
0x00007fb6e4d15868 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e4d15878 :  00 00 00 00 00 00 00 00  ef cd ab 89 67 45 23 01  ........ ....gE#. 
0x00007fb6e4d15888 :  ef cd ab 89 67 45 23 01  00 00 00 00 00 00 00 00  ....gE#. ........ 

Dump at : namespaces/compiler/c_syntax.csl : 89.24 :
Dump : Address = 0x00007fb6e4d15828 : Number = 104 :: (little endian dump)
0x00007fb6e4d15828 :  d2 04 00 00 00 00 00 00  77 65 6c 6c 00 00 00 00  ........ well.... 
0x00007fb6e4d15838 :  00 00 00 00 00 00 00 00  00 00 0a 09 68 6f 6f 74  ........ ....hoot 
0x00007fb6e4d15848 :  64 6f 6e 27 74 00 00 00  ef cd ab 89 67 45 23 01  don't... ....gE#. 
0x00007fb6e4d15858 :  ef cd ab 89 67 45 23 01  00 00 00 00 00 00 00 00  ....gE#. ........ 
0x00007fb6e4d15868 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e4d15878 :  00 00 00 00 00 00 00 00  ef cd ab 89 67 45 23 01  ........ ....gE#. 
0x00007fb6e4d15888 :  ef cd ab 89 67 45 23 01  00 00 00 00 00 00 00 00  ....gE#. ........ 

Dump at : namespaces/compiler/c_syntax.csl : 91.24 :
Dump : Address = 0x00007fb6e4d15828 : Number = 104 :: (little endian dump)
0x00007fb6e4d15828 :  d2 04 00 00 00 00 00 00  68 6f 6f 74 00 00 00 00  ........ hoot.... 
0x00007fb6e4d15838 :  00 00 00 00 00 00 00 00  00 00 0a 09 68 6f 6f 74  ........ ....hoot 
0x00007fb6e4d15848 :  64 6f 6e 27 74 00 00 00  ef cd ab 89 67 45 23 01  don't... ....gE#. 
0x00007fb6e4d15858 :  ef cd ab 89 67 45 23 01  00 00 00 00 00 00 00 00  ....gE#. ........ 
0x00007fb6e4d15868 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e4d15878 :  00 00 00 00 00 00 00 00  ef cd ab 89 67 45 23 01  ........ ....gE#. 
0x00007fb6e4d15888 :  ef cd ab 89 67 45 23 01  00 00 00 00 00 00 00 00  ....gE#. ........ 

Dump at : namespaces/compiler/c_syntax.csl : 93.24 :
Dump : Address = 0x00007fb6e4d15828 : Number = 104 :: (little endian dump)
0x00007fb6e4d15828 :  d2 04 00 00 00 00 00 00  6f 6b 21 20 64 6f 6e 27  ........ ok! don' 
0x00007fb6e4d15838 :  74 20 68 6f 6f 74 00 00  00 00 0a 09 68 6f 6f 74  t hoot.. ....hoot 
0x00007fb6e4d15848 :  64 6f 6e 27 74 00 00 00  ef cd ab 89 67 45 23 01  don't... ....gE#. 
0x00007fb6e4d15858 :  ef cd ab 89 67 45 23 01  00 00 00 00 00 00 00 00  ....gE#. ........ 
0x00007fb6e4d15868 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e4d15878 :  00 00 00 00 00 00 00 00  ef cd ab 89 67 45 23 01  ........ ....gE#. 
0x00007fb6e4d15888 :  ef cd ab 89 67 45 23 01  00 00 00 00 00 00 00 00  ....gE#. ........ 

Dump at : namespaces/compiler/c_syntax.csl : 95.24 :
Dump : Address = 0x00007fb6e4d15828 : Number = 104 :: (little endian dump)
0x00007fb6e4d15828 :  d2 04 00 00 00 00 00 00  77 65 6c 6c 2c 20 64 6f  ........ well, do 
0x00007fb6e4d15838 :  20 6f 72 20 64 6f 6e 27  74 20 68 6f 6f 74 00 74   or don' t hoot.t 
0x00007fb6e4d15848 :  64 6f 6e 27 74 00 00 00  ef cd ab 89 67 45 23 01  don't... ....gE#. 
0x00007fb6e4d15858 :  ef cd ab 89 67 45 23 01  00 00 00 00 00 00 00 00  ....gE#. ........ 
0x00007fb6e4d15868 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e4d15878 :  00 00 00 00 00 00 00 00  ef cd ab 89 67 45 23 01  ........ ....gE#. 
0x00007fb6e4d15888 :  ef cd ab 89 67 45 23 01  00 00 00 00 00 00 00 00  ....gE#. ........ 

	don't

	hoot

Dump at : namespaces/compiler/c_syntax.csl : 99.24 :
Dump : Address = 0x00007fb6e4d15828 : Number = 104 :: (little endian dump)
0x00007fb6e4d15828 :  d2 04 00 00 00 00 00 00  77 65 6c 6c 2c 20 64 6f  ........ well, do 
0x00007fb6e4d15838 :  20 6f 72 20 64 6f 6e 27  74 20 68 6f 6f 74 00 74   or don' t hoot.t 
0x00007fb6e4d15848 :  64 6f 6e 27 74 00 00 00  ef cd ab 89 67 45 23 01  don't... ....gE#. 
0x00007fb6e4d15858 :  ef cd ab 89 67 45 23 01  00 00 00 00 00 00 00 00  ....gE#. ........ 
0x00007fb6e4d15868 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e4d15878 :  00 00 00 00 00 00 00 00  ef cd ab 89 67 45 23 01  ........ ....gE#. 
0x00007fb6e4d15888 :  ef cd ab 89 67 45 23 01  00 00 00 00 00 00 00 00  ....gE#. ........ 

 =============================
C_Syntax.[34;49mchi[39;49m <:> csl compiled word, prefix
SourceCode for C_Syntax.[34;49mchi[39;49m :> 
[34;49mvoid chi ( CObj chey0, d | a b c ) { c = 1 + 2 ; b = c + 2 ; a = b + c ; nl p ( c ) ; c 3 "c should be 3" assert p ( b ) ; b 5 "b should be 5" assert p ( a ) ; a 8 "a should be 8" assert dump ( &chey0, CObj.size ) ; d = CObj.chey0.hey ; hex p ( d ) ; printf ( "\n chi : d = %lx\n", d ) ; sprintf ( &CObj.chey0.chars, "\n\t\they = %lx", d ) ; printf ( "\n chi : d = %lx\n", d ) ; sprintf ( &CObj.chey0.chars2, "\n\t\they hey = %lx", CObj.chey0.hey ) ; printf ( "\n CObj.chey0.chars = %s\n", &CObj.chey0.chars ) ; printf ( "\n CObj.chey0.chars2 = %s\n", &CObj.chey0.chars2 ) ; printf ( "\n chi : d = %lx\n", d ) ; d = CObj.chey0.hey ; printf ( "\n%lx\n", d ) ; printf ( "\n chi : d = %lx\n", d ) ; _assert ( d #x0123456789abcdef ) ; printf ( "\n%x\n", CObj.chey0.hey ) ; sprintf ( &chey0.chars [ 24 ], "%s", "hoot" ) ; dump ( &chey0, CObj.size ) ; } [39;49m
Source code file location of [34;49mchi[39;49m : "namespaces/compiler/c_syntax.csl" : 105.4 :: we are now at : namespaces/compiler/c_syntax.csl : 132.8
Compiled with : optimizeOn, inlineOn, c_syntaxOn, infixOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xe779a494 -- code size = 1267 bytes
TypeSignature : Object 
 -----------------------------
Word :: C_Syntax.[34;49mchi[39;49m : definition = 0x00007fb6e779a494 : disassembly at namespaces/compiler/c_syntax.csl : 132.8 :
[34;49m ..                                  void [39;49m[33;40mchi[39;49m[34;49m ( CObj chey0, d | a b c ) { c = 1 + 2 ; b = c + 2 ; a = b + c ; nl p ( c ) ; c 3 "c should be 3"  .. [39;49m[32;49m
0x7fb6e779a494    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fb6e779a498    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e779a49c    4981c620000000          add r14, 0x20                                          [39;49m
[34;49m void chi ( CObj chey0, d | a b c ) { c = [39;49m[33;40m1[39;49m[34;49m + 2 ; b = c + 2 ; a = b + c ; nl p ( c ) ; c 3 "c should be 3" assert p ( b ) ; b 5 "b should be 5" .. [39;49m[32;49m
0x7fb6e779a4a3    48c7c003000000          mov rax, 0x3                                           [39;49m
[34;49m ..  void chi ( CObj chey0, d | a b c ) { [39;49m[33;40mc[39;49m[34;49m = 1 + 2 ; b = c + 2 ; a = b + c ; nl p ( c ) ; c 3 "c should be 3" assert p ( b ) ; b 5 "b should b .. [39;49m[32;49m
0x7fb6e779a4aa    498d4f18                lea rcx, [r15+0x18]                                    [39;49m
[34;49m   void chi ( CObj chey0, d | a b c ) { c [39;49m[33;40mstore[39;49m[34;49m 2 ; b = c + 2 ; a = b + c ; nl p ( c ) ; c 3 "c should be 3" assert p ( b ) ; b 5 "b should be  .. [39;49m[32;49m
0x7fb6e779a4ae    488901                  mov [rcx], rax                                         [39;49m
[34;49m ..  chey0, d | a b c ) { c = 1 + 2 ; b = [39;49m[33;40mc[39;49m[34;49m + 2 ; a = b + c ; nl p ( c ) ; c 3 "c should be 3" assert p ( b ) ; b 5 "b should be 5" assert p (  .. [39;49m[32;49m
0x7fb6e779a4b1    498b4718                mov rax, [r15+0x18]                                    [39;49m
[34;49m .. y0, d | a b c ) { c = 1 + 2 ; b = c + [39;49m[33;40m2[39;49m[34;49m ; a = b + c ; nl p ( c ) ; c 3 "c should be 3" assert p ( b ) ; b 5 "b should be 5" assert p ( a )  .. [39;49m[32;49m
0x7fb6e779a4b5    48c7c102000000          mov rcx, 0x2                                           [39;49m
[34;49m .. hey0, d | a b c ) { c = 1 + 2 ; b = c [39;49m[33;40m+[39;49m[34;49m 2 ; a = b + c ; nl p ( c ) ; c 3 "c should be 3" assert p ( b ) ; b 5 "b should be 5" assert p ( a  .. [39;49m[32;49m
0x7fb6e779a4bc    4803c1                  add rax, rcx                                           [39;49m
[34;49m .. CObj chey0, d | a b c ) { c = 1 + 2 ; [39;49m[33;40mb[39;49m[34;49m = c + 2 ; a = b + c ; nl p ( c ) ; c 3 "c should be 3" assert p ( b ) ; b 5 "b should be 5" assert  .. [39;49m[32;49m
0x7fb6e779a4bf    498d4f10                lea rcx, [r15+0x10]                                    [39;49m
[34;49m .. bj chey0, d | a b c ) { c = 1 + 2 ; b [39;49m[33;40m=[39;49m[34;49m c + 2 ; a = b + c ; nl p ( c ) ; c 3 "c should be 3" assert p ( b ) ; b 5 "b should be 5" assert p  .. [39;49m[32;49m
0x7fb6e779a4c3    488901                  mov [rcx], rax                                         [39;49m
[34;49m .. a b c ) { c = 1 + 2 ; b = c + 2 ; a = [39;49m[33;40mb[39;49m[34;49m + c ; nl p ( c ) ; c 3 "c should be 3" assert p ( b ) ; b 5 "b should be 5" assert p ( a ) ; a 8 "a .. [39;49m[32;49m
0x7fb6e779a4c6    498b4710                mov rax, [r15+0x10]                                    [39;49m
[34;49m .. c ) { c = 1 + 2 ; b = c + 2 ; a = b + [39;49m[33;40mc[39;49m[34;49m ; nl p ( c ) ; c 3 "c should be 3" assert p ( b ) ; b 5 "b should be 5" assert p ( a ) ; a 8 "a sho .. [39;49m[32;49m
0x7fb6e779a4ca    498b4f18                mov rcx, [r15+0x18]                                    [39;49m
[34;49m .. b c ) { c = 1 + 2 ; b = c + 2 ; a = b [39;49m[33;40m+[39;49m[34;49m c ; nl p ( c ) ; c 3 "c should be 3" assert p ( b ) ; b 5 "b should be 5" assert p ( a ) ; a 8 "a s .. [39;49m[32;49m
0x7fb6e779a4ce    4803c1                  add rax, rcx                                           [39;49m
[34;49m .. d | a b c ) { c = 1 + 2 ; b = c + 2 ; [39;49m[33;40ma[39;49m[34;49m = b + c ; nl p ( c ) ; c 3 "c should be 3" assert p ( b ) ; b 5 "b should be 5" assert p ( a ) ; a  .. [39;49m[32;49m
0x7fb6e779a4d1    498d4f08                lea rcx, [r15+0x8]                                     [39;49m
[34;49m .. | a b c ) { c = 1 + 2 ; b = c + 2 ; a [39;49m[33;40m=[39;49m[34;49m b + c ; nl p ( c ) ; c 3 "c should be 3" assert p ( b ) ; b 5 "b should be 5" assert p ( a ) ; a 8  .. [39;49m[32;49m
0x7fb6e779a4d5    488901                  mov [rcx], rax                                         [39;49m
[34;49m .. { c = 1 + 2 ; b = c + 2 ; a = b + c ; [39;49m[33;40mnl[39;49m[34;49m p ( c ) ; c 3 "c should be 3" assert p ( b ) ; b 5 "b should be 5" assert p ( a ) ; a 8 "a should  .. [39;49m[32;49m
0x7fb6e779a4d8    49b8e08080892d560000    mov r8, 0x562d898080e0                                 [39;49m[32;49m
0x7fb6e779a4e2    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e779a4ec    49ffd1                  call r9                    	< Io.[34;49mnewline[39;49m : 0x0000562d898080e0[32;49m >[39;49m[39;49m
[34;49m ..  + 2 ; b = c + 2 ; a = b + c ; nl p ( [39;49m[33;40mc[39;49m[34;49m ) ; c 3 "c should be 3" assert p ( b ) ; b 5 "b should be 5" assert p ( a ) ; a 8 "a should be 8" a .. [39;49m[32;49m
0x7fb6e779a4ef    498b4718                mov rax, [r15+0x18]                                    [39;49m[32;49m
0x7fb6e779a4f3    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e779a4f7    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  = 1 + 2 ; b = c + 2 ; a = b + c ; nl [39;49m[33;40mp[39;49m[34;49m ( c ) ; c 3 "c should be 3" assert p ( b ) ; b 5 "b should be 5" assert p ( a ) ; a 8 "a should be  .. [39;49m[32;49m
0x7fb6e779a4fa    49b9d9a593e7b67f0000    mov r9, 0x7fb6e793a5d9                                 [39;49m[32;49m
0x7fb6e779a504    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fb6e793a5d9[32;49m >[39;49m[39;49m
[34;49m ..  b = c + 2 ; a = b + c ; nl p ( c ) ; [39;49m[33;40mc[39;49m[34;49m 3 "c should be 3" assert p ( b ) ; b 5 "b should be 5" assert p ( a ) ; a 8 "a should be 8" assert  .. [39;49m[32;49m
0x7fb6e779a507    498b4718                mov rax, [r15+0x18]                                    [39;49m[32;49m
0x7fb6e779a50b    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e779a50f    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  = c + 2 ; a = b + c ; nl p ( c ) ; c [39;49m[33;40m3[39;49m[34;49m "c should be 3" assert p ( b ) ; b 5 "b should be 5" assert p ( a ) ; a 8 "a should be 8" assert du .. [39;49m[32;49m
0x7fb6e779a512    48c7c003000000          mov rax, 0x3                                           [39;49m[32;49m
0x7fb6e779a519    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e779a51d    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  c + 2 ; a = b + c ; nl p ( c ) ; c 3 [39;49m[33;40m"[39;49m[34;49mc should be 3" assert p ( b ) ; b 5 "b should be 5" assert p ( a ) ; a 8 "a should be 8" assert dump .. [39;49m[32;49m
0x7fb6e779a520    48b85fbf41e7b67f0000    mov rax, 0x7fb6e741bf5f    	[32;49m< string : '[39;49m[39;49mc should be 3[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fb6e779a52a    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e779a52e    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e779a531    49b92bbb93e7b67f0000    mov r9, 0x7fb6e793bb2b                                 [39;49m[32;49m
0x7fb6e779a53b    49ffd1                  call r9                    	< System.[34;49m_assert1[39;49m : 0x00007fb6e793bb2b[32;49m >[39;49m[39;49m
[34;49m ..  c ) ; c 3 "c should be 3" assert p ( [39;49m[33;40mb[39;49m[34;49m ) ; b 5 "b should be 5" assert p ( a ) ; a 8 "a should be 8" assert dump ( &chey0, CObj.size ) ;  d .. [39;49m[32;49m
0x7fb6e779a53e    498b4710                mov rax, [r15+0x10]                                    [39;49m[32;49m
0x7fb6e779a542    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e779a546    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  p ( c ) ; c 3 "c should be 3" assert [39;49m[33;40mp[39;49m[34;49m ( b ) ; b 5 "b should be 5" assert p ( a ) ; a 8 "a should be 8" assert dump ( &chey0, CObj.size )  .. [39;49m[32;49m
0x7fb6e779a549    49b9d9a593e7b67f0000    mov r9, 0x7fb6e793a5d9                                 [39;49m[32;49m
0x7fb6e779a553    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fb6e793a5d9[32;49m >[39;49m[39;49m
[34;49m ..  c 3 "c should be 3" assert p ( b ) ; [39;49m[33;40mb[39;49m[34;49m 5 "b should be 5" assert p ( a ) ; a 8 "a should be 8" assert dump ( &chey0, CObj.size ) ;  d = COb .. [39;49m[32;49m
0x7fb6e779a556    498b4710                mov rax, [r15+0x10]                                    [39;49m[32;49m
0x7fb6e779a55a    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e779a55e    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  3 "c should be 3" assert p ( b ) ; b [39;49m[33;40m5[39;49m[34;49m "b should be 5" assert p ( a ) ; a 8 "a should be 8" assert dump ( &chey0, CObj.size ) ;  d = CObj. .. [39;49m[32;49m
0x7fb6e779a561    48c7c005000000          mov rax, 0x5                                           [39;49m[32;49m
0x7fb6e779a568    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e779a56c    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  "c should be 3" assert p ( b ) ; b 5 [39;49m[33;40m"[39;49m[34;49mb should be 5" assert p ( a ) ; a 8 "a should be 8" assert dump ( &chey0, CObj.size ) ;  d = CObj.ch .. [39;49m[32;49m
0x7fb6e779a56f    48b88fbf41e7b67f0000    mov rax, 0x7fb6e741bf8f    	[32;49m< string : '[39;49m[39;49mb should be 5[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fb6e779a579    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e779a57d    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e779a580    49b92bbb93e7b67f0000    mov r9, 0x7fb6e793bb2b                                 [39;49m[32;49m
0x7fb6e779a58a    49ffd1                  call r9                    	< System.[34;49m_assert1[39;49m : 0x00007fb6e793bb2b[32;49m >[39;49m[39;49m
[34;49m ..  b ) ; b 5 "b should be 5" assert p ( [39;49m[33;40ma[39;49m[34;49m ) ; a 8 "a should be 8" assert dump ( &chey0, CObj.size ) ;  d = CObj.chey0.hey ; hex p ( d ) ; pri .. [39;49m[32;49m
0x7fb6e779a58d    498b4708                mov rax, [r15+0x8]                                     [39;49m[32;49m
0x7fb6e779a591    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e779a595    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  p ( b ) ; b 5 "b should be 5" assert [39;49m[33;40mp[39;49m[34;49m ( a ) ; a 8 "a should be 8" assert dump ( &chey0, CObj.size ) ;  d = CObj.chey0.hey ; hex p ( d ) ; .. [39;49m[32;49m
0x7fb6e779a598    49b9d9a593e7b67f0000    mov r9, 0x7fb6e793a5d9                                 [39;49m[32;49m
0x7fb6e779a5a2    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fb6e793a5d9[32;49m >[39;49m[39;49m
[34;49m ..  b 5 "b should be 5" assert p ( a ) ; [39;49m[33;40ma[39;49m[34;49m 8 "a should be 8" assert dump ( &chey0, CObj.size ) ;  d = CObj.chey0.hey ; hex p ( d ) ; printf (  .. [39;49m[32;49m
0x7fb6e779a5a5    498b4708                mov rax, [r15+0x8]                                     [39;49m[32;49m
0x7fb6e779a5a9    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e779a5ad    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  5 "b should be 5" assert p ( a ) ; a [39;49m[33;40m8[39;49m[34;49m "a should be 8" assert dump ( &chey0, CObj.size ) ;  d = CObj.chey0.hey ; hex p ( d ) ; printf ( "\ .. [39;49m[32;49m
0x7fb6e779a5b0    48c7c008000000          mov rax, 0x8                                           [39;49m[32;49m
0x7fb6e779a5b7    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e779a5bb    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  "b should be 5" assert p ( a ) ; a 8 [39;49m[33;40m"[39;49m[34;49ma should be 8" assert dump ( &chey0, CObj.size ) ;  d = CObj.chey0.hey ; hex p ( d ) ; printf ( "\n  .. [39;49m[32;49m
0x7fb6e779a5be    48b8bfbf41e7b67f0000    mov rax, 0x7fb6e741bfbf    	[32;49m< string : '[39;49m[39;49ma should be 8[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fb6e779a5c8    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e779a5cc    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e779a5cf    49b92bbb93e7b67f0000    mov r9, 0x7fb6e793bb2b                                 [39;49m[32;49m
0x7fb6e779a5d9    49ffd1                  call r9                    	< System.[34;49m_assert1[39;49m : 0x00007fb6e793bb2b[32;49m >[39;49m[39;49m
[34;49m ..  ; a 8 "a should be 8" assert dump ( &[39;49m[33;40mchey0[39;49m[34;49m, CObj.size ) ;  d = CObj.chey0.hey ; hex p ( d ) ; printf ( "\n chi : d = %lx\n", d ) ; sprintf .. [39;49m[32;49m
0x7fb6e779a5dc    498b47f0                mov rax, [r15-0x10]                                    [39;49m[32;49m
0x7fb6e779a5e0    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fb6e779a5e7    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e779a5eb    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ould be 8" assert dump ( &chey0, CObj.[39;49m[33;40msize[39;49m[34;49m ) ;  d = CObj.chey0.hey ; hex p ( d ) ; printf ( "\n chi : d = %lx\n", d ) ; sprintf ( &CObj.che .. [39;49m[32;49m
0x7fb6e779a5ee    48b8906c20e6b67f0000    mov rax, 0x7fb6e6206c90    	[32;49m< string : '[39;49m[39;49mh[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fb6e779a5f8    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fb6e779a5fb    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e779a5ff    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  p ( a ) ; a 8 "a should be 8" assert [39;49m[33;40mdump[39;49m[34;49m ( &chey0, CObj.size ) ;  d = CObj.chey0.hey ; hex p ( d ) ; printf ( "\n chi : d = %lx\n", d ) ; .. [39;49m[32;49m
0x7fb6e779a602    49b830a480892d560000    mov r8, 0x562d8980a430                                 [39;49m[32;49m
0x7fb6e779a60c    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e779a616    49ffd1                  call r9                    	< Debug.[34;49mdump[39;49m : 0x0000562d8980a430[32;49m >[39;49m[39;49m
[34;49m .. ump ( &chey0, CObj.size ) ;  d = CObj.[39;49m[33;40mchey0[39;49m[34;49m.hey ; hex p ( d ) ; printf ( "\n chi : d = %lx\n", d ) ; sprintf ( &CObj.chey0.chars, "\n\t\the .. [39;49m[32;49m
0x7fb6e779a619    498b47f0                mov rax, [r15-0x10]                                    [39;49m
[34;49m .. &chey0, CObj.size ) ;  d = CObj.chey0.[39;49m[33;40mhey[39;49m[34;49m ; hex p ( d ) ; printf ( "\n chi : d = %lx\n", d ) ; sprintf ( &CObj.chey0.chars, "\n\t\they = %l .. [39;49m[32;49m
0x7fb6e779a61d    4881c028000000          add rax, 0x28                                          [39;49m[32;49m
0x7fb6e779a624    488b00                  mov rax, [rax]                                         [39;49m
[34;49m ..  assert dump ( &chey0, CObj.size ) ;  [39;49m[33;40md[39;49m[34;49m = CObj.chey0.hey ; hex p ( d ) ; printf ( "\n chi : d = %lx\n", d ) ; sprintf ( &CObj.chey0.chars,  .. [39;49m[32;49m
0x7fb6e779a627    498d4ff8                lea rcx, [r15-0x8]                                     [39;49m
[34;49m .. ssert dump ( &chey0, CObj.size ) ;  d [39;49m[33;40m=[39;49m[34;49m CObj.chey0.hey ; hex p ( d ) ; printf ( "\n chi : d = %lx\n", d ) ; sprintf ( &CObj.chey0.chars, "\ .. [39;49m[32;49m
0x7fb6e779a62b    488901                  mov [rcx], rax                                         [39;49m
[34;49m .. , CObj.size ) ;  d = CObj.chey0.hey ; [39;49m[33;40mhex[39;49m[34;49m p ( d ) ; printf ( "\n chi : d = %lx\n", d ) ; sprintf ( &CObj.chey0.chars, "\n\t\they = %lx", d  .. [39;49m[32;49m
0x7fb6e779a62e    49b8d0a380892d560000    mov r8, 0x562d8980a3d0                                 [39;49m[32;49m
0x7fb6e779a638    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e779a642    49ffd1                  call r9                    	< System.[34;49mhex[39;49m : 0x0000562d8980a3d0[32;49m >[39;49m[39;49m
[34;49m .. ize ) ;  d = CObj.chey0.hey ; hex p ( [39;49m[33;40md[39;49m[34;49m ) ; printf ( "\n chi : d = %lx\n", d ) ; sprintf ( &CObj.chey0.chars, "\n\t\they = %lx", d ) ; prin .. [39;49m[32;49m
0x7fb6e779a645    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e779a649    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e779a64d    498906                  mov [r14], rax                                         [39;49m
[34;49m .. bj.size ) ;  d = CObj.chey0.hey ; hex [39;49m[33;40mp[39;49m[34;49m ( d ) ; printf ( "\n chi : d = %lx\n", d ) ; sprintf ( &CObj.chey0.chars, "\n\t\they = %lx", d ) ;  .. [39;49m[32;49m
0x7fb6e779a650    49b9d9a593e7b67f0000    mov r9, 0x7fb6e793a5d9                                 [39;49m[32;49m
0x7fb6e779a65a    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fb6e793a5d9[32;49m >[39;49m[39;49m
[34;49m .. bj.chey0.hey ; hex p ( d ) ; printf ( [39;49m[33;40m"\n chi : d = %lx\n"[39;49m[34;49m, d ) ; sprintf ( &CObj.chey0.chars, "\n\t\they = %lx", d ) ; printf ( "\n chi :  .. [39;49m[32;49m
0x7fb6e779a65d    48b8502ee6e5b67f0000    mov rax, 0x7fb6e5e62e50    	[32;49m< string : '[39;49m[39;49m\n chi : d = %lx\n[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fb6e779a667    488bf8                  mov rdi, rax                                           [39;49m
[34;49m ..  d ) ; printf ( "\n chi : d = %lx\n", [39;49m[33;40md[39;49m[34;49m ) ; sprintf ( &CObj.chey0.chars, "\n\t\they = %lx", d ) ; printf ( "\n chi : d = %lx\n", d ) ; spri .. [39;49m[32;49m
0x7fb6e779a66a    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e779a66e    488bf0                  mov rsi, rax                                           [39;49m[32;49m
0x7fb6e779a671    48c7c002000000          mov rax, 0x2                                           [39;49m
[34;49m .. ;  d = CObj.chey0.hey ; hex p ( d ) ; [39;49m[33;40mprintf[39;49m[34;49m ( "\n chi : d = %lx\n", d ) ; sprintf ( &CObj.chey0.chars, "\n\t\they = %lx", d ) ; printf ( " .. [39;49m[32;49m
0x7fb6e779a678    49b810947c892d560000    mov r8, 0x562d897c9410                                 [39;49m[32;49m
0x7fb6e779a682    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e779a68c    49ffd1                  call r9                    	< C.[34;49mprintf[39;49m : 0x0000562d897c9410[32;49m >[39;49m[39;49m
[34;49m .. i : d = %lx\n", d ) ; sprintf ( &CObj.[39;49m[33;40mchey0[39;49m[34;49m.chars, "\n\t\they = %lx", d ) ; printf ( "\n chi : d = %lx\n", d ) ; sprintf ( &CObj.chey0.char .. [39;49m[32;49m
0x7fb6e779a68f    498b47f0                mov rax, [r15-0x10]                                    [39;49m
[34;49m .. = %lx\n", d ) ; sprintf ( &CObj.chey0.[39;49m[33;40mchars[39;49m[34;49m, "\n\t\they = %lx", d ) ; printf ( "\n chi : d = %lx\n", d ) ; sprintf ( &CObj.chey0.chars2, "\ .. [39;49m[32;49m
0x7fb6e779a693    4881c008000000          add rax, 0x8                                           [39;49m[32;49m
0x7fb6e779a69a    488bf8                  mov rdi, rax                                           [39;49m
[34;49m .. ", d ) ; sprintf ( &CObj.chey0.chars, [39;49m[33;40m"\n\t\they = %lx"[39;49m[34;49m, d ) ; printf ( "\n chi : d = %lx\n", d ) ; sprintf ( &CObj.chey0.chars2, "\n\t\the .. [39;49m[32;49m
0x7fb6e779a69d    48b8612ee6e5b67f0000    mov rax, 0x7fb6e5e62e61    	[32;49m< string : '[39;49m[39;49m\n\t\they = %lx[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fb6e779a6a7    488bf0                  mov rsi, rax                                           [39;49m
[34;49m .. &CObj.chey0.chars, "\n\t\they = %lx", [39;49m[33;40md[39;49m[34;49m ) ; printf ( "\n chi : d = %lx\n", d ) ; sprintf ( &CObj.chey0.chars2, "\n\t\they hey = %lx", CObj. .. [39;49m[32;49m
0x7fb6e779a6aa    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e779a6ae    488bd0                  mov rdx, rax                                           [39;49m[32;49m
0x7fb6e779a6b1    48c7c003000000          mov rax, 0x3                                           [39;49m
[34;49m ..  printf ( "\n chi : d = %lx\n", d ) ; [39;49m[33;40msprintf[39;49m[34;49m ( &CObj.chey0.chars, "\n\t\they = %lx", d ) ; printf ( "\n chi : d = %lx\n", d ) ; sprintf (  .. [39;49m[32;49m
0x7fb6e779a6b8    49b8a06fb0e7b67f0000    mov r8, 0x7fb6e7b06fa0                                 [39;49m[32;49m
0x7fb6e779a6c2    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e779a6cc    49ffd1                  call r9                    	< C.[34;49msprintf[39;49m : 0x00007fb6e7b06fa0[32;49m >[39;49m[39;49m
[34;49m .. rs, "\n\t\they = %lx", d ) ; printf ( [39;49m[33;40m"\n chi : d = %lx\n"[39;49m[34;49m, d ) ; sprintf ( &CObj.chey0.chars2, "\n\t\they hey = %lx", CObj.chey0.hey ) ; p .. [39;49m[32;49m
0x7fb6e779a6cf    48b86e2ee6e5b67f0000    mov rax, 0x7fb6e5e62e6e    	[32;49m< string : '[39;49m[39;49m\n chi : d = %lx\n[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fb6e779a6d9    488bf8                  mov rdi, rax                                           [39;49m
[34;49m ..  d ) ; printf ( "\n chi : d = %lx\n", [39;49m[33;40md[39;49m[34;49m ) ; sprintf ( &CObj.chey0.chars2, "\n\t\they hey = %lx", CObj.chey0.hey ) ; printf ( "\n CObj.chey0 .. [39;49m[32;49m
0x7fb6e779a6dc    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e779a6e0    488bf0                  mov rsi, rax                                           [39;49m[32;49m
0x7fb6e779a6e3    48c7c002000000          mov rax, 0x2                                           [39;49m
[34;49m .. chey0.chars, "\n\t\they = %lx", d ) ; [39;49m[33;40mprintf[39;49m[34;49m ( "\n chi : d = %lx\n", d ) ; sprintf ( &CObj.chey0.chars2, "\n\t\they hey = %lx", CObj.chey0. .. [39;49m[32;49m
0x7fb6e779a6ea    49b810947c892d560000    mov r8, 0x562d897c9410                                 [39;49m[32;49m
0x7fb6e779a6f4    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e779a6fe    49ffd1                  call r9                    	< C.[34;49mprintf[39;49m : 0x0000562d897c9410[32;49m >[39;49m[39;49m
[34;49m .. i : d = %lx\n", d ) ; sprintf ( &CObj.[39;49m[33;40mchey0[39;49m[34;49m.chars2, "\n\t\they hey = %lx", CObj.chey0.hey ) ; printf ( "\n CObj.chey0.chars = %s\n", &CObj. .. [39;49m[32;49m
0x7fb6e779a701    498b47f0                mov rax, [r15-0x10]                                    [39;49m
[34;49m .. = %lx\n", d ) ; sprintf ( &CObj.chey0.[39;49m[33;40mchars2[39;49m[34;49m, "\n\t\they hey = %lx", CObj.chey0.hey ) ; printf ( "\n CObj.chey0.chars = %s\n", &CObj.chey0. .. [39;49m[32;49m
0x7fb6e779a705    4881c038000000          add rax, 0x38                                          [39;49m[32;49m
0x7fb6e779a70c    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e779a710    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e779a713    488bf8                  mov rdi, rax                                           [39;49m
[34;49m .. , d ) ; sprintf ( &CObj.chey0.chars2, [39;49m[33;40m"\n\t\they hey = %lx"[39;49m[34;49m, CObj.chey0.hey ) ; printf ( "\n CObj.chey0.chars = %s\n", &CObj.chey0.chars )  .. [39;49m[32;49m
0x7fb6e779a716    48b87f2ee6e5b67f0000    mov rax, 0x7fb6e5e62e7f    	[32;49m< string : '[39;49m[39;49m\n\t\they hey = %lx[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fb6e779a720    488bf0                  mov rsi, rax                                           [39;49m
[34;49m .. 0.chars2, "\n\t\they hey = %lx", CObj.[39;49m[33;40mchey0[39;49m[34;49m.hey ) ; printf ( "\n CObj.chey0.chars = %s\n", &CObj.chey0.chars ) ; printf ( "\n CObj.chey0.ch .. [39;49m[32;49m
0x7fb6e779a723    498b47f0                mov rax, [r15-0x10]                                    [39;49m
[34;49m .. s2, "\n\t\they hey = %lx", CObj.chey0.[39;49m[33;40mhey[39;49m[34;49m ) ; printf ( "\n CObj.chey0.chars = %s\n", &CObj.chey0.chars ) ; printf ( "\n CObj.chey0.chars2 = .. [39;49m[32;49m
0x7fb6e779a727    4881c028000000          add rax, 0x28                                          [39;49m[32;49m
0x7fb6e779a72e    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fb6e779a731    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e779a735    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e779a738    488bd0                  mov rdx, rax                                           [39;49m[32;49m
0x7fb6e779a73b    48c7c003000000          mov rax, 0x3                                           [39;49m
[34;49m ..  printf ( "\n chi : d = %lx\n", d ) ; [39;49m[33;40msprintf[39;49m[34;49m ( &CObj.chey0.chars2, "\n\t\they hey = %lx", CObj.chey0.hey ) ; printf ( "\n CObj.chey0.chars .. [39;49m[32;49m
0x7fb6e779a742    49b8a06fb0e7b67f0000    mov r8, 0x7fb6e7b06fa0                                 [39;49m[32;49m
0x7fb6e779a74c    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e779a756    49ffd1                  call r9                    	< C.[34;49msprintf[39;49m : 0x00007fb6e7b06fa0[32;49m >[39;49m[39;49m
[34;49m .. y = %lx", CObj.chey0.hey ) ; printf ( [39;49m[33;40m"\n CObj.chey0.chars = %s\n"[39;49m[34;49m, &CObj.chey0.chars ) ; printf ( "\n CObj.chey0.chars2 = %s\n", &CObj.che .. [39;49m[32;49m
0x7fb6e779a759    48b8902ee6e5b67f0000    mov rax, 0x7fb6e5e62e90    	[32;49m< string : '[39;49m[39;49m\n CObj.chey0.chars = %s\n[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fb6e779a763    488bf8                  mov rdi, rax                                           [39;49m
[34;49m .. ( "\n CObj.chey0.chars = %s\n", &CObj.[39;49m[33;40mchey0[39;49m[34;49m.chars ) ; printf ( "\n CObj.chey0.chars2 = %s\n", &CObj.chey0.chars2 ) ; printf ( "\n chi : d = .. [39;49m[32;49m
0x7fb6e779a766    498b47f0                mov rax, [r15-0x10]                                    [39;49m
[34;49m .. CObj.chey0.chars = %s\n", &CObj.chey0.[39;49m[33;40mchars[39;49m[34;49m ) ; printf ( "\n CObj.chey0.chars2 = %s\n", &CObj.chey0.chars2 ) ; printf ( "\n chi : d = %lx\n .. [39;49m[32;49m
0x7fb6e779a76a    4881c008000000          add rax, 0x8                                           [39;49m[32;49m
0x7fb6e779a771    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e779a775    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e779a778    488bf0                  mov rsi, rax                                           [39;49m[32;49m
0x7fb6e779a77b    48c7c002000000          mov rax, 0x2                                           [39;49m
[34;49m .. t\they hey = %lx", CObj.chey0.hey ) ; [39;49m[33;40mprintf[39;49m[34;49m ( "\n CObj.chey0.chars = %s\n", &CObj.chey0.chars ) ; printf ( "\n CObj.chey0.chars2 = %s\n",  .. [39;49m[32;49m
0x7fb6e779a782    49b810947c892d560000    mov r8, 0x562d897c9410                                 [39;49m[32;49m
0x7fb6e779a78c    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e779a796    49ffd1                  call r9                    	< C.[34;49mprintf[39;49m : 0x0000562d897c9410[32;49m >[39;49m[39;49m
[34;49m .. %s\n", &CObj.chey0.chars ) ; printf ( [39;49m[33;40m"\n CObj.chey0.chars2 = %s\n"[39;49m[34;49m, &CObj.chey0.chars2 ) ; printf ( "\n chi : d = %lx\n", d ) ; d = CObj.c .. [39;49m[32;49m
0x7fb6e779a799    48b8a92ee6e5b67f0000    mov rax, 0x7fb6e5e62ea9    	[32;49m< string : '[39;49m[39;49m\n CObj.chey0.chars2 = %s\n[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fb6e779a7a3    488bf8                  mov rdi, rax                                           [39;49m
[34;49m ..  "\n CObj.chey0.chars2 = %s\n", &CObj.[39;49m[33;40mchey0[39;49m[34;49m.chars2 ) ; printf ( "\n chi : d = %lx\n", d ) ; d = CObj.chey0.hey ; printf ( "\n%lx\n", d ) ;  .. [39;49m[32;49m
0x7fb6e779a7a6    498b47f0                mov rax, [r15-0x10]                                    [39;49m
[34;49m .. Obj.chey0.chars2 = %s\n", &CObj.chey0.[39;49m[33;40mchars2[39;49m[34;49m ) ; printf ( "\n chi : d = %lx\n", d ) ; d = CObj.chey0.hey ; printf ( "\n%lx\n", d ) ; printf .. [39;49m[32;49m
0x7fb6e779a7aa    4881c038000000          add rax, 0x38                                          [39;49m[32;49m
0x7fb6e779a7b1    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e779a7b5    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e779a7b8    488bf0                  mov rsi, rax                                           [39;49m[32;49m
0x7fb6e779a7bb    48c7c002000000          mov rax, 0x2                                           [39;49m
[34;49m .. .chars = %s\n", &CObj.chey0.chars ) ; [39;49m[33;40mprintf[39;49m[34;49m ( "\n CObj.chey0.chars2 = %s\n", &CObj.chey0.chars2 ) ; printf ( "\n chi : d = %lx\n", d ) ; d .. [39;49m[32;49m
0x7fb6e779a7c2    49b810947c892d560000    mov r8, 0x562d897c9410                                 [39;49m[32;49m
0x7fb6e779a7cc    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e779a7d6    49ffd1                  call r9                    	< C.[34;49mprintf[39;49m : 0x0000562d897c9410[32;49m >[39;49m[39;49m
[34;49m .. s\n", &CObj.chey0.chars2 ) ; printf ( [39;49m[33;40m"\n chi : d = %lx\n"[39;49m[34;49m, d ) ; d = CObj.chey0.hey ; printf ( "\n%lx\n", d ) ; printf ( "\n chi : d = %lx .. [39;49m[32;49m
0x7fb6e779a7d9    48b8c32ee6e5b67f0000    mov rax, 0x7fb6e5e62ec3    	[32;49m< string : '[39;49m[39;49m\n chi : d = %lx\n[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fb6e779a7e3    488bf8                  mov rdi, rax                                           [39;49m
[34;49m .. s2 ) ; printf ( "\n chi : d = %lx\n", [39;49m[33;40md[39;49m[34;49m ) ; d = CObj.chey0.hey ; printf ( "\n%lx\n", d ) ; printf ( "\n chi : d = %lx\n", d ) ; _assert ( d .. [39;49m[32;49m
0x7fb6e779a7e6    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e779a7ea    488bf0                  mov rsi, rax                                           [39;49m[32;49m
0x7fb6e779a7ed    48c7c002000000          mov rax, 0x2                                           [39;49m
[34;49m .. hars2 = %s\n", &CObj.chey0.chars2 ) ; [39;49m[33;40mprintf[39;49m[34;49m ( "\n chi : d = %lx\n", d ) ; d = CObj.chey0.hey ; printf ( "\n%lx\n", d ) ; printf ( "\n chi  .. [39;49m[32;49m
0x7fb6e779a7f4    49b810947c892d560000    mov r8, 0x562d897c9410                                 [39;49m[32;49m
0x7fb6e779a7fe    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e779a808    49ffd1                  call r9                    	< C.[34;49mprintf[39;49m : 0x0000562d897c9410[32;49m >[39;49m[39;49m
[34;49m ..  "\n chi : d = %lx\n", d ) ; d = CObj.[39;49m[33;40mchey0[39;49m[34;49m.hey ; printf ( "\n%lx\n", d ) ; printf ( "\n chi : d = %lx\n", d ) ; _assert ( d #x0123456789ab .. [39;49m[32;49m
0x7fb6e779a80b    498b47f0                mov rax, [r15-0x10]                                    [39;49m
[34;49m .. hi : d = %lx\n", d ) ; d = CObj.chey0.[39;49m[33;40mhey[39;49m[34;49m ; printf ( "\n%lx\n", d ) ; printf ( "\n chi : d = %lx\n", d ) ; _assert ( d #x0123456789abcdef ) .. [39;49m[32;49m
0x7fb6e779a80f    4881c028000000          add rax, 0x28                                          [39;49m[32;49m
0x7fb6e779a816    488b00                  mov rax, [rax]                                         [39;49m
[34;49m ..  printf ( "\n chi : d = %lx\n", d ) ; [39;49m[33;40md[39;49m[34;49m = CObj.chey0.hey ; printf ( "\n%lx\n", d ) ; printf ( "\n chi : d = %lx\n", d ) ; _assert ( d #x012 .. [39;49m[32;49m
0x7fb6e779a819    498d4ff8                lea rcx, [r15-0x8]                                     [39;49m
[34;49m .. rintf ( "\n chi : d = %lx\n", d ) ; d [39;49m[33;40m=[39;49m[34;49m CObj.chey0.hey ; printf ( "\n%lx\n", d ) ; printf ( "\n chi : d = %lx\n", d ) ; _assert ( d #x01234 .. [39;49m[32;49m
0x7fb6e779a81d    488901                  mov [rcx], rax                                         [39;49m
[34;49m .. , d ) ; d = CObj.chey0.hey ; printf ( [39;49m[33;40m"\n%lx\n"[39;49m[34;49m, d ) ; printf ( "\n chi : d = %lx\n", d ) ; _assert ( d #x0123456789abcdef ) ;  printf ( "\ .. [39;49m[32;49m
0x7fb6e779a820    48b8d42ee6e5b67f0000    mov rax, 0x7fb6e5e62ed4    	[32;49m< string : '[39;49m[39;49m\n%lx\n[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fb6e779a82a    488bf8                  mov rdi, rax                                           [39;49m
[34;49m ..  CObj.chey0.hey ; printf ( "\n%lx\n", [39;49m[33;40md[39;49m[34;49m ) ; printf ( "\n chi : d = %lx\n", d ) ; _assert ( d #x0123456789abcdef ) ;  printf ( "\n%x\n", COb .. [39;49m[32;49m
0x7fb6e779a82d    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e779a831    488bf0                  mov rsi, rax                                           [39;49m[32;49m
0x7fb6e779a834    48c7c002000000          mov rax, 0x2                                           [39;49m
[34;49m ..  = %lx\n", d ) ; d = CObj.chey0.hey ; [39;49m[33;40mprintf[39;49m[34;49m ( "\n%lx\n", d ) ; printf ( "\n chi : d = %lx\n", d ) ; _assert ( d #x0123456789abcdef ) ;  pr .. [39;49m[32;49m
0x7fb6e779a83b    49b810947c892d560000    mov r8, 0x562d897c9410                                 [39;49m[32;49m
0x7fb6e779a845    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e779a84f    49ffd1                  call r9                    	< C.[34;49mprintf[39;49m : 0x0000562d897c9410[32;49m >[39;49m[39;49m
[34;49m ..  ; printf ( "\n%lx\n", d ) ; printf ( [39;49m[33;40m"\n chi : d = %lx\n"[39;49m[34;49m, d ) ; _assert ( d #x0123456789abcdef ) ;  printf ( "\n%x\n", CObj.chey0.hey ) ; .. [39;49m[32;49m
0x7fb6e779a852    48b8da2ee6e5b67f0000    mov rax, 0x7fb6e5e62eda    	[32;49m< string : '[39;49m[39;49m\n chi : d = %lx\n[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fb6e779a85c    488bf8                  mov rdi, rax                                           [39;49m
[34;49m ..  d ) ; printf ( "\n chi : d = %lx\n", [39;49m[33;40md[39;49m[34;49m ) ; _assert ( d #x0123456789abcdef ) ;  printf ( "\n%x\n", CObj.chey0.hey ) ; sprintf ( &chey0.char .. [39;49m[32;49m
0x7fb6e779a85f    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e779a863    488bf0                  mov rsi, rax                                           [39;49m[32;49m
0x7fb6e779a866    48c7c002000000          mov rax, 0x2                                           [39;49m
[34;49m .. chey0.hey ; printf ( "\n%lx\n", d ) ; [39;49m[33;40mprintf[39;49m[34;49m ( "\n chi : d = %lx\n", d ) ; _assert ( d #x0123456789abcdef ) ;  printf ( "\n%x\n", CObj.chey .. [39;49m[32;49m
0x7fb6e779a86d    49b810947c892d560000    mov r8, 0x562d897c9410                                 [39;49m[32;49m
0x7fb6e779a877    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e779a881    49ffd1                  call r9                    	< C.[34;49mprintf[39;49m : 0x0000562d897c9410[32;49m >[39;49m[39;49m
[34;49m .. "\n chi : d = %lx\n", d ) ; _assert ( [39;49m[33;40md[39;49m[34;49m #x0123456789abcdef ) ;  printf ( "\n%x\n", CObj.chey0.hey ) ; sprintf ( &chey0.chars [ 24 ], "%s",  .. [39;49m[32;49m
0x7fb6e779a884    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e779a888    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e779a88c    498906                  mov [r14], rax                                         [39;49m
[34;49m .. n chi : d = %lx\n", d ) ; _assert ( d [39;49m[33;40m#x0123456789abcdef[39;49m[34;49m ) ;  printf ( "\n%x\n", CObj.chey0.hey ) ; sprintf ( &chey0.chars [ 24 ], "%s", "h .. [39;49m[32;49m
0x7fb6e779a88f    48b8efcdab8967452301    mov rax, 0x123456789abcdef                              [39;49m[32;49m
0x7fb6e779a899    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e779a89d    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e779a8a0    49b9dfbc93e7b67f0000    mov r9, 0x7fb6e793bcdf                                 [39;49m[32;49m
0x7fb6e779a8aa    49ffd1                  call r9                    	< System.[34;49m_assert0[39;49m : 0x00007fb6e793bcdf[32;49m >[39;49m[39;49m
[34;49m ..  ( d #x0123456789abcdef ) ;  printf ( [39;49m[33;40m"\n%x\n"[39;49m[34;49m, CObj.chey0.hey ) ; sprintf ( &chey0.chars [ 24 ], "%s", "hoot" ) ; dump ( &chey0, CObj.size .. [39;49m[32;49m
0x7fb6e779a8ad    48b8eb2ee6e5b67f0000    mov rax, 0x7fb6e5e62eeb    	[32;49m< string : '[39;49m[39;49m\n%x\n[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fb6e779a8b7    488bf8                  mov rdi, rax                                           [39;49m
[34;49m .. 89abcdef ) ;  printf ( "\n%x\n", CObj.[39;49m[33;40mchey0[39;49m[34;49m.hey ) ; sprintf ( &chey0.chars [ 24 ], "%s", "hoot" ) ; dump ( &chey0, CObj.size ) ;  }  .. [39;49m[32;49m
0x7fb6e779a8ba    498b47f0                mov rax, [r15-0x10]                                    [39;49m
[34;49m .. ef ) ;  printf ( "\n%x\n", CObj.chey0.[39;49m[33;40mhey[39;49m[34;49m ) ; sprintf ( &chey0.chars [ 24 ], "%s", "hoot" ) ; dump ( &chey0, CObj.size ) ;  }  .. [39;49m[32;49m
0x7fb6e779a8be    4881c028000000          add rax, 0x28                                          [39;49m[32;49m
0x7fb6e779a8c5    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fb6e779a8c8    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e779a8cc    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e779a8cf    488bf0                  mov rsi, rax                                           [39;49m[32;49m
0x7fb6e779a8d2    48c7c002000000          mov rax, 0x2                                           [39;49m
[34;49m .. ; _assert ( d #x0123456789abcdef ) ;  [39;49m[33;40mprintf[39;49m[34;49m ( "\n%x\n", CObj.chey0.hey ) ; sprintf ( &chey0.chars [ 24 ], "%s", "hoot" ) ; dump ( &chey0,  .. [39;49m[32;49m
0x7fb6e779a8d9    49b810947c892d560000    mov r8, 0x562d897c9410                                 [39;49m[32;49m
0x7fb6e779a8e3    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e779a8ed    49ffd1                  call r9                    	< C.[34;49mprintf[39;49m : 0x0000562d897c9410[32;49m >[39;49m[39;49m
[34;49m .. hey0.hey ) ; sprintf ( &chey0.chars [ [39;49m[33;40m24[39;49m[34;49m ], "%s", "hoot" ) ; dump ( &chey0, CObj.size ) ;  }  .. [39;49m[32;49m
0x7fb6e779a8f0    498b47f0                mov rax, [r15-0x10]                                    [39;49m[32;49m
0x7fb6e779a8f4    4881c020000000          add rax, 0x20                                          [39;49m[32;49m
0x7fb6e779a8fb    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e779a8ff    498906                  mov [r14], rax                                         [39;49m
[34;49m .. , CObj.chey0.hey ) ; sprintf ( &chey0.[39;49m[33;40mchars[39;49m[34;49m [ 24 ], "%s", "hoot" ) ; dump ( &chey0, CObj.size ) ;  }  .. [39;49m[32;49m
0x7fb6e779a902    488bf8                  mov rdi, rax                                           [39;49m
[34;49m .. ey ) ; sprintf ( &chey0.chars [ 24 ], [39;49m[33;40m"%s"[39;49m[34;49m, "hoot" ) ; dump ( &chey0, CObj.size ) ;  }  .. [39;49m[32;49m
0x7fb6e779a905    48b8f02ee6e5b67f0000    mov rax, 0x7fb6e5e62ef0    	[32;49m< string : '[39;49m[39;49m%s[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fb6e779a90f    488bf0                  mov rsi, rax                                           [39;49m
[34;49m ..  sprintf ( &chey0.chars [ 24 ], "%s", [39;49m[33;40m"hoot"[39;49m[34;49m ) ; dump ( &chey0, CObj.size ) ;  }  .. [39;49m[32;49m
0x7fb6e779a912    48b8f32ee6e5b67f0000    mov rax, 0x7fb6e5e62ef3    	[32;49m< string : '[39;49m[39;49mhoot[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fb6e779a91c    488bd0                  mov rdx, rax                                           [39;49m[32;49m
0x7fb6e779a91f    48c7c003000000          mov rax, 0x3                                           [39;49m
[34;49m .. printf ( "\n%x\n", CObj.chey0.hey ) ; [39;49m[33;40msprintf[39;49m[34;49m ( &chey0.chars [ 24 ], "%s", "hoot" ) ; dump ( &chey0, CObj.size ) ;  }  .. [39;49m[32;49m
0x7fb6e779a926    49b8a06fb0e7b67f0000    mov r8, 0x7fb6e7b06fa0                                 [39;49m[32;49m
0x7fb6e779a930    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e779a93a    49ffd1                  call r9                    	< C.[34;49msprintf[39;49m : 0x00007fb6e7b06fa0[32;49m >[39;49m[39;49m
[34;49m .. hars [ 24 ], "%s", "hoot" ) ; dump ( &[39;49m[33;40mchey0[39;49m[34;49m, CObj.size ) ;  }  .. [39;49m[32;49m
0x7fb6e779a93d    498b47f0                mov rax, [r15-0x10]                                    [39;49m[32;49m
0x7fb6e779a941    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fb6e779a948    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e779a94c    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  "%s", "hoot" ) ; dump ( &chey0, CObj.[39;49m[33;40msize[39;49m[34;49m ) ;  }  .. [39;49m[32;49m
0x7fb6e779a94f    48b8906c20e6b67f0000    mov rax, 0x7fb6e6206c90    	[32;49m< string : '[39;49m[39;49mh[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fb6e779a959    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fb6e779a95c    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e779a960    498906                  mov [r14], rax                                         [39;49m
[34;49m .. &chey0.chars [ 24 ], "%s", "hoot" ) ; [39;49m[33;40mdump[39;49m[34;49m ( &chey0, CObj.size ) ;  }  .. [39;49m[32;49m
0x7fb6e779a963    49b830a480892d560000    mov r8, 0x562d8980a430                                 [39;49m[32;49m
0x7fb6e779a96d    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e779a977    49ffd1                  call r9                    	< Debug.[34;49mdump[39;49m : 0x0000562d8980a430[32;49m >[39;49m[39;49m
[34;49m .. ot" ) ; dump ( &chey0, CObj.size ) ;  [39;49m[33;40m}[39;49m[34;49m  .. [39;49m[32;49m
0x7fb6e779a97a    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e779a97e    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e779a982    4983ee10                sub r14, 0x10                                          [39;49m[32;49m
0x7fb6e779a986    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'chi' :: codeSize = 1266
Word : 0x00007fb6e620c1b0 :: Compiled at : 0x00007fb6e779a494
 =============================
::> 'wdiss' was called at namespaces/compiler/c_syntax.csl 132.8 <::

 3 c should be 3  : ok

 5 b should be 5  : ok

 8 a should be 8  : ok


Dump at : namespaces/compiler/c_syntax.csl : 133.15 :
Dump : Address = 0x00007fb6e4d15828 : Number = 104 :: (little endian dump)
0x00007fb6e4d15828 :  d2 04 00 00 00 00 00 00  77 65 6c 6c 2c 20 64 6f  ........ well, do 
0x00007fb6e4d15838 :  20 6f 72 20 64 6f 6e 27  74 20 68 6f 6f 74 00 74   or don' t hoot.t 
0x00007fb6e4d15848 :  64 6f 6e 27 74 00 00 00  ef cd ab 89 67 45 23 01  don't... ....gE#. 
0x00007fb6e4d15858 :  ef cd ab 89 67 45 23 01  00 00 00 00 00 00 00 00  ....gE#. ........ 
0x00007fb6e4d15868 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e4d15878 :  00 00 00 00 00 00 00 00  ef cd ab 89 67 45 23 01  ........ ....gE#. 
0x00007fb6e4d15888 :  ef cd ab 89 67 45 23 01  00 00 00 00 00 00 00 00  ....gE#. ........ 
 0x0123456789abcdef
 chi : d = 123456789abcdef

 chi : d = 123456789abcdef

 CObj.chey0.chars = 
		hey = 123456789abcdef

 CObj.chey0.chars2 = 
		hey hey = 123456789abcdef

 chi : d = 123456789abcdef

123456789abcdef

 chi : d = 123456789abcdef

89abcdef

Dump at : namespaces/compiler/c_syntax.csl : 133.15 :
Dump : Address = 0x00007fb6e4d15828 : Number = 0x0000000000000068 :: (little endian dump)
0x00007fb6e4d15828 :  d2 04 00 00 00 00 00 00  0a 09 09 68 65 79 20 3d  ........ ...hey = 
0x00007fb6e4d15838 :  20 31 32 33 34 35 36 37  38 39 61 62 63 64 65 66   1234567 89abcdef 
0x00007fb6e4d15848 :  68 6f 6f 74 00 00 00 00  ef cd ab 89 67 45 23 01  hoot.... ....gE#. 
0x00007fb6e4d15858 :  ef cd ab 89 67 45 23 01  0a 09 09 68 65 79 20 68  ....gE#. ...hey h 
0x00007fb6e4d15868 :  65 79 20 3d 20 31 32 33  34 35 36 37 38 39 61 62  ey = 123 456789ab 
0x00007fb6e4d15878 :  63 64 65 66 00 00 00 00  ef cd ab 89 67 45 23 01  cdef.... ....gE#. 
0x00007fb6e4d15888 :  ef cd ab 89 67 45 23 01  00 00 00 00 00 00 00 00  ....gE#. ........ 

 =============================
C_Syntax.[34;49minterpret2[39;49m <:> csl compiled word
SourceCode for C_Syntax.[34;49minterpret2[39;49m :> 
[34;49mvoid interpret2 ( | atoken aword ) { testc1 () ; nl tab () ; ps ( "interpret2 :> " ) ; nl while ( 1 ) { atoken = token () ; printf ( "\n\tinterpret2 : token = %s", atoken ) ; if ( ! ( strcmp ( atoken, "i2halt" ) ) ) { printf ( "\n\tinterpret2 exiting..." ) ; return } else { aword = tokenToWord ( atoken ) ; doWord ( aword ) ; } } } [39;49m
Source code file location of [34;49minterpret2[39;49m : "namespaces/compiler/c_syntax.csl" : 138.11 :: we are now at : namespaces/compiler/c_syntax.csl : 186.15
Compiled with : optimizeOn, inlineOn, c_syntaxOn, infixOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xe779a98c -- code size = 473 bytes
TypeSignature : 
 -----------------------------
Word :: C_Syntax.[34;49minterpret2[39;49m : definition = 0x00007fb6e779a98c : disassembly at namespaces/compiler/c_syntax.csl : 186.15 :
[34;49m ..                                  void [39;49m[33;40minterpret2[39;49m[34;49m ( | atoken aword )  { testc1 () ; nl tab () ; ps ( "interpret2 :> " ) ; nl while ( 1 ) {   .. [39;49m[32;49m
0x7fb6e779a98c    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fb6e779a990    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e779a994    4981c618000000          add r14, 0x18                                          [39;49m
[34;49m .. void interpret2 ( | atoken aword )  { [39;49m[33;40mtestc1[39;49m[34;49m () ; nl tab () ; ps ( "interpret2 :> " ) ; nl while ( 1 ) {  atoken = token () ;  printf ( "\n .. [39;49m[32;49m
0x7fb6e779a99b    49b90b9779e7b67f0000    mov r9, 0x7fb6e779970b                                 [39;49m[32;49m
0x7fb6e779a9a5    49ffd1                  call r9                    	< C_Syntax.[34;49mtestc1[39;49m : 0x00007fb6e779970b[32;49m >[39;49m[39;49m
[34;49m .. et2 ( | atoken aword )  { testc1 () ; [39;49m[33;40mnl[39;49m[34;49m tab () ; ps ( "interpret2 :> " ) ; nl while ( 1 ) {  atoken = token () ;  printf ( "\n\tinterpret2 .. [39;49m[32;49m
0x7fb6e779a9a8    49b8e08080892d560000    mov r8, 0x562d898080e0                                 [39;49m[32;49m
0x7fb6e779a9b2    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e779a9bc    49ffd1                  call r9                    	< Io.[34;49mnewline[39;49m : 0x0000562d898080e0[32;49m >[39;49m[39;49m
[34;49m ..  ( | atoken aword )  { testc1 () ; nl [39;49m[33;40mtab[39;49m[34;49m () ; ps ( "interpret2 :> " ) ; nl while ( 1 ) {  atoken = token () ;  printf ( "\n\tinterpret2 :  .. [39;49m[32;49m
0x7fb6e779a9bf    49b8108180892d560000    mov r8, 0x562d89808110                                 [39;49m[32;49m
0x7fb6e779a9c9    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e779a9d3    49ffd1                  call r9                    	< Io.[34;49mtab[39;49m : 0x0000562d89808110[32;49m >[39;49m[39;49m
[34;49m .. ord )  { testc1 () ; nl tab () ; ps ( [39;49m[33;40m"[39;49m[34;49minterpret2 :> " ) ; nl while ( 1 ) {  atoken = token () ;  printf ( "\n\tinterpret2 : token = %s", a .. [39;49m[32;49m
0x7fb6e779a9d6    48b81dc741e7b67f0000    mov rax, 0x7fb6e741c71d    	[32;49m< string : '[39;49m[39;49minterpret2 :> [39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fb6e779a9e0    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e779a9e4    498906                  mov [r14], rax                                         [39;49m
[34;49m .. en aword )  { testc1 () ; nl tab () ; [39;49m[33;40mps[39;49m[34;49m ( "interpret2 :> " ) ; nl while ( 1 ) {  atoken = token () ;  printf ( "\n\tinterpret2 : token = % .. [39;49m[32;49m
0x7fb6e779a9e7    49b97da393e7b67f0000    mov r9, 0x7fb6e793a37d                                 [39;49m[32;49m
0x7fb6e779a9f1    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fb6e793a37d[32;49m >[39;49m[39;49m
[34;49m .. nl tab () ; ps ( "interpret2 :> " ) ; [39;49m[33;40mnl[39;49m[34;49m while ( 1 ) {  atoken = token () ;  printf ( "\n\tinterpret2 : token = %s", atoken ) ;  if ( ! ( s .. [39;49m[32;49m
0x7fb6e779a9f4    49b8e08080892d560000    mov r8, 0x562d898080e0                                 [39;49m[32;49m
0x7fb6e779a9fe    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e779aa08    49ffd1                  call r9                    	< Io.[34;49mnewline[39;49m : 0x0000562d898080e0[32;49m >[39;49m[39;49m
[34;49m ..  ; ps ( "interpret2 :> " ) ; nl while [39;49m[33;40m([39;49m[34;49m 1 ) {  atoken = token () ;  printf ( "\n\tinterpret2 : token = %s", atoken ) ;  if ( ! ( strcmp ( a .. [39;49m[32;49m
0x7fb6e779aa0b    48c7c001000000          mov rax, 0x1                                           [39;49m
[34;49m .. ord ( atoken ) ; doWord ( aword ) ; } [39;49m[33;40m}[39;49m[34;49m }  .. [39;49m[32;49m
0x7fb6e779aa12    4885c0                  test rax, rax                                          [39;49m[32;49m
0x7fb6e779aa15    0f8441010000            jz 0x7fb6e779ab5c          	< C_Syntax.[34;49minterpret2[39;49m+464[32;49m >[39;49m[39;49m[32;49m
0x7fb6e779aa1b    49b8f08580892d560000    mov r8, 0x562d898085f0                                 [39;49m[32;49m
0x7fb6e779aa25    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e779aa2f    49ffd1                  call r9                    	< Compiler.[34;49mtoken[39;49m : 0x0000562d898085f0[32;49m >[39;49m[39;49m
[34;49m .. interpret2 :> " ) ; nl while ( 1 ) {  [39;49m[33;40matoken[39;49m[34;49m = token () ;  printf ( "\n\tinterpret2 : token = %s", atoken ) ;  if ( ! ( strcmp ( atoken, "i .. [39;49m[32;49m
0x7fb6e779aa32    498d4708                lea rax, [r15+0x8]                                     [39;49m[32;49m
0x7fb6e779aa36    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fb6e779aa39    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fb6e779aa3c    4983ee08                sub r14, 0x8                                           [39;49m[32;49m
0x7fb6e779aa40    488901                  mov [rcx], rax                                         [39;49m
[34;49m ..  1 ) {  atoken = token () ;  printf ( [39;49m[33;40m"\n\tinterpret2 : token = %s"[39;49m[34;49m, atoken ) ;  if ( ! ( strcmp ( atoken, "i2halt" ) ) )  {  printf ( "\n\ .. [39;49m[32;49m
0x7fb6e779aa43    48b810dce6e5b67f0000    mov rax, 0x7fb6e5e6dc10    	[32;49m< string : '[39;49m[39;49m\n\tinterpret2 : token = %s[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fb6e779aa4d    488bf8                  mov rdi, rax                                           [39;49m
[34;49m .. intf ( "\n\tinterpret2 : token = %s", [39;49m[33;40matoken[39;49m[34;49m ) ;  if ( ! ( strcmp ( atoken, "i2halt" ) ) )  {  printf ( "\n\tinterpret2 exiting..." ) ; ret .. [39;49m[32;49m
0x7fb6e779aa50    498b4708                mov rax, [r15+0x8]                                     [39;49m[32;49m
0x7fb6e779aa54    488bf0                  mov rsi, rax                                           [39;49m[32;49m
0x7fb6e779aa57    48c7c002000000          mov rax, 0x2                                           [39;49m[32;49m
0x7fb6e779aa5e    49b810947c892d560000    mov r8, 0x562d897c9410                                 [39;49m[32;49m
0x7fb6e779aa68    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e779aa72    49ffd1                  call r9                    	< C.[34;49mprintf[39;49m : 0x0000562d897c9410[32;49m >[39;49m[39;49m
[34;49m ..  = %s", atoken ) ;  if ( ! ( strcmp ( [39;49m[33;40matoken[39;49m[34;49m, "i2halt" ) ) )  {  printf ( "\n\tinterpret2 exiting..." ) ; return } else { aword = tokenToWo .. [39;49m[32;49m
0x7fb6e779aa75    498b4708                mov rax, [r15+0x8]                                     [39;49m[32;49m
0x7fb6e779aa79    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e779aa7d    498906                  mov [r14], rax                                         [39;49m
[34;49m .. atoken ) ;  if ( ! ( strcmp ( atoken, [39;49m[33;40m"[39;49m[34;49mi2halt" ) ) )  {  printf ( "\n\tinterpret2 exiting..." ) ; return } else { aword = tokenToWord ( ato .. [39;49m[32;49m
0x7fb6e779aa80    48b8c7c741e7b67f0000    mov rax, 0x7fb6e741c7c7    	[32;49m< string : '[39;49m[39;49mi2halt[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fb6e779aa8a    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e779aa8e    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e779aa91    49b8306e80892d560000    mov r8, 0x562d89806e30                                 [39;49m[32;49m
0x7fb6e779aa9b    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e779aaa5    49ffd1                  call r9                    	< String.[34;49mstrcmp[39;49m : 0x0000562d89806e30[32;49m >[39;49m[39;49m[32;49m
0x7fb6e779aaa8    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fb6e779aaab    4983ee08                sub r14, 0x8                                           [39;49m[32;49m
0x7fb6e779aaaf    4885c0                  test rax, rax                                          [39;49m[32;49m
0x7fb6e779aab2    7409                    jz 0xe779aabd                                          [39;49m[32;49m
0x7fb6e779aab4    48c7c000000000          mov rax, 0x0                                           [39;49m[32;49m
0x7fb6e779aabb    eb07                    jmp 0x7fb6e779aac4         	< C_Syntax.[34;49minterpret2[39;49m+312[32;49m >[39;49m[39;49m[32;49m
0x7fb6e779aabd    48c7c001000000          mov rax, 0x1                                           [39;49m
[34;49m .. oWord ( atoken ) ; doWord ( aword ) ; [39;49m[33;40m}[39;49m[34;49m } }  .. [39;49m[32;49m
0x7fb6e779aac4    4885c0                  test rax, rax                                          [39;49m[32;49m
0x7fb6e779aac7    0f8435000000            jz 0x7fb6e779ab02          	< C_Syntax.[34;49minterpret2[39;49m+374[32;49m >[39;49m[39;49m
[34;49m .. ( atoken, "i2halt" ) ) )  {  printf ( [39;49m[33;40m"\n\tinterpret2 exiting..."[39;49m[34;49m ) ; return } else { aword = tokenToWord ( atoken ) ; doWord ( aword ) ; } .. [39;49m[32;49m
0x7fb6e779aacd    48b831dce6e5b67f0000    mov rax, 0x7fb6e5e6dc31    	[32;49m< string : '[39;49m[39;49m\n\tinterpret2 exiting...[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fb6e779aad7    488bf8                  mov rdi, rax                                           [39;49m
[34;49m ..  ! ( strcmp ( atoken, "i2halt" ) ) )  [39;49m[33;40m{[39;49m[34;49m  printf ( "\n\tinterpret2 exiting..." ) ; return } else { aword = tokenToWord ( atoken ) ; doWord ( .. [39;49m[32;49m
0x7fb6e779aada    48c7c001000000          mov rax, 0x1                                           [39;49m[32;49m
0x7fb6e779aae1    49b810947c892d560000    mov r8, 0x562d897c9410                                 [39;49m[32;49m
0x7fb6e779aaeb    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e779aaf5    49ffd1                  call r9                    	< C.[34;49mprintf[39;49m : 0x0000562d897c9410[32;49m >[39;49m[39;49m
[34;49m .. ( strcmp ( atoken, "i2halt" ) ) )  {  [39;49m[33;40mprintf[39;49m[34;49m ( "\n\tinterpret2 exiting..." ) ; return } else { aword = tokenToWord ( atoken ) ; doWord ( aw .. [39;49m[32;49m
0x7fb6e779aaf8    e95f000000              jmp 0x7fb6e779ab5c         	< C_Syntax.[34;49minterpret2[39;49m+464[32;49m >[39;49m[39;49m
[34;49m .. \n\tinterpret2 exiting..." ) ; return [39;49m[33;40m}[39;49m[34;49m else { aword = tokenToWord ( atoken ) ; doWord ( aword ) ; } } }  .. [39;49m[32;49m
0x7fb6e779aafd    e955000000              jmp 0x7fb6e779ab57         	< C_Syntax.[34;49minterpret2[39;49m+459[32;49m >[39;49m[39;49m
[34;49m .. return } else { aword = tokenToWord ( [39;49m[33;40matoken[39;49m[34;49m ) ; doWord ( aword ) ; } } }  .. [39;49m[32;49m
0x7fb6e779ab02    498b4708                mov rax, [r15+0x8]                                     [39;49m[32;49m
0x7fb6e779ab06    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e779ab0a    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e779ab0d    49b8008f80892d560000    mov r8, 0x562d89808f00                                 [39;49m[32;49m
0x7fb6e779ab17    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e779ab21    49ffd1                  call r9                    	< Interpreter.[34;49mtokenToWord[39;49m : 0x0000562d89808f00[32;49m >[39;49m[39;49m
[34;49m .. pret2 exiting..." ) ; return } else { [39;49m[33;40maword[39;49m[34;49m = tokenToWord ( atoken ) ; doWord ( aword ) ; } } }  .. [39;49m[32;49m
0x7fb6e779ab24    498d4710                lea rax, [r15+0x10]                                    [39;49m[32;49m
0x7fb6e779ab28    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fb6e779ab2b    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fb6e779ab2e    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m .. exiting..." ) ; return } else { aword [39;49m[33;40m=[39;49m[34;49m tokenToWord ( atoken ) ; doWord ( aword ) ; } } }  .. [39;49m[32;49m
0x7fb6e779ab32    488901                  mov [rcx], rax                                         [39;49m
[34;49m .. d = tokenToWord ( atoken ) ; doWord ( [39;49m[33;40maword[39;49m[34;49m ) ; } } }  .. [39;49m[32;49m
0x7fb6e779ab35    498b4710                mov rax, [r15+0x10]                                    [39;49m[32;49m
0x7fb6e779ab39    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e779ab3d    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e779ab40    49b8108b80892d560000    mov r8, 0x562d89808b10                                 [39;49m[32;49m
0x7fb6e779ab4a    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e779ab54    49ffd1                  call r9                    	< Interpreter.[34;49mdoWord[39;49m : 0x0000562d89808b10[32;49m >[39;49m[39;49m[32;49m
0x7fb6e779ab57    e9affeffff              jmp 0x7fb6e779aa0b         	< C_Syntax.[34;49minterpret2[39;49m+127[32;49m >[39;49m[39;49m
[34;49m .. d ( atoken ) ; doWord ( aword ) ; } } [39;49m[33;40m}[39;49m[34;49m  .. [39;49m[32;49m
0x7fb6e779ab5c    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e779ab60    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e779ab64    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'interpret2' :: codeSize = 472
Word : 0x00007fb6e4bfd7e8 :: Compiled at : 0x00007fb6e779a98c
 =============================
::> 'wdiss' was called at namespaces/compiler/c_syntax.csl 186.15 <::

 =============================
C_Syntax.[34;49minterpret3[39;49m <:> csl compiled word
SourceCode for C_Syntax.[34;49minterpret3[39;49m :> 
[34;49mvoid interpret3 ( | atoken aword ) { testc1 () ; ps ( "interpret3 :> " ) ; nl () ; while ( 1 ) { atoken = token () ; printf ( "\n\tinterpret3 : token = %s", atoken ) ; if ( ! ( strcmp ( atoken, "i3halt" ) ) ) { printf ( "\n\tinterpret3 exiting..." ) ; goto: done ; } else { aword = tokenToWord ( atoken ) ; doWord ( aword ) ; } } label: done ; } [39;49m
Source code file location of [34;49minterpret3[39;49m : "namespaces/compiler/c_syntax.csl" : 163.11 :: we are now at : namespaces/compiler/c_syntax.csl : 187.15
Compiled with : optimizeOn, inlineOn, c_syntaxOn, infixOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xe779ab6a -- code size = 427 bytes
TypeSignature : 
 -----------------------------
Word :: C_Syntax.[34;49minterpret3[39;49m : definition = 0x00007fb6e779ab6a : disassembly at namespaces/compiler/c_syntax.csl : 187.15 :
[34;49m ..                                  void [39;49m[33;40minterpret3[39;49m[34;49m ( | atoken aword )  { testc1 () ; ps ( "interpret3 :> " ) ; nl () ; while ( 1 ) {  atoken  .. [39;49m[32;49m
0x7fb6e779ab6a    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fb6e779ab6e    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e779ab72    4981c618000000          add r14, 0x18                                          [39;49m
[34;49m .. void interpret3 ( | atoken aword )  { [39;49m[33;40mtestc1[39;49m[34;49m () ; ps ( "interpret3 :> " ) ; nl () ; while ( 1 ) {  atoken = token () ;  printf ( "\n\tinter .. [39;49m[32;49m
0x7fb6e779ab79    49b90b9779e7b67f0000    mov r9, 0x7fb6e779970b                                 [39;49m[32;49m
0x7fb6e779ab83    49ffd1                  call r9                    	< C_Syntax.[34;49mtestc1[39;49m : 0x00007fb6e779970b[32;49m >[39;49m[39;49m
[34;49m ..  | atoken aword )  { testc1 () ; ps ( [39;49m[33;40m"[39;49m[34;49minterpret3 :> " ) ; nl () ; while ( 1 ) {  atoken = token () ;  printf ( "\n\tinterpret3 : token = % .. [39;49m[32;49m
0x7fb6e779ab86    48b8c4c941e7b67f0000    mov rax, 0x7fb6e741c9c4    	[32;49m< string : '[39;49m[39;49minterpret3 :> [39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fb6e779ab90    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e779ab94    498906                  mov [r14], rax                                         [39;49m
[34;49m .. et3 ( | atoken aword )  { testc1 () ; [39;49m[33;40mps[39;49m[34;49m ( "interpret3 :> " ) ; nl () ; while ( 1 ) {  atoken = token () ;  printf ( "\n\tinterpret3 : toke .. [39;49m[32;49m
0x7fb6e779ab97    49b97da393e7b67f0000    mov r9, 0x7fb6e793a37d                                 [39;49m[32;49m
0x7fb6e779aba1    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fb6e793a37d[32;49m >[39;49m[39;49m
[34;49m .. testc1 () ; ps ( "interpret3 :> " ) ; [39;49m[33;40mnl[39;49m[34;49m () ; while ( 1 ) {  atoken = token () ;  printf ( "\n\tinterpret3 : token = %s", atoken ) ;  if (  .. [39;49m[32;49m
0x7fb6e779aba4    49b8e08080892d560000    mov r8, 0x562d898080e0                                 [39;49m[32;49m
0x7fb6e779abae    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e779abb8    49ffd1                  call r9                    	< Io.[34;49mnewline[39;49m : 0x0000562d898080e0[32;49m >[39;49m[39;49m
[34;49m ..  ( "interpret3 :> " ) ; nl () ; while [39;49m[33;40m([39;49m[34;49m 1 ) {  atoken = token () ;  printf ( "\n\tinterpret3 : token = %s", atoken ) ;  if ( ! ( strcmp ( a .. [39;49m[32;49m
0x7fb6e779abbb    48c7c001000000          mov rax, 0x1                                           [39;49m
[34;49m .. rd ( atoken ) ; doWord ( aword ) ; }  [39;49m[33;40m}[39;49m[34;49m label: done ; }  .. [39;49m[32;49m
0x7fb6e779abc2    4885c0                  test rax, rax                                          [39;49m[32;49m
0x7fb6e779abc5    0f8441010000            jz 0x7fb6e779ad0c          	< C_Syntax.[34;49minterpret3[39;49m+418[32;49m >[39;49m[39;49m
[34;49m .. " ) ; nl () ; while ( 1 ) {  atoken = [39;49m[33;40mtoken[39;49m[34;49m () ;  printf ( "\n\tinterpret3 : token = %s", atoken ) ;  if ( ! ( strcmp ( atoken, "i3halt" )  .. [39;49m[32;49m
0x7fb6e779abcb    49b8f08580892d560000    mov r8, 0x562d898085f0                                 [39;49m[32;49m
0x7fb6e779abd5    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e779abdf    49ffd1                  call r9                    	< Compiler.[34;49mtoken[39;49m : 0x0000562d898085f0[32;49m >[39;49m[39;49m
[34;49m .. pret3 :> " ) ; nl () ; while ( 1 ) {  [39;49m[33;40matoken[39;49m[34;49m = token () ;  printf ( "\n\tinterpret3 : token = %s", atoken ) ;  if ( ! ( strcmp ( atoken, "i .. [39;49m[32;49m
0x7fb6e779abe2    498d4708                lea rax, [r15+0x8]                                     [39;49m[32;49m
0x7fb6e779abe6    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fb6e779abe9    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fb6e779abec    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m .. > " ) ; nl () ; while ( 1 ) {  atoken [39;49m[33;40m=[39;49m[34;49m token () ;  printf ( "\n\tinterpret3 : token = %s", atoken ) ;  if ( ! ( strcmp ( atoken, "i3halt"  .. [39;49m[32;49m
0x7fb6e779abf0    488901                  mov [rcx], rax                                         [39;49m
[34;49m ..  1 ) {  atoken = token () ;  printf ( [39;49m[33;40m"\n\tinterpret3 : token = %s"[39;49m[34;49m, atoken ) ;  if ( ! ( strcmp ( atoken, "i3halt" ) ) )  {  printf ( "\n\ .. [39;49m[32;49m
0x7fb6e779abf3    48b858dce6e5b67f0000    mov rax, 0x7fb6e5e6dc58    	[32;49m< string : '[39;49m[39;49m\n\tinterpret3 : token = %s[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fb6e779abfd    488bf8                  mov rdi, rax                                           [39;49m
[34;49m .. intf ( "\n\tinterpret3 : token = %s", [39;49m[33;40matoken[39;49m[34;49m ) ;  if ( ! ( strcmp ( atoken, "i3halt" ) ) )  {  printf ( "\n\tinterpret3 exiting..." ) ; got .. [39;49m[32;49m
0x7fb6e779ac00    498b4708                mov rax, [r15+0x8]                                     [39;49m[32;49m
0x7fb6e779ac04    488bf0                  mov rsi, rax                                           [39;49m[32;49m
0x7fb6e779ac07    48c7c002000000          mov rax, 0x2                                           [39;49m
[34;49m .. ; while ( 1 ) {  atoken = token () ;  [39;49m[33;40mprintf[39;49m[34;49m ( "\n\tinterpret3 : token = %s", atoken ) ;  if ( ! ( strcmp ( atoken, "i3halt" ) ) )  {  prin .. [39;49m[32;49m
0x7fb6e779ac0e    49b810947c892d560000    mov r8, 0x562d897c9410                                 [39;49m[32;49m
0x7fb6e779ac18    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e779ac22    49ffd1                  call r9                    	< C.[34;49mprintf[39;49m : 0x0000562d897c9410[32;49m >[39;49m[39;49m
[34;49m ..  = %s", atoken ) ;  if ( ! ( strcmp ( [39;49m[33;40matoken[39;49m[34;49m, "i3halt" ) ) )  {  printf ( "\n\tinterpret3 exiting..." ) ; goto: done ;  } else  {  aword =  .. [39;49m[32;49m
0x7fb6e779ac25    498b4708                mov rax, [r15+0x8]                                     [39;49m[32;49m
0x7fb6e779ac29    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e779ac2d    498906                  mov [r14], rax                                         [39;49m
[34;49m .. atoken ) ;  if ( ! ( strcmp ( atoken, [39;49m[33;40m"[39;49m[34;49mi3halt" ) ) )  {  printf ( "\n\tinterpret3 exiting..." ) ; goto: done ;  } else  {  aword = tokenToW .. [39;49m[32;49m
0x7fb6e779ac30    48b86eca41e7b67f0000    mov rax, 0x7fb6e741ca6e    	[32;49m< string : '[39;49m[39;49mi3halt[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fb6e779ac3a    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e779ac3e    498906                  mov [r14], rax                                         [39;49m
[34;49m .. 3 : token = %s", atoken ) ;  if ( ! ( [39;49m[33;40mstrcmp[39;49m[34;49m ( atoken, "i3halt" ) ) )  {  printf ( "\n\tinterpret3 exiting..." ) ; goto: done ;  } else  {  .. [39;49m[32;49m
0x7fb6e779ac41    49b8306e80892d560000    mov r8, 0x562d89806e30                                 [39;49m[32;49m
0x7fb6e779ac4b    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e779ac55    49ffd1                  call r9                    	< String.[34;49mstrcmp[39;49m : 0x0000562d89806e30[32;49m >[39;49m[39;49m[32;49m
0x7fb6e779ac58    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fb6e779ac5b    4983ee08                sub r14, 0x8                                           [39;49m[32;49m
0x7fb6e779ac5f    4885c0                  test rax, rax                                          [39;49m[32;49m
0x7fb6e779ac62    7409                    jz 0xe779ac6d                                          [39;49m[32;49m
0x7fb6e779ac64    48c7c000000000          mov rax, 0x0                                           [39;49m[32;49m
0x7fb6e779ac6b    eb07                    jmp 0x7fb6e779ac74         	< C_Syntax.[34;49minterpret3[39;49m+266[32;49m >[39;49m[39;49m[32;49m
0x7fb6e779ac6d    48c7c001000000          mov rax, 0x1                                           [39;49m
[34;49m .. oWord ( atoken ) ; doWord ( aword ) ; [39;49m[33;40m}[39;49m[34;49m  } label: done ; }  .. [39;49m[32;49m
0x7fb6e779ac74    4885c0                  test rax, rax                                          [39;49m[32;49m
0x7fb6e779ac77    0f8435000000            jz 0x7fb6e779acb2          	< C_Syntax.[34;49minterpret3[39;49m+328[32;49m >[39;49m[39;49m
[34;49m .. ( atoken, "i3halt" ) ) )  {  printf ( [39;49m[33;40m"\n\tinterpret3 exiting..."[39;49m[34;49m ) ; goto: done ;  } else  {  aword = tokenToWord ( atoken ) ; doWord ( aw .. [39;49m[32;49m
0x7fb6e779ac7d    48b879dce6e5b67f0000    mov rax, 0x7fb6e5e6dc79    	[32;49m< string : '[39;49m[39;49m\n\tinterpret3 exiting...[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fb6e779ac87    488bf8                  mov rdi, rax                                           [39;49m
[34;49m ..  ! ( strcmp ( atoken, "i3halt" ) ) )  [39;49m[33;40m{[39;49m[34;49m  printf ( "\n\tinterpret3 exiting..." ) ; goto: done ;  } else  {  aword = tokenToWord ( atoken ) ; .. [39;49m[32;49m
0x7fb6e779ac8a    48c7c001000000          mov rax, 0x1                                           [39;49m
[34;49m .. ( strcmp ( atoken, "i3halt" ) ) )  {  [39;49m[33;40mprintf[39;49m[34;49m ( "\n\tinterpret3 exiting..." ) ; goto: done ;  } else  {  aword = tokenToWord ( atoken ) ; do .. [39;49m[32;49m
0x7fb6e779ac91    49b810947c892d560000    mov r8, 0x562d897c9410                                 [39;49m[32;49m
0x7fb6e779ac9b    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e779aca5    49ffd1                  call r9                    	< C.[34;49mprintf[39;49m : 0x0000562d897c9410[32;49m >[39;49m[39;49m
[34;49m .. ntf ( "\n\tinterpret3 exiting..." ) ; [39;49m[33;40mgoto:[39;49m[34;49m done ;  } else  {  aword = tokenToWord ( atoken ) ; doWord ( aword ) ; }  } label: done ; }  .. [39;49m[32;49m
0x7fb6e779aca8    e95f000000              jmp 0x7fb6e779ad0c         	< C_Syntax.[34;49minterpret3[39;49m+418[32;49m >[39;49m[39;49m
[34;49m .. erpret3 exiting..." ) ; goto: done ;  [39;49m[33;40m}[39;49m[34;49m else  {  aword = tokenToWord ( atoken ) ; doWord ( aword ) ; }  } label: done ; }  .. [39;49m[32;49m
0x7fb6e779acad    e955000000              jmp 0x7fb6e779ad07         	< C_Syntax.[34;49minterpret3[39;49m+413[32;49m >[39;49m[39;49m
[34;49m .. e ;  } else  {  aword = tokenToWord ( [39;49m[33;40matoken[39;49m[34;49m ) ; doWord ( aword ) ; }  } label: done ; }  .. [39;49m[32;49m
0x7fb6e779acb2    498b4708                mov rax, [r15+0x8]                                     [39;49m[32;49m
0x7fb6e779acb6    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e779acba    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  ) ; goto: done ;  } else  {  aword = [39;49m[33;40mtokenToWord[39;49m[34;49m ( atoken ) ; doWord ( aword ) ; }  } label: done ; }  .. [39;49m[32;49m
0x7fb6e779acbd    49b8008f80892d560000    mov r8, 0x562d89808f00                                 [39;49m[32;49m
0x7fb6e779acc7    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e779acd1    49ffd1                  call r9                    	< Interpreter.[34;49mtokenToWord[39;49m : 0x0000562d89808f00[32;49m >[39;49m[39;49m
[34;49m .. ting..." ) ; goto: done ;  } else  {  [39;49m[33;40maword[39;49m[34;49m = tokenToWord ( atoken ) ; doWord ( aword ) ; }  } label: done ; }  .. [39;49m[32;49m
0x7fb6e779acd4    498d4710                lea rax, [r15+0x10]                                    [39;49m[32;49m
0x7fb6e779acd8    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fb6e779acdb    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fb6e779acde    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m .. ." ) ; goto: done ;  } else  {  aword [39;49m[33;40m=[39;49m[34;49m tokenToWord ( atoken ) ; doWord ( aword ) ; }  } label: done ; }  .. [39;49m[32;49m
0x7fb6e779ace2    488901                  mov [rcx], rax                                         [39;49m
[34;49m .. d = tokenToWord ( atoken ) ; doWord ( [39;49m[33;40maword[39;49m[34;49m ) ; }  } label: done ; }  .. [39;49m[32;49m
0x7fb6e779ace5    498b4710                mov rax, [r15+0x10]                                    [39;49m[32;49m
0x7fb6e779ace9    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e779aced    498906                  mov [r14], rax                                         [39;49m
[34;49m ..   {  aword = tokenToWord ( atoken ) ; [39;49m[33;40mdoWord[39;49m[34;49m ( aword ) ; }  } label: done ; }  .. [39;49m[32;49m
0x7fb6e779acf0    49b8108b80892d560000    mov r8, 0x562d89808b10                                 [39;49m[32;49m
0x7fb6e779acfa    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e779ad04    49ffd1                  call r9                    	< Interpreter.[34;49mdoWord[39;49m : 0x0000562d89808b10[32;49m >[39;49m[39;49m[32;49m
0x7fb6e779ad07    e9affeffff              jmp 0x7fb6e779abbb         	< C_Syntax.[34;49minterpret3[39;49m+81[32;49m >[39;49m[39;49m
[34;49m ..  ( atoken ) ; doWord ( aword ) ; }  } [39;49m[33;40mlabel:[39;49m[34;49m done ; }  .. [39;49m[32;49m
0x7fb6e779ad0c    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e779ad10    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e779ad14    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'interpret3' :: codeSize = 426
Word : 0x00007fb6e4c019a8 :: Compiled at : 0x00007fb6e779ab6a
 =============================
::> 'wdiss' was called at namespaces/compiler/c_syntax.csl 187.15 <::
 
tdbg = 1 
tdbg2 = 2 
tdbg3 = 3 
tdbg4 = 4 
tdbg5 = 5 
tdbg6 = 6 
xhii = 3 3 3 
xhi =  7
 xhi1 = 3
 xhi1 = 11
 xhi2a = 11
	 interpret2 :> 

	interpret2 : token = using
Using Namespaces :> C Root libc void C_Syntax Infix PrefixCombinators CObj Dlsym String chey Class User Combinators Interpreter System libc Dlsym int Shell Compiler Int Debug x o1 DO_Experimental DObject a xxy Logic Control Bits Lexer testD DLLNodeAlloc DLLNode Buffer a112 int64 cta ct Ar9 Ar3 Ar2 Ar1 DLLNodeAlloc4 DLListClone DLList byte Integer Pointer OpenVmTil Word Namespace StartupMacros Io Compiling Reserved Compiler Macro PreProcessor List Stack Memory Colors File Asm Locals Forth Experimental 

	interpret2 : token = sp
	interpret2 : token = #
	interpret2 : token = int
	interpret2 : token = int
	interpret2 : token = ;
	interpret2 : token = #
	interpret2 : token = while
	interpret2 : token = #
	interpret2 : token = return
	interpret2 : token = ;
	interpret2 : token = }
	interpret2 : token = c_syntaxOff
	interpret2 : token = pwi
 =============================
C_Syntax.[34;49mfac4[39;49m <:> csl compiled word
SourceCode for C_Syntax.[34;49mfac4[39;49m :> 
[34;49mint fac4 ( n | facc ) { int facc = 1 ; while ( n > 1 ) facc = n -- * facc ; return facc ; } [39;49m
Source code file location of [34;49mfac4[39;49m : "namespaces/compiler/c_syntax.csl" : 197.5 :: we are now at : namespaces/compiler/c_syntax.csl : 208.9
Compiled with : optimizeOn, inlineOn, c_syntaxOn, infixOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xe779ad1a -- code size = 84 bytes
TypeSignature : 
 -----------------------------
Word :: C_Syntax.[34;49mfac4[39;49m : definition = 0x00007fb6e779ad1a : disassembly at namespaces/compiler/c_syntax.csl : 208.9 :
[34;49m ..                                   int [39;49m[33;40mfac4[39;49m[34;49m ( n | facc )  {  int facc = 1 ; while ( n > 1 ) facc = n -- * facc ; return facc ; }  .. [39;49m[32;49m
0x7fb6e779ad1a    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fb6e779ad1e    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e779ad22    4981c618000000          add r14, 0x18                                          [39;49m
[34;49m ..  int fac4 ( n | facc )  {  int facc = [39;49m[33;40m1[39;49m[34;49m ; while ( n > 1 ) facc = n -- * facc ; return facc ; }  .. [39;49m[32;49m
0x7fb6e779ad29    48c7c001000000          mov rax, 0x1                                           [39;49m
[34;49m ..         int fac4 ( n | facc )  {  int [39;49m[33;40mfacc[39;49m[34;49m = 1 ; while ( n > 1 ) facc = n -- * facc ; return facc ; }  .. [39;49m[32;49m
0x7fb6e779ad30    498d4f10                lea rcx, [r15+0x10]                                    [39;49m
[34;49m ..    int fac4 ( n | facc )  {  int facc [39;49m[33;40m=[39;49m[34;49m 1 ; while ( n > 1 ) facc = n -- * facc ; return facc ; }  .. [39;49m[32;49m
0x7fb6e779ad34    488901                  mov [rcx], rax                                         [39;49m
[34;49m .. n | facc )  {  int facc = 1 ; while ( [39;49m[33;40mn[39;49m[34;49m > 1 ) facc = n -- * facc ; return facc ; } [39;49m[32;49m
0x7fb6e779ad37    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. | facc )  {  int facc = 1 ; while ( n [39;49m[33;40m>[39;49m[34;49m 1 ) facc = n -- * facc ; return facc ; } [39;49m[32;49m
0x7fb6e779ad3b    4883f801                cmp rax, 0x1                                           [39;49m[32;49m
0x7fb6e779ad3f    0f8e19000000            jle 0x7fb6e779ad5e         	< C_Syntax.[34;49mfac4[39;49m+68[32;49m >[39;49m[39;49m
[34;49m .. int facc = 1 ; while ( n > 1 ) facc = [39;49m[33;40mn[39;49m[34;49m -- * facc ; return facc ; } [39;49m[32;49m
0x7fb6e779ad45    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. c = 1 ; while ( n > 1 ) facc = n -- * [39;49m[33;40mfacc[39;49m[34;49m ; return facc ; } [39;49m[32;49m
0x7fb6e779ad49    498b4f10                mov rcx, [r15+0x10]                                    [39;49m
[34;49m .. acc = 1 ; while ( n > 1 ) facc = n -- [39;49m[33;40m*[39;49m[34;49m facc ; return facc ; } [39;49m[32;49m
0x7fb6e779ad4d    480fafc1                imul rax, rcx                                          [39;49m
[34;49m ..  )  {  int facc = 1 ; while ( n > 1 ) [39;49m[33;40mfacc[39;49m[34;49m = n -- * facc ; return facc ; } [39;49m[32;49m
0x7fb6e779ad51    498d4f10                lea rcx, [r15+0x10]                                    [39;49m
[34;49m ..   int facc = 1 ; while ( n > 1 ) facc [39;49m[33;40m=[39;49m[34;49m n -- * facc ; return facc ; } [39;49m[32;49m
0x7fb6e779ad55    488901                  mov [rcx], rax                                         [39;49m
[34;49m .. t facc = 1 ; while ( n > 1 ) facc = n [39;49m[33;40m--[39;49m[34;49m * facc ; return facc ; } [39;49m[32;49m
0x7fb6e779ad58    49ff4ff8                dec qword [r15-0x8]                                    [39;49m
[34;49m ..  ; while ( n > 1 ) facc = n -- * facc [39;49m[33;40m;[39;49m[34;49m return facc ; } [39;49m[32;49m
0x7fb6e779ad5c    ebd9                    jmp 0x7fb6e779ad37         	< C_Syntax.[34;49mfac4[39;49m+29[32;49m >[39;49m[39;49m[32;49m
0x7fb6e779ad5e    498b4710                mov rax, [r15+0x10]                                    [39;49m
[34;49m ..  ) facc = n -- * facc ; return facc ; [39;49m[33;40m}[39;49m[34;49m [39;49m[32;49m
0x7fb6e779ad62    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e779ad66    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m
[34;49m .. ( n > 1 ) facc = n -- * facc ; return [39;49m[33;40mfacc[39;49m[34;49m ; } [39;49m[32;49m
0x7fb6e779ad6a    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e779ad6d    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'fac4' :: codeSize = 83
Word : 0x00007fb6e4c062b8 :: Compiled at : 0x00007fb6e779ad1a
 =============================
::> 'wdiss' was called at namespaces/compiler/c_syntax.csl 208.9 <::

	interpret2 : token = //
	interpret2 : token = 7
	interpret2 : token = fac4
	interpret2 : token = dup
	interpret2 : token = p 5040
	interpret2 : token = 5040
	interpret2 : token = _assert
	interpret2 : token = sp
	interpret2 : token = #
	interpret2 : token = //
	interpret2 : token = i2halt
	interpret2 exiting... 
tdbg = 1 
tdbg2 = 2 
tdbg3 = 3 
tdbg4 = 4 
tdbg5 = 5 
tdbg6 = 6 
xhii = 3 3 3 
xhi =  7
 xhi1 = 3
 xhi1 = 11
 xhi2a = 11 interpret3 :> 

	interpret3 : token = User
	interpret3 : token = words
Words :
 - <namespace> ':>' <word list>
 - User :> [32;49m heey1[39;49m[32;49m hey1[39;49m[32;49m hi1[39;49m[32;49m t3[39;49m[32;49m t1[39;49m[32;49m t0[39;49m[32;49m caseSwitchExample[39;49m[32;49m goedel7[39;49m[32;49m goedel6[39;49m[32;49m goedel5[39;49m[32;49m goedel4[39;49m[32;49m goedel2[39;49m[32;49m goedel[39;49m[32;49m localsT[39;49m[32;49m _localsT[39;49m[32;49m sp[39;49m[32;49m demo0[39;49m[32;49m sp[39;49m[32;49m def[39;49m[32;49m istring[39;49m[32;49m s[39;49m[32;49m opOn[39;49m[32;49m vck[39;49m[32;49m opOn1[39;49m[32;49m opOff[39;49m[32;49m pause[39;49m[32;49m _SMN_[39;49m[32;49m mp[39;49m[32;49m p[39;49m[32;49m s[39;49m[32;49m ts[39;49m[32;49m wdis[39;49m[32;49m _var[39;49m[32;49m var[39;49m[32;49m _const[39;49m[32;49m const[39;49m
 - Root :> [32;49m x1[39;49m[32;49m get[39;49m[32;49m set[39;49m[32;49m goedel8[39;49m[32;49m goedel6[39;49m[32;49m hio[39;49m[32;49m hioo[39;49m[32;49m mct[39;49m[32;49m _doDemo[39;49m[32;49m forStarters[39;49m[32;49m doScript2[39;49m[32;49m doScript[39;49m[32;49m doTX64[39;49m[32;49m doX64[39;49m[32;49m todo[39;49m[32;49m typesInclude[39;49m[32;49m mem2[39;49m[32;49m mrm[39;49m[32;49m TODO[39;49m[32;49m bx[39;49m[32;49m x64[39;49m[32;49m tc[39;49m[32;49m tCSL[39;49m[32;49m rtw[39;49m[32;49m ash[39;49m[32;49m license[39;49m[32;49m purgeAll[39;49m[32;49m purge[39;49m[32;49m ri[39;49m[32;49m fr[39;49m[32;49m _bassert[39;49m[32;49m bnOn[39;49m[32;49m bnOff[39;49m[32;49m bigNumOff[39;49m[32;49m Is_DebugOn[39;49m[32;49m dbgOff[39;49m[32;49m dbgOn[39;49m[32;49m dbOn[39;49m[32;49m dbgOnVar[39;49m[32;49m log[39;49m[32;49m cOff[39;49m[32;49m cOn[39;49m[32;49m C_Off[39;49m[32;49m C_On[39;49m[32;49m forth[39;49m[32;49m ndrop[39;49m[32;49m '[39;49m[32;49m tick[39;49m[32;49m findAny[39;49m[32;49m find[39;49m[32;49m include[39;49m
 - C :> [32;49m x7[39;49m[32;49m heey1[39;49m[32;49m heey[39;49m[32;49m chars2[39;49m[32;49m heey2[39;49m[32;49m hey[39;49m[32;49m chars[39;49m[32;49m hi[39;49m[32;49m sp[39;49m[32;49m sp[39;49m[32;49m sp[39;49m[32;49m $[39;49m[32;49m streol[39;49m[32;49m $$[39;49m[32;49m sp[39;49m[32;49m hip[39;49m[32;49m hi[39;49m[32;49m sp[39;49m[32;49m goedel3[39;49m[32;49m bexp44[39;49m[32;49m bexp43[39;49m[32;49m heeeey2[39;49m[32;49m heeey2[39;49m[32;49m heey2[39;49m[32;49m heey[39;49m[32;49m hey2[39;49m[32;49m hey1[39;49m[32;49m hey[39;49m[32;49m a1234[39;49m[32;49m a123[39;49m[32;49m heey[39;49m[32;49m hey[39;49m[32;49m hi[39;49m[32;49m hey[39;49m[32;49m hi[39;49m[32;49m a1234[39;49m[32;49m a123[39;49m[32;49m heey[39;49m[32;49m hey[39;49m[32;49m hi[39;49m[32;49m sp[39;49m[32;49m sp[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m t64bitSub3[39;49m[32;49m t64bitSub3[39;49m[32;49m t64bitSub2[39;49m[32;49m t64bitSub[39;49m[32;49m t64bitAdd2[39;49m[32;49m t64bitAdd[39;49m[32;49m moe3[39;49m[32;49m moe2[39;49m[32;49m moe[39;49m[32;49m moe[39;49m[32;49m moe[39;49m[32;49m moe[39;49m[32;49m hi[39;49m[32;49m hi[39;49m[32;49m hi[39;49m[32;49m hi[39;49m[32;49m t+[39;49m[32;49m t*[39;49m[32;49m t+[39;49m[32;49m t*[39;49m[32;49m sp[39;49m[32;49m sp[39;49m[32;49m factorial[39;49m[32;49m factorial[39;49m[32;49m doTest[39;49m[32;49m tcd[39;49m[32;49m tL2[39;49m[32;49m tL[39;49m[32;49m aTest[39;49m[32;49m aoTest[39;49m[32;49m test1[39;49m[32;49m test0[39;49m[32;49m tdemo[39;49m[32;49m demo[39;49m[32;49m odemo[39;49m[32;49m demo![39;49m[32;49m dtestAll[39;49m[32;49m testIt[39;49m[32;49m testAll[39;49m[32;49m testBasic[39;49m[32;49m _basicT[39;49m[32;49m basicT[39;49m[32;49m sp[39;49m[32;49m include1[39;49m[32;49m allot[39;49m[32;49m logAppend[39;49m[32;49m logWrite[39;49m[32;49m ;;[39;49m[32;49m wordStructPrint[39;49m[32;49m wordNameStructPrint[39;49m[32;49m ,[39;49m[32;49m rax_return[39;49m[32;49m void_return[39;49m[32;49m c_prefix[39;49m[32;49m c_rtl[39;49m[32;49m cfactorial3_O3[39;49m[32;49m cfactorial2_O3[39;49m[32;49m cfactorial_O3[39;49m[32;49m cfib2_O3[39;49m[32;49m cfib_O3[39;49m[32;49m ctct[39;49m[32;49m cfactorial3[39;49m[32;49m cfactorial2[39;49m[32;49m cfactorial[39;49m[32;49m cfib[39;49m[32;49m --[39;49m[32;49m ++[39;49m[32;49m ?<[39;49m[32;49m >:<[39;49m[32;49m >?[39;49m[32;49m switch[39;49m[32;49m }fi[39;49m[32;49m }else{[39;49m[32;49m if{[39;49m[32;49m (|[39;49m[32;49m ([39;49m[32;49m sprintf[39;49m[32;49m printf[39;49m[32;49m _Printf[39;49m
 - int :> [32;49m this[39;49m[32;49m size[39;49m
 - libc :> 
 - void :> [32;49m this[39;49m[32;49m size[39;49m
 - CObj :> [32;49m this[39;49m[32;49m size[39;49m
 - Dlsym :> 
 - String :> [32;49m hi[39;49m[32;49m hi[39;49m[32;49m stricmp[39;49m[32;49m strcpy[39;49m[32;49m strcat[39;49m[32;49m strcmp[39;49m[32;49m Strlen[39;49m
 - chey :> 
 - Class :> [32;49m hey[39;49m[32;49m hi[39;49m[32;49m tbb[39;49m[32;49m sp[39;49m[32;49m .[39;49m[32;49m [[39;49m[32;49m ][39;49m[32;49m clone[39;49m[32;49m new[39;49m[32;49m struct[39;49m[32;49m class[39;49m[32;49m :{[39;49m[32;49m +:{[39;49m[32;49m };[39;49m
 - Combinators :> [32;49m sp[39;49m[32;49m sp[39;49m[32;49m lT[39;49m[32;49m ppT[39;49m[32;49m cST[39;49m[32;49m oT[39;49m[32;49m cntT[39;49m[32;49m cT[39;49m[32;49m aT[39;49m[32;49m locT[39;49m[32;49m bT[39;49m[32;49m stT[39;49m[32;49m oldL[39;49m[32;49m lispTest[39;49m[32;49m sysT[39;49m[32;49m sT[39;49m[32;49m fT[39;49m[32;49m mT[39;49m[32;49m dT2[39;49m[32;49m dT[39;49m[32;49m loT[39;49m[32;49m dT3[39;49m[32;49m dT2[39;49m[32;49m dT0[39;49m[32;49m test[39;49m[32;49m preprocessorTest[39;49m[32;49m syntaxTest[39;49m[32;49m c_SyntaxTest[39;49m[32;49m objectTest[39;49m[32;49m controlTest[39;49m[32;49m stackTest[39;49m[32;49m bigNumTest[39;49m[32;49m localsTest[39;49m[32;49m arrayTest[39;49m[32;49m classTest[39;49m[32;49m itest[39;49m[32;49m interpT[39;49m[32;49m iinc[39;49m[32;49m _TestDone_[39;49m[32;49m sp[39;49m[32;49m startupMacros[39;49m[32;49m ifElse[39;49m[32;49m ifte[39;49m[32;49m qEval[39;49m[32;49m ix[39;49m[32;49m ?[39;49m[32;49m for[39;49m[32;49m loop[39;49m[32;49m _[39;49m[32;49m _run[39;49m[32;49m _call[39;49m[32;49m run[39;49m[32;49m call[39;49m[32;49m doWhileDo[39;49m[32;49m doWhile[39;49m[32;49m while[39;49m[32;49m if3[39;49m[32;49m if2[39;49m[32;49m if[39;49m[32;49m if1[39;49m[32;49m tf3[39;49m[32;49m tf2[39;49m
 - Interpreter :> [32;49m xhi1[39;49m[32;49m xhi01[39;49m[32;49m xhi2a[39;49m[32;49m xhi2[39;49m[32;49m xhe12[39;49m[32;49m xhe1[39;49m[32;49m xhe0[39;49m[32;49m thi42[39;49m[32;49m thi3[39;49m[32;49m thi2[39;49m[32;49m defined[39;49m[32;49m _defined[39;49m[32;49m :[39;49m[32;49m word[39;49m[32;49m ;[39;49m[32;49m semi[39;49m[32;49m _semi[39;49m[32;49m xt@[39;49m[32;49m }[39;49m[32;49m end[39;49m[32;49m {[39;49m[32;49m #[39;49m[32;49m _lx_[39;49m[32;49m l:[39;49m[32;49m interpretFile[39;49m[32;49m interpret[39;49m[32;49m interpreterDone[39;49m[32;49m interpreterIsDone[39;49m[32;49m interpreterStop[39;49m[32;49m interpreterInit[39;49m[32;49m interpreterRun[39;49m[32;49m interpretNextToken[39;49m[32;49m interpretString[39;49m[32;49m tokenToWord[39;49m[32;49m doWord[39;49m[32;49m eval[39;49m[32;49m /*[39;49m[32;49m */[39;49m[32;49m #![39;49m[32;49m //[39;49m[32;49m compileModeOff[39;49m[32;49m asmModeOff[39;49m[32;49m asmModeOn[39;49m[32;49m compileModeOn[39;49m[32;49m finishDebugInfo[39;49m[32;49m compileMode[39;49m
 - System :> [32;49m assertStkChk[39;49m[32;49m _assertStkChk[39;49m[32;49m _assert[39;49m[32;49m assert1[39;49m[32;49m assert1[39;49m[32;49m assert[39;49m[32;49m assert0[39;49m[32;49m assert1s[39;49m[32;49m _assert[39;49m[32;49m _assert0[39;49m[32;49m ctloc[39;49m[32;49m _assert1[39;49m[32;49m _assert1dbg[39;49m[32;49m debugTest[39;49m[32;49m debugTest1[39;49m[32;49m debugTest2[39;49m[32;49m debugTest3[39;49m[32;49m ddps[39;49m[32;49m adps[39;49m[32;49m ahOff[39;49m[32;49m ahOn[39;49m[32;49m sOn[39;49m[32;49m sOff[39;49m[32;49m vb0[39;49m[32;49m vb1[39;49m[32;49m vb2[39;49m[32;49m vb3[39;49m[32;49m vb4[39;49m[32;49m vb[39;49m[32;49m ahalt[39;49m[32;49m ti[39;49m[32;49m stk[39;49m[32;49m aw[39;49m[32;49m sys[39;49m[32;49m fload[39;49m[32;49m pwi[39;49m[32;49m pwdiss[39;49m[32;49m wi[39;49m[32;49m wdissl[39;49m[32;49m wdiss[39;49m[32;49m _wdiss[39;49m[32;49m _source[39;49m[32;49m pel[39;49m[32;49m pdl[39;49m[32;49m location[39;49m[32;49m F[39;49m[32;49m T[39;49m[32;49m false[39;49m[32;49m true[39;49m[32;49m Default[39;49m[32;49m White[39;49m[32;49m Cyan[39;49m[32;49m Magenta[39;49m[32;49m Blue[39;49m[32;49m Yellow[39;49m[32;49m Green[39;49m[32;49m Red[39;49m[32;49m Black[39;49m[32;49m wrun[39;49m[32;49m saveCpu2State[39;49m[32;49m restoreCpu2State[39;49m[32;49m saveCpuState[39;49m[32;49m restoreCpuState[39;49m[32;49m call_ToAddressThruR8_TestAlignRSP[39;49m[32;49m lcOff[39;49m[32;49m lcOn[39;49m[32;49m registers[39;49m[32;49m _pause[39;49m[32;49m pause[39;49m[32;49m location[39;49m[32;49m showTypeWordStack[39;49m[32;49m cpuStateShow[39;49m[32;49m console[39;49m[32;49m ok[39;49m[32;49m warmInit[39;49m[32;49m fr[39;49m[32;49m fullRestart[39;49m[32;49m ri[39;49m[32;49m restartInit[39;49m[32;49m restart[39;49m[32;49m exit[39;49m[32;49m systemBreak[39;49m[32;49m quit[39;49m[32;49m abort[39;49m[32;49m bye[39;49m[32;49m resetAll[39;49m[32;49m freeSessionMem[39;49m[32;49m allocateMem[39;49m[32;49m returnFromFile[39;49m[32;49m system3[39;49m[32;49m system2[39;49m[32;49m system1[39;49m[32;49m system0[39;49m[32;49m shell[39;49m[32;49m time[39;49m[32;49m timerInit[39;49m[32;49m timeInit[39;49m[32;49m echo[39;49m[32;49m jcc8_Off[39;49m[32;49m jcc8_On[39;49m[32;49m echoOff[39;49m[32;49m echoOn[39;49m[32;49m echoOff[39;49m[32;49m variables[39;49m[32;49m stateAll[39;49m[32;49m state[39;49m[32;49m binary[39;49m[32;49m hex[39;49m[32;49m decimal[39;49m[32;49m version[39;49m[32;49m charNumber[39;49m[32;49m lineNumber[39;49m[32;49m throw[39;49m[32;49m filename[39;49m[32;49m stackDepth[39;49m[32;49m stackInit[39;49m[32;49m reset[39;49m[32;49m _include[39;49m
 - libc :> [32;49m testpick[39;49m[32;49m x[39;49m[32;49m xc[39;49m[32;49m tprintf2[39;49m[32;49m tprintf1[39;49m[32;49m tprintf[39;49m[32;49m memset[39;49m[32;49m strcat[39;49m[32;49m sprintf[39;49m[32;49m strcmp[39;49m[32;49m printf[39;49m
 - Dlsym :> 
 - Shell :> [32;49m hio[39;49m[32;49m test[39;49m[32;49m sh[39;49m[32;49m $[39;49m[32;49m _sh[39;49m[32;49m endif[39;49m[32;49m else[39;49m[32;49m if[39;49m
 - Compiler :> [32;49m vckf1[39;49m[32;49m vckf[39;49m[32;49m >;[39;49m[32;49m mod[39;49m[32;49m nstrcat:[39;49m[32;49m Zenfone2[39;49m[32;49m x[39;49m[32;49m doLisp[39;49m[32;49m COMBINATOR_TOOKIT[39;49m[32;49m doLisp[39;49m[32;49m doTest[39;49m[32;49m doDemo[39;49m[32;49m doInit1[39;49m[32;49m streamLine[39;49m[32;49m classTestRead[39;49m[32;49m DebugFlag[39;49m[32;49m var:[39;49m[32;49m swap[39;49m[32;49m compileCall[39;49m[32;49m compileWord[39;49m[32;49m immediate[39;49m[32;49m '[39;49m[32;49m )[39;49m[32;49m sourceCodeOn[39;49m[32;49m sourceCodeInit[39;49m[32;49m getStringToEndOfLine[39;49m[32;49m ftoken[39;49m[32;49m tokenQID[39;49m[32;49m token[39;49m[32;49m _tick[39;49m[32;49m quote[39;49m[32;49m store[39;49m[32;49m set[39;49m[32;49m poke[39;49m[32;49m =[39;49m[32;49m ![39;49m[32;49m @=[39;49m[32;49m get[39;49m[32;49m peek[39;49m[32;49m load[39;49m[32;49m @[39;49m[32;49m debugWord[39;49m[32;49m prefixOff[39;49m[32;49m prefixOn[39;49m[32;49m infixOff[39;49m[32;49m infixOn[39;49m[32;49m nprefix[39;49m[32;49m prefix[39;49m[32;49m _prefix[39;49m[32;49m typeSignature[39;49m[32;49m inline[39;49m[32;49m ?immediate[39;49m[32;49m _immediate[39;49m[32;49m code[39;49m[32;49m Here[39;49m[32;49m begin[39;49m[32;49m _end[39;49m[32;49m _literal[39;49m[32;49m literal[39;49m[32;49m constant[39;49m[32;49m _constant[39;49m[32;49m variable[39;49m[32;49m _variable[39;49m[32;49m macro[39;49m[32;49m noop[39;49m[32;49m break[39;49m[32;49m return[39;49m[32;49m continue[39;49m[32;49m goto[39;49m[32;49m postfixOn[39;49m[32;49m c_syntaxOff[39;49m[32;49m c_syntaxOn[39;49m
 - Int :> [32;49m mt5[39;49m[32;49m mt5v[39;49m[32;49m mt4[39;49m[32;49m mt3[39;49m[32;49m mt2[39;49m[32;49m mt1a[39;49m[32;49m mta[39;49m[32;49m mt1[39;49m[32;49m mt[39;49m[32;49m _ClassTest_[39;49m[32;49m sp[39;49m[32;49m ppxe[39;49m[32;49m ppx[39;49m[32;49m apause[39;49m[32;49m _logAppend[39;49m[32;49m _logWrite[39;49m[32;49m nl[39;49m[32;49m print[39;49m[32;49m hp[39;49m[32;49m _hp[39;49m[32;49m p[39;49m[32;49m _p[39;49m[32;49m pn[39;49m[32;49m prints[39;49m[32;49m ps[39;49m[32;49m _ps[39;49m[32;49m hexIntPrint[39;49m[32;49m intPrint[39;49m[32;49m /=[39;49m[32;49m *=[39;49m[32;49m %[39;49m[32;49m modulo[39;49m[32;49m /[39;49m[32;49m ^[39;49m[32;49m pow_03[39;49m[32;49m pow[39;49m[32;49m **[39;49m[32;49m *[39;49m[32;49m -=[39;49m[32;49m +=[39;49m[32;49m -[39;49m[32;49m +[39;49m
 - Debug :> [32;49m rdi[39;49m[32;49m s[39;49m[32;49m _s[39;49m[32;49m dbiOff[39;49m[32;49m DbiOn[39;49m[32;49m dbiOn[39;49m[32;49m DebugFlag[39;49m[32;49m v1[39;49m[32;49m v4[39;49m[32;49m tcOnv[39;49m[32;49m scOff[39;49m[32;49m scOn[39;49m[32;49m dscOff[39;49m[32;49m dscOn[39;49m[32;49m nt[39;49m[32;49m tcOff[39;49m[32;49m tcOn[39;49m[32;49m ;t[39;49m[32;49m t:[39;49m[32;49m regs[39;49m[32;49m locals[39;49m[32;49m dbrk[39;49m[32;49m OptimizeOn[39;49m[32;49m d2:[39;49m[32;49m d1:[39;49m[32;49m d:[39;49m[32;49m _startDirectory_[39;49m[32;49m <dbg>[39;49m[32;49m saveCpuState[39;49m[32;49m restoreCpuState[39;49m[32;49m stop[39;49m[32;49m localsShow[39;49m[32;49m info[39;49m[32;49m _info[39;49m[32;49m xtDbg[39;49m[32;49m ;d[39;49m[32;49m _dbgOff[39;49m[32;49m _dbgOn[39;49m[32;49m scOn[39;49m[32;49m scOff[39;49m[32;49m dbgTypecheckOff[39;49m[32;49m dbgTypecheckOn[39;49m[32;49m dbgSourceCodeOff[39;49m[32;49m dbgSourceCodeOn[39;49m[32;49m ndstack[39;49m[32;49m dstack[39;49m[32;49m nrstack[39;49m[32;49m rstack[39;49m[32;49m stackDepthPrint[39;49m[32;49m stack[39;49m[32;49m setSourceCodeWord[39;49m[32;49m sourceDontAdd[39;49m[32;49m source[39;49m[32;49m sourceAdd[39;49m[32;49m wordDisassemble[39;49m[32;49m bdis[39;49m[32;49m dis[39;49m[32;49m dump[39;49m
 - x :> [32;49m ott3[39;49m[32;49m zzx[39;49m[32;49m ott2[39;49m[32;49m zzz[39;49m
 - o1 :> 
 - DO_Experimental :> [32;49m o12[39;49m
 - DObject :> [32;49m new[39;49m[32;49m clone[39;49m[32;49m dobject[39;49m
 - a :> 
 - xxy :> 
 - Logic :> [32;49m up[39;49m[32;49m nt[39;49m[32;49m >=[39;49m[32;49m <=[39;49m[32;49m !=[39;49m[32;49m equal[39;49m[32;49m ==[39;49m[32;49m >[39;49m[32;49m <[39;49m[32;49m &&[39;49m[32;49m and[39;49m[32;49m not[39;49m[32;49m ![39;49m[32;49m ^^[39;49m[32;49m xor[39;49m[32;49m or[39;49m[32;49m ||[39;49m
 - Control :> [32;49m maybePause[39;49m[32;49m hic2[39;49m[32;49m ct2[39;49m[32;49m ct1[39;49m[32;49m ct0[39;49m[32;49m ct00[39;49m[32;49m leaving[39;49m[32;49m abrk0[39;49m[32;49m abrkcon[39;49m[32;49m x[39;49m[32;49m sp[39;49m
 - Bits :> [32;49m tcmp[39;49m[32;49m tNotAnd[39;49m[32;49m tAnd[39;49m[32;49m tnot3[39;49m[32;49m tnot2[39;49m[32;49m tnot[39;49m[32;49m lt10[39;49m[32;49m lt9[39;49m[32;49m lt8[39;49m[32;49m lt7b[39;49m[32;49m lt7[39;49m[32;49m lnt5[39;49m[32;49m lnt5[39;49m[32;49m lnt5[39;49m[32;49m lnt5[39;49m[32;49m lnt5[39;49m[32;49m lnt2[39;49m[32;49m lnt[39;49m[32;49m lnt2[39;49m[32;49m lnt[39;49m[32;49m lnt4[39;49m[32;49m lnt3[39;49m[32;49m lnt2[39;49m[32;49m lnt[39;49m[32;49m lt2[39;49m[32;49m lt[39;49m[32;49m sp[39;49m[32;49m |=[39;49m[32;49m &=[39;49m[32;49m >>=[39;49m[32;49m <<=[39;49m[32;49m neg[39;49m[32;49m ~[39;49m[32;49m ^[39;49m[32;49m |[39;49m[32;49m &[39;49m[32;49m >>[39;49m[32;49m <<[39;49m
 - Lexer :> [32;49m sp[39;49m[32;49m heey[39;49m[32;49m hey[39;49m[32;49m hi[39;49m[32;49m ofile[39;49m[32;49m orpfile[39;49m[32;49m %[39;49m[32;49m "[39;49m
 - testD :> [32;49m testC[39;49m
 - DLLNodeAlloc :> [32;49m testB2[39;49m[32;49m testA2[39;49m[32;49m testB1[39;49m[32;49m testA1[39;49m[32;49m tna2x[39;49m[32;49m testnx[39;49m[32;49m tnax1[39;49m[32;49m testn5[39;49m[32;49m tna3[39;49m[32;49m testn4[39;49m[32;49m tnarr2a[39;49m[32;49m tnarr2[39;49m[32;49m tna[39;49m[32;49m testnarr2[39;49m[32;49m testna[39;49m[32;49m sp[39;49m[32;49m nodes[39;49m[32;49m this[39;49m[32;49m size[39;49m
 - DLLNode :> [32;49m sp[39;49m[32;49m testNode[39;49m[32;49m BeforeReference[39;49m[32;49m AfterReference[39;49m[32;49m BeforeReference[39;49m[32;49m someJunkForTesting[39;49m[32;49m AfterReference[39;49m[32;49m BeforeReference[39;49m[32;49m AfterReference[39;49m[32;49m this[39;49m[32;49m size[39;49m
 - Buffer :> [32;49m buf[39;49m[32;49m this[39;49m[32;49m size[39;49m
 - a112 :> [32;49m c1138[39;49m
 - int64 :> [32;49m this[39;49m[32;49m size[39;49m
 - cta :> [32;49m caba[39;49m[32;49m cadump[39;49m[32;49m tcta[39;49m[32;49m aba[39;49m[32;49m ar[39;49m[32;49m this[39;49m[32;49m size[39;49m
 - ct :> [32;49m ac[39;49m[32;49m tct[39;49m[32;49m ab[39;49m[32;49m ar[39;49m[32;49m this[39;49m[32;49m size[39;49m
 - Ar9 :> [32;49m arr9[39;49m[32;49m a9[39;49m[32;49m adump[39;49m[32;49m _adump[39;49m[32;49m ar[39;49m[32;49m this[39;49m[32;49m size[39;49m
 - Ar3 :> [32;49m a7[39;49m[32;49m a8[39;49m[32;49m a6x[39;49m[32;49m a6[39;49m[32;49m ar[39;49m[32;49m this[39;49m[32;49m size[39;49m
 - Ar2 :> [32;49m a5[39;49m[32;49m a4[39;49m[32;49m ar[39;49m[32;49m this[39;49m[32;49m size[39;49m
 - Ar1 :> [32;49m a3[39;49m[32;49m arr2[39;49m[32;49m arr1[39;49m[32;49m ar[39;49m[32;49m this[39;49m[32;49m size[39;49m
 - DLLNodeAlloc4 :> [32;49m testna5[39;49m[32;49m testna5[39;49m[32;49m testna4[39;49m[32;49m nodes[39;49m[32;49m this[39;49m[32;49m size[39;49m
 - DLListClone :> [32;49m testClone[39;49m[32;49m init[39;49m[32;49m Accum[39;49m[32;49m Four[39;49m[32;49m Three[39;49m[32;49m Twelve[39;49m[32;49m Sum[39;49m[32;49m Prototype[39;49m[32;49m Category[39;49m[32;49m this[39;49m[32;49m size[39;49m
 - DLList :> [32;49m hey[39;49m[32;49m hi[39;49m[32;49m hey[39;49m[32;49m hi[39;49m[32;49m testList[39;49m[32;49m init[39;49m[32;49m TailNode[39;49m[32;49m HeadNode[39;49m[32;49m this[39;49m[32;49m size[39;49m
 - byte :> [32;49m this[39;49m[32;49m size[39;49m
 - Integer :> 
 - Pointer :> [32;49m this[39;49m[32;49m size[39;49m
 - OpenVmTil :> [32;49m lispOn[39;49m[32;49m lispOff[39;49m[32;49m addToHistoryOff[39;49m[32;49m addToHistoryOn[39;49m[32;49m historyReset[39;49m[32;49m addToHistory[39;49m[32;49m historySize[39;49m[32;49m dataStackSize[39;49m[32;49m dictionarySize[39;49m[32;49m sessionObjectsSize[39;49m[32;49m compilerTempObjectsSize[39;49m[32;49m objectsSize[39;49m[32;49m codeSize[39;49m[32;49m dbi[39;49m[32;49m verbosity[39;49m[32;49m debugLevel[39;49m[32;49m debugOn[39;49m[32;49m debugOff[39;49m[32;49m inlineOn[39;49m[32;49m inlineOff[39;49m[32;49m stringMacrosOff[39;49m[32;49m stringMacrosOn[39;49m[32;49m optimizeOff[39;49m[32;49m optimizeOn[39;49m[32;49m t{[39;49m[32;49m }t[39;49m[32;49m typecheckOff[39;49m[32;49m typecheckOn[39;49m[32;49m inlining[39;49m[32;49m optimize[39;49m[32;49m autoVarOff[39;49m[32;49m autoVarOn[39;49m[32;49m autoVar[39;49m
 - Word :> [32;49m code[39;49m[32;49m word_SC_WordList_Show[39;49m[32;49m wordNsListPrint[39;49m[32;49m purgeWordIfContainsName[39;49m[32;49m purgeWordName[39;49m[32;49m addrToWord[39;49m[32;49m codeSize[39;49m[32;49m codeStart[39;49m[32;49m wordAdd[39;49m[32;49m wordFinish[39;49m[32;49m xt=[39;49m[32;49m xt[39;49m[32;49m value[39;49m[32;49m definition[39;49m[32;49m run[39;49m[32;49m wordRun[39;49m[32;49m wordEval[39;49m[32;49m wNamespace[39;49m[32;49m wordNew[39;49m[32;49m name[39;49m
 - Namespace :> [32;49m usingLast:[39;49m[32;49m notUsing:[39;49m[32;49m using:[39;49m[32;49m _findAny[39;49m[32;49m _findUsing[39;49m[32;49m namespace[39;49m[32;49m namespaceWords[39;49m[32;49m _namespaceWords[39;49m[32;49m allWords[39;49m[32;49m words[39;49m[32;49m namespaceTreeWithWords[39;49m[32;49m namespaceTree[39;49m[32;49m namespaces[39;49m[32;49m setStateUsing[39;49m[32;49m setStateNotUsing[39;49m[32;49m notUsing[39;49m[32;49m usingLast[39;49m[32;49m usingFirst[39;49m[32;49m usingWAddress[39;49m[32;49m using[39;49m[32;49m in[39;49m
 - StartupMacros :> [32;49m namespaces[39;49m[32;49m Delimiters[39;49m
 - Io :> [32;49m logOff[39;49m[32;49m logOn[39;49m[32;49m logWrite[39;49m[32;49m logAppend[39;49m[32;49m space[39;49m[32;49m tab[39;49m[32;49m cr[39;49m[32;49m newline[39;49m[32;49m kbhit[39;49m[32;49m key[39;49m[32;49m emit[39;49m[32;49m printString[39;49m
 - Compiling :> [32;49m pokeRegAtAddress[39;49m[32;49m pokeRegWithValue[39;49m[32;49m peekReg[39;49m[32;49m _compileWord[39;49m[32;49m _compileCall[39;49m[32;49m compileInt64[39;49m[32;49m compileInt32[39;49m[32;49m compileInt16[39;49m[32;49m compileByte[39;49m
 - Reserved :> [32;49m {|[39;49m[32;49m |}[39;49m[32;49m swap[39;49m[32;49m keyword[39;49m[32;49m dlsym:[39;49m[32;49m syntactic[39;49m[32;49m immediate[39;49m[32;49m end[39;49m[32;49m {[39;49m[32;49m }[39;49m[32;49m ;[39;49m[32;49m semi[39;49m[32;49m :[39;49m[32;49m word[39;49m
 - Compiler :> 
 - Macro :> [32;49m tm:[39;49m[32;49m findAlias[39;49m[32;49m alias[39;49m[32;49m sm:[39;49m
 - PreProcessor :> [32;49m define[39;49m[32;49m elif[39;49m[32;49m if[39;49m[32;49m else[39;49m[32;49m endif[39;49m[32;49m ![39;49m
 - List :> [32;49m lcRestoreStack[39;49m[32;49m dupList[39;49m[32;49m printList[39;49m[32;49m eval[39;49m[32;49m _([39;49m[32;49m lisp[39;49m
 - Stack :> [32;49m stackCheck[39;49m[32;49m dsp[39;49m[32;49m _swap[39;49m[32;49m pick[39;49m[32;49m _ndrop[39;49m[32;49m dropN[39;49m[32;49m drop[39;49m[32;49m ndup[39;49m[32;49m tos[39;49m[32;49m dup[39;49m[32;49m _dup[39;49m
 - Memory :> [32;49m recycleDebugInfo[39;49m[32;49m mem[39;49m[32;49m freeAllTempMem[39;49m[32;49m freeSessionMem[39;49m[32;49m freeLispTempMem[39;49m[32;49m freeCompilerTempMem[39;49m[32;49m freeTemporayMem[39;49m
 - Colors :> [32;49m alertColors[39;49m[32;49m userColors[39;49m[32;49m defaultColors[39;49m[32;49m noticeColors[39;49m[32;49m debugColors[39;49m[32;49m setNoticeColors[39;49m[32;49m setDebugColors[39;49m[32;49m setAlertColors[39;49m[32;49m setDefaultColors[39;49m[32;49m setUserColors[39;49m[32;49m setNoticeRGB[39;49m[32;49m setUserRGB[39;49m[32;49m setDebugRGB[39;49m[32;49m setAlertRGB[39;49m[32;49m setDefaultRGB[39;49m
 - File :> [32;49m freadToString[39;49m[32;49m fexists[39;49m[32;49m fsize[39;49m[32;49m ftell[39;49m[32;49m fseek[39;49m[32;49m fread[39;49m[32;49m fwrite[39;49m[32;49m fclose[39;49m[32;49m fopen[39;49m
 - Asm :> [32;49m jmp[39;49m[32;49m goto:[39;49m[32;49m label:[39;49m[32;49m goto[39;49m[32;49m label[39;49m[32;49m jcc[39;49m[32;49m Jcc[39;49m[32;49m jmpHere[39;49m[32;49m Jmp[39;49m[32;49m if_[39;49m[32;49m _else_[39;49m[32;49m _fi[39;49m
 - Locals :> [32;49m (|[39;49m[32;49m ([39;49m
 - Forth :> [32;49m n,[39;49m[32;49m 8,[39;49m[32;49m 4,[39;49m[32;49m ,[39;49m[32;49m 2,[39;49m[32;49m 1,[39;49m[32;49m '[39;49m
 - Experimental :> [32;49m <do[39;49m[32;49m does>[39;49m[32;49m do>[39;49m[32;49m locationPrint[39;49m[32;49m locationPush[39;49m
1090 words on the 'using' Namespaces List ::
	interpret3 : token = sp
	interpret3 : token = :
	interpret3 : token = 1
	interpret3 : token = 2
	interpret3 : token = +
	interpret3 : token = p
	interpret3 : token = ;
	interpret3 : token = :
	interpret3 : token = hi1
	interpret3 : token = hi1
	interpret3 : token = ;
	interpret3 : token = :
	interpret3 : token = hey1
	interpret3 : token = hey1
	interpret3 : token = hey1
	interpret3 : token = ;
	interpret3 : token = nl

	interpret3 : token = heey1 3 3 3 3 3 3
	interpret3 : token = #
	interpret3 : token = c_syntaxOn
	interpret3 : token = int
	interpret3 : token = for
	interpret3 : token = return
	interpret3 : token = ;
	interpret3 : token = }
	interpret3 : token = pwi
 =============================
C_Syntax.[34;49mfaccs2[39;49m <:> csl compiled word
SourceCode for C_Syntax.[34;49mfaccs2[39;49m :> 
[34;49mint faccs2 ( n | rec ) { for ( rec = 1 ; n > 1 ; n-- ) { rec = rec * n ; } return rec ; } [39;49m
Source code file location of [34;49mfaccs2[39;49m : "namespaces/compiler/c_syntax.csl" : 227.7 :: we are now at : namespaces/compiler/c_syntax.csl : 235.11
Compiled with : optimizeOn, inlineOn, c_syntaxOn, infixOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xe779ae0e -- code size = 84 bytes
TypeSignature : 
 -----------------------------
Word :: C_Syntax.[34;49mfaccs2[39;49m : definition = 0x00007fb6e779ae0e : disassembly at namespaces/compiler/c_syntax.csl : 235.11 :
[34;49m ..                                   int [39;49m[33;40mfaccs2[39;49m[34;49m ( n | rec )  { for ( rec = 1 ; n > 1 ; n-- ) {  rec = rec * n ;  }  return rec ; }  .. [39;49m[32;49m
0x7fb6e779ae0e    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fb6e779ae12    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e779ae16    4981c610000000          add r14, 0x10                                          [39;49m
[34;49m .. int faccs2 ( n | rec )  { for ( rec = [39;49m[33;40m1[39;49m[34;49m ; n > 1 ; n-- ) {  rec = rec * n ;  }  return rec ; }  .. [39;49m[32;49m
0x7fb6e779ae1d    48c7c001000000          mov rax, 0x1                                           [39;49m
[34;49m ..       int faccs2 ( n | rec )  { for ( [39;49m[33;40mrec[39;49m[34;49m = 1 ; n > 1 ; n-- ) {  rec = rec * n ;  }  return rec ; }  .. [39;49m[32;49m
0x7fb6e779ae24    498d4f08                lea rcx, [r15+0x8]                                     [39;49m
[34;49m ..   int faccs2 ( n | rec )  { for ( rec [39;49m[33;40m=[39;49m[34;49m 1 ; n > 1 ; n-- ) {  rec = rec * n ;  }  return rec ; }  .. [39;49m[32;49m
0x7fb6e779ae28    488901                  mov [rcx], rax                                         [39;49m
[34;49mint faccs2 ( n | rec )  { for ( rec = 1 ; [39;49m[33;40mn[39;49m[34;49m > 1 ; n-- ) {  rec = rec * n ;  }  return rec ; }  .. [39;49m[32;49m
0x7fb6e779ae2b    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. ccs2 ( n | rec )  { for ( rec = 1 ; n [39;49m[33;40m>[39;49m[34;49m 1 ; n-- ) {  rec = rec * n ;  }  return rec ; } [39;49m[32;49m
0x7fb6e779ae2f    4883f801                cmp rax, 0x1                                           [39;49m[32;49m
0x7fb6e779ae33    0f8e19000000            jle 0x7fb6e779ae52         	< C_Syntax.[34;49mfaccs2[39;49m+68[32;49m >[39;49m[39;49m
[34;49m .. or ( rec = 1 ; n > 1 ; n-- ) {  rec = [39;49m[33;40mrec[39;49m[34;49m * n ;  }  return rec ; } [39;49m[32;49m
0x7fb6e779ae39    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m .. ec = 1 ; n > 1 ; n-- ) {  rec = rec * [39;49m[33;40mn[39;49m[34;49m ;  }  return rec ; } [39;49m[32;49m
0x7fb6e779ae3d    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m
[34;49m ..  rec = 1 ; n > 1 ; n-- ) {  rec = rec [39;49m[33;40m*[39;49m[34;49m n ;  }  return rec ; } [39;49m[32;49m
0x7fb6e779ae41    480fafc1                imul rax, rcx                                          [39;49m
[34;49m .. )  { for ( rec = 1 ; n > 1 ; n-- ) {  [39;49m[33;40mrec[39;49m[34;49m = rec * n ;  }  return rec ; } [39;49m[32;49m
0x7fb6e779ae45    498d4f08                lea rcx, [r15+0x8]                                     [39;49m
[34;49m ..  for ( rec = 1 ; n > 1 ; n-- ) {  rec [39;49m[33;40m=[39;49m[34;49m rec * n ;  }  return rec ; } [39;49m[32;49m
0x7fb6e779ae49    488901                  mov [rcx], rax                                         [39;49m
[34;49m .. n | rec )  { for ( rec = 1 ; n > 1 ; n[39;49m[33;40m--[39;49m[34;49m ) {  rec = rec * n ;  }  return rec ; } [39;49m[32;49m
0x7fb6e779ae4c    49ff4ff8                dec qword [r15-0x8]                                    [39;49m
[34;49m ..  rec )  { for ( rec = 1 ; n > 1 ; n-- [39;49m[33;40m)[39;49m[34;49m {  rec = rec * n ;  }  return rec ; } [39;49m[32;49m
0x7fb6e779ae50    ebd9                    jmp 0x7fb6e779ae2b         	< C_Syntax.[34;49mfaccs2[39;49m+29[32;49m >[39;49m[39;49m[32;49m
0x7fb6e779ae52    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m .. ) {  rec = rec * n ;  }  return rec ; [39;49m[33;40m}[39;49m[34;49m [39;49m[32;49m
0x7fb6e779ae56    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e779ae5a    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m
[34;49m .. ; n-- ) {  rec = rec * n ;  }  return [39;49m[33;40mrec[39;49m[34;49m ; } [39;49m[32;49m
0x7fb6e779ae5e    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e779ae61    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'faccs2' :: codeSize = 83
Word : 0x00007fb6e4c0abc8 :: Compiled at : 0x00007fb6e779ae0e
 =============================
::> 'wdiss' was called at namespaces/compiler/c_syntax.csl 235.11 <::

	interpret3 : token = //
	interpret3 : token = 7
	interpret3 : token = faccs2
	interpret3 : token = dup
	interpret3 : token = p 5040
	interpret3 : token = 5040
	interpret3 : token = _assert0
	interpret3 : token = sp
	interpret3 : token = i3halt
	interpret3 exiting...
	interpret4 :> 
	interpret4 : token = C
	interpret4 : token = int
	interpret4 : token = for
	interpret4 : token = return
	interpret4 : token = ;
	interpret4 : token = }
	interpret4 : token = c_syntaxOff
	interpret4 : token = '
	interpret4 : token = find
	interpret4 : token = wdiss
 =============================
C_Syntax.[34;49mfaccs3[39;49m <:> csl compiled word
SourceCode for C_Syntax.[34;49mfaccs3[39;49m :> 
[34;49mint faccs3 ( n | rec ) { for ( rec = 1 ; n > 1 ; n-- ) { rec = rec * n ; } return rec ; } [39;49m
Source code file location of [34;49mfaccs3[39;49m : "namespaces/compiler/c_syntax.csl" : 265.7 :: we are now at : namespaces/compiler/c_syntax.csl : 274.20
Compiled with : optimizeOn, inlineOn, c_syntaxOn, infixOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xe779b03f -- code size = 84 bytes
TypeSignature : 
 -----------------------------
Word :: C_Syntax.[34;49mfaccs3[39;49m : definition = 0x00007fb6e779b03f : disassembly at namespaces/compiler/c_syntax.csl : 274.20 :
[34;49m ..                                   int [39;49m[33;40mfaccs3[39;49m[34;49m ( n | rec )  { for ( rec = 1 ; n > 1 ; n-- ) {  rec = rec * n ;  }  return rec ; }  .. [39;49m[32;49m
0x7fb6e779b03f    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fb6e779b043    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e779b047    4981c610000000          add r14, 0x10                                          [39;49m
[34;49m .. int faccs3 ( n | rec )  { for ( rec = [39;49m[33;40m1[39;49m[34;49m ; n > 1 ; n-- ) {  rec = rec * n ;  }  return rec ; }  .. [39;49m[32;49m
0x7fb6e779b04e    48c7c001000000          mov rax, 0x1                                           [39;49m
[34;49m ..       int faccs3 ( n | rec )  { for ( [39;49m[33;40mrec[39;49m[34;49m = 1 ; n > 1 ; n-- ) {  rec = rec * n ;  }  return rec ; }  .. [39;49m[32;49m
0x7fb6e779b055    498d4f08                lea rcx, [r15+0x8]                                     [39;49m
[34;49m ..   int faccs3 ( n | rec )  { for ( rec [39;49m[33;40m=[39;49m[34;49m 1 ; n > 1 ; n-- ) {  rec = rec * n ;  }  return rec ; }  .. [39;49m[32;49m
0x7fb6e779b059    488901                  mov [rcx], rax                                         [39;49m
[34;49mint faccs3 ( n | rec )  { for ( rec = 1 ; [39;49m[33;40mn[39;49m[34;49m > 1 ; n-- ) {  rec = rec * n ;  }  return rec ; }  .. [39;49m[32;49m
0x7fb6e779b05c    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. ccs3 ( n | rec )  { for ( rec = 1 ; n [39;49m[33;40m>[39;49m[34;49m 1 ; n-- ) {  rec = rec * n ;  }  return rec ; } [39;49m[32;49m
0x7fb6e779b060    4883f801                cmp rax, 0x1                                           [39;49m[32;49m
0x7fb6e779b064    0f8e19000000            jle 0x7fb6e779b083         	< C_Syntax.[34;49mfaccs3[39;49m+68[32;49m >[39;49m[39;49m
[34;49m .. or ( rec = 1 ; n > 1 ; n-- ) {  rec = [39;49m[33;40mrec[39;49m[34;49m * n ;  }  return rec ; } [39;49m[32;49m
0x7fb6e779b06a    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m .. ec = 1 ; n > 1 ; n-- ) {  rec = rec * [39;49m[33;40mn[39;49m[34;49m ;  }  return rec ; } [39;49m[32;49m
0x7fb6e779b06e    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m
[34;49m ..  rec = 1 ; n > 1 ; n-- ) {  rec = rec [39;49m[33;40m*[39;49m[34;49m n ;  }  return rec ; } [39;49m[32;49m
0x7fb6e779b072    480fafc1                imul rax, rcx                                          [39;49m
[34;49m .. )  { for ( rec = 1 ; n > 1 ; n-- ) {  [39;49m[33;40mrec[39;49m[34;49m = rec * n ;  }  return rec ; } [39;49m[32;49m
0x7fb6e779b076    498d4f08                lea rcx, [r15+0x8]                                     [39;49m
[34;49m ..  for ( rec = 1 ; n > 1 ; n-- ) {  rec [39;49m[33;40m=[39;49m[34;49m rec * n ;  }  return rec ; } [39;49m[32;49m
0x7fb6e779b07a    488901                  mov [rcx], rax                                         [39;49m
[34;49m .. n | rec )  { for ( rec = 1 ; n > 1 ; n[39;49m[33;40m--[39;49m[34;49m ) {  rec = rec * n ;  }  return rec ; } [39;49m[32;49m
0x7fb6e779b07d    49ff4ff8                dec qword [r15-0x8]                                    [39;49m
[34;49m ..  rec )  { for ( rec = 1 ; n > 1 ; n-- [39;49m[33;40m)[39;49m[34;49m {  rec = rec * n ;  }  return rec ; } [39;49m[32;49m
0x7fb6e779b081    ebd9                    jmp 0x7fb6e779b05c         	< C_Syntax.[34;49mfaccs3[39;49m+29[32;49m >[39;49m[39;49m[32;49m
0x7fb6e779b083    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m .. ) {  rec = rec * n ;  }  return rec ; [39;49m[33;40m}[39;49m[34;49m [39;49m[32;49m
0x7fb6e779b087    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e779b08b    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m
[34;49m .. ; n-- ) {  rec = rec * n ;  }  return [39;49m[33;40mrec[39;49m[34;49m ; } [39;49m[32;49m
0x7fb6e779b08f    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e779b092    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'faccs3' :: codeSize = 83
Word : 0x00007fb6e4c12868 :: Compiled at : 0x00007fb6e779b03f
 =============================
::> 'wdiss' was called at namespaces/compiler/c_syntax.csl 274.20 <::

	interpret4 : token = 7
	interpret4 : token = faccs3
	interpret4 : token = dup
	interpret4 : token = p 5040
	interpret4 : token = 5040
	interpret4 : token = _assert0
	interpret4 : token = sp
	interpret4 : token = i4halt

	token = i4halt :: interpret4 exiting ...
 =============================
C.[34;49m$[39;49m <:> csl compiled word
SourceCode for C.[34;49m$[39;49m :> 
[34;49m: $ streol _sh ; [39;49m
Source code file location of [34;49m$[39;49m : "namespaces/test/system.csl" : 84.2 :: we are now at : namespaces/compiler/c_syntax.csl : 308.19
Compiled with : optimizeOn, inlineOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xe779938d -- code size = 47 bytes
 -----------------------------
Word :: C.[34;49m$[39;49m : definition = 0x00007fb6e779938d : disassembly at namespaces/compiler/c_syntax.csl : 308.19 :
[34;49m ..                                   : $ [39;49m[33;40mstreol[39;49m[34;49m _sh ;  .. [39;49m[32;49m
0x7fb6e779938d    49b8406f80892d560000    mov r8, 0x562d89806f40                                 [39;49m[32;49m
0x7fb6e7799397    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e77993a1    49ffd1                  call r9                    	< Compiler.[34;49mgetStringToEndOfLine[39;49m : 0x0000562d89806f40[32;49m >[39;49m[39;49m
[34;49m ..                            : $ streol [39;49m[33;40m_sh[39;49m[34;49m ;  .. [39;49m[32;49m
0x7fb6e77993a4    49b8b09e80892d560000    mov r8, 0x562d89809eb0                                 [39;49m[32;49m
0x7fb6e77993ae    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e77993b8    49ffd1                  call r9                    	< Shell.[34;49m_sh[39;49m : 0x0000562d89809eb0[32;49m >[39;49m[39;49m
[34;49m ..                        : $ streol _sh [39;49m[33;40m;[39;49m[34;49m  .. [39;49m[32;49m
0x7fb6e77993bb    c3                      ret                                                    [39;49m
Word_Disassemble : word - '$' :: codeSize = 46
Word : 0x00007fb6e61ee8a0 :: Compiled at : 0x00007fb6e779938d
 =============================
::> 'wdiss' was called at namespaces/compiler/c_syntax.csl 308.19 <::
 

new $ test
total 3296
drwxrwxr-x   8 dennisj dennisj    4096 Nov 19 19:09 .
drwxrwxrwx 144 dennisj dennisj   36864 Nov 19 16:02 ..
drwxrwxr-x   2 dennisj dennisj    4096 Nov 11 12:12 bin
-rw-rw-r--   1 dennisj dennisj 1051185 Nov 19 19:09 csl.1.txt
-rw-rw-r--   1 dennisj dennisj 1725745 Nov 18 11:48 csl.txt
drwxrwxr-x   2 dennisj dennisj    4096 Sep 16 04:03 etc
drwxrwxr-x   8 dennisj dennisj    4096 Nov 17 14:32 .git
-rw-rw-r--   1 dennisj dennisj   15740 Sep 19 08:25 init.csl
-rw-rw-r--   1 dennisj dennisj     163 May 26 00:23 itestf
-rw-rw-r--   1 dennisj dennisj    1078 May 26 00:23 LICENSE
-rwxrwxr-x   1 dennisj dennisj     220 May 26 00:23 m
-rwxrwxr-x   1 dennisj dennisj     664 May 26 00:23 m0
-rw-rw-r--   1 dennisj dennisj    7059 Oct 26 11:20 Makefile
-rwxrwxr-x   1 dennisj dennisj     487 Oct 22 10:10 mir
-rwxrwxr-x   1 dennisj dennisj     549 May 26 00:23 mirAll
drwxrwxr-x   4 dennisj dennisj    4096 Sep 16 04:03 namespaces
drwxrwxr-x   3 dennisj dennisj    4096 May 26 00:23 nbproject
-rw-rw-r--   1 dennisj dennisj      40 May 26 00:23 nt.csl
-rwxrwxr-x   1 dennisj dennisj     124 May 26 00:23 r
-rw-rw-r--   1 dennisj dennisj   14186 Jul 17 21:49 README.txt
drwxrwxr-x   5 dennisj dennisj    4096 Sep 16 04:03 src
-rw-rw-r--   1 dennisj dennisj      90 May 26 00:23 test
-rw-rw-r--   1 dennisj dennisj      90 May 26 00:23 test.txt
-rw-rw-r--   1 dennisj dennisj  445085 Sep  1  2013 udis86-1.7.2.tar.gz
[39;49m[39;49m
typeChecking is on, optimize is on, inlining is on, infixMode is off, 
prefixMode is off, c_syntax is off, postfixMode is on
Debug is off. Verbosity = 1. Console = 0, NumberBase = 10.
DebugSourceCode on : BigNum off : Lisp off : jcc8 off
interpreting : at etc/script : 7.6
SignalExceptionsHandled = 0 ; SigSegvs = 0 ; Restarts = 0
StartedTimes = 0 ; RestartCondition = INITIAL_START ; LastRestartCondtion = INITIAL_START
InNamespace = Root.C
version 0.909.237
 7 7 7
version 0.909.237
[39;49m yfac
[39;49m 3628800

[39;49m yfacc
[39;49m 3628800

[39;49m 5040

[34;49m
Increase the verbosity setting to 2 or more for more info here. ( Eg. : verbosity 2 = )[39;49m
ContextSpace                                InUse =     29989 : Unused =       859 : ReAllocations =    1 : Largest =      768 : Smallest =       91
ContextSpace                                InUse =      8872 : Unused =      1368 : ReAllocations =    0 : Largest =     1368 : Smallest =     1368
StringSpace                                 InUse =     18101 : Unused =      2379 : ReAllocations =    0 : Largest =     2379 : Smallest =     2379
HistorySpace                                InUse =         0 : Unused =     10240 : ReAllocations =    0 : Largest =    10240 : Smallest =    10240
BufferSpace                                 InUse =     59098 : Unused =      1318 : ReAllocations =    0 : Largest =     1318 : Smallest =     1318
LispTempSpace                               InUse =    172072 : Unused =     35464 : ReAllocations =    4 : Largest =    34840 : Smallest =        0
DictionarySpace                             InUse =    696856 : Unused =    351720 : ReAllocations =    0 : Largest =   351720 : Smallest =   351720
SessionObjectsSpace                         InUse =     26758 : Unused =     24442 : ReAllocations =    0 : Largest =    24442 : Smallest =    24442
CodeSpace                                   InUse =     24374 : Unused =     78026 : ReAllocations =    0 : Largest =    78026 : Smallest =    78026
WordRecylingSpace                           InUse =    300728 : Unused =    137392 : ReAllocations =    2 : Largest =   136920 : Smallest =       40
CompilerTempObjectSpace                     InUse =    276776 : Unused =     32808 : ReAllocations =    3 : Largest =    32264 : Smallest =       40
TempObjectSpace                             InUse =      1066 : Unused =      9185 : ReAllocations =    1 : Largest =     9185 : Smallest =        0
LispSpace                                   InUse =    123072 : Unused =     85168 : ReAllocations =    4 : Largest =    84560 : Smallest =        0
InternalObjectSpace                         InUse =     69195 : Unused =      7605 : ReAllocations =    0 : Largest =     7605 : Smallest =     7605
CSLInternalSpace                            InUse =     79952 : Unused =      1968 : ReAllocations =    0 : Largest =     1968 : Smallest =     1968
OpenVmTilSpace                              InUse =      5376 : Unused =       768 : ReAllocations =    0 : Largest =      768 : Smallest =      768
Data Stack                                  InUse =         0 : Unused =     16384
Total Accounted Mem                         InUse =   1917381 : Unused =    780710
Mmap_RemainingMemoryAllocated                     =   2814971 : <=: ovt->Mmap_RemainingMemoryAllocated
Total Memory Allocated                            =   2698091
Total Memory leaks                                =         0
RecycledWordCount ::     4 x 440 bytes : Recycled =      1760
WrdInRecycling ::     0 x 440 bytes : InRecycling =         0[39;49m fibc
[39;49m 6765

 =============================
Int.[34;49mfac[39;49m <:> csl compiled word
SourceCode for Int.[34;49mfac[39;49m :> 
[34;49m: fac ( n | rec1 ) rec1 1 = { n @ 1 > } { n @ rec1 @ * rec1 store n -- } while return rec1 @ ; [39;49m
Source code file location of [34;49mfac[39;49m : "etc/script" : 27.2 :: we are now at : etc/script : 32.17
Compiled with : optimizeOn, inlineOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xc04bc032 -- code size = 89 bytes
TypeSignature : 
 -----------------------------
Word :: Int.[34;49mfac[39;49m : definition = 0x00007f0ec04bc032 : disassembly at etc/script : 32.17 :
[34;49m ..                                     : [39;49m[33;40mfac[39;49m[34;49m ( n | rec1 )  rec1 1 =  { n @ 1 > } { n @ rec1 @ * rec1 store n -- } while  return rec1 @ ;  .. [39;49m[32;49m
0x7f0ec04bc032    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7f0ec04bc036    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7f0ec04bc03a    4981c610000000          add r14, 0x10                                          [39;49m
[34;49m ..                   : fac ( n | rec1 )  [39;49m[33;40mrec1[39;49m[34;49m 1 =  { n @ 1 > } { n @ rec1 @ * rec1 store n -- } while  return rec1 @ ;  .. [39;49m[32;49m
0x7f0ec04bc041    498d4708                lea rax, [r15+0x8]                                     [39;49m
[34;49m ..              : fac ( n | rec1 )  rec1 [39;49m[33;40m1[39;49m[34;49m =  { n @ 1 > } { n @ rec1 @ * rec1 store n -- } while  return rec1 @ ;  .. [39;49m[32;49m
0x7f0ec04bc045    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m ..            : fac ( n | rec1 )  rec1 1 [39;49m[33;40m=[39;49m[34;49m  { n @ 1 > } { n @ rec1 @ * rec1 store n -- } while  return rec1 @ ;  .. [39;49m[32;49m
0x7f0ec04bc04c    488908                  mov [rax], rcx                                         [39;49m
[34;49m ..       : fac ( n | rec1 )  rec1 1 =  { [39;49m[33;40mn[39;49m[34;49m @ 1 > } { n @ rec1 @ * rec1 store n -- } while  return rec1 @ ;  .. [39;49m[32;49m
0x7f0ec04bc04f    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. : fac ( n | rec1 )  rec1 1 =  { n @ 1 [39;49m[33;40m>[39;49m[34;49m } { n @ rec1 @ * rec1 store n -- } while  return rec1 @ ;  .. [39;49m[32;49m
0x7f0ec04bc053    4883f801                cmp rax, 0x1                                           [39;49m[32;49m
0x7f0ec04bc057    0f8e19000000            jle 0x7f0ec04bc076         	< Int.[34;49mfac[39;49m+68[32;49m >[39;49m[39;49m
[34;49m .. ( n | rec1 )  rec1 1 =  { n @ 1 > } { [39;49m[33;40mn[39;49m[34;49m @ rec1 @ * rec1 store n -- } while  return rec1 @ ; [39;49m[32;49m
0x7f0ec04bc05d    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. | rec1 )  rec1 1 =  { n @ 1 > } { n @ [39;49m[33;40mrec1[39;49m[34;49m @ * rec1 store n -- } while  return rec1 @ ; [39;49m[32;49m
0x7f0ec04bc061    498b4f08                mov rcx, [r15+0x8]                                     [39;49m
[34;49m .. )  rec1 1 =  { n @ 1 > } { n @ rec1 @ [39;49m[33;40m*[39;49m[34;49m rec1 store n -- } while  return rec1 @ ; [39;49m[32;49m
0x7f0ec04bc065    480fafc1                imul rax, rcx                                          [39;49m
[34;49m ..  rec1 1 =  { n @ 1 > } { n @ rec1 @ * [39;49m[33;40mrec1[39;49m[34;49m store n -- } while  return rec1 @ ; [39;49m[32;49m
0x7f0ec04bc069    498d4f08                lea rcx, [r15+0x8]                                     [39;49m
[34;49m ..  1 =  { n @ 1 > } { n @ rec1 @ * rec1 [39;49m[33;40mstore[39;49m[34;49m n -- } while  return rec1 @ ; [39;49m[32;49m
0x7f0ec04bc06d    488901                  mov [rcx], rax                                         [39;49m
[34;49m .. n @ 1 > } { n @ rec1 @ * rec1 store n [39;49m[33;40m--[39;49m[34;49m } while  return rec1 @ ; [39;49m[32;49m
0x7f0ec04bc070    49ff4ff8                dec qword [r15-0x8]                                    [39;49m
[34;49m ..  1 > } { n @ rec1 @ * rec1 store n -- [39;49m[33;40m}[39;49m[34;49m while  return rec1 @ ; [39;49m[32;49m
0x7f0ec04bc074    ebd9                    jmp 0x7f0ec04bc04f         	< Int.[34;49mfac[39;49m+29[32;49m >[39;49m[39;49m[32;49m
0x7f0ec04bc076    498b4708                mov rax, [r15+0x8]                                     [39;49m[32;49m
0x7f0ec04bc07a    e900000000              jmp 0x7f0ec04bc07f         	< Int.[34;49mfac[39;49m+77[32;49m >[39;49m[39;49m
[34;49m .. ec1 store n -- } while  return rec1 @ [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7f0ec04bc07f    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7f0ec04bc083    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m
[34;49m .. 1 @ * rec1 store n -- } while  return [39;49m[33;40mrec1[39;49m[34;49m @ ; [39;49m[32;49m
0x7f0ec04bc087    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7f0ec04bc08a    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'fac' :: codeSize = 88
Word : 0x00007f0ec0456768 :: Compiled at : 0x00007f0ec04bc032
 =============================
::> 'wdiss' was called at etc/script 32.17 <::
 5040
bye
 namespaces/compiler/c_syntax.csl 316.20 $$ etc/lispScript [39;49m[39;49m
typeChecking is on, optimize is on, inlining is on, infixMode is off, 
prefixMode is off, c_syntax is off, postfixMode is on
Debug is off. Verbosity = 1. Console = 0, NumberBase = 10.
DebugSourceCode on : BigNum off : Lisp off : jcc8 off
interpreting : at etc/lispScript : 4.6
SignalExceptionsHandled = 0 ; SigSegvs = 0 ; Restarts = 0
StartedTimes = 0 ; RestartCondition = INITIAL_START ; LastRestartCondtion = INITIAL_START
InNamespace = Root.C
version 0.909.237
[39;49m 7
[39;49m yfac
[39;49m 3628800

[39;49m yfacc
[39;49m 3628800

[39;49m 5040

[39;49m fibc
[39;49m 6765

 =============================
Int.[34;49mfac[39;49m <:> csl compiled word
SourceCode for Int.[34;49mfac[39;49m :> 
[34;49m: fac ( n | rec1 ) rec1 1 = { n @ 1 > } { n @ rec1 @ * rec1 store n -- } while return rec1 @ ; [39;49m
Source code file location of [34;49mfac[39;49m : "etc/lispScript" : 22.2 :: we are now at : etc/lispScript : 27.17
Compiled with : optimizeOn, inlineOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0x685a4faf -- code size = 89 bytes
TypeSignature : 
 -----------------------------
Word :: Int.[34;49mfac[39;49m : definition = 0x00007fed685a4faf : disassembly at etc/lispScript : 27.17 :
[34;49m ..                                     : [39;49m[33;40mfac[39;49m[34;49m ( n | rec1 )  rec1 1 =  { n @ 1 > } { n @ rec1 @ * rec1 store n -- } while  return rec1 @ ;  .. [39;49m[32;49m
0x7fed685a4faf    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fed685a4fb3    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fed685a4fb7    4981c610000000          add r14, 0x10                                          [39;49m
[34;49m ..                   : fac ( n | rec1 )  [39;49m[33;40mrec1[39;49m[34;49m 1 =  { n @ 1 > } { n @ rec1 @ * rec1 store n -- } while  return rec1 @ ;  .. [39;49m[32;49m
0x7fed685a4fbe    498d4708                lea rax, [r15+0x8]                                     [39;49m
[34;49m ..              : fac ( n | rec1 )  rec1 [39;49m[33;40m1[39;49m[34;49m =  { n @ 1 > } { n @ rec1 @ * rec1 store n -- } while  return rec1 @ ;  .. [39;49m[32;49m
0x7fed685a4fc2    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m ..            : fac ( n | rec1 )  rec1 1 [39;49m[33;40m=[39;49m[34;49m  { n @ 1 > } { n @ rec1 @ * rec1 store n -- } while  return rec1 @ ;  .. [39;49m[32;49m
0x7fed685a4fc9    488908                  mov [rax], rcx                                         [39;49m
[34;49m ..       : fac ( n | rec1 )  rec1 1 =  { [39;49m[33;40mn[39;49m[34;49m @ 1 > } { n @ rec1 @ * rec1 store n -- } while  return rec1 @ ;  .. [39;49m[32;49m
0x7fed685a4fcc    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. : fac ( n | rec1 )  rec1 1 =  { n @ 1 [39;49m[33;40m>[39;49m[34;49m } { n @ rec1 @ * rec1 store n -- } while  return rec1 @ ;  .. [39;49m[32;49m
0x7fed685a4fd0    4883f801                cmp rax, 0x1                                           [39;49m[32;49m
0x7fed685a4fd4    0f8e19000000            jle 0x7fed685a4ff3         	< Int.[34;49mfac[39;49m+68[32;49m >[39;49m[39;49m
[34;49m .. ( n | rec1 )  rec1 1 =  { n @ 1 > } { [39;49m[33;40mn[39;49m[34;49m @ rec1 @ * rec1 store n -- } while  return rec1 @ ; [39;49m[32;49m
0x7fed685a4fda    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. | rec1 )  rec1 1 =  { n @ 1 > } { n @ [39;49m[33;40mrec1[39;49m[34;49m @ * rec1 store n -- } while  return rec1 @ ; [39;49m[32;49m
0x7fed685a4fde    498b4f08                mov rcx, [r15+0x8]                                     [39;49m
[34;49m .. )  rec1 1 =  { n @ 1 > } { n @ rec1 @ [39;49m[33;40m*[39;49m[34;49m rec1 store n -- } while  return rec1 @ ; [39;49m[32;49m
0x7fed685a4fe2    480fafc1                imul rax, rcx                                          [39;49m
[34;49m ..  rec1 1 =  { n @ 1 > } { n @ rec1 @ * [39;49m[33;40mrec1[39;49m[34;49m store n -- } while  return rec1 @ ; [39;49m[32;49m
0x7fed685a4fe6    498d4f08                lea rcx, [r15+0x8]                                     [39;49m
[34;49m ..  1 =  { n @ 1 > } { n @ rec1 @ * rec1 [39;49m[33;40mstore[39;49m[34;49m n -- } while  return rec1 @ ; [39;49m[32;49m
0x7fed685a4fea    488901                  mov [rcx], rax                                         [39;49m
[34;49m .. n @ 1 > } { n @ rec1 @ * rec1 store n [39;49m[33;40m--[39;49m[34;49m } while  return rec1 @ ; [39;49m[32;49m
0x7fed685a4fed    49ff4ff8                dec qword [r15-0x8]                                    [39;49m
[34;49m ..  1 > } { n @ rec1 @ * rec1 store n -- [39;49m[33;40m}[39;49m[34;49m while  return rec1 @ ; [39;49m[32;49m
0x7fed685a4ff1    ebd9                    jmp 0x7fed685a4fcc         	< Int.[34;49mfac[39;49m+29[32;49m >[39;49m[39;49m[32;49m
0x7fed685a4ff3    498b4708                mov rax, [r15+0x8]                                     [39;49m[32;49m
0x7fed685a4ff7    e900000000              jmp 0x7fed685a4ffc         	< Int.[34;49mfac[39;49m+77[32;49m >[39;49m[39;49m
[34;49m .. ec1 store n -- } while  return rec1 @ [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fed685a4ffc    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fed685a5000    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m
[34;49m .. 1 @ * rec1 store n -- } while  return [39;49m[33;40mrec1[39;49m[34;49m @ ; [39;49m[32;49m
0x7fed685a5004    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fed685a5007    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'fac' :: codeSize = 88
Word : 0x00007fed6853e7f0 :: Compiled at : 0x00007fed685a4faf
 =============================
::> 'wdiss' was called at etc/lispScript 27.17 <::
 5040
bye
 namespaces/compiler/c_syntax.csl 317.22 $$ ls -al /usr/local total 40
drwxr-xr-x 10 root root 4096 Jul 31 09:26 .
drwxr-xr-x 14 root root 4096 Jul 31 09:28 ..
drwxr-xr-x  2 root root 4096 Oct 26 11:21 bin
drwxr-xr-x  2 root root 4096 Oct 26 11:21 etc
drwxr-xr-x  2 root root 4096 Jul 31 09:26 games
drwxr-xr-x  3 root root 4096 Oct 26 11:08 include
drwxr-xr-x  5 root root 4096 Oct 30 07:08 lib
lrwxrwxrwx  1 root root    9 Oct 26 09:49 man -> share/man
drwxr-xr-x  2 root root 4096 Jul 31 09:26 sbin
drwxr-xr-x  9 root root 4096 Nov 18 12:09 share
drwxr-xr-x  2 root root 4096 Jul 31 09:26 src
 namespaces/compiler/c_syntax.csl 318.14 $$ ls -al .total 3312
drwxrwxr-x   8 dennisj dennisj    4096 Nov 19 19:09 .
drwxrwxrwx 144 dennisj dennisj   36864 Nov 19 16:02 ..
drwxrwxr-x   2 dennisj dennisj    4096 Nov 11 12:12 bin
-rw-rw-r--   1 dennisj dennisj 1068646 Nov 19 19:09 csl.1.txt
-rw-rw-r--   1 dennisj dennisj 1725745 Nov 18 11:48 csl.txt
drwxrwxr-x   2 dennisj dennisj    4096 Sep 16 04:03 etc
drwxrwxr-x   8 dennisj dennisj    4096 Nov 17 14:32 .git
-rw-rw-r--   1 dennisj dennisj   15740 Sep 19 08:25 init.csl
-rw-rw-r--   1 dennisj dennisj     163 May 26 00:23 itestf
-rw-rw-r--   1 dennisj dennisj    1078 May 26 00:23 LICENSE
-rwxrwxr-x   1 dennisj dennisj     220 May 26 00:23 m
-rwxrwxr-x   1 dennisj dennisj     664 May 26 00:23 m0
-rw-rw-r--   1 dennisj dennisj    7059 Oct 26 11:20 Makefile
-rwxrwxr-x   1 dennisj dennisj     487 Oct 22 10:10 mir
-rwxrwxr-x   1 dennisj dennisj     549 May 26 00:23 mirAll
drwxrwxr-x   4 dennisj dennisj    4096 Sep 16 04:03 namespaces
drwxrwxr-x   3 dennisj dennisj    4096 May 26 00:23 nbproject
-rw-rw-r--   1 dennisj dennisj      40 May 26 00:23 nt.csl
-rwxrwxr-x   1 dennisj dennisj     124 May 26 00:23 r
-rw-rw-r--   1 dennisj dennisj   14186 Jul 17 21:49 README.txt
drwxrwxr-x   5 dennisj dennisj    4096 Sep 16 04:03 src
-rw-rw-r--   1 dennisj dennisj      90 May 26 00:23 test
-rw-rw-r--   1 dennisj dennisj      90 May 26 00:23 test.txt
-rw-rw-r--   1 dennisj dennisj  445085 Sep  1  2013 udis86-1.7.2.tar.gz

typeChecking is on, optimize is on, inlining is on, infixMode is off, 
prefixMode is off, c_syntax is off, postfixMode is on
Debug is off. Verbosity = 1. Console = 0, NumberBase = 10.
DebugSourceCode on : BigNum off : Lisp off : jcc8 off
interpreting : at namespaces/compiler/c_syntax.csl : 324.7
SignalExceptionsHandled = 0 ; SigSegvs = 0 ; Restarts = 0
StartedTimes = 1 ; RestartCondition = INITIAL_START ; LastRestartCondtion = csl_RUN_INIT
InNamespace = Root.C
QualifyingNamespace = C.void
should read 3 : 3
 =============================
C_Syntax.[34;49mfac5[39;49m <:> csl compiled word
SourceCode for C_Syntax.[34;49mfac5[39;49m :> 
[34;49mint fac5 ( REG n | REG facc ) { facc = 1 ; while ( n > 1 ) { facc *= n -- ; } return facc ; } [39;49m
Source code file location of [34;49mfac5[39;49m : "namespaces/compiler/c_syntax.csl" : 330.5 :: we are now at : namespaces/compiler/c_syntax.csl : 340.9
Compiled with : optimizeOn, inlineOn, c_syntaxOn, infixOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xe779b378 -- code size = 36 bytes
TypeSignature : 
 -----------------------------
Word :: C_Syntax.[34;49mfac5[39;49m : definition = 0x00007fb6e779b378 : disassembly at namespaces/compiler/c_syntax.csl : 340.9 :
[34;49m ..                                   int [39;49m[33;40mfac5[39;49m[34;49m ( REG n | REG facc )  {  facc = 1 ; while ( n > 1 )  { facc *= n -- ; } return facc ; }  .. [39;49m[32;49m
0x7fb6e779b378    498b3e                  mov rdi, [r14]                                         [39;49m
[34;49m int fac5 ( REG n | REG facc )  {  facc = [39;49m[33;40m1[39;49m[34;49m ; while ( n > 1 )  { facc *= n -- ; } return facc ; }  .. [39;49m[32;49m
0x7fb6e779b37b    48c7c601000000          mov rsi, 0x1                                           [39;49m
[34;49m .. | REG facc )  {  facc = 1 ; while ( n [39;49m[33;40m>[39;49m[34;49m 1 )  { facc *= n -- ; } return facc ; } [39;49m[32;49m
0x7fb6e779b382    4883ff01                cmp rdi, 0x1                                           [39;49m[32;49m
0x7fb6e779b386    0f8e0c000000            jle 0x7fb6e779b398         	< C_Syntax.[34;49mfac5[39;49m+32[32;49m >[39;49m[39;49m
[34;49m .. c )  {  facc = 1 ; while ( n > 1 )  { [39;49m[33;40mfacc[39;49m[34;49m *= n -- ; } return facc ; } [39;49m[32;49m
0x7fb6e779b38c    488bde                  mov rbx, rsi                                           [39;49m
[34;49m .. {  facc = 1 ; while ( n > 1 )  { facc [39;49m[33;40m*=[39;49m[34;49m n -- ; } return facc ; } [39;49m[32;49m
0x7fb6e779b38f    480faff7                imul rsi, rdi                                          [39;49m
[34;49m .. cc = 1 ; while ( n > 1 )  { facc *= n [39;49m[33;40m--[39;49m[34;49m ; } return facc ; } [39;49m[32;49m
0x7fb6e779b393    48ffcf                  dec rdi                                                [39;49m
[34;49m .. cc = 1 ; while ( n > 1 )  { facc *= n [39;49m[33;40m--[39;49m[34;49m ; } return facc ; } [39;49m[32;49m
0x7fb6e779b396    ebea                    jmp 0x7fb6e779b382         	< C_Syntax.[34;49mfac5[39;49m+10[32;49m >[39;49m[39;49m
[34;49m ..  ( n > 1 )  { facc *= n -- ; } return [39;49m[33;40mfacc[39;49m[34;49m ; } [39;49m[32;49m
0x7fb6e779b398    498936                  mov [r14], rsi                                         [39;49m[32;49m
0x7fb6e779b39b    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'fac5' :: codeSize = 35
Word : 0x00007fb6e4c1cd78 :: Compiled at : 0x00007fb6e779b378
 =============================
::> 'wdiss' was called at namespaces/compiler/c_syntax.csl 340.9 <::
 5040[32;49m
0x7fb6e779b3a1    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fb6e779b3a5    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e779b3a9    4981c618000000          add r14, 0x18                                          [39;49m[32;49m
0x7fb6e779b3b0    498d4708                lea rax, [r15+0x8]                                     [39;49m[32;49m
0x7fb6e779b3b4    48c7c102000000          mov rcx, 0x2                                           [39;49m[32;49m
0x7fb6e779b3bb    488908                  mov [rax], rcx                                         [39;49m[32;49m
0x7fb6e779b3be    498d4710                lea rax, [r15+0x10]                                    [39;49m[32;49m
0x7fb6e779b3c2    48c7c104000000          mov rcx, 0x4                                           [39;49m[32;49m
0x7fb6e779b3c9    488908                  mov [rax], rcx                                         [39;49m[32;49m
0x7fb6e779b3cc    498b4708                mov rax, [r15+0x8]                                     [39;49m[32;49m
0x7fb6e779b3d0    498b4f10                mov rcx, [r15+0x10]                                    [39;49m[32;49m
0x7fb6e779b3d4    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fb6e779b3d7    48c7c102000000          mov rcx, 0x2                                           [39;49m[32;49m
0x7fb6e779b3de    48c7c200000000          mov rdx, 0x0                                           [39;49m[32;49m
0x7fb6e779b3e5    48f7f9                  idiv rcx                                               [39;49m[32;49m
0x7fb6e779b3e8    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fb6e779b3ec    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e779b3ef    498946f8                mov [r14-0x8], rax                                     [39;49m[32;49m
0x7fb6e779b3f3    49b944a493e7b67f0000    mov r9, 0x7fb6e793a444                                 [39;49m[32;49m
0x7fb6e779b3fd    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fb6e793a444[32;49m >[39;49m[39;49m[32;49m
0x7fb6e779b400    48c7c003000000          mov rax, 0x3                                           [39;49m[32;49m
0x7fb6e779b407    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e779b40b    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e779b40e    49b9dfbc93e7b67f0000    mov r9, 0x7fb6e793bcdf                                 [39;49m[32;49m
0x7fb6e779b418    49ffd1                  call r9                    	< System.[34;49m_assert0[39;49m : 0x00007fb6e793bcdf[32;49m >[39;49m[39;49m[32;49m
0x7fb6e779b41b    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e779b41f    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e779b423    c3                      ret                                                    [39;49m
 3 3 
above line should show 3 3
 =============================
C_Syntax.[34;49myada[39;49m <:> csl compiled word
SourceCode for C_Syntax.[34;49myada[39;49m :> 
[34;49mvoid yada () { int a = 2, b = 12, x ; x = (( a + b ) / 2 ) ; return x ; } [39;49m
Source code file location of [34;49myada[39;49m : "namespaces/compiler/c_syntax.csl" : 360.10 :: we are now at : namespaces/compiler/c_syntax.csl : 360.83
Compiled with : optimizeOn, inlineOn, c_syntaxOn, infixOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xe779b429 -- code size = 98 bytes
TypeSignature : 
 -----------------------------
Word :: C_Syntax.[34;49myada[39;49m : definition = 0x00007fb6e779b429 : disassembly at namespaces/compiler/c_syntax.csl : 360.83 :
[34;49m ..                                  void [39;49m[33;40myada[39;49m[34;49m () { int a = 2, b = 12, x ; x = (( a + b ) / 2 ) ; return x ; }  .. [39;49m[32;49m
0x7fb6e779b429    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fb6e779b42d    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e779b431    4981c620000000          add r14, 0x20                                          [39;49m
[34;49m ..                void yada () { int a = [39;49m[33;40m2[39;49m[34;49m, b = 12, x ; x = (( a + b ) / 2 ) ; return x ; }  .. [39;49m[32;49m
0x7fb6e779b438    48c7c002000000          mov rax, 0x2                                           [39;49m
[34;49m ..                    void yada () { int [39;49m[33;40ma[39;49m[34;49m = 2, b = 12, x ; x = (( a + b ) / 2 ) ; return x ; }  .. [39;49m[32;49m
0x7fb6e779b43f    498d4f08                lea rcx, [r15+0x8]                                     [39;49m
[34;49m ..                  void yada () { int a [39;49m[33;40m=[39;49m[34;49m 2, b = 12, x ; x = (( a + b ) / 2 ) ; return x ; }  .. [39;49m[32;49m
0x7fb6e779b443    488901                  mov [rcx], rax                                         [39;49m
[34;49m ..         void yada () { int a = 2, b = [39;49m[33;40m12[39;49m[34;49m, x ; x = (( a + b ) / 2 ) ; return x ; }  .. [39;49m[32;49m
0x7fb6e779b446    48c7c00c000000          mov rax, 0xc                                           [39;49m
[34;49m ..             void yada () { int a = 2, [39;49m[33;40mb[39;49m[34;49m = 12, x ; x = (( a + b ) / 2 ) ; return x ; }  .. [39;49m[32;49m
0x7fb6e779b44d    498d4f10                lea rcx, [r15+0x10]                                    [39;49m
[34;49m ..           void yada () { int a = 2, b [39;49m[33;40m=[39;49m[34;49m 12, x ; x = (( a + b ) / 2 ) ; return x ; }  .. [39;49m[32;49m
0x7fb6e779b451    488901                  mov [rcx], rax                                         [39;49m
[34;49m .. da () { int a = 2, b = 12, x ; x = (( [39;49m[33;40ma[39;49m[34;49m + b ) / 2 ) ; return x ; } [39;49m[32;49m
0x7fb6e779b454    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m .. ) { int a = 2, b = 12, x ; x = (( a + [39;49m[33;40mb[39;49m[34;49m ) / 2 ) ; return x ; } [39;49m[32;49m
0x7fb6e779b458    498b4f10                mov rcx, [r15+0x10]                                    [39;49m
[34;49m ..  () { int a = 2, b = 12, x ; x = (( a [39;49m[33;40m+[39;49m[34;49m b ) / 2 ) ; return x ; } [39;49m[32;49m
0x7fb6e779b45c    4803c1                  add rax, rcx                                           [39;49m
[34;49m .. t a = 2, b = 12, x ; x = (( a + b ) / [39;49m[33;40m2[39;49m[34;49m ) ; return x ; } [39;49m[32;49m
0x7fb6e779b45f    48c7c102000000          mov rcx, 0x2                                           [39;49m
[34;49m .. int a = 2, b = 12, x ; x = (( a + b ) [39;49m[33;40m/[39;49m[34;49m 2 ) ; return x ; } [39;49m[32;49m
0x7fb6e779b466    48c7c200000000          mov rdx, 0x0                                           [39;49m[32;49m
0x7fb6e779b46d    48f7f9                  idiv rcx                                               [39;49m
[34;49m .. void yada () { int a = 2, b = 12, x ; [39;49m[33;40mx[39;49m[34;49m = (( a + b ) / 2 ) ; return x ; }  .. [39;49m[32;49m
0x7fb6e779b470    498d4f18                lea rcx, [r15+0x18]                                    [39;49m
[34;49m  void yada () { int a = 2, b = 12, x ; x [39;49m[33;40m=[39;49m[34;49m (( a + b ) / 2 ) ; return x ; }  .. [39;49m[32;49m
0x7fb6e779b474    488901                  mov [rcx], rax                                         [39;49m[32;49m
0x7fb6e779b477    498b4718                mov rax, [r15+0x18]                                    [39;49m
[34;49m .. x ; x = (( a + b ) / 2 ) ; return x ; [39;49m[33;40m}[39;49m[34;49m [39;49m[32;49m
0x7fb6e779b47b    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e779b47f    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e779b483    4983c608                add r14, 0x8                                           [39;49m
[34;49m .. 12, x ; x = (( a + b ) / 2 ) ; return [39;49m[33;40mx[39;49m[34;49m ; } [39;49m[32;49m
0x7fb6e779b487    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e779b48a    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'yada' :: codeSize = 97
Word : 0x00007fb6e4c218b0 :: Compiled at : 0x00007fb6e779b429
 =============================
::> 'wdiss' was called at namespaces/compiler/c_syntax.csl 360.83 <::

DataStack at : [34;49mnamespaces/compiler/c_syntax.csl : 360.97[39;49m :
DataStack depth =   5 : Dsp (R14) = Top = 0x00007fb6e7cd3a68, InitialTos = 0x00007fb6e7cd3a40, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fb6e7cd3a68 > = 0x0000000000000007	
  DataStack   [  -1 ] < 0x00007fb6e7cd3a60 > = 0x0000000000000007	
  DataStack   [  -2 ] < 0x00007fb6e7cd3a58 > = 0x0000000000000005	
  DataStack   [  -3 ] < 0x00007fb6e7cd3a50 > = 0x0000000000000005	
  DataStack   [  -4 ] < 0x00007fb6e7cd3a48 > = 0x0000000000000005	

DataStack at : [34;49mnamespaces/compiler/c_syntax.csl : 360.107[39;49m :
DataStack depth =   3 : Dsp (R14) = Top = 0x00007fb6e7cd3a58, InitialTos = 0x00007fb6e7cd3a40, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fb6e7cd3a58 > = 0x0000000000000005	
  DataStack   [  -1 ] < 0x00007fb6e7cd3a50 > = 0x0000000000000005	
  DataStack   [  -2 ] < 0x00007fb6e7cd3a48 > = 0x0000000000000005	

 =============================
C_Syntax.[34;49myadaYada[39;49m <:> csl compiled word
SourceCode for C_Syntax.[34;49myadaYada[39;49m :> 
[34;49mvoid yadaYada () { int a, b, x ; a = 2, b = 12 ; x = (( a + b ) / 2 ) ; return x ; } [39;49m
Source code file location of [34;49myadaYada[39;49m : "namespaces/compiler/c_syntax.csl" : 361.14 :: we are now at : namespaces/compiler/c_syntax.csl : 361.98
Compiled with : optimizeOn, inlineOn, c_syntaxOn, infixOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xe779b490 -- code size = 98 bytes
TypeSignature : 
 -----------------------------
Word :: C_Syntax.[34;49myadaYada[39;49m : definition = 0x00007fb6e779b490 : disassembly at namespaces/compiler/c_syntax.csl : 361.98 :
[34;49m ..                                  void [39;49m[33;40myadaYada[39;49m[34;49m () { int a, b, x ; a = 2, b = 12 ; x = (( a + b ) / 2 ) ; return x ; }  .. [39;49m[32;49m
0x7fb6e779b490    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fb6e779b494    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e779b498    4981c620000000          add r14, 0x20                                          [39;49m
[34;49m ..  void yadaYada () { int a, b, x ; a = [39;49m[33;40m2[39;49m[34;49m, b = 12 ; x = (( a + b ) / 2 ) ; return x ; }  .. [39;49m[32;49m
0x7fb6e779b49f    48c7c002000000          mov rax, 0x2                                           [39;49m
[34;49m ..      void yadaYada () { int a, b, x ; [39;49m[33;40ma[39;49m[34;49m = 2, b = 12 ; x = (( a + b ) / 2 ) ; return x ; }  .. [39;49m[32;49m
0x7fb6e779b4a6    498d4f08                lea rcx, [r15+0x8]                                     [39;49m
[34;49m ..    void yadaYada () { int a, b, x ; a [39;49m[33;40m=[39;49m[34;49m 2, b = 12 ; x = (( a + b ) / 2 ) ; return x ; }  .. [39;49m[32;49m
0x7fb6e779b4aa    488901                  mov [rcx], rax                                         [39;49m
[34;49m .. adaYada () { int a, b, x ; a = 2, b = [39;49m[33;40m12[39;49m[34;49m ; x = (( a + b ) / 2 ) ; return x ; } [39;49m[32;49m
0x7fb6e779b4ad    48c7c00c000000          mov rax, 0xc                                           [39;49m
[34;49m  void yadaYada () { int a, b, x ; a = 2, [39;49m[33;40mb[39;49m[34;49m = 12 ; x = (( a + b ) / 2 ) ; return x ; }  .. [39;49m[32;49m
0x7fb6e779b4b4    498d4f10                lea rcx, [r15+0x10]                                    [39;49m
[34;49mvoid yadaYada () { int a, b, x ; a = 2, b [39;49m[33;40m=[39;49m[34;49m 12 ; x = (( a + b ) / 2 ) ; return x ; }  .. [39;49m[32;49m
0x7fb6e779b4b8    488901                  mov [rcx], rax                                         [39;49m
[34;49m ..  int a, b, x ; a = 2, b = 12 ; x = (( [39;49m[33;40ma[39;49m[34;49m + b ) / 2 ) ; return x ; } [39;49m[32;49m
0x7fb6e779b4bb    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m ..  a, b, x ; a = 2, b = 12 ; x = (( a + [39;49m[33;40mb[39;49m[34;49m ) / 2 ) ; return x ; } [39;49m[32;49m
0x7fb6e779b4bf    498b4f10                mov rcx, [r15+0x10]                                    [39;49m
[34;49m .. nt a, b, x ; a = 2, b = 12 ; x = (( a [39;49m[33;40m+[39;49m[34;49m b ) / 2 ) ; return x ; } [39;49m[32;49m
0x7fb6e779b4c3    4803c1                  add rax, rcx                                           [39;49m
[34;49m ..  x ; a = 2, b = 12 ; x = (( a + b ) / [39;49m[33;40m2[39;49m[34;49m ) ; return x ; } [39;49m[32;49m
0x7fb6e779b4c6    48c7c102000000          mov rcx, 0x2                                           [39;49m
[34;49m .. b, x ; a = 2, b = 12 ; x = (( a + b ) [39;49m[33;40m/[39;49m[34;49m 2 ) ; return x ; } [39;49m[32;49m
0x7fb6e779b4cd    48c7c200000000          mov rdx, 0x0                                           [39;49m[32;49m
0x7fb6e779b4d4    48f7f9                  idiv rcx                                               [39;49m
[34;49m .. da () { int a, b, x ; a = 2, b = 12 ; [39;49m[33;40mx[39;49m[34;49m = (( a + b ) / 2 ) ; return x ; } [39;49m[32;49m
0x7fb6e779b4d7    498d4f18                lea rcx, [r15+0x18]                                    [39;49m
[34;49m ..  () { int a, b, x ; a = 2, b = 12 ; x [39;49m[33;40m=[39;49m[34;49m (( a + b ) / 2 ) ; return x ; } [39;49m[32;49m
0x7fb6e779b4db    488901                  mov [rcx], rax                                         [39;49m[32;49m
0x7fb6e779b4de    498b4718                mov rax, [r15+0x18]                                    [39;49m
[34;49m .. 2 ; x = (( a + b ) / 2 ) ; return x ; [39;49m[33;40m}[39;49m[34;49m [39;49m[32;49m
0x7fb6e779b4e2    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e779b4e6    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e779b4ea    4983c608                add r14, 0x8                                           [39;49m
[34;49m ..  = 12 ; x = (( a + b ) / 2 ) ; return [39;49m[33;40mx[39;49m[34;49m ; } [39;49m[32;49m
0x7fb6e779b4ee    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e779b4f1    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'yadaYada' :: codeSize = 97
Word : 0x00007fb6e4c24788 :: Compiled at : 0x00007fb6e779b490
 =============================
::> 'wdiss' was called at namespaces/compiler/c_syntax.csl 361.98 <::

DataStack at : [34;49mnamespaces/compiler/c_syntax.csl : 361.124[39;49m :
DataStack depth =   3 : Dsp (R14) = Top = 0x00007fb6e7cd3a58, InitialTos = 0x00007fb6e7cd3a40, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fb6e7cd3a58 > = 0x0000000000000005	
  DataStack   [  -1 ] < 0x00007fb6e7cd3a50 > = 0x0000000000000005	
  DataStack   [  -2 ] < 0x00007fb6e7cd3a48 > = 0x0000000000000005	

Dump at : namespaces/compiler/c_syntax.csl : 374.32 :
Dump : Address = 0x00007fb6e4c27b88 : Number = 240 :: (little endian dump)
0x00007fb6e4c27b88 :  d0 79 c2 e4 b6 7f 00 00  f8 fa 87 e7 b6 7f 00 00  .y...... ........ 
0x00007fb6e4c27b98 :  00 00 00 00 b8 01 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e4c27ba8 :  02 00 00 00 00 00 04 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e4c27bb8 :  00 00 00 00 00 00 00 00  40 00 00 00 00 00 00 00  ........ @....... 
0x00007fb6e4c27bc8 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e4c27bd8 :  00 00 00 00 00 00 00 00  1f 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e4c27be8 :  0b d7 41 e7 b6 7f 00 00  30 00 04 04 00 00 00 00  ..A..... 0....... 
0x00007fb6e4c27bf8 :  06 b5 79 e7 b6 7f 00 00  00 00 00 00 00 00 00 00  ..y..... ........ 
0x00007fb6e4c27c08 :  00 00 00 00 00 00 00 00  f8 7b c2 e4 b6 7f 00 00  ........ .{...... 
0x00007fb6e4c27c18 :  28 f9 87 e7 b6 7f 00 00  00 00 00 00 00 00 00 00  (....... ........ 
0x00007fb6e4c27c28 :  00 00 00 00 00 00 00 00  06 b5 79 e7 b6 7f 00 00  ........ ..y..... 
0x00007fb6e4c27c38 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e4c27c48 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fb6e4c27c58 :  00 00 00 00 00 00 00 00  68 7c c2 e4 b6 7f 00 00  ........ h|...... 
0x00007fb6e4c27c68 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 



	          DLNode : S_Node : size = 80 : at 00007fb6e4c27b88
0x00007fb6e4c27b88  dlnode           *   n_After                  = 0x00007fb6e4c279d0
0x00007fb6e4c27b90  dlnode           *   n_Before                 = 0x00007fb6e787faf8
0x00007fb6e4c27b98  int32                n_Type                   = 0x00000000
0x00007fb6e4c27b9c  int16                n_Size                   = 0x01b8
0x00007fb6e4c27b9e  Boolean              n_Slots                  = ' ' : 0x00
0x00007fb6e4c27b9f  Boolean              n_InUseFlag              = ' ' : 0x00
0x00007fb6e4c27b90  node             *   n_CurrentNode            = 0x00007fb6e787faf8
0x00007fb6e4c27b90  byte             *   n_unmap                  = 0x00007fb6e787faf8
0x00007fb6e4c27ba0  dlnode           *   do_After                 = 0x0000000000000000
0x00007fb6e4c27ba8  dlnode           *   do_Before                = 0x0004000000000002
0x00007fb6e4c27b98  int32                do_Type                  = 0x00000000
0x00007fb6e4c27b9c  int16                do_Size                  = 0x01b8
0x00007fb6e4c27b9e  Boolean              do_Slots                 = ' ' : 0x00
0x00007fb6e4c27b9f  Boolean              do_InUseFlag             = ' ' : 0x00
0x00007fb6e4c27b90  byte             *   do_bData                 = 0x00007fb6e787faf8
0x00007fb6e4c27b90  int64            *   do_iData                 = 0x00007fb6e787faf8

	         _DLNode : n_DLNode : size = 24 : at 00007fb6e4c27ba0
0x00007fb6e4c27b88  dlnode           *   n_After                  = 0x00007fb6e4c279d0
0x00007fb6e4c27b90  dlnode           *   n_Before                 = 0x00007fb6e787faf8
0x00007fb6e4c27b98  node             *   n_CurrentNode            = 0x000001b800000000
0x00007fb6e4c27b98  int32                n_Type                   = 0x00000000
0x00007fb6e4c27b9c  int16                n_Size                   = 0x01b8
0x00007fb6e4c27b9e  Boolean              n_Slots                  = ' ' : 0x00
0x00007fb6e4c27b9f  Boolean              n_InUseFlag              = ' ' : 0x00
0x00007fb6e4c27b90  byte             *   n_unmap                  = 0x00007fb6e787faf8

	         dobject : n_dobject : size = 32 : at 00007fb6e4c27ba0
0x00007fb6e4c27b88  dlnode           *   do_After                 = 0x00007fb6e4c279d0
0x00007fb6e4c27b90  dlnode           *   do_Before                = 0x00007fb6e787faf8
0x00007fb6e4c27b98  int32                do_Type                  = 0x00000000
0x00007fb6e4c27b9c  int16                do_Size                  = 0x01b8
0x00007fb6e4c27b9e  int8                 do_Slots                 = ' ' : 0x00
0x00007fb6e4c27b9f  int8                 do_InUseFlag             = ' ' : 0x00
0x00007fb6e4c27ba0  byte             *   do_bData                 = 0x0000000000000000
0x00007fb6e4c27ba0  int64            *   do_iData                 = 0x0000000000000000

	   AttributeInfo : n_Attributes : size = 48 : at 00007fb6e4c27ba8
0x00007fb6e4c27b88  uint64               T_MorphismAttributes     = 0x00007fb6e4c279d0
0x00007fb6e4c27b90  uint64               T_ObjectAttributes       = 0x00007fb6e787faf8
0x00007fb6e4c27b98  uint64               T_LispAttributes         = 0x000001b800000000
0x00007fb6e4c27ba0  uint64               T_WAllocationType        = 0x0000000000000000
0x00007fb6e4c27ba8  uint32               T_WordAttributes         = 0x00000002
0x00007fb6e4c27bac  uint16               T_NumberOfPrefixedArgs   = 0x0000
0x00007fb6e4c27bae  uint16               T_Unused                 = 0x0004
0x00007fb6e4c27bb0  uint64               T_NumberOfSlots          = 0x0000000000000000
0x00007fb6e4c27bb0  uint64               T_NumberOfBytes          = 0x0000000000000000
0x00007fb6e4c27bb0  uint64               T_Size                   = 0x0000000000000000
0x00007fb6e4c27bb0  uint64               T_ChunkSize              = 0x0000000000000000
0x00007fb6e4c27bd8  int64                Slots                    = 0x0000000000000000
0x00007fb6e4c27be0  int64                CodeSize                 = 0x000000000000001f
0x00007fb6e4c27be8  byte             *   S_Name                   = 0x00007fb6e741d70b
0x00007fb6e4c27bf0  uint64               State                    = 0x0000000004040030
0x00007fb6e4c27bf8  uint64               S_Value                  = 0x00007fb6e779b506
0x00007fb6e4c27bf8  byte             *   S_BytePtr                = 0x00007fb6e779b506
0x00007fb6e4c27bf8  byte             *   S_Object                 = 0x00007fb6e779b506
0x00007fb6e4c27c00  dllist           *   S_SymbolList             = 0x0000000000000000
0x00007fb6e4c27c08  uint64               S_DObjectValue           = 0x0000000000000000
0x00007fb6e4c27c10  uint64           *   S_PtrToValue             = 0x00007fb6e4c27bf8
0x00007fb6e4c27c18  _Identifier      *   S_ContainingNamespace    = 0x00007fb6e787f928
0x00007fb6e4c27c18  _Identifier      *   S_ContainingList         = 0x00007fb6e787f928
0x00007fb6e4c27c18  _Identifier      *   S_Prototype              = 0x00007fb6e787f928
0x00007fb6e4c27c20  uint64               S_Value2                 = 0x0000000000000000
0x00007fb6e4c27c20  dlnode           *   S_Node2                  = 0x0000000000000000
0x00007fb6e4c27c20  byte             *   S_pb_Data2               = 0x0000000000000000
0x00007fb6e4c27c28  uint64               S_Value3                 = 0x0000000000000000
0x00007fb6e4c27c28  dlnode           *   S_Node3                  = 0x0000000000000000
0x00007fb6e4c27c28  byte             *   S_pb_Data3               = 0x0000000000000000
0x00007fb6e4c27c30  block                Definition               = 0x00007fb6e779b506
0x00007fb6e4c27c38  dllist           *   DebugWordList            = 0x0000000000000000
0x00007fb6e4c27c40  int64                StartCharRlIndex         = 0x0000000000000000
0x00007fb6e4c27c48  int64                SC_WordIndex             = 0x0000000000000000
0x00007fb6e4c27c50  int64                SC_FileIndex_Start       = 0x0000000000000000
0x00007fb6e4c27c58  int64                SC_FileIndex_End         = 0x0000000000000000
0x00007fb6e4c27c60  _Identifier      *   CSLWord                  = 0x00007fb6e4c27c68
0x00007fb6e4c27c68  _Identifier      *   BaseObject               = 0x0000000000000000
0x00007fb6e4c27c70  _WordData        *   W_WordData               = 0x0000000000000000
 =============================
Experimental.[34;49mbyteTest[39;49m <:> structure : size = 28, [34;49mbyteTest[39;49m alias for [34;49m_byteTest[39;49m, immediate
SourceCode for Experimental.[34;49m_byteTest[39;49m :> 
[34;49mtypedef struct _byteTest { byte a8_123 ; int64 a64_123 ; byte b8_123 ; byte c8_123 ; union { int64 u64_123 ; int32 u32_123 ; int8 u8_123 ; } ; int32 a32_123 ; byte d8_123 ; int16 a16_123 ; } byteTest, abyteTest ; [39;49m
Source code file location of [34;49mbyteTest[39;49m : "namespaces/compiler/c_syntax.csl" : 397.2 :: we are now at : namespaces/compiler/c_syntax.csl : 399.13
Compiled with : optimizeOn, inlineOn, c_syntaxOn, infixOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xe5fe80a6 -- code size = 34 bytes
 -----------------------------
Word :: Experimental.[34;49mbyteTest[39;49m : definition = 0x00007fb6e5fe80a6 : disassembly at namespaces/compiler/c_syntax.csl : 399.13 :[32;49m
0x7fb6e5fe80a6    48bf40c4c3e4b67f0000    mov rdi, 0x7fb6e4c3c440                                [39;49m[32;49m
0x7fb6e5fe80b0    49b8102b7c892d560000    mov r8, 0x562d897c2b10                                 [39;49m[32;49m
0x7fb6e5fe80ba    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e5fe80c4    49ffd1                  call r9                    	< C compiler code >        [39;49m[32;49m
0x7fb6e5fe80c7    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'byteTest' :: codeSize = 33
Word : 0x00007fb6e4c3dad0 :: Compiled at : 0x00007fb6e5fe80a6
 =============================
::> 'wdiss' was called at namespaces/compiler/c_syntax.csl 399.13 <::
 
bt.size = 28
 =============================
C_Syntax.[34;49mbttt[39;49m <:> csl compiled word
SourceCode for C_Syntax.[34;49mbttt[39;49m :> 
[34;49mvoid bttt ( byteTest xbt | btt ) { printf ( "\nbtt" ) ; xbt.a8_123 = ' ; btt = xbt.a8_123 ; printf ( "\nbtt = %c", btt ) ; xbt.b8_123 = ' ; xbt.c8_123 = ' ; xbt.a16_123 = 0x1234 ; xbt.a32_123 = 0x12345678 ; xbt.a64_123 = 0x123456789abcdef0 ; xbt.u32_123 = 0x1234567 ; btt = 0xfedcba0987654321 ; printf ( "\nbt.a16_123 = 0x%x ", xbt.a16_123 ) ; printf ( "\nbt.a32_123 = 0x%x ", xbt.a32_123 ) ; printf ( "\nbt.a64_123 = 0x%lx ", xbt.a64_123 ) ; printf ( "\nbt.u32_123 = 0x%lx ", xbt.u32_123 ) ; printf ( "\nbt.a8_123 = %c ", xbt.a8_123 ) ; printf ( "\nbt.b8_123 = %c ", xbt.b8_123 ) ; printf ( "\nbt.c8_123 = %c ", xbt.c8_123 ) ; printf ( "\nbtt = %c", btt ) ; dump ( &xbt, xbt.size ) ; hp ( xbt.a8_123 ) ; } [39;49m
Source code file location of [34;49mbttt[39;49m : "namespaces/compiler/c_syntax.csl" : 401.10 :: we are now at : namespaces/compiler/c_syntax.csl : 422.9
Compiled with : optimizeOn, inlineOn, c_syntaxOn, infixOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xe779b52a -- code size = 844 bytes
TypeSignature : Object 
 -----------------------------
Word :: C_Syntax.[34;49mbttt[39;49m : definition = 0x00007fb6e779b52a : disassembly at namespaces/compiler/c_syntax.csl : 422.9 :
[34;49m ..                                  void [39;49m[33;40mbttt[39;49m[34;49m ( byteTest xbt | btt )  {  printf ( "\nbtt" ) ; xbt.a8_123 = ' ;  btt = xbt.a8_123 ;  printf ( " .. [39;49m[32;49m
0x7fb6e779b52a    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fb6e779b52e    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e779b532    4981c610000000          add r14, 0x10                                          [39;49m
[34;49m .. t ( byteTest xbt | btt )  {  printf ( [39;49m[33;40m"\nbtt"[39;49m[34;49m ) ; xbt.a8_123 = ' ;  btt = xbt.a8_123 ;  printf ( "\nbtt = %c", btt ) ;  xbt.b8_123 = ' ; xb .. [39;49m[32;49m
0x7fb6e779b539    48b8c71ae8e5b67f0000    mov rax, 0x7fb6e5e81ac7    	[32;49m< string : '[39;49m[39;49m\nbtt[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fb6e779b543    488bf8                  mov rdi, rax                                           [39;49m[32;49m
0x7fb6e779b546    48c7c001000000          mov rax, 0x1                                           [39;49m
[34;49m ..  void bttt ( byteTest xbt | btt )  {  [39;49m[33;40mprintf[39;49m[34;49m ( "\nbtt" ) ; xbt.a8_123 = ' ;  btt = xbt.a8_123 ;  printf ( "\nbtt = %c", btt ) ;  xbt.b8_123 .. [39;49m[32;49m
0x7fb6e779b54d    49b810947c892d560000    mov r8, 0x562d897c9410                                 [39;49m[32;49m
0x7fb6e779b557    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e779b561    49ffd1                  call r9                    	< C.[34;49mprintf[39;49m : 0x0000562d897c9410[32;49m >[39;49m[39;49m
[34;49m ..  xbt | btt )  {  printf ( "\nbtt" ) ; [39;49m[33;40mxbt[39;49m[34;49m.a8_123 = ' ;  btt = xbt.a8_123 ;  printf ( "\nbtt = %c", btt ) ;  xbt.b8_123 = ' ; xbt.c8_123 = ' .. [39;49m[32;49m
0x7fb6e779b564    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e779b568    4881c000000000          add rax, 0x0                                           [39;49m
[34;49m ..  {  printf ( "\nbtt" ) ; xbt.a8_123 = [39;49m[33;40m'a'[39;49m[34;49m  btt = xbt.a8_123 ;  printf ( "\nbtt = %c", btt ) ;  xbt.b8_123 = ' ; xbt.c8_123 = ' ; xbt.a16_12 .. [39;49m[32;49m
0x7fb6e779b56f    b161                    mov cl, 0x61                                           [39;49m
[34;49m .. )  {  printf ( "\nbtt" ) ; xbt.a8_123 [39;49m[33;40m=[39;49m[34;49m ' ;  btt = xbt.a8_123 ;  printf ( "\nbtt = %c", btt ) ;  xbt.b8_123 = ' ; xbt.c8_123 = ' ; xbt.a16_ .. [39;49m[32;49m
0x7fb6e779b571    8808                    mov [rax], cl                                          [39;49m
[34;49m .. ( "\nbtt" ) ; xbt.a8_123 = ' ;  btt = [39;49m[33;40mxbt[39;49m[34;49m.a8_123 ;  printf ( "\nbtt = %c", btt ) ;  xbt.b8_123 = ' ; xbt.c8_123 = ' ; xbt.a16_123 = 0x1234  .. [39;49m[32;49m
0x7fb6e779b573    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e779b577    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fb6e779b57e    488b00                  mov rax, [rax]                                         [39;49m
[34;49m .. rintf ( "\nbtt" ) ; xbt.a8_123 = ' ;  [39;49m[33;40mbtt[39;49m[34;49m = xbt.a8_123 ;  printf ( "\nbtt = %c", btt ) ;  xbt.b8_123 = ' ; xbt.c8_123 = ' ; xbt.a16_123 = 0 .. [39;49m[32;49m
0x7fb6e779b581    498d4f08                lea rcx, [r15+0x8]                                     [39;49m
[34;49m .. f ( "\nbtt" ) ; xbt.a8_123 = ' ;  btt [39;49m[33;40m=[39;49m[34;49m xbt.a8_123 ;  printf ( "\nbtt = %c", btt ) ;  xbt.b8_123 = ' ; xbt.c8_123 = ' ; xbt.a16_123 = 0x123 .. [39;49m[32;49m
0x7fb6e779b585    488901                  mov [rcx], rax                                         [39;49m
[34;49m .. 3 = ' ;  btt = xbt.a8_123 ;  printf ( [39;49m[33;40m"\nbtt = %c"[39;49m[34;49m, btt ) ;  xbt.b8_123 = ' ; xbt.c8_123 = ' ; xbt.a16_123 = 0x1234 ;  xbt.a32_123 = 0x1234 .. [39;49m[32;49m
0x7fb6e779b588    48b8cc1ae8e5b67f0000    mov rax, 0x7fb6e5e81acc    	[32;49m< string : '[39;49m[39;49m\nbtt = %c[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fb6e779b592    488bf8                  mov rdi, rax                                           [39;49m
[34;49m ..  xbt.a8_123 ;  printf ( "\nbtt = %c", [39;49m[33;40mbtt[39;49m[34;49m ) ;  xbt.b8_123 = ' ; xbt.c8_123 = ' ; xbt.a16_123 = 0x1234 ;  xbt.a32_123 = 0x12345678 ; xbt.a64 .. [39;49m[32;49m
0x7fb6e779b595    498b4708                mov rax, [r15+0x8]                                     [39;49m[32;49m
0x7fb6e779b599    488bf0                  mov rsi, rax                                           [39;49m[32;49m
0x7fb6e779b59c    48c7c002000000          mov rax, 0x2                                           [39;49m
[34;49m .. xbt.a8_123 = ' ;  btt = xbt.a8_123 ;  [39;49m[33;40mprintf[39;49m[34;49m ( "\nbtt = %c", btt ) ;  xbt.b8_123 = ' ; xbt.c8_123 = ' ; xbt.a16_123 = 0x1234 ;  xbt.a32_123 .. [39;49m[32;49m
0x7fb6e779b5a3    49b810947c892d560000    mov r8, 0x562d897c9410                                 [39;49m[32;49m
0x7fb6e779b5ad    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e779b5b7    49ffd1                  call r9                    	< C.[34;49mprintf[39;49m : 0x0000562d897c9410[32;49m >[39;49m[39;49m
[34;49m .. 23 ;  printf ( "\nbtt = %c", btt ) ;  [39;49m[33;40mxbt[39;49m[34;49m.b8_123 = ' ; xbt.c8_123 = ' ; xbt.a16_123 = 0x1234 ;  xbt.a32_123 = 0x12345678 ; xbt.a64_123 = 0x .. [39;49m[32;49m
0x7fb6e779b5ba    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m ..   printf ( "\nbtt = %c", btt ) ;  xbt.[39;49m[33;40mb8_123[39;49m[34;49m = ' ; xbt.c8_123 = ' ; xbt.a16_123 = 0x1234 ;  xbt.a32_123 = 0x12345678 ; xbt.a64_123 = 0x1234 .. [39;49m[32;49m
0x7fb6e779b5be    4881c009000000          add rax, 0x9                                           [39;49m
[34;49m .. ( "\nbtt = %c", btt ) ;  xbt.b8_123 = [39;49m[33;40m'b'[39;49m[34;49m xbt.c8_123 = ' ; xbt.a16_123 = 0x1234 ;  xbt.a32_123 = 0x12345678 ; xbt.a64_123 = 0x123456789abcd .. [39;49m[32;49m
0x7fb6e779b5c5    b162                    mov cl, 0x62                                           [39;49m
[34;49m .. f ( "\nbtt = %c", btt ) ;  xbt.b8_123 [39;49m[33;40m=[39;49m[34;49m ' ; xbt.c8_123 = ' ; xbt.a16_123 = 0x1234 ;  xbt.a32_123 = 0x12345678 ; xbt.a64_123 = 0x123456789ab .. [39;49m[32;49m
0x7fb6e779b5c7    8808                    mov [rax], cl                                          [39;49m
[34;49m .. nbtt = %c", btt ) ;  xbt.b8_123 = ' ; [39;49m[33;40mxbt[39;49m[34;49m.c8_123 = ' ; xbt.a16_123 = 0x1234 ;  xbt.a32_123 = 0x12345678 ; xbt.a64_123 = 0x123456789abcdef0  .. [39;49m[32;49m
0x7fb6e779b5c9    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m ..  = %c", btt ) ;  xbt.b8_123 = ' ; xbt.[39;49m[33;40mc8_123[39;49m[34;49m = ' ; xbt.a16_123 = 0x1234 ;  xbt.a32_123 = 0x12345678 ; xbt.a64_123 = 0x123456789abcdef0 ; xb .. [39;49m[32;49m
0x7fb6e779b5cd    4881c00a000000          add rax, 0xa                                           [39;49m
[34;49m .. tt ) ;  xbt.b8_123 = ' ; xbt.c8_123 = [39;49m[33;40m'c'[39;49m[34;49m xbt.a16_123 = 0x1234 ;  xbt.a32_123 = 0x12345678 ; xbt.a64_123 = 0x123456789abcdef0 ; xbt.u32_123 .. [39;49m[32;49m
0x7fb6e779b5d4    b163                    mov cl, 0x63                                           [39;49m
[34;49m ..  btt ) ;  xbt.b8_123 = ' ; xbt.c8_123 [39;49m[33;40m=[39;49m[34;49m ' ; xbt.a16_123 = 0x1234 ;  xbt.a32_123 = 0x12345678 ; xbt.a64_123 = 0x123456789abcdef0 ; xbt.u32_1 .. [39;49m[32;49m
0x7fb6e779b5d6    8808                    mov [rax], cl                                          [39;49m
[34;49m ..  ;  xbt.b8_123 = ' ; xbt.c8_123 = ' ; [39;49m[33;40mxbt[39;49m[34;49m.a16_123 = 0x1234 ;  xbt.a32_123 = 0x12345678 ; xbt.a64_123 = 0x123456789abcdef0 ; xbt.u32_123 = 0 .. [39;49m[32;49m
0x7fb6e779b5d8    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. xbt.b8_123 = ' ; xbt.c8_123 = ' ; xbt.[39;49m[33;40ma16_123[39;49m[34;49m = 0x1234 ;  xbt.a32_123 = 0x12345678 ; xbt.a64_123 = 0x123456789abcdef0 ; xbt.u32_123 = 0x123 .. [39;49m[32;49m
0x7fb6e779b5dc    4881c018000000          add rax, 0x18                                          [39;49m
[34;49m ..  = ' ; xbt.c8_123 = ' ; xbt.a16_123 = [39;49m[33;40m0x1234[39;49m[34;49m ;  xbt.a32_123 = 0x12345678 ; xbt.a64_123 = 0x123456789abcdef0 ; xbt.u32_123 = 0x1234567 ; btt .. [39;49m[32;49m
0x7fb6e779b5e3    66b93412                mov cx, 0x1234                                         [39;49m
[34;49m .. 23 = ' ; xbt.c8_123 = ' ; xbt.a16_123 [39;49m[33;40m=[39;49m[34;49m 0x1234 ;  xbt.a32_123 = 0x12345678 ; xbt.a64_123 = 0x123456789abcdef0 ; xbt.u32_123 = 0x1234567 ; b .. [39;49m[32;49m
0x7fb6e779b5e7    668908                  mov [rax], cx                                          [39;49m
[34;49m .. .c8_123 = ' ; xbt.a16_123 = 0x1234 ;  [39;49m[33;40mxbt[39;49m[34;49m.a32_123 = 0x12345678 ; xbt.a64_123 = 0x123456789abcdef0 ; xbt.u32_123 = 0x1234567 ; btt = 0xfedcb .. [39;49m[32;49m
0x7fb6e779b5ea    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. 123 = ' ; xbt.a16_123 = 0x1234 ;  xbt.[39;49m[33;40ma32_123[39;49m[34;49m = 0x12345678 ; xbt.a64_123 = 0x123456789abcdef0 ; xbt.u32_123 = 0x1234567 ; btt = 0xfedcba098 .. [39;49m[32;49m
0x7fb6e779b5ee    4881c013000000          add rax, 0x13                                          [39;49m
[34;49m .. xbt.a16_123 = 0x1234 ;  xbt.a32_123 = [39;49m[33;40m0x12345678[39;49m[34;49m ; xbt.a64_123 = 0x123456789abcdef0 ; xbt.u32_123 = 0x1234567 ; btt = 0xfedcba0987654321 ;  .. [39;49m[32;49m
0x7fb6e779b5f5    b978563412              mov ecx, 0x12345678                                    [39;49m
[34;49m .. ; xbt.a16_123 = 0x1234 ;  xbt.a32_123 [39;49m[33;40m=[39;49m[34;49m 0x12345678 ; xbt.a64_123 = 0x123456789abcdef0 ; xbt.u32_123 = 0x1234567 ; btt = 0xfedcba0987654321  .. [39;49m[32;49m
0x7fb6e779b5fa    8908                    mov [rax], ecx                                         [39;49m
[34;49m ..  0x1234 ;  xbt.a32_123 = 0x12345678 ; [39;49m[33;40mxbt[39;49m[34;49m.a64_123 = 0x123456789abcdef0 ; xbt.u32_123 = 0x1234567 ; btt = 0xfedcba0987654321 ; printf ( "\nb .. [39;49m[32;49m
0x7fb6e779b5fc    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. 234 ;  xbt.a32_123 = 0x12345678 ; xbt.[39;49m[33;40ma64_123[39;49m[34;49m = 0x123456789abcdef0 ; xbt.u32_123 = 0x1234567 ; btt = 0xfedcba0987654321 ; printf ( "\nbt.a1 .. [39;49m[32;49m
0x7fb6e779b600    4881c001000000          add rax, 0x1                                           [39;49m
[34;49m .. .a32_123 = 0x12345678 ; xbt.a64_123 = [39;49m[33;40m0x123456789abcdef0[39;49m[34;49m ; xbt.u32_123 = 0x1234567 ; btt = 0xfedcba0987654321 ; printf ( "\nbt.a16_123 = 0x .. [39;49m[32;49m
0x7fb6e779b607    48b9f0debc9a78563412    mov rcx, 0x123456789abcdef0                              [39;49m
[34;49m .. bt.a32_123 = 0x12345678 ; xbt.a64_123 [39;49m[33;40m=[39;49m[34;49m 0x123456789abcdef0 ; xbt.u32_123 = 0x1234567 ; btt = 0xfedcba0987654321 ; printf ( "\nbt.a16_123 =  .. [39;49m[32;49m
0x7fb6e779b611    488908                  mov [rax], rcx                                         [39;49m
[34;49m ..  ; xbt.a64_123 = 0x123456789abcdef0 ; [39;49m[33;40mxbt[39;49m[34;49m.u32_123 = 0x1234567 ; btt = 0xfedcba0987654321 ; printf ( "\nbt.a16_123 = 0x%x ", xbt.a16_123 ) ; .. [39;49m[32;49m
0x7fb6e779b614    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. bt.a64_123 = 0x123456789abcdef0 ; xbt.[39;49m[33;40mu32_123[39;49m[34;49m = 0x1234567 ; btt = 0xfedcba0987654321 ; printf ( "\nbt.a16_123 = 0x%x ", xbt.a16_123 ) ;  pr .. [39;49m[32;49m
0x7fb6e779b618    4881c00b000000          add rax, 0xb                                           [39;49m
[34;49m ..  = 0x123456789abcdef0 ; xbt.u32_123 = [39;49m[33;40m0x1234567[39;49m[34;49m ; btt = 0xfedcba0987654321 ; printf ( "\nbt.a16_123 = 0x%x ", xbt.a16_123 ) ;  printf ( "\n .. [39;49m[32;49m
0x7fb6e779b61f    b967452301              mov ecx, 0x1234567                                     [39;49m
[34;49m .. 23 = 0x123456789abcdef0 ; xbt.u32_123 [39;49m[33;40m=[39;49m[34;49m 0x1234567 ; btt = 0xfedcba0987654321 ; printf ( "\nbt.a16_123 = 0x%x ", xbt.a16_123 ) ;  printf ( " .. [39;49m[32;49m
0x7fb6e779b624    8908                    mov [rax], ecx                                         [39;49m
[34;49m .. ef0 ; xbt.u32_123 = 0x1234567 ; btt = [39;49m[33;40m0xfedcba0987654321[39;49m[34;49m ; printf ( "\nbt.a16_123 = 0x%x ", xbt.a16_123 ) ;  printf ( "\nbt.a32_123 = 0x%x  .. [39;49m[32;49m
0x7fb6e779b626    48c7c021436587          mov rax, 0xffffffff87654321                              [39;49m
[34;49m .. 89abcdef0 ; xbt.u32_123 = 0x1234567 ; [39;49m[33;40mbtt[39;49m[34;49m = 0xfedcba0987654321 ; printf ( "\nbt.a16_123 = 0x%x ", xbt.a16_123 ) ;  printf ( "\nbt.a32_123 = .. [39;49m[32;49m
0x7fb6e779b62d    498d4f08                lea rcx, [r15+0x8]                                     [39;49m
[34;49m .. cdef0 ; xbt.u32_123 = 0x1234567 ; btt [39;49m[33;40m=[39;49m[34;49m 0xfedcba0987654321 ; printf ( "\nbt.a16_123 = 0x%x ", xbt.a16_123 ) ;  printf ( "\nbt.a32_123 = 0x% .. [39;49m[32;49m
0x7fb6e779b631    488901                  mov [rcx], rax                                         [39;49m
[34;49m .. ; btt = 0xfedcba0987654321 ; printf ( [39;49m[33;40m"\nbt.a16_123 = 0x%x "[39;49m[34;49m, xbt.a16_123 ) ;  printf ( "\nbt.a32_123 = 0x%x ", xbt.a32_123 ) ;  printf ( " .. [39;49m[32;49m
0x7fb6e779b634    48b8d61ae8e5b67f0000    mov rax, 0x7fb6e5e81ad6    	[32;49m< string : '[39;49m[39;49m\nbt.a16_123 = 0x%x [39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fb6e779b63e    488bf8                  mov rdi, rax                                           [39;49m
[34;49m .. 21 ; printf ( "\nbt.a16_123 = 0x%x ", [39;49m[33;40mxbt[39;49m[34;49m.a16_123 ) ;  printf ( "\nbt.a32_123 = 0x%x ", xbt.a32_123 ) ;  printf ( "\nbt.a64_123 = 0x%lx ",  .. [39;49m[32;49m
0x7fb6e779b641    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m ..  printf ( "\nbt.a16_123 = 0x%x ", xbt.[39;49m[33;40ma16_123[39;49m[34;49m ) ;  printf ( "\nbt.a32_123 = 0x%x ", xbt.a32_123 ) ;  printf ( "\nbt.a64_123 = 0x%lx ", xbt. .. [39;49m[32;49m
0x7fb6e779b645    4881c018000000          add rax, 0x18                                          [39;49m[32;49m
0x7fb6e779b64c    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fb6e779b64f    488bf0                  mov rsi, rax                                           [39;49m[32;49m
0x7fb6e779b652    48c7c002000000          mov rax, 0x2                                           [39;49m
[34;49m .. x1234567 ; btt = 0xfedcba0987654321 ; [39;49m[33;40mprintf[39;49m[34;49m ( "\nbt.a16_123 = 0x%x ", xbt.a16_123 ) ;  printf ( "\nbt.a32_123 = 0x%x ", xbt.a32_123 ) ;  p .. [39;49m[32;49m
0x7fb6e779b659    49b810947c892d560000    mov r8, 0x562d897c9410                                 [39;49m[32;49m
0x7fb6e779b663    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e779b66d    49ffd1                  call r9                    	< C.[34;49mprintf[39;49m : 0x0000562d897c9410[32;49m >[39;49m[39;49m
[34;49m .. 3 = 0x%x ", xbt.a16_123 ) ;  printf ( [39;49m[33;40m"\nbt.a32_123 = 0x%x "[39;49m[34;49m, xbt.a32_123 ) ;  printf ( "\nbt.a64_123 = 0x%lx ", xbt.a64_123 ) ;  printf (  .. [39;49m[32;49m
0x7fb6e779b670    48b8ea1ae8e5b67f0000    mov rax, 0x7fb6e5e81aea    	[32;49m< string : '[39;49m[39;49m\nbt.a32_123 = 0x%x [39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fb6e779b67a    488bf8                  mov rdi, rax                                           [39;49m
[34;49m .. ) ;  printf ( "\nbt.a32_123 = 0x%x ", [39;49m[33;40mxbt[39;49m[34;49m.a32_123 ) ;  printf ( "\nbt.a64_123 = 0x%lx ", xbt.a64_123 ) ;  printf ( "\nbt.u32_123 = 0x%lx ", .. [39;49m[32;49m
0x7fb6e779b67d    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m ..  printf ( "\nbt.a32_123 = 0x%x ", xbt.[39;49m[33;40ma32_123[39;49m[34;49m ) ;  printf ( "\nbt.a64_123 = 0x%lx ", xbt.a64_123 ) ;  printf ( "\nbt.u32_123 = 0x%lx ", xbt .. [39;49m[32;49m
0x7fb6e779b681    4881c013000000          add rax, 0x13                                          [39;49m[32;49m
0x7fb6e779b688    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fb6e779b68b    488bf0                  mov rsi, rax                                           [39;49m[32;49m
0x7fb6e779b68e    48c7c002000000          mov rax, 0x2                                           [39;49m
[34;49m .. bt.a16_123 = 0x%x ", xbt.a16_123 ) ;  [39;49m[33;40mprintf[39;49m[34;49m ( "\nbt.a32_123 = 0x%x ", xbt.a32_123 ) ;  printf ( "\nbt.a64_123 = 0x%lx ", xbt.a64_123 ) ;   .. [39;49m[32;49m
0x7fb6e779b695    49b810947c892d560000    mov r8, 0x562d897c9410                                 [39;49m[32;49m
0x7fb6e779b69f    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e779b6a9    49ffd1                  call r9                    	< C.[34;49mprintf[39;49m : 0x0000562d897c9410[32;49m >[39;49m[39;49m
[34;49m .. 3 = 0x%x ", xbt.a32_123 ) ;  printf ( [39;49m[33;40m"\nbt.a64_123 = 0x%lx "[39;49m[34;49m, xbt.a64_123 ) ;  printf ( "\nbt.u32_123 = 0x%lx ", xbt.u32_123 ) ;  printf ( .. [39;49m[32;49m
0x7fb6e779b6ac    48b8fe1ae8e5b67f0000    mov rax, 0x7fb6e5e81afe    	[32;49m< string : '[39;49m[39;49m\nbt.a64_123 = 0x%lx [39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fb6e779b6b6    488bf8                  mov rdi, rax                                           [39;49m
[34;49m ..  ;  printf ( "\nbt.a64_123 = 0x%lx ", [39;49m[33;40mxbt[39;49m[34;49m.a64_123 ) ;  printf ( "\nbt.u32_123 = 0x%lx ", xbt.u32_123 ) ;  printf ( "\nbt.a8_123 = %c ", xbt .. [39;49m[32;49m
0x7fb6e779b6b9    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. printf ( "\nbt.a64_123 = 0x%lx ", xbt.[39;49m[33;40ma64_123[39;49m[34;49m ) ;  printf ( "\nbt.u32_123 = 0x%lx ", xbt.u32_123 ) ;  printf ( "\nbt.a8_123 = %c ", xbt.a8_ .. [39;49m[32;49m
0x7fb6e779b6bd    4881c001000000          add rax, 0x1                                           [39;49m[32;49m
0x7fb6e779b6c4    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fb6e779b6c7    488bf0                  mov rsi, rax                                           [39;49m[32;49m
0x7fb6e779b6ca    48c7c002000000          mov rax, 0x2                                           [39;49m
[34;49m .. bt.a32_123 = 0x%x ", xbt.a32_123 ) ;  [39;49m[33;40mprintf[39;49m[34;49m ( "\nbt.a64_123 = 0x%lx ", xbt.a64_123 ) ;  printf ( "\nbt.u32_123 = 0x%lx ", xbt.u32_123 ) ;  .. [39;49m[32;49m
0x7fb6e779b6d1    49b810947c892d560000    mov r8, 0x562d897c9410                                 [39;49m[32;49m
0x7fb6e779b6db    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e779b6e5    49ffd1                  call r9                    	< C.[34;49mprintf[39;49m : 0x0000562d897c9410[32;49m >[39;49m[39;49m
[34;49m ..  = 0x%lx ", xbt.a64_123 ) ;  printf ( [39;49m[33;40m"\nbt.u32_123 = 0x%lx "[39;49m[34;49m, xbt.u32_123 ) ;  printf ( "\nbt.a8_123 = %c ", xbt.a8_123 ) ;  printf ( "\nb .. [39;49m[32;49m
0x7fb6e779b6e8    48b8131be8e5b67f0000    mov rax, 0x7fb6e5e81b13    	[32;49m< string : '[39;49m[39;49m\nbt.u32_123 = 0x%lx [39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fb6e779b6f2    488bf8                  mov rdi, rax                                           [39;49m
[34;49m ..  ;  printf ( "\nbt.u32_123 = 0x%lx ", [39;49m[33;40mxbt[39;49m[34;49m.u32_123 ) ;  printf ( "\nbt.a8_123 = %c ", xbt.a8_123 ) ;  printf ( "\nbt.b8_123 = %c ", xbt.b8_1 .. [39;49m[32;49m
0x7fb6e779b6f5    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. printf ( "\nbt.u32_123 = 0x%lx ", xbt.[39;49m[33;40mu32_123[39;49m[34;49m ) ;  printf ( "\nbt.a8_123 = %c ", xbt.a8_123 ) ;  printf ( "\nbt.b8_123 = %c ", xbt.b8_123 ) .. [39;49m[32;49m
0x7fb6e779b6f9    4881c00b000000          add rax, 0xb                                           [39;49m[32;49m
0x7fb6e779b700    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fb6e779b703    488bf0                  mov rsi, rax                                           [39;49m[32;49m
0x7fb6e779b706    48c7c002000000          mov rax, 0x2                                           [39;49m
[34;49m .. t.a64_123 = 0x%lx ", xbt.a64_123 ) ;  [39;49m[33;40mprintf[39;49m[34;49m ( "\nbt.u32_123 = 0x%lx ", xbt.u32_123 ) ;  printf ( "\nbt.a8_123 = %c ", xbt.a8_123 ) ;  prin .. [39;49m[32;49m
0x7fb6e779b70d    49b810947c892d560000    mov r8, 0x562d897c9410                                 [39;49m[32;49m
0x7fb6e779b717    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e779b721    49ffd1                  call r9                    	< C.[34;49mprintf[39;49m : 0x0000562d897c9410[32;49m >[39;49m[39;49m
[34;49m ..  = 0x%lx ", xbt.u32_123 ) ;  printf ( [39;49m[33;40m"\nbt.a8_123 = %c "[39;49m[34;49m, xbt.a8_123 ) ;  printf ( "\nbt.b8_123 = %c ", xbt.b8_123 ) ;  printf ( "\nbt.c8_ .. [39;49m[32;49m
0x7fb6e779b724    48b8281be8e5b67f0000    mov rax, 0x7fb6e5e81b28    	[32;49m< string : '[39;49m[39;49m\nbt.a8_123 = %c [39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fb6e779b72e    488bf8                  mov rdi, rax                                           [39;49m
[34;49m .. 23 ) ;  printf ( "\nbt.a8_123 = %c ", [39;49m[33;40mxbt[39;49m[34;49m.a8_123 ) ;  printf ( "\nbt.b8_123 = %c ", xbt.b8_123 ) ;  printf ( "\nbt.c8_123 = %c ", xbt.c8_12 .. [39;49m[32;49m
0x7fb6e779b731    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e779b735    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fb6e779b73c    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fb6e779b73f    488bf0                  mov rsi, rax                                           [39;49m[32;49m
0x7fb6e779b742    48c7c002000000          mov rax, 0x2                                           [39;49m
[34;49m .. t.u32_123 = 0x%lx ", xbt.u32_123 ) ;  [39;49m[33;40mprintf[39;49m[34;49m ( "\nbt.a8_123 = %c ", xbt.a8_123 ) ;  printf ( "\nbt.b8_123 = %c ", xbt.b8_123 ) ;  printf (  .. [39;49m[32;49m
0x7fb6e779b749    49b810947c892d560000    mov r8, 0x562d897c9410                                 [39;49m[32;49m
0x7fb6e779b753    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e779b75d    49ffd1                  call r9                    	< C.[34;49mprintf[39;49m : 0x0000562d897c9410[32;49m >[39;49m[39;49m
[34;49m .. _123 = %c ", xbt.a8_123 ) ;  printf ( [39;49m[33;40m"\nbt.b8_123 = %c "[39;49m[34;49m, xbt.b8_123 ) ;  printf ( "\nbt.c8_123 = %c ", xbt.c8_123 ) ;  printf ( "\nbtt =  .. [39;49m[32;49m
0x7fb6e779b760    48b8391be8e5b67f0000    mov rax, 0x7fb6e5e81b39    	[32;49m< string : '[39;49m[39;49m\nbt.b8_123 = %c [39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fb6e779b76a    488bf8                  mov rdi, rax                                           [39;49m
[34;49m .. 23 ) ;  printf ( "\nbt.b8_123 = %c ", [39;49m[33;40mxbt[39;49m[34;49m.b8_123 ) ;  printf ( "\nbt.c8_123 = %c ", xbt.c8_123 ) ;  printf ( "\nbtt = %c", btt ) ;  dump (  .. [39;49m[32;49m
0x7fb6e779b76d    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m ..  ;  printf ( "\nbt.b8_123 = %c ", xbt.[39;49m[33;40mb8_123[39;49m[34;49m ) ;  printf ( "\nbt.c8_123 = %c ", xbt.c8_123 ) ;  printf ( "\nbtt = %c", btt ) ;  dump ( &xbt .. [39;49m[32;49m
0x7fb6e779b771    4881c009000000          add rax, 0x9                                           [39;49m[32;49m
0x7fb6e779b778    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fb6e779b77b    488bf0                  mov rsi, rax                                           [39;49m[32;49m
0x7fb6e779b77e    48c7c002000000          mov rax, 0x2                                           [39;49m
[34;49m ..  "\nbt.a8_123 = %c ", xbt.a8_123 ) ;  [39;49m[33;40mprintf[39;49m[34;49m ( "\nbt.b8_123 = %c ", xbt.b8_123 ) ;  printf ( "\nbt.c8_123 = %c ", xbt.c8_123 ) ;  printf (  .. [39;49m[32;49m
0x7fb6e779b785    49b810947c892d560000    mov r8, 0x562d897c9410                                 [39;49m[32;49m
0x7fb6e779b78f    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e779b799    49ffd1                  call r9                    	< C.[34;49mprintf[39;49m : 0x0000562d897c9410[32;49m >[39;49m[39;49m
[34;49m .. _123 = %c ", xbt.b8_123 ) ;  printf ( [39;49m[33;40m"\nbt.c8_123 = %c "[39;49m[34;49m, xbt.c8_123 ) ;  printf ( "\nbtt = %c", btt ) ;  dump ( &xbt, xbt.size ) ;  hp (  .. [39;49m[32;49m
0x7fb6e779b79c    48b84a1be8e5b67f0000    mov rax, 0x7fb6e5e81b4a    	[32;49m< string : '[39;49m[39;49m\nbt.c8_123 = %c [39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fb6e779b7a6    488bf8                  mov rdi, rax                                           [39;49m
[34;49m .. 23 ) ;  printf ( "\nbt.c8_123 = %c ", [39;49m[33;40mxbt[39;49m[34;49m.c8_123 ) ;  printf ( "\nbtt = %c", btt ) ;  dump ( &xbt, xbt.size ) ;  hp ( xbt.a8_123 ) ; }  .. [39;49m[32;49m
0x7fb6e779b7a9    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m ..  ;  printf ( "\nbt.c8_123 = %c ", xbt.[39;49m[33;40mc8_123[39;49m[34;49m ) ;  printf ( "\nbtt = %c", btt ) ;  dump ( &xbt, xbt.size ) ;  hp ( xbt.a8_123 ) ; }  .. [39;49m[32;49m
0x7fb6e779b7ad    4881c00a000000          add rax, 0xa                                           [39;49m[32;49m
0x7fb6e779b7b4    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fb6e779b7b7    488bf0                  mov rsi, rax                                           [39;49m[32;49m
0x7fb6e779b7ba    48c7c002000000          mov rax, 0x2                                           [39;49m
[34;49m ..  "\nbt.b8_123 = %c ", xbt.b8_123 ) ;  [39;49m[33;40mprintf[39;49m[34;49m ( "\nbt.c8_123 = %c ", xbt.c8_123 ) ;  printf ( "\nbtt = %c", btt ) ;  dump ( &xbt, xbt.size ) .. [39;49m[32;49m
0x7fb6e779b7c1    49b810947c892d560000    mov r8, 0x562d897c9410                                 [39;49m[32;49m
0x7fb6e779b7cb    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e779b7d5    49ffd1                  call r9                    	< C.[34;49mprintf[39;49m : 0x0000562d897c9410[32;49m >[39;49m[39;49m
[34;49m .. _123 = %c ", xbt.c8_123 ) ;  printf ( [39;49m[33;40m"\nbtt = %c"[39;49m[34;49m, btt ) ;  dump ( &xbt, xbt.size ) ;  hp ( xbt.a8_123 ) ; }  .. [39;49m[32;49m
0x7fb6e779b7d8    48b85b1be8e5b67f0000    mov rax, 0x7fb6e5e81b5b    	[32;49m< string : '[39;49m[39;49m\nbtt = %c[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fb6e779b7e2    488bf8                  mov rdi, rax                                           [39;49m
[34;49m .. bt.c8_123 ) ;  printf ( "\nbtt = %c", [39;49m[33;40mbtt[39;49m[34;49m ) ;  dump ( &xbt, xbt.size ) ;  hp ( xbt.a8_123 ) ; }  .. [39;49m[32;49m
0x7fb6e779b7e5    498b4708                mov rax, [r15+0x8]                                     [39;49m[32;49m
0x7fb6e779b7e9    488bf0                  mov rsi, rax                                           [39;49m[32;49m
0x7fb6e779b7ec    48c7c002000000          mov rax, 0x2                                           [39;49m
[34;49m ..  "\nbt.c8_123 = %c ", xbt.c8_123 ) ;  [39;49m[33;40mprintf[39;49m[34;49m ( "\nbtt = %c", btt ) ;  dump ( &xbt, xbt.size ) ;  hp ( xbt.a8_123 ) ; }  .. [39;49m[32;49m
0x7fb6e779b7f3    49b810947c892d560000    mov r8, 0x562d897c9410                                 [39;49m[32;49m
0x7fb6e779b7fd    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e779b807    49ffd1                  call r9                    	< C.[34;49mprintf[39;49m : 0x0000562d897c9410[32;49m >[39;49m[39;49m
[34;49m .. intf ( "\nbtt = %c", btt ) ;  dump ( &[39;49m[33;40mxbt[39;49m[34;49m, xbt.size ) ;  hp ( xbt.a8_123 ) ; }  .. [39;49m[32;49m
0x7fb6e779b80a    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e779b80e    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fb6e779b815    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e779b819    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ( "\nbtt = %c", btt ) ;  dump ( &xbt, [39;49m[33;40mxbt[39;49m[34;49m.size ) ;  hp ( xbt.a8_123 ) ; }  .. [39;49m[32;49m
0x7fb6e779b81c    48b8a0c6c3e4b67f0000    mov rax, 0x7fb6e4c3c6a0                                [39;49m[32;49m
0x7fb6e779b826    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fb6e779b829    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e779b82d    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  ) ;  printf ( "\nbtt = %c", btt ) ;  [39;49m[33;40mdump[39;49m[34;49m ( &xbt, xbt.size ) ;  hp ( xbt.a8_123 ) ; }  .. [39;49m[32;49m
0x7fb6e779b830    49b830a480892d560000    mov r8, 0x562d8980a430                                 [39;49m[32;49m
0x7fb6e779b83a    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e779b844    49ffd1                  call r9                    	< Debug.[34;49mdump[39;49m : 0x0000562d8980a430[32;49m >[39;49m[39;49m
[34;49m ..  ) ;  dump ( &xbt, xbt.size ) ;  hp ( [39;49m[33;40mxbt[39;49m[34;49m.a8_123 ) ; }  .. [39;49m[32;49m
0x7fb6e779b847    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e779b84b    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fb6e779b852    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fb6e779b855    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e779b859    498906                  mov [r14], rax                                         [39;49m
[34;49m .. , btt ) ;  dump ( &xbt, xbt.size ) ;  [39;49m[33;40mhp[39;49m[34;49m ( xbt.a8_123 ) ; }  .. [39;49m[32;49m
0x7fb6e779b85c    49b987a493e7b67f0000    mov r9, 0x7fb6e793a487                                 [39;49m[32;49m
0x7fb6e779b866    49ffd1                  call r9                    	< Int.[34;49mhp[39;49m : 0x00007fb6e793a487[32;49m >[39;49m[39;49m
[34;49m .. bt, xbt.size ) ;  hp ( xbt.a8_123 ) ; [39;49m[33;40m}[39;49m[34;49m  .. [39;49m[32;49m
0x7fb6e779b869    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e779b86d    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e779b871    4983ee08                sub r14, 0x8                                           [39;49m[32;49m
0x7fb6e779b875    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'bttt' :: codeSize = 843
Word : 0x00007fb6e4c3e0a0 :: Compiled at : 0x00007fb6e779b52a
 =============================
::> 'wdiss' was called at namespaces/compiler/c_syntax.csl 422.9 <::

btt
btt = a
bt.a16_123 = 0x1234 
bt.a32_123 = 0x12345678 
bt.a64_123 = 0x123456789abcdef0 
bt.u32_123 = 0x1234567 
bt.a8_123 = a 
bt.b8_123 = b 
bt.c8_123 = c 
btt = !
Dump at : namespaces/compiler/c_syntax.csl : 423.11 :
Dump : Address = 0x00007fb6e4d20edc : Number = 28 :: (little endian dump)
0x00007fb6e4d20edc :  61 f0 de bc 9a 78 56 34  12 62 63 67 45 23 01 00  a....xV4 .bcgE#.. 
0x00007fb6e4d20eec :  00 00 00 78 56 34 12 00  34 12 00 00 00 00 00 00  ...xV4.. 4....... 
 0x3456789abcdef061

0x00007fb6e4d20edc  byte                 a8_123                   = 'a' : 0x61
0x00007fb6e4d20edd  int64                a64_123                  = 0x123456789abcdef0
0x00007fb6e4d20ee5  byte                 b8_123                   = 'b' : 0x62
0x00007fb6e4d20ee6  byte                 c8_123                   = 'c' : 0x63
0x00007fb6e4d20ee7  int64                u64_123                  = 0x0000000001234567
0x00007fb6e4d20ee7  int32                u32_123                  = 0x01234567
0x00007fb6e4d20ee7  int8                 u8_123                   = 'g' : 0x67
0x00007fb6e4d20eef  int32                a32_123                  = 0x12345678
0x00007fb6e4d20ef3  byte                 d8_123                   = ' ' : 0x00
0x00007fb6e4d20ef4  int16                a16_123                  = 0x1234
typeChecking is on, optimize is on, inlining is on, infixMode is off, 
prefixMode is off, c_syntax is off, postfixMode is on
Debug is off. Verbosity = 1. Console = 0, NumberBase = 10.
DebugSourceCode on : BigNum off : Lisp off : jcc8 off
interpreting : at namespaces/compiler/c_syntax.csl : 430.9
SignalExceptionsHandled = 0 ; SigSegvs = 0 ; Restarts = 0
StartedTimes = 1 ; RestartCondition = INITIAL_START ; LastRestartCondtion = csl_RUN_INIT
InNamespace = C.Experimental
dlnode size : 16 bytes, dllist size : 24 bytes, dobject size : 32 bytes, DLNode size : 88 bytes, AttributeInfo size : 56 bytes, 
Object size : 64 bytes, Symbol size : 224 bytes, Word size : 224 bytes, ListObject size : 224 bytes, WordData size : 216 bytes, 
Context size : 536 bytes, System size : 176 bytes, Debugger size : 872 bytes, MemorySpace size : 448 bytes, 
ReadLiner size : 2304 bytes, Lexer size : 280 bytes, Interpreter size : 96 bytes, Finder size : 24 bytes, Compiler size : 440 bytes, 
ByteArray size : 504 bytes, NamedByteArray size : 592 bytes, MemChunk size : 224 bytesCSL size : 3600 bytes, OpenVimTil size : 1080 bytes
_CSL_SystemState_Print :: DObjectCreateCount = 6157 : WordCreateCount = 7279 : WordsAdded = 3034 : FindWordCount = 92 : FindWordMaxCount = 109
RecycledWordCount : 4
WordsInRecycling : 0
MPFR library: 4.0.2       
MPFR header:  4.0.2 (based on 4.0.2)
BigNum Internal Bit Precision = 16
BigNum :: Width = 0 : Precision = 0 
Word size =  240 
WordData size =  344 
DLNode size =  80 
dobject size =  32 
AttributeInfo size =  48
 =============================
Experimental.[34;49mWord[39;49m <:> structure : size = 240, [34;49mWord[39;49m alias for [34;49m_Identifier[39;49m, immediate
SourceCode for Experimental.[34;49m_Identifier[39;49m :> 
[34;49mtypedef struct _Identifier { DLNode S_Node ; int64 Slots ; int64 CodeSize ; byte * S_Name ; uint64 State ; union { uint64 S_Value ; byte * S_BytePtr ; byte * S_Object ; } ; dllist * S_SymbolList ; uint64 S_DObjectValue ; uint64 * S_PtrToValue ; union { struct _Identifier * S_ContainingNamespace ; struct _Identifier * S_ContainingList ; struct _Identifier * S_Prototype ; } ; union { uint64 S_Value2 ; dlnode * S_Node2 ; byte * S_pb_Data2 ; } ; union { uint64 S_Value3 ; dlnode * S_Node3 ; byte * S_pb_Data3 ; } ; block Definition ; dllist * DebugWordList ; int64 StartCharRlIndex ; int64 SC_WordIndex, SC_FileIndex_Start, SC_FileIndex_End ; struct _Identifier * CSLWord, * BaseObject ; struct _WordData * W_WordData ; } Identifier, ID, Word, Namespace, Vocabulary, Class, DynamicObject, DObject, ListObject, Symbol, MemChunk, HistoryStringNode, Buffer ; [39;49m
Source code file location of [34;49mWord[39;49m : "namespaces/wordTypeDef.csl" : 235.18 :: we are now at : namespaces/compiler/c_syntax.csl : 436.9
Compiled with : optimizeOn, inlineOn, c_syntaxOn, infixOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xe5fe7c00 -- code size = 34 bytes
 -----------------------------
Word :: Experimental.[34;49mWord[39;49m : definition = 0x00007fb6e5fe7c00 : disassembly at namespaces/compiler/c_syntax.csl : 436.9 :[32;49m
0x7fb6e5fe7c00    48bfd873c3e4b67f0000    mov rdi, 0x7fb6e4c373d8                                [39;49m[32;49m
0x7fb6e5fe7c0a    49b8102b7c892d560000    mov r8, 0x562d897c2b10                                 [39;49m[32;49m
0x7fb6e5fe7c14    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e5fe7c1e    49ffd1                  call r9                    	< C compiler code >        [39;49m[32;49m
0x7fb6e5fe7c21    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'Word' :: codeSize = 33
Word : 0x00007fb6e4c3aef0 :: Compiled at : 0x00007fb6e5fe7c00
 =============================
::> 'wdiss' was called at namespaces/compiler/c_syntax.csl 436.9 <::

typeChecking is on, optimize is on, inlining is on, infixMode is off, 
prefixMode is off, c_syntax is off, postfixMode is on
Debug is off. Verbosity = 1. Console = 0, NumberBase = 10.
DebugSourceCode on : BigNum off : Lisp off : jcc8 off
interpreting : at namespaces/test/dev0.csl : 14.7
SignalExceptionsHandled = 0 ; SigSegvs = 0 ; Restarts = 0
StartedTimes = 1 ; RestartCondition = INITIAL_START ; LastRestartCondtion = csl_RUN_INIT
InNamespace = Root.User
 =============================
Logic.[34;49mtx1[39;49m <:> csl compiled word
SourceCode for Logic.[34;49mtx1[39;49m :> 
[34;49m: tx1 0 ! ! 8 2 / 2 / 3 & 4 | 1 + + ; [39;49m
Source code file location of [34;49mtx1[39;49m : "namespaces/test/dev0.csl" : 25.2 :: we are now at : namespaces/test/dev0.csl : 26.17
Compiled with : optimizeOn, inlineOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xe779b8f6 -- code size = 131 bytes
TypeSignature : 
 -----------------------------
Word :: Logic.[34;49mtx1[39;49m : definition = 0x00007fb6e779b8f6 : disassembly at namespaces/test/dev0.csl : 26.17 :
[34;49m ..                                 : tx1 [39;49m[33;40m0[39;49m[34;49m ! ! 8 2 / 2 / 3 & 4 | 1 + + ;  .. [39;49m[32;49m
0x7fb6e779b8f6    48c7c000000000          mov rax, 0x0                                           [39;49m
[34;49m ..                               : tx1 0 [39;49m[33;40m![39;49m[34;49m ! 8 2 / 2 / 3 & 4 | 1 + + ;  .. [39;49m[32;49m
0x7fb6e779b8fd    4885c0                  test rax, rax                                          [39;49m[32;49m
0x7fb6e779b900    7409                    jz 0xe779b90b                                          [39;49m[32;49m
0x7fb6e779b902    48c7c000000000          mov rax, 0x0                                           [39;49m[32;49m
0x7fb6e779b909    eb07                    jmp 0x7fb6e779b912         	< Logic.[34;49mtx1[39;49m+28[32;49m >[39;49m[39;49m[32;49m
0x7fb6e779b90b    48c7c001000000          mov rax, 0x1                                           [39;49m
[34;49m ..                             : tx1 0 ! [39;49m[33;40m![39;49m[34;49m 8 2 / 2 / 3 & 4 | 1 + + ;  .. [39;49m[32;49m
0x7fb6e779b912    4885c0                  test rax, rax                                          [39;49m[32;49m
0x7fb6e779b915    7409                    jz 0xe779b920                                          [39;49m[32;49m
0x7fb6e779b917    48c7c000000000          mov rax, 0x0                                           [39;49m[32;49m
0x7fb6e779b91e    eb07                    jmp 0x7fb6e779b927         	< Logic.[34;49mtx1[39;49m+49[32;49m >[39;49m[39;49m[32;49m
0x7fb6e779b920    48c7c001000000          mov rax, 0x1                                           [39;49m[32;49m
0x7fb6e779b927    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e779b92b    498906                  mov [r14], rax                                         [39;49m
[34;49m ..                           : tx1 0 ! ! [39;49m[33;40m8[39;49m[34;49m 2 / 2 / 3 & 4 | 1 + + ;  .. [39;49m[32;49m
0x7fb6e779b92e    48c7c004000000          mov rax, 0x4                                           [39;49m
[34;49m ..                     : tx1 0 ! ! 8 2 / [39;49m[33;40m2[39;49m[34;49m / 3 & 4 | 1 + + ;  .. [39;49m[32;49m
0x7fb6e779b935    48c7c102000000          mov rcx, 0x2                                           [39;49m
[34;49m ..                   : tx1 0 ! ! 8 2 / 2 [39;49m[33;40m/[39;49m[34;49m 3 & 4 | 1 + + ;  .. [39;49m[32;49m
0x7fb6e779b93c    48c7c200000000          mov rdx, 0x0                                           [39;49m[32;49m
0x7fb6e779b943    48f7f9                  idiv rcx                                               [39;49m
[34;49m ..                 : tx1 0 ! ! 8 2 / 2 / [39;49m[33;40m3[39;49m[34;49m & 4 | 1 + + ;  .. [39;49m[32;49m
0x7fb6e779b946    48c7c103000000          mov rcx, 0x3                                           [39;49m
[34;49m ..               : tx1 0 ! ! 8 2 / 2 / 3 [39;49m[33;40m&[39;49m[34;49m 4 | 1 + + ;  .. [39;49m[32;49m
0x7fb6e779b94d    4823c1                  and rax, rcx                                           [39;49m
[34;49m ..             : tx1 0 ! ! 8 2 / 2 / 3 & [39;49m[33;40m4[39;49m[34;49m | 1 + + ;  .. [39;49m[32;49m
0x7fb6e779b950    48c7c104000000          mov rcx, 0x4                                           [39;49m
[34;49m ..           : tx1 0 ! ! 8 2 / 2 / 3 & 4 [39;49m[33;40m|[39;49m[34;49m 1 + + ;  .. [39;49m[32;49m
0x7fb6e779b957    480bc1                  or rax, rcx                                            [39;49m
[34;49m ..         : tx1 0 ! ! 8 2 / 2 / 3 & 4 | [39;49m[33;40m1[39;49m[34;49m + + ;  .. [39;49m[32;49m
0x7fb6e779b95a    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m ..       : tx1 0 ! ! 8 2 / 2 / 3 & 4 | 1 [39;49m[33;40m+[39;49m[34;49m + ;  .. [39;49m[32;49m
0x7fb6e779b961    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fb6e779b964    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fb6e779b967    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fb6e779b96a    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m ..     : tx1 0 ! ! 8 2 / 2 / 3 & 4 | 1 + [39;49m[33;40m+[39;49m[34;49m ;  .. [39;49m[32;49m
0x7fb6e779b96e    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fb6e779b971    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e779b975    498906                  mov [r14], rax                                         [39;49m
[34;49m ..   : tx1 0 ! ! 8 2 / 2 / 3 & 4 | 1 + + [39;49m[33;40m;[39;49m[34;49m  .. [39;49m[32;49m
0x7fb6e779b978    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'tx1' :: codeSize = 130
Word : 0x00007fb6e4c4a3c0 :: Compiled at : 0x00007fb6e779b8f6
 =============================
::> 'wdiss' was called at namespaces/test/dev0.csl 26.17 <::

 =============================
C_Syntax.[34;49mfactoriali[39;49m <:> csl compiled word, prefix
SourceCode for C_Syntax.[34;49mfactoriali[39;49m :> 
[34;49mint factoriali ( REG n | REG res ) { res = 1; while ( n >= 2 ) { res = res * n-- ; } return res; } [39;49m
Source code file location of [34;49mfactoriali[39;49m : "namespaces/test/dev0.csl" : 34.15 :: we are now at : namespaces/test/dev0.csl : 51.27
Compiled with : optimizeOn, inlineOn, c_syntaxOn, infixOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xe779b98d -- code size = 33 bytes
TypeSignature : 
 -----------------------------
Word :: C_Syntax.[34;49mfactoriali[39;49m : definition = 0x00007fb6e779b98d : disassembly at namespaces/test/dev0.csl : 51.27 :
[34;49m ..                                   int [39;49m[33;40mfactoriali[39;49m[34;49m ( REG n | REG res ) { res = 1; while ( n >= 2 ) { res = res * n-- ;  } return res; }  .. [39;49m[32;49m
0x7fb6e779b98d    498b3e                  mov rdi, [r14]                                         [39;49m
[34;49m .. actoriali ( REG n | REG res ) { res = [39;49m[33;40m1[39;49m[34;49m; while ( n >= 2 ) { res = res * n-- ;  } return res; } [39;49m[32;49m
0x7fb6e779b990    48c7c601000000          mov rsi, 0x1                                           [39;49m
[34;49m .. EG n | REG res ) { res = 1; while ( n [39;49m[33;40m>=[39;49m[34;49m 2 ) { res = res * n-- ;  } return res; } [39;49m[32;49m
0x7fb6e779b997    4883ff02                cmp rdi, 0x2                                           [39;49m[32;49m
0x7fb6e779b99b    0f8c09000000            jl 0x7fb6e779b9aa          	< C_Syntax.[34;49mfactoriali[39;49m+29[32;49m >[39;49m[39;49m
[34;49m .. res = 1; while ( n >= 2 ) { res = res [39;49m[33;40m*[39;49m[34;49m n-- ;  } return res; } [39;49m[32;49m
0x7fb6e779b9a1    480faff7                imul rsi, rdi                                          [39;49m
[34;49m ..  = 1; while ( n >= 2 ) { res = res * n[39;49m[33;40m--[39;49m[34;49m ;  } return res; } [39;49m[32;49m
0x7fb6e779b9a5    48ffcf                  dec rdi                                                [39;49m
[34;49m int factoriali ( REG n | REG res ) { res [39;49m[33;40mstore[39;49m[34;49mwhile ( n >= 2 ) { res = res * n-- ;  } return res; }  .. [39;49m[32;49m
0x7fb6e779b9a8    ebed                    jmp 0x7fb6e779b997         	< C_Syntax.[34;49mfactoriali[39;49m+10[32;49m >[39;49m[39;49m
[34;49m ..  >= 2 ) { res = res * n-- ;  } return [39;49m[33;40mres[39;49m[34;49m; } [39;49m[32;49m
0x7fb6e779b9aa    498936                  mov [r14], rsi                                         [39;49m[32;49m
0x7fb6e779b9ad    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'factoriali' :: codeSize = 32
Word : 0x00007fb6e4c4b4f0 :: Compiled at : 0x00007fb6e779b98d
 =============================
::> 'wdiss' was called at namespaces/test/dev0.csl 51.27 <::
 5040
 =============================
C.[34;49mfactorial[39;49m <:> csl compiled word
SourceCode for C.[34;49mfactorial[39;49m :> 
[34;49m: factorial ( REG n | REG rec ) rec 1 = { n @ 1 > } { rec @ n @ * rec store n -- } while return ( rec @ ) ; [39;49m
Source code file location of [34;49mfactorial[39;49m : "namespaces/test/bigNum.csl" : 12.2 :: we are now at : namespaces/test/dev0.csl : 62.14
Compiled with : optimizeOn, inlineOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xe793dcf9 -- code size = 33 bytes
TypeSignature : 
 -----------------------------
Word :: C.[34;49mfactorial[39;49m : definition = 0x00007fb6e793dcf9 : disassembly at namespaces/test/dev0.csl : 62.14 :
[34;49m ..                           : factorial [39;49m[33;40m([39;49m[34;49m REG n | REG rec ) rec 1 = { n @ 1 > } { rec @ n @ * rec store n -- } while return ( rec @ ) ;  .. [39;49m[32;49m
0x7fb6e793dcf9    498b3e                  mov rdi, [r14]                                         [39;49m
[34;49m ..   : factorial ( REG n | REG rec ) rec [39;49m[33;40m1[39;49m[34;49m = { n @ 1 > } { rec @ n @ * rec store n -- } while return ( rec @ ) ;  .. [39;49m[32;49m
0x7fb6e793dcfc    48c7c601000000          mov rsi, 0x1                                           [39;49m
[34;49m .. l ( REG n | REG rec ) rec 1 = { n @ 1 [39;49m[33;40m>[39;49m[34;49m } { rec @ n @ * rec store n -- } while return ( rec @ ) ; [39;49m[32;49m
0x7fb6e793dd03    4883ff01                cmp rdi, 0x1                                           [39;49m[32;49m
0x7fb6e793dd07    0f8e09000000            jle 0x7fb6e793dd16         	< C.[34;49mfactorial[39;49m+29[32;49m >[39;49m[39;49m
[34;49m .. rec ) rec 1 = { n @ 1 > } { rec @ n @ [39;49m[33;40m*[39;49m[34;49m rec store n -- } while return ( rec @ ) ; [39;49m[32;49m
0x7fb6e793dd0d    480faff7                imul rsi, rdi                                          [39;49m
[34;49m .. { n @ 1 > } { rec @ n @ * rec store n [39;49m[33;40m--[39;49m[34;49m } while return ( rec @ ) ; [39;49m[32;49m
0x7fb6e793dd11    48ffcf                  dec rdi                                                [39;49m
[34;49m .. : factorial ( REG n | REG rec ) rec 1 [39;49m[33;40m=[39;49m[34;49m { n @ 1 > } { rec @ n @ * rec store n -- } while return ( rec @ ) ;  .. [39;49m[32;49m
0x7fb6e793dd14    ebed                    jmp 0x7fb6e793dd03         	< C.[34;49mfactorial[39;49m+10[32;49m >[39;49m[39;49m
[34;49m .. c store n -- } while return ( rec @ ) [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fb6e793dd16    498936                  mov [r14], rsi                                         [39;49m[32;49m
0x7fb6e793dd19    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'factorial' :: codeSize = 32
Word : 0x00007fb6e78efdf8 :: Compiled at : 0x00007fb6e793dcf9
 =============================
::> 'wdiss' was called at namespaces/test/dev0.csl 62.14 <::
 5040
 =============================
C.[34;49mfac[39;49m <:> csl compiled word
SourceCode for C.[34;49mfac[39;49m :> 
[34;49m: fac ( n | rec ) rec 1 = { n @ 1 > } { n @ rec @ * rec store n -- } while return rec @ ; [39;49m
Source code file location of [34;49mfac[39;49m : "namespaces/test/dev0.csl" : 65.2 :: we are now at : namespaces/test/dev0.csl : 70.17
Compiled with : optimizeOn, inlineOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xe779b9eb -- code size = 84 bytes
TypeSignature : 
 -----------------------------
Word :: C.[34;49mfac[39;49m : definition = 0x00007fb6e779b9eb : disassembly at namespaces/test/dev0.csl : 70.17 :
[34;49m ..                                     : [39;49m[33;40mfac[39;49m[34;49m ( n | rec )  rec 1 =  { n @ 1 > } { n @ rec @ * rec store n -- } while  return rec @ ;  .. [39;49m[32;49m
0x7fb6e779b9eb    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fb6e779b9ef    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e779b9f3    4981c610000000          add r14, 0x10                                          [39;49m
[34;49m ..                    : fac ( n | rec )  [39;49m[33;40mrec[39;49m[34;49m 1 =  { n @ 1 > } { n @ rec @ * rec store n -- } while  return rec @ ;  .. [39;49m[32;49m
0x7fb6e779b9fa    498d4708                lea rax, [r15+0x8]                                     [39;49m
[34;49m ..                : fac ( n | rec )  rec [39;49m[33;40m1[39;49m[34;49m =  { n @ 1 > } { n @ rec @ * rec store n -- } while  return rec @ ;  .. [39;49m[32;49m
0x7fb6e779b9fe    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m ..              : fac ( n | rec )  rec 1 [39;49m[33;40m=[39;49m[34;49m  { n @ 1 > } { n @ rec @ * rec store n -- } while  return rec @ ;  .. [39;49m[32;49m
0x7fb6e779ba05    488908                  mov [rax], rcx                                         [39;49m
[34;49m ..         : fac ( n | rec )  rec 1 =  { [39;49m[33;40mn[39;49m[34;49m @ 1 > } { n @ rec @ * rec store n -- } while  return rec @ ;  .. [39;49m[32;49m
0x7fb6e779ba08    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m ..   : fac ( n | rec )  rec 1 =  { n @ 1 [39;49m[33;40m>[39;49m[34;49m } { n @ rec @ * rec store n -- } while  return rec @ ;  .. [39;49m[32;49m
0x7fb6e779ba0c    4883f801                cmp rax, 0x1                                           [39;49m[32;49m
0x7fb6e779ba10    0f8e19000000            jle 0x7fb6e779ba2f         	< C.[34;49mfac[39;49m+68[32;49m >[39;49m[39;49m
[34;49m: fac ( n | rec )  rec 1 =  { n @ 1 > } { [39;49m[33;40mn[39;49m[34;49m @ rec @ * rec store n -- } while  return rec @ ;  .. [39;49m[32;49m
0x7fb6e779ba16    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. n | rec )  rec 1 =  { n @ 1 > } { n @ [39;49m[33;40mrec[39;49m[34;49m @ * rec store n -- } while  return rec @ ; [39;49m[32;49m
0x7fb6e779ba1a    498b4f08                mov rcx, [r15+0x8]                                     [39;49m
[34;49m .. c )  rec 1 =  { n @ 1 > } { n @ rec @ [39;49m[33;40m*[39;49m[34;49m rec store n -- } while  return rec @ ; [39;49m[32;49m
0x7fb6e779ba1e    480fafc1                imul rax, rcx                                          [39;49m
[34;49m .. )  rec 1 =  { n @ 1 > } { n @ rec @ * [39;49m[33;40mrec[39;49m[34;49m store n -- } while  return rec @ ; [39;49m[32;49m
0x7fb6e779ba22    498d4f08                lea rcx, [r15+0x8]                                     [39;49m
[34;49m .. ec 1 =  { n @ 1 > } { n @ rec @ * rec [39;49m[33;40mstore[39;49m[34;49m n -- } while  return rec @ ; [39;49m[32;49m
0x7fb6e779ba26    488901                  mov [rcx], rax                                         [39;49m
[34;49m .. { n @ 1 > } { n @ rec @ * rec store n [39;49m[33;40m--[39;49m[34;49m } while  return rec @ ; [39;49m[32;49m
0x7fb6e779ba29    49ff4ff8                dec qword [r15-0x8]                                    [39;49m
[34;49m ..  @ 1 > } { n @ rec @ * rec store n -- [39;49m[33;40m}[39;49m[34;49m while  return rec @ ; [39;49m[32;49m
0x7fb6e779ba2d    ebd9                    jmp 0x7fb6e779ba08         	< C.[34;49mfac[39;49m+29[32;49m >[39;49m[39;49m[32;49m
0x7fb6e779ba2f    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m ..  rec store n -- } while  return rec @ [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fb6e779ba33    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e779ba37    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m
[34;49m .. ec @ * rec store n -- } while  return [39;49m[33;40mrec[39;49m[34;49m @ ; [39;49m[32;49m
0x7fb6e779ba3b    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e779ba3e    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'fac' :: codeSize = 83
Word : 0x00007fb6e4c50f30 :: Compiled at : 0x00007fb6e779b9eb
 =============================
::> 'wdiss' was called at namespaces/test/dev0.csl 70.17 <::
 5040
 =============================
C.[34;49mfactorial[39;49m <:> csl compiled word
SourceCode for C.[34;49mfactorial[39;49m :> 
[34;49m: factorial ( REG n | REG rec ) rec 1 = { n @ 1 > } { rec @ n @ * rec store n -- } while return rec ; [39;49m
Source code file location of [34;49mfactorial[39;49m : "namespaces/test/dev0.csl" : 73.2 :: we are now at : namespaces/test/dev0.csl : 74.22
Compiled with : optimizeOn, inlineOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xe779ba53 -- code size = 33 bytes
TypeSignature : 
 -----------------------------
Word :: C.[34;49mfactorial[39;49m : definition = 0x00007fb6e779ba53 : disassembly at namespaces/test/dev0.csl : 74.22 :
[34;49m ..                           : factorial [39;49m[33;40m([39;49m[34;49m REG n | REG rec ) rec 1 = { n @ 1 > } { rec @ n @ * rec store n -- } while return rec ;  .. [39;49m[32;49m
0x7fb6e779ba53    498b3e                  mov rdi, [r14]                                         [39;49m
[34;49m ..   : factorial ( REG n | REG rec ) rec [39;49m[33;40m1[39;49m[34;49m = { n @ 1 > } { rec @ n @ * rec store n -- } while return rec ;  .. [39;49m[32;49m
0x7fb6e779ba56    48c7c601000000          mov rsi, 0x1                                           [39;49m
[34;49m .. l ( REG n | REG rec ) rec 1 = { n @ 1 [39;49m[33;40m>[39;49m[34;49m } { rec @ n @ * rec store n -- } while return rec ; [39;49m[32;49m
0x7fb6e779ba5d    4883ff01                cmp rdi, 0x1                                           [39;49m[32;49m
0x7fb6e779ba61    0f8e09000000            jle 0x7fb6e779ba70         	< C.[34;49mfactorial[39;49m+29[32;49m >[39;49m[39;49m
[34;49m .. rec ) rec 1 = { n @ 1 > } { rec @ n @ [39;49m[33;40m*[39;49m[34;49m rec store n -- } while return rec ; [39;49m[32;49m
0x7fb6e779ba67    480faff7                imul rsi, rdi                                          [39;49m
[34;49m .. { n @ 1 > } { rec @ n @ * rec store n [39;49m[33;40m--[39;49m[34;49m } while return rec ; [39;49m[32;49m
0x7fb6e779ba6b    48ffcf                  dec rdi                                                [39;49m
[34;49m .. : factorial ( REG n | REG rec ) rec 1 [39;49m[33;40m=[39;49m[34;49m { n @ 1 > } { rec @ n @ * rec store n -- } while return rec ;  .. [39;49m[32;49m
0x7fb6e779ba6e    ebed                    jmp 0x7fb6e779ba5d         	< C.[34;49mfactorial[39;49m+10[32;49m >[39;49m[39;49m
[34;49m .. @ * rec store n -- } while return rec [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fb6e779ba70    498936                  mov [r14], rsi                                         [39;49m[32;49m
0x7fb6e779ba73    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'factorial' :: codeSize = 32
Word : 0x00007fb6e4c53728 :: Compiled at : 0x00007fb6e779ba53
 =============================
::> 'wdiss' was called at namespaces/test/dev0.csl 74.22 <::
 5040 factorial  : ok


 namespaces/test/dev0.csl 76.12[34;49m 
starting Lisp
 stack is ...[39;49m
DataStack at : [34;49mnamespaces/test/dev0.csl : 76.52[39;49m :
DataStack depth =   3 : Dsp (R14) = Top = 0x00007fb6e7cd3a58, InitialTos = 0x00007fb6e7cd3a40, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fb6e7cd3a58 > = 0x0000000000000005	
  DataStack   [  -1 ] < 0x00007fb6e7cd3a50 > = 0x0000000000000005	
  DataStack   [  -2 ] < 0x00007fb6e7cd3a48 > = 0x0000000000000005	
[39;49m g23
[39;49m 7
[39;49m 7
[39;49m q1x0
[39;49m 7
[39;49m h01
[39;49m 7
[39;49m 7
[39;49m average

 =============================
LispDefines.[34;49maverage[39;49m <:> variable[34;49maverage[39;49m <:> lambdaCalculus compiled word
SourceCode for LispDefines.[34;49maverage[39;49m :> 
[34;49m(define average (/\ ( n0 n1 )(/ ( + n0 n1 ) 2 )))[39;49m
Source code file location of [34;49maverage[39;49m : "namespaces/test/dev0.csl" : 89.48 :: we are now at : namespaces/test/dev0.csl : 90.24
Compiled with : optimizeOn, inlineOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp on : Word Source Code on
starting at address : 0xe779ba79 -- code size = 66 bytes
 -----------------------------
Word :: LispDefines.[34;49maverage[39;49m : definition = 0x00007fb6e779ba79 : disassembly at namespaces/test/dev0.csl : 90.24 :[32;49m
0x7fb6e779ba79    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fb6e779ba7d    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e779ba81    4981c608000000          add r14, 0x8                                           [39;49m[32;49m
0x7fb6e779ba88    498b47f0                mov rax, [r15-0x10]                                    [39;49m[32;49m
0x7fb6e779ba8c    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e779ba90    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fb6e779ba93    48c7c102000000          mov rcx, 0x2                                           [39;49m[32;49m
0x7fb6e779ba9a    48c7c200000000          mov rdx, 0x0                                           [39;49m[32;49m
0x7fb6e779baa1    48f7f9                  idiv rcx                                               [39;49m[32;49m
0x7fb6e779baa4    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e779baa8    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e779baab    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e779baaf    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e779bab3    4983ee08                sub r14, 0x8                                           [39;49m[32;49m
0x7fb6e779bab7    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e779baba    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'average' :: codeSize = 65
Word : 0x00007fb6e5df58c0 :: Compiled at : 0x00007fb6e779ba79
 =============================
::> 'wdiss' was called at namespaces/test/dev0.csl 90.24 <::
[39;49m 77
  : should show 77[39;49m 7
[39;49m fib

 =============================
LispDefines.[34;49mfib[39;49m <:> variable[34;49mfib[39;49m <:> lambdaCalculus compiled word
SourceCode for LispDefines.[34;49mfib[39;49m :> 
[34;49m(define fib (lambda (n) ( ifElse (< n 2) n (+ (fib (- n 1)) (fib (- n 2))))))[39;49m
Source code file location of [34;49mfib[39;49m : "namespaces/test/dev0.csl" : 94.76 :: we are now at : namespaces/test/dev0.csl : 95.20
Compiled with : optimizeOn, inlineOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp on : Word Source Code on
starting at address : 0xe779bac0 -- code size = 130 bytes
 -----------------------------
Word :: LispDefines.[34;49mfib[39;49m : definition = 0x00007fb6e779bac0 : disassembly at namespaces/test/dev0.csl : 95.20 :[32;49m
0x7fb6e779bac0    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fb6e779bac4    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e779bac8    4981c608000000          add r14, 0x8                                           [39;49m[32;49m
0x7fb6e779bacf    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e779bad3    4883f802                cmp rax, 0x2                                           [39;49m[32;49m
0x7fb6e779bad7    0f8d10000000            jge 0x7fb6e779baed         	< LispDefines.[34;49mfib[39;49m+45[32;49m >[39;49m[39;49m[32;49m
0x7fb6e779badd    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e779bae1    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e779bae5    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e779bae8    e949000000              jmp 0x7fb6e779bb36         	< LispDefines.[34;49mfib[39;49m+118[32;49m >[39;49m[39;49m[32;49m
0x7fb6e779baed    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e779baf1    48c7c101000000          mov rcx, 0x1                                           [39;49m[32;49m
0x7fb6e779baf8    482bc1                  sub rax, rcx                                           [39;49m[32;49m
0x7fb6e779bafb    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e779baff    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e779bb02    e8b9ffffff              call 0x7fb6e779bac0        	< LispDefines.[34;49mfib[39;49m : 0x00007fb6e779bac0[32;49m >[39;49m[39;49m[32;49m
0x7fb6e779bb07    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e779bb0b    48c7c102000000          mov rcx, 0x2                                           [39;49m[32;49m
0x7fb6e779bb12    482bc1                  sub rax, rcx                                           [39;49m[32;49m
0x7fb6e779bb15    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e779bb19    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e779bb1c    e89fffffff              call 0x7fb6e779bac0        	< LispDefines.[34;49mfib[39;49m : 0x00007fb6e779bac0[32;49m >[39;49m[39;49m[32;49m
0x7fb6e779bb21    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fb6e779bb24    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fb6e779bb28    4983ee10                sub r14, 0x10                                          [39;49m[32;49m
0x7fb6e779bb2c    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fb6e779bb2f    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e779bb33    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e779bb36    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e779bb3a    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e779bb3e    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e779bb41    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'fib' :: codeSize = 129
Word : 0x00007fb6e5dfa7d0 :: Compiled at : 0x00007fb6e779bac0
 =============================
::> 'wdiss' was called at namespaces/test/dev0.csl 95.20 <::
[39;49m 6765
[39;49m fib2
[39;49m 6765
[39;49m 7
[39;49m 7
[39;49m 7
[39;49m g
[39;49m h
[39;49m g1
[39;49m g2
[39;49m 7
[39;49m 7
[39;49m j
[39;49m h
[39;49m k

[39;49m 77
[39;49m 777
[39;49m 77
[39;49m 77
[39;49m 777
[34;49m 
before fib[39;49m 6765
typeChecking is on, optimize is on, inlining is on, infixMode is off, 
prefixMode is off, c_syntax is off, postfixMode is on
Debug is off. Verbosity = 1. Console = 0, NumberBase = 10.
DebugSourceCode on : BigNum off : Lisp on : jcc8 off
interpreting : at namespaces/test/dev0.csl : 129.6
SignalExceptionsHandled = 0 ; SigSegvs = 0 ; Restarts = 0
StartedTimes = 1 ; RestartCondition = INITIAL_START ; LastRestartCondtion = csl_RUN_INIT
InNamespace = Root.Lisp[39;49m fibbc

 =============================
LispDefines.[34;49mfibbc[39;49m <:> variable[34;49mfibbc[39;49m <:> lambdaCalculus compiled word
SourceCode for LispDefines.[34;49mfibbc[39;49m :> 
[34;49m(define fibbc (lambda ( n ) (ifElse (< n 2) n (+ (fibbc (- n 1)) (fibbc (- n 2))))))[39;49m
Source code file location of [34;49mfibbc[39;49m : "namespaces/test/dev0.csl" : 130.83 :: we are now at : namespaces/test/dev0.csl : 131.22
Compiled with : optimizeOn, inlineOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp on : Word Source Code on
starting at address : 0xe779bcfe -- code size = 130 bytes
 -----------------------------
Word :: LispDefines.[34;49mfibbc[39;49m : definition = 0x00007fb6e779bcfe : disassembly at namespaces/test/dev0.csl : 131.22 :[32;49m
0x7fb6e779bcfe    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fb6e779bd02    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e779bd06    4981c608000000          add r14, 0x8                                           [39;49m[32;49m
0x7fb6e779bd0d    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e779bd11    4883f802                cmp rax, 0x2                                           [39;49m[32;49m
0x7fb6e779bd15    0f8d10000000            jge 0x7fb6e779bd2b         	< LispDefines.[34;49mfibbc[39;49m+45[32;49m >[39;49m[39;49m[32;49m
0x7fb6e779bd1b    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e779bd1f    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e779bd23    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e779bd26    e949000000              jmp 0x7fb6e779bd74         	< LispDefines.[34;49mfibbc[39;49m+118[32;49m >[39;49m[39;49m[32;49m
0x7fb6e779bd2b    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e779bd2f    48c7c101000000          mov rcx, 0x1                                           [39;49m[32;49m
0x7fb6e779bd36    482bc1                  sub rax, rcx                                           [39;49m[32;49m
0x7fb6e779bd39    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e779bd3d    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e779bd40    e8b9ffffff              call 0x7fb6e779bcfe        	< LispDefines.[34;49mfibbc[39;49m : 0x00007fb6e779bcfe[32;49m >[39;49m[39;49m[32;49m
0x7fb6e779bd45    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e779bd49    48c7c102000000          mov rcx, 0x2                                           [39;49m[32;49m
0x7fb6e779bd50    482bc1                  sub rax, rcx                                           [39;49m[32;49m
0x7fb6e779bd53    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e779bd57    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e779bd5a    e89fffffff              call 0x7fb6e779bcfe        	< LispDefines.[34;49mfibbc[39;49m : 0x00007fb6e779bcfe[32;49m >[39;49m[39;49m[32;49m
0x7fb6e779bd5f    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fb6e779bd62    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fb6e779bd66    4983ee10                sub r14, 0x10                                          [39;49m[32;49m
0x7fb6e779bd6a    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fb6e779bd6d    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e779bd71    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e779bd74    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e779bd78    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e779bd7c    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e779bd7f    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'fibbc' :: codeSize = 129
Word : 0x00007fb6e5e26f68 :: Compiled at : 0x00007fb6e779bcfe
 =============================
::> 'wdiss' was called at namespaces/test/dev0.csl 131.22 <::
[39;49m 6765
[39;49m fibcc

 =============================
LispDefines.[34;49mfibcc[39;49m <:> variable[34;49mfibcc[39;49m <:> lambdaCalculus compiled word
SourceCode for LispDefines.[34;49mfibcc[39;49m :> 
[34;49m(define fibcc (lambda ( n ) (ifElse (< n 2) n (+ (fibcc (- n 1)) (fibcc (- n 2))))))[39;49m
Source code file location of [34;49mfibcc[39;49m : "namespaces/test/dev0.csl" : 134.83 :: we are now at : namespaces/test/dev0.csl : 135.22
Compiled with : optimizeOn, inlineOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp on : Word Source Code on
starting at address : 0xe779bd85 -- code size = 130 bytes
 -----------------------------
Word :: LispDefines.[34;49mfibcc[39;49m : definition = 0x00007fb6e779bd85 : disassembly at namespaces/test/dev0.csl : 135.22 :[32;49m
0x7fb6e779bd85    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fb6e779bd89    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e779bd8d    4981c608000000          add r14, 0x8                                           [39;49m[32;49m
0x7fb6e779bd94    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e779bd98    4883f802                cmp rax, 0x2                                           [39;49m[32;49m
0x7fb6e779bd9c    0f8d10000000            jge 0x7fb6e779bdb2         	< LispDefines.[34;49mfibcc[39;49m+45[32;49m >[39;49m[39;49m[32;49m
0x7fb6e779bda2    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e779bda6    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e779bdaa    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e779bdad    e949000000              jmp 0x7fb6e779bdfb         	< LispDefines.[34;49mfibcc[39;49m+118[32;49m >[39;49m[39;49m[32;49m
0x7fb6e779bdb2    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e779bdb6    48c7c101000000          mov rcx, 0x1                                           [39;49m[32;49m
0x7fb6e779bdbd    482bc1                  sub rax, rcx                                           [39;49m[32;49m
0x7fb6e779bdc0    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e779bdc4    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e779bdc7    e8b9ffffff              call 0x7fb6e779bd85        	< LispDefines.[34;49mfibcc[39;49m : 0x00007fb6e779bd85[32;49m >[39;49m[39;49m[32;49m
0x7fb6e779bdcc    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e779bdd0    48c7c102000000          mov rcx, 0x2                                           [39;49m[32;49m
0x7fb6e779bdd7    482bc1                  sub rax, rcx                                           [39;49m[32;49m
0x7fb6e779bdda    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e779bdde    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e779bde1    e89fffffff              call 0x7fb6e779bd85        	< LispDefines.[34;49mfibcc[39;49m : 0x00007fb6e779bd85[32;49m >[39;49m[39;49m[32;49m
0x7fb6e779bde6    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fb6e779bde9    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fb6e779bded    4983ee10                sub r14, 0x10                                          [39;49m[32;49m
0x7fb6e779bdf1    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fb6e779bdf4    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e779bdf8    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e779bdfb    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e779bdff    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e779be03    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e779be06    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'fibcc' :: codeSize = 129
Word : 0x00007fb6e5e2bb08 :: Compiled at : 0x00007fb6e779bd85
 =============================
::> 'wdiss' was called at namespaces/test/dev0.csl 135.22 <::
[39;49m 6765
[34;49m 
after fib[39;49m

 =============================
C.[34;49m_fib2[39;49m <:> csl compiled word
SourceCode for C.[34;49m_fib2[39;49m :> 
[34;49m: _fib2 dup 2 < ? : dup -- _fib2 swap 2 - _fib2 + ; [39;49m
Source code file location of [34;49m_fib2[39;49m : "namespaces/test/dev0.csl" : 142.2 :: we are now at : namespaces/test/dev0.csl : 143.19
Compiled with : optimizeOn, inlineOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xe779be1b -- code size = 151 bytes
TypeSignature : 
 -----------------------------
Word :: C.[34;49m_fib2[39;49m : definition = 0x00007fb6e779be1b : disassembly at namespaces/test/dev0.csl : 143.19 :
[34;49m ..                               : _fib2 [39;49m[33;40mdup[39;49m[34;49m 2 < ? : dup -- _fib2 swap 2 - _fib2 + ;  .. [39;49m[32;49m
0x7fb6e779be1b    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fb6e779be1e    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e779be22    498906                  mov [r14], rax                                         [39;49m
[34;49m ..                           : _fib2 dup [39;49m[33;40m2[39;49m[34;49m < ? : dup -- _fib2 swap 2 - _fib2 + ;  .. [39;49m[32;49m
0x7fb6e779be25    48c7c002000000          mov rax, 0x2                                           [39;49m[32;49m
0x7fb6e779be2c    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fb6e779be2f    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fb6e779be32    4983ee08                sub r14, 0x8                                           [39;49m[32;49m
0x7fb6e779be36    483bc1                  cmp rax, rcx                                           [39;49m[32;49m
0x7fb6e779be39    0f9cc0                  setl al                                                [39;49m[32;49m
0x7fb6e779be3c    480fb6c0                movzx rax, al                                          [39;49m[32;49m
0x7fb6e779be40    4885c0                  test rax, rax                                          [39;49m[32;49m
0x7fb6e779be43    0f8405000000            jz 0x7fb6e779be4e          	< C.[34;49m_fib2[39;49m+51[32;49m >[39;49m[39;49m[32;49m
0x7fb6e779be49    e963000000              jmp 0x7fb6e779beb1         	< C.[34;49m_fib2[39;49m+150[32;49m >[39;49m[39;49m
[34;49m ..                   : _fib2 dup 2 < ? : [39;49m[33;40mdup[39;49m[34;49m -- _fib2 swap 2 - _fib2 + ;  .. [39;49m[32;49m
0x7fb6e779be4e    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fb6e779be51    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e779be55    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e779be58    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fb6e779be5b    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m ..               : _fib2 dup 2 < ? : dup [39;49m[33;40m--[39;49m[34;49m _fib2 swap 2 - _fib2 + ;  .. [39;49m[32;49m
0x7fb6e779be5f    48ffc8                  dec rax                                                [39;49m[32;49m
0x7fb6e779be62    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e779be66    498906                  mov [r14], rax                                         [39;49m
[34;49m ..            : _fib2 dup 2 < ? : dup -- [39;49m[33;40m_fib2[39;49m[34;49m swap 2 - _fib2 + ;  .. [39;49m[32;49m
0x7fb6e779be69    e8adffffff              call 0x7fb6e779be1b        	< C.[34;49m_fib2[39;49m : 0x00007fb6e779be1b[32;49m >[39;49m[39;49m
[34;49m ..      : _fib2 dup 2 < ? : dup -- _fib2 [39;49m[33;40mswap[39;49m[34;49m 2 - _fib2 + ;  .. [39;49m[32;49m
0x7fb6e779be6e    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fb6e779be71    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fb6e779be75    49894ef8                mov [r14-0x8], rcx                                     [39;49m[32;49m
0x7fb6e779be79    498906                  mov [r14], rax                                         [39;49m
[34;49m .. : _fib2 dup 2 < ? : dup -- _fib2 swap [39;49m[33;40m2[39;49m[34;49m - _fib2 + ;  .. [39;49m[32;49m
0x7fb6e779be7c    48c7c002000000          mov rax, 0x2                                           [39;49m[32;49m
0x7fb6e779be83    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fb6e779be86    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fb6e779be89    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m  : _fib2 dup 2 < ? : dup -- _fib2 swap 2 [39;49m[33;40m-[39;49m[34;49m _fib2 + ;  .. [39;49m[32;49m
0x7fb6e779be8d    482bc1                  sub rax, rcx                                           [39;49m[32;49m
0x7fb6e779be90    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e779be94    498906                  mov [r14], rax                                         [39;49m
[34;49m: _fib2 dup 2 < ? : dup -- _fib2 swap 2 - [39;49m[33;40m_fib2[39;49m[34;49m + ;  .. [39;49m[32;49m
0x7fb6e779be97    e87fffffff              call 0x7fb6e779be1b        	< C.[34;49m_fib2[39;49m : 0x00007fb6e779be1b[32;49m >[39;49m[39;49m[32;49m
0x7fb6e779be9c    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fb6e779be9f    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fb6e779bea3    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m .. p 2 < ? : dup -- _fib2 swap 2 - _fib2 [39;49m[33;40m+[39;49m[34;49m ; [39;49m[32;49m
0x7fb6e779bea7    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fb6e779beaa    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e779beae    498906                  mov [r14], rax                                         [39;49m
[34;49m .. 2 < ? : dup -- _fib2 swap 2 - _fib2 + [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fb6e779beb1    c3                      ret                                                    [39;49m
Word_Disassemble : word - '_fib2' :: codeSize = 150
Word : 0x00007fb6e4c62868 :: Compiled at : 0x00007fb6e779be1b
 =============================
::> 'wdiss' was called at namespaces/test/dev0.csl 143.19 <::

 6765 6765 6765
 =============================
C.[34;49mfibPTC?[39;49m <:> csl compiled word
SourceCode for C.[34;49mfibPTC?[39;49m :> 
[34;49m: fibPTC? ( n | fn fn1 fn2 ) { fn 0 = fn1 0 = fn2 1 = } { n @ } { n n @ 1 - = } { fn1 fn2 @ = fn2 fn @ = fn fn1 @ fn2 @ + = } for return fn @ ; [39;49m
Source code file location of [34;49mfibPTC?[39;49m : "namespaces/test/dev0.csl" : 152.2 :: we are now at : namespaces/test/dev0.csl : 162.21
Compiled with : optimizeOn, inlineOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xe779bfbe -- code size = 183 bytes
TypeSignature : 
 -----------------------------
Word :: C.[34;49mfibPTC?[39;49m : definition = 0x00007fb6e779bfbe : disassembly at namespaces/test/dev0.csl : 162.21 :
[34;49m ..                                     : [39;49m[33;40mfibPTC?[39;49m[34;49m ( n | fn fn1 fn2 )  { fn 0 = fn1 0 = fn2 1 = } { n @ } { n n @ 1 - = }  {  fn1 fn2 @ =  fn2 f .. [39;49m[32;49m
0x7fb6e779bfbe    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fb6e779bfc2    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e779bfc6    4981c620000000          add r14, 0x20                                          [39;49m
[34;49m ..       : fibPTC? ( n | fn fn1 fn2 )  { [39;49m[33;40mfn[39;49m[34;49m 0 = fn1 0 = fn2 1 = } { n @ } { n n @ 1 - = }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } f .. [39;49m[32;49m
0x7fb6e779bfcd    498d4708                lea rax, [r15+0x8]                                     [39;49m
[34;49m ..    : fibPTC? ( n | fn fn1 fn2 )  { fn [39;49m[33;40m0[39;49m[34;49m = fn1 0 = fn2 1 = } { n @ } { n n @ 1 - = }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for  .. [39;49m[32;49m
0x7fb6e779bfd1    48c7c100000000          mov rcx, 0x0                                           [39;49m
[34;49m ..  : fibPTC? ( n | fn fn1 fn2 )  { fn 0 [39;49m[33;40m=[39;49m[34;49m fn1 0 = fn2 1 = } { n @ } { n n @ 1 - = }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for re .. [39;49m[32;49m
0x7fb6e779bfd8    488908                  mov [rax], rcx                                         [39;49m
[34;49m   : fibPTC? ( n | fn fn1 fn2 )  { fn 0 = [39;49m[33;40mfn1[39;49m[34;49m 0 = fn2 1 = } { n @ } { n n @ 1 - = }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for retu .. [39;49m[32;49m
0x7fb6e779bfdb    498d4710                lea rax, [r15+0x10]                                    [39;49m
[34;49m .. PTC? ( n | fn fn1 fn2 )  { fn 0 = fn1 [39;49m[33;40m0[39;49m[34;49m = fn2 1 = } { n @ } { n n @ 1 - = }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ [39;49m[32;49m
0x7fb6e779bfdf    48c7c100000000          mov rcx, 0x0                                           [39;49m
[34;49m .. C? ( n | fn fn1 fn2 )  { fn 0 = fn1 0 [39;49m[33;40m=[39;49m[34;49m fn2 1 = } { n @ } { n n @ 1 - = }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fb6e779bfe6    488908                  mov [rax], rcx                                         [39;49m
[34;49m ..  ( n | fn fn1 fn2 )  { fn 0 = fn1 0 = [39;49m[33;40mfn2[39;49m[34;49m 1 = } { n @ } { n n @ 1 - = }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fb6e779bfe9    498d4718                lea rax, [r15+0x18]                                    [39;49m
[34;49m ..  | fn fn1 fn2 )  { fn 0 = fn1 0 = fn2 [39;49m[33;40m1[39;49m[34;49m = } { n @ } { n n @ 1 - = }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fb6e779bfed    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m ..  fn fn1 fn2 )  { fn 0 = fn1 0 = fn2 1 [39;49m[33;40m=[39;49m[34;49m } { n @ } { n n @ 1 - = }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fb6e779bff4    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. 1 fn2 )  { fn 0 = fn1 0 = fn2 1 = } { [39;49m[33;40mn[39;49m[34;49m @ } { n n @ 1 - = }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fb6e779bff7    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m ..  =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } [39;49m[33;40mfor[39;49m[34;49m return fn @ ; [39;49m[32;49m
0x7fb6e779bffb    4885c0                  test rax, rax                                          [39;49m[32;49m
0x7fb6e779bffe    0f8461000000            jz 0x7fb6e779c065          	< C.[34;49mfibPTC?[39;49m+167[32;49m >[39;49m[39;49m
[34;49m .. fn2 1 = } { n @ } { n n @ 1 - = }  {  [39;49m[33;40mfn1[39;49m[34;49m fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fb6e779c004    498d4710                lea rax, [r15+0x10]                                    [39;49m
[34;49m .. 1 = } { n @ } { n n @ 1 - = }  {  fn1 [39;49m[33;40mfn2[39;49m[34;49m @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fb6e779c008    498b4f18                mov rcx, [r15+0x18]                                    [39;49m
[34;49m .. { n @ } { n n @ 1 - = }  {  fn1 fn2 @ [39;49m[33;40m=[39;49m[34;49m  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fb6e779c00c    488908                  mov [rax], rcx                                         [39;49m
[34;49m ..  @ } { n n @ 1 - = }  {  fn1 fn2 @ =  [39;49m[33;40mfn2[39;49m[34;49m fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fb6e779c00f    498d4718                lea rax, [r15+0x18]                                    [39;49m
[34;49m ..  { n n @ 1 - = }  {  fn1 fn2 @ =  fn2 [39;49m[33;40mfn[39;49m[34;49m @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fb6e779c013    498b4f08                mov rcx, [r15+0x8]                                     [39;49m
[34;49m .. n @ 1 - = }  {  fn1 fn2 @ =  fn2 fn @ [39;49m[33;40m=[39;49m[34;49m  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fb6e779c017    488908                  mov [rax], rcx                                         [39;49m
[34;49m ..  1 - = }  {  fn1 fn2 @ =  fn2 fn @ =  [39;49m[33;40mfn[39;49m[34;49m fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fb6e779c01a    498d4708                lea rax, [r15+0x8]                                     [39;49m[32;49m
0x7fb6e779c01e    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e779c022    498906                  mov [r14], rax                                         [39;49m
[34;49m .. - = }  {  fn1 fn2 @ =  fn2 fn @ =  fn [39;49m[33;40mfn1[39;49m[34;49m @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fb6e779c025    498b4710                mov rax, [r15+0x10]                                    [39;49m
[34;49m ..  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ [39;49m[33;40mfn2[39;49m[34;49m @ + =  } for return fn @ ; [39;49m[32;49m
0x7fb6e779c029    498b4f18                mov rcx, [r15+0x18]                                    [39;49m
[34;49m .. 1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ [39;49m[33;40m+[39;49m[34;49m =  } for return fn @ ; [39;49m[32;49m
0x7fb6e779c02d    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fb6e779c030    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fb6e779c033    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fb6e779c036    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m .. fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + [39;49m[33;40m=[39;49m[34;49m  } for return fn @ ; [39;49m[32;49m
0x7fb6e779c03a    488908                  mov [rax], rcx                                         [39;49m
[34;49m ..  { fn 0 = fn1 0 = fn2 1 = } { n @ } { [39;49m[33;40mn[39;49m[34;49m n @ 1 - = }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fb6e779c03d    498d47f8                lea rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e779c041    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e779c045    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  fn 0 = fn1 0 = fn2 1 = } { n @ } { n [39;49m[33;40mn[39;49m[34;49m @ 1 - = }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fb6e779c048    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. 0 = fn1 0 = fn2 1 = } { n @ } { n n @ [39;49m[33;40m1[39;49m[34;49m - = }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fb6e779c04c    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m .. = fn1 0 = fn2 1 = } { n @ } { n n @ 1 [39;49m[33;40m-[39;49m[34;49m = }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fb6e779c053    482bc1                  sub rax, rcx                                           [39;49m[32;49m
0x7fb6e779c056    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fb6e779c059    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fb6e779c05c    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m .. fn1 0 = fn2 1 = } { n @ } { n n @ 1 - [39;49m[33;40m=[39;49m[34;49m }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fb6e779c060    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. 1 0 = fn2 1 = } { n @ } { n n @ 1 - = [39;49m[33;40m}[39;49m[34;49m  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fb6e779c063    eb92                    jmp 0x7fb6e779bff7         	< C.[34;49mfibPTC?[39;49m+57[32;49m >[39;49m[39;49m[32;49m
0x7fb6e779c065    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m .. fn fn1 @ fn2 @ + =  } for return fn @ [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fb6e779c069    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e779c06d    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m
[34;49m .. @ =  fn fn1 @ fn2 @ + =  } for return [39;49m[33;40mfn[39;49m[34;49m @ ; [39;49m[32;49m
0x7fb6e779c071    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e779c074    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'fibPTC?' :: codeSize = 182
Word : 0x00007fb6e4c687d0 :: Compiled at : 0x00007fb6e779bfbe
 =============================
::> 'wdiss' was called at namespaces/test/dev0.csl 162.21 <::
 6765
 =============================
C_Syntax.[34;49mfibPTC2?[39;49m <:> csl compiled word
SourceCode for C_Syntax.[34;49mfibPTC2?[39;49m :> 
[34;49mint fibPTC2? ( n ) { int fn, fn1, fn2 ; for ( fn = 0, fn1 = 0, fn2 = 1 ; n ; n -- ) { fn1 = fn2 ; fn2 = fn ; fn = fn1 + fn2 ; } return fn ; } [39;49m
Source code file location of [34;49mfibPTC2?[39;49m : "namespaces/test/dev0.csl" : 181.9 :: we are now at : namespaces/test/dev0.csl : 192.22
Compiled with : optimizeOn, inlineOn, c_syntaxOn, infixOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xe779c1aa -- code size = 132 bytes
TypeSignature : 
 -----------------------------
Word :: C_Syntax.[34;49mfibPTC2?[39;49m : definition = 0x00007fb6e779c1aa : disassembly at namespaces/test/dev0.csl : 192.22 :
[34;49m ..                                   int [39;49m[33;40mfibPTC2?[39;49m[34;49m ( n ) { int fn, fn1, fn2 ; for ( fn = 0, fn1 = 0, fn2 = 1 ; n ; n -- )  {  fn1 = fn2 ; fn2 = .. [39;49m[32;49m
0x7fb6e779c1aa    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fb6e779c1ae    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e779c1b2    4981c620000000          add r14, 0x20                                          [39;49m
[34;49m .. ( n ) { int fn, fn1, fn2 ; for ( fn = [39;49m[33;40m0[39;49m[34;49m, fn1 = 0, fn2 = 1 ; n ; n -- )  {  fn1 = fn2 ; fn2 = fn ; fn = fn1 + fn2 ;  } return fn ; } [39;49m[32;49m
0x7fb6e779c1b9    48c7c000000000          mov rax, 0x0                                           [39;49m
[34;49m .. TC2? ( n ) { int fn, fn1, fn2 ; for ( [39;49m[33;40mfn[39;49m[34;49m = 0, fn1 = 0, fn2 = 1 ; n ; n -- )  {  fn1 = fn2 ; fn2 = fn ; fn = fn1 + fn2 ;  } return fn ; } [39;49m[32;49m
0x7fb6e779c1c0    498d4f08                lea rcx, [r15+0x8]                                     [39;49m
[34;49m .. ? ( n ) { int fn, fn1, fn2 ; for ( fn [39;49m[33;40m=[39;49m[34;49m 0, fn1 = 0, fn2 = 1 ; n ; n -- )  {  fn1 = fn2 ; fn2 = fn ; fn = fn1 + fn2 ;  } return fn ; } [39;49m[32;49m
0x7fb6e779c1c4    488901                  mov [rcx], rax                                         [39;49m
[34;49m .. nt fn, fn1, fn2 ; for ( fn = 0, fn1 = [39;49m[33;40m0[39;49m[34;49m, fn2 = 1 ; n ; n -- )  {  fn1 = fn2 ; fn2 = fn ; fn = fn1 + fn2 ;  } return fn ; } [39;49m[32;49m
0x7fb6e779c1c7    48c7c000000000          mov rax, 0x0                                           [39;49m
[34;49m ..  ) { int fn, fn1, fn2 ; for ( fn = 0, [39;49m[33;40mfn1[39;49m[34;49m = 0, fn2 = 1 ; n ; n -- )  {  fn1 = fn2 ; fn2 = fn ; fn = fn1 + fn2 ;  } return fn ; } [39;49m[32;49m
0x7fb6e779c1ce    498d4f10                lea rcx, [r15+0x10]                                    [39;49m
[34;49m ..  int fn, fn1, fn2 ; for ( fn = 0, fn1 [39;49m[33;40m=[39;49m[34;49m 0, fn2 = 1 ; n ; n -- )  {  fn1 = fn2 ; fn2 = fn ; fn = fn1 + fn2 ;  } return fn ; } [39;49m[32;49m
0x7fb6e779c1d2    488901                  mov [rcx], rax                                         [39;49m
[34;49m .. 1, fn2 ; for ( fn = 0, fn1 = 0, fn2 = [39;49m[33;40m1[39;49m[34;49m ; n ; n -- )  {  fn1 = fn2 ; fn2 = fn ; fn = fn1 + fn2 ;  } return fn ; } [39;49m[32;49m
0x7fb6e779c1d5    48c7c001000000          mov rax, 0x1                                           [39;49m
[34;49m .. fn, fn1, fn2 ; for ( fn = 0, fn1 = 0, [39;49m[33;40mfn2[39;49m[34;49m = 1 ; n ; n -- )  {  fn1 = fn2 ; fn2 = fn ; fn = fn1 + fn2 ;  } return fn ; } [39;49m[32;49m
0x7fb6e779c1dc    498d4f18                lea rcx, [r15+0x18]                                    [39;49m
[34;49m .. fn1, fn2 ; for ( fn = 0, fn1 = 0, fn2 [39;49m[33;40m=[39;49m[34;49m 1 ; n ; n -- )  {  fn1 = fn2 ; fn2 = fn ; fn = fn1 + fn2 ;  } return fn ; } [39;49m[32;49m
0x7fb6e779c1e0    488901                  mov [rcx], rax                                         [39;49m
[34;49m ..  fn2 ; for ( fn = 0, fn1 = 0, fn2 = 1 [39;49m[33;40m;[39;49m[34;49m n ; n -- )  {  fn1 = fn2 ; fn2 = fn ; fn = fn1 + fn2 ;  } return fn ; } [39;49m[32;49m
0x7fb6e779c1e3    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m ..  = fn2 ; fn2 = fn ; fn = fn1 + fn2 ;  [39;49m[33;40m}[39;49m[34;49m return fn ; } [39;49m[32;49m
0x7fb6e779c1e7    4885c0                  test rax, rax                                          [39;49m[32;49m
0x7fb6e779c1ea    0f842e000000            jz 0x7fb6e779c21e          	< C_Syntax.[34;49mfibPTC2?[39;49m+116[32;49m >[39;49m[39;49m
[34;49m .. 1 = 0, fn2 = 1 ; n ; n -- )  {  fn1 = [39;49m[33;40mfn2[39;49m[34;49m ; fn2 = fn ; fn = fn1 + fn2 ;  } return fn ; } [39;49m[32;49m
0x7fb6e779c1f0    498b4718                mov rax, [r15+0x18]                                    [39;49m
[34;49m ..  0, fn1 = 0, fn2 = 1 ; n ; n -- )  {  [39;49m[33;40mfn1[39;49m[34;49m = fn2 ; fn2 = fn ; fn = fn1 + fn2 ;  } return fn ; } [39;49m[32;49m
0x7fb6e779c1f4    498d4f10                lea rcx, [r15+0x10]                                    [39;49m
[34;49m .. fn1 = 0, fn2 = 1 ; n ; n -- )  {  fn1 [39;49m[33;40m=[39;49m[34;49m fn2 ; fn2 = fn ; fn = fn1 + fn2 ;  } return fn ; } [39;49m[32;49m
0x7fb6e779c1f8    488901                  mov [rcx], rax                                         [39;49m
[34;49m ..  1 ; n ; n -- )  {  fn1 = fn2 ; fn2 = [39;49m[33;40mfn[39;49m[34;49m ; fn = fn1 + fn2 ;  } return fn ; } [39;49m[32;49m
0x7fb6e779c1fb    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m ..  fn2 = 1 ; n ; n -- )  {  fn1 = fn2 ; [39;49m[33;40mfn2[39;49m[34;49m = fn ; fn = fn1 + fn2 ;  } return fn ; } [39;49m[32;49m
0x7fb6e779c1ff    498d4f18                lea rcx, [r15+0x18]                                    [39;49m
[34;49m ..  = 1 ; n ; n -- )  {  fn1 = fn2 ; fn2 [39;49m[33;40m=[39;49m[34;49m fn ; fn = fn1 + fn2 ;  } return fn ; } [39;49m[32;49m
0x7fb6e779c203    488901                  mov [rcx], rax                                         [39;49m
[34;49m ..  -- )  {  fn1 = fn2 ; fn2 = fn ; fn = [39;49m[33;40mfn1[39;49m[34;49m + fn2 ;  } return fn ; } [39;49m[32;49m
0x7fb6e779c206    498b4710                mov rax, [r15+0x10]                                    [39;49m
[34;49m ..  {  fn1 = fn2 ; fn2 = fn ; fn = fn1 + [39;49m[33;40mfn2[39;49m[34;49m ;  } return fn ; } [39;49m[32;49m
0x7fb6e779c20a    498b4f18                mov rcx, [r15+0x18]                                    [39;49m
[34;49m .. )  {  fn1 = fn2 ; fn2 = fn ; fn = fn1 [39;49m[33;40m+[39;49m[34;49m fn2 ;  } return fn ; } [39;49m[32;49m
0x7fb6e779c20e    4803c1                  add rax, rcx                                           [39;49m
[34;49m .. n ; n -- )  {  fn1 = fn2 ; fn2 = fn ; [39;49m[33;40mfn[39;49m[34;49m = fn1 + fn2 ;  } return fn ; } [39;49m[32;49m
0x7fb6e779c211    498d4f08                lea rcx, [r15+0x8]                                     [39;49m
[34;49m ..  n -- )  {  fn1 = fn2 ; fn2 = fn ; fn [39;49m[33;40m=[39;49m[34;49m fn1 + fn2 ;  } return fn ; } [39;49m[32;49m
0x7fb6e779c215    488901                  mov [rcx], rax                                         [39;49m
[34;49m .. or ( fn = 0, fn1 = 0, fn2 = 1 ; n ; n [39;49m[33;40m--[39;49m[34;49m )  {  fn1 = fn2 ; fn2 = fn ; fn = fn1 + fn2 ;  } return fn ; } [39;49m[32;49m
0x7fb6e779c218    49ff4ff8                dec qword [r15-0x8]                                    [39;49m
[34;49m .. ( fn = 0, fn1 = 0, fn2 = 1 ; n ; n -- [39;49m[33;40m)[39;49m[34;49m  {  fn1 = fn2 ; fn2 = fn ; fn = fn1 + fn2 ;  } return fn ; } [39;49m[32;49m
0x7fb6e779c21c    ebc5                    jmp 0x7fb6e779c1e3         	< C_Syntax.[34;49mfibPTC2?[39;49m+57[32;49m >[39;49m[39;49m[32;49m
0x7fb6e779c21e    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m ..  fn ; fn = fn1 + fn2 ;  } return fn ; [39;49m[33;40m}[39;49m[34;49m [39;49m[32;49m
0x7fb6e779c222    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e779c226    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m
[34;49m .. fn2 = fn ; fn = fn1 + fn2 ;  } return [39;49m[33;40mfn[39;49m[34;49m ; } [39;49m[32;49m
0x7fb6e779c22a    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e779c22d    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'fibPTC2?' :: codeSize = 131
Word : 0x00007fb6e4c72bf8 :: Compiled at : 0x00007fb6e779c1aa
 =============================
::> 'wdiss' was called at namespaces/test/dev0.csl 192.22 <::
 6765 9.0000000000000000  : should be 9
 
fib 200.0000000000000000 = 280594712998212601106502055196939618615296.0000000000000000

 locals fibBN :  1.0000000000000000 :  1.0000000000000000, 2.0000000000000000 :  1.0000000000000000, 3.0000000000000000 :  2.0000000000000000, 4.0000000000000000 :  3.0000000000000000, 5.0000000000000000 :  5.0000000000000000, 6.0000000000000000 :  8.0000000000000000, 7.0000000000000000 :  13.0000000000000000, 8.0000000000000000 :  21.0000000000000000, 9.0000000000000000 :  34.0000000000000000, 10.0000000000000000 :  55.0000000000000000, 11.0000000000000000 :  89.0000000000000000, 12.0000000000000000 :  144.0000000000000000, 13.0000000000000000 :  233.0000000000000000, 14.0000000000000000 :  377.0000000000000000, 15.0000000000000000 :  610.0000000000000000, 16.0000000000000000 :  987.0000000000000000, 17.0000000000000000 :  1597.0000000000000000, 18.0000000000000000 :  2584.0000000000000000, 19.0000000000000000 :  4181.0000000000000000, 20.0000000000000000 :  6765.0000000000000000, 21.0000000000000000 :  10946.0000000000000000, 22.0000000000000000 :  17711.0000000000000000, 23.0000000000000000 :  28657.0000000000000000, 24.0000000000000000 :  46368.0000000000000000, 25.0000000000000000 :  75024.0000000000000000, 26.0000000000000000 :  121392.0000000000000000, 27.0000000000000000 :  196416.0000000000000000, 28.0000000000000000 :  317808.0000000000000000, 29.0000000000000000 :  514224.0000000000000000, 30.0000000000000000 :  832032.0000000000000000, 31.0000000000000000 :  1346240.0000000000000000, 32.0000000000000000 :  2178304.0000000000000000, 33.0000000000000000 :  3524544.0000000000000000, 34.0000000000000000 :  5702912.0000000000000000, 35.0000000000000000 :  9227520.0000000000000000, 36.0000000000000000 :  14930432.0000000000000000, 37.0000000000000000 :  24158208.0000000000000000, 38.0000000000000000 :  39088128.0000000000000000, 39.0000000000000000 :  63246336.0000000000000000, 40.0000000000000000 :  102334464.0000000000000000, 41.0000000000000000 :  165580800.0000000000000000, 42.0000000000000000 :  267915264.0000000000000000, 43.0000000000000000 :  433496064.0000000000000000, 44.0000000000000000 :  701415424.0000000000000000, 45.0000000000000000 :  1134919680.0000000000000000, 46.0000000000000000 :  1836318720.0000000000000000, 47.0000000000000000 :  2971271168.0000000000000000, 48.0000000000000000 :  4807589888.0000000000000000, 49.0000000000000000 :  7778861056.0000000000000000, 50.0000000000000000 :  12586582016.0000000000000000, 51.0000000000000000 :  20365443072.0000000000000000, 52.0000000000000000 :  32952025088.0000000000000000, 53.0000000000000000 :  53317992448.0000000000000000, 54.0000000000000000 :  86270541824.0000000000000000, 55.0000000000000000 :  139586437120.0000000000000000, 56.0000000000000000 :  225854881792.0000000000000000, 57.0000000000000000 :  365441318912.0000000000000000, 58.0000000000000000 :  591296200704.0000000000000000, 59.0000000000000000 :  956737519616.0000000000000000, 60.0000000000000000 :  1548033720320.0000000000000000, 61.0000000000000000 :  2504771239936.0000000000000000, 62.0000000000000000 :  4052838514688.0000000000000000, 63.0000000000000000 :  6557609754624.0000000000000000, 64.0000000000000000 :  10610448269312.0000000000000000, 65.0000000000000000 :  17168058023936.0000000000000000, 66.0000000000000000 :  27778774728704.0000000000000000, 67.0000000000000000 :  44946832752640.0000000000000000, 68.0000000000000000 :  72726681223168.0000000000000000, 69.0000000000000000 :  117673513975808.0000000000000000, 70.0000000000000000 :  190400195198976.0000000000000000, 71.0000000000000000 :  308069414207488.0000000000000000, 72.0000000000000000 :  498473904373760.0000000000000000, 73.0000000000000000 :  806543318581248.0000000000000000, 74.0000000000000000 :  1305017222955008.0000000000000000, 75.0000000000000000 :  2111543361667072.0000000000000000, 76.0000000000000000 :  3416594944360448.0000000000000000, 77.0000000000000000 :  5528069586550784.0000000000000000, 78.0000000000000000 :  8944664530911232.0000000000000000, 79.0000000000000000 :  14472871556415488.0000000000000000, 80.0000000000000000 :  23417398648373248.0000000000000000, 81.0000000000000000 :  37890270204788736.0000000000000000, 82.0000000000000000 :  61307668853161984.0000000000000000, 83.0000000000000000 :  99197939057950720.0000000000000000, 84.0000000000000000 :  160506707422740480.0000000000000000, 85.0000000000000000 :  259704646480691200.0000000000000000, 86.0000000000000000 :  420206955856920576.0000000000000000, 87.0000000000000000 :  679902806244589568.0000000000000000, 88.0000000000000000 :  1100109762101510144.0000000000000000, 89.0000000000000000 :  1780012568346099712.0000000000000000, 90.0000000000000000 :  2880122330447609856.0000000000000000, 91.0000000000000000 :  4660099714421620736.0000000000000000, 92.0000000000000000 :  7540151676125052928.0000000000000000

 locals fibBN :  1.0000000000000000 :  1.0000000000000000, 2.0000000000000000 :  1.0000000000000000, 3.0000000000000000 :  2.0000000000000000, 4.0000000000000000 :  3.0000000000000000, 5.0000000000000000 :  5.0000000000000000, 6.0000000000000000 :  8.0000000000000000, 7.0000000000000000 :  13.0000000000000000, 8.0000000000000000 :  21.0000000000000000, 9.0000000000000000 :  34.0000000000000000, 10.0000000000000000 :  55.0000000000000000, 11.0000000000000000 :  89.0000000000000000, 12.0000000000000000 :  144.0000000000000000, 13.0000000000000000 :  233.0000000000000000, 14.0000000000000000 :  377.0000000000000000, 15.0000000000000000 :  610.0000000000000000, 16.0000000000000000 :  987.0000000000000000, 17.0000000000000000 :  1597.0000000000000000, 18.0000000000000000 :  2584.0000000000000000, 19.0000000000000000 :  4181.0000000000000000, 20.0000000000000000 :  6765.0000000000000000, 21.0000000000000000 :  10946.0000000000000000, 22.0000000000000000 :  17711.0000000000000000, 23.0000000000000000 :  28657.0000000000000000, 24.0000000000000000 :  46368.0000000000000000, 25.0000000000000000 :  75024.0000000000000000, 26.0000000000000000 :  121392.0000000000000000, 27.0000000000000000 :  196416.0000000000000000, 28.0000000000000000 :  317808.0000000000000000, 29.0000000000000000 :  514224.0000000000000000, 30.0000000000000000 :  832032.0000000000000000, 31.0000000000000000 :  1346240.0000000000000000, 32.0000000000000000 :  2178304.0000000000000000, 33.0000000000000000 :  3524544.0000000000000000, 34.0000000000000000 :  5702912.0000000000000000, 35.0000000000000000 :  9227520.0000000000000000, 36.0000000000000000 :  14930432.0000000000000000, 37.0000000000000000 :  24158208.0000000000000000, 38.0000000000000000 :  39088128.0000000000000000, 39.0000000000000000 :  63246336.0000000000000000, 40.0000000000000000 :  102334464.0000000000000000, 41.0000000000000000 :  165580800.0000000000000000, 42.0000000000000000 :  267915264.0000000000000000, 43.0000000000000000 :  433496064.0000000000000000, 44.0000000000000000 :  701415424.0000000000000000, 45.0000000000000000 :  1134919680.0000000000000000, 46.0000000000000000 :  1836318720.0000000000000000, 47.0000000000000000 :  2971271168.0000000000000000, 48.0000000000000000 :  4807589888.0000000000000000, 49.0000000000000000 :  7778861056.0000000000000000, 50.0000000000000000 :  12586582016.0000000000000000, 51.0000000000000000 :  20365443072.0000000000000000, 52.0000000000000000 :  32952025088.0000000000000000, 53.0000000000000000 :  53317992448.0000000000000000, 54.0000000000000000 :  86270541824.0000000000000000, 55.0000000000000000 :  139586437120.0000000000000000, 56.0000000000000000 :  225854881792.0000000000000000, 57.0000000000000000 :  365441318912.0000000000000000, 58.0000000000000000 :  591296200704.0000000000000000, 59.0000000000000000 :  956737519616.0000000000000000, 60.0000000000000000 :  1548033720320.0000000000000000, 61.0000000000000000 :  2504771239936.0000000000000000, 62.0000000000000000 :  4052838514688.0000000000000000, 63.0000000000000000 :  6557609754624.0000000000000000, 64.0000000000000000 :  10610448269312.0000000000000000, 65.0000000000000000 :  17168058023936.0000000000000000, 66.0000000000000000 :  27778774728704.0000000000000000, 67.0000000000000000 :  44946832752640.0000000000000000, 68.0000000000000000 :  72726681223168.0000000000000000, 69.0000000000000000 :  117673513975808.0000000000000000, 70.0000000000000000 :  190400195198976.0000000000000000, 71.0000000000000000 :  308069414207488.0000000000000000, 72.0000000000000000 :  498473904373760.0000000000000000, 73.0000000000000000 :  806543318581248.0000000000000000, 74.0000000000000000 :  1305017222955008.0000000000000000, 75.0000000000000000 :  2111543361667072.0000000000000000, 76.0000000000000000 :  3416594944360448.0000000000000000, 77.0000000000000000 :  5528069586550784.0000000000000000, 78.0000000000000000 :  8944664530911232.0000000000000000, 79.0000000000000000 :  14472871556415488.0000000000000000, 80.0000000000000000 :  23417398648373248.0000000000000000, 81.0000000000000000 :  37890270204788736.0000000000000000, 82.0000000000000000 :  61307668853161984.0000000000000000, 83.0000000000000000 :  99197939057950720.0000000000000000, 84.0000000000000000 :  160506707422740480.0000000000000000, 85.0000000000000000 :  259704646480691200.0000000000000000, 86.0000000000000000 :  420206955856920576.0000000000000000, 87.0000000000000000 :  679902806244589568.0000000000000000, 88.0000000000000000 :  1100109762101510144.0000000000000000, 89.0000000000000000 :  1780012568346099712.0000000000000000, 90.0000000000000000 :  2880122330447609856.0000000000000000, 91.0000000000000000 :  4660099714421620736.0000000000000000, 92.0000000000000000 :  7540151676125052928.0000000000000000[39;49m fibc2
[39;49m 6765
[39;49m fibbc
[39;49m 6765
[39;49m x7

[39;49m ( 1 2 3 x7 )

[39;49m ( 1 2 3 ( 7 8 9 45 ) )

[39;49m ( 1 2 3 ( 7 8 9 45 ) )

[39;49m ( 1 2 3 7 8 9 45 )

[39;49m ( 1 2 3 7 8 9 45 )

[39;49m 77
[39;49m 77
[39;49m 77
[39;49m alist
[39;49m ( 1 2 3 7 8 9 45 )
[39;49m yfac
[39;49m3628800.0000000000000000

[39;49m yfacc
[39;49m3628800.0000000000000000

[39;49m2432928961198555136.0000000000000000

[39;49m yfac
[39;49m3628800.0000000000000000

[39;49m yfacc
[39;49m3628800.0000000000000000

[39;49m2432928961198555136.0000000000000000

[39;49m yfac
[39;49m2432928961198555136.0000000000000000

[39;49m yfacc
[39;49m3628800.0000000000000000

[39;49m5040.0000000000000000

[39;49m yfac
[39;49m2432928961198555136.0000000000000000

[39;49m yfacc
[39;49m3628800.0000000000000000

[39;49m5040.0000000000000000

[39;49m yfac

 =============================
LispDefines.[34;49myfac[39;49m <:> variable[34;49myfac[39;49m <:> lambdaCalculus defined word
SourceCode for LispDefines.[34;49myfac[39;49m :> 
[34;49m(define yfac (lambda (yy n) (if* (< n 2) 1 (* n (yy yy (- n 1))))))[39;49m
Source code file location of [34;49myfac[39;49m : "namespaces/test/dev0.csl" : 285.66 :: we are now at : namespaces/test/dev0.csl : 286.21
Lambda Calculus word : interpreted not compiled
 -----------------------------
Word :: LispDefines.[34;49myfac[39;49m : definition = 0x0000000000000000 : disassembly at namespaces/test/dev0.csl : 286.21 :
Word : 0x00007fb6e49ff298 :: Compiled at : 0x0000000000000000
 =============================
::> 'wdiss' was called at namespaces/test/dev0.csl 286.21 <::
[39;49m 2432902008176640000

[39;49m yfacc
[39;49m 3628800

[39;49m 5040

[39;49m yfac
[39;49m 2432902008176640000

[39;49m yfacc
[39;49m 3628800

[39;49m 5040

[39;49m x
[39;49m a
[39;49m x1
[39;49m a1
[39;49m ( Its a beautiful day don't let it get away )
[39;49m ( Its a beautiful day don't let it get away )
[39;49m ( Its a beautiful day don't x1 it get away )
[39;49m ( Its a beautiful day don't let it get away )
[39;49m ( Its a beautiful day don't x it get away )
[39;49m ( Its a beautiful day don't x1 it get away )
[39;49m ( Its a beautiful day don't "let" it get away )
[39;49m ( Its a beautiful day don't let it get away )
[39;49m ff
[39;49m 7
[39;49m 7
[39;49m 7
[39;49m h36
[39;49m ( n09 my6 n09 my6 n09 n09 my6 my6 )
 
 should show : ( n09 my6 n09 my6 n09 n09 my6 my6 )
[39;49m n09
[39;49m my6
[39;49m ( kl0 op9 kl0 op9 kl0 kl0 op9 op9 )
 
 should show : ( kl0 op9 kl0 op9 kl0 kl0 op9 op9 )
[39;49m id
[39;49m ( "the" "the" b b )
[39;49m id1
[39;49m ( 7 7 11 11 7 7 )
[39;49m swch
[39;49m ( 11 7 )
[39;49m swch2
[39;49m ( ( 7 11 ) ( 7 11 ) )
[39;49m id2
[39;49m ( ( ( 11 7 ) ( 11 7 ) ) ( ( 11 7 ) ( 11 7 ) ) )
[39;49m id3
[39;49m ( 7 7 11 7 11 11 7 7 )
[39;49m swch3
[39;49m id4
[39;49m ( 7 7 ( ( ( 11 7 ) ( 11 7 ) ) ( ( 11 7 ) ( 11 7 ) ) ) 11 11 7 7 )
[39;49m x
[39;49m ( ( 3 4 ) ( 3 4 ) )
[39;49m x
[39;49m 7
[39;49m x
[39;49m 11
[39;49m 7
[39;49m 7
[39;49m 7
[39;49m 7
 7 ( ( lambda ( a b ) ( + a b ) ) 3 4 )
DataStack at : [34;49mnamespaces/test/dev0.csl : 353.67[39;49m :
DataStack depth =   3 : Dsp (R14) = Top = 0x00007fb6e7cd3a58, InitialTos = 0x00007fb6e7cd3a40, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fb6e7cd3a58 > = 0x0000000000000005	
  DataStack   [  -1 ] < 0x00007fb6e7cd3a50 > = 0x0000000000000005	
  DataStack   [  -2 ] < 0x00007fb6e7cd3a48 > = 0x0000000000000005	

 =============================
Root.[34;49mbexp3[39;49m <:> csl compiled word
SourceCode for Root.[34;49mbexp3[39;49m :> 
[34;49m: bexp3 ( n ) { n @ 1 > } { n @ n @ -- bexp3 * } { 1 } ifElse ; [39;49m
Source code file location of [34;49mbexp3[39;49m : "namespaces/test/dev0.csl" : 354.2 :: we are now at : namespaces/test/dev0.csl : 355.18
Compiled with : optimizeOn, inlineOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xe779c715 -- code size = 112 bytes
TypeSignature : 
 -----------------------------
Word :: Root.[34;49mbexp3[39;49m : definition = 0x00007fb6e779c715 : disassembly at namespaces/test/dev0.csl : 355.18 :
[34;49m ..                                     : [39;49m[33;40mbexp3[39;49m[34;49m ( n ) { n @ 1 > } { n @ n @ -- bexp3 * } { 1 } ifElse ;  .. [39;49m[32;49m
0x7fb6e779c715    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fb6e779c719    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e779c71d    4981c608000000          add r14, 0x8                                           [39;49m
[34;49m ..                       : bexp3 ( n ) { [39;49m[33;40mn[39;49m[34;49m @ 1 > } { n @ n @ -- bexp3 * } { 1 } ifElse ;  .. [39;49m[32;49m
0x7fb6e779c724    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m ..                 : bexp3 ( n ) { n @ 1 [39;49m[33;40m>[39;49m[34;49m } { n @ n @ -- bexp3 * } { 1 } ifElse ;  .. [39;49m[32;49m
0x7fb6e779c728    4883f801                cmp rax, 0x1                                           [39;49m[32;49m
0x7fb6e779c72c    0f8e39000000            jle 0x7fb6e779c76b         	< Root.[34;49mbexp3[39;49m+86[32;49m >[39;49m[39;49m
[34;49m ..           : bexp3 ( n ) { n @ 1 > } { [39;49m[33;40mn[39;49m[34;49m @ n @ -- bexp3 * } { 1 } ifElse ;  .. [39;49m[32;49m
0x7fb6e779c732    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e779c736    4983c608                add r14, 0x8                                           [39;49m
[34;49m ..               : bexp3 ( n ) { n @ 1 > [39;49m[33;40m}[39;49m[34;49m { n @ n @ -- bexp3 * } { 1 } ifElse ;  .. [39;49m[32;49m
0x7fb6e779c73a    498906                  mov [r14], rax                                         [39;49m
[34;49m ..       : bexp3 ( n ) { n @ 1 > } { n @ [39;49m[33;40mn[39;49m[34;49m @ -- bexp3 * } { 1 } ifElse ;  .. [39;49m[32;49m
0x7fb6e779c73d    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m ..   : bexp3 ( n ) { n @ 1 > } { n @ n @ [39;49m[33;40m--[39;49m[34;49m bexp3 * } { 1 } ifElse ;  .. [39;49m[32;49m
0x7fb6e779c741    48ffc8                  dec rax                                                [39;49m[32;49m
0x7fb6e779c744    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e779c748    498906                  mov [r14], rax                                         [39;49m
[34;49m   : bexp3 ( n ) { n @ 1 > } { n @ n @ -- [39;49m[33;40mbexp3[39;49m[34;49m * } { 1 } ifElse ;  .. [39;49m[32;49m
0x7fb6e779c74b    e8c5ffffff              call 0x7fb6e779c715        	< Root.[34;49mbexp3[39;49m : 0x00007fb6e779c715[32;49m >[39;49m[39;49m[32;49m
0x7fb6e779c750    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fb6e779c753    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fb6e779c757    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m ..  ( n ) { n @ 1 > } { n @ n @ -- bexp3 [39;49m[33;40m*[39;49m[34;49m } { 1 } ifElse ; [39;49m[32;49m
0x7fb6e779c75b    480fafc1                imul rax, rcx                                          [39;49m[32;49m
0x7fb6e779c75f    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e779c763    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  n ) { n @ 1 > } { n @ n @ -- bexp3 * [39;49m[33;40m}[39;49m[34;49m { 1 } ifElse ; [39;49m[32;49m
0x7fb6e779c766    e90e000000              jmp 0x7fb6e779c779         	< Root.[34;49mbexp3[39;49m+100[32;49m >[39;49m[39;49m
[34;49m ..  { n @ 1 > } { n @ n @ -- bexp3 * } { [39;49m[33;40m1[39;49m[34;49m } ifElse ; [39;49m[32;49m
0x7fb6e779c76b    48c7c001000000          mov rax, 0x1                                           [39;49m[32;49m
0x7fb6e779c772    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e779c776    498906                  mov [r14], rax                                         [39;49m
[34;49m .. } { n @ n @ -- bexp3 * } { 1 } ifElse [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fb6e779c779    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e779c77d    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e779c781    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e779c784    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'bexp3' :: codeSize = 111
Word : 0x00007fb6e4c8f890 :: Compiled at : 0x00007fb6e779c715
 =============================
::> 'wdiss' was called at namespaces/test/dev0.csl 355.18 <::
 5040
 =============================
C_Syntax.[34;49mfac5[39;49m <:> csl compiled word, prefix
SourceCode for C_Syntax.[34;49mfac5[39;49m :> 
[34;49mint fac5 ( REG n | REG facc ) { facc = 1 ; while ( n > 1 ) { facc = facc * (n --) ; } return facc ; } [39;49m
Source code file location of [34;49mfac5[39;49m : "namespaces/test/dev0.csl" : 358.5 :: we are now at : namespaces/test/dev0.csl : 371.21
Compiled with : optimizeOn, inlineOn, c_syntaxOn, infixOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xe779c799 -- code size = 33 bytes
TypeSignature : 
 -----------------------------
Word :: C_Syntax.[34;49mfac5[39;49m : definition = 0x00007fb6e779c799 : disassembly at namespaces/test/dev0.csl : 371.21 :
[34;49m ..                                   int [39;49m[33;40mfac5[39;49m[34;49m ( REG n | REG facc )  {  facc = 1 ; while ( n > 1 )  { facc = facc * (n --) ; } return facc ; }  .. [39;49m[32;49m
0x7fb6e779c799    498b3e                  mov rdi, [r14]                                         [39;49m
[34;49m int fac5 ( REG n | REG facc )  {  facc = [39;49m[33;40m1[39;49m[34;49m ; while ( n > 1 )  { facc = facc * (n --) ; } return facc ; }  .. [39;49m[32;49m
0x7fb6e779c79c    48c7c601000000          mov rsi, 0x1                                           [39;49m
[34;49m .. | REG facc )  {  facc = 1 ; while ( n [39;49m[33;40m>[39;49m[34;49m 1 )  { facc = facc * (n --) ; } return facc ; } [39;49m[32;49m
0x7fb6e779c7a3    4883ff01                cmp rdi, 0x1                                           [39;49m[32;49m
0x7fb6e779c7a7    0f8e09000000            jle 0x7fb6e779c7b6         	< C_Syntax.[34;49mfac5[39;49m+29[32;49m >[39;49m[39;49m
[34;49m ..  = 1 ; while ( n > 1 )  { facc = facc [39;49m[33;40m*[39;49m[34;49m (n --) ; } return facc ; } [39;49m[32;49m
0x7fb6e779c7ad    480faff7                imul rsi, rdi                                          [39;49m
[34;49m .. ; while ( n > 1 )  { facc = facc * (n [39;49m[33;40m--[39;49m[34;49m) ; } return facc ; } [39;49m[32;49m
0x7fb6e779c7b1    48ffcf                  dec rdi                                                [39;49m
[34;49m   int fac5 ( REG n | REG facc )  {  facc [39;49m[33;40mstore[39;49m[34;49m while ( n > 1 )  { facc = facc * (n --) ; } return facc ; }  .. [39;49m[32;49m
0x7fb6e779c7b4    ebed                    jmp 0x7fb6e779c7a3         	< C_Syntax.[34;49mfac5[39;49m+10[32;49m >[39;49m[39;49m
[34;49m ..  )  { facc = facc * (n --) ; } return [39;49m[33;40mfacc[39;49m[34;49m ; } [39;49m[32;49m
0x7fb6e779c7b6    498936                  mov [r14], rsi                                         [39;49m[32;49m
0x7fb6e779c7b9    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'fac5' :: codeSize = 32
Word : 0x00007fb6e4c919a8 :: Compiled at : 0x00007fb6e779c799
 =============================
::> 'wdiss' was called at namespaces/test/dev0.csl 371.21 <::
 5040
 =============================
C_Syntax.[34;49mcpow[39;49m <:> csl compiled word
SourceCode for C_Syntax.[34;49mcpow[39;49m :> 
[34;49mint cpow ( base power | out ) { for ( out = 1 ; power ; (power -= 1) ) { out *= base ; } return out ; } [39;49m
Source code file location of [34;49mcpow[39;49m : "namespaces/test/dev0.csl" : 378.9 :: we are now at : namespaces/test/dev0.csl : 379.17
Compiled with : optimizeOn, inlineOn, c_syntaxOn, infixOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xe779c7bf -- code size = 104 bytes
TypeSignature : 
 -----------------------------
Word :: C_Syntax.[34;49mcpow[39;49m : definition = 0x00007fb6e779c7bf : disassembly at namespaces/test/dev0.csl : 379.17 :
[34;49m ..                                   int [39;49m[33;40mcpow[39;49m[34;49m ( base power | out ) { for ( out = 1 ; power ; (power -= 1) ) { out *= base ; } return out ; }  .. [39;49m[32;49m
0x7fb6e779c7bf    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fb6e779c7c3    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e779c7c7    4981c610000000          add r14, 0x10                                          [39;49m
[34;49m .. ow ( base power | out ) { for ( out = [39;49m[33;40m1[39;49m[34;49m ; power ; (power -= 1) ) { out *= base ; } return out ; } [39;49m[32;49m
0x7fb6e779c7ce    48c7c001000000          mov rax, 0x1                                           [39;49m
[34;49m .. int cpow ( base power | out ) { for ( [39;49m[33;40mout[39;49m[34;49m = 1 ; power ; (power -= 1) ) { out *= base ; } return out ; }  .. [39;49m[32;49m
0x7fb6e779c7d5    498d4f08                lea rcx, [r15+0x8]                                     [39;49m
[34;49mint cpow ( base power | out ) { for ( out [39;49m[33;40m=[39;49m[34;49m 1 ; power ; (power -= 1) ) { out *= base ; } return out ; }  .. [39;49m[32;49m
0x7fb6e779c7d9    488901                  mov [rcx], rax                                         [39;49m
[34;49m ..  ( base power | out ) { for ( out = 1 [39;49m[33;40m;[39;49m[34;49m power ; (power -= 1) ) { out *= base ; } return out ; } [39;49m[32;49m
0x7fb6e779c7dc    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. ower ; (power -= 1) ) { out *= base ; [39;49m[33;40m}[39;49m[34;49m return out ; } [39;49m[32;49m
0x7fb6e779c7e0    4885c0                  test rax, rax                                          [39;49m[32;49m
0x7fb6e779c7e3    0f842a000000            jz 0x7fb6e779c813          	< C_Syntax.[34;49mcpow[39;49m+84[32;49m >[39;49m[39;49m[32;49m
0x7fb6e779c7e9    498d5f08                lea rbx, [r15+0x8]                                     [39;49m
[34;49m ..  ( out = 1 ; power ; (power -= 1) ) { [39;49m[33;40mout[39;49m[34;49m *= base ; } return out ; } [39;49m[32;49m
0x7fb6e779c7ed    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m .. = 1 ; power ; (power -= 1) ) { out *= [39;49m[33;40mbase[39;49m[34;49m ; } return out ; } [39;49m[32;49m
0x7fb6e779c7f1    498b4ff0                mov rcx, [r15-0x10]                                    [39;49m[32;49m
0x7fb6e779c7f5    480fafc1                imul rax, rcx                                          [39;49m
[34;49m .. ut = 1 ; power ; (power -= 1) ) { out [39;49m[33;40m*=[39;49m[34;49m base ; } return out ; } [39;49m[32;49m
0x7fb6e779c7f9    488903                  mov [rbx], rax                                         [39;49m[32;49m
0x7fb6e779c7fc    498d5ff8                lea rbx, [r15-0x8]                                     [39;49m
[34;49m .. er | out ) { for ( out = 1 ; power ; ([39;49m[33;40mpower[39;49m[34;49m -= 1) ) { out *= base ; } return out ; } [39;49m[32;49m
0x7fb6e779c800    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. ) { for ( out = 1 ; power ; (power -= [39;49m[33;40m1[39;49m[34;49m) ) { out *= base ; } return out ; } [39;49m[32;49m
0x7fb6e779c804    48c7c101000000          mov rcx, 0x1                                           [39;49m[32;49m
0x7fb6e779c80b    482bc1                  sub rax, rcx                                           [39;49m
[34;49m .. ut ) { for ( out = 1 ; power ; (power [39;49m[33;40m-=[39;49m[34;49m 1) ) { out *= base ; } return out ; } [39;49m[32;49m
0x7fb6e779c80e    488903                  mov [rbx], rax                                         [39;49m
[34;49m ..  for ( out = 1 ; power ; (power -= 1) [39;49m[33;40m)[39;49m[34;49m { out *= base ; } return out ; } [39;49m[32;49m
0x7fb6e779c811    ebc9                    jmp 0x7fb6e779c7dc         	< C_Syntax.[34;49mcpow[39;49m+29[32;49m >[39;49m[39;49m[32;49m
0x7fb6e779c813    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m .. = 1) ) { out *= base ; } return out ; [39;49m[33;40m}[39;49m[34;49m [39;49m[32;49m
0x7fb6e779c817    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e779c81b    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e779c81f    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m .. ower -= 1) ) { out *= base ; } return [39;49m[33;40mout[39;49m[34;49m ; } [39;49m[32;49m
0x7fb6e779c823    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e779c826    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'cpow' :: codeSize = 103
Word : 0x00007fb6e4c94bf0 :: Compiled at : 0x00007fb6e779c7bf
 =============================
::> 'wdiss' was called at namespaces/test/dev0.csl 379.17 <::
 2 ^ 30 :  1073741824 1073741824 1073741824[39;49m yfac
 
yfac : 50 factorial = [39;49m30412909425645649954907174559648843415335213860333137200913842176.0000000000000000
[39;49m yfacc
[39;49m 3628800

[39;49m 5040

[39;49m yfac
[39;49m2432928961198555136.0000000000000000
[39;49m yfacc
[39;49m 3628800

[39;49m 5040

[39;49m fib
[39;49m fib2
[39;49m 6765
[39;49m 6765
[39;49m x
[39;49m a
[39;49m x1
[39;49m a1
[39;49m ( Its a beautiful day don't let it get away )
[39;49m ( Its "the" beautiful day don't "let" it get away )
[39;49m ( Its a beautiful day don't let it get away )
[39;49m ( Its a beautiful day don't x1 it get away )
[39;49m ( Its a beautiful day don't let it get away )
[39;49m ( Its a beautiful day don't x it get away )
 testing unquote above line should show : ( Its a beautiful day don't x it get away )
[39;49m ( Its a beautiful day don't x1 it get away )
 testing unquote above line should show : ( Its a beautiful day don't x1 it get away )
[39;49m ( Its "the" beautiful day don't "let" it get away )
[39;49m ( Its a beautiful day don't let it get away )

 =============================
Root.[34;49mfib01[39;49m <:> csl compiled word
SourceCode for Root.[34;49mfib01[39;49m :> 
[34;49m: fib01 ( n | fn fn1 fn2 ) { fn 0 = fn1 0 = fn2 1 = } { n @ 0 > } { n 1 -= } { fn1 fn2 @ = fn2 fn @ = fn fn1 @ fn2 @ + = } for return fn @ ; [39;49m
Source code file location of [34;49mfib01[39;49m : "namespaces/test/dev0.csl" : 434.2 :: we are now at : namespaces/test/dev0.csl : 445.10
Compiled with : optimizeOn, inlineOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xe779ca49 -- code size = 167 bytes
TypeSignature : 
 -----------------------------
Word :: Root.[34;49mfib01[39;49m : definition = 0x00007fb6e779ca49 : disassembly at namespaces/test/dev0.csl : 445.10 :
[34;49m ..                                     : [39;49m[33;40mfib01[39;49m[34;49m ( n | fn fn1 fn2 )  { fn 0 = fn1 0 = fn2 1 = } { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ .. [39;49m[32;49m
0x7fb6e779ca49    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fb6e779ca4d    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e779ca51    4981c620000000          add r14, 0x20                                          [39;49m
[34;49m ..         : fib01 ( n | fn fn1 fn2 )  { [39;49m[33;40mfn[39;49m[34;49m 0 = fn1 0 = fn2 1 = } { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } fo .. [39;49m[32;49m
0x7fb6e779ca58    498d4708                lea rax, [r15+0x8]                                     [39;49m
[34;49m ..      : fib01 ( n | fn fn1 fn2 )  { fn [39;49m[33;40m0[39;49m[34;49m = fn1 0 = fn2 1 = } { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for r .. [39;49m[32;49m
0x7fb6e779ca5c    48c7c100000000          mov rcx, 0x0                                           [39;49m
[34;49m ..    : fib01 ( n | fn fn1 fn2 )  { fn 0 [39;49m[33;40m=[39;49m[34;49m fn1 0 = fn2 1 = } { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for ret .. [39;49m[32;49m
0x7fb6e779ca63    488908                  mov [rax], rcx                                         [39;49m
[34;49m ..  : fib01 ( n | fn fn1 fn2 )  { fn 0 = [39;49m[33;40mfn1[39;49m[34;49m 0 = fn2 1 = } { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for retur .. [39;49m[32;49m
0x7fb6e779ca66    498d4710                lea rax, [r15+0x10]                                    [39;49m
[34;49m : fib01 ( n | fn fn1 fn2 )  { fn 0 = fn1 [39;49m[33;40m0[39;49m[34;49m = fn2 1 = } { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn .. [39;49m[32;49m
0x7fb6e779ca6a    48c7c100000000          mov rcx, 0x0                                           [39;49m
[34;49m .. 01 ( n | fn fn1 fn2 )  { fn 0 = fn1 0 [39;49m[33;40m=[39;49m[34;49m fn2 1 = } { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fb6e779ca71    488908                  mov [rax], rcx                                         [39;49m
[34;49m ..  ( n | fn fn1 fn2 )  { fn 0 = fn1 0 = [39;49m[33;40mfn2[39;49m[34;49m 1 = } { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fb6e779ca74    498d4718                lea rax, [r15+0x18]                                    [39;49m
[34;49m ..  | fn fn1 fn2 )  { fn 0 = fn1 0 = fn2 [39;49m[33;40m1[39;49m[34;49m = } { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fb6e779ca78    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m ..  fn fn1 fn2 )  { fn 0 = fn1 0 = fn2 1 [39;49m[33;40m=[39;49m[34;49m } { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fb6e779ca7f    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. 1 fn2 )  { fn 0 = fn1 0 = fn2 1 = } { [39;49m[33;40mn[39;49m[34;49m @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fb6e779ca82    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. )  { fn 0 = fn1 0 = fn2 1 = } { n @ 0 [39;49m[33;40m>[39;49m[34;49m } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fb6e779ca86    4883f800                cmp rax, 0x0                                           [39;49m[32;49m
0x7fb6e779ca8a    0f8e50000000            jle 0x7fb6e779cae0         	< Root.[34;49mfib01[39;49m+151[32;49m >[39;49m[39;49m
[34;49m ..  fn2 1 = } { n @ 0 > } { n 1 -= }  {  [39;49m[33;40mfn1[39;49m[34;49m fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fb6e779ca90    498d4710                lea rax, [r15+0x10]                                    [39;49m
[34;49m ..  1 = } { n @ 0 > } { n 1 -= }  {  fn1 [39;49m[33;40mfn2[39;49m[34;49m @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fb6e779ca94    498b4f18                mov rcx, [r15+0x18]                                    [39;49m
[34;49m ..  { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ [39;49m[33;40m=[39;49m[34;49m  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fb6e779ca98    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. n @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  [39;49m[33;40mfn2[39;49m[34;49m fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fb6e779ca9b    498d4718                lea rax, [r15+0x18]                                    [39;49m
[34;49m .. 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 [39;49m[33;40mfn[39;49m[34;49m @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fb6e779ca9f    498b4f08                mov rcx, [r15+0x8]                                     [39;49m
[34;49m ..  { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ [39;49m[33;40m=[39;49m[34;49m  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fb6e779caa3    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  [39;49m[33;40mfn[39;49m[34;49m fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fb6e779caa6    498d4708                lea rax, [r15+0x8]                                     [39;49m[32;49m
0x7fb6e779caaa    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e779caae    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn [39;49m[33;40mfn1[39;49m[34;49m @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fb6e779cab1    498b4710                mov rax, [r15+0x10]                                    [39;49m
[34;49m ..  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ [39;49m[33;40mfn2[39;49m[34;49m @ + =  } for return fn @ ; [39;49m[32;49m
0x7fb6e779cab5    498b4f18                mov rcx, [r15+0x18]                                    [39;49m
[34;49m .. 1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ [39;49m[33;40m+[39;49m[34;49m =  } for return fn @ ; [39;49m[32;49m
0x7fb6e779cab9    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fb6e779cabc    488bc8                  mov rcx, rax                                           [39;49m
[34;49m .. 0 = fn2 1 = } { n @ 0 > } { n 1 -= }  [39;49m[33;40m{[39;49m[34;49m  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fb6e779cabf    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fb6e779cac2    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m .. fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + [39;49m[33;40m=[39;49m[34;49m  } for return fn @ ; [39;49m[32;49m
0x7fb6e779cac6    488908                  mov [rax], rcx                                         [39;49m
[34;49m ..  @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  [39;49m[33;40m}[39;49m[34;49m for return fn @ ; [39;49m[32;49m
0x7fb6e779cac9    498d5ff8                lea rbx, [r15-0x8]                                     [39;49m
[34;49m .. n 0 = fn1 0 = fn2 1 = } { n @ 0 > } { [39;49m[33;40mn[39;49m[34;49m 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fb6e779cacd    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. 0 = fn1 0 = fn2 1 = } { n @ 0 > } { n [39;49m[33;40m1[39;49m[34;49m -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fb6e779cad1    48c7c101000000          mov rcx, 0x1                                           [39;49m[32;49m
0x7fb6e779cad8    482bc1                  sub rax, rcx                                           [39;49m
[34;49m .. = fn1 0 = fn2 1 = } { n @ 0 > } { n 1 [39;49m[33;40m-=[39;49m[34;49m }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fb6e779cadb    488903                  mov [rbx], rax                                         [39;49m
[34;49m .. n1 0 = fn2 1 = } { n @ 0 > } { n 1 -= [39;49m[33;40m}[39;49m[34;49m  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fb6e779cade    eba2                    jmp 0x7fb6e779ca82         	< Root.[34;49mfib01[39;49m+57[32;49m >[39;49m[39;49m[32;49m
0x7fb6e779cae0    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m .. fn fn1 @ fn2 @ + =  } for return fn @ [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fb6e779cae4    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e779cae8    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m
[34;49m .. @ =  fn fn1 @ fn2 @ + =  } for return [39;49m[33;40mfn[39;49m[34;49m @ ; [39;49m[32;49m
0x7fb6e779caec    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e779caef    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'fib01' :: codeSize = 166
Word : 0x00007fb6e4ca34e8 :: Compiled at : 0x00007fb6e779ca49
 =============================
::> 'wdiss' was called at namespaces/test/dev0.csl 445.10 <::
 6765
 =============================
Root.[34;49mfib01[39;49m <:> csl compiled word
SourceCode for Root.[34;49mfib01[39;49m :> 
[34;49m: fib01 ( n | fn REG fn1 fn2 ) { fn 0 = fn1 0 = fn2 1 = } { n @ 0 > } { n 1 -= } { fn1 fn2 @ = fn2 fn @ = fn fn1 @ fn2 @ + = } for return fn @ ; [39;49m
Source code file location of [34;49mfib01[39;49m : "namespaces/test/dev0.csl" : 447.2 :: we are now at : namespaces/test/dev0.csl : 458.10
Compiled with : optimizeOn, inlineOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xe779caf5 -- code size = 152 bytes
TypeSignature : 
 -----------------------------
Word :: Root.[34;49mfib01[39;49m : definition = 0x00007fb6e779caf5 : disassembly at namespaces/test/dev0.csl : 458.10 :
[34;49m ..                                     : [39;49m[33;40mfib01[39;49m[34;49m ( n | fn REG fn1 fn2 )  { fn 0 = fn1 0 = fn2 1 = } { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2  .. [39;49m[32;49m
0x7fb6e779caf5    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fb6e779caf9    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e779cafd    4981c618000000          add r14, 0x18                                          [39;49m
[34;49m ..     : fib01 ( n | fn REG fn1 fn2 )  { [39;49m[33;40mfn[39;49m[34;49m 0 = fn1 0 = fn2 1 = } { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } fo .. [39;49m[32;49m
0x7fb6e779cb04    498d4708                lea rax, [r15+0x8]                                     [39;49m
[34;49m ..  : fib01 ( n | fn REG fn1 fn2 )  { fn [39;49m[33;40m0[39;49m[34;49m = fn1 0 = fn2 1 = } { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for r .. [39;49m[32;49m
0x7fb6e779cb08    48c7c100000000          mov rcx, 0x0                                           [39;49m
[34;49m   : fib01 ( n | fn REG fn1 fn2 )  { fn 0 [39;49m[33;40m=[39;49m[34;49m fn1 0 = fn2 1 = } { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for ret .. [39;49m[32;49m
0x7fb6e779cb0f    488908                  mov [rax], rcx                                         [39;49m
[34;49m ..  ( n | fn REG fn1 fn2 )  { fn 0 = fn1 [39;49m[33;40m0[39;49m[34;49m = fn2 1 = } { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ;[39;49m[32;49m
0x7fb6e779cb12    48c7c700000000          mov rdi, 0x0                                           [39;49m
[34;49m ..  | fn REG fn1 fn2 )  { fn 0 = fn1 0 = [39;49m[33;40mfn2[39;49m[34;49m 1 = } { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fb6e779cb19    498d4710                lea rax, [r15+0x10]                                    [39;49m
[34;49m .. n REG fn1 fn2 )  { fn 0 = fn1 0 = fn2 [39;49m[33;40m1[39;49m[34;49m = } { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fb6e779cb1d    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m .. REG fn1 fn2 )  { fn 0 = fn1 0 = fn2 1 [39;49m[33;40m=[39;49m[34;49m } { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fb6e779cb24    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. 1 fn2 )  { fn 0 = fn1 0 = fn2 1 = } { [39;49m[33;40mn[39;49m[34;49m @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fb6e779cb27    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. )  { fn 0 = fn1 0 = fn2 1 = } { n @ 0 [39;49m[33;40m>[39;49m[34;49m } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fb6e779cb2b    4883f800                cmp rax, 0x0                                           [39;49m
[34;49m ..  n | fn REG fn1 fn2 )  { fn 0 = fn1 0 [39;49m[33;40m=[39;49m[34;49m fn2 1 = } { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fb6e779cb2f    0f8e48000000            jle 0x7fb6e779cb7d         	< Root.[34;49mfib01[39;49m+136[32;49m >[39;49m[39;49m
[34;49m ..  1 = } { n @ 0 > } { n 1 -= }  {  fn1 [39;49m[33;40mfn2[39;49m[34;49m @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fb6e779cb35    498b4f10                mov rcx, [r15+0x10]                                    [39;49m
[34;49m ..  { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ [39;49m[33;40m=[39;49m[34;49m  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fb6e779cb39    488bf9                  mov rdi, rcx                                           [39;49m
[34;49m .. n @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  [39;49m[33;40mfn2[39;49m[34;49m fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fb6e779cb3c    498d4710                lea rax, [r15+0x10]                                    [39;49m
[34;49m .. 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 [39;49m[33;40mfn[39;49m[34;49m @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fb6e779cb40    498b4f08                mov rcx, [r15+0x8]                                     [39;49m
[34;49m ..  { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ [39;49m[33;40m=[39;49m[34;49m  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fb6e779cb44    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  [39;49m[33;40mfn[39;49m[34;49m fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fb6e779cb47    498d4708                lea rax, [r15+0x8]                                     [39;49m[32;49m
0x7fb6e779cb4b    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e779cb4f    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ [39;49m[33;40mfn2[39;49m[34;49m @ + =  } for return fn @ ; [39;49m[32;49m
0x7fb6e779cb52    498b4f10                mov rcx, [r15+0x10]                                    [39;49m
[34;49m .. 1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ [39;49m[33;40m+[39;49m[34;49m =  } for return fn @ ; [39;49m[32;49m
0x7fb6e779cb56    4803f9                  add rdi, rcx                                           [39;49m[32;49m
0x7fb6e779cb59    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fb6e779cb5c    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fb6e779cb5f    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m .. fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + [39;49m[33;40m=[39;49m[34;49m  } for return fn @ ; [39;49m[32;49m
0x7fb6e779cb63    488938                  mov [rax], rdi                                         [39;49m
[34;49m ..  @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  [39;49m[33;40m}[39;49m[34;49m for return fn @ ; [39;49m[32;49m
0x7fb6e779cb66    498d5ff8                lea rbx, [r15-0x8]                                     [39;49m
[34;49m .. n 0 = fn1 0 = fn2 1 = } { n @ 0 > } { [39;49m[33;40mn[39;49m[34;49m 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fb6e779cb6a    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. 0 = fn1 0 = fn2 1 = } { n @ 0 > } { n [39;49m[33;40m1[39;49m[34;49m -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fb6e779cb6e    48c7c101000000          mov rcx, 0x1                                           [39;49m[32;49m
0x7fb6e779cb75    482bc1                  sub rax, rcx                                           [39;49m
[34;49m .. = fn1 0 = fn2 1 = } { n @ 0 > } { n 1 [39;49m[33;40m-=[39;49m[34;49m }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fb6e779cb78    488903                  mov [rbx], rax                                         [39;49m
[34;49m .. n1 0 = fn2 1 = } { n @ 0 > } { n 1 -= [39;49m[33;40m}[39;49m[34;49m  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fb6e779cb7b    ebaa                    jmp 0x7fb6e779cb27         	< Root.[34;49mfib01[39;49m+50[32;49m >[39;49m[39;49m[32;49m
0x7fb6e779cb7d    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m .. fn fn1 @ fn2 @ + =  } for return fn @ [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fb6e779cb81    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e779cb85    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m
[34;49m .. @ =  fn fn1 @ fn2 @ + =  } for return [39;49m[33;40mfn[39;49m[34;49m @ ; [39;49m[32;49m
0x7fb6e779cb89    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e779cb8c    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'fib01' :: codeSize = 151
Word : 0x00007fb6e4ca7a18 :: Compiled at : 0x00007fb6e779caf5
 =============================
::> 'wdiss' was called at namespaces/test/dev0.csl 458.10 <::
 6765
 =============================
Root.[34;49mfib01[39;49m <:> csl compiled word
SourceCode for Root.[34;49mfib01[39;49m :> 
[34;49m: fib01 ( n | fn, REG fn1, REG fn2 ) { fn 0 = fn1 0 = fn2 1 = } { n @ 0 > } { n 1 -= } { fn1 fn2 @ = fn2 fn @ = fn fn1 @ fn2 @ + = } for return fn @ ; [39;49m
Source code file location of [34;49mfib01[39;49m : "namespaces/test/dev0.csl" : 460.2 :: we are now at : namespaces/test/dev0.csl : 471.10
Compiled with : optimizeOn, inlineOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xe779cb92 -- code size = 133 bytes
TypeSignature : 
 -----------------------------
Word :: Root.[34;49mfib01[39;49m : definition = 0x00007fb6e779cb92 : disassembly at namespaces/test/dev0.csl : 471.10 :
[34;49m ..                                     : [39;49m[33;40mfib01[39;49m[34;49m ( n | fn, REG fn1, REG fn2 )  { fn 0 = fn1 0 = fn2 1 = } { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ = .. [39;49m[32;49m
0x7fb6e779cb92    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fb6e779cb96    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e779cb9a    4981c610000000          add r14, 0x10                                          [39;49m
[34;49m  : fib01 ( n | fn, REG fn1, REG fn2 )  { [39;49m[33;40mfn[39;49m[34;49m 0 = fn1 0 = fn2 1 = } { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } fo .. [39;49m[32;49m
0x7fb6e779cba1    498d4708                lea rax, [r15+0x8]                                     [39;49m
[34;49m .. 01 ( n | fn, REG fn1, REG fn2 )  { fn [39;49m[33;40m0[39;49m[34;49m = fn1 0 = fn2 1 = } { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for r .. [39;49m[32;49m
0x7fb6e779cba5    48c7c100000000          mov rcx, 0x0                                           [39;49m
[34;49m ..  ( n | fn, REG fn1, REG fn2 )  { fn 0 [39;49m[33;40m=[39;49m[34;49m fn1 0 = fn2 1 = } { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for ret .. [39;49m[32;49m
0x7fb6e779cbac    488908                  mov [rax], rcx                                         [39;49m
[34;49m ..  fn, REG fn1, REG fn2 )  { fn 0 = fn1 [39;49m[33;40m0[39;49m[34;49m = fn2 1 = } { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn .. [39;49m[32;49m
0x7fb6e779cbaf    48c7c700000000          mov rdi, 0x0                                           [39;49m
[34;49m ..  fn1, REG fn2 )  { fn 0 = fn1 0 = fn2 [39;49m[33;40m1[39;49m[34;49m = } { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ;  .. [39;49m[32;49m
0x7fb6e779cbb6    48c7c601000000          mov rsi, 0x1                                           [39;49m
[34;49m .. G fn2 )  { fn 0 = fn1 0 = fn2 1 = } { [39;49m[33;40mn[39;49m[34;49m @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ;  .. [39;49m[32;49m
0x7fb6e779cbbd    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. )  { fn 0 = fn1 0 = fn2 1 = } { n @ 0 [39;49m[33;40m>[39;49m[34;49m } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ;  .. [39;49m[32;49m
0x7fb6e779cbc1    4883f800                cmp rax, 0x0                                           [39;49m[32;49m
0x7fb6e779cbc5    0f8e3c000000            jle 0x7fb6e779cc07         	< Root.[34;49mfib01[39;49m+117[32;49m >[39;49m[39;49m
[34;49m ..  { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ [39;49m[33;40m=[39;49m[34;49m  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ;  .. [39;49m[32;49m
0x7fb6e779cbcb    488bfe                  mov rdi, rsi                                           [39;49m
[34;49m .. 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 [39;49m[33;40mfn[39;49m[34;49m @ =  fn fn1 @ fn2 @ + =  } for return fn @ ;  .. [39;49m[32;49m
0x7fb6e779cbce    498b4f08                mov rcx, [r15+0x8]                                     [39;49m
[34;49m ..  { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ [39;49m[33;40m=[39;49m[34;49m  fn fn1 @ fn2 @ + =  } for return fn @ ;  .. [39;49m[32;49m
0x7fb6e779cbd2    488bf1                  mov rsi, rcx                                           [39;49m
[34;49m .. n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  [39;49m[33;40mfn[39;49m[34;49m fn1 @ fn2 @ + =  } for return fn @ ;  .. [39;49m[32;49m
0x7fb6e779cbd5    498d4708                lea rax, [r15+0x8]                                     [39;49m[32;49m
0x7fb6e779cbd9    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e779cbdd    498906                  mov [r14], rax                                         [39;49m
[34;49m .. 1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ [39;49m[33;40m+[39;49m[34;49m =  } for return fn @ ;  .. [39;49m[32;49m
0x7fb6e779cbe0    4803fe                  add rdi, rsi                                           [39;49m[32;49m
0x7fb6e779cbe3    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fb6e779cbe6    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fb6e779cbe9    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m .. fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + [39;49m[33;40m=[39;49m[34;49m  } for return fn @ ;  .. [39;49m[32;49m
0x7fb6e779cbed    488938                  mov [rax], rdi                                         [39;49m
[34;49m ..  @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  [39;49m[33;40m}[39;49m[34;49m for return fn @ ;  .. [39;49m[32;49m
0x7fb6e779cbf0    498d5ff8                lea rbx, [r15-0x8]                                     [39;49m
[34;49m .. n 0 = fn1 0 = fn2 1 = } { n @ 0 > } { [39;49m[33;40mn[39;49m[34;49m 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ;  .. [39;49m[32;49m
0x7fb6e779cbf4    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. 0 = fn1 0 = fn2 1 = } { n @ 0 > } { n [39;49m[33;40m1[39;49m[34;49m -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ;  .. [39;49m[32;49m
0x7fb6e779cbf8    48c7c101000000          mov rcx, 0x1                                           [39;49m[32;49m
0x7fb6e779cbff    482bc1                  sub rax, rcx                                           [39;49m
[34;49m .. = fn1 0 = fn2 1 = } { n @ 0 > } { n 1 [39;49m[33;40m-=[39;49m[34;49m }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ;  .. [39;49m[32;49m
0x7fb6e779cc02    488903                  mov [rbx], rax                                         [39;49m
[34;49m .. n1 0 = fn2 1 = } { n @ 0 > } { n 1 -= [39;49m[33;40m}[39;49m[34;49m  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ;  .. [39;49m[32;49m
0x7fb6e779cc05    ebb6                    jmp 0x7fb6e779cbbd         	< Root.[34;49mfib01[39;49m+43[32;49m >[39;49m[39;49m[32;49m
0x7fb6e779cc07    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m .. fn fn1 @ fn2 @ + =  } for return fn @ [39;49m[33;40m;[39;49m[34;49m  .. [39;49m[32;49m
0x7fb6e779cc0b    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e779cc0f    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m
[34;49m .. @ =  fn fn1 @ fn2 @ + =  } for return [39;49m[33;40mfn[39;49m[34;49m @ ;  .. [39;49m[32;49m
0x7fb6e779cc13    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e779cc16    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'fib01' :: codeSize = 132
Word : 0x00007fb6e4cabf48 :: Compiled at : 0x00007fb6e779cb92
 =============================
::> 'wdiss' was called at namespaces/test/dev0.csl 471.10 <::
 6765
 =============================
Root.[34;49mfib01[39;49m <:> csl compiled word
SourceCode for Root.[34;49mfib01[39;49m :> 
[34;49m: fib01 ( n | REG fn REG fn1 REG fn2 ) { fn 0 = fn1 0 = fn2 1 = } { n @ 0 > } { n 1 -= } { fn1 fn2 @ = fn2 fn @ = fn fn1 @ fn2 @ + = } for return fn @ ; [39;49m
Source code file location of [34;49mfib01[39;49m : "namespaces/test/dev0.csl" : 474.2 :: we are now at : namespaces/test/dev0.csl : 485.10
Compiled with : optimizeOn, inlineOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xe779cc1c -- code size = 100 bytes
TypeSignature : 
 -----------------------------
Word :: Root.[34;49mfib01[39;49m : definition = 0x00007fb6e779cc1c : disassembly at namespaces/test/dev0.csl : 485.10 :
[34;49m ..                                     : [39;49m[33;40mfib01[39;49m[34;49m ( n | REG fn REG fn1 REG fn2 )  { fn 0 = fn1 0 = fn2 1 = } { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ .. [39;49m[32;49m
0x7fb6e779cc1c    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fb6e779cc20    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e779cc24    4981c608000000          add r14, 0x8                                           [39;49m
[34;49m ..  ( n | REG fn REG fn1 REG fn2 )  { fn [39;49m[33;40m0[39;49m[34;49m = fn1 0 = fn2 1 = } { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for r .. [39;49m[32;49m
0x7fb6e779cc2b    48c7c700000000          mov rdi, 0x0                                           [39;49m
[34;49m .. EG fn REG fn1 REG fn2 )  { fn 0 = fn1 [39;49m[33;40m0[39;49m[34;49m = fn2 1 = } { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn .. [39;49m[32;49m
0x7fb6e779cc32    48c7c600000000          mov rsi, 0x0                                           [39;49m
[34;49m .. G fn1 REG fn2 )  { fn 0 = fn1 0 = fn2 [39;49m[33;40m1[39;49m[34;49m = } { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ;  .. [39;49m[32;49m
0x7fb6e779cc39    48c7c201000000          mov rdx, 0x1                                           [39;49m
[34;49m .. G fn2 )  { fn 0 = fn1 0 = fn2 1 = } { [39;49m[33;40mn[39;49m[34;49m @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ;  .. [39;49m[32;49m
0x7fb6e779cc40    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. )  { fn 0 = fn1 0 = fn2 1 = } { n @ 0 [39;49m[33;40m>[39;49m[34;49m } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ;  .. [39;49m[32;49m
0x7fb6e779cc44    4883f800                cmp rax, 0x0                                           [39;49m
[34;49m ..  n | REG fn REG fn1 REG fn2 )  { fn 0 [39;49m[33;40m=[39;49m[34;49m fn1 0 = fn2 1 = } { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for ret .. [39;49m[32;49m
0x7fb6e779cc48    0f8e26000000            jle 0x7fb6e779cc74         	< Root.[34;49mfib01[39;49m+88[32;49m >[39;49m[39;49m
[34;49m ..  { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ [39;49m[33;40m=[39;49m[34;49m  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ;  .. [39;49m[32;49m
0x7fb6e779cc4e    488bf2                  mov rsi, rdx                                           [39;49m
[34;49m ..  { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ [39;49m[33;40m=[39;49m[34;49m  fn fn1 @ fn2 @ + =  } for return fn @ ;  .. [39;49m[32;49m
0x7fb6e779cc51    488bd7                  mov rdx, rdi                                           [39;49m
[34;49m .. n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  [39;49m[33;40mfn[39;49m[34;49m fn1 @ fn2 @ + =  } for return fn @ ;  .. [39;49m[32;49m
0x7fb6e779cc54    488bc7                  mov rax, rdi                                           [39;49m
[34;49m .. 1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ [39;49m[33;40m+[39;49m[34;49m =  } for return fn @ ;  .. [39;49m[32;49m
0x7fb6e779cc57    4803f2                  add rsi, rdx                                           [39;49m
[34;49m .. fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + [39;49m[33;40m=[39;49m[34;49m  } for return fn @ ;  .. [39;49m[32;49m
0x7fb6e779cc5a    488bfe                  mov rdi, rsi                                           [39;49m
[34;49m ..  @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  [39;49m[33;40m}[39;49m[34;49m for return fn @ ;  .. [39;49m[32;49m
0x7fb6e779cc5d    498d5ff8                lea rbx, [r15-0x8]                                     [39;49m
[34;49m .. n 0 = fn1 0 = fn2 1 = } { n @ 0 > } { [39;49m[33;40mn[39;49m[34;49m 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ;  .. [39;49m[32;49m
0x7fb6e779cc61    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. 0 = fn1 0 = fn2 1 = } { n @ 0 > } { n [39;49m[33;40m1[39;49m[34;49m -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ;  .. [39;49m[32;49m
0x7fb6e779cc65    48c7c101000000          mov rcx, 0x1                                           [39;49m[32;49m
0x7fb6e779cc6c    482bc1                  sub rax, rcx                                           [39;49m
[34;49m .. = fn1 0 = fn2 1 = } { n @ 0 > } { n 1 [39;49m[33;40m-=[39;49m[34;49m }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ;  .. [39;49m[32;49m
0x7fb6e779cc6f    488903                  mov [rbx], rax                                         [39;49m
[34;49m .. n1 0 = fn2 1 = } { n @ 0 > } { n 1 -= [39;49m[33;40m}[39;49m[34;49m  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ;  .. [39;49m[32;49m
0x7fb6e779cc72    ebcc                    jmp 0x7fb6e779cc40         	< Root.[34;49mfib01[39;49m+36[32;49m >[39;49m[39;49m
[34;49m .. fn fn1 @ fn2 @ + =  } for return fn @ [39;49m[33;40m;[39;49m[34;49m  .. [39;49m[32;49m
0x7fb6e779cc74    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e779cc78    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m
[34;49m .. @ =  fn fn1 @ fn2 @ + =  } for return [39;49m[33;40mfn[39;49m[34;49m @ ;  .. [39;49m[32;49m
0x7fb6e779cc7c    49893e                  mov [r14], rdi                                         [39;49m[32;49m
0x7fb6e779cc7f    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'fib01' :: codeSize = 99
Word : 0x00007fb6e4cb0478 :: Compiled at : 0x00007fb6e779cc1c
 =============================
::> 'wdiss' was called at namespaces/test/dev0.csl 485.10 <::
 6765
 =============================
Root.[34;49mfib01[39;49m <:> csl compiled word
SourceCode for Root.[34;49mfib01[39;49m :> 
[34;49m: fib01 ( REG n | fn fn1 REG fn2 ) { fn 0 = fn1 0 = fn2 1 = } { n @ 0 > } { n 1 -= } { fn1 fn2 @ = fn2 fn @ = fn fn1 @ fn2 @ + = } for return fn @ ; [39;49m
Source code file location of [34;49mfib01[39;49m : "namespaces/test/dev0.csl" : 488.2 :: we are now at : namespaces/test/dev0.csl : 499.10
Compiled with : optimizeOn, inlineOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xe779cc85 -- code size = 140 bytes
TypeSignature : 
 -----------------------------
Word :: Root.[34;49mfib01[39;49m : definition = 0x00007fb6e779cc85 : disassembly at namespaces/test/dev0.csl : 499.10 :
[34;49m ..                                     : [39;49m[33;40mfib01[39;49m[34;49m ( REG n | fn fn1 REG fn2 )  { fn 0 = fn1 0 = fn2 1 = } { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 [39;49m[32;49m
0x7fb6e779cc85    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fb6e779cc89    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e779cc8d    4981c618000000          add r14, 0x18                                          [39;49m
[34;49m ..                               : fib01 [39;49m[33;40m([39;49m[34;49m REG n | fn fn1 REG fn2 )  { fn 0 = fn1 0 = fn2 1 = } { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =[39;49m[32;49m
0x7fb6e779cc94    498b7ff8                mov rdi, [r15-0x8]                                     [39;49m
[34;49m .. : fib01 ( REG n | fn fn1 REG fn2 )  { [39;49m[33;40mfn[39;49m[34;49m 0 = fn1 0 = fn2 1 = } { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for re[39;49m[32;49m
0x7fb6e779cc98    498d4708                lea rax, [r15+0x8]                                     [39;49m
[34;49m : fib01 ( REG n | fn fn1 REG fn2 )  { fn [39;49m[33;40m0[39;49m[34;49m = fn1 0 = fn2 1 = } { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn[39;49m[32;49m
0x7fb6e779cc9c    48c7c100000000          mov rcx, 0x0                                           [39;49m
[34;49m .. 01 ( REG n | fn fn1 REG fn2 )  { fn 0 [39;49m[33;40m=[39;49m[34;49m fn1 0 = fn2 1 = } { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return [39;49m[32;49m
0x7fb6e779cca3    488908                  mov [rax], rcx                                         [39;49m
[34;49m ..  ( REG n | fn fn1 REG fn2 )  { fn 0 = [39;49m[33;40mfn1[39;49m[34;49m 0 = fn2 1 = } { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn[39;49m[32;49m
0x7fb6e779cca6    498d4710                lea rax, [r15+0x10]                                    [39;49m
[34;49m .. EG n | fn fn1 REG fn2 )  { fn 0 = fn1 [39;49m[33;40m0[39;49m[34;49m = fn2 1 = } { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ;[39;49m[32;49m
0x7fb6e779ccaa    48c7c100000000          mov rcx, 0x0                                           [39;49m
[34;49m ..  n | fn fn1 REG fn2 )  { fn 0 = fn1 0 [39;49m[33;40m=[39;49m[34;49m fn2 1 = } { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fb6e779ccb1    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. n fn1 REG fn2 )  { fn 0 = fn1 0 = fn2 [39;49m[33;40m1[39;49m[34;49m = } { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fb6e779ccb4    48c7c601000000          mov rsi, 0x1                                           [39;49m
[34;49m .. )  { fn 0 = fn1 0 = fn2 1 = } { n @ 0 [39;49m[33;40m>[39;49m[34;49m } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fb6e779ccbb    4883ff00                cmp rdi, 0x0                                           [39;49m[32;49m
0x7fb6e779ccbf    0f8e3c000000            jle 0x7fb6e779cd01         	< Root.[34;49mfib01[39;49m+124[32;49m >[39;49m[39;49m
[34;49m ..  fn2 1 = } { n @ 0 > } { n 1 -= }  {  [39;49m[33;40mfn1[39;49m[34;49m fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fb6e779ccc5    498d4710                lea rax, [r15+0x10]                                    [39;49m
[34;49m ..  { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ [39;49m[33;40m=[39;49m[34;49m  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fb6e779ccc9    488930                  mov [rax], rsi                                         [39;49m
[34;49m .. 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 [39;49m[33;40mfn[39;49m[34;49m @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fb6e779cccc    498b4f08                mov rcx, [r15+0x8]                                     [39;49m
[34;49m ..  { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ [39;49m[33;40m=[39;49m[34;49m  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fb6e779ccd0    488bf1                  mov rsi, rcx                                           [39;49m
[34;49m .. n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  [39;49m[33;40mfn[39;49m[34;49m fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fb6e779ccd3    498d4708                lea rax, [r15+0x8]                                     [39;49m[32;49m
0x7fb6e779ccd7    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e779ccdb    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn [39;49m[33;40mfn1[39;49m[34;49m @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fb6e779ccde    498b4710                mov rax, [r15+0x10]                                    [39;49m
[34;49m .. 1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ [39;49m[33;40m+[39;49m[34;49m =  } for return fn @ ; [39;49m[32;49m
0x7fb6e779cce2    4803c6                  add rax, rsi                                           [39;49m[32;49m
0x7fb6e779cce5    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fb6e779cce8    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fb6e779cceb    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m .. fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + [39;49m[33;40m=[39;49m[34;49m  } for return fn @ ; [39;49m[32;49m
0x7fb6e779ccef    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. n 0 = fn1 0 = fn2 1 = } { n @ 0 > } { [39;49m[33;40mn[39;49m[34;49m 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fb6e779ccf2    488bdf                  mov rbx, rdi                                           [39;49m
[34;49m .. 0 = fn1 0 = fn2 1 = } { n @ 0 > } { n [39;49m[33;40m1[39;49m[34;49m -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fb6e779ccf5    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m .. = fn1 0 = fn2 1 = } { n @ 0 > } { n 1 [39;49m[33;40m-=[39;49m[34;49m }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fb6e779ccfc    482bf9                  sub rdi, rcx                                           [39;49m
[34;49m .. n1 0 = fn2 1 = } { n @ 0 > } { n 1 -= [39;49m[33;40m}[39;49m[34;49m  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fb6e779ccff    ebba                    jmp 0x7fb6e779ccbb         	< Root.[34;49mfib01[39;49m+54[32;49m >[39;49m[39;49m[32;49m
0x7fb6e779cd01    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m .. fn fn1 @ fn2 @ + =  } for return fn @ [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fb6e779cd05    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e779cd09    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m
[34;49m .. @ =  fn fn1 @ fn2 @ + =  } for return [39;49m[33;40mfn[39;49m[34;49m @ ; [39;49m[32;49m
0x7fb6e779cd0d    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e779cd10    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'fib01' :: codeSize = 139
Word : 0x00007fb6e4cb49a8 :: Compiled at : 0x00007fb6e779cc85
 =============================
::> 'wdiss' was called at namespaces/test/dev0.csl 499.10 <::
 6765
 =============================
Root.[34;49mfib01[39;49m <:> csl compiled word
SourceCode for Root.[34;49mfib01[39;49m :> 
[34;49m: fib01 ( REG n | fn REG fn1 REG fn2 ) { fn 0 = fn1 0 = fn2 1 = } { n @ 0 > } { n 1 -= } { fn1 fn2 @ = fn2 fn @ = fn fn1 @ fn2 @ + = } for return fn @ ; [39;49m
Source code file location of [34;49mfib01[39;49m : "namespaces/test/dev0.csl" : 501.2 :: we are now at : namespaces/test/dev0.csl : 512.10
Compiled with : optimizeOn, inlineOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xe779cd16 -- code size = 125 bytes
TypeSignature : 
 -----------------------------
Word :: Root.[34;49mfib01[39;49m : definition = 0x00007fb6e779cd16 : disassembly at namespaces/test/dev0.csl : 512.10 :
[34;49m ..                                     : [39;49m[33;40mfib01[39;49m[34;49m ( REG n | fn REG fn1 REG fn2 )  { fn 0 = fn1 0 = fn2 1 = } { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ .. [39;49m[32;49m
0x7fb6e779cd16    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fb6e779cd1a    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e779cd1e    4981c610000000          add r14, 0x10                                          [39;49m
[34;49m ..                               : fib01 [39;49m[33;40m([39;49m[34;49m REG n | fn REG fn1 REG fn2 )  { fn 0 = fn1 0 = fn2 1 = } { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn .. [39;49m[32;49m
0x7fb6e779cd25    498b7ff8                mov rdi, [r15-0x8]                                     [39;49m
[34;49m: fib01 ( REG n | fn REG fn1 REG fn2 )  { [39;49m[33;40mfn[39;49m[34;49m 0 = fn1 0 = fn2 1 = } { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } fo .. [39;49m[32;49m
0x7fb6e779cd29    498d4708                lea rax, [r15+0x8]                                     [39;49m
[34;49m ..  ( REG n | fn REG fn1 REG fn2 )  { fn [39;49m[33;40m0[39;49m[34;49m = fn1 0 = fn2 1 = } { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for r .. [39;49m[32;49m
0x7fb6e779cd2d    48c7c100000000          mov rcx, 0x0                                           [39;49m
[34;49m ..  REG n | fn REG fn1 REG fn2 )  { fn 0 [39;49m[33;40m=[39;49m[34;49m fn1 0 = fn2 1 = } { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for ret .. [39;49m[32;49m
0x7fb6e779cd34    488908                  mov [rax], rcx                                         [39;49m
[34;49m ..  | fn REG fn1 REG fn2 )  { fn 0 = fn1 [39;49m[33;40m0[39;49m[34;49m = fn2 1 = } { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn .. [39;49m[32;49m
0x7fb6e779cd37    48c7c600000000          mov rsi, 0x0                                           [39;49m
[34;49m .. G fn1 REG fn2 )  { fn 0 = fn1 0 = fn2 [39;49m[33;40m1[39;49m[34;49m = } { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ;  .. [39;49m[32;49m
0x7fb6e779cd3e    48c7c201000000          mov rdx, 0x1                                           [39;49m
[34;49m .. )  { fn 0 = fn1 0 = fn2 1 = } { n @ 0 [39;49m[33;40m>[39;49m[34;49m } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ;  .. [39;49m[32;49m
0x7fb6e779cd45    4883ff00                cmp rdi, 0x0                                           [39;49m
[34;49m ..  fn REG fn1 REG fn2 )  { fn 0 = fn1 0 [39;49m[33;40m=[39;49m[34;49m fn2 1 = } { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ .. [39;49m[32;49m
0x7fb6e779cd49    0f8e34000000            jle 0x7fb6e779cd83         	< Root.[34;49mfib01[39;49m+109[32;49m >[39;49m[39;49m
[34;49m ..  { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ [39;49m[33;40m=[39;49m[34;49m  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ;  .. [39;49m[32;49m
0x7fb6e779cd4f    488bf2                  mov rsi, rdx                                           [39;49m
[34;49m .. 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 [39;49m[33;40mfn[39;49m[34;49m @ =  fn fn1 @ fn2 @ + =  } for return fn @ ;  .. [39;49m[32;49m
0x7fb6e779cd52    498b4f08                mov rcx, [r15+0x8]                                     [39;49m
[34;49m ..  { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ [39;49m[33;40m=[39;49m[34;49m  fn fn1 @ fn2 @ + =  } for return fn @ ;  .. [39;49m[32;49m
0x7fb6e779cd56    488bd1                  mov rdx, rcx                                           [39;49m
[34;49m .. n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  [39;49m[33;40mfn[39;49m[34;49m fn1 @ fn2 @ + =  } for return fn @ ;  .. [39;49m[32;49m
0x7fb6e779cd59    498d4708                lea rax, [r15+0x8]                                     [39;49m[32;49m
0x7fb6e779cd5d    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e779cd61    498906                  mov [r14], rax                                         [39;49m
[34;49m .. 1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ [39;49m[33;40m+[39;49m[34;49m =  } for return fn @ ;  .. [39;49m[32;49m
0x7fb6e779cd64    4803f2                  add rsi, rdx                                           [39;49m[32;49m
0x7fb6e779cd67    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fb6e779cd6a    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fb6e779cd6d    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m .. fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + [39;49m[33;40m=[39;49m[34;49m  } for return fn @ ;  .. [39;49m[32;49m
0x7fb6e779cd71    488930                  mov [rax], rsi                                         [39;49m
[34;49m .. n 0 = fn1 0 = fn2 1 = } { n @ 0 > } { [39;49m[33;40mn[39;49m[34;49m 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ;  .. [39;49m[32;49m
0x7fb6e779cd74    488bdf                  mov rbx, rdi                                           [39;49m
[34;49m .. 0 = fn1 0 = fn2 1 = } { n @ 0 > } { n [39;49m[33;40m1[39;49m[34;49m -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ;  .. [39;49m[32;49m
0x7fb6e779cd77    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m .. = fn1 0 = fn2 1 = } { n @ 0 > } { n 1 [39;49m[33;40m-=[39;49m[34;49m }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ;  .. [39;49m[32;49m
0x7fb6e779cd7e    482bf9                  sub rdi, rcx                                           [39;49m
[34;49m .. n1 0 = fn2 1 = } { n @ 0 > } { n 1 -= [39;49m[33;40m}[39;49m[34;49m  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ;  .. [39;49m[32;49m
0x7fb6e779cd81    ebc2                    jmp 0x7fb6e779cd45         	< Root.[34;49mfib01[39;49m+47[32;49m >[39;49m[39;49m[32;49m
0x7fb6e779cd83    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m .. fn fn1 @ fn2 @ + =  } for return fn @ [39;49m[33;40m;[39;49m[34;49m  .. [39;49m[32;49m
0x7fb6e779cd87    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e779cd8b    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m
[34;49m .. @ =  fn fn1 @ fn2 @ + =  } for return [39;49m[33;40mfn[39;49m[34;49m @ ;  .. [39;49m[32;49m
0x7fb6e779cd8f    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e779cd92    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'fib01' :: codeSize = 124
Word : 0x00007fb6e4cb8ed8 :: Compiled at : 0x00007fb6e779cd16
 =============================
::> 'wdiss' was called at namespaces/test/dev0.csl 512.10 <::
 6765
 =============================
Root.[34;49mfib01[39;49m <:> csl compiled word
SourceCode for Root.[34;49mfib01[39;49m :> 
[34;49m: fib01 ( REG n | fn fn1 REG fn2 ) { fn 0 = fn1 0 = fn2 1 = } { n @ 0 > } { n 1 -= } { fn1 fn2 @ = fn2 fn @ = fn fn1 @ fn2 @ + = } for return fn @ ; [39;49m
Source code file location of [34;49mfib01[39;49m : "namespaces/test/dev0.csl" : 514.2 :: we are now at : namespaces/test/dev0.csl : 525.10
Compiled with : optimizeOn, inlineOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xe779cd98 -- code size = 145 bytes
TypeSignature : 
 -----------------------------
Word :: Root.[34;49mfib01[39;49m : definition = 0x00007fb6e779cd98 : disassembly at namespaces/test/dev0.csl : 525.10 :
[34;49m ..                                     : [39;49m[33;40mfib01[39;49m[34;49m ( REG n | fn fn1 REG fn2 )  { fn 0 = fn1 0 = fn2 1 = } { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 [39;49m[32;49m
0x7fb6e779cd98    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fb6e779cd9c    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e779cda0    4981c618000000          add r14, 0x18                                          [39;49m
[34;49m ..                               : fib01 [39;49m[33;40m([39;49m[34;49m REG n | fn fn1 REG fn2 )  { fn 0 = fn1 0 = fn2 1 = } { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =[39;49m[32;49m
0x7fb6e779cda7    498b7ff8                mov rdi, [r15-0x8]                                     [39;49m
[34;49m .. : fib01 ( REG n | fn fn1 REG fn2 )  { [39;49m[33;40mfn[39;49m[34;49m 0 = fn1 0 = fn2 1 = } { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for re[39;49m[32;49m
0x7fb6e779cdab    498d4708                lea rax, [r15+0x8]                                     [39;49m
[34;49m : fib01 ( REG n | fn fn1 REG fn2 )  { fn [39;49m[33;40m0[39;49m[34;49m = fn1 0 = fn2 1 = } { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn[39;49m[32;49m
0x7fb6e779cdaf    48c7c100000000          mov rcx, 0x0                                           [39;49m
[34;49m .. 01 ( REG n | fn fn1 REG fn2 )  { fn 0 [39;49m[33;40m=[39;49m[34;49m fn1 0 = fn2 1 = } { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return [39;49m[32;49m
0x7fb6e779cdb6    488908                  mov [rax], rcx                                         [39;49m
[34;49m ..  ( REG n | fn fn1 REG fn2 )  { fn 0 = [39;49m[33;40mfn1[39;49m[34;49m 0 = fn2 1 = } { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn[39;49m[32;49m
0x7fb6e779cdb9    498d4710                lea rax, [r15+0x10]                                    [39;49m
[34;49m .. EG n | fn fn1 REG fn2 )  { fn 0 = fn1 [39;49m[33;40m0[39;49m[34;49m = fn2 1 = } { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ;[39;49m[32;49m
0x7fb6e779cdbd    48c7c100000000          mov rcx, 0x0                                           [39;49m
[34;49m ..  n | fn fn1 REG fn2 )  { fn 0 = fn1 0 [39;49m[33;40m=[39;49m[34;49m fn2 1 = } { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fb6e779cdc4    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. n fn1 REG fn2 )  { fn 0 = fn1 0 = fn2 [39;49m[33;40m1[39;49m[34;49m = } { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fb6e779cdc7    48c7c601000000          mov rsi, 0x1                                           [39;49m
[34;49m .. )  { fn 0 = fn1 0 = fn2 1 = } { n @ 0 [39;49m[33;40m>[39;49m[34;49m } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fb6e779cdce    4883ff00                cmp rdi, 0x0                                           [39;49m[32;49m
0x7fb6e779cdd2    0f8e3c000000            jle 0x7fb6e779ce14         	< Root.[34;49mfib01[39;49m+124[32;49m >[39;49m[39;49m
[34;49m ..  fn2 1 = } { n @ 0 > } { n 1 -= }  {  [39;49m[33;40mfn1[39;49m[34;49m fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fb6e779cdd8    498d4710                lea rax, [r15+0x10]                                    [39;49m
[34;49m ..  { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ [39;49m[33;40m=[39;49m[34;49m  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fb6e779cddc    488930                  mov [rax], rsi                                         [39;49m
[34;49m .. 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 [39;49m[33;40mfn[39;49m[34;49m @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fb6e779cddf    498b4f08                mov rcx, [r15+0x8]                                     [39;49m
[34;49m ..  { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ [39;49m[33;40m=[39;49m[34;49m  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fb6e779cde3    488bf1                  mov rsi, rcx                                           [39;49m
[34;49m .. n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  [39;49m[33;40mfn[39;49m[34;49m fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fb6e779cde6    498d4708                lea rax, [r15+0x8]                                     [39;49m[32;49m
0x7fb6e779cdea    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e779cdee    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn [39;49m[33;40mfn1[39;49m[34;49m @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fb6e779cdf1    498b4710                mov rax, [r15+0x10]                                    [39;49m
[34;49m .. 1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ [39;49m[33;40m+[39;49m[34;49m =  } for return fn @ ; [39;49m[32;49m
0x7fb6e779cdf5    4803c6                  add rax, rsi                                           [39;49m[32;49m
0x7fb6e779cdf8    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fb6e779cdfb    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fb6e779cdfe    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m .. fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + [39;49m[33;40m=[39;49m[34;49m  } for return fn @ ; [39;49m[32;49m
0x7fb6e779ce02    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. n 0 = fn1 0 = fn2 1 = } { n @ 0 > } { [39;49m[33;40mn[39;49m[34;49m 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fb6e779ce05    488bdf                  mov rbx, rdi                                           [39;49m
[34;49m .. 0 = fn1 0 = fn2 1 = } { n @ 0 > } { n [39;49m[33;40m1[39;49m[34;49m -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fb6e779ce08    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m .. = fn1 0 = fn2 1 = } { n @ 0 > } { n 1 [39;49m[33;40m-=[39;49m[34;49m }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fb6e779ce0f    482bf9                  sub rdi, rcx                                           [39;49m
[34;49m .. n1 0 = fn2 1 = } { n @ 0 > } { n 1 -= [39;49m[33;40m}[39;49m[34;49m  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fb6e779ce12    ebba                    jmp 0x7fb6e779cdce         	< Root.[34;49mfib01[39;49m+54[32;49m >[39;49m[39;49m[32;49m
0x7fb6e779ce14    498b4708                mov rax, [r15+0x8]                                     [39;49m[32;49m
0x7fb6e779ce18    e900000000              jmp 0x7fb6e779ce1d         	< Root.[34;49mfib01[39;49m+133[32;49m >[39;49m[39;49m
[34;49m .. fn fn1 @ fn2 @ + =  } for return fn @ [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fb6e779ce1d    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e779ce21    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m
[34;49m .. @ =  fn fn1 @ fn2 @ + =  } for return [39;49m[33;40mfn[39;49m[34;49m @ ; [39;49m[32;49m
0x7fb6e779ce25    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e779ce28    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'fib01' :: codeSize = 144
Word : 0x00007fb6e4cbd408 :: Compiled at : 0x00007fb6e779cd98
 =============================
::> 'wdiss' was called at namespaces/test/dev0.csl 525.10 <::
 6765
 namespaces/test/dev0.csl 531.12 
ending Lisp

DataStack at : [34;49mnamespaces/test/dev0.csl : 531.35[39;49m :
DataStack depth =   2 : Dsp (R14) = Top = 0x00007fb6e7cd3a50, InitialTos = 0x00007fb6e7cd3a40, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fb6e7cd3a50 > = 0x0000000000000005	
  DataStack   [  -1 ] < 0x00007fb6e7cd3a48 > = 0x0000000000000005	

 =============================
C_Syntax.[34;49m_Compile_X_Group1_Immediate[39;49m <:> csl compiled word, prefix
SourceCode for C_Syntax.[34;49m_Compile_X_Group1_Immediate[39;49m :> 
[34;49mvoid _Compile_X_Group1_Immediate ( uint8 code, uint8 mod, uint8 rm, int64 disp, uint64 imm, uint8 iSize ) { int64 opCode = 0x80 ; if ( ( ( iSize > 4 ) || ( imm >= 0x100000000 ) ) ) { if ( rm != DSP ) { Compile_MoveImm_To_Reg ( THRU_REG, imm, iSize ) ; _Compile_X_Group1_Reg_To_Reg ( code, rm, THRU_REG ) ; } else { Compile_MoveImm_To_Reg ( ACC, imm, iSize ) ; _Compile_X_Group1 ( code, REG, MEM, ACC, rm, 0, disp, CELL ) ; } return ; } else if ( ( iSize > BYTE ) || (abs ( imm ) >= 0x7f ) ) { opCode |= 1 ; } else if ( ( iSize <= BYTE ) || (abs ( imm ) < 0x100 ) ) opCode |= 3 ; Compile_CalculateWrite_Instruction_X64 ( 0, opCode, mod, code, rm, REX_W | MODRM_B | IMM_B | DISP_B, 0, disp, 0, imm, iSize ) ; } [39;49m
Source code file location of [34;49m_Compile_X_Group1_Immediate[39;49m : "namespaces/compiler/x64.csl" : 628.28 :: we are now at : namespaces/compiler/x64.csl : 668.32
Compiled with : optimizeOn, inlineOn, c_syntaxOn, infixOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xe779f0aa -- code size = 833 bytes
TypeSignature : 
 -----------------------------
Word :: C_Syntax.[34;49m_Compile_X_Group1_Immediate[39;49m : definition = 0x00007fb6e779f0aa : disassembly at namespaces/compiler/x64.csl : 668.32 :
[34;49m ..                                  void [39;49m[33;40m_Compile_X_Group1_Immediate[39;49m[34;49m ( uint8 code, uint8 mod, uint8 rm, int64 disp, uint64 imm, uint8 iSize )  .. [39;49m[32;49m
0x7fb6e779f0aa    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fb6e779f0ae    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e779f0b2    4981c610000000          add r14, 0x10                                          [39;49m
[34;49m .. 4 imm, uint8 iSize ) { int64 opCode = [39;49m[33;40m0x80[39;49m[34;49m ; if ( ( ( iSize > 4 ) || ( imm >= 0x100000000 ) ) ) { if ( rm != DSP ) { Compile_MoveImm_To_Reg .. [39;49m[32;49m
0x7fb6e779f0b9    48c7c080000000          mov rax, 0x80                                          [39;49m
[34;49m .. sp, uint64 imm, uint8 iSize ) { int64 [39;49m[33;40mopCode[39;49m[34;49m = 0x80 ; if ( ( ( iSize > 4 ) || ( imm >= 0x100000000 ) ) ) { if ( rm != DSP ) { Compile_MoveI .. [39;49m[32;49m
0x7fb6e779f0c0    498d4f08                lea rcx, [r15+0x8]                                     [39;49m
[34;49m .. t64 imm, uint8 iSize ) { int64 opCode [39;49m[33;40mstore[39;49m[34;49m0 ; if ( ( ( iSize > 4 ) || ( imm >= 0x100000000 ) ) ) { if ( rm != DSP ) { Compile_MoveImm_To_R .. [39;49m[32;49m
0x7fb6e779f0c4    488901                  mov [rcx], rax                                         [39;49m
[34;49m .. ze ) { int64 opCode = 0x80 ; if ( ( ( [39;49m[33;40miSize[39;49m[34;49m > 4 ) || ( imm >= 0x100000000 ) ) ) { if ( rm != DSP ) { Compile_MoveImm_To_Reg ( THRU_REG, imm .. [39;49m[32;49m
0x7fb6e779f0c7    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m ..  int64 opCode = 0x80 ; if ( ( ( iSize [39;49m[33;40m>[39;49m[34;49m 4 ) || ( imm >= 0x100000000 ) ) ) { if ( rm != DSP ) { Compile_MoveImm_To_Reg ( THRU_REG, imm, iSiz .. [39;49m[32;49m
0x7fb6e779f0cb    4883f804                cmp rax, 0x4                                           [39;49m[32;49m
0x7fb6e779f0cf    0f9fc0                  setg al                                                [39;49m
[34;49m .. nt64 opCode = 0x80 ; if ( ( ( iSize > [39;49m[33;40m4[39;49m[34;49m ) || ( imm >= 0x100000000 ) ) ) { if ( rm != DSP ) { Compile_MoveImm_To_Reg ( THRU_REG, imm, iSize  .. [39;49m[32;49m
0x7fb6e779f0d2    480fb6c0                movzx rax, al                                          [39;49m[32;49m
0x7fb6e779f0d6    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e779f0da    498906                  mov [r14], rax                                         [39;49m
[34;49m .. de = 0x80 ; if ( ( ( iSize > 4 ) || ( [39;49m[33;40mimm[39;49m[34;49m >= 0x100000000 ) ) ) { if ( rm != DSP ) { Compile_MoveImm_To_Reg ( THRU_REG, imm, iSize ) ; _Comp .. [39;49m[32;49m
0x7fb6e779f0dd    498b47f0                mov rax, [r15-0x10]                                    [39;49m
[34;49m ..  0x80 ; if ( ( ( iSize > 4 ) || ( imm [39;49m[33;40m>=[39;49m[34;49m 0x100000000 ) ) ) { if ( rm != DSP ) { Compile_MoveImm_To_Reg ( THRU_REG, imm, iSize ) ; _Compile_ .. [39;49m[32;49m
0x7fb6e779f0e1    49b90000000001000000    mov r9, 0x100000000                                    [39;49m[32;49m
0x7fb6e779f0eb    4c3bc8                  cmp r9, rax                                            [39;49m[32;49m
0x7fb6e779f0ee    0f9cc0                  setl al                                                [39;49m[32;49m
0x7fb6e779f0f1    480fb6c0                movzx rax, al                                          [39;49m[32;49m
0x7fb6e779f0f5    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e779f0f9    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ( iSize > 4 ) || ( imm >= 0x100000000 [39;49m[33;40m)[39;49m[34;49m ) ) { if ( rm != DSP ) { Compile_MoveImm_To_Reg ( THRU_REG, imm, iSize ) ; _Compile_X_Group1_Reg_To .. [39;49m[32;49m
0x7fb6e779f0fc    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fb6e779f0ff    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fb6e779f103    4983ee10                sub r14, 0x10                                          [39;49m[32;49m
0x7fb6e779f107    480bc1                  or rax, rcx                                            [39;49m
[34;49m ..  opCode = 0x80 ; if ( ( ( iSize > 4 ) [39;49m[33;40m||[39;49m[34;49m ( imm >= 0x100000000 ) ) ) { if ( rm != DSP ) { Compile_MoveImm_To_Reg ( THRU_REG, imm, iSize ) ;  .. [39;49m[32;49m
0x7fb6e779f10a    4885c0                  test rax, rax                                          [39;49m
[34;49m .. abs ( imm ) < 0x100 ) ) opCode |= 3 ; [39;49m[33;40m}[39;49m[34;49mompile_CalculateWrite_Instruction_X64 ( 0, opCode, mod, code, rm, REX_W | MODRM_B | IMM_B | DISP_B,  .. [39;49m[32;49m
0x7fb6e779f10d    4885c0                  test rax, rax                                          [39;49m[32;49m
0x7fb6e779f110    0f841f010000            jz 0x7fb6e779f235          	< C_Syntax.[34;49m_Compile_X_Group1_Immediate[39;49m+395[32;49m >[39;49m[39;49m
[34;49m ..  || ( imm >= 0x100000000 ) ) ) { if ( [39;49m[33;40mrm[39;49m[34;49m != DSP ) { Compile_MoveImm_To_Reg ( THRU_REG, imm, iSize ) ; _Compile_X_Group1_Reg_To_Reg ( code,  .. [39;49m[32;49m
0x7fb6e779f116    498b47e0                mov rax, [r15-0x20]                                    [39;49m
[34;49m ..  ( imm >= 0x100000000 ) ) ) { if ( rm [39;49m[33;40m!=[39;49m[34;49m DSP ) { Compile_MoveImm_To_Reg ( THRU_REG, imm, iSize ) ; _Compile_X_Group1_Reg_To_Reg ( code, rm, .. [39;49m[32;49m
0x7fb6e779f11a    4883f80e                cmp rax, 0xe                                           [39;49m[32;49m
0x7fb6e779f11e    0f8467000000            jz 0x7fb6e779f18b          	< C_Syntax.[34;49m_Compile_X_Group1_Immediate[39;49m+225[32;49m >[39;49m[39;49m
[34;49m .. m != DSP ) { Compile_MoveImm_To_Reg ( [39;49m[33;40mTHRU_REG[39;49m[34;49m, imm, iSize ) ; _Compile_X_Group1_Reg_To_Reg ( code, rm, THRU_REG ) ; } else { Compile_MoveI .. [39;49m[32;49m
0x7fb6e779f124    48c7c009000000          mov rax, 0x9                                           [39;49m[32;49m
0x7fb6e779f12b    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e779f12f    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  { Compile_MoveImm_To_Reg ( THRU_REG, [39;49m[33;40mimm[39;49m[34;49m, iSize ) ; _Compile_X_Group1_Reg_To_Reg ( code, rm, THRU_REG ) ; } else { Compile_MoveImm_To_Reg  .. [39;49m[32;49m
0x7fb6e779f132    498b47f0                mov rax, [r15-0x10]                                    [39;49m[32;49m
0x7fb6e779f136    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e779f13a    498906                  mov [r14], rax                                         [39;49m
[34;49m .. mpile_MoveImm_To_Reg ( THRU_REG, imm, [39;49m[33;40miSize[39;49m[34;49m ) ; _Compile_X_Group1_Reg_To_Reg ( code, rm, THRU_REG ) ; } else { Compile_MoveImm_To_Reg ( ACC .. [39;49m[32;49m
0x7fb6e779f13d    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e779f141    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e779f145    498906                  mov [r14], rax                                         [39;49m
[34;49m .. x100000000 ) ) ) { if ( rm != DSP ) { [39;49m[33;40mCompile_MoveImm_To_Reg[39;49m[34;49m ( THRU_REG, imm, iSize ) ; _Compile_X_Group1_Reg_To_Reg ( code, rm, THRU_REG ) .. [39;49m[32;49m
0x7fb6e779f148    49b969e479e7b67f0000    mov r9, 0x7fb6e779e469                                 [39;49m[32;49m
0x7fb6e779f152    49ffd1                  call r9                    	< C_Syntax.[34;49mCompile_MoveImm_To_Reg[39;49m : 0x00007fb6e779e469[32;49m >[39;49m[39;49m
[34;49m .. ze ) ; _Compile_X_Group1_Reg_To_Reg ( [39;49m[33;40mcode[39;49m[34;49m, rm, THRU_REG ) ; } else { Compile_MoveImm_To_Reg ( ACC, imm, iSize ) ; _Compile_X_Group1 ( code .. [39;49m[32;49m
0x7fb6e779f155    498b47d0                mov rax, [r15-0x30]                                    [39;49m[32;49m
0x7fb6e779f159    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e779f15d    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  _Compile_X_Group1_Reg_To_Reg ( code, [39;49m[33;40mrm[39;49m[34;49m, THRU_REG ) ; } else { Compile_MoveImm_To_Reg ( ACC, imm, iSize ) ; _Compile_X_Group1 ( code, REG, .. [39;49m[32;49m
0x7fb6e779f160    498b47e0                mov rax, [r15-0x20]                                    [39;49m[32;49m
0x7fb6e779f164    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e779f168    498906                  mov [r14], rax                                         [39;49m
[34;49m .. mpile_X_Group1_Reg_To_Reg ( code, rm, [39;49m[33;40mTHRU_REG[39;49m[34;49m ) ; } else { Compile_MoveImm_To_Reg ( ACC, imm, iSize ) ; _Compile_X_Group1 ( code, REG, MEM .. [39;49m[32;49m
0x7fb6e779f16b    48c7c009000000          mov rax, 0x9                                           [39;49m[32;49m
0x7fb6e779f172    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e779f176    498906                  mov [r14], rax                                         [39;49m
[34;49m .. Imm_To_Reg ( THRU_REG, imm, iSize ) ; [39;49m[33;40m_Compile_X_Group1_Reg_To_Reg[39;49m[34;49m ( code, rm, THRU_REG ) ; } else { Compile_MoveImm_To_Reg ( ACC, imm, iSi .. [39;49m[32;49m
0x7fb6e779f179    49b915f079e7b67f0000    mov r9, 0x7fb6e779f015                                 [39;49m[32;49m
0x7fb6e779f183    49ffd1                  call r9                    	< C_Syntax.[34;49m_Compile_X_Group1_Reg_To_Reg[39;49m : 0x00007fb6e779f015[32;49m >[39;49m[39;49m
[34;49m .. 1_Reg_To_Reg ( code, rm, THRU_REG ) ; [39;49m[33;40m}[39;49m[34;49m else { Compile_MoveImm_To_Reg ( ACC, imm, iSize ) ; _Compile_X_Group1 ( code, REG, MEM, ACC, rm, 0, .. [39;49m[32;49m
0x7fb6e779f186    e9a5000000              jmp 0x7fb6e779f230         	< C_Syntax.[34;49m_Compile_X_Group1_Immediate[39;49m+390[32;49m >[39;49m[39;49m
[34;49m .. ) ; } else { Compile_MoveImm_To_Reg ( [39;49m[33;40mACC[39;49m[34;49m, imm, iSize ) ; _Compile_X_Group1 ( code, REG, MEM, ACC, rm, 0, disp, CELL ) ; } return ; } else  .. [39;49m[32;49m
0x7fb6e779f18b    48c7c000000000          mov rax, 0x0                                           [39;49m[32;49m
0x7fb6e779f192    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e779f196    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  else { Compile_MoveImm_To_Reg ( ACC, [39;49m[33;40mimm[39;49m[34;49m, iSize ) ; _Compile_X_Group1 ( code, REG, MEM, ACC, rm, 0, disp, CELL ) ; } return ; } else if (  .. [39;49m[32;49m
0x7fb6e779f199    498b47f0                mov rax, [r15-0x10]                                    [39;49m[32;49m
0x7fb6e779f19d    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e779f1a1    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  { Compile_MoveImm_To_Reg ( ACC, imm, [39;49m[33;40miSize[39;49m[34;49m ) ; _Compile_X_Group1 ( code, REG, MEM, ACC, rm, 0, disp, CELL ) ; } return ; } else if ( ( iSi .. [39;49m[32;49m
0x7fb6e779f1a4    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e779f1a8    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e779f1ac    498906                  mov [r14], rax                                         [39;49m
[34;49m .. Reg ( code, rm, THRU_REG ) ; } else { [39;49m[33;40mCompile_MoveImm_To_Reg[39;49m[34;49m ( ACC, imm, iSize ) ; _Compile_X_Group1 ( code, REG, MEM, ACC, rm, 0, disp, CE .. [39;49m[32;49m
0x7fb6e779f1af    49b969e479e7b67f0000    mov r9, 0x7fb6e779e469                                 [39;49m[32;49m
0x7fb6e779f1b9    49ffd1                  call r9                    	< C_Syntax.[34;49mCompile_MoveImm_To_Reg[39;49m : 0x00007fb6e779e469[32;49m >[39;49m[39;49m
[34;49m .. C, imm, iSize ) ; _Compile_X_Group1 ( [39;49m[33;40mcode[39;49m[34;49m, REG, MEM, ACC, rm, 0, disp, CELL ) ; } return ; } else if ( ( iSize > BYTE ) || (abs ( imm ) >= .. [39;49m[32;49m
0x7fb6e779f1bc    498b47d0                mov rax, [r15-0x30]                                    [39;49m[32;49m
0x7fb6e779f1c0    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e779f1c4    498906                  mov [r14], rax                                         [39;49m
[34;49m .. , iSize ) ; _Compile_X_Group1 ( code, [39;49m[33;40mREG[39;49m[34;49m, MEM, ACC, rm, 0, disp, CELL ) ; } return ; } else if ( ( iSize > BYTE ) || (abs ( imm ) >= 0x7f  .. [39;49m[32;49m
0x7fb6e779f1c7    48c7c003000000          mov rax, 0x3                                           [39;49m[32;49m
0x7fb6e779f1ce    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e779f1d2    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ze ) ; _Compile_X_Group1 ( code, REG, [39;49m[33;40mMEM[39;49m[34;49m, ACC, rm, 0, disp, CELL ) ; } return ; } else if ( ( iSize > BYTE ) || (abs ( imm ) >= 0x7f ) ) { .. [39;49m[32;49m
0x7fb6e779f1d5    48c7c000000000          mov rax, 0x0                                           [39;49m[32;49m
0x7fb6e779f1dc    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e779f1e0    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ; _Compile_X_Group1 ( code, REG, MEM, [39;49m[33;40mACC[39;49m[34;49m, rm, 0, disp, CELL ) ; } return ; } else if ( ( iSize > BYTE ) || (abs ( imm ) >= 0x7f ) ) { opCo .. [39;49m[32;49m
0x7fb6e779f1e3    48c7c000000000          mov rax, 0x0                                           [39;49m[32;49m
0x7fb6e779f1ea    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e779f1ee    498906                  mov [r14], rax                                         [39;49m
[34;49m .. mpile_X_Group1 ( code, REG, MEM, ACC, [39;49m[33;40mrm[39;49m[34;49m, 0, disp, CELL ) ; } return ; } else if ( ( iSize > BYTE ) || (abs ( imm ) >= 0x7f ) ) { opCode |= .. [39;49m[32;49m
0x7fb6e779f1f1    498b47e0                mov rax, [r15-0x20]                                    [39;49m[32;49m
0x7fb6e779f1f5    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e779f1f9    498906                  mov [r14], rax                                         [39;49m
[34;49m .. e_X_Group1 ( code, REG, MEM, ACC, rm, [39;49m[33;40m0[39;49m[34;49m, disp, CELL ) ; } return ; } else if ( ( iSize > BYTE ) || (abs ( imm ) >= 0x7f ) ) { opCode |= 1 ; .. [39;49m[32;49m
0x7fb6e779f1fc    48c7c000000000          mov rax, 0x0                                           [39;49m[32;49m
0x7fb6e779f203    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e779f207    498906                  mov [r14], rax                                         [39;49m
[34;49m .. _Group1 ( code, REG, MEM, ACC, rm, 0, [39;49m[33;40mdisp[39;49m[34;49m, CELL ) ; } return ; } else if ( ( iSize > BYTE ) || (abs ( imm ) >= 0x7f ) ) { opCode |= 1 ; }  .. [39;49m[32;49m
0x7fb6e779f20a    498b47e8                mov rax, [r15-0x18]                                    [39;49m[32;49m
0x7fb6e779f20e    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e779f212    498906                  mov [r14], rax                                         [39;49m
[34;49m .. 1 ( code, REG, MEM, ACC, rm, 0, disp, [39;49m[33;40mCELL[39;49m[34;49m ) ; } return ; } else if ( ( iSize > BYTE ) || (abs ( imm ) >= 0x7f ) ) { opCode |= 1 ; } else i .. [39;49m[32;49m
0x7fb6e779f215    48c7c008000000          mov rax, 0x8                                           [39;49m[32;49m
0x7fb6e779f21c    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e779f220    498906                  mov [r14], rax                                         [39;49m
[34;49m .. _MoveImm_To_Reg ( ACC, imm, iSize ) ; [39;49m[33;40m_Compile_X_Group1[39;49m[34;49m ( code, REG, MEM, ACC, rm, 0, disp, CELL ) ; } return ; } else if ( ( iSize > BYTE  .. [39;49m[32;49m
0x7fb6e779f223    49b9e5ed79e7b67f0000    mov r9, 0x7fb6e779ede5                                 [39;49m[32;49m
0x7fb6e779f22d    49ffd1                  call r9                    	< C_Syntax.[34;49m_Compile_X_Group1[39;49m : 0x00007fb6e779ede5[32;49m >[39;49m[39;49m
[34;49m .. ACC, rm, 0, disp, CELL ) ; } return ; [39;49m[33;40m}[39;49m[34;49m else if ( ( iSize > BYTE ) || (abs ( imm ) >= 0x7f ) ) { opCode |= 1 ; } else if ( ( iSize <= BYTE  .. [39;49m[32;49m
0x7fb6e779f230    e903010000              jmp 0x7fb6e779f338         	< C_Syntax.[34;49m_Compile_X_Group1_Immediate[39;49m+654[32;49m >[39;49m[39;49m
[34;49m .. sp, CELL ) ; } return ; } else if ( ( [39;49m[33;40miSize[39;49m[34;49m > BYTE ) || (abs ( imm ) >= 0x7f ) ) { opCode |= 1 ; } else if ( ( iSize <= BYTE ) || (abs ( im .. [39;49m[32;49m
0x7fb6e779f235    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. LL ) ; } return ; } else if ( ( iSize [39;49m[33;40m>[39;49m[34;49m BYTE ) || (abs ( imm ) >= 0x7f ) ) { opCode |= 1 ; } else if ( ( iSize <= BYTE ) || (abs ( imm ) <  .. [39;49m[32;49m
0x7fb6e779f239    4883f801                cmp rax, 0x1                                           [39;49m[32;49m
0x7fb6e779f23d    0f9fc0                  setg al                                                [39;49m
[34;49m ..  ) ; } return ; } else if ( ( iSize > [39;49m[33;40mBYTE[39;49m[34;49m ) || (abs ( imm ) >= 0x7f ) ) { opCode |= 1 ; } else if ( ( iSize <= BYTE ) || (abs ( imm ) < 0x .. [39;49m[32;49m
0x7fb6e779f240    480fb6c0                movzx rax, al                                          [39;49m[32;49m
0x7fb6e779f244    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e779f248    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  else if ( ( iSize > BYTE ) || (abs ( [39;49m[33;40mimm[39;49m[34;49m ) >= 0x7f ) ) { opCode |= 1 ; } else if ( ( iSize <= BYTE ) || (abs ( imm ) < 0x100 ) ) opCode |= .. [39;49m[32;49m
0x7fb6e779f24b    498b47f0                mov rax, [r15-0x10]                                    [39;49m
[34;49m .. imm >= 0x100000000 ) ) ) { if ( rm != [39;49m[33;40mDSP[39;49m[34;49m ) { Compile_MoveImm_To_Reg ( THRU_REG, imm, iSize ) ; _Compile_X_Group1_Reg_To_Reg ( code, rm, TH .. [39;49m[32;49m
0x7fb6e779f24f    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e779f253    498906                  mov [r14], rax                                         [39;49m
[34;49m .. rn ; } else if ( ( iSize > BYTE ) || ([39;49m[33;40mabs[39;49m[34;49m ( imm ) >= 0x7f ) ) { opCode |= 1 ; } else if ( ( iSize <= BYTE ) || (abs ( imm ) < 0x100 ) ) opC .. [39;49m[32;49m
0x7fb6e779f256    49b915d079e7b67f0000    mov r9, 0x7fb6e779d015                                 [39;49m[32;49m
0x7fb6e779f260    49ffd1                  call r9                    	< C_Syntax.[34;49mabs[39;49m : 0x00007fb6e779d015[32;49m >[39;49m[39;49m
[34;49m .. ( ( iSize > BYTE ) || (abs ( imm ) >= [39;49m[33;40m0x7f[39;49m[34;49m ) ) { opCode |= 1 ; } else if ( ( iSize <= BYTE ) || (abs ( imm ) < 0x100 ) ) opCode |= 3 ; Comp .. [39;49m[32;49m
0x7fb6e779f263    48c7c07f000000          mov rax, 0x7f                                          [39;49m[32;49m
0x7fb6e779f26a    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fb6e779f26d    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fb6e779f270    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m .. if ( ( iSize > BYTE ) || (abs ( imm ) [39;49m[33;40m>=[39;49m[34;49m 0x7f ) ) { opCode |= 1 ; } else if ( ( iSize <= BYTE ) || (abs ( imm ) < 0x100 ) ) opCode |= 3 ; C .. [39;49m[32;49m
0x7fb6e779f274    483bc1                  cmp rax, rcx                                           [39;49m[32;49m
0x7fb6e779f277    0f9dc0                  setge al                                               [39;49m[32;49m
0x7fb6e779f27a    480fb6c0                movzx rax, al                                          [39;49m[32;49m
0x7fb6e779f27e    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e779f282    498906                  mov [r14], rax                                         [39;49m
[34;49m .. Size > BYTE ) || (abs ( imm ) >= 0x7f [39;49m[33;40m)[39;49m[34;49m ) { opCode |= 1 ; } else if ( ( iSize <= BYTE ) || (abs ( imm ) < 0x100 ) ) opCode |= 3 ; Compile_C .. [39;49m[32;49m
0x7fb6e779f285    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fb6e779f288    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fb6e779f28c    4983ee10                sub r14, 0x10                                          [39;49m[32;49m
0x7fb6e779f290    480bc1                  or rax, rcx                                            [39;49m[32;49m
0x7fb6e779f293    4885c0                  test rax, rax                                          [39;49m
[34;49m .. abs ( imm ) < 0x100 ) ) opCode |= 3 ; [39;49m[33;40m}[39;49m[34;49mompile_CalculateWrite_Instruction_X64 ( 0, opCode, mod, code, rm, REX_W | MODRM_B | IMM_B | DISP_B,  .. [39;49m[32;49m
0x7fb6e779f296    4885c0                  test rax, rax                                          [39;49m[32;49m
0x7fb6e779f299    0f841a000000            jz 0x7fb6e779f2b9          	< C_Syntax.[34;49m_Compile_X_Group1_Immediate[39;49m+527[32;49m >[39;49m[39;49m[32;49m
0x7fb6e779f29f    498d5f08                lea rbx, [r15+0x8]                                     [39;49m
[34;49m ..  BYTE ) || (abs ( imm ) >= 0x7f ) ) { [39;49m[33;40mopCode[39;49m[34;49m |= 1 ; } else if ( ( iSize <= BYTE ) || (abs ( imm ) < 0x100 ) ) opCode |= 3 ; Compile_Calcula .. [39;49m[32;49m
0x7fb6e779f2a3    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m ..  (abs ( imm ) >= 0x7f ) ) { opCode |= [39;49m[33;40m1[39;49m[34;49m ; } else if ( ( iSize <= BYTE ) || (abs ( imm ) < 0x100 ) ) opCode |= 3 ; Compile_CalculateWrite_In .. [39;49m[32;49m
0x7fb6e779f2a7    48c7c101000000          mov rcx, 0x1                                           [39;49m[32;49m
0x7fb6e779f2ae    480bc1                  or rax, rcx                                            [39;49m
[34;49m ..  || (abs ( imm ) >= 0x7f ) ) { opCode [39;49m[33;40m|=[39;49m[34;49m 1 ; } else if ( ( iSize <= BYTE ) || (abs ( imm ) < 0x100 ) ) opCode |= 3 ; Compile_CalculateWrite .. [39;49m[32;49m
0x7fb6e779f2b1    488903                  mov [rbx], rax                                         [39;49m
[34;49m .. s ( imm ) >= 0x7f ) ) { opCode |= 1 ; [39;49m[33;40m}[39;49m[34;49m else if ( ( iSize <= BYTE ) || (abs ( imm ) < 0x100 ) ) opCode |= 3 ; Compile_CalculateWrite_Instru .. [39;49m[32;49m
0x7fb6e779f2b4    e97f000000              jmp 0x7fb6e779f338         	< C_Syntax.[34;49m_Compile_X_Group1_Immediate[39;49m+654[32;49m >[39;49m[39;49m
[34;49m .. x7f ) ) { opCode |= 1 ; } else if ( ( [39;49m[33;40miSize[39;49m[34;49m <= BYTE ) || (abs ( imm ) < 0x100 ) ) opCode |= 3 ; Compile_CalculateWrite_Instruction_X64 ( 0, .. [39;49m[32;49m
0x7fb6e779f2b9    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. ) { opCode |= 1 ; } else if ( ( iSize [39;49m[33;40m<=[39;49m[34;49m BYTE ) || (abs ( imm ) < 0x100 ) ) opCode |= 3 ; Compile_CalculateWrite_Instruction_X64 ( 0, opCod .. [39;49m[32;49m
0x7fb6e779f2bd    4883f801                cmp rax, 0x1                                           [39;49m[32;49m
0x7fb6e779f2c1    0f9ec0                  setle al                                               [39;49m
[34;49m ..  opCode |= 1 ; } else if ( ( iSize <= [39;49m[33;40mBYTE[39;49m[34;49m ) || (abs ( imm ) < 0x100 ) ) opCode |= 3 ; Compile_CalculateWrite_Instruction_X64 ( 0, opCode,  .. [39;49m[32;49m
0x7fb6e779f2c4    480fb6c0                movzx rax, al                                          [39;49m
[34;49m ..  ) >= 0x7f ) ) { opCode |= 1 ; } else [39;49m[33;40m{[39;49m[34;49mf ( ( iSize <= BYTE ) || (abs ( imm ) < 0x100 ) ) opCode |= 3 ; Compile_CalculateWrite_Instruction_X .. [39;49m[32;49m
0x7fb6e779f2c8    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e779f2cc    498906                  mov [r14], rax                                         [39;49m
[34;49m .. else if ( ( iSize <= BYTE ) || (abs ( [39;49m[33;40mimm[39;49m[34;49m ) < 0x100 ) ) opCode |= 3 ; Compile_CalculateWrite_Instruction_X64 ( 0, opCode, mod, code, rm, RE .. [39;49m[32;49m
0x7fb6e779f2cf    498b47f0                mov rax, [r15-0x10]                                    [39;49m[32;49m
0x7fb6e779f2d3    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e779f2d7    498906                  mov [r14], rax                                         [39;49m
[34;49m .. 1 ; } else if ( ( iSize <= BYTE ) || ([39;49m[33;40mabs[39;49m[34;49m ( imm ) < 0x100 ) ) opCode |= 3 ; Compile_CalculateWrite_Instruction_X64 ( 0, opCode, mod, code,  .. [39;49m[32;49m
0x7fb6e779f2da    49b915d079e7b67f0000    mov r9, 0x7fb6e779d015                                 [39;49m[32;49m
0x7fb6e779f2e4    49ffd1                  call r9                    	< C_Syntax.[34;49mabs[39;49m : 0x00007fb6e779d015[32;49m >[39;49m[39;49m
[34;49m .. ( ( iSize <= BYTE ) || (abs ( imm ) < [39;49m[33;40m0x100[39;49m[34;49m ) ) opCode |= 3 ; Compile_CalculateWrite_Instruction_X64 ( 0, opCode, mod, code, rm, REX_W | MO .. [39;49m[32;49m
0x7fb6e779f2e7    48c7c000010000          mov rax, 0x100                                         [39;49m[32;49m
0x7fb6e779f2ee    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fb6e779f2f1    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fb6e779f2f4    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m .. f ( ( iSize <= BYTE ) || (abs ( imm ) [39;49m[33;40m<[39;49m[34;49m 0x100 ) ) opCode |= 3 ; Compile_CalculateWrite_Instruction_X64 ( 0, opCode, mod, code, rm, REX_W |  .. [39;49m[32;49m
0x7fb6e779f2f8    483bc1                  cmp rax, rcx                                           [39;49m[32;49m
0x7fb6e779f2fb    0f9cc0                  setl al                                                [39;49m[32;49m
0x7fb6e779f2fe    480fb6c0                movzx rax, al                                          [39;49m[32;49m
0x7fb6e779f302    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e779f306    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ize <= BYTE ) || (abs ( imm ) < 0x100 [39;49m[33;40m)[39;49m[34;49m ) opCode |= 3 ; Compile_CalculateWrite_Instruction_X64 ( 0, opCode, mod, code, rm, REX_W | MODRM_B  .. [39;49m[32;49m
0x7fb6e779f309    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fb6e779f30c    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fb6e779f310    4983ee10                sub r14, 0x10                                          [39;49m[32;49m
0x7fb6e779f314    480bc1                  or rax, rcx                                            [39;49m[32;49m
0x7fb6e779f317    4885c0                  test rax, rax                                          [39;49m
[34;49m ..  (abs ( imm ) < 0x100 ) ) opCode |= 3 [39;49m[33;40m;[39;49m[34;49m Compile_CalculateWrite_Instruction_X64 ( 0, opCode, mod, code, rm, REX_W | MODRM_B | IMM_B | DISP_B .. [39;49m[32;49m
0x7fb6e779f31a    4885c0                  test rax, rax                                          [39;49m[32;49m
0x7fb6e779f31d    0f8415000000            jz 0x7fb6e779f338          	< C_Syntax.[34;49m_Compile_X_Group1_Immediate[39;49m+654[32;49m >[39;49m[39;49m[32;49m
0x7fb6e779f323    498d5f08                lea rbx, [r15+0x8]                                     [39;49m
[34;49m .. <= BYTE ) || (abs ( imm ) < 0x100 ) ) [39;49m[33;40mopCode[39;49m[34;49m |= 3 ; Compile_CalculateWrite_Instruction_X64 ( 0, opCode, mod, code, rm, REX_W | MODRM_B | IM .. [39;49m[32;49m
0x7fb6e779f327    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m .. || (abs ( imm ) < 0x100 ) ) opCode |= [39;49m[33;40m3[39;49m[34;49m ; Compile_CalculateWrite_Instruction_X64 ( 0, opCode, mod, code, rm, REX_W | MODRM_B | IMM_B | DISP .. [39;49m[32;49m
0x7fb6e779f32b    48c7c103000000          mov rcx, 0x3                                           [39;49m[32;49m
0x7fb6e779f332    480bc1                  or rax, rcx                                            [39;49m
[34;49m ..  ) || (abs ( imm ) < 0x100 ) ) opCode [39;49m[33;40m|=[39;49m[34;49m 3 ; Compile_CalculateWrite_Instruction_X64 ( 0, opCode, mod, code, rm, REX_W | MODRM_B | IMM_B | D .. [39;49m[32;49m
0x7fb6e779f335    488903                  mov [rbx], rax                                         [39;49m
[34;49m .. pile_CalculateWrite_Instruction_X64 ( [39;49m[33;40m0[39;49m[34;49m, opCode, mod, code, rm, REX_W | MODRM_B | IMM_B | DISP_B, 0, disp, 0, imm, iSize ) ; }  .. [39;49m[32;49m
0x7fb6e779f338    48c7c000000000          mov rax, 0x0                                           [39;49m[32;49m
0x7fb6e779f33f    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e779f343    498906                  mov [r14], rax                                         [39;49m
[34;49m .. e_CalculateWrite_Instruction_X64 ( 0, [39;49m[33;40mopCode[39;49m[34;49m, mod, code, rm, REX_W | MODRM_B | IMM_B | DISP_B, 0, disp, 0, imm, iSize ) ; }  .. [39;49m[32;49m
0x7fb6e779f346    498b4708                mov rax, [r15+0x8]                                     [39;49m[32;49m
0x7fb6e779f34a    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e779f34e    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ateWrite_Instruction_X64 ( 0, opCode, [39;49m[33;40mmod[39;49m[34;49m, code, rm, REX_W | MODRM_B | IMM_B | DISP_B, 0, disp, 0, imm, iSize ) ; }  .. [39;49m[32;49m
0x7fb6e779f351    498b47d8                mov rax, [r15-0x28]                                    [39;49m[32;49m
0x7fb6e779f355    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e779f359    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ite_Instruction_X64 ( 0, opCode, mod, [39;49m[33;40mcode[39;49m[34;49m, rm, REX_W | MODRM_B | IMM_B | DISP_B, 0, disp, 0, imm, iSize ) ; }  .. [39;49m[32;49m
0x7fb6e779f35c    498b47d0                mov rax, [r15-0x30]                                    [39;49m[32;49m
0x7fb6e779f360    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e779f364    498906                  mov [r14], rax                                         [39;49m
[34;49m .. struction_X64 ( 0, opCode, mod, code, [39;49m[33;40mrm[39;49m[34;49m, REX_W | MODRM_B | IMM_B | DISP_B, 0, disp, 0, imm, iSize ) ; }  .. [39;49m[32;49m
0x7fb6e779f367    498b47e0                mov rax, [r15-0x20]                                    [39;49m[32;49m
0x7fb6e779f36b    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e779f36f    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ction_X64 ( 0, opCode, mod, code, rm, [39;49m[33;40mREX_W[39;49m[34;49m | MODRM_B | IMM_B | DISP_B, 0, disp, 0, imm, iSize ) ; }  .. [39;49m[32;49m
0x7fb6e779f372    48c7c022000000          mov rax, 0x22                                          [39;49m
[34;49m .. ode, mod, code, rm, REX_W | MODRM_B | [39;49m[33;40mIMM_B[39;49m[34;49m | DISP_B, 0, disp, 0, imm, iSize ) ; }  .. [39;49m[32;49m
0x7fb6e779f379    48c7c110000000          mov rcx, 0x10                                          [39;49m
[34;49m .. pCode, mod, code, rm, REX_W | MODRM_B [39;49m[33;40m|[39;49m[34;49m IMM_B | DISP_B, 0, disp, 0, imm, iSize ) ; }  .. [39;49m[32;49m
0x7fb6e779f380    480bc1                  or rax, rcx                                            [39;49m
[34;49m .. , code, rm, REX_W | MODRM_B | IMM_B | [39;49m[33;40mDISP_B[39;49m[34;49m, 0, disp, 0, imm, iSize ) ; }  .. [39;49m[32;49m
0x7fb6e779f383    48c7c108000000          mov rcx, 0x8                                           [39;49m
[34;49m .. od, code, rm, REX_W | MODRM_B | IMM_B [39;49m[33;40m|[39;49m[34;49m DISP_B, 0, disp, 0, imm, iSize ) ; }  .. [39;49m[32;49m
0x7fb6e779f38a    480bc1                  or rax, rcx                                            [39;49m[32;49m
0x7fb6e779f38d    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e779f391    498906                  mov [r14], rax                                         [39;49m
[34;49m .. rm, REX_W | MODRM_B | IMM_B | DISP_B, [39;49m[33;40m0[39;49m[34;49m, disp, 0, imm, iSize ) ; }  .. [39;49m[32;49m
0x7fb6e779f394    48c7c000000000          mov rax, 0x0                                           [39;49m[32;49m
0x7fb6e779f39b    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e779f39f    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  REX_W | MODRM_B | IMM_B | DISP_B, 0, [39;49m[33;40mdisp[39;49m[34;49m, 0, imm, iSize ) ; }  .. [39;49m[32;49m
0x7fb6e779f3a2    498b47e8                mov rax, [r15-0x18]                                    [39;49m[32;49m
0x7fb6e779f3a6    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e779f3aa    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  | MODRM_B | IMM_B | DISP_B, 0, disp, [39;49m[33;40m0[39;49m[34;49m, imm, iSize ) ; }  .. [39;49m[32;49m
0x7fb6e779f3ad    48c7c000000000          mov rax, 0x0                                           [39;49m[32;49m
0x7fb6e779f3b4    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e779f3b8    498906                  mov [r14], rax                                         [39;49m
[34;49m .. MODRM_B | IMM_B | DISP_B, 0, disp, 0, [39;49m[33;40mimm[39;49m[34;49m, iSize ) ; }  .. [39;49m[32;49m
0x7fb6e779f3bb    498b47f0                mov rax, [r15-0x10]                                    [39;49m[32;49m
0x7fb6e779f3bf    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e779f3c3    498906                  mov [r14], rax                                         [39;49m
[34;49m .. _B | IMM_B | DISP_B, 0, disp, 0, imm, [39;49m[33;40miSize[39;49m[34;49m ) ; }  .. [39;49m[32;49m
0x7fb6e779f3c6    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e779f3ca    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e779f3ce    498906                  mov [r14], rax                                         [39;49m
[34;49m .. abs ( imm ) < 0x100 ) ) opCode |= 3 ; [39;49m[33;40mCompile_CalculateWrite_Instruction_X64[39;49m[34;49m ( 0, opCode, mod, code, rm, REX_W | MODRM_B | IMM_B | DISP_B,  .. [39;49m[32;49m
0x7fb6e779f3d1    49b95dd979e7b67f0000    mov r9, 0x7fb6e779d95d                                 [39;49m[32;49m
0x7fb6e779f3db    49ffd1                  call r9                    	< C_Syntax.[34;49mCompile_CalculateWrite_Instruction_X64[39;49m : 0x00007fb6e779d95d[32;49m >[39;49m[39;49m
[34;49m ..  | DISP_B, 0, disp, 0, imm, iSize ) ; [39;49m[33;40m}[39;49m[34;49m  .. [39;49m[32;49m
0x7fb6e779f3de    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e779f3e2    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e779f3e6    4983ee30                sub r14, 0x30                                          [39;49m[32;49m
0x7fb6e779f3ea    c3                      ret                                                    [39;49m
Word_Disassemble : word - '_Compile_X_Group1_Immediate' :: codeSize = 832
Word : 0x00007fb6e4760a80 :: Compiled at : 0x00007fb6e779f0aa
 =============================
::> 'wdiss' was called at namespaces/compiler/x64.csl 668.32 <::

 =============================
C_Syntax.[34;49m_Compile_Stack_PopToReg[39;49m <:> csl compiled word, prefix
SourceCode for C_Syntax.[34;49m_Compile_Stack_PopToReg[39;49m :> 
[34;49m: _Compile_Stack_PopToReg ( reg ) _Compile_Move_DataStackN_ToReg ( reg, 0 ) _Compile_SUBI_DSP ( CELL ) ;; [39;49m
Source code file location of [34;49m_Compile_Stack_PopToReg[39;49m : "namespaces/compiler/x64.csl" : 731.2 :: we are now at : namespaces/compiler/x64.csl : 738.36
Compiled with : optimizeOn, inlineOn, infixOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xe779f9ef -- code size = 93 bytes
TypeSignature : 
 -----------------------------
Word :: C_Syntax.[34;49m_Compile_Stack_PopToReg[39;49m : definition = 0x00007fb6e779f9ef : disassembly at namespaces/compiler/x64.csl : 738.36 :
[34;49m ..                                     : [39;49m[33;40m_Compile_Stack_PopToReg[39;49m[34;49m ( reg )  _Compile_Move_DataStackN_ToReg ( reg, 0 ) _Compile_SUBI_DSP ( CELL ) .. [39;49m[32;49m
0x7fb6e779f9ef    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fb6e779f9f3    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e779f9f7    4981c608000000          add r14, 0x8                                           [39;49m
[34;49m .. g )  _Compile_Move_DataStackN_ToReg ( [39;49m[33;40mreg[39;49m[34;49m, 0 ) _Compile_SUBI_DSP ( CELL ) ;; [39;49m[32;49m
0x7fb6e779f9fe    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e779fa02    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e779fa06    498906                  mov [r14], rax                                         [39;49m
[34;49m .. _Compile_Move_DataStackN_ToReg ( reg, [39;49m[33;40m0[39;49m[34;49m ) _Compile_SUBI_DSP ( CELL ) ;; [39;49m[32;49m
0x7fb6e779fa09    48c7c000000000          mov rax, 0x0                                           [39;49m[32;49m
0x7fb6e779fa10    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e779fa14    498906                  mov [r14], rax                                         [39;49m
[34;49m ..    : _Compile_Stack_PopToReg ( reg )  [39;49m[33;40m_Compile_Move_DataStackN_ToReg[39;49m[34;49m ( reg, 0 ) _Compile_SUBI_DSP ( CELL ) ;;  .. [39;49m[32;49m
0x7fb6e779fa17    49b930f979e7b67f0000    mov r9, 0x7fb6e779f930                                 [39;49m[32;49m
0x7fb6e779fa21    49ffd1                  call r9                    	< C_Syntax.[34;49m_Compile_Move_DataStackN_ToReg[39;49m : 0x00007fb6e779f930[32;49m >[39;49m[39;49m
[34;49m .. _ToReg ( reg, 0 ) _Compile_SUBI_DSP ( [39;49m[33;40mCELL[39;49m[34;49m ) ;; [39;49m[32;49m
0x7fb6e779fa24    48c7c008000000          mov rax, 0x8                                           [39;49m[32;49m
0x7fb6e779fa2b    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e779fa2f    498906                  mov [r14], rax                                         [39;49m
[34;49m .. pile_Move_DataStackN_ToReg ( reg, 0 ) [39;49m[33;40m_Compile_SUBI_DSP[39;49m[34;49m ( CELL ) ;; [39;49m[32;49m
0x7fb6e779fa32    49b924f679e7b67f0000    mov r9, 0x7fb6e779f624                                 [39;49m[32;49m
0x7fb6e779fa3c    49ffd1                  call r9                    	< C_Syntax.[34;49m_Compile_SUBI_DSP[39;49m : 0x00007fb6e779f624[32;49m >[39;49m[39;49m
[34;49m .. ( reg, 0 ) _Compile_SUBI_DSP ( CELL ) [39;49m[33;40m;;[39;49m[34;49m [39;49m[32;49m
0x7fb6e779fa3f    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e779fa43    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e779fa47    4983ee08                sub r14, 0x8                                           [39;49m[32;49m
0x7fb6e779fa4b    c3                      ret                                                    [39;49m
Word_Disassemble : word - '_Compile_Stack_PopToReg' :: codeSize = 92
Word : 0x00007fb6e47752e0 :: Compiled at : 0x00007fb6e779f9ef
 =============================
::> 'wdiss' was called at namespaces/compiler/x64.csl 738.36 <::

 =============================
Combinators.[34;49miax[39;49m <:> csl compiled word
SourceCode for Combinators.[34;49miax[39;49m :> 
[34;49masm: iax _Compile_Stack_PopToReg ( R8D ) _Compile_CallThruReg ( R8D ) ;asm [39;49m
Source code file location of [34;49miax[39;49m : "namespaces/compiler/x64.csl" : 746.5 :: we are now at : namespaces/compiler/x64.csl : 753.17
Compiled with : optimizeOn, inlineOn, infixOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xe779fa60 -- code size = 11 bytes
 -----------------------------
Word :: Combinators.[34;49miax[39;49m : definition = 0x00007fb6e779fa60 : disassembly at namespaces/compiler/x64.csl : 753.17 :
[34;49m ..                              asm: iax [39;49m[33;40m_Compile_Stack_PopToReg[39;49m[34;49m ( R8D ) _Compile_CallThruReg ( R8D ) ;asm  .. [39;49m[32;49m
0x7fb6e779fa60    4d8b06                  mov r8, [r14]                                          [39;49m[32;49m
0x7fb6e779fa63    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m asm: iax _Compile_Stack_PopToReg ( R8D ) [39;49m[33;40m_Compile_CallThruReg[39;49m[34;49m ( R8D ) ;asm  .. [39;49m[32;49m
0x7fb6e779fa67    41ffd0                  call r8                                                [39;49m
[34;49m ..  ( R8D ) _Compile_CallThruReg ( R8D ) [39;49m[33;40m;asm[39;49m[34;49m [39;49m[32;49m
0x7fb6e779fa6a    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'iax' :: codeSize = 10
Word : 0x00007fb6e4775f58 :: Compiled at : 0x00007fb6e779fa60
 =============================
::> 'wdiss' was called at namespaces/compiler/x64.csl 753.17 <::

 =============================
User.[34;49mqeval[39;49m <:> csl compiled word
SourceCode for User.[34;49mqeval[39;49m :> 
[34;49m: qeval stk iax ; [39;49m
Source code file location of [34;49mqeval[39;49m : "namespaces/compiler/x64.csl" : 776.2 :: we are now at : namespaces/compiler/x64.csl : 779.19
Compiled with : optimizeOn, inlineOn, infixOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xe779fd46 -- code size = 27 bytes
 -----------------------------
Word :: User.[34;49mqeval[39;49m : definition = 0x00007fb6e779fd46 : disassembly at namespaces/compiler/x64.csl : 779.19 :
[34;49m ..                               : qeval [39;49m[33;40mstk[39;49m[34;49m iax ;  .. [39;49m[32;49m
0x7fb6e779fd46    49b922b693e7b67f0000    mov r9, 0x7fb6e793b622                                 [39;49m[32;49m
0x7fb6e779fd50    49ffd1                  call r9                    	< System.[34;49mstk[39;49m : 0x00007fb6e793b622[32;49m >[39;49m[39;49m
[34;49m ..                           : qeval stk [39;49m[33;40miax[39;49m[34;49m ;  .. [39;49m[32;49m
0x7fb6e779fd53    49b960fa79e7b67f0000    mov r9, 0x7fb6e779fa60                                 [39;49m[32;49m
0x7fb6e779fd5d    49ffd1                  call r9                    	< Combinators.[34;49miax[39;49m : 0x00007fb6e779fa60[32;49m >[39;49m[39;49m
[34;49m ..                       : qeval stk iax [39;49m[33;40m;[39;49m[34;49m  .. [39;49m[32;49m
0x7fb6e779fd60    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'qeval' :: codeSize = 26
Word : 0x00007fb6e477b8c0 :: Compiled at : 0x00007fb6e779fd46
 =============================
::> 'wdiss' was called at namespaces/compiler/x64.csl 779.19 <::

 =============================
User.[34;49mstest[39;49m <:> csl compiled word
SourceCode for User.[34;49mstest[39;49m :> 
[34;49masm: stest _Compile_MoveTOS_To_R8D ( ) _Compile_Move_DataStackN_ToReg ( R8D, 0 ) Compile_Stack_Push_R8D ( ) _Compile_SUBI_DSP ( CELL ) ;asm [39;49m
Source code file location of [34;49mstest[39;49m : "namespaces/compiler/x64.csl" : 782.5 :: we are now at : namespaces/compiler/x64.csl : 789.19
Compiled with : optimizeOn, inlineOn, infixOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xe779fd75 -- code size = 18 bytes
 -----------------------------
Word :: User.[34;49mstest[39;49m : definition = 0x00007fb6e779fd75 : disassembly at namespaces/compiler/x64.csl : 789.19 :
[34;49m ..                            asm: stest [39;49m[33;40m_Compile_MoveTOS_To_R8D[39;49m[34;49m ( )  _Compile_Move_DataStackN_ToReg ( R8D, 0 )  Compile_Stack_Push_R8D ( )  _ .. [39;49m[32;49m
0x7fb6e779fd75    4d8b06                  mov r8, [r14]                                          [39;49m
[34;49m  asm: stest _Compile_MoveTOS_To_R8D ( )  [39;49m[33;40m_Compile_Move_DataStackN_ToReg[39;49m[34;49m ( R8D, 0 )  Compile_Stack_Push_R8D ( )  _Compile_SUBI_DSP ( CELL )  ;a .. [39;49m[32;49m
0x7fb6e779fd78    4d8b06                  mov r8, [r14]                                          [39;49m
[34;49m .. ile_Move_DataStackN_ToReg ( R8D, 0 )  [39;49m[33;40mCompile_Stack_Push_R8D[39;49m[34;49m ( )  _Compile_SUBI_DSP ( CELL )  ;asm [39;49m[32;49m
0x7fb6e779fd7b    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e779fd7f    4d8906                  mov [r14], r8                                          [39;49m
[34;49m .. R8D, 0 )  Compile_Stack_Push_R8D ( )  [39;49m[33;40m_Compile_SUBI_DSP[39;49m[34;49m ( CELL )  ;asm [39;49m[32;49m
0x7fb6e779fd82    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m .. _R8D ( )  _Compile_SUBI_DSP ( CELL )  [39;49m[33;40m;asm[39;49m[34;49m [39;49m[32;49m
0x7fb6e779fd86    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'stest' :: codeSize = 17
Word : 0x00007fb6e477bfa0 :: Compiled at : 0x00007fb6e779fd75
 =============================
::> 'wdiss' was called at namespaces/compiler/x64.csl 789.19 <::
 
this is some purposefully funky code for testing

DataStack at : [34;49mnamespaces/compiler/x64.csl : 793.2[39;49m :
DataStack depth =   3 : Dsp (R14) = Top = 0x00007fb6e7cd3a58, InitialTos = 0x00007fb6e7cd3a40, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fb6e7cd3a58 > = 0x0000000000000005	
  DataStack   [  -1 ] < 0x00007fb6e7cd3a50 > = 0x0000000000000005	
  DataStack   [  -2 ] < 0x00007fb6e7cd3a48 > = 0x0000000000000005	

 x64 test ok
 =============================
Stack.[34;49mndup[39;49m <:> csl compiled word
SourceCode for Stack.[34;49mndup[39;49m :> 
[34;49masm: ndup _Compile_MoveTOS_To_R8D ( ) _Compile_SUBI_DSP ( CELL ) _Compile_Move_DataStackN_ToReg ( R9D, 0 ) "start" label _Compile_TESTreg_Toreg ( R8D, R8D ) "end" 0 EQ jcc _Compile_ADDI_DSP ( CELL ) _Compile_MoveReg_To_StackN ( DSP, 0, R9D ) _Compile_IncDecreg ( DEC, R8D ) "start" goto "end" label ;asm [39;49m
Source code file location of [34;49mndup[39;49m : "namespaces/compiler/x64.csl" : 798.5 :: we are now at : namespaces/compiler/x64.csl : 812.18
Compiled with : optimizeOn, inlineOn, infixOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xe779fd9b -- code size = 35 bytes
 -----------------------------
Word :: Stack.[34;49mndup[39;49m : definition = 0x00007fb6e779fd9b : disassembly at namespaces/compiler/x64.csl : 812.18 :
[34;49m ..                             asm: ndup [39;49m[33;40m_Compile_MoveTOS_To_R8D[39;49m[34;49m ( ) _Compile_SUBI_DSP ( CELL )  _Compile_Move_DataStackN_ToReg ( R9D, 0 ) "st .. [39;49m[32;49m
0x7fb6e779fd9b    4d8b06                  mov r8, [r14]                                          [39;49m
[34;49m .. asm: ndup _Compile_MoveTOS_To_R8D ( ) [39;49m[33;40m_Compile_SUBI_DSP[39;49m[34;49m ( CELL )  _Compile_Move_DataStackN_ToReg ( R9D, 0 ) "start" label  _Compile_TESTreg .. [39;49m[32;49m
0x7fb6e779fd9e    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m .. o_R8D ( ) _Compile_SUBI_DSP ( CELL )  [39;49m[33;40m_Compile_Move_DataStackN_ToReg[39;49m[34;49m ( R9D, 0 ) "start" label  _Compile_TESTreg_Toreg ( R8D, R8D ) "end" 0  .. [39;49m[32;49m
0x7fb6e779fda2    4d8b0e                  mov r9, [r14]                                          [39;49m
[34;49m .. tackN_ToReg ( R9D, 0 ) "start" label  [39;49m[33;40m_Compile_TESTreg_Toreg[39;49m[34;49m ( R8D, R8D ) "end" 0 EQ jcc _Compile_ADDI_DSP ( CELL )  _Compile_MoveReg_To_St .. [39;49m[32;49m
0x7fb6e779fda5    4585c0                  test r8d, r8d                                          [39;49m
[34;49m .. TESTreg_Toreg ( R8D, R8D ) "end" 0 EQ [39;49m[33;40mjcc[39;49m[34;49m _Compile_ADDI_DSP ( CELL )  _Compile_MoveReg_To_StackN ( DSP, 0, R9D )  _Compile_IncDecreg ( DEC, .. [39;49m[32;49m
0x7fb6e779fda8    0f840f000000            jz 0x7fb6e779fdbd          	< Stack.[34;49mndup[39;49m+34[32;49m >[39;49m[39;49m
[34;49m .. reg_Toreg ( R8D, R8D ) "end" 0 EQ jcc [39;49m[33;40m_Compile_ADDI_DSP[39;49m[34;49m ( CELL )  _Compile_MoveReg_To_StackN ( DSP, 0, R9D )  _Compile_IncDecreg ( DEC, R8D .. [39;49m[32;49m
0x7fb6e779fdae    4983c608                add r14, 0x8                                           [39;49m
[34;49m ..  0 EQ jcc _Compile_ADDI_DSP ( CELL )  [39;49m[33;40m_Compile_MoveReg_To_StackN[39;49m[34;49m ( DSP, 0, R9D )  _Compile_IncDecreg ( DEC, R8D )  "start" goto "end" label .. [39;49m[32;49m
0x7fb6e779fdb2    4d890e                  mov [r14], r9                                          [39;49m
[34;49m .. le_MoveReg_To_StackN ( DSP, 0, R9D )  [39;49m[33;40m_Compile_IncDecreg[39;49m[34;49m ( DEC, R8D )  "start" goto "end" label ;asm  .. [39;49m[32;49m
0x7fb6e779fdb5    41ffc8                  dec r8d                                                [39;49m
[34;49m .. mpile_IncDecreg ( DEC, R8D )  "start" [39;49m[33;40mgoto[39;49m[34;49m "end" label ;asm  .. [39;49m[32;49m
0x7fb6e779fdb8    e9e8ffffff              jmp 0x7fb6e779fda5         	< Stack.[34;49mndup[39;49m+10[32;49m >[39;49m[39;49m
[34;49m ..  DEC, R8D )  "start" goto "end" label [39;49m[33;40m;asm[39;49m[34;49m  .. [39;49m[32;49m
0x7fb6e779fdbd    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'ndup' :: codeSize = 34
Word : 0x00007fb6e477c9f0 :: Compiled at : 0x00007fb6e779fd9b
 =============================
::> 'wdiss' was called at namespaces/compiler/x64.csl 812.18 <::

DataStack at : [34;49mnamespaces/compiler/x64.csl : 813.2[39;49m :
DataStack depth =   3 : Dsp (R14) = Top = 0x00007fb6e7cd3a58, InitialTos = 0x00007fb6e7cd3a40, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fb6e7cd3a58 > = 0x0000000000000005	
  DataStack   [  -1 ] < 0x00007fb6e7cd3a50 > = 0x0000000000000005	
  DataStack   [  -2 ] < 0x00007fb6e7cd3a48 > = 0x0000000000000005	

DataStack at : [34;49mnamespaces/compiler/x64.csl : 813.13[39;49m :
DataStack depth =  11 : Dsp (R14) = Top = 0x00007fb6e7cd3a98, InitialTos = 0x00007fb6e7cd3a40, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fb6e7cd3a98 > = 0x0000000000000007	
  DataStack   [  -1 ] < 0x00007fb6e7cd3a90 > = 0x0000000000000007	
  DataStack   [  -2 ] < 0x00007fb6e7cd3a88 > = 0x0000000000000007	
  DataStack   [  -3 ] < 0x00007fb6e7cd3a80 > = 0x0000000000000007	
  DataStack   [  -4 ] < 0x00007fb6e7cd3a78 > = 0x0000000000000007	
  DataStack   [  -5 ] < 0x00007fb6e7cd3a70 > = 0x0000000000000007	
  DataStack   [  -6 ] < 0x00007fb6e7cd3a68 > = 0x0000000000000007	
  DataStack   [  -7 ] < 0x00007fb6e7cd3a60 > = 0x0000000000000007	
  DataStack   [  -8 ] < 0x00007fb6e7cd3a58 > = 0x0000000000000005	
  DataStack   [  -9 ] < 0x00007fb6e7cd3a50 > = 0x0000000000000005	
  DataStack   [ -10 ] < 0x00007fb6e7cd3a48 > = 0x0000000000000005	

DataStack at : [34;49mnamespaces/compiler/x64.csl : 813.23[39;49m :
DataStack depth =   3 : Dsp (R14) = Top = 0x00007fb6e7cd3a58, InitialTos = 0x00007fb6e7cd3a40, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fb6e7cd3a58 > = 0x0000000000000005	
  DataStack   [  -1 ] < 0x00007fb6e7cd3a50 > = 0x0000000000000005	
  DataStack   [  -2 ] < 0x00007fb6e7cd3a48 > = 0x0000000000000005	

 =============================
Asm.[34;49mtestAsm[39;49m <:> csl compiled word
SourceCode for Asm.[34;49mtestAsm[39;49m :> 
[34;49masm: testAsm MOVrr RDX RAX MOVrr RAX RBX MOVrr RBX RAX MOVrr RAX RDX ;asm [39;49m
Source code file location of [34;49mtestAsm[39;49m : "namespaces/compiler/x64.csl" : 858.5 :: we are now at : namespaces/compiler/x64.csl : 864.12
Compiled with : optimizeOn, inlineOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xe77a002c -- code size = 13 bytes
 -----------------------------
Word :: Asm.[34;49mtestAsm[39;49m : definition = 0x00007fb6e77a002c : disassembly at namespaces/compiler/x64.csl : 864.12 :
[34;49m ..                          asm: testAsm [39;49m[33;40mMOVrr[39;49m[34;49m RDX RAX  MOVrr RAX RBX  MOVrr RBX RAX  MOVrr RAX RDX  ;asm  .. [39;49m[32;49m
0x7fb6e77a002c    488bd0                  mov rdx, rax                                           [39;49m
[34;49m ..           asm: testAsm MOVrr RDX RAX  [39;49m[33;40mMOVrr[39;49m[34;49m RAX RBX  MOVrr RBX RAX  MOVrr RAX RDX  ;asm  .. [39;49m[32;49m
0x7fb6e77a002f    488bc3                  mov rax, rbx                                           [39;49m
[34;49m .. testAsm MOVrr RDX RAX  MOVrr RAX RBX  [39;49m[33;40mMOVrr[39;49m[34;49m RBX RAX  MOVrr RAX RDX  ;asm [39;49m[32;49m
0x7fb6e77a0032    488bd8                  mov rbx, rax                                           [39;49m
[34;49m .. DX RAX  MOVrr RAX RBX  MOVrr RBX RAX  [39;49m[33;40mMOVrr[39;49m[34;49m RAX RDX  ;asm [39;49m[32;49m
0x7fb6e77a0035    488bc2                  mov rax, rdx                                           [39;49m
[34;49m .. AX RBX  MOVrr RBX RAX  MOVrr RAX RDX  [39;49m[33;40m;asm[39;49m[34;49m [39;49m[32;49m
0x7fb6e77a0038    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'testAsm' :: codeSize = 12
Word : 0x00007fb6e4783a90 :: Compiled at : 0x00007fb6e77a002c
 =============================
::> 'wdiss' was called at namespaces/compiler/x64.csl 864.12 <::

 _TestDone_ = 1
 5040
 =============================
C_Syntax.[34;49mfactoriali[39;49m <:> csl compiled word, prefix
SourceCode for C_Syntax.[34;49mfactoriali[39;49m :> 
[34;49mint factoriali ( byte REG n | REG res ) { res = 1; while ( n >= 2 ) { res = res * (n--) ; } return res; } [39;49m
Source code file location of [34;49mfactoriali[39;49m : "namespaces/test/dev.csl" : 21.15 :: we are now at : namespaces/test/dev.csl : 39.23
Compiled with : optimizeOn, inlineOn, c_syntaxOn, infixOn, Jcc8 on
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xe77a00d7 -- code size = 29 bytes
TypeSignature : 
 -----------------------------
Word :: C_Syntax.[34;49mfactoriali[39;49m : definition = 0x00007fb6e77a00d7 : disassembly at namespaces/test/dev.csl : 39.23 :
[34;49m ..                                   int [39;49m[33;40mfactoriali[39;49m[34;49m ( byte REG n | REG res ) { res = 1; while ( n >= 2 ) { res = res * (n--) ; } return res; } .. [39;49m[32;49m
0x7fb6e77a00d7    498b3e                  mov rdi, [r14]                                         [39;49m
[34;49m .. iali ( byte REG n | REG res ) { res = [39;49m[33;40m1[39;49m[34;49m; while ( n >= 2 ) { res = res * (n--) ; } return res; } [39;49m[32;49m
0x7fb6e77a00da    48c7c601000000          mov rsi, 0x1                                           [39;49m
[34;49m .. EG n | REG res ) { res = 1; while ( n [39;49m[33;40m>=[39;49m[34;49m 2 ) { res = res * (n--) ; } return res; } [39;49m[32;49m
0x7fb6e77a00e1    4883ff02                cmp rdi, 0x2                                           [39;49m[32;49m
0x7fb6e77a00e5    7c09                    jl 0xe77a00f0                                          [39;49m
[34;49m .. res = 1; while ( n >= 2 ) { res = res [39;49m[33;40m*[39;49m[34;49m (n--) ; } return res; } [39;49m[32;49m
0x7fb6e77a00e7    480faff7                imul rsi, rdi                                          [39;49m
[34;49m .. = 1; while ( n >= 2 ) { res = res * (n[39;49m[33;40m--[39;49m[34;49m) ; } return res; } [39;49m[32;49m
0x7fb6e77a00eb    48ffcf                  dec rdi                                                [39;49m
[34;49m .. hile ( n >= 2 ) { res = res * (n--) ; [39;49m[33;40m}[39;49m[34;49m return res; } [39;49m[32;49m
0x7fb6e77a00ee    ebf1                    jmp 0x7fb6e77a00e1         	< C_Syntax.[34;49mfactoriali[39;49m+10[32;49m >[39;49m[39;49m
[34;49m .. >= 2 ) { res = res * (n--) ; } return [39;49m[33;40mres[39;49m[34;49m; } [39;49m[32;49m
0x7fb6e77a00f0    498936                  mov [r14], rsi                                         [39;49m[32;49m
0x7fb6e77a00f3    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'factoriali' :: codeSize = 28
Word : 0x00007fb6e78e3400 :: Compiled at : 0x00007fb6e77a00d7
 =============================
::> 'wdiss' was called at namespaces/test/dev.csl 39.23 <::
 5040 5040 5040
 =============================
User.[34;49mqexp[39;49m <:> csl compiled word
SourceCode for User.[34;49mqexp[39;49m :> 
[34;49m: qexp dup 1 <= if{ }else{ dup -- qexp * }fi ; [39;49m
Source code file location of [34;49mqexp[39;49m : "namespaces/test/dev.csl" : 48.2 :: we are now at : namespaces/test/dev.csl : 48.90
Compiled with : optimizeOn, inlineOn, Jcc8 on
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xe77a015d -- code size = 92 bytes
TypeSignature : 
 -----------------------------
Word :: User.[34;49mqexp[39;49m : definition = 0x00007fb6e77a015d : disassembly at namespaces/test/dev.csl : 48.90 :
[34;49m ..                                : qexp [39;49m[33;40mdup[39;49m[34;49m 1 <= if{ }else{ dup -- qexp * }fi ;  .. [39;49m[32;49m
0x7fb6e77a015d    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fb6e77a0160    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e77a0164    498906                  mov [r14], rax                                         [39;49m
[34;49m ..                            : qexp dup [39;49m[33;40m1[39;49m[34;49m <= if{ }else{ dup -- qexp * }fi ;  .. [39;49m[32;49m
0x7fb6e77a0167    48c7c001000000          mov rax, 0x1                                           [39;49m[32;49m
0x7fb6e77a016e    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fb6e77a0171    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fb6e77a0174    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m ..                          : qexp dup 1 [39;49m[33;40m<=[39;49m[34;49m if{ }else{ dup -- qexp * }fi ;  .. [39;49m[32;49m
0x7fb6e77a0178    483bc1                  cmp rax, rcx                                           [39;49m[32;49m
0x7fb6e77a017b    7f05                    jg 0xe77a0182                                          [39;49m
[34;49m ..                   : qexp dup 1 <= if{ [39;49m[33;40m}else{[39;49m[34;49m dup -- qexp * }fi ;  .. [39;49m[32;49m
0x7fb6e77a017d    e936000000              jmp 0x7fb6e77a01b8         	< User.[34;49mqexp[39;49m+91[32;49m >[39;49m[39;49m
[34;49m ..            : qexp dup 1 <= if{ }else{ [39;49m[33;40mdup[39;49m[34;49m -- qexp * }fi ;  .. [39;49m[32;49m
0x7fb6e77a0182    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fb6e77a0185    4983c608                add r14, 0x8                                           [39;49m
[34;49m ..                       : qexp dup 1 <= [39;49m[33;40mif{[39;49m[34;49m }else{ dup -- qexp * }fi ;  .. [39;49m[32;49m
0x7fb6e77a0189    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e77a018c    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fb6e77a018f    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m ..        : qexp dup 1 <= if{ }else{ dup [39;49m[33;40m--[39;49m[34;49m qexp * }fi ;  .. [39;49m[32;49m
0x7fb6e77a0193    48ffc8                  dec rax                                                [39;49m[32;49m
0x7fb6e77a0196    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e77a019a    498906                  mov [r14], rax                                         [39;49m
[34;49m ..     : qexp dup 1 <= if{ }else{ dup -- [39;49m[33;40mqexp[39;49m[34;49m * }fi ;  .. [39;49m[32;49m
0x7fb6e77a019d    e8bbffffff              call 0x7fb6e77a015d        	< User.[34;49mqexp[39;49m : 0x00007fb6e77a015d[32;49m >[39;49m[39;49m[32;49m
0x7fb6e77a01a2    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fb6e77a01a5    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fb6e77a01a9    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m   : qexp dup 1 <= if{ }else{ dup -- qexp [39;49m[33;40m*[39;49m[34;49m }fi ;  .. [39;49m[32;49m
0x7fb6e77a01ad    480fafc1                imul rax, rcx                                          [39;49m[32;49m
0x7fb6e77a01b1    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e77a01b5    498906                  mov [r14], rax                                         [39;49m
[34;49m .. dup 1 <= if{ }else{ dup -- qexp * }fi [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fb6e77a01b8    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'qexp' :: codeSize = 91
Word : 0x00007fb6e61170c0 :: Compiled at : 0x00007fb6e77a015d
 =============================
::> 'wdiss' was called at namespaces/test/dev.csl 48.90 <::
 5040 5040 5040
 5040
 =============================
User.[34;49mbexp3[39;49m <:> csl compiled word
SourceCode for User.[34;49mbexp3[39;49m :> 
[34;49m: bexp3 ( n ) { n @ 1 > } { n @ n @ -- bexp3 * } { 1 } ifElse ; [39;49m
Source code file location of [34;49mbexp3[39;49m : "namespaces/test/dev.csl" : 52.2 :: we are now at : namespaces/test/dev.csl : 54.10
Compiled with : optimizeOn, inlineOn, Jcc8 on
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xe77a031e -- code size = 108 bytes
TypeSignature : 
 -----------------------------
Word :: User.[34;49mbexp3[39;49m : definition = 0x00007fb6e77a031e : disassembly at namespaces/test/dev.csl : 54.10 :
[34;49m ..                                     : [39;49m[33;40mbexp3[39;49m[34;49m ( n ) { n @ 1 > } { n @ n @ -- bexp3 * } { 1 } ifElse ;  .. [39;49m[32;49m
0x7fb6e77a031e    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fb6e77a0322    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e77a0326    4981c608000000          add r14, 0x8                                           [39;49m
[34;49m ..                       : bexp3 ( n ) { [39;49m[33;40mn[39;49m[34;49m @ 1 > } { n @ n @ -- bexp3 * } { 1 } ifElse ;  .. [39;49m[32;49m
0x7fb6e77a032d    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m ..                 : bexp3 ( n ) { n @ 1 [39;49m[33;40m>[39;49m[34;49m } { n @ n @ -- bexp3 * } { 1 } ifElse ;  .. [39;49m[32;49m
0x7fb6e77a0331    4883f801                cmp rax, 0x1                                           [39;49m[32;49m
0x7fb6e77a0335    7e39                    jle 0xe77a0370                                         [39;49m
[34;49m ..           : bexp3 ( n ) { n @ 1 > } { [39;49m[33;40mn[39;49m[34;49m @ n @ -- bexp3 * } { 1 } ifElse ;  .. [39;49m[32;49m
0x7fb6e77a0337    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e77a033b    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e77a033f    498906                  mov [r14], rax                                         [39;49m
[34;49m ..       : bexp3 ( n ) { n @ 1 > } { n @ [39;49m[33;40mn[39;49m[34;49m @ -- bexp3 * } { 1 } ifElse ;  .. [39;49m[32;49m
0x7fb6e77a0342    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m ..   : bexp3 ( n ) { n @ 1 > } { n @ n @ [39;49m[33;40m--[39;49m[34;49m bexp3 * } { 1 } ifElse ;  .. [39;49m[32;49m
0x7fb6e77a0346    48ffc8                  dec rax                                                [39;49m
[34;49m ..             : bexp3 ( n ) { n @ 1 > } [39;49m[33;40m{[39;49m[34;49m n @ n @ -- bexp3 * } { 1 } ifElse ;  .. [39;49m[32;49m
0x7fb6e77a0349    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e77a034d    498906                  mov [r14], rax                                         [39;49m
[34;49m   : bexp3 ( n ) { n @ 1 > } { n @ n @ -- [39;49m[33;40mbexp3[39;49m[34;49m * } { 1 } ifElse ;  .. [39;49m[32;49m
0x7fb6e77a0350    e8c9ffffff              call 0x7fb6e77a031e        	< User.[34;49mbexp3[39;49m : 0x00007fb6e77a031e[32;49m >[39;49m[39;49m[32;49m
0x7fb6e77a0355    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fb6e77a0358    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fb6e77a035c    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m ..  ( n ) { n @ 1 > } { n @ n @ -- bexp3 [39;49m[33;40m*[39;49m[34;49m } { 1 } ifElse ; [39;49m[32;49m
0x7fb6e77a0360    480fafc1                imul rax, rcx                                          [39;49m[32;49m
0x7fb6e77a0364    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e77a0368    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  n ) { n @ 1 > } { n @ n @ -- bexp3 * [39;49m[33;40m}[39;49m[34;49m { 1 } ifElse ; [39;49m[32;49m
0x7fb6e77a036b    e90e000000              jmp 0x7fb6e77a037e         	< User.[34;49mbexp3[39;49m+96[32;49m >[39;49m[39;49m
[34;49m ..  { n @ 1 > } { n @ n @ -- bexp3 * } { [39;49m[33;40m1[39;49m[34;49m } ifElse ; [39;49m[32;49m
0x7fb6e77a0370    48c7c001000000          mov rax, 0x1                                           [39;49m[32;49m
0x7fb6e77a0377    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e77a037b    498906                  mov [r14], rax                                         [39;49m
[34;49m .. } { n @ n @ -- bexp3 * } { 1 } ifElse [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fb6e77a037e    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e77a0382    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e77a0386    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e77a0389    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'bexp3' :: codeSize = 107
Word : 0x00007fb6e4787878 :: Compiled at : 0x00007fb6e77a031e
 =============================
::> 'wdiss' was called at namespaces/test/dev.csl 54.10 <::

 =============================
C_Syntax.[34;49mfaccs3[39;49m <:> csl compiled word
SourceCode for C_Syntax.[34;49mfaccs3[39;49m :> 
[34;49mint faccs3 ( n | rec ) { for ( rec = 1 ; n > 1 ; n-- ) { rec = rec * n ; } return rec ; } [39;49m
Source code file location of [34;49mfaccs3[39;49m : "namespaces/test/dev.csl" : 58.7 :: we are now at : namespaces/test/dev.csl : 66.20
Compiled with : optimizeOn, inlineOn, c_syntaxOn, infixOn, Jcc8 on
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xe77a038f -- code size = 80 bytes
TypeSignature : 
 -----------------------------
Word :: C_Syntax.[34;49mfaccs3[39;49m : definition = 0x00007fb6e77a038f : disassembly at namespaces/test/dev.csl : 66.20 :
[34;49m ..                                   int [39;49m[33;40mfaccs3[39;49m[34;49m ( n | rec )  { for ( rec = 1 ; n > 1 ; n-- ) {  rec = rec * n ;  }  return rec ; }  .. [39;49m[32;49m
0x7fb6e77a038f    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fb6e77a0393    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e77a0397    4981c610000000          add r14, 0x10                                          [39;49m
[34;49m .. int faccs3 ( n | rec )  { for ( rec = [39;49m[33;40m1[39;49m[34;49m ; n > 1 ; n-- ) {  rec = rec * n ;  }  return rec ; }  .. [39;49m[32;49m
0x7fb6e77a039e    48c7c001000000          mov rax, 0x1                                           [39;49m
[34;49m ..       int faccs3 ( n | rec )  { for ( [39;49m[33;40mrec[39;49m[34;49m = 1 ; n > 1 ; n-- ) {  rec = rec * n ;  }  return rec ; }  .. [39;49m[32;49m
0x7fb6e77a03a5    498d4f08                lea rcx, [r15+0x8]                                     [39;49m
[34;49m ..   int faccs3 ( n | rec )  { for ( rec [39;49m[33;40m=[39;49m[34;49m 1 ; n > 1 ; n-- ) {  rec = rec * n ;  }  return rec ; }  .. [39;49m[32;49m
0x7fb6e77a03a9    488901                  mov [rcx], rax                                         [39;49m
[34;49mint faccs3 ( n | rec )  { for ( rec = 1 ; [39;49m[33;40mn[39;49m[34;49m > 1 ; n-- ) {  rec = rec * n ;  }  return rec ; }  .. [39;49m[32;49m
0x7fb6e77a03ac    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. ccs3 ( n | rec )  { for ( rec = 1 ; n [39;49m[33;40m>[39;49m[34;49m 1 ; n-- ) {  rec = rec * n ;  }  return rec ; } [39;49m[32;49m
0x7fb6e77a03b0    4883f801                cmp rax, 0x1                                           [39;49m[32;49m
0x7fb6e77a03b4    7e19                    jle 0xe77a03cf                                         [39;49m
[34;49m .. or ( rec = 1 ; n > 1 ; n-- ) {  rec = [39;49m[33;40mrec[39;49m[34;49m * n ;  }  return rec ; } [39;49m[32;49m
0x7fb6e77a03b6    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m .. ec = 1 ; n > 1 ; n-- ) {  rec = rec * [39;49m[33;40mn[39;49m[34;49m ;  }  return rec ; } [39;49m[32;49m
0x7fb6e77a03ba    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m
[34;49m ..  rec = 1 ; n > 1 ; n-- ) {  rec = rec [39;49m[33;40m*[39;49m[34;49m n ;  }  return rec ; } [39;49m[32;49m
0x7fb6e77a03be    480fafc1                imul rax, rcx                                          [39;49m
[34;49m .. )  { for ( rec = 1 ; n > 1 ; n-- ) {  [39;49m[33;40mrec[39;49m[34;49m = rec * n ;  }  return rec ; } [39;49m[32;49m
0x7fb6e77a03c2    498d4f08                lea rcx, [r15+0x8]                                     [39;49m
[34;49m ..  for ( rec = 1 ; n > 1 ; n-- ) {  rec [39;49m[33;40m=[39;49m[34;49m rec * n ;  }  return rec ; } [39;49m[32;49m
0x7fb6e77a03c6    488901                  mov [rcx], rax                                         [39;49m
[34;49m .. n | rec )  { for ( rec = 1 ; n > 1 ; n[39;49m[33;40m--[39;49m[34;49m ) {  rec = rec * n ;  }  return rec ; } [39;49m[32;49m
0x7fb6e77a03c9    49ff4ff8                dec qword [r15-0x8]                                    [39;49m
[34;49m ..  rec )  { for ( rec = 1 ; n > 1 ; n-- [39;49m[33;40m)[39;49m[34;49m {  rec = rec * n ;  }  return rec ; } [39;49m[32;49m
0x7fb6e77a03cd    ebdd                    jmp 0x7fb6e77a03ac         	< C_Syntax.[34;49mfaccs3[39;49m+29[32;49m >[39;49m[39;49m[32;49m
0x7fb6e77a03cf    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m .. ) {  rec = rec * n ;  }  return rec ; [39;49m[33;40m}[39;49m[34;49m [39;49m[32;49m
0x7fb6e77a03d3    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e77a03d7    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m
[34;49m .. ; n-- ) {  rec = rec * n ;  }  return [39;49m[33;40mrec[39;49m[34;49m ; } [39;49m[32;49m
0x7fb6e77a03db    498906                  mov [r14], rax                                         [39;49m
[34;49m .. n | rec )  { for ( rec = 1 ; n > 1 ; n[39;49m[33;40m--[39;49m[34;49m ) {  rec = rec * n ;  }  return rec ; } [39;49m[32;49m
0x7fb6e77a03de    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'faccs3' :: codeSize = 79
Word : 0x00007fb6e4789990 :: Compiled at : 0x00007fb6e77a038f
 =============================
::> 'wdiss' was called at namespaces/test/dev.csl 66.20 <::
 5040
 =============================
C_Syntax.[34;49mfac5[39;49m <:> csl compiled word
SourceCode for C_Syntax.[34;49mfac5[39;49m :> 
[34;49mint fac5 ( REG n | REG facc ) { facc = 1 ; while ( n > 1 ) { facc = facc * ( n -- ) ; } return facc ; } [39;49m
Source code file location of [34;49mfac5[39;49m : "namespaces/test/dev.csl" : 72.5 :: we are now at : namespaces/test/dev.csl : 82.21
Compiled with : optimizeOn, inlineOn, c_syntaxOn, infixOn, Jcc8 on
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xe77a03f3 -- code size = 29 bytes
TypeSignature : 
 -----------------------------
Word :: C_Syntax.[34;49mfac5[39;49m : definition = 0x00007fb6e77a03f3 : disassembly at namespaces/test/dev.csl : 82.21 :
[34;49m ..                                   int [39;49m[33;40mfac5[39;49m[34;49m ( REG n | REG facc )  {  facc = 1 ; while ( n > 1 )  { facc = facc * ( n -- ) ; } return facc ;  .. [39;49m[32;49m
0x7fb6e77a03f3    498b3e                  mov rdi, [r14]                                         [39;49m
[34;49m int fac5 ( REG n | REG facc )  {  facc = [39;49m[33;40m1[39;49m[34;49m ; while ( n > 1 )  { facc = facc * ( n -- ) ; } return facc ; }  .. [39;49m[32;49m
0x7fb6e77a03f6    48c7c601000000          mov rsi, 0x1                                           [39;49m
[34;49m .. | REG facc )  {  facc = 1 ; while ( n [39;49m[33;40m>[39;49m[34;49m 1 )  { facc = facc * ( n -- ) ; } return facc ; } [39;49m[32;49m
0x7fb6e77a03fd    4883ff01                cmp rdi, 0x1                                           [39;49m[32;49m
0x7fb6e77a0401    7e09                    jle 0xe77a040c                                         [39;49m
[34;49m ..  = 1 ; while ( n > 1 )  { facc = facc [39;49m[33;40m*[39;49m[34;49m ( n -- ) ; } return facc ; } [39;49m[32;49m
0x7fb6e77a0403    480faff7                imul rsi, rdi                                          [39;49m
[34;49m ..  while ( n > 1 )  { facc = facc * ( n [39;49m[33;40m--[39;49m[34;49m ) ; } return facc ; } [39;49m[32;49m
0x7fb6e77a0407    48ffcf                  dec rdi                                                [39;49m
[34;49m .. ( n > 1 )  { facc = facc * ( n -- ) ; [39;49m[33;40m}[39;49m[34;49m return facc ; } [39;49m[32;49m
0x7fb6e77a040a    ebf1                    jmp 0x7fb6e77a03fd         	< C_Syntax.[34;49mfac5[39;49m+10[32;49m >[39;49m[39;49m
[34;49m ..   { facc = facc * ( n -- ) ; } return [39;49m[33;40mfacc[39;49m[34;49m ; } [39;49m[32;49m
0x7fb6e77a040c    498936                  mov [r14], rsi                                         [39;49m[32;49m
0x7fb6e77a040f    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'fac5' :: codeSize = 28
Word : 0x00007fb6e478cf48 :: Compiled at : 0x00007fb6e77a03f3
 =============================
::> 'wdiss' was called at namespaces/test/dev.csl 82.21 <::
 5040
 =============================
C_Syntax.[34;49mfaccs[39;49m <:> csl compiled word
SourceCode for C_Syntax.[34;49mfaccs[39;49m :> 
[34;49mint faccs ( REG n | REG rec ) { rec = 1 ; while ( n > 1 ) { rec = rec * n ; n-- ; } return rec ; } [39;49m
Source code file location of [34;49mfaccs[39;49m : "namespaces/test/dev.csl" : 86.6 :: we are now at : namespaces/test/dev.csl : 95.19
Compiled with : optimizeOn, inlineOn, c_syntaxOn, infixOn, Jcc8 on
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xe77a0424 -- code size = 29 bytes
TypeSignature : 
 -----------------------------
Word :: C_Syntax.[34;49mfaccs[39;49m : definition = 0x00007fb6e77a0424 : disassembly at namespaces/test/dev.csl : 95.19 :
[34;49m ..                                   int [39;49m[33;40mfaccs[39;49m[34;49m ( REG n | REG rec )  { rec = 1 ;  while ( n > 1 ) {  rec = rec * n ; n-- ;  }  return rec ; }  .. [39;49m[32;49m
0x7fb6e77a0424    498b3e                  mov rdi, [r14]                                         [39;49m
[34;49m   int faccs ( REG n | REG rec )  { rec = [39;49m[33;40m1[39;49m[34;49m ;  while ( n > 1 ) {  rec = rec * n ; n-- ;  }  return rec ; }  .. [39;49m[32;49m
0x7fb6e77a0427    48c7c601000000          mov rsi, 0x1                                           [39;49m
[34;49m .. n | REG rec )  { rec = 1 ;  while ( n [39;49m[33;40m>[39;49m[34;49m 1 ) {  rec = rec * n ; n-- ;  }  return rec ; } [39;49m[32;49m
0x7fb6e77a042e    4883ff01                cmp rdi, 0x1                                           [39;49m[32;49m
0x7fb6e77a0432    7e09                    jle 0xe77a043d                                         [39;49m
[34;49m ..   while ( n > 1 ) {  rec = rec * n ; n[39;49m[33;40m--[39;49m[34;49m ;  }  return rec ; } [39;49m[32;49m
0x7fb6e77a0434    480faff7                imul rsi, rdi                                          [39;49m
[34;49m ..   while ( n > 1 ) {  rec = rec * n ; n[39;49m[33;40m--[39;49m[34;49m ;  }  return rec ; } [39;49m[32;49m
0x7fb6e77a0438    48ffcf                  dec rdi                                                [39;49m
[34;49m .. e ( n > 1 ) {  rec = rec * n ; n-- ;  [39;49m[33;40m}[39;49m[34;49m  return rec ; } [39;49m[32;49m
0x7fb6e77a043b    ebf1                    jmp 0x7fb6e77a042e         	< C_Syntax.[34;49mfaccs[39;49m+10[32;49m >[39;49m[39;49m
[34;49m .. ) {  rec = rec * n ; n-- ;  }  return [39;49m[33;40mrec[39;49m[34;49m ; } [39;49m[32;49m
0x7fb6e77a043d    498936                  mov [r14], rsi                                         [39;49m[32;49m
0x7fb6e77a0440    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'faccs' :: codeSize = 28
Word : 0x00007fb6e4790190 :: Compiled at : 0x00007fb6e77a0424
 =============================
::> 'wdiss' was called at namespaces/test/dev.csl 95.19 <::
 5040 5040
 =============================
C_Syntax.[34;49mfaccs2[39;49m <:> csl compiled word
SourceCode for C_Syntax.[34;49mfaccs2[39;49m :> 
[34;49mint faccs2 ( REG n | REG rec ) { for ( rec = 1 ; n > 1 ; n-- ) { rec = rec * n ; } return rec ; } [39;49m
Source code file location of [34;49mfaccs2[39;49m : "namespaces/test/dev.csl" : 113.7 :: we are now at : namespaces/test/dev.csl : 121.20
Compiled with : optimizeOn, inlineOn, c_syntaxOn, infixOn, Jcc8 on
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xe77a0486 -- code size = 29 bytes
TypeSignature : 
 -----------------------------
Word :: C_Syntax.[34;49mfaccs2[39;49m : definition = 0x00007fb6e77a0486 : disassembly at namespaces/test/dev.csl : 121.20 :
[34;49m ..                                   int [39;49m[33;40mfaccs2[39;49m[34;49m ( REG n | REG rec )  { for ( rec = 1 ; n > 1 ; n-- ) {  rec = rec * n ;  }  return rec ; }  .. [39;49m[32;49m
0x7fb6e77a0486    498b3e                  mov rdi, [r14]                                         [39;49m
[34;49m .. s2 ( REG n | REG rec )  { for ( rec = [39;49m[33;40m1[39;49m[34;49m ; n > 1 ; n-- ) {  rec = rec * n ;  }  return rec ; } [39;49m[32;49m
0x7fb6e77a0489    48c7c601000000          mov rsi, 0x1                                           [39;49m
[34;49m .. EG n | REG rec )  { for ( rec = 1 ; n [39;49m[33;40m>[39;49m[34;49m 1 ; n-- ) {  rec = rec * n ;  }  return rec ; } [39;49m[32;49m
0x7fb6e77a0490    4883ff01                cmp rdi, 0x1                                           [39;49m[32;49m
0x7fb6e77a0494    7e09                    jle 0xe77a049f                                         [39;49m
[34;49m ..  rec = 1 ; n > 1 ; n-- ) {  rec = rec [39;49m[33;40m*[39;49m[34;49m n ;  }  return rec ; } [39;49m[32;49m
0x7fb6e77a0496    480faff7                imul rsi, rdi                                          [39;49m
[34;49m .. REG rec )  { for ( rec = 1 ; n > 1 ; n[39;49m[33;40m--[39;49m[34;49m ) {  rec = rec * n ;  }  return rec ; } [39;49m[32;49m
0x7fb6e77a049a    48ffcf                  dec rdi                                                [39;49m
[34;49m ..  rec )  { for ( rec = 1 ; n > 1 ; n-- [39;49m[33;40m)[39;49m[34;49m {  rec = rec * n ;  }  return rec ; } [39;49m[32;49m
0x7fb6e77a049d    ebf1                    jmp 0x7fb6e77a0490         	< C_Syntax.[34;49mfaccs2[39;49m+10[32;49m >[39;49m[39;49m
[34;49m .. ; n-- ) {  rec = rec * n ;  }  return [39;49m[33;40mrec[39;49m[34;49m ; } [39;49m[32;49m
0x7fb6e77a049f    498936                  mov [r14], rsi                                         [39;49m[32;49m
0x7fb6e77a04a2    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'faccs2' :: codeSize = 28
Word : 0x00007fb6e4796468 :: Compiled at : 0x00007fb6e77a0486
 =============================
::> 'wdiss' was called at namespaces/test/dev.csl 121.20 <::
 5040 5040
 =============================
User.[34;49miFactorialX[39;49m <:> csl compiled word
SourceCode for User.[34;49miFactorialX[39;49m :> 
[34;49m: iFactorialX ( n w | k ) { k 1 = } { k @ n @ <= } { k ++ } { w @ _ifx } for ; [39;49m
Source code file location of [34;49miFactorialX[39;49m : "namespaces/test/dev.csl" : 163.2 :: we are now at : namespaces/test/dev.csl : 167.24
Compiled with : optimizeOn, inlineOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xe77a07bb -- code size = 89 bytes
TypeSignature : 
 -----------------------------
Word :: User.[34;49miFactorialX[39;49m : definition = 0x00007fb6e77a07bb : disassembly at namespaces/test/dev.csl : 167.24 :
[34;49m ..                                     : [39;49m[33;40miFactorialX[39;49m[34;49m ( n w | k )  { k 1 = } { k @ n @ <= } { k ++ }  { w @ _ifx } for  ;  .. [39;49m[32;49m
0x7fb6e77a07bb    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fb6e77a07bf    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e77a07c3    4981c610000000          add r14, 0x10                                          [39;49m
[34;49m ..          : iFactorialX ( n w | k )  { [39;49m[33;40mk[39;49m[34;49m 1 = } { k @ n @ <= } { k ++ }  { w @ _ifx } for  ;  .. [39;49m[32;49m
0x7fb6e77a07ca    498d4708                lea rax, [r15+0x8]                                     [39;49m
[34;49m ..        : iFactorialX ( n w | k )  { k [39;49m[33;40m1[39;49m[34;49m = } { k @ n @ <= } { k ++ }  { w @ _ifx } for  ;  .. [39;49m[32;49m
0x7fb6e77a07ce    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m ..      : iFactorialX ( n w | k )  { k 1 [39;49m[33;40m=[39;49m[34;49m } { k @ n @ <= } { k ++ }  { w @ _ifx } for  ;  .. [39;49m[32;49m
0x7fb6e77a07d5    488908                  mov [rax], rcx                                         [39;49m
[34;49m   : iFactorialX ( n w | k )  { k 1 = } { [39;49m[33;40mk[39;49m[34;49m @ n @ <= } { k ++ }  { w @ _ifx } for  ;  .. [39;49m[32;49m
0x7fb6e77a07d8    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m .. ctorialX ( n w | k )  { k 1 = } { k @ [39;49m[33;40mn[39;49m[34;49m @ <= } { k ++ }  { w @ _ifx } for  ; [39;49m[32;49m
0x7fb6e77a07dc    498b4ff0                mov rcx, [r15-0x10]                                    [39;49m
[34;49m .. ialX ( n w | k )  { k 1 = } { k @ n @ [39;49m[33;40m<=[39;49m[34;49m } { k ++ }  { w @ _ifx } for  ; [39;49m[32;49m
0x7fb6e77a07e0    483bc1                  cmp rax, rcx                                           [39;49m[32;49m
0x7fb6e77a07e3    0f8f1e000000            jg 0x7fb6e77a0807          	< User.[34;49miFactorialX[39;49m+76[32;49m >[39;49m[39;49m
[34;49m ..  { k 1 = } { k @ n @ <= } { k ++ }  { [39;49m[33;40mw[39;49m[34;49m @ _ifx } for  ; [39;49m[32;49m
0x7fb6e77a07e9    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e77a07ed    4983c608                add r14, 0x8                                           [39;49m
[34;49m .. X ( n w | k )  { k 1 = } { k @ n @ <= [39;49m[33;40m}[39;49m[34;49m { k ++ }  { w @ _ifx } for  ; [39;49m[32;49m
0x7fb6e77a07f1    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  1 = } { k @ n @ <= } { k ++ }  { w @ [39;49m[33;40m_ifx[39;49m[34;49m } for  ; [39;49m[32;49m
0x7fb6e77a07f4    49b9ae067ae7b67f0000    mov r9, 0x7fb6e77a06ae                                 [39;49m[32;49m
0x7fb6e77a07fe    49ffd1                  call r9                    	< User.[34;49m_ifx[39;49m : 0x00007fb6e77a06ae[32;49m >[39;49m[39;49m
[34;49m .. w | k )  { k 1 = } { k @ n @ <= } { k [39;49m[33;40m++[39;49m[34;49m }  { w @ _ifx } for  ; [39;49m[32;49m
0x7fb6e77a0801    49ff4708                inc qword [r15+0x8]                                    [39;49m
[34;49m ..  k )  { k 1 = } { k @ n @ <= } { k ++ [39;49m[33;40m}[39;49m[34;49m  { w @ _ifx } for  ; [39;49m[32;49m
0x7fb6e77a0805    ebd1                    jmp 0x7fb6e77a07d8         	< User.[34;49miFactorialX[39;49m+29[32;49m >[39;49m[39;49m
[34;49m ..  n @ <= } { k ++ }  { w @ _ifx } for  [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fb6e77a0807    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e77a080b    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e77a080f    4983ee10                sub r14, 0x10                                          [39;49m[32;49m
0x7fb6e77a0813    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'iFactorialX' :: codeSize = 88
Word : 0x00007fb6e47a7d78 :: Compiled at : 0x00007fb6e77a07bb
 =============================
::> 'wdiss' was called at namespaces/test/dev.csl 167.24 <::

 =============================
User.[34;49m_ffx[39;49m <:> csl compiled word
SourceCode for User.[34;49m_ffx[39;49m :> 
[34;49m: _ffx ( n w | t ) nl 7 w @ wordRun decimal p nl { t 0 = } { t @ n @ < } { t ++ } { reps @ w @ iFactorialX } for ; [39;49m
Source code file location of [34;49m_ffx[39;49m : "namespaces/test/dev.csl" : 170.2 :: we are now at : namespaces/test/dev.csl : 175.17
Compiled with : optimizeOn, inlineOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xe77a0877 -- code size = 239 bytes
TypeSignature : 
 -----------------------------
Word :: User.[34;49m_ffx[39;49m : definition = 0x00007fb6e77a0877 : disassembly at namespaces/test/dev.csl : 175.17 :
[34;49m ..                                     : [39;49m[33;40m_ffx[39;49m[34;49m ( n w | t )  nl 7 w @ wordRun decimal p nl  { t 0 = } { t @ n @ < } { t ++ }  { reps @ w @ iFact .. [39;49m[32;49m
0x7fb6e77a0877    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fb6e77a087b    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e77a087f    4981c610000000          add r14, 0x10                                          [39;49m
[34;49m ..                   : _ffx ( n w | t )  [39;49m[33;40mnl[39;49m[34;49m 7 w @ wordRun decimal p nl  { t 0 = } { t @ n @ < } { t ++ }  { reps @ w @ iFactorialX } for  ;  .. [39;49m[32;49m
0x7fb6e77a0886    49b8e08080892d560000    mov r8, 0x562d898080e0                                 [39;49m[32;49m
0x7fb6e77a0890    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e77a089a    49ffd1                  call r9                    	< Io.[34;49mnewline[39;49m : 0x0000562d898080e0[32;49m >[39;49m[39;49m
[34;49m ..                : _ffx ( n w | t )  nl [39;49m[33;40m7[39;49m[34;49m w @ wordRun decimal p nl  { t 0 = } { t @ n @ < } { t ++ }  { reps @ w @ iFactorialX } for  ;  .. [39;49m[32;49m
0x7fb6e77a089d    48c7c007000000          mov rax, 0x7                                           [39;49m[32;49m
0x7fb6e77a08a4    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e77a08a8    498906                  mov [r14], rax                                         [39;49m
[34;49m ..              : _ffx ( n w | t )  nl 7 [39;49m[33;40mw[39;49m[34;49m @ wordRun decimal p nl  { t 0 = } { t @ n @ < } { t ++ }  { reps @ w @ iFactorialX } for  ;  .. [39;49m[32;49m
0x7fb6e77a08ab    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e77a08af    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e77a08b3    498906                  mov [r14], rax                                         [39;49m
[34;49m ..          : _ffx ( n w | t )  nl 7 w @ [39;49m[33;40mwordRun[39;49m[34;49m decimal p nl  { t 0 = } { t @ n @ < } { t ++ }  { reps @ w @ iFactorialX } for  ;  .. [39;49m[32;49m
0x7fb6e77a08b6    49b8a0b580892d560000    mov r8, 0x562d8980b5a0                                 [39;49m[32;49m
0x7fb6e77a08c0    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e77a08ca    49ffd1                  call r9                    	< Word.[34;49mwordRun[39;49m : 0x0000562d8980b5a0[32;49m >[39;49m[39;49m
[34;49m ..  : _ffx ( n w | t )  nl 7 w @ wordRun [39;49m[33;40mdecimal[39;49m[34;49m p nl  { t 0 = } { t @ n @ < } { t ++ }  { reps @ w @ iFactorialX } for  ;  .. [39;49m[32;49m
0x7fb6e77a08cd    49b810a480892d560000    mov r8, 0x562d8980a410                                 [39;49m[32;49m
0x7fb6e77a08d7    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e77a08e1    49ffd1                  call r9                    	< System.[34;49mdecimal[39;49m : 0x0000562d8980a410[32;49m >[39;49m[39;49m
[34;49m .. ( n w | t )  nl 7 w @ wordRun decimal [39;49m[33;40mp[39;49m[34;49m nl  { t 0 = } { t @ n @ < } { t ++ }  { reps @ w @ iFactorialX } for  ; [39;49m[32;49m
0x7fb6e77a08e4    49b9d9a593e7b67f0000    mov r9, 0x7fb6e793a5d9                                 [39;49m[32;49m
0x7fb6e77a08ee    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fb6e793a5d9[32;49m >[39;49m[39;49m
[34;49m .. n w | t )  nl 7 w @ wordRun decimal p [39;49m[33;40mnl[39;49m[34;49m  { t 0 = } { t @ n @ < } { t ++ }  { reps @ w @ iFactorialX } for  ; [39;49m[32;49m
0x7fb6e77a08f1    49b8e08080892d560000    mov r8, 0x562d898080e0                                 [39;49m[32;49m
0x7fb6e77a08fb    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e77a0905    49ffd1                  call r9                    	< Io.[34;49mnewline[39;49m : 0x0000562d898080e0[32;49m >[39;49m[39;49m
[34;49m .. t )  nl 7 w @ wordRun decimal p nl  { [39;49m[33;40mt[39;49m[34;49m 0 = } { t @ n @ < } { t ++ }  { reps @ w @ iFactorialX } for  ; [39;49m[32;49m
0x7fb6e77a0908    498d4708                lea rax, [r15+0x8]                                     [39;49m
[34;49m .. )  nl 7 w @ wordRun decimal p nl  { t [39;49m[33;40m0[39;49m[34;49m = } { t @ n @ < } { t ++ }  { reps @ w @ iFactorialX } for  ; [39;49m[32;49m
0x7fb6e77a090c    48c7c100000000          mov rcx, 0x0                                           [39;49m
[34;49m ..  nl 7 w @ wordRun decimal p nl  { t 0 [39;49m[33;40m=[39;49m[34;49m } { t @ n @ < } { t ++ }  { reps @ w @ iFactorialX } for  ; [39;49m[32;49m
0x7fb6e77a0913    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. w @ wordRun decimal p nl  { t 0 = } { [39;49m[33;40mt[39;49m[34;49m @ n @ < } { t ++ }  { reps @ w @ iFactorialX } for  ; [39;49m[32;49m
0x7fb6e77a0916    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m .. wordRun decimal p nl  { t 0 = } { t @ [39;49m[33;40mn[39;49m[34;49m @ < } { t ++ }  { reps @ w @ iFactorialX } for  ; [39;49m[32;49m
0x7fb6e77a091a    498b4ff0                mov rcx, [r15-0x10]                                    [39;49m
[34;49m .. Run decimal p nl  { t 0 = } { t @ n @ [39;49m[33;40m<[39;49m[34;49m } { t ++ }  { reps @ w @ iFactorialX } for  ; [39;49m[32;49m
0x7fb6e77a091e    483bc1                  cmp rax, rcx                                           [39;49m[32;49m
0x7fb6e77a0921    0f8d32000000            jge 0x7fb6e77a0959         	< User.[34;49m_ffx[39;49m+226[32;49m >[39;49m[39;49m
[34;49m ..   { t 0 = } { t @ n @ < } { t ++ }  { [39;49m[33;40mreps[39;49m[34;49m @ w @ iFactorialX } for  ; [39;49m[32;49m
0x7fb6e77a0927    48b8d8cd7ae4b67f0000    mov rax, 0x7fb6e47acdd8                                [39;49m[32;49m
0x7fb6e77a0931    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fb6e77a0934    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e77a0938    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  = } { t @ n @ < } { t ++ }  { reps @ [39;49m[33;40mw[39;49m[34;49m @ iFactorialX } for  ; [39;49m[32;49m
0x7fb6e77a093b    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e77a093f    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e77a0943    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  { t @ n @ < } { t ++ }  { reps @ w @ [39;49m[33;40miFactorialX[39;49m[34;49m } for  ; [39;49m[32;49m
0x7fb6e77a0946    49b9bb077ae7b67f0000    mov r9, 0x7fb6e77a07bb                                 [39;49m[32;49m
0x7fb6e77a0950    49ffd1                  call r9                    	< User.[34;49miFactorialX[39;49m : 0x00007fb6e77a07bb[32;49m >[39;49m[39;49m
[34;49m .. mal p nl  { t 0 = } { t @ n @ < } { t [39;49m[33;40m++[39;49m[34;49m }  { reps @ w @ iFactorialX } for  ; [39;49m[32;49m
0x7fb6e77a0953    49ff4708                inc qword [r15+0x8]                                    [39;49m
[34;49m ..  p nl  { t 0 = } { t @ n @ < } { t ++ [39;49m[33;40m}[39;49m[34;49m  { reps @ w @ iFactorialX } for  ; [39;49m[32;49m
0x7fb6e77a0957    ebbd                    jmp 0x7fb6e77a0916         	< User.[34;49m_ffx[39;49m+159[32;49m >[39;49m[39;49m
[34;49m .. ++ }  { reps @ w @ iFactorialX } for  [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fb6e77a0959    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e77a095d    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e77a0961    4983ee10                sub r14, 0x10                                          [39;49m[32;49m
0x7fb6e77a0965    c3                      ret                                                    [39;49m
Word_Disassemble : word - '_ffx' :: codeSize = 238
Word : 0x00007fb6e47acf20 :: Compiled at : 0x00007fb6e77a0877
 =============================
::> 'wdiss' was called at namespaces/test/dev.csl 175.17 <::

 ffx ... 

 =============================
User.[34;49mfactorial[39;49m <:> csl compiled word
SourceCode for User.[34;49mfactorial[39;49m :> 
[34;49m: factorial ( REG n | REG rec ) rec 1 = { n @ 1 > } { rec @ n @ * rec store n -- } while return rec ; [39;49m
Source code file location of [34;49mfactorial[39;49m : "namespaces/test/dev.csl" : 140.2 :: we are now at : namespaces/test/dev.csl : 206.16
Compiled with : optimizeOn, inlineOn, Jcc8 on
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xe77a068c -- code size = 29 bytes
TypeSignature : 
 -----------------------------
Word :: User.[34;49mfactorial[39;49m : definition = 0x00007fb6e77a068c : disassembly at namespaces/test/dev.csl : 206.16 :
[34;49m ..                           : factorial [39;49m[33;40m([39;49m[34;49m REG n | REG rec ) rec 1 = { n @ 1 > } { rec @ n @ * rec store n -- } while return rec ;  .. [39;49m[32;49m
0x7fb6e77a068c    498b3e                  mov rdi, [r14]                                         [39;49m
[34;49m ..   : factorial ( REG n | REG rec ) rec [39;49m[33;40m1[39;49m[34;49m = { n @ 1 > } { rec @ n @ * rec store n -- } while return rec ;  .. [39;49m[32;49m
0x7fb6e77a068f    48c7c601000000          mov rsi, 0x1                                           [39;49m
[34;49m .. l ( REG n | REG rec ) rec 1 = { n @ 1 [39;49m[33;40m>[39;49m[34;49m } { rec @ n @ * rec store n -- } while return rec ; [39;49m[32;49m
0x7fb6e77a0696    4883ff01                cmp rdi, 0x1                                           [39;49m[32;49m
0x7fb6e77a069a    7e09                    jle 0xe77a06a5                                         [39;49m
[34;49m .. rec ) rec 1 = { n @ 1 > } { rec @ n @ [39;49m[33;40m*[39;49m[34;49m rec store n -- } while return rec ; [39;49m[32;49m
0x7fb6e77a069c    480faff7                imul rsi, rdi                                          [39;49m
[34;49m .. { n @ 1 > } { rec @ n @ * rec store n [39;49m[33;40m--[39;49m[34;49m } while return rec ; [39;49m[32;49m
0x7fb6e77a06a0    48ffcf                  dec rdi                                                [39;49m
[34;49m ..  @ 1 > } { rec @ n @ * rec store n -- [39;49m[33;40m}[39;49m[34;49m while return rec ; [39;49m[32;49m
0x7fb6e77a06a3    ebf1                    jmp 0x7fb6e77a0696         	< User.[34;49mfactorial[39;49m+10[32;49m >[39;49m[39;49m
[34;49m .. @ * rec store n -- } while return rec [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fb6e77a06a5    498936                  mov [r14], rsi                                         [39;49m[32;49m
0x7fb6e77a06a8    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'factorial' :: codeSize = 28
Word : 0x00007fb6e479f988 :: Compiled at : 0x00007fb6e77a068c
 =============================
::> 'wdiss' was called at namespaces/test/dev.csl 206.16 <::

 5040

 factorial :
Timer [ 1 ] : elapsed time = 0.004751814 seconds :: function : factorial : called on args : 1 - 23 : 10000 reps

 =============================
C.[34;49mcfactorial[39;49m <:> C compiled primitive
SourceCode for C.[34;49mcfactorial[39;49m :> 
C Primitive
 -----------------------------
Word :: C.[34;49mcfactorial[39;49m : definition = 0x0000562d8980e960 : disassembly at namespaces/test/dev.csl : 207.17 :[32;49m
0x562d8980e964    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x562d8980e967    4883f801                cmp rax, 0x1                                           [39;49m[32;49m
0x562d8980e96b    7f0b                    jg 0x8980e978                                          [39;49m[32;49m
0x562d8980e96d    49c70601000000          mov qword [r14], 0x1                                   [39;49m[32;49m
0x562d8980e974    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'cfactorial' :: codeSize = 17
Word : 0x00007fb6e78337c0 :: Compiled at : 0x0000562d8980e960
 =============================
::> 'wdiss' was called at namespaces/test/dev.csl 207.17 <::

 5040

 cfactorial :
Timer [ 1 ] : elapsed time = 0.007615146 seconds :: function : cfactorial : called on args : 1 - 23 : 10000 reps

 =============================
C.[34;49mcfactorial2[39;49m <:> C compiled primitive
SourceCode for C.[34;49mcfactorial2[39;49m :> 
C Primitive
 -----------------------------
Word :: C.[34;49mcfactorial2[39;49m : definition = 0x0000562d8980ea40 : disassembly at namespaces/test/dev.csl : 208.18 :[32;49m
0x562d8980ea44    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x562d8980ea47    4c89f6                  mov rsi, r14                                           [39;49m[32;49m
0x562d8980ea4a    ba01000000              mov edx, 0x1                                           [39;49m[32;49m
0x562d8980ea4f    4883f801                cmp rax, 0x1                                           [39;49m[32;49m
0x562d8980ea53    7e14                    jle 0x8980ea69                                         [39;49m[32;49m
0x562d8980ea55    0f1f00                  nop [rax]                                              [39;49m[32;49m
0x562d8980ea58    4889c1                  mov rcx, rax                                           [39;49m[32;49m
0x562d8980ea5b    4883e801                sub rax, 0x1                                           [39;49m[32;49m
0x562d8980ea5f    480fafd1                imul rdx, rcx                                          [39;49m[32;49m
0x562d8980ea63    4883f801                cmp rax, 0x1                                           [39;49m[32;49m
0x562d8980ea67    75ef                    jnz 0x8980ea58                                         [39;49m[32;49m
0x562d8980ea69    488916                  mov [rsi], rdx                                         [39;49m[32;49m
0x562d8980ea6c    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'cfactorial2' :: codeSize = 41
Word : 0x00007fb6e7833978 :: Compiled at : 0x0000562d8980ea40
 =============================
::> 'wdiss' was called at namespaces/test/dev.csl 208.18 <::

 5040

 cfactorial2 :
Timer [ 1 ] : elapsed time = 0.003926169 seconds :: function : cfactorial2 : called on args : 1 - 23 : 10000 reps

 =============================
C.[34;49mcfactorial3[39;49m <:> C compiled primitive
SourceCode for C.[34;49mcfactorial3[39;49m :> 
C Primitive
 -----------------------------
Word :: C.[34;49mcfactorial3[39;49m : definition = 0x0000562d8980ea70 : disassembly at namespaces/test/dev.csl : 209.18 :[32;49m
0x562d8980ea74    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x562d8980ea77    4c89f6                  mov rsi, r14                                           [39;49m[32;49m
0x562d8980ea7a    ba01000000              mov edx, 0x1                                           [39;49m[32;49m
0x562d8980ea7f    4883f801                cmp rax, 0x1                                           [39;49m[32;49m
0x562d8980ea83    7e14                    jle 0x8980ea99                                         [39;49m[32;49m
0x562d8980ea85    0f1f00                  nop [rax]                                              [39;49m[32;49m
0x562d8980ea88    4889c1                  mov rcx, rax                                           [39;49m[32;49m
0x562d8980ea8b    4883e801                sub rax, 0x1                                           [39;49m[32;49m
0x562d8980ea8f    480fafd1                imul rdx, rcx                                          [39;49m[32;49m
0x562d8980ea93    4883f801                cmp rax, 0x1                                           [39;49m[32;49m
0x562d8980ea97    75ef                    jnz 0x8980ea88                                         [39;49m[32;49m
0x562d8980ea99    488916                  mov [rsi], rdx                                         [39;49m[32;49m
0x562d8980ea9c    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'cfactorial3' :: codeSize = 41
Word : 0x00007fb6e7833b30 :: Compiled at : 0x0000562d8980ea70
 =============================
::> 'wdiss' was called at namespaces/test/dev.csl 209.18 <::

 5040

 cfactorial3 :
Timer [ 1 ] : elapsed time = 0.004146204 seconds :: function : cfactorial3 : called on args : 1 - 23 : 10000 reps

 =============================
User.[34;49mqexp[39;49m <:> csl compiled word
SourceCode for User.[34;49mqexp[39;49m :> 
[34;49m: qexp dup 1 <= if{ }else{ dup -- qexp * }fi ; [39;49m
Source code file location of [34;49mqexp[39;49m : "namespaces/test/dev.csl" : 48.2 :: we are now at : namespaces/test/dev.csl : 210.16
Compiled with : optimizeOn, inlineOn, Jcc8 on
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xe77a015d -- code size = 92 bytes
TypeSignature : 
 -----------------------------
Word :: User.[34;49mqexp[39;49m : definition = 0x00007fb6e77a015d : disassembly at namespaces/test/dev.csl : 210.16 :
[34;49m ..                                : qexp [39;49m[33;40mdup[39;49m[34;49m 1 <= if{ }else{ dup -- qexp * }fi ;  .. [39;49m[32;49m
0x7fb6e77a015d    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fb6e77a0160    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e77a0164    498906                  mov [r14], rax                                         [39;49m
[34;49m ..                            : qexp dup [39;49m[33;40m1[39;49m[34;49m <= if{ }else{ dup -- qexp * }fi ;  .. [39;49m[32;49m
0x7fb6e77a0167    48c7c001000000          mov rax, 0x1                                           [39;49m[32;49m
0x7fb6e77a016e    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fb6e77a0171    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fb6e77a0174    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m ..                          : qexp dup 1 [39;49m[33;40m<=[39;49m[34;49m if{ }else{ dup -- qexp * }fi ;  .. [39;49m[32;49m
0x7fb6e77a0178    483bc1                  cmp rax, rcx                                           [39;49m[32;49m
0x7fb6e77a017b    7f05                    jg 0xe77a0182                                          [39;49m[32;49m
0x7fb6e77a017d    e936000000              jmp 0x7fb6e77a01b8         	< User.[34;49mqexp[39;49m+91[32;49m >[39;49m[39;49m
[34;49m ..            : qexp dup 1 <= if{ }else{ [39;49m[33;40mdup[39;49m[34;49m -- qexp * }fi ;  .. [39;49m[32;49m
0x7fb6e77a0182    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fb6e77a0185    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e77a0189    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e77a018c    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fb6e77a018f    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m ..        : qexp dup 1 <= if{ }else{ dup [39;49m[33;40m--[39;49m[34;49m qexp * }fi ;  .. [39;49m[32;49m
0x7fb6e77a0193    48ffc8                  dec rax                                                [39;49m[32;49m
0x7fb6e77a0196    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e77a019a    498906                  mov [r14], rax                                         [39;49m
[34;49m ..     : qexp dup 1 <= if{ }else{ dup -- [39;49m[33;40mqexp[39;49m[34;49m * }fi ;  .. [39;49m[32;49m
0x7fb6e77a019d    e8bbffffff              call 0x7fb6e77a015d        	< User.[34;49mqexp[39;49m : 0x00007fb6e77a015d[32;49m >[39;49m[39;49m[32;49m
0x7fb6e77a01a2    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fb6e77a01a5    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fb6e77a01a9    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m   : qexp dup 1 <= if{ }else{ dup -- qexp [39;49m[33;40m*[39;49m[34;49m }fi ;  .. [39;49m[32;49m
0x7fb6e77a01ad    480fafc1                imul rax, rcx                                          [39;49m[32;49m
0x7fb6e77a01b1    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e77a01b5    498906                  mov [r14], rax                                         [39;49m
[34;49m .. dup 1 <= if{ }else{ dup -- qexp * }fi [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fb6e77a01b8    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'qexp' :: codeSize = 91
Word : 0x00007fb6e61170c0 :: Compiled at : 0x00007fb6e77a015d
 =============================
::> 'wdiss' was called at namespaces/test/dev.csl 210.16 <::

 5040

 qexp :
Timer [ 1 ] : elapsed time = 0.030161077 seconds :: function : qexp : called on args : 1 - 23 : 10000 reps

 =============================
User.[34;49mbexp[39;49m <:> csl compiled word
SourceCode for User.[34;49mbexp[39;49m :> 
[34;49m: bexp ( n ) n @ 1 > if{ n @ dup -- bexp * }else{ 1 }fi ; [39;49m
Source code file location of [34;49mbexp[39;49m : "namespaces/test/dev.csl" : 50.2 :: we are now at : namespaces/test/dev.csl : 211.13
Compiled with : optimizeOn, inlineOn, Jcc8 on
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xe77a022e -- code size = 115 bytes
TypeSignature : 
 -----------------------------
Word :: User.[34;49mbexp[39;49m : definition = 0x00007fb6e77a022e : disassembly at namespaces/test/dev.csl : 211.13 :
[34;49m ..                                     : [39;49m[33;40mbexp[39;49m[34;49m ( n ) n @ 1 > if{ n @ dup -- bexp * }else{ 1 }fi ;  .. [39;49m[32;49m
0x7fb6e77a022e    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fb6e77a0232    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e77a0236    4981c608000000          add r14, 0x8                                           [39;49m
[34;49m ..                          : bexp ( n ) [39;49m[33;40mn[39;49m[34;49m @ 1 > if{ n @ dup -- bexp * }else{ 1 }fi ;  .. [39;49m[32;49m
0x7fb6e77a023d    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m ..                    : bexp ( n ) n @ 1 [39;49m[33;40m>[39;49m[34;49m if{ n @ dup -- bexp * }else{ 1 }fi ;  .. [39;49m[32;49m
0x7fb6e77a0241    4883f801                cmp rax, 0x1                                           [39;49m[32;49m
0x7fb6e77a0245    7e40                    jle 0xe77a0287                                         [39;49m
[34;49m ..              : bexp ( n ) n @ 1 > if{ [39;49m[33;40mn[39;49m[34;49m @ dup -- bexp * }else{ 1 }fi ;  .. [39;49m[32;49m
0x7fb6e77a0247    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e77a024b    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fb6e77a024f    498906                  mov [r14], rax                                         [39;49m
[34;49m ..          : bexp ( n ) n @ 1 > if{ n @ [39;49m[33;40mdup[39;49m[34;49m -- bexp * }else{ 1 }fi ;  .. [39;49m[32;49m
0x7fb6e77a0252    498946f8                mov [r14-0x8], rax                                     [39;49m[32;49m
0x7fb6e77a0256    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fb6e77a0259    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m ..      : bexp ( n ) n @ 1 > if{ n @ dup [39;49m[33;40m--[39;49m[34;49m bexp * }else{ 1 }fi ;  .. [39;49m[32;49m
0x7fb6e77a025d    48ffc8                  dec rax                                                [39;49m[32;49m
0x7fb6e77a0260    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e77a0264    498906                  mov [r14], rax                                         [39;49m
[34;49m ..   : bexp ( n ) n @ 1 > if{ n @ dup -- [39;49m[33;40mbexp[39;49m[34;49m * }else{ 1 }fi ;  .. [39;49m[32;49m
0x7fb6e77a0267    e8c2ffffff              call 0x7fb6e77a022e        	< User.[34;49mbexp[39;49m : 0x00007fb6e77a022e[32;49m >[39;49m[39;49m[32;49m
0x7fb6e77a026c    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fb6e77a026f    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fb6e77a0273    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m : bexp ( n ) n @ 1 > if{ n @ dup -- bexp [39;49m[33;40m*[39;49m[34;49m }else{ 1 }fi ;  .. [39;49m[32;49m
0x7fb6e77a0277    480fafc1                imul rax, rcx                                          [39;49m[32;49m
0x7fb6e77a027b    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e77a027f    498906                  mov [r14], rax                                         [39;49m
[34;49m .. p ( n ) n @ 1 > if{ n @ dup -- bexp * [39;49m[33;40m}else{[39;49m[34;49m 1 }fi ; [39;49m[32;49m
0x7fb6e77a0282    e90e000000              jmp 0x7fb6e77a0295         	< User.[34;49mbexp[39;49m+103[32;49m >[39;49m[39;49m
[34;49m ..  n @ 1 > if{ n @ dup -- bexp * }else{ [39;49m[33;40m1[39;49m[34;49m }fi ; [39;49m[32;49m
0x7fb6e77a0287    48c7c001000000          mov rax, 0x1                                           [39;49m[32;49m
0x7fb6e77a028e    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e77a0292    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  > if{ n @ dup -- bexp * }else{ 1 }fi [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fb6e77a0295    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e77a0299    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e77a029d    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e77a02a0    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'bexp' :: codeSize = 114
Word : 0x00007fb6e75054f0 :: Compiled at : 0x00007fb6e77a022e
 =============================
::> 'wdiss' was called at namespaces/test/dev.csl 211.13 <::

 5040

 bexp :
Timer [ 1 ] : elapsed time = 0.035283799 seconds :: function : bexp : called on args : 1 - 23 : 10000 reps

 =============================
User.[34;49mbexp2[39;49m <:> csl compiled word
SourceCode for User.[34;49mbexp2[39;49m :> 
[34;49m: bexp2 ( n ) { n @ 1 > } { n @ dup -- bexp2 * } { 1 } ifElse ; [39;49m
Source code file location of [34;49mbexp2[39;49m : "namespaces/test/dev.csl" : 51.2 :: we are now at : namespaces/test/dev.csl : 212.12
Compiled with : optimizeOn, inlineOn, Jcc8 on
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xe77a02a6 -- code size = 115 bytes
TypeSignature : 
 -----------------------------
Word :: User.[34;49mbexp2[39;49m : definition = 0x00007fb6e77a02a6 : disassembly at namespaces/test/dev.csl : 212.12 :
[34;49m ..                                     : [39;49m[33;40mbexp2[39;49m[34;49m ( n ) { n @ 1 > } { n @ dup -- bexp2 * } { 1 } ifElse ;  .. [39;49m[32;49m
0x7fb6e77a02a6    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fb6e77a02aa    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e77a02ae    4981c608000000          add r14, 0x8                                           [39;49m
[34;49m ..                       : bexp2 ( n ) { [39;49m[33;40mn[39;49m[34;49m @ 1 > } { n @ dup -- bexp2 * } { 1 } ifElse ;  .. [39;49m[32;49m
0x7fb6e77a02b5    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m ..                 : bexp2 ( n ) { n @ 1 [39;49m[33;40m>[39;49m[34;49m } { n @ dup -- bexp2 * } { 1 } ifElse ;  .. [39;49m[32;49m
0x7fb6e77a02b9    4883f801                cmp rax, 0x1                                           [39;49m[32;49m
0x7fb6e77a02bd    7e40                    jle 0xe77a02ff                                         [39;49m
[34;49m ..           : bexp2 ( n ) { n @ 1 > } { [39;49m[33;40mn[39;49m[34;49m @ dup -- bexp2 * } { 1 } ifElse ;  .. [39;49m[32;49m
0x7fb6e77a02bf    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e77a02c3    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fb6e77a02c7    498906                  mov [r14], rax                                         [39;49m
[34;49m ..       : bexp2 ( n ) { n @ 1 > } { n @ [39;49m[33;40mdup[39;49m[34;49m -- bexp2 * } { 1 } ifElse ;  .. [39;49m[32;49m
0x7fb6e77a02ca    498946f8                mov [r14-0x8], rax                                     [39;49m[32;49m
0x7fb6e77a02ce    498b06                  mov rax, [r14]                                         [39;49m
[34;49m ..             : bexp2 ( n ) { n @ 1 > } [39;49m[33;40m{[39;49m[34;49m n @ dup -- bexp2 * } { 1 } ifElse ;  .. [39;49m[32;49m
0x7fb6e77a02d1    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m ..   : bexp2 ( n ) { n @ 1 > } { n @ dup [39;49m[33;40m--[39;49m[34;49m bexp2 * } { 1 } ifElse ;  .. [39;49m[32;49m
0x7fb6e77a02d5    48ffc8                  dec rax                                                [39;49m[32;49m
0x7fb6e77a02d8    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e77a02dc    498906                  mov [r14], rax                                         [39;49m
[34;49m   : bexp2 ( n ) { n @ 1 > } { n @ dup -- [39;49m[33;40mbexp2[39;49m[34;49m * } { 1 } ifElse ;  .. [39;49m[32;49m
0x7fb6e77a02df    e8c2ffffff              call 0x7fb6e77a02a6        	< User.[34;49mbexp2[39;49m : 0x00007fb6e77a02a6[32;49m >[39;49m[39;49m[32;49m
0x7fb6e77a02e4    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fb6e77a02e7    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fb6e77a02eb    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m ..  ( n ) { n @ 1 > } { n @ dup -- bexp2 [39;49m[33;40m*[39;49m[34;49m } { 1 } ifElse ; [39;49m[32;49m
0x7fb6e77a02ef    480fafc1                imul rax, rcx                                          [39;49m[32;49m
0x7fb6e77a02f3    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e77a02f7    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  n ) { n @ 1 > } { n @ dup -- bexp2 * [39;49m[33;40m}[39;49m[34;49m { 1 } ifElse ; [39;49m[32;49m
0x7fb6e77a02fa    e90e000000              jmp 0x7fb6e77a030d         	< User.[34;49mbexp2[39;49m+103[32;49m >[39;49m[39;49m
[34;49m ..  { n @ 1 > } { n @ dup -- bexp2 * } { [39;49m[33;40m1[39;49m[34;49m } ifElse ; [39;49m[32;49m
0x7fb6e77a02ff    48c7c001000000          mov rax, 0x1                                           [39;49m[32;49m
0x7fb6e77a0306    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e77a030a    498906                  mov [r14], rax                                         [39;49m
[34;49m .. } { n @ dup -- bexp2 * } { 1 } ifElse [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fb6e77a030d    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e77a0311    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e77a0315    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e77a0318    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'bexp2' :: codeSize = 114
Word : 0x00007fb6e74c9cd8 :: Compiled at : 0x00007fb6e77a02a6
 =============================
::> 'wdiss' was called at namespaces/test/dev.csl 212.12 <::

 5040

 bexp2 :
Timer [ 1 ] : elapsed time = 0.035300698 seconds :: function : bexp2 : called on args : 1 - 23 : 10000 reps

 =============================
C_Syntax.[34;49mfactoriali[39;49m <:> csl compiled word, prefix
SourceCode for C_Syntax.[34;49mfactoriali[39;49m :> 
[34;49mint factoriali ( byte REG n | REG res ) { res = 1; while ( n >= 2 ) { res = res * (n--) ; } return res; } [39;49m
Source code file location of [34;49mfactoriali[39;49m : "namespaces/test/dev.csl" : 21.15 :: we are now at : namespaces/test/dev.csl : 213.17
Compiled with : optimizeOn, inlineOn, c_syntaxOn, infixOn, Jcc8 on
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xe77a00d7 -- code size = 29 bytes
TypeSignature : 
 -----------------------------
Word :: C_Syntax.[34;49mfactoriali[39;49m : definition = 0x00007fb6e77a00d7 : disassembly at namespaces/test/dev.csl : 213.17 :
[34;49m ..                                   int [39;49m[33;40mfactoriali[39;49m[34;49m ( byte REG n | REG res ) { res = 1; while ( n >= 2 ) { res = res * (n--) ; } return res; } .. [39;49m[32;49m
0x7fb6e77a00d7    498b3e                  mov rdi, [r14]                                         [39;49m
[34;49m .. iali ( byte REG n | REG res ) { res = [39;49m[33;40m1[39;49m[34;49m; while ( n >= 2 ) { res = res * (n--) ; } return res; } [39;49m[32;49m
0x7fb6e77a00da    48c7c601000000          mov rsi, 0x1                                           [39;49m
[34;49m .. EG n | REG res ) { res = 1; while ( n [39;49m[33;40m>=[39;49m[34;49m 2 ) { res = res * (n--) ; } return res; } [39;49m[32;49m
0x7fb6e77a00e1    4883ff02                cmp rdi, 0x2                                           [39;49m[32;49m
0x7fb6e77a00e5    7c09                    jl 0xe77a00f0                                          [39;49m
[34;49m .. res = 1; while ( n >= 2 ) { res = res [39;49m[33;40m*[39;49m[34;49m (n--) ; } return res; } [39;49m[32;49m
0x7fb6e77a00e7    480faff7                imul rsi, rdi                                          [39;49m
[34;49m .. = 1; while ( n >= 2 ) { res = res * (n[39;49m[33;40m--[39;49m[34;49m) ; } return res; } [39;49m[32;49m
0x7fb6e77a00eb    48ffcf                  dec rdi                                                [39;49m
[34;49m .. hile ( n >= 2 ) { res = res * (n--) ; [39;49m[33;40m}[39;49m[34;49m return res; } [39;49m[32;49m
0x7fb6e77a00ee    ebf1                    jmp 0x7fb6e77a00e1         	< C_Syntax.[34;49mfactoriali[39;49m+10[32;49m >[39;49m[39;49m
[34;49m .. >= 2 ) { res = res * (n--) ; } return [39;49m[33;40mres[39;49m[34;49m; } [39;49m[32;49m
0x7fb6e77a00f0    498936                  mov [r14], rsi                                         [39;49m[32;49m
0x7fb6e77a00f3    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'factoriali' :: codeSize = 28
Word : 0x00007fb6e78e3400 :: Compiled at : 0x00007fb6e77a00d7
 =============================
::> 'wdiss' was called at namespaces/test/dev.csl 213.17 <::

 5040

 factoriali :
Timer [ 1 ] : elapsed time = 0.004306667 seconds :: function : factoriali : called on args : 1 - 23 : 10000 reps

 =============================
User.[34;49mqexp[39;49m <:> csl compiled word
SourceCode for User.[34;49mqexp[39;49m :> 
[34;49m: qexp dup 1 <= if{ }else{ dup -- qexp * }fi ; [39;49m
Source code file location of [34;49mqexp[39;49m : "namespaces/test/dev.csl" : 48.2 :: we are now at : namespaces/test/dev.csl : 214.13
Compiled with : optimizeOn, inlineOn, Jcc8 on
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xe77a015d -- code size = 92 bytes
TypeSignature : 
 -----------------------------
Word :: User.[34;49mqexp[39;49m : definition = 0x00007fb6e77a015d : disassembly at namespaces/test/dev.csl : 214.13 :
[34;49m ..                                : qexp [39;49m[33;40mdup[39;49m[34;49m 1 <= if{ }else{ dup -- qexp * }fi ;  .. [39;49m[32;49m
0x7fb6e77a015d    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fb6e77a0160    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e77a0164    498906                  mov [r14], rax                                         [39;49m
[34;49m ..                            : qexp dup [39;49m[33;40m1[39;49m[34;49m <= if{ }else{ dup -- qexp * }fi ;  .. [39;49m[32;49m
0x7fb6e77a0167    48c7c001000000          mov rax, 0x1                                           [39;49m[32;49m
0x7fb6e77a016e    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fb6e77a0171    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fb6e77a0174    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m ..                          : qexp dup 1 [39;49m[33;40m<=[39;49m[34;49m if{ }else{ dup -- qexp * }fi ;  .. [39;49m[32;49m
0x7fb6e77a0178    483bc1                  cmp rax, rcx                                           [39;49m[32;49m
0x7fb6e77a017b    7f05                    jg 0xe77a0182                                          [39;49m[32;49m
0x7fb6e77a017d    e936000000              jmp 0x7fb6e77a01b8         	< User.[34;49mqexp[39;49m+91[32;49m >[39;49m[39;49m
[34;49m ..            : qexp dup 1 <= if{ }else{ [39;49m[33;40mdup[39;49m[34;49m -- qexp * }fi ;  .. [39;49m[32;49m
0x7fb6e77a0182    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fb6e77a0185    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e77a0189    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e77a018c    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fb6e77a018f    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m ..        : qexp dup 1 <= if{ }else{ dup [39;49m[33;40m--[39;49m[34;49m qexp * }fi ;  .. [39;49m[32;49m
0x7fb6e77a0193    48ffc8                  dec rax                                                [39;49m[32;49m
0x7fb6e77a0196    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e77a019a    498906                  mov [r14], rax                                         [39;49m
[34;49m ..     : qexp dup 1 <= if{ }else{ dup -- [39;49m[33;40mqexp[39;49m[34;49m * }fi ;  .. [39;49m[32;49m
0x7fb6e77a019d    e8bbffffff              call 0x7fb6e77a015d        	< User.[34;49mqexp[39;49m : 0x00007fb6e77a015d[32;49m >[39;49m[39;49m[32;49m
0x7fb6e77a01a2    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fb6e77a01a5    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fb6e77a01a9    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m   : qexp dup 1 <= if{ }else{ dup -- qexp [39;49m[33;40m*[39;49m[34;49m }fi ;  .. [39;49m[32;49m
0x7fb6e77a01ad    480fafc1                imul rax, rcx                                          [39;49m[32;49m
0x7fb6e77a01b1    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e77a01b5    498906                  mov [r14], rax                                         [39;49m
[34;49m .. dup 1 <= if{ }else{ dup -- qexp * }fi [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fb6e77a01b8    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'qexp' :: codeSize = 91
Word : 0x00007fb6e61170c0 :: Compiled at : 0x00007fb6e77a015d
 =============================
::> 'wdiss' was called at namespaces/test/dev.csl 214.13 <::

 5040

 qexp :
Timer [ 1 ] : elapsed time = 0.030222158 seconds :: function : qexp : called on args : 1 - 23 : 10000 reps

 =============================
User.[34;49mqexp2[39;49m <:> csl compiled word
SourceCode for User.[34;49mqexp2[39;49m :> 
[34;49m: qexp2 dup 1 <= ?< >:< dup -- qexp2 * >? ; [39;49m
Source code file location of [34;49mqexp2[39;49m : "namespaces/test/dev.csl" : 49.2 :: we are now at : namespaces/test/dev.csl : 215.14
Compiled with : optimizeOn, inlineOn, Jcc8 on
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xe77a01cd -- code size = 92 bytes
TypeSignature : 
 -----------------------------
Word :: User.[34;49mqexp2[39;49m : definition = 0x00007fb6e77a01cd : disassembly at namespaces/test/dev.csl : 215.14 :
[34;49m ..                               : qexp2 [39;49m[33;40mdup[39;49m[34;49m 1 <= ?< >:< dup -- qexp2 * >? ;  .. [39;49m[32;49m
0x7fb6e77a01cd    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fb6e77a01d0    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e77a01d4    498906                  mov [r14], rax                                         [39;49m
[34;49m ..                           : qexp2 dup [39;49m[33;40m1[39;49m[34;49m <= ?< >:< dup -- qexp2 * >? ;  .. [39;49m[32;49m
0x7fb6e77a01d7    48c7c001000000          mov rax, 0x1                                           [39;49m[32;49m
0x7fb6e77a01de    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fb6e77a01e1    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fb6e77a01e4    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m ..                         : qexp2 dup 1 [39;49m[33;40m<=[39;49m[34;49m ?< >:< dup -- qexp2 * >? ;  .. [39;49m[32;49m
0x7fb6e77a01e8    483bc1                  cmp rax, rcx                                           [39;49m[32;49m
0x7fb6e77a01eb    7f05                    jg 0xe77a01f2                                          [39;49m
[34;49m ..                   : qexp2 dup 1 <= ?< [39;49m[33;40m>:<[39;49m[34;49m dup -- qexp2 * >? ;  .. [39;49m[32;49m
0x7fb6e77a01ed    e936000000              jmp 0x7fb6e77a0228         	< User.[34;49mqexp2[39;49m+91[32;49m >[39;49m[39;49m
[34;49m ..               : qexp2 dup 1 <= ?< >:< [39;49m[33;40mdup[39;49m[34;49m -- qexp2 * >? ;  .. [39;49m[32;49m
0x7fb6e77a01f2    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fb6e77a01f5    4983c608                add r14, 0x8                                           [39;49m
[34;49m ..                      : qexp2 dup 1 <= [39;49m[33;40m?<[39;49m[34;49m >:< dup -- qexp2 * >? ;  .. [39;49m[32;49m
0x7fb6e77a01f9    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e77a01fc    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fb6e77a01ff    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m ..           : qexp2 dup 1 <= ?< >:< dup [39;49m[33;40m--[39;49m[34;49m qexp2 * >? ;  .. [39;49m[32;49m
0x7fb6e77a0203    48ffc8                  dec rax                                                [39;49m[32;49m
0x7fb6e77a0206    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e77a020a    498906                  mov [r14], rax                                         [39;49m
[34;49m ..        : qexp2 dup 1 <= ?< >:< dup -- [39;49m[33;40mqexp2[39;49m[34;49m * >? ;  .. [39;49m[32;49m
0x7fb6e77a020d    e8bbffffff              call 0x7fb6e77a01cd        	< User.[34;49mqexp2[39;49m : 0x00007fb6e77a01cd[32;49m >[39;49m[39;49m[32;49m
0x7fb6e77a0212    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fb6e77a0215    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fb6e77a0219    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m ..  : qexp2 dup 1 <= ?< >:< dup -- qexp2 [39;49m[33;40m*[39;49m[34;49m >? ;  .. [39;49m[32;49m
0x7fb6e77a021d    480fafc1                imul rax, rcx                                          [39;49m[32;49m
0x7fb6e77a0221    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e77a0225    498906                  mov [r14], rax                                         [39;49m
[34;49m: qexp2 dup 1 <= ?< >:< dup -- qexp2 * >? [39;49m[33;40m;[39;49m[34;49m  .. [39;49m[32;49m
0x7fb6e77a0228    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'qexp2' :: codeSize = 91
Word : 0x00007fb6e7522078 :: Compiled at : 0x00007fb6e77a01cd
 =============================
::> 'wdiss' was called at namespaces/test/dev.csl 215.14 <::

 5040

 qexp2 :
Timer [ 1 ] : elapsed time = 0.030242199 seconds :: function : qexp2 : called on args : 1 - 23 : 10000 reps

 =============================
User.[34;49mbexp[39;49m <:> csl compiled word
SourceCode for User.[34;49mbexp[39;49m :> 
[34;49m: bexp ( n ) n @ 1 > if{ n @ dup -- bexp * }else{ 1 }fi ; [39;49m
Source code file location of [34;49mbexp[39;49m : "namespaces/test/dev.csl" : 50.2 :: we are now at : namespaces/test/dev.csl : 216.11
Compiled with : optimizeOn, inlineOn, Jcc8 on
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xe77a022e -- code size = 115 bytes
TypeSignature : 
 -----------------------------
Word :: User.[34;49mbexp[39;49m : definition = 0x00007fb6e77a022e : disassembly at namespaces/test/dev.csl : 216.11 :
[34;49m ..                                     : [39;49m[33;40mbexp[39;49m[34;49m ( n ) n @ 1 > if{ n @ dup -- bexp * }else{ 1 }fi ;  .. [39;49m[32;49m
0x7fb6e77a022e    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fb6e77a0232    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e77a0236    4981c608000000          add r14, 0x8                                           [39;49m
[34;49m ..                          : bexp ( n ) [39;49m[33;40mn[39;49m[34;49m @ 1 > if{ n @ dup -- bexp * }else{ 1 }fi ;  .. [39;49m[32;49m
0x7fb6e77a023d    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m ..                    : bexp ( n ) n @ 1 [39;49m[33;40m>[39;49m[34;49m if{ n @ dup -- bexp * }else{ 1 }fi ;  .. [39;49m[32;49m
0x7fb6e77a0241    4883f801                cmp rax, 0x1                                           [39;49m[32;49m
0x7fb6e77a0245    7e40                    jle 0xe77a0287                                         [39;49m
[34;49m ..              : bexp ( n ) n @ 1 > if{ [39;49m[33;40mn[39;49m[34;49m @ dup -- bexp * }else{ 1 }fi ;  .. [39;49m[32;49m
0x7fb6e77a0247    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e77a024b    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fb6e77a024f    498906                  mov [r14], rax                                         [39;49m
[34;49m ..          : bexp ( n ) n @ 1 > if{ n @ [39;49m[33;40mdup[39;49m[34;49m -- bexp * }else{ 1 }fi ;  .. [39;49m[32;49m
0x7fb6e77a0252    498946f8                mov [r14-0x8], rax                                     [39;49m[32;49m
0x7fb6e77a0256    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fb6e77a0259    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m ..      : bexp ( n ) n @ 1 > if{ n @ dup [39;49m[33;40m--[39;49m[34;49m bexp * }else{ 1 }fi ;  .. [39;49m[32;49m
0x7fb6e77a025d    48ffc8                  dec rax                                                [39;49m[32;49m
0x7fb6e77a0260    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e77a0264    498906                  mov [r14], rax                                         [39;49m
[34;49m ..   : bexp ( n ) n @ 1 > if{ n @ dup -- [39;49m[33;40mbexp[39;49m[34;49m * }else{ 1 }fi ;  .. [39;49m[32;49m
0x7fb6e77a0267    e8c2ffffff              call 0x7fb6e77a022e        	< User.[34;49mbexp[39;49m : 0x00007fb6e77a022e[32;49m >[39;49m[39;49m[32;49m
0x7fb6e77a026c    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fb6e77a026f    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fb6e77a0273    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m : bexp ( n ) n @ 1 > if{ n @ dup -- bexp [39;49m[33;40m*[39;49m[34;49m }else{ 1 }fi ;  .. [39;49m[32;49m
0x7fb6e77a0277    480fafc1                imul rax, rcx                                          [39;49m[32;49m
0x7fb6e77a027b    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e77a027f    498906                  mov [r14], rax                                         [39;49m
[34;49m .. p ( n ) n @ 1 > if{ n @ dup -- bexp * [39;49m[33;40m}else{[39;49m[34;49m 1 }fi ; [39;49m[32;49m
0x7fb6e77a0282    e90e000000              jmp 0x7fb6e77a0295         	< User.[34;49mbexp[39;49m+103[32;49m >[39;49m[39;49m
[34;49m ..  n @ 1 > if{ n @ dup -- bexp * }else{ [39;49m[33;40m1[39;49m[34;49m }fi ; [39;49m[32;49m
0x7fb6e77a0287    48c7c001000000          mov rax, 0x1                                           [39;49m[32;49m
0x7fb6e77a028e    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e77a0292    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  > if{ n @ dup -- bexp * }else{ 1 }fi [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fb6e77a0295    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e77a0299    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e77a029d    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e77a02a0    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'bexp' :: codeSize = 114
Word : 0x00007fb6e75054f0 :: Compiled at : 0x00007fb6e77a022e
 =============================
::> 'wdiss' was called at namespaces/test/dev.csl 216.11 <::

 5040

 bexp :
Timer [ 1 ] : elapsed time = 0.035380680 seconds :: function : bexp : called on args : 1 - 23 : 10000 reps

 =============================
User.[34;49mbexp2[39;49m <:> csl compiled word
SourceCode for User.[34;49mbexp2[39;49m :> 
[34;49m: bexp2 ( n ) { n @ 1 > } { n @ dup -- bexp2 * } { 1 } ifElse ; [39;49m
Source code file location of [34;49mbexp2[39;49m : "namespaces/test/dev.csl" : 51.2 :: we are now at : namespaces/test/dev.csl : 217.12
Compiled with : optimizeOn, inlineOn, Jcc8 on
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xe77a02a6 -- code size = 115 bytes
TypeSignature : 
 -----------------------------
Word :: User.[34;49mbexp2[39;49m : definition = 0x00007fb6e77a02a6 : disassembly at namespaces/test/dev.csl : 217.12 :
[34;49m ..                                     : [39;49m[33;40mbexp2[39;49m[34;49m ( n ) { n @ 1 > } { n @ dup -- bexp2 * } { 1 } ifElse ;  .. [39;49m[32;49m
0x7fb6e77a02a6    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fb6e77a02aa    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e77a02ae    4981c608000000          add r14, 0x8                                           [39;49m
[34;49m ..                       : bexp2 ( n ) { [39;49m[33;40mn[39;49m[34;49m @ 1 > } { n @ dup -- bexp2 * } { 1 } ifElse ;  .. [39;49m[32;49m
0x7fb6e77a02b5    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m ..                 : bexp2 ( n ) { n @ 1 [39;49m[33;40m>[39;49m[34;49m } { n @ dup -- bexp2 * } { 1 } ifElse ;  .. [39;49m[32;49m
0x7fb6e77a02b9    4883f801                cmp rax, 0x1                                           [39;49m[32;49m
0x7fb6e77a02bd    7e40                    jle 0xe77a02ff                                         [39;49m
[34;49m ..           : bexp2 ( n ) { n @ 1 > } { [39;49m[33;40mn[39;49m[34;49m @ dup -- bexp2 * } { 1 } ifElse ;  .. [39;49m[32;49m
0x7fb6e77a02bf    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e77a02c3    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fb6e77a02c7    498906                  mov [r14], rax                                         [39;49m
[34;49m ..       : bexp2 ( n ) { n @ 1 > } { n @ [39;49m[33;40mdup[39;49m[34;49m -- bexp2 * } { 1 } ifElse ;  .. [39;49m[32;49m
0x7fb6e77a02ca    498946f8                mov [r14-0x8], rax                                     [39;49m[32;49m
0x7fb6e77a02ce    498b06                  mov rax, [r14]                                         [39;49m
[34;49m ..             : bexp2 ( n ) { n @ 1 > } [39;49m[33;40m{[39;49m[34;49m n @ dup -- bexp2 * } { 1 } ifElse ;  .. [39;49m[32;49m
0x7fb6e77a02d1    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m ..   : bexp2 ( n ) { n @ 1 > } { n @ dup [39;49m[33;40m--[39;49m[34;49m bexp2 * } { 1 } ifElse ;  .. [39;49m[32;49m
0x7fb6e77a02d5    48ffc8                  dec rax                                                [39;49m[32;49m
0x7fb6e77a02d8    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e77a02dc    498906                  mov [r14], rax                                         [39;49m
[34;49m   : bexp2 ( n ) { n @ 1 > } { n @ dup -- [39;49m[33;40mbexp2[39;49m[34;49m * } { 1 } ifElse ;  .. [39;49m[32;49m
0x7fb6e77a02df    e8c2ffffff              call 0x7fb6e77a02a6        	< User.[34;49mbexp2[39;49m : 0x00007fb6e77a02a6[32;49m >[39;49m[39;49m[32;49m
0x7fb6e77a02e4    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fb6e77a02e7    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fb6e77a02eb    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m ..  ( n ) { n @ 1 > } { n @ dup -- bexp2 [39;49m[33;40m*[39;49m[34;49m } { 1 } ifElse ; [39;49m[32;49m
0x7fb6e77a02ef    480fafc1                imul rax, rcx                                          [39;49m[32;49m
0x7fb6e77a02f3    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e77a02f7    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  n ) { n @ 1 > } { n @ dup -- bexp2 * [39;49m[33;40m}[39;49m[34;49m { 1 } ifElse ; [39;49m[32;49m
0x7fb6e77a02fa    e90e000000              jmp 0x7fb6e77a030d         	< User.[34;49mbexp2[39;49m+103[32;49m >[39;49m[39;49m
[34;49m ..  { n @ 1 > } { n @ dup -- bexp2 * } { [39;49m[33;40m1[39;49m[34;49m } ifElse ; [39;49m[32;49m
0x7fb6e77a02ff    48c7c001000000          mov rax, 0x1                                           [39;49m[32;49m
0x7fb6e77a0306    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e77a030a    498906                  mov [r14], rax                                         [39;49m
[34;49m .. } { n @ dup -- bexp2 * } { 1 } ifElse [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fb6e77a030d    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e77a0311    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e77a0315    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e77a0318    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'bexp2' :: codeSize = 114
Word : 0x00007fb6e74c9cd8 :: Compiled at : 0x00007fb6e77a02a6
 =============================
::> 'wdiss' was called at namespaces/test/dev.csl 217.12 <::

 5040

 bexp2 :
Timer [ 1 ] : elapsed time = 0.035360059 seconds :: function : bexp2 : called on args : 1 - 23 : 10000 reps

 =============================
Root.[34;49mbexp3[39;49m <:> csl compiled word
SourceCode for Root.[34;49mbexp3[39;49m :> 
[34;49m: bexp3 ( n ) { n @ 1 > } { n @ n @ -- bexp3 * } { 1 } ifElse ; [39;49m
Source code file location of [34;49mbexp3[39;49m : "namespaces/test/dev0.csl" : 354.2 :: we are now at : namespaces/test/dev.csl : 218.12
Compiled with : optimizeOn, inlineOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xe779c715 -- code size = 112 bytes
TypeSignature : 
 -----------------------------
Word :: Root.[34;49mbexp3[39;49m : definition = 0x00007fb6e779c715 : disassembly at namespaces/test/dev.csl : 218.12 :
[34;49m ..                                     : [39;49m[33;40mbexp3[39;49m[34;49m ( n ) { n @ 1 > } { n @ n @ -- bexp3 * } { 1 } ifElse ;  .. [39;49m[32;49m
0x7fb6e779c715    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fb6e779c719    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e779c71d    4981c608000000          add r14, 0x8                                           [39;49m
[34;49m ..                       : bexp3 ( n ) { [39;49m[33;40mn[39;49m[34;49m @ 1 > } { n @ n @ -- bexp3 * } { 1 } ifElse ;  .. [39;49m[32;49m
0x7fb6e779c724    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m ..                 : bexp3 ( n ) { n @ 1 [39;49m[33;40m>[39;49m[34;49m } { n @ n @ -- bexp3 * } { 1 } ifElse ;  .. [39;49m[32;49m
0x7fb6e779c728    4883f801                cmp rax, 0x1                                           [39;49m[32;49m
0x7fb6e779c72c    0f8e39000000            jle 0x7fb6e779c76b         	< Root.[34;49mbexp3[39;49m+86[32;49m >[39;49m[39;49m
[34;49m ..           : bexp3 ( n ) { n @ 1 > } { [39;49m[33;40mn[39;49m[34;49m @ n @ -- bexp3 * } { 1 } ifElse ;  .. [39;49m[32;49m
0x7fb6e779c732    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e779c736    4983c608                add r14, 0x8                                           [39;49m
[34;49m ..               : bexp3 ( n ) { n @ 1 > [39;49m[33;40m}[39;49m[34;49m { n @ n @ -- bexp3 * } { 1 } ifElse ;  .. [39;49m[32;49m
0x7fb6e779c73a    498906                  mov [r14], rax                                         [39;49m
[34;49m ..       : bexp3 ( n ) { n @ 1 > } { n @ [39;49m[33;40mn[39;49m[34;49m @ -- bexp3 * } { 1 } ifElse ;  .. [39;49m[32;49m
0x7fb6e779c73d    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m ..   : bexp3 ( n ) { n @ 1 > } { n @ n @ [39;49m[33;40m--[39;49m[34;49m bexp3 * } { 1 } ifElse ;  .. [39;49m[32;49m
0x7fb6e779c741    48ffc8                  dec rax                                                [39;49m[32;49m
0x7fb6e779c744    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e779c748    498906                  mov [r14], rax                                         [39;49m
[34;49m   : bexp3 ( n ) { n @ 1 > } { n @ n @ -- [39;49m[33;40mbexp3[39;49m[34;49m * } { 1 } ifElse ;  .. [39;49m[32;49m
0x7fb6e779c74b    e8c5ffffff              call 0x7fb6e779c715        	< Root.[34;49mbexp3[39;49m : 0x00007fb6e779c715[32;49m >[39;49m[39;49m[32;49m
0x7fb6e779c750    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fb6e779c753    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fb6e779c757    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m ..  ( n ) { n @ 1 > } { n @ n @ -- bexp3 [39;49m[33;40m*[39;49m[34;49m } { 1 } ifElse ; [39;49m[32;49m
0x7fb6e779c75b    480fafc1                imul rax, rcx                                          [39;49m[32;49m
0x7fb6e779c75f    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e779c763    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  n ) { n @ 1 > } { n @ n @ -- bexp3 * [39;49m[33;40m}[39;49m[34;49m { 1 } ifElse ; [39;49m[32;49m
0x7fb6e779c766    e90e000000              jmp 0x7fb6e779c779         	< Root.[34;49mbexp3[39;49m+100[32;49m >[39;49m[39;49m
[34;49m ..  { n @ 1 > } { n @ n @ -- bexp3 * } { [39;49m[33;40m1[39;49m[34;49m } ifElse ; [39;49m[32;49m
0x7fb6e779c76b    48c7c001000000          mov rax, 0x1                                           [39;49m[32;49m
0x7fb6e779c772    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e779c776    498906                  mov [r14], rax                                         [39;49m
[34;49m .. } { n @ n @ -- bexp3 * } { 1 } ifElse [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fb6e779c779    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e779c77d    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e779c781    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e779c784    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'bexp3' :: codeSize = 111
Word : 0x00007fb6e4c8f890 :: Compiled at : 0x00007fb6e779c715
 =============================
::> 'wdiss' was called at namespaces/test/dev.csl 218.12 <::

 5040

 bexp3 :
Timer [ 1 ] : elapsed time = 0.027772405 seconds :: function : bexp3 : called on args : 1 - 23 : 10000 reps

 =============================
C.[34;49mfac[39;49m <:> csl compiled word
SourceCode for C.[34;49mfac[39;49m :> 
[34;49m: fac ( n | rec ) rec 1 = { n @ 1 > } { n @ rec @ * rec store n -- } while return rec @ ; [39;49m
Source code file location of [34;49mfac[39;49m : "namespaces/test/dev0.csl" : 65.2 :: we are now at : namespaces/test/dev.csl : 219.10
Compiled with : optimizeOn, inlineOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xe779b9eb -- code size = 84 bytes
TypeSignature : 
 -----------------------------
Word :: C.[34;49mfac[39;49m : definition = 0x00007fb6e779b9eb : disassembly at namespaces/test/dev.csl : 219.10 :
[34;49m ..                                     : [39;49m[33;40mfac[39;49m[34;49m ( n | rec )  rec 1 =  { n @ 1 > } { n @ rec @ * rec store n -- } while  return rec @ ;  .. [39;49m[32;49m
0x7fb6e779b9eb    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fb6e779b9ef    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e779b9f3    4981c610000000          add r14, 0x10                                          [39;49m
[34;49m ..                    : fac ( n | rec )  [39;49m[33;40mrec[39;49m[34;49m 1 =  { n @ 1 > } { n @ rec @ * rec store n -- } while  return rec @ ;  .. [39;49m[32;49m
0x7fb6e779b9fa    498d4708                lea rax, [r15+0x8]                                     [39;49m
[34;49m ..                : fac ( n | rec )  rec [39;49m[33;40m1[39;49m[34;49m =  { n @ 1 > } { n @ rec @ * rec store n -- } while  return rec @ ;  .. [39;49m[32;49m
0x7fb6e779b9fe    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m ..              : fac ( n | rec )  rec 1 [39;49m[33;40m=[39;49m[34;49m  { n @ 1 > } { n @ rec @ * rec store n -- } while  return rec @ ;  .. [39;49m[32;49m
0x7fb6e779ba05    488908                  mov [rax], rcx                                         [39;49m
[34;49m ..         : fac ( n | rec )  rec 1 =  { [39;49m[33;40mn[39;49m[34;49m @ 1 > } { n @ rec @ * rec store n -- } while  return rec @ ;  .. [39;49m[32;49m
0x7fb6e779ba08    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m ..   : fac ( n | rec )  rec 1 =  { n @ 1 [39;49m[33;40m>[39;49m[34;49m } { n @ rec @ * rec store n -- } while  return rec @ ;  .. [39;49m[32;49m
0x7fb6e779ba0c    4883f801                cmp rax, 0x1                                           [39;49m[32;49m
0x7fb6e779ba10    0f8e19000000            jle 0x7fb6e779ba2f         	< C.[34;49mfac[39;49m+68[32;49m >[39;49m[39;49m
[34;49m: fac ( n | rec )  rec 1 =  { n @ 1 > } { [39;49m[33;40mn[39;49m[34;49m @ rec @ * rec store n -- } while  return rec @ ;  .. [39;49m[32;49m
0x7fb6e779ba16    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. n | rec )  rec 1 =  { n @ 1 > } { n @ [39;49m[33;40mrec[39;49m[34;49m @ * rec store n -- } while  return rec @ ; [39;49m[32;49m
0x7fb6e779ba1a    498b4f08                mov rcx, [r15+0x8]                                     [39;49m
[34;49m .. c )  rec 1 =  { n @ 1 > } { n @ rec @ [39;49m[33;40m*[39;49m[34;49m rec store n -- } while  return rec @ ; [39;49m[32;49m
0x7fb6e779ba1e    480fafc1                imul rax, rcx                                          [39;49m
[34;49m .. )  rec 1 =  { n @ 1 > } { n @ rec @ * [39;49m[33;40mrec[39;49m[34;49m store n -- } while  return rec @ ; [39;49m[32;49m
0x7fb6e779ba22    498d4f08                lea rcx, [r15+0x8]                                     [39;49m[32;49m
0x7fb6e779ba26    488901                  mov [rcx], rax                                         [39;49m
[34;49m .. { n @ 1 > } { n @ rec @ * rec store n [39;49m[33;40m--[39;49m[34;49m } while  return rec @ ; [39;49m[32;49m
0x7fb6e779ba29    49ff4ff8                dec qword [r15-0x8]                                    [39;49m
[34;49m ..  @ 1 > } { n @ rec @ * rec store n -- [39;49m[33;40m}[39;49m[34;49m while  return rec @ ; [39;49m[32;49m
0x7fb6e779ba2d    ebd9                    jmp 0x7fb6e779ba08         	< C.[34;49mfac[39;49m+29[32;49m >[39;49m[39;49m[32;49m
0x7fb6e779ba2f    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m ..  rec store n -- } while  return rec @ [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fb6e779ba33    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e779ba37    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m
[34;49m .. ec @ * rec store n -- } while  return [39;49m[33;40mrec[39;49m[34;49m @ ; [39;49m[32;49m
0x7fb6e779ba3b    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e779ba3e    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'fac' :: codeSize = 83
Word : 0x00007fb6e4c50f30 :: Compiled at : 0x00007fb6e779b9eb
 =============================
::> 'wdiss' was called at namespaces/test/dev.csl 219.10 <::

 5040

 fac :
Timer [ 1 ] : elapsed time = 0.011795940 seconds :: function : fac : called on args : 1 - 23 : 10000 reps

 =============================
C_Syntax.[34;49mfac5[39;49m <:> csl compiled word
SourceCode for C_Syntax.[34;49mfac5[39;49m :> 
[34;49mint fac5 ( REG n | REG facc ) { facc = 1 ; while ( n > 1 ) { facc = facc * (n --) ; } return facc ; } [39;49m
Source code file location of [34;49mfac5[39;49m : "namespaces/test/dev.csl" : 100.5 :: we are now at : namespaces/test/dev.csl : 220.11
Compiled with : optimizeOn, inlineOn, c_syntaxOn, infixOn, Jcc8 on
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xe77a0455 -- code size = 29 bytes
TypeSignature : 
 -----------------------------
Word :: C_Syntax.[34;49mfac5[39;49m : definition = 0x00007fb6e77a0455 : disassembly at namespaces/test/dev.csl : 220.11 :
[34;49m ..                                   int [39;49m[33;40mfac5[39;49m[34;49m ( REG n | REG facc )  {  facc = 1 ; while ( n > 1 )  { facc = facc * (n --) ; } return facc ; }  .. [39;49m[32;49m
0x7fb6e77a0455    498b3e                  mov rdi, [r14]                                         [39;49m
[34;49m int fac5 ( REG n | REG facc )  {  facc = [39;49m[33;40m1[39;49m[34;49m ; while ( n > 1 )  { facc = facc * (n --) ; } return facc ; }  .. [39;49m[32;49m
0x7fb6e77a0458    48c7c601000000          mov rsi, 0x1                                           [39;49m
[34;49m .. | REG facc )  {  facc = 1 ; while ( n [39;49m[33;40m>[39;49m[34;49m 1 )  { facc = facc * (n --) ; } return facc ; } [39;49m[32;49m
0x7fb6e77a045f    4883ff01                cmp rdi, 0x1                                           [39;49m[32;49m
0x7fb6e77a0463    7e09                    jle 0xe77a046e                                         [39;49m
[34;49m ..  = 1 ; while ( n > 1 )  { facc = facc [39;49m[33;40m*[39;49m[34;49m (n --) ; } return facc ; } [39;49m[32;49m
0x7fb6e77a0465    480faff7                imul rsi, rdi                                          [39;49m
[34;49m .. ; while ( n > 1 )  { facc = facc * (n [39;49m[33;40m--[39;49m[34;49m) ; } return facc ; } [39;49m[32;49m
0x7fb6e77a0469    48ffcf                  dec rdi                                                [39;49m
[34;49m .. e ( n > 1 )  { facc = facc * (n --) ; [39;49m[33;40m}[39;49m[34;49m return facc ; } [39;49m[32;49m
0x7fb6e77a046c    ebf1                    jmp 0x7fb6e77a045f         	< C_Syntax.[34;49mfac5[39;49m+10[32;49m >[39;49m[39;49m
[34;49m ..  )  { facc = facc * (n --) ; } return [39;49m[33;40mfacc[39;49m[34;49m ; } [39;49m[32;49m
0x7fb6e77a046e    498936                  mov [r14], rsi                                         [39;49m[32;49m
0x7fb6e77a0471    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'fac5' :: codeSize = 28
Word : 0x00007fb6e4793220 :: Compiled at : 0x00007fb6e77a0455
 =============================
::> 'wdiss' was called at namespaces/test/dev.csl 220.11 <::

 5040

 fac5 :
Timer [ 1 ] : elapsed time = 0.004359268 seconds :: function : fac5 : called on args : 1 - 23 : 10000 reps

 =============================
User.[34;49mfactorial[39;49m <:> csl compiled word
SourceCode for User.[34;49mfactorial[39;49m :> 
[34;49m: factorial ( REG n | REG rec ) rec 1 = { n @ 1 > } { rec @ n @ * rec store n -- } while return rec ; [39;49m
Source code file location of [34;49mfactorial[39;49m : "namespaces/test/dev.csl" : 140.2 :: we are now at : namespaces/test/dev.csl : 222.16
Compiled with : optimizeOn, inlineOn, Jcc8 on
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xe77a068c -- code size = 29 bytes
TypeSignature : 
 -----------------------------
Word :: User.[34;49mfactorial[39;49m : definition = 0x00007fb6e77a068c : disassembly at namespaces/test/dev.csl : 222.16 :
[34;49m ..                           : factorial [39;49m[33;40m([39;49m[34;49m REG n | REG rec ) rec 1 = { n @ 1 > } { rec @ n @ * rec store n -- } while return rec ;  .. [39;49m[32;49m
0x7fb6e77a068c    498b3e                  mov rdi, [r14]                                         [39;49m
[34;49m ..   : factorial ( REG n | REG rec ) rec [39;49m[33;40m1[39;49m[34;49m = { n @ 1 > } { rec @ n @ * rec store n -- } while return rec ;  .. [39;49m[32;49m
0x7fb6e77a068f    48c7c601000000          mov rsi, 0x1                                           [39;49m
[34;49m .. l ( REG n | REG rec ) rec 1 = { n @ 1 [39;49m[33;40m>[39;49m[34;49m } { rec @ n @ * rec store n -- } while return rec ; [39;49m[32;49m
0x7fb6e77a0696    4883ff01                cmp rdi, 0x1                                           [39;49m[32;49m
0x7fb6e77a069a    7e09                    jle 0xe77a06a5                                         [39;49m
[34;49m .. rec ) rec 1 = { n @ 1 > } { rec @ n @ [39;49m[33;40m*[39;49m[34;49m rec store n -- } while return rec ; [39;49m[32;49m
0x7fb6e77a069c    480faff7                imul rsi, rdi                                          [39;49m
[34;49m .. { n @ 1 > } { rec @ n @ * rec store n [39;49m[33;40m--[39;49m[34;49m } while return rec ; [39;49m[32;49m
0x7fb6e77a06a0    48ffcf                  dec rdi                                                [39;49m
[34;49m ..  @ 1 > } { rec @ n @ * rec store n -- [39;49m[33;40m}[39;49m[34;49m while return rec ; [39;49m[32;49m
0x7fb6e77a06a3    ebf1                    jmp 0x7fb6e77a0696         	< User.[34;49mfactorial[39;49m+10[32;49m >[39;49m[39;49m
[34;49m .. @ * rec store n -- } while return rec [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fb6e77a06a5    498936                  mov [r14], rsi                                         [39;49m[32;49m
0x7fb6e77a06a8    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'factorial' :: codeSize = 28
Word : 0x00007fb6e479f988 :: Compiled at : 0x00007fb6e77a068c
 =============================
::> 'wdiss' was called at namespaces/test/dev.csl 222.16 <::

 5040

 factorial :
Timer [ 1 ] : elapsed time = 0.004472699 seconds :: function : factorial : called on args : 1 - 23 : 10000 reps

 =============================
C.[34;49mcfactorial3[39;49m <:> C compiled primitive
SourceCode for C.[34;49mcfactorial3[39;49m :> 
C Primitive
starting at address : 0x8980ea70 -- code size = 41 bytes
 -----------------------------
Word :: C.[34;49mcfactorial3[39;49m : definition = 0x0000562d8980ea70 : disassembly at namespaces/test/dev.csl : 223.18 :[32;49m
0x562d8980ea74    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x562d8980ea77    4c89f6                  mov rsi, r14                                           [39;49m[32;49m
0x562d8980ea7a    ba01000000              mov edx, 0x1                                           [39;49m[32;49m
0x562d8980ea7f    4883f801                cmp rax, 0x1                                           [39;49m[32;49m
0x562d8980ea83    7e14                    jle 0x8980ea99                                         [39;49m[32;49m
0x562d8980ea85    0f1f00                  nop [rax]                                              [39;49m[32;49m
0x562d8980ea88    4889c1                  mov rcx, rax                                           [39;49m[32;49m
0x562d8980ea8b    4883e801                sub rax, 0x1                                           [39;49m[32;49m
0x562d8980ea8f    480fafd1                imul rdx, rcx                                          [39;49m[32;49m
0x562d8980ea93    4883f801                cmp rax, 0x1                                           [39;49m[32;49m
0x562d8980ea97    75ef                    jnz 0x8980ea88                                         [39;49m[32;49m
0x562d8980ea99    488916                  mov [rsi], rdx                                         [39;49m[32;49m
0x562d8980ea9c    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'cfactorial3' :: codeSize = 41
Word : 0x00007fb6e7833b30 :: Compiled at : 0x0000562d8980ea70
 =============================
::> 'wdiss' was called at namespaces/test/dev.csl 223.18 <::

 5040

 cfactorial3 :
Timer [ 1 ] : elapsed time = 0.004022101 seconds :: function : cfactorial3 : called on args : 1 - 23 : 10000 reps

 =============================
C.[34;49mcfactorial[39;49m <:> C compiled primitive
SourceCode for C.[34;49mcfactorial[39;49m :> 
C Primitive
starting at address : 0x8980e960 -- code size = 17 bytes
 -----------------------------
Word :: C.[34;49mcfactorial[39;49m : definition = 0x0000562d8980e960 : disassembly at namespaces/test/dev.csl : 224.17 :[32;49m
0x562d8980e964    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x562d8980e967    4883f801                cmp rax, 0x1                                           [39;49m[32;49m
0x562d8980e96b    7f0b                    jg 0x8980e978                                          [39;49m[32;49m
0x562d8980e96d    49c70601000000          mov qword [r14], 0x1                                   [39;49m[32;49m
0x562d8980e974    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'cfactorial' :: codeSize = 17
Word : 0x00007fb6e78337c0 :: Compiled at : 0x0000562d8980e960
 =============================
::> 'wdiss' was called at namespaces/test/dev.csl 224.17 <::

 5040

 cfactorial :
Timer [ 1 ] : elapsed time = 0.007437096 seconds :: function : cfactorial : called on args : 1 - 23 : 10000 reps

 =============================
C.[34;49mcfactorial2[39;49m <:> C compiled primitive
SourceCode for C.[34;49mcfactorial2[39;49m :> 
C Primitive
starting at address : 0x8980ea40 -- code size = 41 bytes
 -----------------------------
Word :: C.[34;49mcfactorial2[39;49m : definition = 0x0000562d8980ea40 : disassembly at namespaces/test/dev.csl : 225.18 :[32;49m
0x562d8980ea44    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x562d8980ea47    4c89f6                  mov rsi, r14                                           [39;49m[32;49m
0x562d8980ea4a    ba01000000              mov edx, 0x1                                           [39;49m[32;49m
0x562d8980ea4f    4883f801                cmp rax, 0x1                                           [39;49m[32;49m
0x562d8980ea53    7e14                    jle 0x8980ea69                                         [39;49m[32;49m
0x562d8980ea55    0f1f00                  nop [rax]                                              [39;49m[32;49m
0x562d8980ea58    4889c1                  mov rcx, rax                                           [39;49m[32;49m
0x562d8980ea5b    4883e801                sub rax, 0x1                                           [39;49m[32;49m
0x562d8980ea5f    480fafd1                imul rdx, rcx                                          [39;49m[32;49m
0x562d8980ea63    4883f801                cmp rax, 0x1                                           [39;49m[32;49m
0x562d8980ea67    75ef                    jnz 0x8980ea58                                         [39;49m[32;49m
0x562d8980ea69    488916                  mov [rsi], rdx                                         [39;49m[32;49m
0x562d8980ea6c    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'cfactorial2' :: codeSize = 41
Word : 0x00007fb6e7833978 :: Compiled at : 0x0000562d8980ea40
 =============================
::> 'wdiss' was called at namespaces/test/dev.csl 225.18 <::

 5040

 cfactorial2 :
Timer [ 1 ] : elapsed time = 0.004043380 seconds :: function : cfactorial2 : called on args : 1 - 23 : 10000 reps

 =============================
C.[34;49mcfactorial3[39;49m <:> C compiled primitive
SourceCode for C.[34;49mcfactorial3[39;49m :> 
C Primitive
starting at address : 0x8980ea70 -- code size = 41 bytes
 -----------------------------
Word :: C.[34;49mcfactorial3[39;49m : definition = 0x0000562d8980ea70 : disassembly at namespaces/test/dev.csl : 226.18 :[32;49m
0x562d8980ea74    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x562d8980ea77    4c89f6                  mov rsi, r14                                           [39;49m[32;49m
0x562d8980ea7a    ba01000000              mov edx, 0x1                                           [39;49m[32;49m
0x562d8980ea7f    4883f801                cmp rax, 0x1                                           [39;49m[32;49m
0x562d8980ea83    7e14                    jle 0x8980ea99                                         [39;49m[32;49m
0x562d8980ea85    0f1f00                  nop [rax]                                              [39;49m[32;49m
0x562d8980ea88    4889c1                  mov rcx, rax                                           [39;49m[32;49m
0x562d8980ea8b    4883e801                sub rax, 0x1                                           [39;49m[32;49m
0x562d8980ea8f    480fafd1                imul rdx, rcx                                          [39;49m[32;49m
0x562d8980ea93    4883f801                cmp rax, 0x1                                           [39;49m[32;49m
0x562d8980ea97    75ef                    jnz 0x8980ea88                                         [39;49m[32;49m
0x562d8980ea99    488916                  mov [rsi], rdx                                         [39;49m[32;49m
0x562d8980ea9c    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'cfactorial3' :: codeSize = 41
Word : 0x00007fb6e7833b30 :: Compiled at : 0x0000562d8980ea70
 =============================
::> 'wdiss' was called at namespaces/test/dev.csl 226.18 <::

 5040

 cfactorial3 :
Timer [ 1 ] : elapsed time = 0.004025817 seconds :: function : cfactorial3 : called on args : 1 - 23 : 10000 reps

 =============================
C.[34;49mcfactorial_O3[39;49m <:> C compiled primitive
SourceCode for C.[34;49mcfactorial_O3[39;49m :> 
C Primitive
 -----------------------------
Word :: C.[34;49mcfactorial_O3[39;49m : definition = 0x0000562d8980e710 : disassembly at namespaces/test/dev.csl : 227.20 :[32;49m
0x562d8980e714    4154                    push r12                                               [39;49m[32;49m
0x562d8980e716    55                      push rbp                                               [39;49m[32;49m
0x562d8980e717    53                      push rbx                                               [39;49m[32;49m
0x562d8980e718    498b1e                  mov rbx, [r14]                                         [39;49m[32;49m
0x562d8980e71b    4883fb01                cmp rbx, 0x1                                           [39;49m[32;49m
0x562d8980e71f    7f0f                    jg 0x8980e730                                          [39;49m[32;49m
0x562d8980e721    49c70601000000          mov qword [r14], 0x1                                   [39;49m[32;49m
0x562d8980e728    5b                      pop rbx                                                [39;49m[32;49m
0x562d8980e729    5d                      pop rbp                                                [39;49m[32;49m
0x562d8980e72a    415c                    pop r12                                                [39;49m[32;49m
0x562d8980e72c    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'cfactorial_O3' :: codeSize = 25
Word : 0x00007fb6e7834210 :: Compiled at : 0x0000562d8980e710
 =============================
::> 'wdiss' was called at namespaces/test/dev.csl 227.20 <::

 5040

 cfactorial_O3 :
Timer [ 1 ] : elapsed time = 0.007983260 seconds :: function : cfactorial_O3 : called on args : 1 - 23 : 10000 reps

 =============================
C.[34;49mcfactorial2_O3[39;49m <:> C compiled primitive
SourceCode for C.[34;49mcfactorial2_O3[39;49m :> 
C Primitive
 -----------------------------
Word :: C.[34;49mcfactorial2_O3[39;49m : definition = 0x0000562d8980e7c0 : disassembly at namespaces/test/dev.csl : 228.21 :[32;49m
0x562d8980e7c4    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x562d8980e7c7    4c89f6                  mov rsi, r14                                           [39;49m[32;49m
0x562d8980e7ca    ba01000000              mov edx, 0x1                                           [39;49m[32;49m
0x562d8980e7cf    4883f801                cmp rax, 0x1                                           [39;49m[32;49m
0x562d8980e7d3    7e14                    jle 0x8980e7e9                                         [39;49m[32;49m
0x562d8980e7d5    0f1f00                  nop [rax]                                              [39;49m[32;49m
0x562d8980e7d8    4889c1                  mov rcx, rax                                           [39;49m[32;49m
0x562d8980e7db    4883e801                sub rax, 0x1                                           [39;49m[32;49m
0x562d8980e7df    480fafd1                imul rdx, rcx                                          [39;49m[32;49m
0x562d8980e7e3    4883f801                cmp rax, 0x1                                           [39;49m[32;49m
0x562d8980e7e7    75ef                    jnz 0x8980e7d8                                         [39;49m[32;49m
0x562d8980e7e9    488916                  mov [rsi], rdx                                         [39;49m[32;49m
0x562d8980e7ec    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'cfactorial2_O3' :: codeSize = 41
Word : 0x00007fb6e78343c8 :: Compiled at : 0x0000562d8980e7c0
 =============================
::> 'wdiss' was called at namespaces/test/dev.csl 228.21 <::

 5040

 cfactorial2_O3 :
Timer [ 1 ] : elapsed time = 0.003972616 seconds :: function : cfactorial2_O3 : called on args : 1 - 23 : 10000 reps

 =============================
C.[34;49mcfactorial3_O3[39;49m <:> C compiled primitive
SourceCode for C.[34;49mcfactorial3_O3[39;49m :> 
C Primitive
 -----------------------------
Word :: C.[34;49mcfactorial3_O3[39;49m : definition = 0x0000562d8980e7f0 : disassembly at namespaces/test/dev.csl : 229.21 :[32;49m
0x562d8980e7f4    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x562d8980e7f7    4c89f6                  mov rsi, r14                                           [39;49m[32;49m
0x562d8980e7fa    ba01000000              mov edx, 0x1                                           [39;49m[32;49m
0x562d8980e7ff    4883f801                cmp rax, 0x1                                           [39;49m[32;49m
0x562d8980e803    7e14                    jle 0x8980e819                                         [39;49m[32;49m
0x562d8980e805    0f1f00                  nop [rax]                                              [39;49m[32;49m
0x562d8980e808    4889c1                  mov rcx, rax                                           [39;49m[32;49m
0x562d8980e80b    4883e801                sub rax, 0x1                                           [39;49m[32;49m
0x562d8980e80f    480fafd1                imul rdx, rcx                                          [39;49m[32;49m
0x562d8980e813    4883f801                cmp rax, 0x1                                           [39;49m[32;49m
0x562d8980e817    75ef                    jnz 0x8980e808                                         [39;49m[32;49m
0x562d8980e819    488916                  mov [rsi], rdx                                         [39;49m[32;49m
0x562d8980e81c    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'cfactorial3_O3' :: codeSize = 41
Word : 0x00007fb6e7834580 :: Compiled at : 0x0000562d8980e7f0
 =============================
::> 'wdiss' was called at namespaces/test/dev.csl 229.21 <::

 5040

 cfactorial3_O3 :
Timer [ 1 ] : elapsed time = 0.004264931 seconds :: function : cfactorial3_O3 : called on args : 1 - 23 : 10000 reps

Using Namespaces :> User Root C int Locals Int Logic Compiler Interpreter Stack Asm void Combinators X64 int64 uint16 uint8 byte Integer Pointer Class uint64 Bits Compiling a xxy x o1 DO_Experimental DObject List Experimental byteTest Experimental libc CBuffer Dlsym String CObj chey System libc Dlsym Shell Debug Control Lexer DLLNodeAlloc DLLNode Buffer a112 cta ct Ar9 Ar3 Ar2 Ar1 DLLNodeAlloc4 DLListClone DLList OpenVmTil Word Namespace StartupMacros Io Reserved Compiler Macro PreProcessor Memory Colors File Forth 

 =============================
User.[34;49mfactorial[39;49m <:> csl compiled word
SourceCode for User.[34;49mfactorial[39;49m :> 
[34;49m: factorial ( REG n | REG rec ) rec 1 = { n @ 1 > } { rec @ n @ * rec store n -- } while return rec ; [39;49m
Source code file location of [34;49mfactorial[39;49m : "namespaces/test/dev.csl" : 140.2 :: we are now at : namespaces/test/dev.csl : 231.16
Compiled with : optimizeOn, inlineOn, Jcc8 on
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xe77a068c -- code size = 29 bytes
TypeSignature : 
 -----------------------------
Word :: User.[34;49mfactorial[39;49m : definition = 0x00007fb6e77a068c : disassembly at namespaces/test/dev.csl : 231.16 :
[34;49m ..                           : factorial [39;49m[33;40m([39;49m[34;49m REG n | REG rec ) rec 1 = { n @ 1 > } { rec @ n @ * rec store n -- } while return rec ;  .. [39;49m[32;49m
0x7fb6e77a068c    498b3e                  mov rdi, [r14]                                         [39;49m
[34;49m ..   : factorial ( REG n | REG rec ) rec [39;49m[33;40m1[39;49m[34;49m = { n @ 1 > } { rec @ n @ * rec store n -- } while return rec ;  .. [39;49m[32;49m
0x7fb6e77a068f    48c7c601000000          mov rsi, 0x1                                           [39;49m
[34;49m .. l ( REG n | REG rec ) rec 1 = { n @ 1 [39;49m[33;40m>[39;49m[34;49m } { rec @ n @ * rec store n -- } while return rec ; [39;49m[32;49m
0x7fb6e77a0696    4883ff01                cmp rdi, 0x1                                           [39;49m[32;49m
0x7fb6e77a069a    7e09                    jle 0xe77a06a5                                         [39;49m
[34;49m .. rec ) rec 1 = { n @ 1 > } { rec @ n @ [39;49m[33;40m*[39;49m[34;49m rec store n -- } while return rec ; [39;49m[32;49m
0x7fb6e77a069c    480faff7                imul rsi, rdi                                          [39;49m
[34;49m .. { n @ 1 > } { rec @ n @ * rec store n [39;49m[33;40m--[39;49m[34;49m } while return rec ; [39;49m[32;49m
0x7fb6e77a06a0    48ffcf                  dec rdi                                                [39;49m
[34;49m ..  @ 1 > } { rec @ n @ * rec store n -- [39;49m[33;40m}[39;49m[34;49m while return rec ; [39;49m[32;49m
0x7fb6e77a06a3    ebf1                    jmp 0x7fb6e77a0696         	< User.[34;49mfactorial[39;49m+10[32;49m >[39;49m[39;49m
[34;49m .. @ * rec store n -- } while return rec [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fb6e77a06a5    498936                  mov [r14], rsi                                         [39;49m[32;49m
0x7fb6e77a06a8    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'factorial' :: codeSize = 28
Word : 0x00007fb6e479f988 :: Compiled at : 0x00007fb6e77a068c
 =============================
::> 'wdiss' was called at namespaces/test/dev.csl 231.16 <::

 5040

 factorial :
Timer [ 1 ] : elapsed time = 0.004471099 seconds :: function : factorial : called on args : 1 - 23 : 10000 reps

 =============================
C_Syntax.[34;49mfaccs[39;49m <:> csl compiled word
SourceCode for C_Syntax.[34;49mfaccs[39;49m :> 
[34;49mint faccs ( REG n | REG rec ) { rec = 1 ; while ( n > 1 ) { rec = rec * n ; n-- ; } return rec ; } [39;49m
Source code file location of [34;49mfaccs[39;49m : "namespaces/test/dev.csl" : 86.6 :: we are now at : namespaces/test/dev.csl : 232.12
Compiled with : optimizeOn, inlineOn, c_syntaxOn, infixOn, Jcc8 on
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xe77a0424 -- code size = 29 bytes
TypeSignature : 
 -----------------------------
Word :: C_Syntax.[34;49mfaccs[39;49m : definition = 0x00007fb6e77a0424 : disassembly at namespaces/test/dev.csl : 232.12 :
[34;49m ..                                   int [39;49m[33;40mfaccs[39;49m[34;49m ( REG n | REG rec )  { rec = 1 ;  while ( n > 1 ) {  rec = rec * n ; n-- ;  }  return rec ; }  .. [39;49m[32;49m
0x7fb6e77a0424    498b3e                  mov rdi, [r14]                                         [39;49m
[34;49m   int faccs ( REG n | REG rec )  { rec = [39;49m[33;40m1[39;49m[34;49m ;  while ( n > 1 ) {  rec = rec * n ; n-- ;  }  return rec ; }  .. [39;49m[32;49m
0x7fb6e77a0427    48c7c601000000          mov rsi, 0x1                                           [39;49m
[34;49m .. n | REG rec )  { rec = 1 ;  while ( n [39;49m[33;40m>[39;49m[34;49m 1 ) {  rec = rec * n ; n-- ;  }  return rec ; } [39;49m[32;49m
0x7fb6e77a042e    4883ff01                cmp rdi, 0x1                                           [39;49m[32;49m
0x7fb6e77a0432    7e09                    jle 0xe77a043d                                         [39;49m
[34;49m ..   while ( n > 1 ) {  rec = rec * n ; n[39;49m[33;40m--[39;49m[34;49m ;  }  return rec ; } [39;49m[32;49m
0x7fb6e77a0434    480faff7                imul rsi, rdi                                          [39;49m
[34;49m ..   while ( n > 1 ) {  rec = rec * n ; n[39;49m[33;40m--[39;49m[34;49m ;  }  return rec ; } [39;49m[32;49m
0x7fb6e77a0438    48ffcf                  dec rdi                                                [39;49m
[34;49m .. e ( n > 1 ) {  rec = rec * n ; n-- ;  [39;49m[33;40m}[39;49m[34;49m  return rec ; } [39;49m[32;49m
0x7fb6e77a043b    ebf1                    jmp 0x7fb6e77a042e         	< C_Syntax.[34;49mfaccs[39;49m+10[32;49m >[39;49m[39;49m
[34;49m .. ) {  rec = rec * n ; n-- ;  }  return [39;49m[33;40mrec[39;49m[34;49m ; } [39;49m[32;49m
0x7fb6e77a043d    498936                  mov [r14], rsi                                         [39;49m[32;49m
0x7fb6e77a0440    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'faccs' :: codeSize = 28
Word : 0x00007fb6e4790190 :: Compiled at : 0x00007fb6e77a0424
 =============================
::> 'wdiss' was called at namespaces/test/dev.csl 232.12 <::

 5040

 faccs :
Timer [ 1 ] : elapsed time = 0.004731488 seconds :: function : faccs : called on args : 1 - 23 : 10000 reps

 =============================
C_Syntax.[34;49mfac5[39;49m <:> csl compiled word
SourceCode for C_Syntax.[34;49mfac5[39;49m :> 
[34;49mint fac5 ( REG n | REG facc ) { facc = 1 ; while ( n > 1 ) { facc = facc * (n --) ; } return facc ; } [39;49m
Source code file location of [34;49mfac5[39;49m : "namespaces/test/dev.csl" : 100.5 :: we are now at : namespaces/test/dev.csl : 233.11
Compiled with : optimizeOn, inlineOn, c_syntaxOn, infixOn, Jcc8 on
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xe77a0455 -- code size = 29 bytes
TypeSignature : 
 -----------------------------
Word :: C_Syntax.[34;49mfac5[39;49m : definition = 0x00007fb6e77a0455 : disassembly at namespaces/test/dev.csl : 233.11 :
[34;49m ..                                   int [39;49m[33;40mfac5[39;49m[34;49m ( REG n | REG facc )  {  facc = 1 ; while ( n > 1 )  { facc = facc * (n --) ; } return facc ; }  .. [39;49m[32;49m
0x7fb6e77a0455    498b3e                  mov rdi, [r14]                                         [39;49m
[34;49m int fac5 ( REG n | REG facc )  {  facc = [39;49m[33;40m1[39;49m[34;49m ; while ( n > 1 )  { facc = facc * (n --) ; } return facc ; }  .. [39;49m[32;49m
0x7fb6e77a0458    48c7c601000000          mov rsi, 0x1                                           [39;49m
[34;49m .. | REG facc )  {  facc = 1 ; while ( n [39;49m[33;40m>[39;49m[34;49m 1 )  { facc = facc * (n --) ; } return facc ; } [39;49m[32;49m
0x7fb6e77a045f    4883ff01                cmp rdi, 0x1                                           [39;49m[32;49m
0x7fb6e77a0463    7e09                    jle 0xe77a046e                                         [39;49m
[34;49m ..  = 1 ; while ( n > 1 )  { facc = facc [39;49m[33;40m*[39;49m[34;49m (n --) ; } return facc ; } [39;49m[32;49m
0x7fb6e77a0465    480faff7                imul rsi, rdi                                          [39;49m
[34;49m .. ; while ( n > 1 )  { facc = facc * (n [39;49m[33;40m--[39;49m[34;49m) ; } return facc ; } [39;49m[32;49m
0x7fb6e77a0469    48ffcf                  dec rdi                                                [39;49m
[34;49m .. e ( n > 1 )  { facc = facc * (n --) ; [39;49m[33;40m}[39;49m[34;49m return facc ; } [39;49m[32;49m
0x7fb6e77a046c    ebf1                    jmp 0x7fb6e77a045f         	< C_Syntax.[34;49mfac5[39;49m+10[32;49m >[39;49m[39;49m
[34;49m ..  )  { facc = facc * (n --) ; } return [39;49m[33;40mfacc[39;49m[34;49m ; } [39;49m[32;49m
0x7fb6e77a046e    498936                  mov [r14], rsi                                         [39;49m[32;49m
0x7fb6e77a0471    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'fac5' :: codeSize = 28
Word : 0x00007fb6e4793220 :: Compiled at : 0x00007fb6e77a0455
 =============================
::> 'wdiss' was called at namespaces/test/dev.csl 233.11 <::

 5040

 fac5 :
Timer [ 1 ] : elapsed time = 0.004984636 seconds :: function : fac5 : called on args : 1 - 23 : 10000 reps

 =============================
C_Syntax.[34;49mfac4[39;49m <:> csl compiled word
SourceCode for C_Syntax.[34;49mfac4[39;49m :> 
[34;49mint fac4 ( n | facc ) { int facc = 1 ; while ( n > 1 ) facc = n -- * facc ; return facc ; } [39;49m
Source code file location of [34;49mfac4[39;49m : "namespaces/compiler/c_syntax.csl" : 197.5 :: we are now at : namespaces/test/dev.csl : 234.11
Compiled with : optimizeOn, inlineOn, c_syntaxOn, infixOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xe779ad1a -- code size = 84 bytes
TypeSignature : 
 -----------------------------
Word :: C_Syntax.[34;49mfac4[39;49m : definition = 0x00007fb6e779ad1a : disassembly at namespaces/test/dev.csl : 234.11 :
[34;49m ..                                   int [39;49m[33;40mfac4[39;49m[34;49m ( n | facc )  {  int facc = 1 ; while ( n > 1 ) facc = n -- * facc ; return facc ; }  .. [39;49m[32;49m
0x7fb6e779ad1a    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fb6e779ad1e    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e779ad22    4981c618000000          add r14, 0x18                                          [39;49m
[34;49m ..  int fac4 ( n | facc )  {  int facc = [39;49m[33;40m1[39;49m[34;49m ; while ( n > 1 ) facc = n -- * facc ; return facc ; }  .. [39;49m[32;49m
0x7fb6e779ad29    48c7c001000000          mov rax, 0x1                                           [39;49m
[34;49m ..         int fac4 ( n | facc )  {  int [39;49m[33;40mfacc[39;49m[34;49m = 1 ; while ( n > 1 ) facc = n -- * facc ; return facc ; }  .. [39;49m[32;49m
0x7fb6e779ad30    498d4f10                lea rcx, [r15+0x10]                                    [39;49m[32;49m
0x7fb6e779ad34    488901                  mov [rcx], rax                                         [39;49m
[34;49m .. n | facc )  {  int facc = 1 ; while ( [39;49m[33;40mn[39;49m[34;49m > 1 ) facc = n -- * facc ; return facc ; } [39;49m[32;49m
0x7fb6e779ad37    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. | facc )  {  int facc = 1 ; while ( n [39;49m[33;40m>[39;49m[34;49m 1 ) facc = n -- * facc ; return facc ; } [39;49m[32;49m
0x7fb6e779ad3b    4883f801                cmp rax, 0x1                                           [39;49m[32;49m
0x7fb6e779ad3f    0f8e19000000            jle 0x7fb6e779ad5e         	< C_Syntax.[34;49mfac4[39;49m+68[32;49m >[39;49m[39;49m
[34;49m .. int facc = 1 ; while ( n > 1 ) facc = [39;49m[33;40mn[39;49m[34;49m -- * facc ; return facc ; } [39;49m[32;49m
0x7fb6e779ad45    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. c = 1 ; while ( n > 1 ) facc = n -- * [39;49m[33;40mfacc[39;49m[34;49m ; return facc ; } [39;49m[32;49m
0x7fb6e779ad49    498b4f10                mov rcx, [r15+0x10]                                    [39;49m
[34;49m .. acc = 1 ; while ( n > 1 ) facc = n -- [39;49m[33;40m*[39;49m[34;49m facc ; return facc ; } [39;49m[32;49m
0x7fb6e779ad4d    480fafc1                imul rax, rcx                                          [39;49m
[34;49m ..  )  {  int facc = 1 ; while ( n > 1 ) [39;49m[33;40mfacc[39;49m[34;49m = n -- * facc ; return facc ; } [39;49m[32;49m
0x7fb6e779ad51    498d4f10                lea rcx, [r15+0x10]                                    [39;49m
[34;49m ..   int facc = 1 ; while ( n > 1 ) facc [39;49m[33;40m=[39;49m[34;49m n -- * facc ; return facc ; } [39;49m[32;49m
0x7fb6e779ad55    488901                  mov [rcx], rax                                         [39;49m
[34;49m .. t facc = 1 ; while ( n > 1 ) facc = n [39;49m[33;40m--[39;49m[34;49m * facc ; return facc ; } [39;49m[32;49m
0x7fb6e779ad58    49ff4ff8                dec qword [r15-0x8]                                    [39;49m
[34;49m ..  ; while ( n > 1 ) facc = n -- * facc [39;49m[33;40m;[39;49m[34;49m return facc ; } [39;49m[32;49m
0x7fb6e779ad5c    ebd9                    jmp 0x7fb6e779ad37         	< C_Syntax.[34;49mfac4[39;49m+29[32;49m >[39;49m[39;49m[32;49m
0x7fb6e779ad5e    498b4710                mov rax, [r15+0x10]                                    [39;49m
[34;49m ..  ) facc = n -- * facc ; return facc ; [39;49m[33;40m}[39;49m[34;49m [39;49m[32;49m
0x7fb6e779ad62    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e779ad66    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m
[34;49m .. ( n > 1 ) facc = n -- * facc ; return [39;49m[33;40mfacc[39;49m[34;49m ; } [39;49m[32;49m
0x7fb6e779ad6a    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e779ad6d    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'fac4' :: codeSize = 83
Word : 0x00007fb6e4c062b8 :: Compiled at : 0x00007fb6e779ad1a
 =============================
::> 'wdiss' was called at namespaces/test/dev.csl 234.11 <::

 5040

 fac4 :
Timer [ 1 ] : elapsed time = 0.012016768 seconds :: function : fac4 : called on args : 1 - 23 : 10000 reps

 =============================
C_Syntax.[34;49mcpow[39;49m <:> csl compiled word
SourceCode for C_Syntax.[34;49mcpow[39;49m :> 
[34;49mint cpow ( base power | out ) { for ( out = 1 ; power ; power -= 1 ) { out = out * base ; } return out ; } [39;49m
Source code file location of [34;49mcpow[39;49m : "namespaces/test/dev.csl" : 244.9 :: we are now at : namespaces/test/dev.csl : 246.17
Compiled with : optimizeOn, inlineOn, c_syntaxOn, infixOn, Jcc8 on
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xe77a0df0 -- code size = 100 bytes
TypeSignature : 
 -----------------------------
Word :: C_Syntax.[34;49mcpow[39;49m : definition = 0x00007fb6e77a0df0 : disassembly at namespaces/test/dev.csl : 246.17 :
[34;49m ..                                   int [39;49m[33;40mcpow[39;49m[34;49m ( base power | out ) { for ( out = 1 ; power ; power -= 1 ) { out = out * base ; } return out ;  .. [39;49m[32;49m
0x7fb6e77a0df0    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fb6e77a0df4    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e77a0df8    4981c610000000          add r14, 0x10                                          [39;49m
[34;49m .. ow ( base power | out ) { for ( out = [39;49m[33;40m1[39;49m[34;49m ; power ; power -= 1 ) { out = out * base ; } return out ; } [39;49m[32;49m
0x7fb6e77a0dff    48c7c001000000          mov rax, 0x1                                           [39;49m
[34;49m .. int cpow ( base power | out ) { for ( [39;49m[33;40mout[39;49m[34;49m = 1 ; power ; power -= 1 ) { out = out * base ; } return out ; }  .. [39;49m[32;49m
0x7fb6e77a0e06    498d4f08                lea rcx, [r15+0x8]                                     [39;49m
[34;49mint cpow ( base power | out ) { for ( out [39;49m[33;40m=[39;49m[34;49m 1 ; power ; power -= 1 ) { out = out * base ; } return out ; }  .. [39;49m[32;49m
0x7fb6e77a0e0a    488901                  mov [rcx], rax                                         [39;49m
[34;49m ..  ( base power | out ) { for ( out = 1 [39;49m[33;40m;[39;49m[34;49m power ; power -= 1 ) { out = out * base ; } return out ; } [39;49m[32;49m
0x7fb6e77a0e0d    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. r ; power -= 1 ) { out = out * base ; [39;49m[33;40m}[39;49m[34;49m return out ; } [39;49m[32;49m
0x7fb6e77a0e11    4885c0                  test rax, rax                                          [39;49m[32;49m
0x7fb6e77a0e14    742a                    jz 0xe77a0e40                                          [39;49m
[34;49m .. ut = 1 ; power ; power -= 1 ) { out = [39;49m[33;40mout[39;49m[34;49m * base ; } return out ; } [39;49m[32;49m
0x7fb6e77a0e16    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m ..  ; power ; power -= 1 ) { out = out * [39;49m[33;40mbase[39;49m[34;49m ; } return out ; } [39;49m[32;49m
0x7fb6e77a0e1a    498b4ff0                mov rcx, [r15-0x10]                                    [39;49m
[34;49m ..  1 ; power ; power -= 1 ) { out = out [39;49m[33;40m*[39;49m[34;49m base ; } return out ; } [39;49m[32;49m
0x7fb6e77a0e1e    480fafc1                imul rax, rcx                                          [39;49m
[34;49m .. or ( out = 1 ; power ; power -= 1 ) { [39;49m[33;40mout[39;49m[34;49m = out * base ; } return out ; } [39;49m[32;49m
0x7fb6e77a0e22    498d4f08                lea rcx, [r15+0x8]                                     [39;49m
[34;49m ..  out = 1 ; power ; power -= 1 ) { out [39;49m[33;40m=[39;49m[34;49m out * base ; } return out ; } [39;49m[32;49m
0x7fb6e77a0e26    488901                  mov [rcx], rax                                         [39;49m[32;49m
0x7fb6e77a0e29    498d5ff8                lea rbx, [r15-0x8]                                     [39;49m
[34;49m .. wer | out ) { for ( out = 1 ; power ; [39;49m[33;40mpower[39;49m[34;49m -= 1 ) { out = out * base ; } return out ; } [39;49m[32;49m
0x7fb6e77a0e2d    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m ..  ) { for ( out = 1 ; power ; power -= [39;49m[33;40m1[39;49m[34;49m ) { out = out * base ; } return out ; } [39;49m[32;49m
0x7fb6e77a0e31    48c7c101000000          mov rcx, 0x1                                           [39;49m[32;49m
0x7fb6e77a0e38    482bc1                  sub rax, rcx                                           [39;49m
[34;49m .. out ) { for ( out = 1 ; power ; power [39;49m[33;40m-=[39;49m[34;49m 1 ) { out = out * base ; } return out ; } [39;49m[32;49m
0x7fb6e77a0e3b    488903                  mov [rbx], rax                                         [39;49m
[34;49m ..  { for ( out = 1 ; power ; power -= 1 [39;49m[33;40m)[39;49m[34;49m { out = out * base ; } return out ; } [39;49m[32;49m
0x7fb6e77a0e3e    ebcd                    jmp 0x7fb6e77a0e0d         	< C_Syntax.[34;49mcpow[39;49m+29[32;49m >[39;49m[39;49m[32;49m
0x7fb6e77a0e40    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m .. ) { out = out * base ; } return out ; [39;49m[33;40m}[39;49m[34;49m [39;49m[32;49m
0x7fb6e77a0e44    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e77a0e48    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e77a0e4c    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m ..  -= 1 ) { out = out * base ; } return [39;49m[33;40mout[39;49m[34;49m ; } [39;49m[32;49m
0x7fb6e77a0e50    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e77a0e53    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'cpow' :: codeSize = 99
Word : 0x00007fb6e47bed58 :: Compiled at : 0x00007fb6e77a0df0
 =============================
::> 'wdiss' was called at namespaces/test/dev.csl 246.17 <::
 1073741824 1073741824
 =============================
Root.[34;49mpow[39;49m <:> csl compiled word
SourceCode for Root.[34;49mpow[39;49m :> 
[34;49m: pow ( base power | out -t II.I ) { out 1 = } { power @ 0 > } { power power @ 1 - = } { out out @ base @ * = } for return out @ ; [39;49m
Source code file location of [34;49mpow[39;49m : "namespaces/test/dev.csl" : 251.2 :: we are now at : namespaces/test/dev.csl : 254.11
Compiled with : optimizeOn, inlineOn, Jcc8 on
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xe77a0e6e -- code size = 135 bytes
TypeSignature : Integer . Integer -> Integer 
 -----------------------------
Word :: Root.[34;49mpow[39;49m : definition = 0x00007fb6e77a0e6e : disassembly at namespaces/test/dev.csl : 254.11 :
[34;49m ..                                     : [39;49m[33;40mpow[39;49m[34;49m ( base power | out -t II.I ) { out 1 = } { power @ 0 > } { power power @ 1 - = } { out out @ base .. [39;49m[32;49m
0x7fb6e77a0e6e    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fb6e77a0e72    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e77a0e76    4981c610000000          add r14, 0x10                                          [39;49m
[34;49m ..  : pow ( base power | out -t II.I ) { [39;49m[33;40mout[39;49m[34;49m 1 = } { power @ 0 > } { power power @ 1 - = } { out out @ base @ * = } for return out @ ;  .. [39;49m[32;49m
0x7fb6e77a0e7d    498d4708                lea rax, [r15+0x8]                                     [39;49m
[34;49m : pow ( base power | out -t II.I ) { out [39;49m[33;40m1[39;49m[34;49m = } { power @ 0 > } { power power @ 1 - = } { out out @ base @ * = } for return out @ ;  .. [39;49m[32;49m
0x7fb6e77a0e81    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m ..  ( base power | out -t II.I ) { out 1 [39;49m[33;40m=[39;49m[34;49m } { power @ 0 > } { power power @ 1 - = } { out out @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fb6e77a0e88    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. e power | out -t II.I ) { out 1 = } { [39;49m[33;40mpower[39;49m[34;49m @ 0 > } { power power @ 1 - = } { out out @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fb6e77a0e8b    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. out -t II.I ) { out 1 = } { power @ 0 [39;49m[33;40m>[39;49m[34;49m } { power power @ 1 - = } { out out @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fb6e77a0e8f    4883f800                cmp rax, 0x0                                           [39;49m[32;49m
0x7fb6e77a0e93    7e4c                    jle 0xe77a0ee1                                         [39;49m
[34;49m .. wer @ 0 > } { power power @ 1 - = } { [39;49m[33;40mout[39;49m[34;49m out @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fb6e77a0e95    498d4708                lea rax, [r15+0x8]                                     [39;49m[32;49m
0x7fb6e77a0e99    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e77a0e9d    498906                  mov [r14], rax                                         [39;49m
[34;49m .. @ 0 > } { power power @ 1 - = } { out [39;49m[33;40mout[39;49m[34;49m @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fb6e77a0ea0    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m .. } { power power @ 1 - = } { out out @ [39;49m[33;40mbase[39;49m[34;49m @ * = } for return out @ ; [39;49m[32;49m
0x7fb6e77a0ea4    498b4ff0                mov rcx, [r15-0x10]                                    [39;49m
[34;49m .. er power @ 1 - = } { out out @ base @ [39;49m[33;40m*[39;49m[34;49m = } for return out @ ; [39;49m[32;49m
0x7fb6e77a0ea8    480fafc1                imul rax, rcx                                          [39;49m[32;49m
0x7fb6e77a0eac    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fb6e77a0eaf    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fb6e77a0eb2    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m ..  power @ 1 - = } { out out @ base @ * [39;49m[33;40m=[39;49m[34;49m } for return out @ ; [39;49m[32;49m
0x7fb6e77a0eb6    488908                  mov [rax], rcx                                         [39;49m
[34;49m ..  II.I ) { out 1 = } { power @ 0 > } { [39;49m[33;40mpower[39;49m[34;49m power @ 1 - = } { out out @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fb6e77a0eb9    498d47f8                lea rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e77a0ebd    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e77a0ec1    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ) { out 1 = } { power @ 0 > } { power [39;49m[33;40mpower[39;49m[34;49m @ 1 - = } { out out @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fb6e77a0ec4    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. 1 = } { power @ 0 > } { power power @ [39;49m[33;40m1[39;49m[34;49m - = } { out out @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fb6e77a0ec8    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m .. = } { power @ 0 > } { power power @ 1 [39;49m[33;40m-[39;49m[34;49m = } { out out @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fb6e77a0ecf    482bc1                  sub rax, rcx                                           [39;49m[32;49m
0x7fb6e77a0ed2    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fb6e77a0ed5    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fb6e77a0ed8    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m .. } { power @ 0 > } { power power @ 1 - [39;49m[33;40m=[39;49m[34;49m } { out out @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fb6e77a0edc    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. { power @ 0 > } { power power @ 1 - = [39;49m[33;40m}[39;49m[34;49m { out out @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fb6e77a0edf    ebaa                    jmp 0x7fb6e77a0e8b         	< Root.[34;49mpow[39;49m+29[32;49m >[39;49m[39;49m[32;49m
0x7fb6e77a0ee1    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m .. t out @ base @ * = } for return out @ [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fb6e77a0ee5    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e77a0ee9    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e77a0eed    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m .. } { out out @ base @ * = } for return [39;49m[33;40mout[39;49m[34;49m @ ; [39;49m[32;49m
0x7fb6e77a0ef1    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e77a0ef4    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'pow' :: codeSize = 134
Word : 0x00007fb6e47c2158 :: Compiled at : 0x00007fb6e77a0e6e
 =============================
::> 'wdiss' was called at namespaces/test/dev.csl 254.11 <::

 65536

Timer [ 1 ] : elapsed time = 0.007726271 seconds
 1073741824
 =============================
Root.[34;49mpowReg[39;49m <:> csl compiled word
SourceCode for Root.[34;49mpowReg[39;49m :> 
[34;49m: powReg ( REG base REG power | REG out -t II.I ) { out 1 = } { power @ 0 > } { power power @ 1 - = } { out out @ base @ * = } for return out @ ; [39;49m
Source code file location of [34;49mpowReg[39;49m : "namespaces/test/dev.csl" : 255.2 :: we are now at : namespaces/test/dev.csl : 257.14
Compiled with : optimizeOn, inlineOn, Jcc8 on
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xe77a0f09 -- code size = 50 bytes
TypeSignature : Integer . Integer -> Integer 
 -----------------------------
Word :: Root.[34;49mpowReg[39;49m : definition = 0x00007fb6e77a0f09 : disassembly at namespaces/test/dev.csl : 257.14 :
[34;49m ..                              : powReg [39;49m[33;40m([39;49m[34;49m REG base REG power | REG out -t II.I ) { out 1 = } { power @ 0 > } { power power @ 1 - = } { out ou .. [39;49m[32;49m
0x7fb6e77a0f09    498b36                  mov rsi, [r14]                                         [39;49m[32;49m
0x7fb6e77a0f0c    498b7ef8                mov rdi, [r14-0x8]                                     [39;49m
[34;49m .. e REG power | REG out -t II.I ) { out [39;49m[33;40m1[39;49m[34;49m = } { power @ 0 > } { power power @ 1 - = } { out out @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fb6e77a0f10    48c7c201000000          mov rdx, 0x1                                           [39;49m
[34;49m .. out -t II.I ) { out 1 = } { power @ 0 [39;49m[33;40m>[39;49m[34;49m } { power power @ 1 - = } { out out @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fb6e77a0f17    4883fe00                cmp rsi, 0x0                                           [39;49m[32;49m
0x7fb6e77a0f1b    7e16                    jle 0xe77a0f33                                         [39;49m
[34;49m .. wer @ 0 > } { power power @ 1 - = } { [39;49m[33;40mout[39;49m[34;49m out @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fb6e77a0f1d    488bc2                  mov rax, rdx                                           [39;49m
[34;49m .. er power @ 1 - = } { out out @ base @ [39;49m[33;40m*[39;49m[34;49m = } for return out @ ; [39;49m[32;49m
0x7fb6e77a0f20    480fafd7                imul rdx, rdi                                          [39;49m
[34;49m ..  II.I ) { out 1 = } { power @ 0 > } { [39;49m[33;40mpower[39;49m[34;49m power @ 1 - = } { out out @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fb6e77a0f24    488bc6                  mov rax, rsi                                           [39;49m
[34;49m .. 1 = } { power @ 0 > } { power power @ [39;49m[33;40m1[39;49m[34;49m - = } { out out @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fb6e77a0f27    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m .. = } { power @ 0 > } { power power @ 1 [39;49m[33;40m-[39;49m[34;49m = } { out out @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fb6e77a0f2e    482bf1                  sub rsi, rcx                                           [39;49m
[34;49m .. { power @ 0 > } { power power @ 1 - = [39;49m[33;40m}[39;49m[34;49m { out out @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fb6e77a0f31    ebe4                    jmp 0x7fb6e77a0f17         	< Root.[34;49mpowReg[39;49m+14[32;49m >[39;49m[39;49m
[34;49m .. t out @ base @ * = } for return out @ [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fb6e77a0f33    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m .. } { out out @ base @ * = } for return [39;49m[33;40mout[39;49m[34;49m @ ; [39;49m[32;49m
0x7fb6e77a0f37    498916                  mov [r14], rdx                                         [39;49m[32;49m
0x7fb6e77a0f3a    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'powReg' :: codeSize = 49
Word : 0x00007fb6e47c5710 :: Compiled at : 0x00007fb6e77a0f09
 =============================
::> 'wdiss' was called at namespaces/test/dev.csl 257.14 <::

 65536

Timer [ 1 ] : elapsed time = 0.007335287 seconds
 1073741824
 =============================
Root.[34;49mpowReg2[39;49m <:> csl compiled word
SourceCode for Root.[34;49mpowReg2[39;49m :> 
[34;49m: powReg2 ( base REG power | REG out -t II.I ) { out 1 = } { power @ 0 > } { power power @ 1 - = } { out out @ base @ * = } for return out @ ; [39;49m
Source code file location of [34;49mpowReg2[39;49m : "namespaces/test/dev.csl" : 258.2 :: we are now at : namespaces/test/dev.csl : 260.15
Compiled with : optimizeOn, inlineOn, Jcc8 on
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xe77a0f40 -- code size = 74 bytes
TypeSignature : Integer . Integer -> Integer 
 -----------------------------
Word :: Root.[34;49mpowReg2[39;49m : definition = 0x00007fb6e77a0f40 : disassembly at namespaces/test/dev.csl : 260.15 :
[34;49m ..                                     : [39;49m[33;40mpowReg2[39;49m[34;49m ( base REG power | REG out -t II.I ) { out 1 = } { power @ 0 > } { power power @ 1 - = } { ou .. [39;49m[32;49m
0x7fb6e77a0f40    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fb6e77a0f44    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e77a0f48    4981c608000000          add r14, 0x8                                           [39;49m
[34;49m ..                             : powReg2 [39;49m[33;40m([39;49m[34;49m base REG power | REG out -t II.I ) { out 1 = } { power @ 0 > } { power power @ 1 - = } { out out @  .. [39;49m[32;49m
0x7fb6e77a0f4f    498b7ff8                mov rdi, [r15-0x8]                                     [39;49m
[34;49m .. e REG power | REG out -t II.I ) { out [39;49m[33;40m1[39;49m[34;49m = } { power @ 0 > } { power power @ 1 - = } { out out @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fb6e77a0f53    48c7c601000000          mov rsi, 0x1                                           [39;49m
[34;49m .. out -t II.I ) { out 1 = } { power @ 0 [39;49m[33;40m>[39;49m[34;49m } { power power @ 1 - = } { out out @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fb6e77a0f5a    4883ff00                cmp rdi, 0x0                                           [39;49m[32;49m
0x7fb6e77a0f5e    7e1a                    jle 0xe77a0f7a                                         [39;49m
[34;49m .. wer @ 0 > } { power power @ 1 - = } { [39;49m[33;40mout[39;49m[34;49m out @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fb6e77a0f60    488bc6                  mov rax, rsi                                           [39;49m
[34;49m .. } { power power @ 1 - = } { out out @ [39;49m[33;40mbase[39;49m[34;49m @ * = } for return out @ ; [39;49m[32;49m
0x7fb6e77a0f63    498b4ff0                mov rcx, [r15-0x10]                                    [39;49m
[34;49m .. er power @ 1 - = } { out out @ base @ [39;49m[33;40m*[39;49m[34;49m = } for return out @ ; [39;49m[32;49m
0x7fb6e77a0f67    480faff1                imul rsi, rcx                                          [39;49m
[34;49m ..  II.I ) { out 1 = } { power @ 0 > } { [39;49m[33;40mpower[39;49m[34;49m power @ 1 - = } { out out @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fb6e77a0f6b    488bc7                  mov rax, rdi                                           [39;49m
[34;49m .. 1 = } { power @ 0 > } { power power @ [39;49m[33;40m1[39;49m[34;49m - = } { out out @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fb6e77a0f6e    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m .. = } { power @ 0 > } { power power @ 1 [39;49m[33;40m-[39;49m[34;49m = } { out out @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fb6e77a0f75    482bf9                  sub rdi, rcx                                           [39;49m
[34;49m .. { power @ 0 > } { power power @ 1 - = [39;49m[33;40m}[39;49m[34;49m { out out @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fb6e77a0f78    ebe0                    jmp 0x7fb6e77a0f5a         	< Root.[34;49mpowReg2[39;49m+26[32;49m >[39;49m[39;49m
[34;49m .. t out @ base @ * = } for return out @ [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fb6e77a0f7a    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e77a0f7e    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e77a0f82    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m .. } { out out @ base @ * = } for return [39;49m[33;40mout[39;49m[34;49m @ ; [39;49m[32;49m
0x7fb6e77a0f86    498936                  mov [r14], rsi                                         [39;49m[32;49m
0x7fb6e77a0f89    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'powReg2' :: codeSize = 73
Word : 0x00007fb6e47c8cc8 :: Compiled at : 0x00007fb6e77a0f40
 =============================
::> 'wdiss' was called at namespaces/test/dev.csl 260.15 <::

 65536

Timer [ 1 ] : elapsed time = 0.007766929 seconds
 1073741824
 =============================
Root.[34;49mpowReg3[39;49m <:> csl compiled word
SourceCode for Root.[34;49mpowReg3[39;49m :> 
[34;49m: powReg3 ( REG base power | REG out -t II.I ) { out 1 = } { power @ 0 > } { power power @ 1 - = } { out out @ base @ * = } for return out @ ; [39;49m
Source code file location of [34;49mpowReg3[39;49m : "namespaces/test/dev.csl" : 261.2 :: we are now at : namespaces/test/dev.csl : 264.15
Compiled with : optimizeOn, inlineOn, Jcc8 on
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xe77a0f8f -- code size = 99 bytes
TypeSignature : Integer . Integer -> Integer 
 -----------------------------
Word :: Root.[34;49mpowReg3[39;49m : definition = 0x00007fb6e77a0f8f : disassembly at namespaces/test/dev.csl : 264.15 :
[34;49m ..                                     : [39;49m[33;40mpowReg3[39;49m[34;49m ( REG base power | REG out -t II.I ) { out 1 = } { power @ 0 > } { power power @ 1 - = } { ou .. [39;49m[32;49m
0x7fb6e77a0f8f    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fb6e77a0f93    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e77a0f97    4981c608000000          add r14, 0x8                                           [39;49m
[34;49m ..                             : powReg3 [39;49m[33;40m([39;49m[34;49m REG base power | REG out -t II.I ) { out 1 = } { power @ 0 > } { power power @ 1 - = } { out out @  .. [39;49m[32;49m
0x7fb6e77a0f9e    498b7ff0                mov rdi, [r15-0x10]                                    [39;49m
[34;49m ..  base power | REG out -t II.I ) { out [39;49m[33;40m1[39;49m[34;49m = } { power @ 0 > } { power power @ 1 - = } { out out @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fb6e77a0fa2    48c7c601000000          mov rsi, 0x1                                           [39;49m
[34;49m .. wer | REG out -t II.I ) { out 1 = } { [39;49m[33;40mpower[39;49m[34;49m @ 0 > } { power power @ 1 - = } { out out @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fb6e77a0fa9    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. out -t II.I ) { out 1 = } { power @ 0 [39;49m[33;40m>[39;49m[34;49m } { power power @ 1 - = } { out out @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fb6e77a0fad    4883f800                cmp rax, 0x0                                           [39;49m[32;49m
0x7fb6e77a0fb1    7e2f                    jle 0xe77a0fe2                                         [39;49m
[34;49m .. wer @ 0 > } { power power @ 1 - = } { [39;49m[33;40mout[39;49m[34;49m out @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fb6e77a0fb3    488bc6                  mov rax, rsi                                           [39;49m
[34;49m .. er power @ 1 - = } { out out @ base @ [39;49m[33;40m*[39;49m[34;49m = } for return out @ ; [39;49m[32;49m
0x7fb6e77a0fb6    480faff7                imul rsi, rdi                                          [39;49m
[34;49m ..  II.I ) { out 1 = } { power @ 0 > } { [39;49m[33;40mpower[39;49m[34;49m power @ 1 - = } { out out @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fb6e77a0fba    498d47f8                lea rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e77a0fbe    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e77a0fc2    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ) { out 1 = } { power @ 0 > } { power [39;49m[33;40mpower[39;49m[34;49m @ 1 - = } { out out @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fb6e77a0fc5    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. 1 = } { power @ 0 > } { power power @ [39;49m[33;40m1[39;49m[34;49m - = } { out out @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fb6e77a0fc9    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m .. = } { power @ 0 > } { power power @ 1 [39;49m[33;40m-[39;49m[34;49m = } { out out @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fb6e77a0fd0    482bc1                  sub rax, rcx                                           [39;49m[32;49m
0x7fb6e77a0fd3    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fb6e77a0fd6    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fb6e77a0fd9    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m .. } { power @ 0 > } { power power @ 1 - [39;49m[33;40m=[39;49m[34;49m } { out out @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fb6e77a0fdd    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. { power @ 0 > } { power power @ 1 - = [39;49m[33;40m}[39;49m[34;49m { out out @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fb6e77a0fe0    ebc7                    jmp 0x7fb6e77a0fa9         	< Root.[34;49mpowReg3[39;49m+26[32;49m >[39;49m[39;49m
[34;49m .. t out @ base @ * = } for return out @ [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fb6e77a0fe2    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e77a0fe6    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e77a0fea    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m .. } { out out @ base @ * = } for return [39;49m[33;40mout[39;49m[34;49m @ ; [39;49m[32;49m
0x7fb6e77a0fee    498936                  mov [r14], rsi                                         [39;49m[32;49m
0x7fb6e77a0ff1    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'powReg3' :: codeSize = 98
Word : 0x00007fb6e47cc280 :: Compiled at : 0x00007fb6e77a0f8f
 =============================
::> 'wdiss' was called at namespaces/test/dev.csl 264.15 <::

 65536

Timer [ 1 ] : elapsed time = 0.007319335 seconds
 1073741824
 =============================
Root.[34;49mpowReg4[39;49m <:> csl compiled word
SourceCode for Root.[34;49mpowReg4[39;49m :> 
[34;49m: powReg4 ( REG base REG power | out -t II.I ) { out 1 = } { power @ 0 > } { power power @ 1 - = } { out out @ base @ * = } for return out @ ; [39;49m
Source code file location of [34;49mpowReg4[39;49m : "namespaces/test/dev.csl" : 265.2 :: we are now at : namespaces/test/dev.csl : 268.15
Compiled with : optimizeOn, inlineOn, Jcc8 on
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xe77a0ff7 -- code size = 110 bytes
TypeSignature : Integer . Integer -> Integer 
 -----------------------------
Word :: Root.[34;49mpowReg4[39;49m : definition = 0x00007fb6e77a0ff7 : disassembly at namespaces/test/dev.csl : 268.15 :
[34;49m ..                                     : [39;49m[33;40mpowReg4[39;49m[34;49m ( REG base REG power | out -t II.I ) { out 1 = } { power @ 0 > } { power power @ 1 - = } { ou .. [39;49m[32;49m
0x7fb6e77a0ff7    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fb6e77a0ffb    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e77a0fff    4981c610000000          add r14, 0x10                                          [39;49m
[34;49m ..                             : powReg4 [39;49m[33;40m([39;49m[34;49m REG base REG power | out -t II.I ) { out 1 = } { power @ 0 > } { power power @ 1 - = } { out out @  .. [39;49m[32;49m
0x7fb6e77a1006    498b77f8                mov rsi, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e77a100a    498b7ff0                mov rdi, [r15-0x10]                                    [39;49m
[34;49m ..  REG base REG power | out -t II.I ) { [39;49m[33;40mout[39;49m[34;49m 1 = } { power @ 0 > } { power power @ 1 - = } { out out @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fb6e77a100e    498d4708                lea rax, [r15+0x8]                                     [39;49m
[34;49m ..  base REG power | out -t II.I ) { out [39;49m[33;40m1[39;49m[34;49m = } { power @ 0 > } { power power @ 1 - = } { out out @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fb6e77a1012    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m .. ase REG power | out -t II.I ) { out 1 [39;49m[33;40m=[39;49m[34;49m } { power @ 0 > } { power power @ 1 - = } { out out @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fb6e77a1019    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. out -t II.I ) { out 1 = } { power @ 0 [39;49m[33;40m>[39;49m[34;49m } { power power @ 1 - = } { out out @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fb6e77a101c    4883fe00                cmp rsi, 0x0                                           [39;49m[32;49m
0x7fb6e77a1020    7e2f                    jle 0xe77a1051                                         [39;49m
[34;49m .. wer @ 0 > } { power power @ 1 - = } { [39;49m[33;40mout[39;49m[34;49m out @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fb6e77a1022    498d4708                lea rax, [r15+0x8]                                     [39;49m[32;49m
0x7fb6e77a1026    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e77a102a    498906                  mov [r14], rax                                         [39;49m
[34;49m .. @ 0 > } { power power @ 1 - = } { out [39;49m[33;40mout[39;49m[34;49m @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fb6e77a102d    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m .. er power @ 1 - = } { out out @ base @ [39;49m[33;40m*[39;49m[34;49m = } for return out @ ; [39;49m[32;49m
0x7fb6e77a1031    480fafc7                imul rax, rdi                                          [39;49m[32;49m
0x7fb6e77a1035    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fb6e77a1038    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fb6e77a103b    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m ..  power @ 1 - = } { out out @ base @ * [39;49m[33;40m=[39;49m[34;49m } for return out @ ; [39;49m[32;49m
0x7fb6e77a103f    488908                  mov [rax], rcx                                         [39;49m
[34;49m ..  II.I ) { out 1 = } { power @ 0 > } { [39;49m[33;40mpower[39;49m[34;49m power @ 1 - = } { out out @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fb6e77a1042    488bc6                  mov rax, rsi                                           [39;49m
[34;49m .. 1 = } { power @ 0 > } { power power @ [39;49m[33;40m1[39;49m[34;49m - = } { out out @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fb6e77a1045    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m .. = } { power @ 0 > } { power power @ 1 [39;49m[33;40m-[39;49m[34;49m = } { out out @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fb6e77a104c    482bf1                  sub rsi, rcx                                           [39;49m
[34;49m .. { power @ 0 > } { power power @ 1 - = [39;49m[33;40m}[39;49m[34;49m { out out @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fb6e77a104f    ebcb                    jmp 0x7fb6e77a101c         	< Root.[34;49mpowReg4[39;49m+37[32;49m >[39;49m[39;49m[32;49m
0x7fb6e77a1051    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m .. t out @ base @ * = } for return out @ [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fb6e77a1055    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e77a1059    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e77a105d    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m .. } { out out @ base @ * = } for return [39;49m[33;40mout[39;49m[34;49m @ ; [39;49m[32;49m
0x7fb6e77a1061    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e77a1064    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'powReg4' :: codeSize = 109
Word : 0x00007fb6e47cf838 :: Compiled at : 0x00007fb6e77a0ff7
 =============================
::> 'wdiss' was called at namespaces/test/dev.csl 268.15 <::

 65536

Timer [ 1 ] : elapsed time = 0.007588796 seconds
 1073741824
 =============================
Root.[34;49mpowReg5[39;49m <:> csl compiled word
SourceCode for Root.[34;49mpowReg5[39;49m :> 
[34;49m: powReg5 ( base REG power | out -t II.I ) { out 1 = } { power @ 0 > } { power power @ 1 - = } { out out @ base @ * = } for return out @ ; [39;49m
Source code file location of [34;49mpowReg5[39;49m : "namespaces/test/dev.csl" : 269.2 :: we are now at : namespaces/test/dev.csl : 272.15
Compiled with : optimizeOn, inlineOn, Jcc8 on
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xe77a106a -- code size = 110 bytes
TypeSignature : Integer . Integer -> Integer 
 -----------------------------
Word :: Root.[34;49mpowReg5[39;49m : definition = 0x00007fb6e77a106a : disassembly at namespaces/test/dev.csl : 272.15 :
[34;49m ..                                     : [39;49m[33;40mpowReg5[39;49m[34;49m ( base REG power | out -t II.I ) { out 1 = } { power @ 0 > } { power power @ 1 - = } { out ou .. [39;49m[32;49m
0x7fb6e77a106a    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fb6e77a106e    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e77a1072    4981c610000000          add r14, 0x10                                          [39;49m
[34;49m ..                             : powReg5 [39;49m[33;40m([39;49m[34;49m base REG power | out -t II.I ) { out 1 = } { power @ 0 > } { power power @ 1 - = } { out out @ base .. [39;49m[32;49m
0x7fb6e77a1079    498b7ff8                mov rdi, [r15-0x8]                                     [39;49m
[34;49m .. g5 ( base REG power | out -t II.I ) { [39;49m[33;40mout[39;49m[34;49m 1 = } { power @ 0 > } { power power @ 1 - = } { out out @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fb6e77a107d    498d4708                lea rax, [r15+0x8]                                     [39;49m
[34;49m ..  base REG power | out -t II.I ) { out [39;49m[33;40m1[39;49m[34;49m = } { power @ 0 > } { power power @ 1 - = } { out out @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fb6e77a1081    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m .. ase REG power | out -t II.I ) { out 1 [39;49m[33;40m=[39;49m[34;49m } { power @ 0 > } { power power @ 1 - = } { out out @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fb6e77a1088    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. out -t II.I ) { out 1 = } { power @ 0 [39;49m[33;40m>[39;49m[34;49m } { power power @ 1 - = } { out out @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fb6e77a108b    4883ff00                cmp rdi, 0x0                                           [39;49m[32;49m
0x7fb6e77a108f    7e33                    jle 0xe77a10c4                                         [39;49m
[34;49m .. wer @ 0 > } { power power @ 1 - = } { [39;49m[33;40mout[39;49m[34;49m out @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fb6e77a1091    498d4708                lea rax, [r15+0x8]                                     [39;49m[32;49m
0x7fb6e77a1095    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e77a1099    498906                  mov [r14], rax                                         [39;49m
[34;49m .. @ 0 > } { power power @ 1 - = } { out [39;49m[33;40mout[39;49m[34;49m @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fb6e77a109c    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m .. } { power power @ 1 - = } { out out @ [39;49m[33;40mbase[39;49m[34;49m @ * = } for return out @ ; [39;49m[32;49m
0x7fb6e77a10a0    498b4ff0                mov rcx, [r15-0x10]                                    [39;49m
[34;49m .. er power @ 1 - = } { out out @ base @ [39;49m[33;40m*[39;49m[34;49m = } for return out @ ; [39;49m[32;49m
0x7fb6e77a10a4    480fafc1                imul rax, rcx                                          [39;49m[32;49m
0x7fb6e77a10a8    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fb6e77a10ab    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fb6e77a10ae    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m ..  power @ 1 - = } { out out @ base @ * [39;49m[33;40m=[39;49m[34;49m } for return out @ ; [39;49m[32;49m
0x7fb6e77a10b2    488908                  mov [rax], rcx                                         [39;49m
[34;49m ..  II.I ) { out 1 = } { power @ 0 > } { [39;49m[33;40mpower[39;49m[34;49m power @ 1 - = } { out out @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fb6e77a10b5    488bc7                  mov rax, rdi                                           [39;49m
[34;49m .. 1 = } { power @ 0 > } { power power @ [39;49m[33;40m1[39;49m[34;49m - = } { out out @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fb6e77a10b8    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m .. = } { power @ 0 > } { power power @ 1 [39;49m[33;40m-[39;49m[34;49m = } { out out @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fb6e77a10bf    482bf9                  sub rdi, rcx                                           [39;49m
[34;49m .. } { power @ 0 > } { power power @ 1 - [39;49m[33;40m=[39;49m[34;49m } { out out @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fb6e77a10c2    ebc7                    jmp 0x7fb6e77a108b         	< Root.[34;49mpowReg5[39;49m+33[32;49m >[39;49m[39;49m[32;49m
0x7fb6e77a10c4    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m .. t out @ base @ * = } for return out @ [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fb6e77a10c8    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e77a10cc    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e77a10d0    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m .. } { out out @ base @ * = } for return [39;49m[33;40mout[39;49m[34;49m @ ; [39;49m[32;49m
0x7fb6e77a10d4    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e77a10d7    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'powReg5' :: codeSize = 109
Word : 0x00007fb6e47d2df0 :: Compiled at : 0x00007fb6e77a106a
 =============================
::> 'wdiss' was called at namespaces/test/dev.csl 272.15 <::

 65536

Timer [ 1 ] : elapsed time = 0.007559060 seconds
 1073741824
 =============================
Root.[34;49mpowReg6[39;49m <:> csl compiled word
SourceCode for Root.[34;49mpowReg6[39;49m :> 
[34;49m: powReg6 ( REG base power | out -t II.I ) { out 1 = } { power @ 0 > } { power power @ 1 - = } { out out @ base @ * = } for return out @ ; [39;49m
Source code file location of [34;49mpowReg6[39;49m : "namespaces/test/dev.csl" : 273.2 :: we are now at : namespaces/test/dev.csl : 275.15
Compiled with : optimizeOn, inlineOn, Jcc8 on
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xe77a10dd -- code size = 135 bytes
TypeSignature : Integer . Integer -> Integer 
 -----------------------------
Word :: Root.[34;49mpowReg6[39;49m : definition = 0x00007fb6e77a10dd : disassembly at namespaces/test/dev.csl : 275.15 :
[34;49m ..                                     : [39;49m[33;40mpowReg6[39;49m[34;49m ( REG base power | out -t II.I ) { out 1 = } { power @ 0 > } { power power @ 1 - = } { out ou .. [39;49m[32;49m
0x7fb6e77a10dd    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fb6e77a10e1    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e77a10e5    4981c610000000          add r14, 0x10                                          [39;49m
[34;49m ..                             : powReg6 [39;49m[33;40m([39;49m[34;49m REG base power | out -t II.I ) { out 1 = } { power @ 0 > } { power power @ 1 - = } { out out @ base .. [39;49m[32;49m
0x7fb6e77a10ec    498b7ff0                mov rdi, [r15-0x10]                                    [39;49m
[34;49m .. g6 ( REG base power | out -t II.I ) { [39;49m[33;40mout[39;49m[34;49m 1 = } { power @ 0 > } { power power @ 1 - = } { out out @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fb6e77a10f0    498d4708                lea rax, [r15+0x8]                                     [39;49m
[34;49m ..  REG base power | out -t II.I ) { out [39;49m[33;40m1[39;49m[34;49m = } { power @ 0 > } { power power @ 1 - = } { out out @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fb6e77a10f4    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m .. EG base power | out -t II.I ) { out 1 [39;49m[33;40m=[39;49m[34;49m } { power @ 0 > } { power power @ 1 - = } { out out @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fb6e77a10fb    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. e power | out -t II.I ) { out 1 = } { [39;49m[33;40mpower[39;49m[34;49m @ 0 > } { power power @ 1 - = } { out out @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fb6e77a10fe    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. out -t II.I ) { out 1 = } { power @ 0 [39;49m[33;40m>[39;49m[34;49m } { power power @ 1 - = } { out out @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fb6e77a1102    4883f800                cmp rax, 0x0                                           [39;49m[32;49m
0x7fb6e77a1106    7e48                    jle 0xe77a1150                                         [39;49m
[34;49m .. wer @ 0 > } { power power @ 1 - = } { [39;49m[33;40mout[39;49m[34;49m out @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fb6e77a1108    498d4708                lea rax, [r15+0x8]                                     [39;49m[32;49m
0x7fb6e77a110c    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e77a1110    498906                  mov [r14], rax                                         [39;49m
[34;49m .. @ 0 > } { power power @ 1 - = } { out [39;49m[33;40mout[39;49m[34;49m @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fb6e77a1113    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m .. er power @ 1 - = } { out out @ base @ [39;49m[33;40m*[39;49m[34;49m = } for return out @ ; [39;49m[32;49m
0x7fb6e77a1117    480fafc7                imul rax, rdi                                          [39;49m[32;49m
0x7fb6e77a111b    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fb6e77a111e    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fb6e77a1121    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m ..  power @ 1 - = } { out out @ base @ * [39;49m[33;40m=[39;49m[34;49m } for return out @ ; [39;49m[32;49m
0x7fb6e77a1125    488908                  mov [rax], rcx                                         [39;49m
[34;49m ..  II.I ) { out 1 = } { power @ 0 > } { [39;49m[33;40mpower[39;49m[34;49m power @ 1 - = } { out out @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fb6e77a1128    498d47f8                lea rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e77a112c    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e77a1130    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ) { out 1 = } { power @ 0 > } { power [39;49m[33;40mpower[39;49m[34;49m @ 1 - = } { out out @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fb6e77a1133    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. 1 = } { power @ 0 > } { power power @ [39;49m[33;40m1[39;49m[34;49m - = } { out out @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fb6e77a1137    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m .. = } { power @ 0 > } { power power @ 1 [39;49m[33;40m-[39;49m[34;49m = } { out out @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fb6e77a113e    482bc1                  sub rax, rcx                                           [39;49m[32;49m
0x7fb6e77a1141    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fb6e77a1144    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fb6e77a1147    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m .. } { power @ 0 > } { power power @ 1 - [39;49m[33;40m=[39;49m[34;49m } { out out @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fb6e77a114b    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. { power @ 0 > } { power power @ 1 - = [39;49m[33;40m}[39;49m[34;49m { out out @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fb6e77a114e    ebae                    jmp 0x7fb6e77a10fe         	< Root.[34;49mpowReg6[39;49m+33[32;49m >[39;49m[39;49m[32;49m
0x7fb6e77a1150    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m .. t out @ base @ * = } for return out @ [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fb6e77a1154    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e77a1158    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e77a115c    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m .. } { out out @ base @ * = } for return [39;49m[33;40mout[39;49m[34;49m @ ; [39;49m[32;49m
0x7fb6e77a1160    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e77a1163    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'powReg6' :: codeSize = 134
Word : 0x00007fb6e47d63a8 :: Compiled at : 0x00007fb6e77a10dd
 =============================
::> 'wdiss' was called at namespaces/test/dev.csl 275.15 <::

 65536

Timer [ 1 ] : elapsed time = 0.007971108 seconds
 1073741824
 =============================
Root.[34;49mpowReg7[39;49m <:> csl compiled word
SourceCode for Root.[34;49mpowReg7[39;49m :> 
[34;49m: powReg7 ( base power | REG out -t II.I ) { out 1 = } { power @ 0 > } { power power @ 1 - = } { out out @ base @ * = } for return out @ ; [39;49m
Source code file location of [34;49mpowReg7[39;49m : "namespaces/test/dev.csl" : 276.2 :: we are now at : namespaces/test/dev.csl : 279.15
Compiled with : optimizeOn, inlineOn, Jcc8 on
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xe77a1169 -- code size = 99 bytes
TypeSignature : Integer . Integer -> Integer 
 -----------------------------
Word :: Root.[34;49mpowReg7[39;49m : definition = 0x00007fb6e77a1169 : disassembly at namespaces/test/dev.csl : 279.15 :
[34;49m ..                                     : [39;49m[33;40mpowReg7[39;49m[34;49m ( base power | REG out -t II.I ) { out 1 = } { power @ 0 > } { power power @ 1 - = } { out ou .. [39;49m[32;49m
0x7fb6e77a1169    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fb6e77a116d    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e77a1171    4981c608000000          add r14, 0x8                                           [39;49m
[34;49m ..  base power | REG out -t II.I ) { out [39;49m[33;40m1[39;49m[34;49m = } { power @ 0 > } { power power @ 1 - = } { out out @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fb6e77a1178    48c7c701000000          mov rdi, 0x1                                           [39;49m
[34;49m .. wer | REG out -t II.I ) { out 1 = } { [39;49m[33;40mpower[39;49m[34;49m @ 0 > } { power power @ 1 - = } { out out @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fb6e77a117f    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. out -t II.I ) { out 1 = } { power @ 0 [39;49m[33;40m>[39;49m[34;49m } { power power @ 1 - = } { out out @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fb6e77a1183    4883f800                cmp rax, 0x0                                           [39;49m[32;49m
0x7fb6e77a1187    7e33                    jle 0xe77a11bc                                         [39;49m
[34;49m .. wer @ 0 > } { power power @ 1 - = } { [39;49m[33;40mout[39;49m[34;49m out @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fb6e77a1189    488bc7                  mov rax, rdi                                           [39;49m
[34;49m .. } { power power @ 1 - = } { out out @ [39;49m[33;40mbase[39;49m[34;49m @ * = } for return out @ ; [39;49m[32;49m
0x7fb6e77a118c    498b4ff0                mov rcx, [r15-0x10]                                    [39;49m
[34;49m .. er power @ 1 - = } { out out @ base @ [39;49m[33;40m*[39;49m[34;49m = } for return out @ ; [39;49m[32;49m
0x7fb6e77a1190    480faff9                imul rdi, rcx                                          [39;49m
[34;49m ..  II.I ) { out 1 = } { power @ 0 > } { [39;49m[33;40mpower[39;49m[34;49m power @ 1 - = } { out out @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fb6e77a1194    498d47f8                lea rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e77a1198    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e77a119c    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ) { out 1 = } { power @ 0 > } { power [39;49m[33;40mpower[39;49m[34;49m @ 1 - = } { out out @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fb6e77a119f    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. 1 = } { power @ 0 > } { power power @ [39;49m[33;40m1[39;49m[34;49m - = } { out out @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fb6e77a11a3    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m .. = } { power @ 0 > } { power power @ 1 [39;49m[33;40m-[39;49m[34;49m = } { out out @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fb6e77a11aa    482bc1                  sub rax, rcx                                           [39;49m[32;49m
0x7fb6e77a11ad    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fb6e77a11b0    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fb6e77a11b3    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m .. } { power @ 0 > } { power power @ 1 - [39;49m[33;40m=[39;49m[34;49m } { out out @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fb6e77a11b7    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. { power @ 0 > } { power power @ 1 - = [39;49m[33;40m}[39;49m[34;49m { out out @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fb6e77a11ba    ebc3                    jmp 0x7fb6e77a117f         	< Root.[34;49mpowReg7[39;49m+22[32;49m >[39;49m[39;49m
[34;49m .. t out @ base @ * = } for return out @ [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fb6e77a11bc    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e77a11c0    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e77a11c4    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m .. } { out out @ base @ * = } for return [39;49m[33;40mout[39;49m[34;49m @ ; [39;49m[32;49m
0x7fb6e77a11c8    49893e                  mov [r14], rdi                                         [39;49m[32;49m
0x7fb6e77a11cb    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'powReg7' :: codeSize = 98
Word : 0x00007fb6e47d9960 :: Compiled at : 0x00007fb6e77a1169
 =============================
::> 'wdiss' was called at namespaces/test/dev.csl 279.15 <::

 65536

Timer [ 1 ] : elapsed time = 0.008097662 seconds

 =============================
Int.[34;49m**[39;49m <:> C compiled primitive, infixable
SourceCode for Int.[34;49m**[39;49m :> 
C Primitive
TypeSignature : Integer . Integer -> Integer 
 -----------------------------
Word :: Int.[34;49m**[39;49m : definition = 0x0000562d8980e920 : disassembly at namespaces/test/dev.csl : 281.10 :[32;49m
0x562d8980e924    498b4ef8                mov rcx, [r14-0x8]                                     [39;49m[32;49m
0x562d8980e928    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x562d8980e92b    4c89f6                  mov rsi, r14                                           [39;49m[32;49m
0x562d8980e92e    4889ca                  mov rdx, rcx                                           [39;49m[32;49m
0x562d8980e931    4883e801                sub rax, 0x1                                           [39;49m[32;49m
0x562d8980e935    7413                    jz 0x8980e94a                                          [39;49m[32;49m
0x562d8980e937    660f1f840000000000      o16 nop [rax+rax]                                      [39;49m[32;49m
0x562d8980e940    480fafd1                imul rdx, rcx                                          [39;49m[32;49m
0x562d8980e944    4883e801                sub rax, 0x1                                           [39;49m[32;49m
0x562d8980e948    75f6                    jnz 0x8980e940                                         [39;49m[32;49m
0x562d8980e94a    488956f8                mov [rsi-0x8], rdx                                     [39;49m[32;49m
0x562d8980e94e    e98d3cfdff              jmp 0x562d897e25e0         	< C compiler code >        [39;49m[32;49m
0x562d8980e953    66662e0f1f840000000000  o16 nop [cs:rax+rax]                                   [39;49m[32;49m
0x562d8980e95e    6690                    nop                                                    [39;49m[32;49m
0x562d8980e960    f30f1efa                invalid                                                [39;49m
Word_Disassemble : word - '**' :: codeSize = 60
Word : 0x00007fb6e7842798 :: Compiled at : 0x0000562d8980e920
 =============================
::> 'wdiss' was called at namespaces/test/dev.csl 281.10 <::

 65536

Timer [ 1 ] : elapsed time = 0.009657174 seconds

 =============================
Int.[34;49mpow_03[39;49m <:> C compiled primitive, infixable
SourceCode for Int.[34;49mpow_03[39;49m :> 
C Primitive
TypeSignature : Integer . Integer -> Integer 
 -----------------------------
Word :: Int.[34;49mpow_03[39;49m : definition = 0x0000562d8980e1f0 : disassembly at namespaces/test/dev.csl : 282.14 :[32;49m
0x562d8980e1f4    498b4ef8                mov rcx, [r14-0x8]                                     [39;49m[32;49m
0x562d8980e1f8    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x562d8980e1fb    4c89f6                  mov rsi, r14                                           [39;49m[32;49m
0x562d8980e1fe    4889ca                  mov rdx, rcx                                           [39;49m[32;49m
0x562d8980e201    4883e801                sub rax, 0x1                                           [39;49m[32;49m
0x562d8980e205    7413                    jz 0x8980e21a                                          [39;49m[32;49m
0x562d8980e207    660f1f840000000000      o16 nop [rax+rax]                                      [39;49m[32;49m
0x562d8980e210    480fafd1                imul rdx, rcx                                          [39;49m[32;49m
0x562d8980e214    4883e801                sub rax, 0x1                                           [39;49m[32;49m
0x562d8980e218    75f6                    jnz 0x8980e210                                         [39;49m[32;49m
0x562d8980e21a    488956f8                mov [rsi-0x8], rdx                                     [39;49m[32;49m
0x562d8980e21e    e9bd43fdff              jmp 0x562d897e25e0         	< C compiler code >        [39;49m[32;49m
0x562d8980e223    66662e0f1f840000000000  o16 nop [cs:rax+rax]                                   [39;49m[32;49m
0x562d8980e22e    6690                    nop                                                    [39;49m[32;49m
0x562d8980e230    f30f1efa                invalid                                                [39;49m
Word_Disassemble : word - 'pow_03' :: codeSize = 60
Word : 0x00007fb6e7842b08 :: Compiled at : 0x0000562d8980e1f0
 =============================
::> 'wdiss' was called at namespaces/test/dev.csl 282.14 <::

 65536

Timer [ 1 ] : elapsed time = 0.009357977 seconds


Word :: C.[34;49mtt[39;49m : definition = 0x00007fb6e77a11e6 : disassembly at namespaces/test/dev.csl : 288.22 :
[34;49m ..                                     : [39;49m[33;40mtt[39;49m[34;49m ( | t ) t 6 = t ++ t @ p ;  .. [39;49m[32;49m
0x7fb6e77a11e6    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fb6e77a11ea    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e77a11ee    4981c610000000          add r14, 0x10                                          [39;49m
[34;49m ..                          : tt ( | t ) [39;49m[33;40mt[39;49m[34;49m 6 = t ++ t @ p ;  .. [39;49m[32;49m
0x7fb6e77a11f5    498d4708                lea rax, [r15+0x8]                                     [39;49m
[34;49m ..                        : tt ( | t ) t [39;49m[33;40m6[39;49m[34;49m = t ++ t @ p ;  .. [39;49m[32;49m
0x7fb6e77a11f9    48c7c106000000          mov rcx, 0x6                                           [39;49m
[34;49m ..                      : tt ( | t ) t 6 [39;49m[33;40m=[39;49m[34;49m t ++ t @ p ;  .. [39;49m[32;49m
0x7fb6e77a1200    488908                  mov [rax], rcx                                         [39;49m
[34;49m ..                  : tt ( | t ) t 6 = t [39;49m[33;40m++[39;49m[34;49m t @ p ;  .. [39;49m[32;49m
0x7fb6e77a1203    49ff4708                inc qword [r15+0x8]                                    [39;49m
[34;49m ..               : tt ( | t ) t 6 = t ++ [39;49m[33;40mt[39;49m[34;49m @ p ;  .. [39;49m[32;49m
0x7fb6e77a1207    498b4708                mov rax, [r15+0x8]                                     [39;49m[32;49m
0x7fb6e77a120b    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e77a120f    498906                  mov [r14], rax                                         [39;49m
[34;49m ..           : tt ( | t ) t 6 = t ++ t @ [39;49m[33;40mp[39;49m[34;49m ;  .. [39;49m[32;49m
0x7fb6e77a1212    49b944a493e7b67f0000    mov r9, 0x7fb6e793a444                                 [39;49m[32;49m
0x7fb6e77a121c    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fb6e793a444[32;49m >[39;49m[39;49m
[34;49m ..         : tt ( | t ) t 6 = t ++ t @ p [39;49m[33;40m;[39;49m[34;49m  .. [39;49m[32;49m
0x7fb6e77a121f    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e77a1223    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e77a1227    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'tt' :: codeSize = 65 7 
should show 7
 =============================
C.[34;49mfibPTC?[39;49m <:> csl compiled word
SourceCode for C.[34;49mfibPTC?[39;49m :> 
[34;49m: fibPTC? ( n | fn fn1 fn2 ) { fn 0 = fn1 0 = fn2 1 = } { n @ } { n n @ 1 - = } { fn1 fn2 @ = fn2 fn @ = fn fn1 @ fn2 @ + = } for return fn @ ; [39;49m
Source code file location of [34;49mfibPTC?[39;49m : "namespaces/test/dev0.csl" : 152.2 :: we are now at : namespaces/test/dev.csl : 315.21
Compiled with : optimizeOn, inlineOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xe779bfbe -- code size = 183 bytes
TypeSignature : 
 -----------------------------
Word :: C.[34;49mfibPTC?[39;49m : definition = 0x00007fb6e779bfbe : disassembly at namespaces/test/dev.csl : 315.21 :
[34;49m ..                                     : [39;49m[33;40mfibPTC?[39;49m[34;49m ( n | fn fn1 fn2 )  { fn 0 = fn1 0 = fn2 1 = } { n @ } { n n @ 1 - = }  {  fn1 fn2 @ =  fn2 f .. [39;49m[32;49m
0x7fb6e779bfbe    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fb6e779bfc2    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e779bfc6    4981c620000000          add r14, 0x20                                          [39;49m
[34;49m ..       : fibPTC? ( n | fn fn1 fn2 )  { [39;49m[33;40mfn[39;49m[34;49m 0 = fn1 0 = fn2 1 = } { n @ } { n n @ 1 - = }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } f .. [39;49m[32;49m
0x7fb6e779bfcd    498d4708                lea rax, [r15+0x8]                                     [39;49m
[34;49m ..    : fibPTC? ( n | fn fn1 fn2 )  { fn [39;49m[33;40m0[39;49m[34;49m = fn1 0 = fn2 1 = } { n @ } { n n @ 1 - = }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for  .. [39;49m[32;49m
0x7fb6e779bfd1    48c7c100000000          mov rcx, 0x0                                           [39;49m
[34;49m ..  : fibPTC? ( n | fn fn1 fn2 )  { fn 0 [39;49m[33;40m=[39;49m[34;49m fn1 0 = fn2 1 = } { n @ } { n n @ 1 - = }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for re .. [39;49m[32;49m
0x7fb6e779bfd8    488908                  mov [rax], rcx                                         [39;49m
[34;49m   : fibPTC? ( n | fn fn1 fn2 )  { fn 0 = [39;49m[33;40mfn1[39;49m[34;49m 0 = fn2 1 = } { n @ } { n n @ 1 - = }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for retu .. [39;49m[32;49m
0x7fb6e779bfdb    498d4710                lea rax, [r15+0x10]                                    [39;49m
[34;49m .. PTC? ( n | fn fn1 fn2 )  { fn 0 = fn1 [39;49m[33;40m0[39;49m[34;49m = fn2 1 = } { n @ } { n n @ 1 - = }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ [39;49m[32;49m
0x7fb6e779bfdf    48c7c100000000          mov rcx, 0x0                                           [39;49m
[34;49m .. C? ( n | fn fn1 fn2 )  { fn 0 = fn1 0 [39;49m[33;40m=[39;49m[34;49m fn2 1 = } { n @ } { n n @ 1 - = }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fb6e779bfe6    488908                  mov [rax], rcx                                         [39;49m
[34;49m ..  ( n | fn fn1 fn2 )  { fn 0 = fn1 0 = [39;49m[33;40mfn2[39;49m[34;49m 1 = } { n @ } { n n @ 1 - = }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fb6e779bfe9    498d4718                lea rax, [r15+0x18]                                    [39;49m
[34;49m ..  | fn fn1 fn2 )  { fn 0 = fn1 0 = fn2 [39;49m[33;40m1[39;49m[34;49m = } { n @ } { n n @ 1 - = }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fb6e779bfed    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m ..  fn fn1 fn2 )  { fn 0 = fn1 0 = fn2 1 [39;49m[33;40m=[39;49m[34;49m } { n @ } { n n @ 1 - = }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fb6e779bff4    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. 1 fn2 )  { fn 0 = fn1 0 = fn2 1 = } { [39;49m[33;40mn[39;49m[34;49m @ } { n n @ 1 - = }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fb6e779bff7    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e779bffb    4885c0                  test rax, rax                                          [39;49m[32;49m
0x7fb6e779bffe    0f8461000000            jz 0x7fb6e779c065          	< C.[34;49mfibPTC?[39;49m+167[32;49m >[39;49m[39;49m
[34;49m .. fn2 1 = } { n @ } { n n @ 1 - = }  {  [39;49m[33;40mfn1[39;49m[34;49m fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fb6e779c004    498d4710                lea rax, [r15+0x10]                                    [39;49m
[34;49m .. 1 = } { n @ } { n n @ 1 - = }  {  fn1 [39;49m[33;40mfn2[39;49m[34;49m @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fb6e779c008    498b4f18                mov rcx, [r15+0x18]                                    [39;49m
[34;49m .. { n @ } { n n @ 1 - = }  {  fn1 fn2 @ [39;49m[33;40m=[39;49m[34;49m  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fb6e779c00c    488908                  mov [rax], rcx                                         [39;49m
[34;49m ..  @ } { n n @ 1 - = }  {  fn1 fn2 @ =  [39;49m[33;40mfn2[39;49m[34;49m fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fb6e779c00f    498d4718                lea rax, [r15+0x18]                                    [39;49m
[34;49m ..  { n n @ 1 - = }  {  fn1 fn2 @ =  fn2 [39;49m[33;40mfn[39;49m[34;49m @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fb6e779c013    498b4f08                mov rcx, [r15+0x8]                                     [39;49m
[34;49m .. n @ 1 - = }  {  fn1 fn2 @ =  fn2 fn @ [39;49m[33;40m=[39;49m[34;49m  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fb6e779c017    488908                  mov [rax], rcx                                         [39;49m
[34;49m ..  1 - = }  {  fn1 fn2 @ =  fn2 fn @ =  [39;49m[33;40mfn[39;49m[34;49m fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fb6e779c01a    498d4708                lea rax, [r15+0x8]                                     [39;49m[32;49m
0x7fb6e779c01e    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e779c022    498906                  mov [r14], rax                                         [39;49m
[34;49m .. - = }  {  fn1 fn2 @ =  fn2 fn @ =  fn [39;49m[33;40mfn1[39;49m[34;49m @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fb6e779c025    498b4710                mov rax, [r15+0x10]                                    [39;49m
[34;49m ..  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ [39;49m[33;40mfn2[39;49m[34;49m @ + =  } for return fn @ ; [39;49m[32;49m
0x7fb6e779c029    498b4f18                mov rcx, [r15+0x18]                                    [39;49m
[34;49m .. 1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ [39;49m[33;40m+[39;49m[34;49m =  } for return fn @ ; [39;49m[32;49m
0x7fb6e779c02d    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fb6e779c030    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fb6e779c033    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fb6e779c036    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m .. fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + [39;49m[33;40m=[39;49m[34;49m  } for return fn @ ; [39;49m[32;49m
0x7fb6e779c03a    488908                  mov [rax], rcx                                         [39;49m
[34;49m ..  { fn 0 = fn1 0 = fn2 1 = } { n @ } { [39;49m[33;40mn[39;49m[34;49m n @ 1 - = }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fb6e779c03d    498d47f8                lea rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e779c041    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e779c045    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  fn 0 = fn1 0 = fn2 1 = } { n @ } { n [39;49m[33;40mn[39;49m[34;49m @ 1 - = }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fb6e779c048    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. 0 = fn1 0 = fn2 1 = } { n @ } { n n @ [39;49m[33;40m1[39;49m[34;49m - = }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fb6e779c04c    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m .. = fn1 0 = fn2 1 = } { n @ } { n n @ 1 [39;49m[33;40m-[39;49m[34;49m = }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fb6e779c053    482bc1                  sub rax, rcx                                           [39;49m[32;49m
0x7fb6e779c056    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fb6e779c059    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fb6e779c05c    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m .. fn1 0 = fn2 1 = } { n @ } { n n @ 1 - [39;49m[33;40m=[39;49m[34;49m }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fb6e779c060    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. 1 0 = fn2 1 = } { n @ } { n n @ 1 - = [39;49m[33;40m}[39;49m[34;49m  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fb6e779c063    eb92                    jmp 0x7fb6e779bff7         	< C.[34;49mfibPTC?[39;49m+57[32;49m >[39;49m[39;49m[32;49m
0x7fb6e779c065    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m .. fn fn1 @ fn2 @ + =  } for return fn @ [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fb6e779c069    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e779c06d    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m
[34;49m .. @ =  fn fn1 @ fn2 @ + =  } for return [39;49m[33;40mfn[39;49m[34;49m @ ; [39;49m[32;49m
0x7fb6e779c071    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e779c074    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'fibPTC?' :: codeSize = 182
Word : 0x00007fb6e4c687d0 :: Compiled at : 0x00007fb6e779bfbe
 =============================
::> 'wdiss' was called at namespaces/test/dev.csl 315.21 <::
 6765
 =============================
C_Syntax.[34;49mfibPTC2?[39;49m <:> csl compiled word
SourceCode for C_Syntax.[34;49mfibPTC2?[39;49m :> 
[34;49mint fibPTC2? ( REG n | REG fn, REG fn1, REG fn2 ) { for ( fn = 0, fn1 = 0, fn2 = 1 ; n ; n -- ) { fn1 = fn2 ; fn2 = fn ; fn = fn1 + fn2 ; } return fn ; } [39;49m
Source code file location of [34;49mfibPTC2?[39;49m : "namespaces/test/dev.csl" : 319.9 :: we are now at : namespaces/test/dev.csl : 329.13
Compiled with : optimizeOn, inlineOn, c_syntaxOn, infixOn, Jcc8 on
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xe77a1343 -- code size = 53 bytes
TypeSignature : 
 -----------------------------
Word :: C_Syntax.[34;49mfibPTC2?[39;49m : definition = 0x00007fb6e77a1343 : disassembly at namespaces/test/dev.csl : 329.13 :
[34;49m ..                                   int [39;49m[33;40mfibPTC2?[39;49m[34;49m ( REG n | REG fn, REG fn1, REG fn2 ) { for ( fn = 0, fn1 = 0, fn2 = 1 ; n ; n -- )  {  fn1 = .. [39;49m[32;49m
0x7fb6e77a1343    498b3e                  mov rdi, [r14]                                         [39;49m
[34;49m .. G fn, REG fn1, REG fn2 ) { for ( fn = [39;49m[33;40m0[39;49m[34;49m, fn1 = 0, fn2 = 1 ; n ; n -- )  {  fn1 = fn2 ; fn2 = fn ; fn = fn1 + fn2 ;  } return fn ; }  .. [39;49m[32;49m
0x7fb6e77a1346    48c7c600000000          mov rsi, 0x0                                           [39;49m
[34;49m ..  fn1, REG fn2 ) { for ( fn = 0, fn1 = [39;49m[33;40m0[39;49m[34;49m, fn2 = 1 ; n ; n -- )  {  fn1 = fn2 ; fn2 = fn ; fn = fn1 + fn2 ;  } return fn ; }  .. [39;49m[32;49m
0x7fb6e77a134d    48c7c200000000          mov rdx, 0x0                                           [39;49m
[34;49m ..  fn2 ) { for ( fn = 0, fn1 = 0, fn2 = [39;49m[33;40m1[39;49m[34;49m ; n ; n -- )  {  fn1 = fn2 ; fn2 = fn ; fn = fn1 + fn2 ;  } return fn ; }  .. [39;49m[32;49m
0x7fb6e77a1354    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m .. n2 ) { for ( fn = 0, fn1 = 0, fn2 = 1 [39;49m[33;40m;[39;49m[34;49m n ; n -- )  {  fn1 = fn2 ; fn2 = fn ; fn = fn1 + fn2 ;  } return fn ; }  .. [39;49m[32;49m
0x7fb6e77a135b    488bc7                  mov rax, rdi                                           [39;49m
[34;49m ..  = fn2 ; fn2 = fn ; fn = fn1 + fn2 ;  [39;49m[33;40m}[39;49m[34;49m return fn ; }  .. [39;49m[32;49m
0x7fb6e77a135e    4885ff                  test rdi, rdi                                          [39;49m
[34;49m .. n2 ) { for ( fn = 0, fn1 = 0, fn2 = 1 [39;49m[33;40m{[39;49m[34;49m n ; n -- )  {  fn1 = fn2 ; fn2 = fn ; fn = fn1 + fn2 ;  } return fn ; }  .. [39;49m[32;49m
0x7fb6e77a1361    7411                    jz 0xe77a1374                                          [39;49m
[34;49m .. fn1 = 0, fn2 = 1 ; n ; n -- )  {  fn1 [39;49m[33;40m=[39;49m[34;49m fn2 ; fn2 = fn ; fn = fn1 + fn2 ;  } return fn ; }  .. [39;49m[32;49m
0x7fb6e77a1363    488bd1                  mov rdx, rcx                                           [39;49m
[34;49m ..  = 1 ; n ; n -- )  {  fn1 = fn2 ; fn2 [39;49m[33;40m=[39;49m[34;49m fn ; fn = fn1 + fn2 ;  } return fn ; }  .. [39;49m[32;49m
0x7fb6e77a1366    488bce                  mov rcx, rsi                                           [39;49m
[34;49m .. )  {  fn1 = fn2 ; fn2 = fn ; fn = fn1 [39;49m[33;40m+[39;49m[34;49m fn2 ;  } return fn ; }  .. [39;49m[32;49m
0x7fb6e77a1369    4803d1                  add rdx, rcx                                           [39;49m
[34;49m ..  n -- )  {  fn1 = fn2 ; fn2 = fn ; fn [39;49m[33;40m=[39;49m[34;49m fn1 + fn2 ;  } return fn ; }  .. [39;49m[32;49m
0x7fb6e77a136c    488bf2                  mov rsi, rdx                                           [39;49m
[34;49m .. or ( fn = 0, fn1 = 0, fn2 = 1 ; n ; n [39;49m[33;40m--[39;49m[34;49m )  {  fn1 = fn2 ; fn2 = fn ; fn = fn1 + fn2 ;  } return fn ; }  .. [39;49m[32;49m
0x7fb6e77a136f    48ffcf                  dec rdi                                                [39;49m
[34;49m .. ( fn = 0, fn1 = 0, fn2 = 1 ; n ; n -- [39;49m[33;40m)[39;49m[34;49m  {  fn1 = fn2 ; fn2 = fn ; fn = fn1 + fn2 ;  } return fn ; }  .. [39;49m[32;49m
0x7fb6e77a1372    ebe7                    jmp 0x7fb6e77a135b         	< C_Syntax.[34;49mfibPTC2?[39;49m+24[32;49m >[39;49m[39;49m
[34;49m .. fn2 = fn ; fn = fn1 + fn2 ;  } return [39;49m[33;40mfn[39;49m[34;49m ; }  .. [39;49m[32;49m
0x7fb6e77a1374    498936                  mov [r14], rsi                                         [39;49m[32;49m
0x7fb6e77a1377    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'fibPTC2?' :: codeSize = 52
Word : 0x00007fb6e47e70b0 :: Compiled at : 0x00007fb6e77a1343
 =============================
::> 'wdiss' was called at namespaces/test/dev.csl 329.13 <::
 6765
 =============================
C.[34;49mfibPTC?[39;49m <:> csl compiled word
SourceCode for C.[34;49mfibPTC?[39;49m :> 
[34;49m: fibPTC? ( n | fn fn1 fn2 ) { fn 0 = fn1 0 = fn2 1 = } { n @ } { n n @ 1 - = } { fn1 fn2 @ = fn2 fn @ = fn fn1 @ fn2 @ + = } for return fn @ ; [39;49m
Source code file location of [34;49mfibPTC?[39;49m : "namespaces/test/dev0.csl" : 152.2 :: we are now at : namespaces/test/dev.csl : 331.14
Compiled with : optimizeOn, inlineOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xe779bfbe -- code size = 183 bytes
TypeSignature : 
 -----------------------------
Word :: C.[34;49mfibPTC?[39;49m : definition = 0x00007fb6e779bfbe : disassembly at namespaces/test/dev.csl : 331.14 :
[34;49m ..                                     : [39;49m[33;40mfibPTC?[39;49m[34;49m ( n | fn fn1 fn2 )  { fn 0 = fn1 0 = fn2 1 = } { n @ } { n n @ 1 - = }  {  fn1 fn2 @ =  fn2 f .. [39;49m[32;49m
0x7fb6e779bfbe    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fb6e779bfc2    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e779bfc6    4981c620000000          add r14, 0x20                                          [39;49m
[34;49m ..       : fibPTC? ( n | fn fn1 fn2 )  { [39;49m[33;40mfn[39;49m[34;49m 0 = fn1 0 = fn2 1 = } { n @ } { n n @ 1 - = }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } f .. [39;49m[32;49m
0x7fb6e779bfcd    498d4708                lea rax, [r15+0x8]                                     [39;49m
[34;49m ..    : fibPTC? ( n | fn fn1 fn2 )  { fn [39;49m[33;40m0[39;49m[34;49m = fn1 0 = fn2 1 = } { n @ } { n n @ 1 - = }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for  .. [39;49m[32;49m
0x7fb6e779bfd1    48c7c100000000          mov rcx, 0x0                                           [39;49m
[34;49m ..  : fibPTC? ( n | fn fn1 fn2 )  { fn 0 [39;49m[33;40m=[39;49m[34;49m fn1 0 = fn2 1 = } { n @ } { n n @ 1 - = }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for re .. [39;49m[32;49m
0x7fb6e779bfd8    488908                  mov [rax], rcx                                         [39;49m
[34;49m   : fibPTC? ( n | fn fn1 fn2 )  { fn 0 = [39;49m[33;40mfn1[39;49m[34;49m 0 = fn2 1 = } { n @ } { n n @ 1 - = }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for retu .. [39;49m[32;49m
0x7fb6e779bfdb    498d4710                lea rax, [r15+0x10]                                    [39;49m
[34;49m .. PTC? ( n | fn fn1 fn2 )  { fn 0 = fn1 [39;49m[33;40m0[39;49m[34;49m = fn2 1 = } { n @ } { n n @ 1 - = }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ [39;49m[32;49m
0x7fb6e779bfdf    48c7c100000000          mov rcx, 0x0                                           [39;49m
[34;49m .. C? ( n | fn fn1 fn2 )  { fn 0 = fn1 0 [39;49m[33;40m=[39;49m[34;49m fn2 1 = } { n @ } { n n @ 1 - = }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fb6e779bfe6    488908                  mov [rax], rcx                                         [39;49m
[34;49m ..  ( n | fn fn1 fn2 )  { fn 0 = fn1 0 = [39;49m[33;40mfn2[39;49m[34;49m 1 = } { n @ } { n n @ 1 - = }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fb6e779bfe9    498d4718                lea rax, [r15+0x18]                                    [39;49m
[34;49m ..  | fn fn1 fn2 )  { fn 0 = fn1 0 = fn2 [39;49m[33;40m1[39;49m[34;49m = } { n @ } { n n @ 1 - = }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fb6e779bfed    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m ..  fn fn1 fn2 )  { fn 0 = fn1 0 = fn2 1 [39;49m[33;40m=[39;49m[34;49m } { n @ } { n n @ 1 - = }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fb6e779bff4    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. 1 fn2 )  { fn 0 = fn1 0 = fn2 1 = } { [39;49m[33;40mn[39;49m[34;49m @ } { n n @ 1 - = }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fb6e779bff7    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e779bffb    4885c0                  test rax, rax                                          [39;49m[32;49m
0x7fb6e779bffe    0f8461000000            jz 0x7fb6e779c065          	< C.[34;49mfibPTC?[39;49m+167[32;49m >[39;49m[39;49m
[34;49m .. fn2 1 = } { n @ } { n n @ 1 - = }  {  [39;49m[33;40mfn1[39;49m[34;49m fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fb6e779c004    498d4710                lea rax, [r15+0x10]                                    [39;49m
[34;49m .. 1 = } { n @ } { n n @ 1 - = }  {  fn1 [39;49m[33;40mfn2[39;49m[34;49m @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fb6e779c008    498b4f18                mov rcx, [r15+0x18]                                    [39;49m
[34;49m .. { n @ } { n n @ 1 - = }  {  fn1 fn2 @ [39;49m[33;40m=[39;49m[34;49m  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fb6e779c00c    488908                  mov [rax], rcx                                         [39;49m
[34;49m ..  @ } { n n @ 1 - = }  {  fn1 fn2 @ =  [39;49m[33;40mfn2[39;49m[34;49m fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fb6e779c00f    498d4718                lea rax, [r15+0x18]                                    [39;49m
[34;49m ..  { n n @ 1 - = }  {  fn1 fn2 @ =  fn2 [39;49m[33;40mfn[39;49m[34;49m @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fb6e779c013    498b4f08                mov rcx, [r15+0x8]                                     [39;49m
[34;49m .. n @ 1 - = }  {  fn1 fn2 @ =  fn2 fn @ [39;49m[33;40m=[39;49m[34;49m  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fb6e779c017    488908                  mov [rax], rcx                                         [39;49m
[34;49m ..  1 - = }  {  fn1 fn2 @ =  fn2 fn @ =  [39;49m[33;40mfn[39;49m[34;49m fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fb6e779c01a    498d4708                lea rax, [r15+0x8]                                     [39;49m[32;49m
0x7fb6e779c01e    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e779c022    498906                  mov [r14], rax                                         [39;49m
[34;49m .. - = }  {  fn1 fn2 @ =  fn2 fn @ =  fn [39;49m[33;40mfn1[39;49m[34;49m @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fb6e779c025    498b4710                mov rax, [r15+0x10]                                    [39;49m
[34;49m ..  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ [39;49m[33;40mfn2[39;49m[34;49m @ + =  } for return fn @ ; [39;49m[32;49m
0x7fb6e779c029    498b4f18                mov rcx, [r15+0x18]                                    [39;49m
[34;49m .. 1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ [39;49m[33;40m+[39;49m[34;49m =  } for return fn @ ; [39;49m[32;49m
0x7fb6e779c02d    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fb6e779c030    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fb6e779c033    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fb6e779c036    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m .. fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + [39;49m[33;40m=[39;49m[34;49m  } for return fn @ ; [39;49m[32;49m
0x7fb6e779c03a    488908                  mov [rax], rcx                                         [39;49m
[34;49m ..  { fn 0 = fn1 0 = fn2 1 = } { n @ } { [39;49m[33;40mn[39;49m[34;49m n @ 1 - = }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fb6e779c03d    498d47f8                lea rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e779c041    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e779c045    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  fn 0 = fn1 0 = fn2 1 = } { n @ } { n [39;49m[33;40mn[39;49m[34;49m @ 1 - = }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fb6e779c048    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. 0 = fn1 0 = fn2 1 = } { n @ } { n n @ [39;49m[33;40m1[39;49m[34;49m - = }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fb6e779c04c    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m .. = fn1 0 = fn2 1 = } { n @ } { n n @ 1 [39;49m[33;40m-[39;49m[34;49m = }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fb6e779c053    482bc1                  sub rax, rcx                                           [39;49m[32;49m
0x7fb6e779c056    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fb6e779c059    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fb6e779c05c    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m .. fn1 0 = fn2 1 = } { n @ } { n n @ 1 - [39;49m[33;40m=[39;49m[34;49m }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fb6e779c060    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. 1 0 = fn2 1 = } { n @ } { n n @ 1 - = [39;49m[33;40m}[39;49m[34;49m  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fb6e779c063    eb92                    jmp 0x7fb6e779bff7         	< C.[34;49mfibPTC?[39;49m+57[32;49m >[39;49m[39;49m[32;49m
0x7fb6e779c065    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m .. fn fn1 @ fn2 @ + =  } for return fn @ [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fb6e779c069    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e779c06d    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m
[34;49m .. @ =  fn fn1 @ fn2 @ + =  } for return [39;49m[33;40mfn[39;49m[34;49m @ ; [39;49m[32;49m
0x7fb6e779c071    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e779c074    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'fibPTC?' :: codeSize = 182
Word : 0x00007fb6e4c687d0 :: Compiled at : 0x00007fb6e779bfbe
 =============================
::> 'wdiss' was called at namespaces/test/dev.csl 331.14 <::

 13

 fibPTC? :
Timer [ 1 ] : elapsed time = 0.026657987 seconds :: function : fibPTC? : called on args : 1 - 23 : 10000 reps

 =============================
User.[34;49m_fibn1[39;49m <:> csl compiled word
SourceCode for User.[34;49m_fibn1[39;49m :> 
[34;49m: _fibn1 ( n ) { n @ 2 < } { n @ } { n -- n @ _fibn1 n -- n @ _fibn1 + } ifElse return tos ; [39;49m
Source code file location of [34;49m_fibn1[39;49m : "namespaces/test/dev.csl" : 336.2 :: we are now at : namespaces/test/dev.csl : 337.20
Compiled with : optimizeOn, inlineOn, Jcc8 on
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xe77a1392 -- code size = 114 bytes
TypeSignature : 
 -----------------------------
Word :: User.[34;49m_fibn1[39;49m : definition = 0x00007fb6e77a1392 : disassembly at namespaces/test/dev.csl : 337.20 :
[34;49m ..                                     : [39;49m[33;40m_fibn1[39;49m[34;49m ( n ) { n @ 2 < } { n @ } { n -- n @ _fibn1 n -- n @ _fibn1 + } ifElse return tos ;  .. [39;49m[32;49m
0x7fb6e77a1392    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fb6e77a1396    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e77a139a    4981c608000000          add r14, 0x8                                           [39;49m
[34;49m ..                      : _fibn1 ( n ) { [39;49m[33;40mn[39;49m[34;49m @ 2 < } { n @ } { n -- n @ _fibn1 n -- n @ _fibn1 + } ifElse return tos ;  .. [39;49m[32;49m
0x7fb6e77a13a1    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m ..                : _fibn1 ( n ) { n @ 2 [39;49m[33;40m<[39;49m[34;49m } { n @ } { n -- n @ _fibn1 n -- n @ _fibn1 + } ifElse return tos ;  .. [39;49m[32;49m
0x7fb6e77a13a5    4883f802                cmp rax, 0x2                                           [39;49m[32;49m
0x7fb6e77a13a9    7d10                    jge 0xe77a13bb                                         [39;49m
[34;49m ..          : _fibn1 ( n ) { n @ 2 < } { [39;49m[33;40mn[39;49m[34;49m @ } { n -- n @ _fibn1 n -- n @ _fibn1 + } ifElse return tos ;  .. [39;49m[32;49m
0x7fb6e77a13ab    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e77a13af    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e77a13b3    498906                  mov [r14], rax                                         [39;49m
[34;49m ..      : _fibn1 ( n ) { n @ 2 < } { n @ [39;49m[33;40m}[39;49m[34;49m { n -- n @ _fibn1 n -- n @ _fibn1 + } ifElse return tos ;  .. [39;49m[32;49m
0x7fb6e77a13b6    e93d000000              jmp 0x7fb6e77a13f8         	< User.[34;49m_fibn1[39;49m+102[32;49m >[39;49m[39;49m
[34;49m   : _fibn1 ( n ) { n @ 2 < } { n @ } { n [39;49m[33;40m--[39;49m[34;49m n @ _fibn1 n -- n @ _fibn1 + } ifElse return tos ;  .. [39;49m[32;49m
0x7fb6e77a13bb    49ff4ff8                dec qword [r15-0x8]                                    [39;49m
[34;49m: _fibn1 ( n ) { n @ 2 < } { n @ } { n -- [39;49m[33;40mn[39;49m[34;49m @ _fibn1 n -- n @ _fibn1 + } ifElse return tos ;  .. [39;49m[32;49m
0x7fb6e77a13bf    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e77a13c3    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e77a13c7    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  ( n ) { n @ 2 < } { n @ } { n -- n @ [39;49m[33;40m_fibn1[39;49m[34;49m n -- n @ _fibn1 + } ifElse return tos ; [39;49m[32;49m
0x7fb6e77a13ca    e8c3ffffff              call 0x7fb6e77a1392        	< User.[34;49m_fibn1[39;49m : 0x00007fb6e77a1392[32;49m >[39;49m[39;49m
[34;49m .. n @ 2 < } { n @ } { n -- n @ _fibn1 n [39;49m[33;40m--[39;49m[34;49m n @ _fibn1 + } ifElse return tos ; [39;49m[32;49m
0x7fb6e77a13cf    49ff4ff8                dec qword [r15-0x8]                                    [39;49m
[34;49m ..  2 < } { n @ } { n -- n @ _fibn1 n -- [39;49m[33;40mn[39;49m[34;49m @ _fibn1 + } ifElse return tos ; [39;49m[32;49m
0x7fb6e77a13d3    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e77a13d7    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e77a13db    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  } { n @ } { n -- n @ _fibn1 n -- n @ [39;49m[33;40m_fibn1[39;49m[34;49m + } ifElse return tos ; [39;49m[32;49m
0x7fb6e77a13de    e8afffffff              call 0x7fb6e77a1392        	< User.[34;49m_fibn1[39;49m : 0x00007fb6e77a1392[32;49m >[39;49m[39;49m[32;49m
0x7fb6e77a13e3    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fb6e77a13e6    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fb6e77a13ea    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m .. @ } { n -- n @ _fibn1 n -- n @ _fibn1 [39;49m[33;40m+[39;49m[34;49m } ifElse return tos ; [39;49m[32;49m
0x7fb6e77a13ee    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fb6e77a13f1    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e77a13f5    498906                  mov [r14], rax                                         [39;49m
[34;49m .. n -- n @ _fibn1 + } ifElse return tos [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fb6e77a13f8    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e77a13fc    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e77a1400    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e77a1403    c3                      ret                                                    [39;49m
Word_Disassemble : word - '_fibn1' :: codeSize = 113
Word : 0x00007fb6e47eca80 :: Compiled at : 0x00007fb6e77a1392
 =============================
::> 'wdiss' was called at namespaces/test/dev.csl 337.20 <::
 6765 6765
 =============================
User.[34;49m_fib2[39;49m <:> csl compiled word
SourceCode for User.[34;49m_fib2[39;49m :> 
[34;49m: _fib2 dup 2 < ?< >:< dup -- _fib2 swap 2 - _fib2 + >; ; [39;49m
Source code file location of [34;49m_fib2[39;49m : "namespaces/test/dev.csl" : 349.2 :: we are now at : namespaces/test/dev.csl : 350.19
Compiled with : optimizeOn, inlineOn, Jcc8 on
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xe77a1546 -- code size = 137 bytes
TypeSignature : 
 -----------------------------
Word :: User.[34;49m_fib2[39;49m : definition = 0x00007fb6e77a1546 : disassembly at namespaces/test/dev.csl : 350.19 :
[34;49m ..                               : _fib2 [39;49m[33;40mdup[39;49m[34;49m 2 < ?< >:< dup -- _fib2 swap 2 - _fib2 + >; ;  .. [39;49m[32;49m
0x7fb6e77a1546    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fb6e77a1549    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e77a154d    498906                  mov [r14], rax                                         [39;49m
[34;49m ..                           : _fib2 dup [39;49m[33;40m2[39;49m[34;49m < ?< >:< dup -- _fib2 swap 2 - _fib2 + >; ;  .. [39;49m[32;49m
0x7fb6e77a1550    48c7c002000000          mov rax, 0x2                                           [39;49m[32;49m
0x7fb6e77a1557    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fb6e77a155a    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fb6e77a155d    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m ..                         : _fib2 dup 2 [39;49m[33;40m<[39;49m[34;49m ?< >:< dup -- _fib2 swap 2 - _fib2 + >; ;  .. [39;49m[32;49m
0x7fb6e77a1561    483bc1                  cmp rax, rcx                                           [39;49m[32;49m
0x7fb6e77a1564    7d05                    jge 0xe77a156b                                         [39;49m
[34;49m ..                    : _fib2 dup 2 < ?< [39;49m[33;40m>:<[39;49m[34;49m dup -- _fib2 swap 2 - _fib2 + >; ;  .. [39;49m[32;49m
0x7fb6e77a1566    e963000000              jmp 0x7fb6e77a15ce         	< User.[34;49m_fib2[39;49m+136[32;49m >[39;49m[39;49m
[34;49m ..                : _fib2 dup 2 < ?< >:< [39;49m[33;40mdup[39;49m[34;49m -- _fib2 swap 2 - _fib2 + >; ;  .. [39;49m[32;49m
0x7fb6e77a156b    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fb6e77a156e    4983c608                add r14, 0x8                                           [39;49m
[34;49m ..                       : _fib2 dup 2 < [39;49m[33;40m?<[39;49m[34;49m >:< dup -- _fib2 swap 2 - _fib2 + >; ;  .. [39;49m[32;49m
0x7fb6e77a1572    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e77a1575    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fb6e77a1578    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m ..            : _fib2 dup 2 < ?< >:< dup [39;49m[33;40m--[39;49m[34;49m _fib2 swap 2 - _fib2 + >; ;  .. [39;49m[32;49m
0x7fb6e77a157c    48ffc8                  dec rax                                                [39;49m[32;49m
0x7fb6e77a157f    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e77a1583    498906                  mov [r14], rax                                         [39;49m
[34;49m ..         : _fib2 dup 2 < ?< >:< dup -- [39;49m[33;40m_fib2[39;49m[34;49m swap 2 - _fib2 + >; ;  .. [39;49m[32;49m
0x7fb6e77a1586    e8bbffffff              call 0x7fb6e77a1546        	< User.[34;49m_fib2[39;49m : 0x00007fb6e77a1546[32;49m >[39;49m[39;49m
[34;49m ..   : _fib2 dup 2 < ?< >:< dup -- _fib2 [39;49m[33;40mswap[39;49m[34;49m 2 - _fib2 + >; ;  .. [39;49m[32;49m
0x7fb6e77a158b    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fb6e77a158e    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fb6e77a1592    49894ef8                mov [r14-0x8], rcx                                     [39;49m[32;49m
0x7fb6e77a1596    498906                  mov [r14], rax                                         [39;49m
[34;49m : _fib2 dup 2 < ?< >:< dup -- _fib2 swap [39;49m[33;40m2[39;49m[34;49m - _fib2 + >; ;  .. [39;49m[32;49m
0x7fb6e77a1599    48c7c002000000          mov rax, 0x2                                           [39;49m[32;49m
0x7fb6e77a15a0    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fb6e77a15a3    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fb6e77a15a6    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m .. b2 dup 2 < ?< >:< dup -- _fib2 swap 2 [39;49m[33;40m-[39;49m[34;49m _fib2 + >; ; [39;49m[32;49m
0x7fb6e77a15aa    482bc1                  sub rax, rcx                                           [39;49m[32;49m
0x7fb6e77a15ad    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e77a15b1    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  dup 2 < ?< >:< dup -- _fib2 swap 2 - [39;49m[33;40m_fib2[39;49m[34;49m + >; ; [39;49m[32;49m
0x7fb6e77a15b4    e88dffffff              call 0x7fb6e77a1546        	< User.[34;49m_fib2[39;49m : 0x00007fb6e77a1546[32;49m >[39;49m[39;49m[32;49m
0x7fb6e77a15b9    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fb6e77a15bc    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fb6e77a15c0    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m ..  < ?< >:< dup -- _fib2 swap 2 - _fib2 [39;49m[33;40m+[39;49m[34;49m >; ; [39;49m[32;49m
0x7fb6e77a15c4    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fb6e77a15c7    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e77a15cb    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  >:< dup -- _fib2 swap 2 - _fib2 + >; [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fb6e77a15ce    c3                      ret                                                    [39;49m
Word_Disassemble : word - '_fib2' :: codeSize = 136
Word : 0x00007fb6e47f35f0 :: Compiled at : 0x00007fb6e77a1546
 =============================
::> 'wdiss' was called at namespaces/test/dev.csl 350.19 <::

 6765
 =============================
User.[34;49m_fib3[39;49m <:> csl compiled word
SourceCode for User.[34;49m_fib3[39;49m :> 
[34;49m: _fib3 dup 2 < ?< >:< dup -- _fib3 swap 2 - _fib3 + >; ; [39;49m
Source code file location of [34;49m_fib3[39;49m : "namespaces/test/dev.csl" : 352.2 :: we are now at : namespaces/test/dev.csl : 358.19
Compiled with : optimizeOn, inlineOn, Jcc8 on
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xe77a15e3 -- code size = 137 bytes
TypeSignature : 
 -----------------------------
Word :: User.[34;49m_fib3[39;49m : definition = 0x00007fb6e77a15e3 : disassembly at namespaces/test/dev.csl : 358.19 :
[34;49m ..                              : _fib3  [39;49m[33;40mdup[39;49m[34;49m 2 <  ?< >:<  dup -- _fib3 swap 2 - _fib3 +  >;  ;  .. [39;49m[32;49m
0x7fb6e77a15e3    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fb6e77a15e6    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e77a15ea    498906                  mov [r14], rax                                         [39;49m
[34;49m ..                          : _fib3  dup [39;49m[33;40m2[39;49m[34;49m <  ?< >:<  dup -- _fib3 swap 2 - _fib3 +  >;  ;  .. [39;49m[32;49m
0x7fb6e77a15ed    48c7c002000000          mov rax, 0x2                                           [39;49m[32;49m
0x7fb6e77a15f4    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fb6e77a15f7    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fb6e77a15fa    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m ..                        : _fib3  dup 2 [39;49m[33;40m<[39;49m[34;49m  ?< >:<  dup -- _fib3 swap 2 - _fib3 +  >;  ;  .. [39;49m[32;49m
0x7fb6e77a15fe    483bc1                  cmp rax, rcx                                           [39;49m[32;49m
0x7fb6e77a1601    7d05                    jge 0xe77a1608                                         [39;49m
[34;49m ..                  : _fib3  dup 2 <  ?< [39;49m[33;40m>:<[39;49m[34;49m  dup -- _fib3 swap 2 - _fib3 +  >;  ;  .. [39;49m[32;49m
0x7fb6e77a1603    e963000000              jmp 0x7fb6e77a166b         	< User.[34;49m_fib3[39;49m+136[32;49m >[39;49m[39;49m
[34;49m ..             : _fib3  dup 2 <  ?< >:<  [39;49m[33;40mdup[39;49m[34;49m -- _fib3 swap 2 - _fib3 +  >;  ;  .. [39;49m[32;49m
0x7fb6e77a1608    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fb6e77a160b    4983c608                add r14, 0x8                                           [39;49m
[34;49m ..                     : _fib3  dup 2 <  [39;49m[33;40m?<[39;49m[34;49m >:<  dup -- _fib3 swap 2 - _fib3 +  >;  ;  .. [39;49m[32;49m
0x7fb6e77a160f    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e77a1612    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fb6e77a1615    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m ..         : _fib3  dup 2 <  ?< >:<  dup [39;49m[33;40m--[39;49m[34;49m _fib3 swap 2 - _fib3 +  >;  ;  .. [39;49m[32;49m
0x7fb6e77a1619    48ffc8                  dec rax                                                [39;49m[32;49m
0x7fb6e77a161c    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e77a1620    498906                  mov [r14], rax                                         [39;49m
[34;49m ..      : _fib3  dup 2 <  ?< >:<  dup -- [39;49m[33;40m_fib3[39;49m[34;49m swap 2 - _fib3 +  >;  ;  .. [39;49m[32;49m
0x7fb6e77a1623    e8bbffffff              call 0x7fb6e77a15e3        	< User.[34;49m_fib3[39;49m : 0x00007fb6e77a15e3[32;49m >[39;49m[39;49m
[34;49m   : _fib3  dup 2 <  ?< >:<  dup -- _fib3 [39;49m[33;40mswap[39;49m[34;49m 2 - _fib3 +  >;  ;  .. [39;49m[32;49m
0x7fb6e77a1628    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fb6e77a162b    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fb6e77a162f    49894ef8                mov [r14-0x8], rcx                                     [39;49m[32;49m
0x7fb6e77a1633    498906                  mov [r14], rax                                         [39;49m
[34;49m .. 3  dup 2 <  ?< >:<  dup -- _fib3 swap [39;49m[33;40m2[39;49m[34;49m - _fib3 +  >;  ; [39;49m[32;49m
0x7fb6e77a1636    48c7c002000000          mov rax, 0x2                                           [39;49m[32;49m
0x7fb6e77a163d    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fb6e77a1640    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fb6e77a1643    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m ..  dup 2 <  ?< >:<  dup -- _fib3 swap 2 [39;49m[33;40m-[39;49m[34;49m _fib3 +  >;  ; [39;49m[32;49m
0x7fb6e77a1647    482bc1                  sub rax, rcx                                           [39;49m[32;49m
0x7fb6e77a164a    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e77a164e    498906                  mov [r14], rax                                         [39;49m
[34;49m .. up 2 <  ?< >:<  dup -- _fib3 swap 2 - [39;49m[33;40m_fib3[39;49m[34;49m +  >;  ; [39;49m[32;49m
0x7fb6e77a1651    e88dffffff              call 0x7fb6e77a15e3        	< User.[34;49m_fib3[39;49m : 0x00007fb6e77a15e3[32;49m >[39;49m[39;49m[32;49m
0x7fb6e77a1656    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fb6e77a1659    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fb6e77a165d    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m ..   ?< >:<  dup -- _fib3 swap 2 - _fib3 [39;49m[33;40m+[39;49m[34;49m  >;  ; [39;49m[32;49m
0x7fb6e77a1661    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fb6e77a1664    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e77a1668    498906                  mov [r14], rax                                         [39;49m
[34;49m .. <  dup -- _fib3 swap 2 - _fib3 +  >;  [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fb6e77a166b    c3                      ret                                                    [39;49m
Word_Disassemble : word - '_fib3' :: codeSize = 136
Word : 0x00007fb6e47f4720 :: Compiled at : 0x00007fb6e77a15e3
 =============================
::> 'wdiss' was called at namespaces/test/dev.csl 358.19 <::
 6765
 =============================
User.[34;49m_fib4[39;49m <:> csl compiled word
SourceCode for User.[34;49m_fib4[39;49m :> 
[34;49m: _fib4 { dup 2 >= } { dup -- _fib4 swap 2 - _fib4 + } if2 ; [39;49m
Source code file location of [34;49m_fib4[39;49m : "namespaces/test/dev.csl" : 360.2 :: we are now at : namespaces/test/dev.csl : 366.19
Compiled with : optimizeOn, inlineOn, Jcc8 on
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xe77a1680 -- code size = 126 bytes
TypeSignature : 
 -----------------------------
Word :: User.[34;49m_fib4[39;49m : definition = 0x00007fb6e77a1680 : disassembly at namespaces/test/dev.csl : 366.19 :
[34;49m ..                            : _fib4  { [39;49m[33;40mdup[39;49m[34;49m 2 >= } {  dup -- _fib4 swap 2 - _fib4 +  } if2  ;  .. [39;49m[32;49m
0x7fb6e77a1680    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fb6e77a1683    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e77a1687    498906                  mov [r14], rax                                         [39;49m
[34;49m ..                        : _fib4  { dup [39;49m[33;40m2[39;49m[34;49m >= } {  dup -- _fib4 swap 2 - _fib4 +  } if2  ;  .. [39;49m[32;49m
0x7fb6e77a168a    48c7c002000000          mov rax, 0x2                                           [39;49m[32;49m
0x7fb6e77a1691    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fb6e77a1694    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fb6e77a1697    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m ..                      : _fib4  { dup 2 [39;49m[33;40m>=[39;49m[34;49m } {  dup -- _fib4 swap 2 - _fib4 +  } if2  ;  .. [39;49m[32;49m
0x7fb6e77a169b    483bc1                  cmp rax, rcx                                           [39;49m[32;49m
0x7fb6e77a169e    7c5d                    jl 0xe77a16fd                                          [39;49m
[34;49m ..              : _fib4  { dup 2 >= } {  [39;49m[33;40mdup[39;49m[34;49m -- _fib4 swap 2 - _fib4 +  } if2  ;  .. [39;49m[32;49m
0x7fb6e77a16a0    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fb6e77a16a3    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e77a16a7    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m ..          : _fib4  { dup 2 >= } {  dup [39;49m[33;40m--[39;49m[34;49m _fib4 swap 2 - _fib4 +  } if2  ;  .. [39;49m[32;49m
0x7fb6e77a16ab    48ffc8                  dec rax                                                [39;49m[32;49m
0x7fb6e77a16ae    4983c608                add r14, 0x8                                           [39;49m
[34;49m ..                 : _fib4  { dup 2 >= } [39;49m[33;40m{[39;49m[34;49m  dup -- _fib4 swap 2 - _fib4 +  } if2  ;  .. [39;49m[32;49m
0x7fb6e77a16b2    498906                  mov [r14], rax                                         [39;49m
[34;49m ..       : _fib4  { dup 2 >= } {  dup -- [39;49m[33;40m_fib4[39;49m[34;49m swap 2 - _fib4 +  } if2  ;  .. [39;49m[32;49m
0x7fb6e77a16b5    e8c6ffffff              call 0x7fb6e77a1680        	< User.[34;49m_fib4[39;49m : 0x00007fb6e77a1680[32;49m >[39;49m[39;49m
[34;49m .. : _fib4  { dup 2 >= } {  dup -- _fib4 [39;49m[33;40mswap[39;49m[34;49m 2 - _fib4 +  } if2  ;  .. [39;49m[32;49m
0x7fb6e77a16ba    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fb6e77a16bd    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fb6e77a16c1    49894ef8                mov [r14-0x8], rcx                                     [39;49m[32;49m
0x7fb6e77a16c5    498906                  mov [r14], rax                                         [39;49m
[34;49m .. b4  { dup 2 >= } {  dup -- _fib4 swap [39;49m[33;40m2[39;49m[34;49m - _fib4 +  } if2  ; [39;49m[32;49m
0x7fb6e77a16c8    48c7c002000000          mov rax, 0x2                                           [39;49m[32;49m
0x7fb6e77a16cf    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fb6e77a16d2    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fb6e77a16d5    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m ..   { dup 2 >= } {  dup -- _fib4 swap 2 [39;49m[33;40m-[39;49m[34;49m _fib4 +  } if2  ; [39;49m[32;49m
0x7fb6e77a16d9    482bc1                  sub rax, rcx                                           [39;49m[32;49m
0x7fb6e77a16dc    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e77a16e0    498906                  mov [r14], rax                                         [39;49m
[34;49m .. { dup 2 >= } {  dup -- _fib4 swap 2 - [39;49m[33;40m_fib4[39;49m[34;49m +  } if2  ; [39;49m[32;49m
0x7fb6e77a16e3    e898ffffff              call 0x7fb6e77a1680        	< User.[34;49m_fib4[39;49m : 0x00007fb6e77a1680[32;49m >[39;49m[39;49m[32;49m
0x7fb6e77a16e8    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fb6e77a16eb    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fb6e77a16ef    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m .. 2 >= } {  dup -- _fib4 swap 2 - _fib4 [39;49m[33;40m+[39;49m[34;49m  } if2  ; [39;49m[32;49m
0x7fb6e77a16f3    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fb6e77a16f6    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e77a16fa    498906                  mov [r14], rax                                         [39;49m
[34;49m .. dup -- _fib4 swap 2 - _fib4 +  } if2  [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fb6e77a16fd    c3                      ret                                                    [39;49m
Word_Disassemble : word - '_fib4' :: codeSize = 125
Word : 0x00007fb6e47f5850 :: Compiled at : 0x00007fb6e77a1680
 =============================
::> 'wdiss' was called at namespaces/test/dev.csl 366.19 <::
 6765
 =============================
C.[34;49mcfib2_O3[39;49m <:> C compiled primitive
SourceCode for C.[34;49mcfib2_O3[39;49m :> 
C Primitive
 -----------------------------
Word :: C.[34;49mcfib2_O3[39;49m : definition = 0x0000562d8980e6d0 : disassembly at namespaces/test/dev.csl : 375.21 :[32;49m
0x562d8980e6d4    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x562d8980e6d7    4c89f7                  mov rdi, r14                                           [39;49m[32;49m
0x562d8980e6da    4885c0                  test rax, rax                                          [39;49m[32;49m
0x562d8980e6dd    7429                    jz 0x8980e708                                          [39;49m[32;49m
0x562d8980e6df    be01000000              mov esi, 0x1                                           [39;49m[32;49m
0x562d8980e6e4    31d2                    xor edx, edx                                           [39;49m[32;49m
0x562d8980e6e6    eb0b                    jmp 0x562d8980e6f3         	< C compiler code >        [39;49m[32;49m
0x562d8980e6e8    0f1f840000000000        nop [rax+rax]                                          [39;49m[32;49m
0x562d8980e6f0    4889ca                  mov rdx, rcx                                           [39;49m[32;49m
0x562d8980e6f3    488d0c32                lea rcx, [rdx+rsi]                                     [39;49m[32;49m
0x562d8980e6f7    4889d6                  mov rsi, rdx                                           [39;49m[32;49m
0x562d8980e6fa    4883e801                sub rax, 0x1                                           [39;49m[32;49m
0x562d8980e6fe    75f0                    jnz 0x8980e6f0                                         [39;49m[32;49m
0x562d8980e700    48890f                  mov [rdi], rcx                                         [39;49m[32;49m
0x562d8980e703    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'cfib2_O3' :: codeSize = 48
Word : 0x00007fb6e7834058 :: Compiled at : 0x0000562d8980e6d0
 =============================
::> 'wdiss' was called at namespaces/test/dev.csl 375.21 <::

 0x00007fb6e7cd3a58
 The fibonacci sequence 15 :
 C -O3 :  610
Timer [ 1 ] : elapsed time = 0.000006391 seconds
 no locals fib  :  610
Timer [ 1 ] : elapsed time = 0.000009152 seconds
 locals fib1    :  610
Timer [ 1 ] : elapsed time = 0.000008892 seconds
 no locals fib2 :  610
Timer [ 1 ] : elapsed time = 0.000009872 seconds
 no locals fib3 :  610
Timer [ 1 ] : elapsed time = 0.000008952 seconds
 fibPTC?        :  610
Timer [ 1 ] : elapsed time = 0.000003270 seconds
 fibPTC2?        :  610
Timer [ 1 ] : elapsed time = 0.000004111 seconds
 0x00007fb6e7cd3a58
 The fibonacci sequence 30 :
 C -O3 :  832040
Timer [ 1 ] : elapsed time = 0.001710732 seconds
 no locals fib  :  832040
Timer [ 1 ] : elapsed time = 0.006324038 seconds
 locals fib1    :  832040
Timer [ 1 ] : elapsed time = 0.006004068 seconds
 no locals fib2 :  832040
Timer [ 1 ] : elapsed time = 0.007192991 seconds
 no locals fib3 :  832040
Timer [ 1 ] : elapsed time = 0.006393581 seconds
 fibPTC?        :  832040
Timer [ 1 ] : elapsed time = 0.000004081 seconds
 fibPTC2?        :  832040
Timer [ 1 ] : elapsed time = 0.000003981 seconds
 =============================
Interpreter.[34;49mtfib3[39;49m <:> csl compiled word
SourceCode for Interpreter.[34;49mtfib3[39;49m :> 
[34;49m: tfib3 ( n | m ) "Cfib2_O3 : " ps 1 ti m 1 = { m @ n @ <= } { m @ cfib2_O3 p m ++ } while 1 time nl nl "locals fibPTC? : " ps 1 ti m 1 = { m @ n @ <= } { m @ fibPTC? p m ++ } while 1 time nl nl "locals fibPTC2? : " ps 1 ti m 1 = { m @ n @ <= } { m @ fibPTC2? p m ++ } while 1 time nl nl "Cfib2_O3 : " ps 1 ti m 1 = { m @ n @ <= } { m @ cfib2_O3 p m ++ } while 1 time nl nl ; [39;49m
Source code file location of [34;49mtfib3[39;49m : "namespaces/test/dev.csl" : 425.2 :: we are now at : namespaces/test/dev.csl : 431.19
Compiled with : optimizeOn, inlineOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xe77a2dd9 -- code size = 904 bytes
TypeSignature : 
 -----------------------------
Word :: Interpreter.[34;49mtfib3[39;49m : definition = 0x00007fb6e77a2dd9 : disassembly at namespaces/test/dev.csl : 431.19 :
[34;49m ..                                     : [39;49m[33;40mtfib3[39;49m[34;49m ( n | m )  "Cfib2_O3 : " ps 1 ti m 1 = { m @ n @ <= } { m @ cfib2_O3 p m ++ } while 1 time nl n .. [39;49m[32;49m
0x7fb6e77a2dd9    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fb6e77a2ddd    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e77a2de1    4981c610000000          add r14, 0x10                                          [39;49m
[34;49m ..                    : tfib3 ( n | m )  [39;49m[33;40m"[39;49m[34;49mCfib2_O3 : " ps 1 ti m 1 = { m @ n @ <= } { m @ cfib2_O3 p m ++ } while 1 time nl nl "locals fibPTC? .. [39;49m[32;49m
0x7fb6e77a2de8    48b8238808e6b67f0000    mov rax, 0x7fb6e6088823    	[32;49m< string : '[39;49m[39;49mCfib2_O3       : [39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fb6e77a2df2    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e77a2df6    498906                  mov [r14], rax                                         [39;49m
[34;49m ..      : tfib3 ( n | m )  "Cfib2_O3 : " [39;49m[33;40mps[39;49m[34;49m 1 ti m 1 = { m @ n @ <= } { m @ cfib2_O3 p m ++ } while 1 time nl nl "locals fibPTC? : " ps 1 ti m .. [39;49m[32;49m
0x7fb6e77a2df9    49b97da393e7b67f0000    mov r9, 0x7fb6e793a37d                                 [39;49m[32;49m
0x7fb6e77a2e03    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fb6e793a37d[32;49m >[39;49m[39;49m
[34;49m ..   : tfib3 ( n | m )  "Cfib2_O3 : " ps [39;49m[33;40m1[39;49m[34;49m ti m 1 = { m @ n @ <= } { m @ cfib2_O3 p m ++ } while 1 time nl nl "locals fibPTC? : " ps 1 ti m 1  .. [39;49m[32;49m
0x7fb6e77a2e06    48c7c001000000          mov rax, 0x1                                           [39;49m[32;49m
0x7fb6e77a2e0d    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e77a2e11    498906                  mov [r14], rax                                         [39;49m
[34;49m .. : tfib3 ( n | m )  "Cfib2_O3 : " ps 1 [39;49m[33;40mti[39;49m[34;49m m 1 = { m @ n @ <= } { m @ cfib2_O3 p m ++ } while 1 time nl nl "locals fibPTC? : " ps 1 ti m 1 =  .. [39;49m[32;49m
0x7fb6e77a2e14    49b94eb693e7b67f0000    mov r9, 0x7fb6e793b64e                                 [39;49m[32;49m
0x7fb6e77a2e1e    49ffd1                  call r9                    	< System.[34;49mti[39;49m : 0x00007fb6e793b64e[32;49m >[39;49m[39;49m
[34;49m : tfib3 ( n | m )  "Cfib2_O3 : " ps 1 ti [39;49m[33;40mm[39;49m[34;49m 1 = { m @ n @ <= } { m @ cfib2_O3 p m ++ } while 1 time nl nl "locals fibPTC? : " ps 1 ti m 1 = { m .. [39;49m[32;49m
0x7fb6e77a2e21    498d4708                lea rax, [r15+0x8]                                     [39;49m
[34;49m .. b3 ( n | m )  "Cfib2_O3 : " ps 1 ti m [39;49m[33;40m1[39;49m[34;49m = { m @ n @ <= } { m @ cfib2_O3 p m ++ } while 1 time nl nl "locals fibPTC? : " ps 1 ti m 1 = { m @ .. [39;49m[32;49m
0x7fb6e77a2e25    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m ..  ( n | m )  "Cfib2_O3 : " ps 1 ti m 1 [39;49m[33;40m=[39;49m[34;49m { m @ n @ <= } { m @ cfib2_O3 p m ++ } while 1 time nl nl "locals fibPTC? : " ps 1 ti m 1 = { m @ n .. [39;49m[32;49m
0x7fb6e77a2e2c    488908                  mov [rax], rcx                                         [39;49m
[34;49m ..  | m )  "Cfib2_O3 : " ps 1 ti m 1 = { [39;49m[33;40mm[39;49m[34;49m @ n @ <= } { m @ cfib2_O3 p m ++ } while 1 time nl nl "locals fibPTC? : " ps 1 ti m 1 = { m @ n @ < .. [39;49m[32;49m
0x7fb6e77a2e2f    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m ..  )  "Cfib2_O3 : " ps 1 ti m 1 = { m @ [39;49m[33;40mn[39;49m[34;49m @ <= } { m @ cfib2_O3 p m ++ } while 1 time nl nl "locals fibPTC? : " ps 1 ti m 1 = { m @ n @ <= }  .. [39;49m[32;49m
0x7fb6e77a2e33    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m
[34;49m .. "Cfib2_O3 : " ps 1 ti m 1 = { m @ n @ [39;49m[33;40m<=[39;49m[34;49m } { m @ cfib2_O3 p m ++ } while 1 time nl nl "locals fibPTC? : " ps 1 ti m 1 = { m @ n @ <= } { m  .. [39;49m[32;49m
0x7fb6e77a2e37    483bc1                  cmp rax, rcx                                           [39;49m[32;49m
0x7fb6e77a2e3a    0f8f35000000            jg 0x7fb6e77a2e75          	< Interpreter.[34;49mtfib3[39;49m+156[32;49m >[39;49m[39;49m
[34;49m .. O3 : " ps 1 ti m 1 = { m @ n @ <= } { [39;49m[33;40mm[39;49m[34;49m @ cfib2_O3 p m ++ } while 1 time nl nl "locals fibPTC? : " ps 1 ti m 1 = { m @ n @ <= } { m @ fibPT .. [39;49m[32;49m
0x7fb6e77a2e40    498b4708                mov rax, [r15+0x8]                                     [39;49m[32;49m
0x7fb6e77a2e44    4983c608                add r14, 0x8                                           [39;49m
[34;49m .. ib2_O3 : " ps 1 ti m 1 = { m @ n @ <= [39;49m[33;40m}[39;49m[34;49m { m @ cfib2_O3 p m ++ } while 1 time nl nl "locals fibPTC? : " ps 1 ti m 1 = { m @ n @ <= } { m @ f .. [39;49m[32;49m
0x7fb6e77a2e48    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  " ps 1 ti m 1 = { m @ n @ <= } { m @ [39;49m[33;40mcfib2_O3[39;49m[34;49m p m ++ } while 1 time nl nl "locals fibPTC? : " ps 1 ti m 1 = { m @ n @ <= } { m @ fibPTC? p .. [39;49m[32;49m
0x7fb6e77a2e4b    49b8d0e680892d560000    mov r8, 0x562d8980e6d0                                 [39;49m[32;49m
0x7fb6e77a2e55    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e77a2e5f    49ffd1                  call r9                    	< C.[34;49mcfib2_O3[39;49m : 0x0000562d8980e6d0[32;49m >[39;49m[39;49m
[34;49m .. i m 1 = { m @ n @ <= } { m @ cfib2_O3 [39;49m[33;40mp[39;49m[34;49m m ++ } while 1 time nl nl "locals fibPTC? : " ps 1 ti m 1 = { m @ n @ <= } { m @ fibPTC? p m ++ } w .. [39;49m[32;49m
0x7fb6e77a2e62    49b9d9a593e7b67f0000    mov r9, 0x7fb6e793a5d9                                 [39;49m[32;49m
0x7fb6e77a2e6c    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fb6e793a5d9[32;49m >[39;49m[39;49m
[34;49m .. 1 = { m @ n @ <= } { m @ cfib2_O3 p m [39;49m[33;40m++[39;49m[34;49m } while 1 time nl nl "locals fibPTC? : " ps 1 ti m 1 = { m @ n @ <= } { m @ fibPTC? p m ++ } while .. [39;49m[32;49m
0x7fb6e77a2e6f    49ff4708                inc qword [r15+0x8]                                    [39;49m
[34;49m ..  { m @ n @ <= } { m @ cfib2_O3 p m ++ [39;49m[33;40m}[39;49m[34;49m while 1 time nl nl "locals fibPTC? : " ps 1 ti m 1 = { m @ n @ <= } { m @ fibPTC? p m ++ } while 1  .. [39;49m[32;49m
0x7fb6e77a2e73    ebba                    jmp 0x7fb6e77a2e2f         	< Interpreter.[34;49mtfib3[39;49m+86[32;49m >[39;49m[39;49m
[34;49m ..  @ <= } { m @ cfib2_O3 p m ++ } while [39;49m[33;40m1[39;49m[34;49m time nl nl "locals fibPTC? : " ps 1 ti m 1 = { m @ n @ <= } { m @ fibPTC? p m ++ } while 1 time nl  .. [39;49m[32;49m
0x7fb6e77a2e75    48c7c001000000          mov rax, 0x1                                           [39;49m[32;49m
0x7fb6e77a2e7c    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e77a2e80    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  <= } { m @ cfib2_O3 p m ++ } while 1 [39;49m[33;40mtime[39;49m[34;49m nl nl "locals fibPTC? : " ps 1 ti m 1 = { m @ n @ <= } { m @ fibPTC? p m ++ } while 1 time nl nl .. [39;49m[32;49m
0x7fb6e77a2e83    49b8209d80892d560000    mov r8, 0x562d89809d20                                 [39;49m[32;49m
0x7fb6e77a2e8d    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e77a2e97    49ffd1                  call r9                    	< System.[34;49mtime[39;49m : 0x0000562d89809d20[32;49m >[39;49m[39;49m
[34;49m ..  { m @ cfib2_O3 p m ++ } while 1 time [39;49m[33;40mnl[39;49m[34;49m nl "locals fibPTC? : " ps 1 ti m 1 = { m @ n @ <= } { m @ fibPTC? p m ++ } while 1 time nl nl "loc .. [39;49m[32;49m
0x7fb6e77a2e9a    49b8e08080892d560000    mov r8, 0x562d898080e0                                 [39;49m[32;49m
0x7fb6e77a2ea4    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e77a2eae    49ffd1                  call r9                    	< Io.[34;49mnewline[39;49m : 0x0000562d898080e0[32;49m >[39;49m[39;49m
[34;49m .. m @ cfib2_O3 p m ++ } while 1 time nl [39;49m[33;40mnl[39;49m[34;49m "locals fibPTC? : " ps 1 ti m 1 = { m @ n @ <= } { m @ fibPTC? p m ++ } while 1 time nl nl "locals .. [39;49m[32;49m
0x7fb6e77a2eb1    49b8e08080892d560000    mov r8, 0x562d898080e0                                 [39;49m[32;49m
0x7fb6e77a2ebb    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e77a2ec5    49ffd1                  call r9                    	< Io.[34;49mnewline[39;49m : 0x0000562d898080e0[32;49m >[39;49m[39;49m
[34;49m ..  cfib2_O3 p m ++ } while 1 time nl nl [39;49m[33;40m"[39;49m[34;49mlocals fibPTC? : " ps 1 ti m 1 = { m @ n @ <= } { m @ fibPTC? p m ++ } while 1 time nl nl "locals fi .. [39;49m[32;49m
0x7fb6e77a2ec8    48b8638808e6b67f0000    mov rax, 0x7fb6e6088863    	[32;49m< string : '[39;49m[39;49mlocals fibPTC? : [39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fb6e77a2ed2    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e77a2ed6    498906                  mov [r14], rax                                         [39;49m
[34;49m .. hile 1 time nl nl "locals fibPTC? : " [39;49m[33;40mps[39;49m[34;49m 1 ti m 1 = { m @ n @ <= } { m @ fibPTC? p m ++ } while 1 time nl nl "locals fibPTC2? : " ps 1 ti m .. [39;49m[32;49m
0x7fb6e77a2ed9    49b97da393e7b67f0000    mov r9, 0x7fb6e793a37d                                 [39;49m[32;49m
0x7fb6e77a2ee3    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fb6e793a37d[32;49m >[39;49m[39;49m
[34;49m .. e 1 time nl nl "locals fibPTC? : " ps [39;49m[33;40m1[39;49m[34;49m ti m 1 = { m @ n @ <= } { m @ fibPTC? p m ++ } while 1 time nl nl "locals fibPTC2? : " ps 1 ti m 1  .. [39;49m[32;49m
0x7fb6e77a2ee6    48c7c001000000          mov rax, 0x1                                           [39;49m[32;49m
0x7fb6e77a2eed    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e77a2ef1    498906                  mov [r14], rax                                         [39;49m
[34;49m .. 1 time nl nl "locals fibPTC? : " ps 1 [39;49m[33;40mti[39;49m[34;49m m 1 = { m @ n @ <= } { m @ fibPTC? p m ++ } while 1 time nl nl "locals fibPTC2? : " ps 1 ti m 1 =  .. [39;49m[32;49m
0x7fb6e77a2ef4    49b94eb693e7b67f0000    mov r9, 0x7fb6e793b64e                                 [39;49m[32;49m
0x7fb6e77a2efe    49ffd1                  call r9                    	< System.[34;49mti[39;49m : 0x00007fb6e793b64e[32;49m >[39;49m[39;49m
[34;49m .. ime nl nl "locals fibPTC? : " ps 1 ti [39;49m[33;40mm[39;49m[34;49m 1 = { m @ n @ <= } { m @ fibPTC? p m ++ } while 1 time nl nl "locals fibPTC2? : " ps 1 ti m 1 = { m .. [39;49m[32;49m
0x7fb6e77a2f01    498d4708                lea rax, [r15+0x8]                                     [39;49m
[34;49m .. e nl nl "locals fibPTC? : " ps 1 ti m [39;49m[33;40m1[39;49m[34;49m = { m @ n @ <= } { m @ fibPTC? p m ++ } while 1 time nl nl "locals fibPTC2? : " ps 1 ti m 1 = { m @ .. [39;49m[32;49m
0x7fb6e77a2f05    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m .. nl nl "locals fibPTC? : " ps 1 ti m 1 [39;49m[33;40m=[39;49m[34;49m { m @ n @ <= } { m @ fibPTC? p m ++ } while 1 time nl nl "locals fibPTC2? : " ps 1 ti m 1 = { m @ n .. [39;49m[32;49m
0x7fb6e77a2f0c    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. l "locals fibPTC? : " ps 1 ti m 1 = { [39;49m[33;40mm[39;49m[34;49m @ n @ <= } { m @ fibPTC? p m ++ } while 1 time nl nl "locals fibPTC2? : " ps 1 ti m 1 = { m @ n @ < .. [39;49m[32;49m
0x7fb6e77a2f0f    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m .. ocals fibPTC? : " ps 1 ti m 1 = { m @ [39;49m[33;40mn[39;49m[34;49m @ <= } { m @ fibPTC? p m ++ } while 1 time nl nl "locals fibPTC2? : " ps 1 ti m 1 = { m @ n @ <= }  .. [39;49m[32;49m
0x7fb6e77a2f13    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m
[34;49m .. s fibPTC? : " ps 1 ti m 1 = { m @ n @ [39;49m[33;40m<=[39;49m[34;49m } { m @ fibPTC? p m ++ } while 1 time nl nl "locals fibPTC2? : " ps 1 ti m 1 = { m @ n @ <= } { m  .. [39;49m[32;49m
0x7fb6e77a2f17    483bc1                  cmp rax, rcx                                           [39;49m[32;49m
0x7fb6e77a2f1a    0f8f2b000000            jg 0x7fb6e77a2f4b          	< Interpreter.[34;49mtfib3[39;49m+370[32;49m >[39;49m[39;49m
[34;49m .. C? : " ps 1 ti m 1 = { m @ n @ <= } { [39;49m[33;40mm[39;49m[34;49m @ fibPTC? p m ++ } while 1 time nl nl "locals fibPTC2? : " ps 1 ti m 1 = { m @ n @ <= } { m @ fibPT .. [39;49m[32;49m
0x7fb6e77a2f20    498b4708                mov rax, [r15+0x8]                                     [39;49m[32;49m
0x7fb6e77a2f24    4983c608                add r14, 0x8                                           [39;49m
[34;49m .. ibPTC? : " ps 1 ti m 1 = { m @ n @ <= [39;49m[33;40m}[39;49m[34;49m { m @ fibPTC? p m ++ } while 1 time nl nl "locals fibPTC2? : " ps 1 ti m 1 = { m @ n @ <= } { m @ f .. [39;49m[32;49m
0x7fb6e77a2f28    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  " ps 1 ti m 1 = { m @ n @ <= } { m @ [39;49m[33;40mfibPTC?[39;49m[34;49m p m ++ } while 1 time nl nl "locals fibPTC2? : " ps 1 ti m 1 = { m @ n @ <= } { m @ fibPTC2?  .. [39;49m[32;49m
0x7fb6e77a2f2b    49b9bebf79e7b67f0000    mov r9, 0x7fb6e779bfbe                                 [39;49m[32;49m
0x7fb6e77a2f35    49ffd1                  call r9                    	< C.[34;49mfibPTC?[39;49m : 0x00007fb6e779bfbe[32;49m >[39;49m[39;49m
[34;49m .. ti m 1 = { m @ n @ <= } { m @ fibPTC? [39;49m[33;40mp[39;49m[34;49m m ++ } while 1 time nl nl "locals fibPTC2? : " ps 1 ti m 1 = { m @ n @ <= } { m @ fibPTC2? p m ++ } .. [39;49m[32;49m
0x7fb6e77a2f38    49b9d9a593e7b67f0000    mov r9, 0x7fb6e793a5d9                                 [39;49m[32;49m
0x7fb6e77a2f42    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fb6e793a5d9[32;49m >[39;49m[39;49m
[34;49m ..  1 = { m @ n @ <= } { m @ fibPTC? p m [39;49m[33;40m++[39;49m[34;49m } while 1 time nl nl "locals fibPTC2? : " ps 1 ti m 1 = { m @ n @ <= } { m @ fibPTC2? p m ++ } whi .. [39;49m[32;49m
0x7fb6e77a2f45    49ff4708                inc qword [r15+0x8]                                    [39;49m
[34;49m .. = { m @ n @ <= } { m @ fibPTC? p m ++ [39;49m[33;40m}[39;49m[34;49m while 1 time nl nl "locals fibPTC2? : " ps 1 ti m 1 = { m @ n @ <= } { m @ fibPTC2? p m ++ } while  .. [39;49m[32;49m
0x7fb6e77a2f49    ebc4                    jmp 0x7fb6e77a2f0f         	< Interpreter.[34;49mtfib3[39;49m+310[32;49m >[39;49m[39;49m
[34;49m .. n @ <= } { m @ fibPTC? p m ++ } while [39;49m[33;40m1[39;49m[34;49m time nl nl "locals fibPTC2? : " ps 1 ti m 1 = { m @ n @ <= } { m @ fibPTC2? p m ++ } while 1 time n .. [39;49m[32;49m
0x7fb6e77a2f4b    48c7c001000000          mov rax, 0x1                                           [39;49m[32;49m
0x7fb6e77a2f52    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e77a2f56    498906                  mov [r14], rax                                         [39;49m
[34;49m .. @ <= } { m @ fibPTC? p m ++ } while 1 [39;49m[33;40mtime[39;49m[34;49m nl nl "locals fibPTC2? : " ps 1 ti m 1 = { m @ n @ <= } { m @ fibPTC2? p m ++ } while 1 time nl  .. [39;49m[32;49m
0x7fb6e77a2f59    49b8209d80892d560000    mov r8, 0x562d89809d20                                 [39;49m[32;49m
0x7fb6e77a2f63    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e77a2f6d    49ffd1                  call r9                    	< System.[34;49mtime[39;49m : 0x0000562d89809d20[32;49m >[39;49m[39;49m
[34;49m .. } { m @ fibPTC? p m ++ } while 1 time [39;49m[33;40mnl[39;49m[34;49m nl "locals fibPTC2? : " ps 1 ti m 1 = { m @ n @ <= } { m @ fibPTC2? p m ++ } while 1 time nl nl "C .. [39;49m[32;49m
0x7fb6e77a2f70    49b8e08080892d560000    mov r8, 0x562d898080e0                                 [39;49m[32;49m
0x7fb6e77a2f7a    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e77a2f84    49ffd1                  call r9                    	< Io.[34;49mnewline[39;49m : 0x0000562d898080e0[32;49m >[39;49m[39;49m
[34;49m ..  m @ fibPTC? p m ++ } while 1 time nl [39;49m[33;40mnl[39;49m[34;49m "locals fibPTC2? : " ps 1 ti m 1 = { m @ n @ <= } { m @ fibPTC2? p m ++ } while 1 time nl nl "Cfib .. [39;49m[32;49m
0x7fb6e77a2f87    49b8e08080892d560000    mov r8, 0x562d898080e0                                 [39;49m[32;49m
0x7fb6e77a2f91    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e77a2f9b    49ffd1                  call r9                    	< Io.[34;49mnewline[39;49m : 0x0000562d898080e0[32;49m >[39;49m[39;49m
[34;49m .. @ fibPTC? p m ++ } while 1 time nl nl [39;49m[33;40m"[39;49m[34;49mlocals fibPTC2? : " ps 1 ti m 1 = { m @ n @ <= } { m @ fibPTC2? p m ++ } while 1 time nl nl "Cfib2_O .. [39;49m[32;49m
0x7fb6e77a2f9e    48b8a48808e6b67f0000    mov rax, 0x7fb6e60888a4    	[32;49m< string : '[39;49m[39;49mlocals fibPTC2? : [39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fb6e77a2fa8    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e77a2fac    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ile 1 time nl nl "locals fibPTC2? : " [39;49m[33;40mps[39;49m[34;49m 1 ti m 1 = { m @ n @ <= } { m @ fibPTC2? p m ++ } while 1 time nl nl "Cfib2_O3 : " ps 1 ti m 1 = { .. [39;49m[32;49m
0x7fb6e77a2faf    49b97da393e7b67f0000    mov r9, 0x7fb6e793a37d                                 [39;49m[32;49m
0x7fb6e77a2fb9    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fb6e793a37d[32;49m >[39;49m[39;49m
[34;49m ..  1 time nl nl "locals fibPTC2? : " ps [39;49m[33;40m1[39;49m[34;49m ti m 1 = { m @ n @ <= } { m @ fibPTC2? p m ++ } while 1 time nl nl "Cfib2_O3 : " ps 1 ti m 1 = { m  .. [39;49m[32;49m
0x7fb6e77a2fbc    48c7c001000000          mov rax, 0x1                                           [39;49m[32;49m
0x7fb6e77a2fc3    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e77a2fc7    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  time nl nl "locals fibPTC2? : " ps 1 [39;49m[33;40mti[39;49m[34;49m m 1 = { m @ n @ <= } { m @ fibPTC2? p m ++ } while 1 time nl nl "Cfib2_O3 : " ps 1 ti m 1 = { m @  .. [39;49m[32;49m
0x7fb6e77a2fca    49b94eb693e7b67f0000    mov r9, 0x7fb6e793b64e                                 [39;49m[32;49m
0x7fb6e77a2fd4    49ffd1                  call r9                    	< System.[34;49mti[39;49m : 0x00007fb6e793b64e[32;49m >[39;49m[39;49m
[34;49m .. me nl nl "locals fibPTC2? : " ps 1 ti [39;49m[33;40mm[39;49m[34;49m 1 = { m @ n @ <= } { m @ fibPTC2? p m ++ } while 1 time nl nl "Cfib2_O3 : " ps 1 ti m 1 = { m @ n @ .. [39;49m[32;49m
0x7fb6e77a2fd7    498d4708                lea rax, [r15+0x8]                                     [39;49m
[34;49m ..  nl nl "locals fibPTC2? : " ps 1 ti m [39;49m[33;40m1[39;49m[34;49m = { m @ n @ <= } { m @ fibPTC2? p m ++ } while 1 time nl nl "Cfib2_O3 : " ps 1 ti m 1 = { m @ n @ < .. [39;49m[32;49m
0x7fb6e77a2fdb    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m .. l nl "locals fibPTC2? : " ps 1 ti m 1 [39;49m[33;40m=[39;49m[34;49m { m @ n @ <= } { m @ fibPTC2? p m ++ } while 1 time nl nl "Cfib2_O3 : " ps 1 ti m 1 = { m @ n @ <=  .. [39;49m[32;49m
0x7fb6e77a2fe2    488908                  mov [rax], rcx                                         [39;49m
[34;49m ..  "locals fibPTC2? : " ps 1 ti m 1 = { [39;49m[33;40mm[39;49m[34;49m @ n @ <= } { m @ fibPTC2? p m ++ } while 1 time nl nl "Cfib2_O3 : " ps 1 ti m 1 = { m @ n @ <= } {  .. [39;49m[32;49m
0x7fb6e77a2fe5    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m .. cals fibPTC2? : " ps 1 ti m 1 = { m @ [39;49m[33;40mn[39;49m[34;49m @ <= } { m @ fibPTC2? p m ++ } while 1 time nl nl "Cfib2_O3 : " ps 1 ti m 1 = { m @ n @ <= } { m @  .. [39;49m[32;49m
0x7fb6e77a2fe9    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m
[34;49m ..  fibPTC2? : " ps 1 ti m 1 = { m @ n @ [39;49m[33;40m<=[39;49m[34;49m } { m @ fibPTC2? p m ++ } while 1 time nl nl "Cfib2_O3 : " ps 1 ti m 1 = { m @ n @ <= } { m @ cfib .. [39;49m[32;49m
0x7fb6e77a2fed    483bc1                  cmp rax, rcx                                           [39;49m[32;49m
0x7fb6e77a2ff0    0f8f2b000000            jg 0x7fb6e77a3021          	< Interpreter.[34;49mtfib3[39;49m+584[32;49m >[39;49m[39;49m
[34;49m .. 2? : " ps 1 ti m 1 = { m @ n @ <= } { [39;49m[33;40mm[39;49m[34;49m @ fibPTC2? p m ++ } while 1 time nl nl "Cfib2_O3 : " ps 1 ti m 1 = { m @ n @ <= } { m @ cfib2_O3 p  .. [39;49m[32;49m
0x7fb6e77a2ff6    498b4708                mov rax, [r15+0x8]                                     [39;49m[32;49m
0x7fb6e77a2ffa    4983c608                add r14, 0x8                                           [39;49m
[34;49m .. bPTC2? : " ps 1 ti m 1 = { m @ n @ <= [39;49m[33;40m}[39;49m[34;49m { m @ fibPTC2? p m ++ } while 1 time nl nl "Cfib2_O3 : " ps 1 ti m 1 = { m @ n @ <= } { m @ cfib2_O .. [39;49m[32;49m
0x7fb6e77a2ffe    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  " ps 1 ti m 1 = { m @ n @ <= } { m @ [39;49m[33;40mfibPTC2?[39;49m[34;49m p m ++ } while 1 time nl nl "Cfib2_O3 : " ps 1 ti m 1 = { m @ n @ <= } { m @ cfib2_O3 p m ++ .. [39;49m[32;49m
0x7fb6e77a3001    49b943137ae7b67f0000    mov r9, 0x7fb6e77a1343                                 [39;49m[32;49m
0x7fb6e77a300b    49ffd1                  call r9                    	< C_Syntax.[34;49mfibPTC2?[39;49m : 0x00007fb6e77a1343[32;49m >[39;49m[39;49m
[34;49m .. i m 1 = { m @ n @ <= } { m @ fibPTC2? [39;49m[33;40mp[39;49m[34;49m m ++ } while 1 time nl nl "Cfib2_O3 : " ps 1 ti m 1 = { m @ n @ <= } { m @ cfib2_O3 p m ++ } while  .. [39;49m[32;49m
0x7fb6e77a300e    49b9d9a593e7b67f0000    mov r9, 0x7fb6e793a5d9                                 [39;49m[32;49m
0x7fb6e77a3018    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fb6e793a5d9[32;49m >[39;49m[39;49m
[34;49m .. 1 = { m @ n @ <= } { m @ fibPTC2? p m [39;49m[33;40m++[39;49m[34;49m } while 1 time nl nl "Cfib2_O3 : " ps 1 ti m 1 = { m @ n @ <= } { m @ cfib2_O3 p m ++ } while 1 ti .. [39;49m[32;49m
0x7fb6e77a301b    49ff4708                inc qword [r15+0x8]                                    [39;49m
[34;49m ..  { m @ n @ <= } { m @ fibPTC2? p m ++ [39;49m[33;40m}[39;49m[34;49m while 1 time nl nl "Cfib2_O3 : " ps 1 ti m 1 = { m @ n @ <= } { m @ cfib2_O3 p m ++ } while 1 time  .. [39;49m[32;49m
0x7fb6e77a301f    ebc4                    jmp 0x7fb6e77a2fe5         	< Interpreter.[34;49mtfib3[39;49m+524[32;49m >[39;49m[39;49m
[34;49m ..  @ <= } { m @ fibPTC2? p m ++ } while [39;49m[33;40m1[39;49m[34;49m time nl nl "Cfib2_O3 : " ps 1 ti m 1 = { m @ n @ <= } { m @ cfib2_O3 p m ++ } while 1 time nl nl ;  .. [39;49m[32;49m
0x7fb6e77a3021    48c7c001000000          mov rax, 0x1                                           [39;49m[32;49m
0x7fb6e77a3028    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e77a302c    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  <= } { m @ fibPTC2? p m ++ } while 1 [39;49m[33;40mtime[39;49m[34;49m nl nl "Cfib2_O3 : " ps 1 ti m 1 = { m @ n @ <= } { m @ cfib2_O3 p m ++ } while 1 time nl nl ;  .. [39;49m[32;49m
0x7fb6e77a302f    49b8209d80892d560000    mov r8, 0x562d89809d20                                 [39;49m[32;49m
0x7fb6e77a3039    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e77a3043    49ffd1                  call r9                    	< System.[34;49mtime[39;49m : 0x0000562d89809d20[32;49m >[39;49m[39;49m
[34;49m ..  { m @ fibPTC2? p m ++ } while 1 time [39;49m[33;40mnl[39;49m[34;49m nl "Cfib2_O3 : " ps 1 ti m 1 = { m @ n @ <= } { m @ cfib2_O3 p m ++ } while 1 time nl nl ;  .. [39;49m[32;49m
0x7fb6e77a3046    49b8e08080892d560000    mov r8, 0x562d898080e0                                 [39;49m[32;49m
0x7fb6e77a3050    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e77a305a    49ffd1                  call r9                    	< Io.[34;49mnewline[39;49m : 0x0000562d898080e0[32;49m >[39;49m[39;49m
[34;49m .. m @ fibPTC2? p m ++ } while 1 time nl [39;49m[33;40mnl[39;49m[34;49m "Cfib2_O3 : " ps 1 ti m 1 = { m @ n @ <= } { m @ cfib2_O3 p m ++ } while 1 time nl nl ;  .. [39;49m[32;49m
0x7fb6e77a305d    49b8e08080892d560000    mov r8, 0x562d898080e0                                 [39;49m[32;49m
0x7fb6e77a3067    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e77a3071    49ffd1                  call r9                    	< Io.[34;49mnewline[39;49m : 0x0000562d898080e0[32;49m >[39;49m[39;49m
[34;49m ..  fibPTC2? p m ++ } while 1 time nl nl [39;49m[33;40m"[39;49m[34;49mCfib2_O3 : " ps 1 ti m 1 = { m @ n @ <= } { m @ cfib2_O3 p m ++ } while 1 time nl nl ;  .. [39;49m[32;49m
0x7fb6e77a3074    48b8e68808e6b67f0000    mov rax, 0x7fb6e60888e6    	[32;49m< string : '[39;49m[39;49mCfib2_O3       : [39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fb6e77a307e    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e77a3082    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ++ } while 1 time nl nl "Cfib2_O3 : " [39;49m[33;40mps[39;49m[34;49m 1 ti m 1 = { m @ n @ <= } { m @ cfib2_O3 p m ++ } while 1 time nl nl ;  .. [39;49m[32;49m
0x7fb6e77a3085    49b97da393e7b67f0000    mov r9, 0x7fb6e793a37d                                 [39;49m[32;49m
0x7fb6e77a308f    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fb6e793a37d[32;49m >[39;49m[39;49m
[34;49m .. } while 1 time nl nl "Cfib2_O3 : " ps [39;49m[33;40m1[39;49m[34;49m ti m 1 = { m @ n @ <= } { m @ cfib2_O3 p m ++ } while 1 time nl nl ;  .. [39;49m[32;49m
0x7fb6e77a3092    48c7c001000000          mov rax, 0x1                                           [39;49m[32;49m
0x7fb6e77a3099    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e77a309d    498906                  mov [r14], rax                                         [39;49m
[34;49m .. while 1 time nl nl "Cfib2_O3 : " ps 1 [39;49m[33;40mti[39;49m[34;49m m 1 = { m @ n @ <= } { m @ cfib2_O3 p m ++ } while 1 time nl nl ;  .. [39;49m[32;49m
0x7fb6e77a30a0    49b94eb693e7b67f0000    mov r9, 0x7fb6e793b64e                                 [39;49m[32;49m
0x7fb6e77a30aa    49ffd1                  call r9                    	< System.[34;49mti[39;49m : 0x00007fb6e793b64e[32;49m >[39;49m[39;49m
[34;49m .. le 1 time nl nl "Cfib2_O3 : " ps 1 ti [39;49m[33;40mm[39;49m[34;49m 1 = { m @ n @ <= } { m @ cfib2_O3 p m ++ } while 1 time nl nl ;  .. [39;49m[32;49m
0x7fb6e77a30ad    498d4708                lea rax, [r15+0x8]                                     [39;49m
[34;49m ..  1 time nl nl "Cfib2_O3 : " ps 1 ti m [39;49m[33;40m1[39;49m[34;49m = { m @ n @ <= } { m @ cfib2_O3 p m ++ } while 1 time nl nl ;  .. [39;49m[32;49m
0x7fb6e77a30b1    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m ..  time nl nl "Cfib2_O3 : " ps 1 ti m 1 [39;49m[33;40m=[39;49m[34;49m { m @ n @ <= } { m @ cfib2_O3 p m ++ } while 1 time nl nl ;  .. [39;49m[32;49m
0x7fb6e77a30b8    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. e nl nl "Cfib2_O3 : " ps 1 ti m 1 = { [39;49m[33;40mm[39;49m[34;49m @ n @ <= } { m @ cfib2_O3 p m ++ } while 1 time nl nl ;  .. [39;49m[32;49m
0x7fb6e77a30bb    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m ..  nl "Cfib2_O3 : " ps 1 ti m 1 = { m @ [39;49m[33;40mn[39;49m[34;49m @ <= } { m @ cfib2_O3 p m ++ } while 1 time nl nl ;  .. [39;49m[32;49m
0x7fb6e77a30bf    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m
[34;49m .. "Cfib2_O3 : " ps 1 ti m 1 = { m @ n @ [39;49m[33;40m<=[39;49m[34;49m } { m @ cfib2_O3 p m ++ } while 1 time nl nl ;  .. [39;49m[32;49m
0x7fb6e77a30c3    483bc1                  cmp rax, rcx                                           [39;49m[32;49m
0x7fb6e77a30c6    0f8f35000000            jg 0x7fb6e77a3101          	< Interpreter.[34;49mtfib3[39;49m+808[32;49m >[39;49m[39;49m
[34;49m .. O3 : " ps 1 ti m 1 = { m @ n @ <= } { [39;49m[33;40mm[39;49m[34;49m @ cfib2_O3 p m ++ } while 1 time nl nl ;  .. [39;49m[32;49m
0x7fb6e77a30cc    498b4708                mov rax, [r15+0x8]                                     [39;49m[32;49m
0x7fb6e77a30d0    4983c608                add r14, 0x8                                           [39;49m
[34;49m .. ib2_O3 : " ps 1 ti m 1 = { m @ n @ <= [39;49m[33;40m}[39;49m[34;49m { m @ cfib2_O3 p m ++ } while 1 time nl nl ;  .. [39;49m[32;49m
0x7fb6e77a30d4    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  " ps 1 ti m 1 = { m @ n @ <= } { m @ [39;49m[33;40mcfib2_O3[39;49m[34;49m p m ++ } while 1 time nl nl ;  .. [39;49m[32;49m
0x7fb6e77a30d7    49b8d0e680892d560000    mov r8, 0x562d8980e6d0                                 [39;49m[32;49m
0x7fb6e77a30e1    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e77a30eb    49ffd1                  call r9                    	< C.[34;49mcfib2_O3[39;49m : 0x0000562d8980e6d0[32;49m >[39;49m[39;49m
[34;49m .. i m 1 = { m @ n @ <= } { m @ cfib2_O3 [39;49m[33;40mp[39;49m[34;49m m ++ } while 1 time nl nl ;  .. [39;49m[32;49m
0x7fb6e77a30ee    49b9d9a593e7b67f0000    mov r9, 0x7fb6e793a5d9                                 [39;49m[32;49m
0x7fb6e77a30f8    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fb6e793a5d9[32;49m >[39;49m[39;49m
[34;49m .. 1 = { m @ n @ <= } { m @ cfib2_O3 p m [39;49m[33;40m++[39;49m[34;49m } while 1 time nl nl ;  .. [39;49m[32;49m
0x7fb6e77a30fb    49ff4708                inc qword [r15+0x8]                                    [39;49m
[34;49m ..  { m @ n @ <= } { m @ cfib2_O3 p m ++ [39;49m[33;40m}[39;49m[34;49m while 1 time nl nl ;  .. [39;49m[32;49m
0x7fb6e77a30ff    ebba                    jmp 0x7fb6e77a30bb         	< Interpreter.[34;49mtfib3[39;49m+738[32;49m >[39;49m[39;49m
[34;49m ..  @ <= } { m @ cfib2_O3 p m ++ } while [39;49m[33;40m1[39;49m[34;49m time nl nl ;  .. [39;49m[32;49m
0x7fb6e77a3101    48c7c001000000          mov rax, 0x1                                           [39;49m[32;49m
0x7fb6e77a3108    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e77a310c    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  <= } { m @ cfib2_O3 p m ++ } while 1 [39;49m[33;40mtime[39;49m[34;49m nl nl ;  .. [39;49m[32;49m
0x7fb6e77a310f    49b8209d80892d560000    mov r8, 0x562d89809d20                                 [39;49m[32;49m
0x7fb6e77a3119    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e77a3123    49ffd1                  call r9                    	< System.[34;49mtime[39;49m : 0x0000562d89809d20[32;49m >[39;49m[39;49m
[34;49m ..  { m @ cfib2_O3 p m ++ } while 1 time [39;49m[33;40mnl[39;49m[34;49m nl ;  .. [39;49m[32;49m
0x7fb6e77a3126    49b8e08080892d560000    mov r8, 0x562d898080e0                                 [39;49m[32;49m
0x7fb6e77a3130    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e77a313a    49ffd1                  call r9                    	< Io.[34;49mnewline[39;49m : 0x0000562d898080e0[32;49m >[39;49m[39;49m
[34;49m .. m @ cfib2_O3 p m ++ } while 1 time nl [39;49m[33;40mnl[39;49m[34;49m ;  .. [39;49m[32;49m
0x7fb6e77a313d    49b8e08080892d560000    mov r8, 0x562d898080e0                                 [39;49m[32;49m
0x7fb6e77a3147    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e77a3151    49ffd1                  call r9                    	< Io.[34;49mnewline[39;49m : 0x0000562d898080e0[32;49m >[39;49m[39;49m
[34;49m ..  cfib2_O3 p m ++ } while 1 time nl nl [39;49m[33;40m;[39;49m[34;49m  .. [39;49m[32;49m
0x7fb6e77a3154    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e77a3158    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e77a315c    4983ee08                sub r14, 0x8                                           [39;49m[32;49m
0x7fb6e77a3160    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'tfib3' :: codeSize = 903
Word : 0x00007fb6e4830190 :: Compiled at : 0x00007fb6e77a2dd9
 =============================
::> 'wdiss' was called at namespaces/test/dev.csl 431.19 <::

 The fibonacci sequence:: first : 30 ...
 Cfib_O3         :  1 1 2 3 5 8 13 21 34 55 89 144 233 377 610 987 1597 2584 4181 6765 10946 17711 28657 46368 75025 121393 196418 317811 514229
Timer [ 1 ] : elapsed time = 0.002728453 seconds

 Cfib            :  1 1 2 3 5 8 13 21 34 55 89 144 233 377 610 987 1597 2584 4181 6765 10946 17711 28657 46368 75025 121393 196418 317811 514229
Timer [ 1 ] : elapsed time = 0.002722691 seconds

 Cfib_O3         :  1 1 2 3 5 8 13 21 34 55 89 144 233 377 610 987 1597 2584 4181 6765 10946 17711 28657 46368 75025 121393 196418 317811 514229
Timer [ 1 ] : elapsed time = 0.002729372 seconds

 no locals _fib  :  1 1 2 3 5 8 13 21 34 55 89 144 233 377 610 987 1597 2584 4181 6765 10946 17711 28657 46368 75025 121393 196418 317811 514229
Timer [ 1 ] : elapsed time = 0.010365697 seconds

 locals   _fibn0 :  1 1 2 3 5 8 13 21 34 55 89 144 233 377 610 987 1597 2584 4181 6765 10946 17711 28657 46368 75025 121393 196418 317811 514229
Timer [ 1 ] : elapsed time = 0.011259385 seconds

 locals   _fibn1 :  1 1 2 3 5 8 13 21 34 55 89 144 233 377 610 987 1597 2584 4181 6765 10946 17711 28657 46368 75025 121393 196418 317811 514229
Timer [ 1 ] : elapsed time = 0.010194515 seconds

 locals   _fib1  :  1 1 2 3 5 8 13 21 34 55 89 144 233 377 610 987 1597 2584 4181 6765 10946 17711 28657 46368 75025 121393 196418 317811 514229
Timer [ 1 ] : elapsed time = 0.010121859 seconds

 no locals _fib2 :  1 1 2 3 5 8 13 21 34 55 89 144 233 377 610 987 1597 2584 4181 6765 10946 17711 28657 46368 75025 121393 196418 317811 514229
Timer [ 1 ] : elapsed time = 0.011730853 seconds

 no locals _fib3 :  1 1 2 3 5 8 13 21 34 55 89 144 233 377 610 987 1597 2584 4181 6765 10946 17711 28657 46368 75025 121393 196418 317811 514229
Timer [ 1 ] : elapsed time = 0.010389212 seconds

 no locals _fib4 :  1 1 2 3 5 8 13 21 34 55 89 144 233 377 610 987 1597 2584 4181 6765 10946 17711 28657 46368 75025 121393 196418 317811 514229
Timer [ 1 ] : elapsed time = 0.009497174 seconds

 fibPTC?  :  1 1 2 3 5 8 13 21 34 55 89 144 233 377 610 987 1597 2584 4181 6765 10946 17711 28657 46368 75025 121393 196418 317811 514229
Timer [ 1 ] : elapsed time = 0.000109180 seconds

 fibPTC2?  :  1 1 2 3 5 8 13 21 34 55 89 144 233 377 610 987 1597 2584 4181 6765 10946 17711 28657 46368 75025 121393 196418 317811 514229
Timer [ 1 ] : elapsed time = 0.000095227 seconds

 Cfib_O3        :  1 1 2 3 5 8 13 21 34 55 89 144 233 377 610 987 1597 2584 4181 6765 10946 17711 28657 46368 75025 121393 196418 317811 514229
Timer [ 1 ] : elapsed time = 0.002703488 seconds

 no locals _fib4 :  1 1 2 3 5 8 13 21 34 55 89 144 233 377 610 987 1597 2584 4181 6765 10946 17711 28657 46368 75025 121393 196418 317811 514229
Timer [ 1 ] : elapsed time = 0.009506705 seconds

 locals _fibn1   :  1 1 2 3 5 8 13 21 34 55 89 144 233 377 610 987 1597 2584 4181 6765 10946 17711 28657 46368 75025 121393 196418 317811 514229
Timer [ 1 ] : elapsed time = 0.010195785 seconds

 no locals _fib3 :  1 1 2 3 5 8 13 21 34 55 89 144 233 377 610 987 1597 2584 4181 6765 10946 17711 28657 46368 75025 121393 196418 317811 514229
Timer [ 1 ] : elapsed time = 0.010369857 seconds

 Cfib2_O3       :  1 1 2 3 5 8 13 21 34 55 89 144 233 377 610 987 1597 2584 4181 6765 10946 17711 28657 46368 75025 121393 196418 317811 514229 832040 1346269 2178309 3524578 5702887 9227465 14930352 24157817 39088169 63245986 102334155 165580141 267914296 433494437 701408733 1134903170 1836311903 2971215073 4807526976 7778742049 12586269025 20365011074 32951280099 53316291173 86267571272 139583862445 225851433717 365435296162 591286729879 956722026041 1548008755920 2504730781961 4052739537881 6557470319842 10610209857723 17167680177565 27777890035288 44945570212853 72723460248141 117669030460994 190392490709135 308061521170129 498454011879264 806515533049393 1304969544928657 2111485077978050 3416454622906707 5527939700884757 8944394323791464 14472334024676221 23416728348467685 37889062373143906 61305790721611591 99194853094755497 160500643816367088 259695496911122585 420196140727489673 679891637638612258 1100087778366101931 1779979416004714189 2880067194370816120 4660046610375530309 7540113804746346429
Timer [ 1 ] : elapsed time = 0.000333783 seconds

 locals fibPTC? :  1 1 2 3 5 8 13 21 34 55 89 144 233 377 610 987 1597 2584 4181 6765 10946 17711 28657 46368 75025 121393 196418 317811 514229 832040 1346269 2178309 3524578 5702887 9227465 14930352 24157817 39088169 63245986 102334155 165580141 267914296 433494437 701408733 1134903170 1836311903 2971215073 4807526976 7778742049 12586269025 20365011074 32951280099 53316291173 86267571272 139583862445 225851433717 365435296162 591286729879 956722026041 1548008755920 2504730781961 4052739537881 6557470319842 10610209857723 17167680177565 27777890035288 44945570212853 72723460248141 117669030460994 190392490709135 308061521170129 498454011879264 806515533049393 1304969544928657 2111485077978050 3416454622906707 5527939700884757 8944394323791464 14472334024676221 23416728348467685 37889062373143906 61305790721611591 99194853094755497 160500643816367088 259695496911122585 420196140727489673 679891637638612258 1100087778366101931 1779979416004714189 2880067194370816120 4660046610375530309 7540113804746346429
Timer [ 1 ] : elapsed time = 0.000332022 seconds

 locals fibPTC2? :  1 1 2 3 5 8 13 21 34 55 89 144 233 377 610 987 1597 2584 4181 6765 10946 17711 28657 46368 75025 121393 196418 317811 514229 832040 1346269 2178309 3524578 5702887 9227465 14930352 24157817 39088169 63245986 102334155 165580141 267914296 433494437 701408733 1134903170 1836311903 2971215073 4807526976 7778742049 12586269025 20365011074 32951280099 53316291173 86267571272 139583862445 225851433717 365435296162 591286729879 956722026041 1548008755920 2504730781961 4052739537881 6557470319842 10610209857723 17167680177565 27777890035288 44945570212853 72723460248141 117669030460994 190392490709135 308061521170129 498454011879264 806515533049393 1304969544928657 2111485077978050 3416454622906707 5527939700884757 8944394323791464 14472334024676221 23416728348467685 37889062373143906 61305790721611591 99194853094755497 160500643816367088 259695496911122585 420196140727489673 679891637638612258 1100087778366101931 1779979416004714189 2880067194370816120 4660046610375530309 7540113804746346429
Timer [ 1 ] : elapsed time = 0.000331002 seconds

 Cfib2_O3       :  1 1 2 3 5 8 13 21 34 55 89 144 233 377 610 987 1597 2584 4181 6765 10946 17711 28657 46368 75025 121393 196418 317811 514229 832040 1346269 2178309 3524578 5702887 9227465 14930352 24157817 39088169 63245986 102334155 165580141 267914296 433494437 701408733 1134903170 1836311903 2971215073 4807526976 7778742049 12586269025 20365011074 32951280099 53316291173 86267571272 139583862445 225851433717 365435296162 591286729879 956722026041 1548008755920 2504730781961 4052739537881 6557470319842 10610209857723 17167680177565 27777890035288 44945570212853 72723460248141 117669030460994 190392490709135 308061521170129 498454011879264 806515533049393 1304969544928657 2111485077978050 3416454622906707 5527939700884757 8944394323791464 14472334024676221 23416728348467685 37889062373143906 61305790721611591 99194853094755497 160500643816367088 259695496911122585 420196140727489673 679891637638612258 1100087778366101931 1779979416004714189 2880067194370816120 4660046610375530309 7540113804746346429
Timer [ 1 ] : elapsed time = 0.000328712 seconds


 =============================
C.[34;49m_fib2[39;49m <:> csl compiled word
SourceCode for C.[34;49m_fib2[39;49m :> 
[34;49m: _fib2 dup 2 < ? : dup -- _fib2 swap 2 - _fib2 + ; [39;49m
Source code file location of [34;49m_fib2[39;49m : "namespaces/test/dev0.csl" : 142.2 :: we are now at : namespaces/test/dev.csl : 441.19
Compiled with : optimizeOn, inlineOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xe779be1b -- code size = 151 bytes
TypeSignature : 
 -----------------------------
Word :: C.[34;49m_fib2[39;49m : definition = 0x00007fb6e779be1b : disassembly at namespaces/test/dev.csl : 441.19 :
[34;49m ..                               : _fib2 [39;49m[33;40mdup[39;49m[34;49m 2 < ? : dup -- _fib2 swap 2 - _fib2 + ;  .. [39;49m[32;49m
0x7fb6e779be1b    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fb6e779be1e    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e779be22    498906                  mov [r14], rax                                         [39;49m
[34;49m ..                           : _fib2 dup [39;49m[33;40m2[39;49m[34;49m < ? : dup -- _fib2 swap 2 - _fib2 + ;  .. [39;49m[32;49m
0x7fb6e779be25    48c7c002000000          mov rax, 0x2                                           [39;49m[32;49m
0x7fb6e779be2c    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fb6e779be2f    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fb6e779be32    4983ee08                sub r14, 0x8                                           [39;49m[32;49m
0x7fb6e779be36    483bc1                  cmp rax, rcx                                           [39;49m[32;49m
0x7fb6e779be39    0f9cc0                  setl al                                                [39;49m[32;49m
0x7fb6e779be3c    480fb6c0                movzx rax, al                                          [39;49m[32;49m
0x7fb6e779be40    4885c0                  test rax, rax                                          [39;49m[32;49m
0x7fb6e779be43    0f8405000000            jz 0x7fb6e779be4e          	< C.[34;49m_fib2[39;49m+51[32;49m >[39;49m[39;49m[32;49m
0x7fb6e779be49    e963000000              jmp 0x7fb6e779beb1         	< C.[34;49m_fib2[39;49m+150[32;49m >[39;49m[39;49m
[34;49m ..                   : _fib2 dup 2 < ? : [39;49m[33;40mdup[39;49m[34;49m -- _fib2 swap 2 - _fib2 + ;  .. [39;49m[32;49m
0x7fb6e779be4e    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fb6e779be51    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e779be55    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e779be58    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fb6e779be5b    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m ..               : _fib2 dup 2 < ? : dup [39;49m[33;40m--[39;49m[34;49m _fib2 swap 2 - _fib2 + ;  .. [39;49m[32;49m
0x7fb6e779be5f    48ffc8                  dec rax                                                [39;49m[32;49m
0x7fb6e779be62    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e779be66    498906                  mov [r14], rax                                         [39;49m
[34;49m ..            : _fib2 dup 2 < ? : dup -- [39;49m[33;40m_fib2[39;49m[34;49m swap 2 - _fib2 + ;  .. [39;49m[32;49m
0x7fb6e779be69    e8adffffff              call 0x7fb6e779be1b        	< C.[34;49m_fib2[39;49m : 0x00007fb6e779be1b[32;49m >[39;49m[39;49m[32;49m
0x7fb6e779be6e    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fb6e779be71    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fb6e779be75    49894ef8                mov [r14-0x8], rcx                                     [39;49m[32;49m
0x7fb6e779be79    498906                  mov [r14], rax                                         [39;49m
[34;49m .. : _fib2 dup 2 < ? : dup -- _fib2 swap [39;49m[33;40m2[39;49m[34;49m - _fib2 + ;  .. [39;49m[32;49m
0x7fb6e779be7c    48c7c002000000          mov rax, 0x2                                           [39;49m[32;49m
0x7fb6e779be83    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fb6e779be86    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fb6e779be89    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m  : _fib2 dup 2 < ? : dup -- _fib2 swap 2 [39;49m[33;40m-[39;49m[34;49m _fib2 + ;  .. [39;49m[32;49m
0x7fb6e779be8d    482bc1                  sub rax, rcx                                           [39;49m[32;49m
0x7fb6e779be90    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e779be94    498906                  mov [r14], rax                                         [39;49m
[34;49m: _fib2 dup 2 < ? : dup -- _fib2 swap 2 - [39;49m[33;40m_fib2[39;49m[34;49m + ;  .. [39;49m[32;49m
0x7fb6e779be97    e87fffffff              call 0x7fb6e779be1b        	< C.[34;49m_fib2[39;49m : 0x00007fb6e779be1b[32;49m >[39;49m[39;49m[32;49m
0x7fb6e779be9c    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fb6e779be9f    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fb6e779bea3    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m .. p 2 < ? : dup -- _fib2 swap 2 - _fib2 [39;49m[33;40m+[39;49m[34;49m ; [39;49m[32;49m
0x7fb6e779bea7    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fb6e779beaa    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e779beae    498906                  mov [r14], rax                                         [39;49m
[34;49m .. 2 < ? : dup -- _fib2 swap 2 - _fib2 + [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fb6e779beb1    c3                      ret                                                    [39;49m
Word_Disassemble : word - '_fib2' :: codeSize = 150
Word : 0x00007fb6e4c62868 :: Compiled at : 0x00007fb6e779be1b
 =============================
::> 'wdiss' was called at namespaces/test/dev.csl 441.19 <::
 9.0000000000000000
 should be 9
 =============================
BigNum.[34;49mfibBN[39;49m <:> csl compiled word
SourceCode for BigNum.[34;49mfibBN[39;49m :> 
[34;49m: fibBN ( n | fn fn1 fn2 ) { fn 0 = fn1 0 = fn2 1 = } { n @ 0 > } { n 1 -= } { fn1 fn2 @ = fn2 fn @ = fn fn1 @ fn2 @ + = } for return fn @ ; [39;49m
Source code file location of [34;49mfibBN[39;49m : "namespaces/test/dev.csl" : 448.2 :: we are now at : namespaces/test/dev.csl : 459.19
Compiled with : optimizeOn, inlineOn, Jcc8 off
Debug Source Code on : BigNum on : Lisp off : Word Source Code on
starting at address : 0xe4ac92f0 -- code size = 297 bytes
TypeSignature : 
 -----------------------------
Word :: BigNum.[34;49mfibBN[39;49m : definition = 0x00007fb6e4ac92f0 : disassembly at namespaces/test/dev.csl : 459.19 :
[34;49m ..                                     : [39;49m[33;40mfibBN[39;49m[34;49m ( n | fn fn1 fn2 )  { fn 0 = fn1 0 = fn2 1 = } { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ .. [39;49m[32;49m
0x7fb6e4ac92f0    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fb6e4ac92f4    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fb6e4ac92f8    4981c620000000          add r14, 0x20                                          [39;49m
[34;49m ..         : fibBN ( n | fn fn1 fn2 )  { [39;49m[33;40mfn[39;49m[34;49m 0 = fn1 0 = fn2 1 = } { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } fo .. [39;49m[32;49m
0x7fb6e4ac92ff    498d4708                lea rax, [r15+0x8]                                     [39;49m
[34;49m ..      : fibBN ( n | fn fn1 fn2 )  { fn [39;49m[33;40m0[39;49m[34;49m = fn1 0 = fn2 1 = } { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for r .. [39;49m[32;49m
0x7fb6e4ac9303    48b90ebae2e5b67f0000    mov rcx, 0x7fb6e5e2ba0e                                [39;49m
[34;49m ..    : fibBN ( n | fn fn1 fn2 )  { fn 0 [39;49m[33;40m=[39;49m[34;49m fn1 0 = fn2 1 = } { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for ret .. [39;49m[32;49m
0x7fb6e4ac930d    488908                  mov [rax], rcx                                         [39;49m
[34;49m ..  : fibBN ( n | fn fn1 fn2 )  { fn 0 = [39;49m[33;40mfn1[39;49m[34;49m 0 = fn2 1 = } { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for retur .. [39;49m[32;49m
0x7fb6e4ac9310    498d4710                lea rax, [r15+0x10]                                    [39;49m
[34;49m : fibBN ( n | fn fn1 fn2 )  { fn 0 = fn1 [39;49m[33;40m0[39;49m[34;49m = fn2 1 = } { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn .. [39;49m[32;49m
0x7fb6e4ac9314    48b908bce2e5b67f0000    mov rcx, 0x7fb6e5e2bc08                                [39;49m
[34;49m .. BN ( n | fn fn1 fn2 )  { fn 0 = fn1 0 [39;49m[33;40m=[39;49m[34;49m fn2 1 = } { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fb6e4ac931e    488908                  mov [rax], rcx                                         [39;49m
[34;49m ..  ( n | fn fn1 fn2 )  { fn 0 = fn1 0 = [39;49m[33;40mfn2[39;49m[34;49m 1 = } { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fb6e4ac9321    498d4718                lea rax, [r15+0x18]                                    [39;49m
[34;49m ..  | fn fn1 fn2 )  { fn 0 = fn1 0 = fn2 [39;49m[33;40m1[39;49m[34;49m = } { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fb6e4ac9325    48b902bee2e5b67f0000    mov rcx, 0x7fb6e5e2be02                                [39;49m
[34;49m ..  fn fn1 fn2 )  { fn 0 = fn1 0 = fn2 1 [39;49m[33;40m=[39;49m[34;49m } { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fb6e4ac932f    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. 1 fn2 )  { fn 0 = fn1 0 = fn2 1 = } { [39;49m[33;40mn[39;49m[34;49m @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fb6e4ac9332    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e4ac9336    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e4ac933a    498906                  mov [r14], rax                                         [39;49m
[34;49m .. 2 )  { fn 0 = fn1 0 = fn2 1 = } { n @ [39;49m[33;40m0[39;49m[34;49m > } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fb6e4ac933d    48b8fcbfe2e5b67f0000    mov rax, 0x7fb6e5e2bffc                                [39;49m[32;49m
0x7fb6e4ac9347    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e4ac934b    498906                  mov [r14], rax                                         [39;49m
[34;49m .. )  { fn 0 = fn1 0 = fn2 1 = } { n @ 0 [39;49m[33;40m>[39;49m[34;49m } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fb6e4ac934e    49b8d0697e892d560000    mov r8, 0x562d897e69d0                                 [39;49m[32;49m
0x7fb6e4ac9358    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e4ac9362    49ffd1                  call r9                    	< BigNum.[34;49m>[39;49m : 0x0000562d897e69d0[32;49m >[39;49m[39;49m
[34;49m ..  { fn 0 = fn1 0 = fn2 1 = } { n @ 0 > [39;49m[33;40m}[39;49m[34;49m { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fb6e4ac9365    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fb6e4ac9368    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m ..  =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } [39;49m[33;40mfor[39;49m[34;49m return fn @ ; [39;49m[32;49m
0x7fb6e4ac936c    4885c0                  test rax, rax                                          [39;49m[32;49m
0x7fb6e4ac936f    0f8494000000            jz 0x7fb6e4ac9409          	< BigNum.[34;49mfibBN[39;49m+281[32;49m >[39;49m[39;49m
[34;49m ..  fn2 1 = } { n @ 0 > } { n 1 -= }  {  [39;49m[33;40mfn1[39;49m[34;49m fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fb6e4ac9375    498d4710                lea rax, [r15+0x10]                                    [39;49m
[34;49m ..  1 = } { n @ 0 > } { n 1 -= }  {  fn1 [39;49m[33;40mfn2[39;49m[34;49m @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fb6e4ac9379    498b4f18                mov rcx, [r15+0x18]                                    [39;49m
[34;49m ..  { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ [39;49m[33;40m=[39;49m[34;49m  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fb6e4ac937d    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. n @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  [39;49m[33;40mfn2[39;49m[34;49m fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fb6e4ac9380    498d4718                lea rax, [r15+0x18]                                    [39;49m
[34;49m .. 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 [39;49m[33;40mfn[39;49m[34;49m @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fb6e4ac9384    498b4f08                mov rcx, [r15+0x8]                                     [39;49m
[34;49m ..  { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ [39;49m[33;40m=[39;49m[34;49m  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fb6e4ac9388    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  [39;49m[33;40mfn[39;49m[34;49m fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fb6e4ac938b    498d4708                lea rax, [r15+0x8]                                     [39;49m[32;49m
0x7fb6e4ac938f    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e4ac9393    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn [39;49m[33;40mfn1[39;49m[34;49m @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fb6e4ac9396    498b4710                mov rax, [r15+0x10]                                    [39;49m[32;49m
0x7fb6e4ac939a    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e4ac939e    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ [39;49m[33;40mfn2[39;49m[34;49m @ + =  } for return fn @ ; [39;49m[32;49m
0x7fb6e4ac93a1    498b4718                mov rax, [r15+0x18]                                    [39;49m[32;49m
0x7fb6e4ac93a5    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e4ac93a9    498906                  mov [r14], rax                                         [39;49m
[34;49m .. 1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ [39;49m[33;40m+[39;49m[34;49m =  } for return fn @ ; [39;49m[32;49m
0x7fb6e4ac93ac    49b800617e892d560000    mov r8, 0x562d897e6100                                 [39;49m[32;49m
0x7fb6e4ac93b6    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e4ac93c0    49ffd1                  call r9                    	< BigNum.[34;49m+[39;49m : 0x0000562d897e6100[32;49m >[39;49m[39;49m[32;49m
0x7fb6e4ac93c3    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fb6e4ac93c6    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fb6e4ac93ca    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m .. fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + [39;49m[33;40m=[39;49m[34;49m  } for return fn @ ; [39;49m[32;49m
0x7fb6e4ac93ce    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. n 0 = fn1 0 = fn2 1 = } { n @ 0 > } { [39;49m[33;40mn[39;49m[34;49m 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fb6e4ac93d1    498d47f8                lea rax, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e4ac93d5    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e4ac93d9    498906                  mov [r14], rax                                         [39;49m
[34;49m .. 0 = fn1 0 = fn2 1 = } { n @ 0 > } { n [39;49m[33;40m1[39;49m[34;49m -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fb6e4ac93dc    48b8f6c1e2e5b67f0000    mov rax, 0x7fb6e5e2c1f6                                [39;49m[32;49m
0x7fb6e4ac93e6    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fb6e4ac93ea    498906                  mov [r14], rax                                         [39;49m
[34;49m .. = fn1 0 = fn2 1 = } { n @ 0 > } { n 1 [39;49m[33;40m-=[39;49m[34;49m }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fb6e4ac93ed    49b8c0647e892d560000    mov r8, 0x562d897e64c0                                 [39;49m[32;49m
0x7fb6e4ac93f7    49b93e2798e7b67f0000    mov r9, 0x7fb6e798273e                                 [39;49m[32;49m
0x7fb6e4ac9401    49ffd1                  call r9                    	< BigNum.[34;49m-=[39;49m : 0x0000562d897e64c0[32;49m >[39;49m[39;49m
[34;49m .. n1 0 = fn2 1 = } { n @ 0 > } { n 1 -= [39;49m[33;40m}[39;49m[34;49m  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fb6e4ac9404    e929ffffff              jmp 0x7fb6e4ac9332         	< BigNum.[34;49mfibBN[39;49m+66[32;49m >[39;49m[39;49m[32;49m
0x7fb6e4ac9409    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m .. fn fn1 @ fn2 @ + =  } for return fn @ [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fb6e4ac940d    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fb6e4ac9411    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m
[34;49m .. @ =  fn fn1 @ fn2 @ + =  } for return [39;49m[33;40mfn[39;49m[34;49m @ ; [39;49m[32;49m
0x7fb6e4ac9415    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fb6e4ac9418    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'fibBN' :: codeSize = 296
Word : 0x00007fb6e43689a8 :: Compiled at : 0x00007fb6e4ac92f0
 =============================
::> 'wdiss' was called at namespaces/test/dev.csl 459.19 <::
 6765.0000000000000000

 locals fibBN :  1.0000000000000000 :  1.0000000000000000, 2.0000000000000000 :  1.0000000000000000, 3.0000000000000000 :  2.0000000000000000, 4.0000000000000000 :  3.0000000000000000, 5.0000000000000000 :  5.0000000000000000, 6.0000000000000000 :  8.0000000000000000, 7.0000000000000000 :  13.0000000000000000, 8.0000000000000000 :  21.0000000000000000, 9.0000000000000000 :  34.0000000000000000, 10.0000000000000000 :  55.0000000000000000, 11.0000000000000000 :  89.0000000000000000, 12.0000000000000000 :  144.0000000000000000, 13.0000000000000000 :  233.0000000000000000, 14.0000000000000000 :  377.0000000000000000, 15.0000000000000000 :  610.0000000000000000, 16.0000000000000000 :  987.0000000000000000, 17.0000000000000000 :  1597.0000000000000000, 18.0000000000000000 :  2584.0000000000000000, 19.0000000000000000 :  4181.0000000000000000, 20.0000000000000000 :  6765.0000000000000000, 21.0000000000000000 :  10946.0000000000000000, 22.0000000000000000 :  17711.0000000000000000, 23.0000000000000000 :  28657.0000000000000000, 24.0000000000000000 :  46368.0000000000000000, 25.0000000000000000 :  75024.0000000000000000, 26.0000000000000000 :  121392.0000000000000000, 27.0000000000000000 :  196416.0000000000000000, 28.0000000000000000 :  317808.0000000000000000, 29.0000000000000000 :  514224.0000000000000000, 30.0000000000000000 :  832032.0000000000000000, 31.0000000000000000 :  1346240.0000000000000000, 32.0000000000000000 :  2178304.0000000000000000, 33.0000000000000000 :  3524544.0000000000000000, 34.0000000000000000 :  5702912.0000000000000000, 35.0000000000000000 :  9227520.0000000000000000, 36.0000000000000000 :  14930432.0000000000000000, 37.0000000000000000 :  24158208.0000000000000000, 38.0000000000000000 :  39088128.0000000000000000, 39.0000000000000000 :  63246336.0000000000000000, 40.0000000000000000 :  102334464.0000000000000000, 41.0000000000000000 :  165580800.0000000000000000, 42.0000000000000000 :  267915264.0000000000000000, 43.0000000000000000 :  433496064.0000000000000000, 44.0000000000000000 :  701415424.0000000000000000, 45.0000000000000000 :  1134919680.0000000000000000, 46.0000000000000000 :  1836318720.0000000000000000, 47.0000000000000000 :  2971271168.0000000000000000, 48.0000000000000000 :  4807589888.0000000000000000, 49.0000000000000000 :  7778861056.0000000000000000, 50.0000000000000000 :  12586582016.0000000000000000, 51.0000000000000000 :  20365443072.0000000000000000, 52.0000000000000000 :  32952025088.0000000000000000, 53.0000000000000000 :  53317992448.0000000000000000, 54.0000000000000000 :  86270541824.0000000000000000, 55.0000000000000000 :  139586437120.0000000000000000, 56.0000000000000000 :  225854881792.0000000000000000, 57.0000000000000000 :  365441318912.0000000000000000, 58.0000000000000000 :  591296200704.0000000000000000, 59.0000000000000000 :  956737519616.0000000000000000, 60.0000000000000000 :  1548033720320.0000000000000000, 61.0000000000000000 :  2504771239936.0000000000000000, 62.0000000000000000 :  4052838514688.0000000000000000, 63.0000000000000000 :  6557609754624.0000000000000000, 64.0000000000000000 :  10610448269312.0000000000000000, 65.0000000000000000 :  17168058023936.0000000000000000, 66.0000000000000000 :  27778774728704.0000000000000000, 67.0000000000000000 :  44946832752640.0000000000000000, 68.0000000000000000 :  72726681223168.0000000000000000, 69.0000000000000000 :  117673513975808.0000000000000000, 70.0000000000000000 :  190400195198976.0000000000000000, 71.0000000000000000 :  308069414207488.0000000000000000, 72.0000000000000000 :  498473904373760.0000000000000000, 73.0000000000000000 :  806543318581248.0000000000000000, 74.0000000000000000 :  1305017222955008.0000000000000000, 75.0000000000000000 :  2111543361667072.0000000000000000, 76.0000000000000000 :  3416594944360448.0000000000000000, 77.0000000000000000 :  5528069586550784.0000000000000000, 78.0000000000000000 :  8944664530911232.0000000000000000, 79.0000000000000000 :  14472871556415488.0000000000000000, 80.0000000000000000 :  23417398648373248.0000000000000000, 81.0000000000000000 :  37890270204788736.0000000000000000, 82.0000000000000000 :  61307668853161984.0000000000000000, 83.0000000000000000 :  99197939057950720.0000000000000000, 84.0000000000000000 :  160506707422740480.0000000000000000, 85.0000000000000000 :  259704646480691200.0000000000000000, 86.0000000000000000 :  420206955856920576.0000000000000000, 87.0000000000000000 :  679902806244589568.0000000000000000, 88.0000000000000000 :  1100109762101510144.0000000000000000, 89.0000000000000000 :  1780012568346099712.0000000000000000, 90.0000000000000000 :  2880122330447609856.0000000000000000, 91.0000000000000000 :  4660099714421620736.0000000000000000, 92.0000000000000000 :  7540151676125052928.0000000000000000
 92.0000000000000000 7540151676125052928.0000000000000000 6765.0000000000000000 ok

NamespaceTree - All Namespaces : using : [34;49mnot using[39;49m :: with[32;49m : words[39;49m
	 - Root[32;49m powReg7[39;49m[32;49m powReg6[39;49m[32;49m powReg5[39;49m[32;49m powReg4[39;49m[32;49m powReg3[39;49m[32;49m powReg2[39;49m[32;49m powReg[39;49m[32;49m pow[39;49m[32;49m sp[39;49m[32;49m fib01[39;49m[32;49m fib01[39;49m[32;49m fib01[39;49m[32;49m fib01[39;49m[32;49m fib01[39;49m[32;49m fib01[39;49m[32;49m fib01[39;49m[32;49m pow[39;49m[32;49m pow0[39;49m[32;49m bexp3[39;49m[32;49m x1[39;49m[32;49m get[39;49m[32;49m set[39;49m[32;49m goedel8[39;49m[32;49m goedel6[39;49m[32;49m hio[39;49m[32;49m hioo[39;49m[32;49m mct[39;49m[32;49m _doDemo[39;49m[32;49m forStarters[39;49m[32;49m doScript2[39;49m[32;49m doScript[39;49m[32;49m doTX64[39;49m[32;49m doX64[39;49m[32;49m todo[39;49m[32;49m typesInclude[39;49m[32;49m mem2[39;49m[32;49m mrm[39;49m[32;49m TODO[39;49m[32;49m bx[39;49m[32;49m x64[39;49m[32;49m tc[39;49m[32;49m tCSL[39;49m[32;49m rtw[39;49m[32;49m ash[39;49m[32;49m license[39;49m[32;49m purgeAll[39;49m[32;49m purge[39;49m[32;49m ri[39;49m[32;49m fr[39;49m[32;49m _bassert[39;49m[32;49m bnOn[39;49m[32;49m bnOff[39;49m[32;49m bigNumOff[39;49m[32;49m Is_DebugOn[39;49m[32;49m dbgOff[39;49m[32;49m dbgOn[39;49m[32;49m dbOn[39;49m[32;49m dbgOnVar[39;49m[32;49m log[39;49m[32;49m cOff[39;49m[32;49m cOn[39;49m[32;49m C_Off[39;49m[32;49m C_On[39;49m[32;49m forth[39;49m[32;49m ndrop[39;49m[32;49m '[39;49m[32;49m tick[39;49m[32;49m findAny[39;49m[32;49m find[39;49m[32;49m include[39;49m
		 - Class[32;49m sp[39;49m[32;49m tbb[39;49m[32;49m .[39;49m[32;49m [[39;49m[32;49m ][39;49m[32;49m clone[39;49m[32;49m new[39;49m[32;49m struct[39;49m[32;49m class[39;49m[32;49m :{[39;49m[32;49m +:{[39;49m[32;49m };[39;49m
			 - Pointer[32;49m this[39;49m[32;49m size[39;49m
				 - Integer
					 - byte[32;49m this[39;49m[32;49m size[39;49m
			 - Buffer[32;49m buf[39;49m[32;49m this[39;49m[32;49m size[39;49m
				 - DLLNode[32;49m BeforeReference[39;49m[32;49m AfterReference[39;49m[32;49m BeforeReference[39;49m[32;49m someJunkForTesting[39;49m[32;49m AfterReference[39;49m[32;49m BeforeReference[39;49m[32;49m AfterReference[39;49m[32;49m this[39;49m[32;49m size[39;49m
					 - DLLNodeAlloc[32;49m tna2x[39;49m[32;49m tnax1[39;49m[32;49m tna3[39;49m[32;49m tnarr2a[39;49m[32;49m tnarr2[39;49m[32;49m tna[39;49m[32;49m nodes[39;49m[32;49m this[39;49m[32;49m size[39;49m
						 - Ar1[32;49m a3[39;49m[32;49m arr2[39;49m[32;49m arr1[39;49m[32;49m ar[39;49m[32;49m this[39;49m[32;49m size[39;49m
							 - Ar2[32;49m a5[39;49m[32;49m a4[39;49m[32;49m ar[39;49m[32;49m this[39;49m[32;49m size[39;49m
								 - Ar3[32;49m a7[39;49m[32;49m a8[39;49m[32;49m a6x[39;49m[32;49m a6[39;49m[32;49m ar[39;49m[32;49m this[39;49m[32;49m size[39;49m
									 - Ar9[32;49m arr9[39;49m[32;49m a9[39;49m[32;49m adump[39;49m[32;49m _adump[39;49m[32;49m ar[39;49m[32;49m this[39;49m[32;49m size[39;49m
										 - ct[32;49m ac[39;49m[32;49m tct[39;49m[32;49m ab[39;49m[32;49m ar[39;49m[32;49m this[39;49m[32;49m size[39;49m
											 - cta[32;49m caba[39;49m[32;49m cadump[39;49m[32;49m tcta[39;49m[32;49m aba[39;49m[32;49m ar[39;49m[32;49m this[39;49m[32;49m size[39;49m
						 - DLLNodeAlloc4[32;49m nodes[39;49m[32;49m this[39;49m[32;49m size[39;49m
					 - DLList[32;49m init[39;49m[32;49m TailNode[39;49m[32;49m HeadNode[39;49m[32;49m this[39;49m[32;49m size[39;49m
						 - DLListClone[32;49m init[39;49m[32;49m Accum[39;49m[32;49m Four[39;49m[32;49m Three[39;49m[32;49m Twelve[39;49m[32;49m Sum[39;49m[32;49m Prototype[39;49m[32;49m Category[39;49m[32;49m this[39;49m[32;49m size[39;49m
			 - [34;49mBigNum[39;49m[32;49m tfib3[39;49m[32;49m fibBN[39;49m[32;49m tbn[39;49m[32;49m sp[39;49m[32;49m tfib3[39;49m[32;49m fibBN[39;49m[32;49m tbn[39;49m[32;49m bexpl[39;49m[32;49m !![39;49m[32;49m ![39;49m[32;49m bexp0[39;49m[32;49m bexp[39;49m[32;49m aexp[39;49m[32;49m ![39;49m[32;49m qexp[39;49m[32;49m x[39;49m[32;49m bnInit[39;49m[32;49m eprint[39;49m[32;49m p[39;49m[32;49m fprint[39;49m[32;49m _fprint[39;49m[32;49m _eprint[39;49m[32;49m **[39;49m[32;49m ^[39;49m[32;49m pow[39;49m[32;49m sqrt[39;49m[32;49m !=[39;49m[32;49m ==[39;49m[32;49m >[39;49m[32;49m >=[39;49m[32;49m <[39;49m[32;49m <=[39;49m[32;49m ==[39;49m[32;49m /=[39;49m[32;49m /[39;49m[32;49m *=[39;49m[32;49m *[39;49m[32;49m --[39;49m[32;49m -=[39;49m[32;49m ++[39;49m[32;49m +=[39;49m[32;49m -[39;49m[32;49m +[39;49m[32;49m bnState[39;49m[32;49m pPrecision[39;49m[32;49m pWidth[39;49m
		 - Interpreter[32;49m tfib3[39;49m[32;49m tfib2[39;49m[32;49m tfib1[39;49m[32;49m tfib[39;49m[32;49m fibPTC2[39;49m[32;49m fibPTC[39;49m[32;49m Cfib_O3[39;49m[32;49m Cfib[39;49m[32;49m fibn0[39;49m[32;49m sp[39;49m[32;49m xhi1[39;49m[32;49m xhi01[39;49m[32;49m xhi2a[39;49m[32;49m xhi2[39;49m[32;49m xhe12[39;49m[32;49m xhe1[39;49m[32;49m xhe0[39;49m[32;49m thi42[39;49m[32;49m thi3[39;49m[32;49m thi2[39;49m[32;49m defined[39;49m[32;49m _defined[39;49m[32;49m :[39;49m[32;49m word[39;49m[32;49m ;[39;49m[32;49m semi[39;49m[32;49m _semi[39;49m[32;49m xt@[39;49m[32;49m }[39;49m[32;49m end[39;49m[32;49m {[39;49m[32;49m #[39;49m[32;49m _lx_[39;49m[32;49m l:[39;49m[32;49m interpretFile[39;49m[32;49m interpret[39;49m[32;49m interpreterDone[39;49m[32;49m interpreterIsDone[39;49m[32;49m interpreterStop[39;49m[32;49m interpreterInit[39;49m[32;49m interpreterRun[39;49m[32;49m interpretNextToken[39;49m[32;49m interpretString[39;49m[32;49m tokenToWord[39;49m[32;49m doWord[39;49m[32;49m eval[39;49m[32;49m /*[39;49m[32;49m */[39;49m[32;49m #![39;49m[32;49m //[39;49m[32;49m compileModeOff[39;49m[32;49m asmModeOff[39;49m[32;49m asmModeOn[39;49m[32;49m compileModeOn[39;49m[32;49m finishDebugInfo[39;49m[32;49m compileMode[39;49m
		 - C[32;49m fib4[39;49m[32;49m fib3[39;49m[32;49m fib2[39;49m[32;49m fib[39;49m[32;49m sp[39;49m[32;49m tt[39;49m[32;49m sp[39;49m[32;49m fibPTC3?[39;49m[32;49m fibPTC?[39;49m[32;49m _fib1[39;49m[32;49m _fib2[39;49m[32;49m factorial[39;49m[32;49m fac[39;49m[32;49m x7[39;49m[32;49m chars2[39;49m[32;49m chars[39;49m[32;49m $[39;49m[32;49m streol[39;49m[32;49m $$[39;49m[32;49m hip[39;49m[32;49m goedel3[39;49m[32;49m bexp44[39;49m[32;49m bexp43[39;49m[32;49m heeeey2[39;49m[32;49m heeey2[39;49m[32;49m a1234[39;49m[32;49m a123[39;49m[32;49m a1234[39;49m[32;49m a123[39;49m[32;49m t64bitSub3[39;49m[32;49m t64bitSub3[39;49m[32;49m t64bitSub2[39;49m[32;49m t64bitSub[39;49m[32;49m t64bitAdd2[39;49m[32;49m t64bitAdd[39;49m[32;49m moe3[39;49m[32;49m moe2[39;49m[32;49m t+[39;49m[32;49m t*[39;49m[32;49m t+[39;49m[32;49m t*[39;49m[32;49m factorial[39;49m[32;49m factorial[39;49m[32;49m doTest[39;49m[32;49m tcd[39;49m[32;49m tL2[39;49m[32;49m tL[39;49m[32;49m aTest[39;49m[32;49m aoTest[39;49m[32;49m tdemo[39;49m[32;49m demo[39;49m[32;49m odemo[39;49m[32;49m demo![39;49m[32;49m _basicT[39;49m[32;49m basicT[39;49m[32;49m include1[39;49m[32;49m allot[39;49m[32;49m logAppend[39;49m[32;49m logWrite[39;49m[32;49m ;;[39;49m[32;49m wordStructPrint[39;49m[32;49m wordNameStructPrint[39;49m[32;49m ,[39;49m[32;49m rax_return[39;49m[32;49m void_return[39;49m[32;49m c_prefix[39;49m[32;49m c_rtl[39;49m[32;49m cfactorial3_O3[39;49m[32;49m cfactorial2_O3[39;49m[32;49m cfactorial_O3[39;49m[32;49m cfib2_O3[39;49m[32;49m cfib_O3[39;49m[32;49m ctct[39;49m[32;49m cfactorial3[39;49m[32;49m cfactorial2[39;49m[32;49m cfactorial[39;49m[32;49m cfib[39;49m[32;49m --[39;49m[32;49m ++[39;49m[32;49m ?<[39;49m[32;49m >:<[39;49m[32;49m >?[39;49m[32;49m switch[39;49m[32;49m }fi[39;49m[32;49m }else{[39;49m[32;49m if{[39;49m[32;49m (|[39;49m[32;49m ([39;49m[32;49m sprintf[39;49m[32;49m printf[39;49m[32;49m _Printf[39;49m
			 - C_Syntax[32;49m fibPTC2?[39;49m[32;49m fibPTC?[39;49m[32;49m _fibn0[39;49m[32;49m cpow[39;49m[32;49m fibPTC2?[39;49m[32;49m faccs2[39;49m[32;49m fac5[39;49m[32;49m faccs[39;49m[32;49m fac5[39;49m[32;49m faccs3[39;49m[32;49m factoriali[39;49m[32;49m MOVrr[39;49m[32;49m MOVmr[39;49m[32;49m MOV32rm[39;49m[32;49m MOV8rm[39;49m[32;49m _Compile_Move[39;49m[32;49m _Compile_Stack_PopToReg[39;49m[32;49m _Compile_Move_DataStackN_ToReg[39;49m[32;49m _Compile_TESTreg_Toreg[39;49m[32;49m _Compile_MoveReg_To_StackN[39;49m[32;49m _Compile_MoveReg_To_Rm[39;49m[32;49m _Compile_Test[39;49m[32;49m _Compile_SUBI_DSP[39;49m[32;49m _Compile_CallThruReg[39;49m[32;49m _Compile_Group5[39;49m[32;49m _Compile_X_Group1_Immediate[39;49m[32;49m _Compile_X_Group1_Reg_To_Reg[39;49m[32;49m _Compile_X_Group1[39;49m[32;49m _Compile_X_Group1_Immediate[39;49m[32;49m _Compile_X_Group1_Reg_To_Reg[39;49m[32;49m _Compile_X_Group1[39;49m[32;49m _Compile_SetAtAddress_WithReg[39;49m[32;49m _Compile_Move_Literal_Immediate_To_Reg[39;49m[32;49m Compile_MoveReg_ToAddress_ThruReg[39;49m[32;49m Compile_MoveMemValue_ToReg_ThruReg[39;49m[32;49m Compile_MoveMemValue_To_Reg[39;49m[32;49m Compile_MoveImm_To_Mem[39;49m[32;49m Compile_MoveImm_To_Reg[39;49m[32;49m Compile_MoveImm[39;49m[32;49m Compile_Move_Reg_To_Reg[39;49m[32;49m Compile_Move_Rm_To_Reg[39;49m[32;49m Compile_Move_Reg_To_Rm[39;49m[32;49m Compile_Move_WithSib[39;49m[32;49m Compile_Move[39;49m[32;49m Compile_CalculateWrite_Instruction_X64[39;49m[32;49m _Compile_Write_Instruction_X64[39;49m[32;49m CalculateModRmByte[39;49m[32;49m _Compile_ImmDispData[39;49m[32;49m _CalculateRex[39;49m[32;49m CalculateSib[39;49m[32;49m CalculateModRegardingDisplacement[39;49m[32;49m Calculate_Rex[39;49m[32;49m abs[39;49m[32;49m cpow[39;49m[32;49m fac5[39;49m[32;49m fibPTC2?[39;49m[32;49m _fib1c[39;49m[32;49m factorial[39;49m[32;49m factoriali[39;49m[32;49m bttt[39;49m[32;49m yadaYada[39;49m[32;49m yada[39;49m[32;49m fac5[39;49m[32;49m $[39;49m[32;49m faccs3[39;49m[32;49m interpret4[39;49m[32;49m faccs2[39;49m[32;49m fac4[39;49m[32;49m interpret3[39;49m[32;49m interpret2[39;49m[32;49m chi[39;49m[32;49m interpret2[39;49m[32;49m thi42[39;49m[32;49m thi41[39;49m[32;49m thi42[39;49m[32;49m csMatchExWithReturn[39;49m[32;49m csMatchEx[39;49m[32;49m taa[39;49m[32;49m ctcta[39;49m[32;49m cmoe[39;49m[32;49m cmoe[39;49m[32;49m factorial[39;49m[32;49m match[39;49m[32;49m case[39;49m[32;49m &[39;49m[32;49m typedef[39;49m[32;49m type[39;49m[32;49m c_class[39;49m[32;49m ?[39;49m[32;49m ![39;49m[32;49m ,[39;49m[32;49m ;[39;49m[32;49m }[39;49m[32;49m {[39;49m
			 - int[32;49m Compile_DEC[39;49m[32;49m Compile_INC[39;49m[32;49m _Compile_Int64[39;49m[32;49m _Compile_Int32[39;49m[32;49m _Compile_Int16[39;49m[32;49m _Compile_Int8[39;49m[32;49m fa[39;49m[32;49m wtdInclude[39;49m[32;49m doWp[39;49m[32;49m this[39;49m[32;49m size[39;49m
			 - void[32;49m this[39;49m[32;49m size[39;49m
			 - int64[32;49m this[39;49m[32;49m size[39;49m
			 - uint16[32;49m this[39;49m[32;49m size[39;49m
			 - uint8[32;49m this[39;49m[32;49m size[39;49m
			 - uint64[32;49m this[39;49m[32;49m size[39;49m
			 - CObj[32;49m this[39;49m[32;49m size[39;49m
				 - chey
			 - Dlsym
				 - libc[32;49m x[39;49m[32;49m xc[39;49m[32;49m tprintf2[39;49m[32;49m tprintf1[39;49m[32;49m tprintf[39;49m[32;49m memset[39;49m[32;49m strcat[39;49m[32;49m sprintf[39;49m[32;49m strcmp[39;49m[32;49m printf[39;49m
			 - [34;49mblock[39;49m[32;49m this[39;49m[32;49m size[39;49m
			 - [34;49mPointer[39;49m[32;49m this[39;49m[32;49m size[39;49m
			 - [34;49mBoolean[39;49m[32;49m this[39;49m[32;49m size[39;49m
			 - [34;49mquad[39;49m[32;49m this[39;49m[32;49m size[39;49m
			 - [34;49mlong[39;49m[32;49m this[39;49m[32;49m size[39;49m
			 - [34;49mchar[39;49m[32;49m this[39;49m[32;49m size[39;49m
			 - [34;49muint32[39;49m[32;49m this[39;49m[32;49m size[39;49m
			 - [34;49mint32[39;49m[32;49m this[39;49m[32;49m size[39;49m
			 - [34;49mint16[39;49m[32;49m this[39;49m[32;49m size[39;49m
			 - [34;49mbyte[39;49m[32;49m this[39;49m[32;49m size[39;49m
			 - [34;49mint8[39;49m[32;49m this[39;49m[32;49m size[39;49m
			 - [34;49mExperimental[39;49m[32;49m abyteTest[39;49m[32;49m Buffer[39;49m[32;49m HistoryStringNode[39;49m[32;49m MemChunk[39;49m[32;49m Symbol[39;49m[32;49m ListObject[39;49m[32;49m DObject[39;49m[32;49m DynamicObject[39;49m[32;49m Class[39;49m[32;49m Vocabulary[39;49m[32;49m Namespace[39;49m[32;49m ID[39;49m[32;49m Identifier[39;49m[32;49m List[39;49m[32;49m DLList[39;49m[32;49m ListNode[39;49m[32;49m Node[39;49m[32;49m n_Attributes[39;49m[32;49m n_dobject[39;49m[32;49m n_DLNode[39;49m[32;49m do_iData[39;49m[32;49m do_bData[39;49m[32;49m do_InUseFlag[39;49m[32;49m do_Slots[39;49m[32;49m do_Size[39;49m[32;49m do_Type[39;49m[32;49m do_Before[39;49m[32;49m do_After[39;49m[32;49m n_unmap[39;49m[32;49m n_CurrentNode[39;49m[32;49m n_InUseFlag[39;49m[32;49m n_Slots[39;49m[32;49m n_Size[39;49m[32;49m n_Type[39;49m[32;49m n_Before[39;49m[32;49m n_After[39;49m[32;49m TI[39;49m[32;49m TypeInfo[39;49m[32;49m T_ChunkSize[39;49m[32;49m T_Size[39;49m[32;49m T_NumberOfBytes[39;49m[32;49m T_NumberOfSlots[39;49m[32;49m T_Unused[39;49m[32;49m T_NumberOfPrefixedArgs[39;49m[32;49m T_WordAttributes[39;49m[32;49m T_WAllocationType[39;49m[32;49m T_LispAttributes[39;49m[32;49m T_ObjectAttributes[39;49m[32;49m T_MorphismAttributes[39;49m[32;49m _DLList[39;49m[32;49m _ListNode[39;49m[32;49m _Node[39;49m[32;49m n_unmap[39;49m[32;49m n_InUseFlag[39;49m[32;49m n_Slots[39;49m[32;49m n_Size[39;49m[32;49m n_Type[39;49m[32;49m n_CurrentNode[39;49m[32;49m n_Before[39;49m[32;49m n_After[39;49m[32;49m dllist[39;49m[32;49m node[39;49m[32;49m dlnode[39;49m
				 - byteTest
				 - [34;49m_Identifier[39;49m[32;49m W_WordData[39;49m[32;49m BaseObject[39;49m[32;49m CSLWord[39;49m[32;49m SC_FileIndex_End[39;49m[32;49m SC_FileIndex_Start[39;49m[32;49m SC_WordIndex[39;49m[32;49m StartCharRlIndex[39;49m[32;49m DebugWordList[39;49m[32;49m Definition[39;49m[32;49m S_pb_Data3[39;49m[32;49m S_Node3[39;49m[32;49m S_Value3[39;49m[32;49m S_pb_Data2[39;49m[32;49m S_Node2[39;49m[32;49m S_Value2[39;49m[32;49m S_Prototype[39;49m[32;49m S_ContainingList[39;49m[32;49m S_ContainingNamespace[39;49m[32;49m S_PtrToValue[39;49m[32;49m S_DObjectValue[39;49m[32;49m S_SymbolList[39;49m[32;49m S_Object[39;49m[32;49m S_BytePtr[39;49m[32;49m S_Value[39;49m[32;49m State[39;49m[32;49m S_Name[39;49m[32;49m CodeSize[39;49m[32;49m Slots[39;49m[32;49m S_Node[39;49m[32;49m this[39;49m[32;49m size[39;49m
				 - [34;49m*[39;49m[32;49m this[39;49m[32;49m size[39;49m
				 - [34;49m_WordData[39;49m[32;49m SourceCodeMemSpaceRandMarker[39;49m[32;49m SourceCoding[39;49m[32;49m SourceCodeWordList[39;49m[32;49m Index[39;49m[32;49m LambdaArgs[39;49m[32;49m AccumulatedOffset[39;49m[32;49m LambdaBody[39;49m[32;49m WD_NamespaceStack[39;49m[32;49m WD_ArrayNumberOfDimensions[39;49m[32;49m WD_SourceCode[39;49m[32;49m WD_ArrayDimensions[39;49m[32;49m OurLocation[39;49m[32;49m LocalNamespaces[39;49m[32;49m TypeObjectsNamespaces[39;49m[32;49m TypeSignature[39;49m[32;49m OpInsnCode[39;49m[32;49m OpInsnGroup[39;49m[32;49m RegFlags[39;49m[32;49m DstReg[39;49m[32;49m SrcReg[39;49m[32;49m Opt_Reg[39;49m[32;49m Opt_Rm[39;49m[32;49m RegToUse[39;49m[32;49m Offset[39;49m[32;49m OriginalWord[39;49m[32;49m AliasOf[39;49m[32;49m StackPushRegisterCode[39;49m[32;49m ObjectCode[39;49m[32;49m NumberOfVariables[39;49m[32;49m NumberOfNonRegisterLocals[39;49m[32;49m NumberOfNonRegisterArgs[39;49m[32;49m CursorPosition[39;49m[32;49m LineNumber[39;49m[32;49m Filename[39;49m[32;49m Coding[39;49m[32;49m CodeStart[39;49m[32;49m TypeNamespace[39;49m[32;49m RunType[39;49m[32;49m this[39;49m[32;49m size[39;49m
				 - [34;49m_dobject[39;49m[32;49m do_iData[39;49m[32;49m do_bData[39;49m[32;49m do_InUseFlag[39;49m[32;49m do_Slots[39;49m[32;49m do_Size[39;49m[32;49m do_Type[39;49m[32;49m do_Before[39;49m[32;49m do_After[39;49m[32;49m this[39;49m[32;49m size[39;49m
				 - [34;49m_DLNode[39;49m[32;49m this[39;49m[32;49m size[39;49m
				 - [34;49m_dllist[39;49m[32;49m n_CurrentNode[39;49m[32;49m n_Before[39;49m[32;49m n_After[39;49m[32;49m this[39;49m[32;49m size[39;49m
				 - [34;49m_dlnode[39;49m[32;49m n_Before[39;49m[32;49m n_After[39;49m[32;49m this[39;49m[32;49m size[39;49m
				 - [34;49mLocation[39;49m[32;49m this[39;49m[32;49m size[39;49m
				 - [34;49mblock[39;49m[32;49m this[39;49m[32;49m size[39;49m
				 - [34;49mPointer[39;49m[32;49m this[39;49m[32;49m size[39;49m
				 - [34;49mAttributeInfo[39;49m[32;49m this[39;49m[32;49m size[39;49m
				 - [34;49mdobject[39;49m
				 - [34;49mDLNode[39;49m[32;49m this[39;49m[32;49m size[39;49m
				 - [34;49mWordData[39;49m
				 - [34;49mWord[39;49m
				 - [34;49m_byteTest[39;49m[32;49m bt[39;49m[32;49m bt[39;49m[32;49m a16_123[39;49m[32;49m d8_123[39;49m[32;49m a32_123[39;49m[32;49m u8_123[39;49m[32;49m u32_123[39;49m[32;49m u64_123[39;49m[32;49m c8_123[39;49m[32;49m b8_123[39;49m[32;49m a64_123[39;49m[32;49m a8_123[39;49m[32;49m this[39;49m[32;49m size[39;49m
			 - [34;49mPrefixCombinators[39;49m[32;49m loop[39;49m[32;49m for[39;49m[32;49m do[39;49m[32;49m while[39;49m[32;49m if[39;49m
			 - [34;49mInfix[39;49m[32;49m xhi[39;49m[32;49m xhii[39;49m[32;49m xhi0[39;49m[32;49m h4[39;49m[32;49m h3[39;49m[32;49m hi2[39;49m[32;49m hi1[39;49m[32;49m hi1[39;49m[32;49m _assert1[39;49m[32;49m =[39;49m
		 - User[32;49m fib1[39;49m[32;49m _fib4[39;49m[32;49m _fib3[39;49m[32;49m _fib2[39;49m[32;49m _fib[39;49m[32;49m sp[39;49m[32;49m _fib1[39;49m[32;49m _fibn1[39;49m[32;49m sp[39;49m[32;49m ffx2[39;49m[32;49m ffx[39;49m[32;49m comment[39;49m[32;49m _ffx2[39;49m[32;49m _ffx[39;49m[32;49m reps[39;49m[32;49m iFactorialX2[39;49m[32;49m iFactorialX[39;49m[32;49m _ifx2[39;49m[32;49m _ifx[39;49m[32;49m reps0[39;49m[32;49m factorial[39;49m[32;49m sdbg[39;49m[32;49m fac[39;49m[32;49m bexp3[39;49m[32;49m bexp2[39;49m[32;49m bexp[39;49m[32;49m qexp2[39;49m[32;49m qexp[39;49m[32;49m factorial[39;49m[32;49m qeval[39;49m[32;49m hi1[39;49m[32;49m hi1[39;49m[32;49m t3[39;49m[32;49m t1[39;49m[32;49m t0[39;49m[32;49m caseSwitchExample[39;49m[32;49m goedel7[39;49m[32;49m goedel6[39;49m[32;49m goedel5[39;49m[32;49m goedel4[39;49m[32;49m goedel2[39;49m[32;49m goedel[39;49m[32;49m localsT[39;49m[32;49m _localsT[39;49m[32;49m demo0[39;49m[32;49m def[39;49m[32;49m istring[39;49m[32;49m s[39;49m[32;49m opOn[39;49m[32;49m vck[39;49m[32;49m opOn1[39;49m[32;49m opOff[39;49m[32;49m pause[39;49m[32;49m _SMN_[39;49m[32;49m mp[39;49m[32;49m p[39;49m[32;49m s[39;49m[32;49m ts[39;49m[32;49m wdis[39;49m[32;49m _var[39;49m[32;49m var[39;49m[32;49m _const[39;49m[32;49m const[39;49m
			 - Experimental[32;49m tx[39;49m
			 - StartupMacros[32;49m namespaces[39;49m[32;49m Delimiters[39;49m
		 - Locals[32;49m (|[39;49m[32;49m ([39;49m
		 - Int[32;49m sp[39;49m[32;49m mt5[39;49m[32;49m mt5v[39;49m[32;49m mt4[39;49m[32;49m mt3[39;49m[32;49m mt2[39;49m[32;49m mt1a[39;49m[32;49m mta[39;49m[32;49m mt1[39;49m[32;49m mt[39;49m[32;49m _ClassTest_[39;49m[32;49m ppxe[39;49m[32;49m ppx[39;49m[32;49m apause[39;49m[32;49m _logAppend[39;49m[32;49m _logWrite[39;49m[32;49m nl[39;49m[32;49m print[39;49m[32;49m hp[39;49m[32;49m _hp[39;49m[32;49m p[39;49m[32;49m _p[39;49m[32;49m pn[39;49m[32;49m prints[39;49m[32;49m ps[39;49m[32;49m _ps[39;49m[32;49m hexIntPrint[39;49m[32;49m intPrint[39;49m[32;49m /=[39;49m[32;49m *=[39;49m[32;49m %[39;49m[32;49m modulo[39;49m[32;49m /[39;49m[32;49m ^[39;49m[32;49m pow_03[39;49m[32;49m pow[39;49m[32;49m **[39;49m[32;49m *[39;49m[32;49m -=[39;49m[32;49m +=[39;49m[32;49m -[39;49m[32;49m +[39;49m
		 - Logic[32;49m tx1[39;49m[32;49m up[39;49m[32;49m nt[39;49m[32;49m >=[39;49m[32;49m <=[39;49m[32;49m !=[39;49m[32;49m equal[39;49m[32;49m ==[39;49m[32;49m >[39;49m[32;49m <[39;49m[32;49m &&[39;49m[32;49m and[39;49m[32;49m not[39;49m[32;49m ![39;49m[32;49m ^^[39;49m[32;49m xor[39;49m[32;49m or[39;49m[32;49m ||[39;49m
			 - Bits[32;49m tcmp[39;49m[32;49m tNotAnd[39;49m[32;49m tAnd[39;49m[32;49m tnot3[39;49m[32;49m tnot2[39;49m[32;49m tnot[39;49m[32;49m lt10[39;49m[32;49m lt9[39;49m[32;49m lt8[39;49m[32;49m lt7b[39;49m[32;49m lt7[39;49m[32;49m lnt5[39;49m[32;49m lnt5[39;49m[32;49m lnt5[39;49m[32;49m lnt5[39;49m[32;49m lnt5[39;49m[32;49m lnt2[39;49m[32;49m lnt[39;49m[32;49m lnt2[39;49m[32;49m lnt[39;49m[32;49m lnt4[39;49m[32;49m lnt3[39;49m[32;49m lnt2[39;49m[32;49m lnt[39;49m[32;49m lt2[39;49m[32;49m lt[39;49m[32;49m |=[39;49m[32;49m &=[39;49m[32;49m >>=[39;49m[32;49m <<=[39;49m[32;49m neg[39;49m[32;49m ~[39;49m[32;49m ^[39;49m[32;49m |[39;49m[32;49m &[39;49m[32;49m >>[39;49m[32;49m <<[39;49m
		 - Compiler[32;49m _fib1[39;49m[32;49m vckf1[39;49m[32;49m vckf[39;49m[32;49m >;[39;49m[32;49m mod[39;49m[32;49m nstrcat:[39;49m[32;49m Zenfone2[39;49m[32;49m x[39;49m[32;49m doLisp[39;49m[32;49m COMBINATOR_TOOKIT[39;49m[32;49m doLisp[39;49m[32;49m doTest[39;49m[32;49m doDemo[39;49m[32;49m doInit1[39;49m[32;49m streamLine[39;49m[32;49m classTestRead[39;49m[32;49m DebugFlag[39;49m[32;49m var:[39;49m[32;49m swap[39;49m[32;49m compileCall[39;49m[32;49m compileWord[39;49m[32;49m immediate[39;49m[32;49m '[39;49m[32;49m )[39;49m[32;49m sourceCodeOn[39;49m[32;49m sourceCodeInit[39;49m[32;49m getStringToEndOfLine[39;49m[32;49m ftoken[39;49m[32;49m tokenQID[39;49m[32;49m token[39;49m[32;49m _tick[39;49m[32;49m quote[39;49m[32;49m store[39;49m[32;49m set[39;49m[32;49m poke[39;49m[32;49m =[39;49m[32;49m ![39;49m[32;49m @=[39;49m[32;49m get[39;49m[32;49m peek[39;49m[32;49m load[39;49m[32;49m @[39;49m[32;49m debugWord[39;49m[32;49m prefixOff[39;49m[32;49m prefixOn[39;49m[32;49m infixOff[39;49m[32;49m infixOn[39;49m[32;49m nprefix[39;49m[32;49m prefix[39;49m[32;49m _prefix[39;49m[32;49m typeSignature[39;49m[32;49m inline[39;49m[32;49m ?immediate[39;49m[32;49m _immediate[39;49m[32;49m code[39;49m[32;49m Here[39;49m[32;49m begin[39;49m[32;49m _end[39;49m[32;49m _literal[39;49m[32;49m literal[39;49m[32;49m constant[39;49m[32;49m _constant[39;49m[32;49m variable[39;49m[32;49m _variable[39;49m[32;49m macro[39;49m[32;49m noop[39;49m[32;49m break[39;49m[32;49m return[39;49m[32;49m continue[39;49m[32;49m goto[39;49m[32;49m postfixOn[39;49m[32;49m c_syntaxOff[39;49m[32;49m c_syntaxOn[39;49m
			 - Compiling[32;49m pokeRegAtAddress[39;49m[32;49m pokeRegWithValue[39;49m[32;49m peekReg[39;49m[32;49m _compileWord[39;49m[32;49m _compileCall[39;49m[32;49m compileInt64[39;49m[32;49m compileInt32[39;49m[32;49m compileInt16[39;49m[32;49m compileByte[39;49m
		 - Stack[32;49m ndup[39;49m[32;49m stackCheck[39;49m[32;49m dsp[39;49m[32;49m _swap[39;49m[32;49m pick[39;49m[32;49m _ndrop[39;49m[32;49m dropN[39;49m[32;49m drop[39;49m[32;49m ndup[39;49m[32;49m tos[39;49m[32;49m dup[39;49m[32;49m _dup[39;49m
		 - Asm[32;49m ;;[39;49m[32;49m ;asm[39;49m[32;49m asm:[39;49m[32;49m asmEnd[39;49m[32;49m asmBegin[39;49m[32;49m jmp[39;49m[32;49m goto:[39;49m[32;49m label:[39;49m[32;49m goto[39;49m[32;49m label[39;49m[32;49m jcc[39;49m[32;49m Jcc[39;49m[32;49m jmpHere[39;49m[32;49m Jmp[39;49m[32;49m if_[39;49m[32;49m _else_[39;49m[32;49m _fi[39;49m
			 - X64[32;49m dbiOff[39;49m[32;49m dbiOn[39;49m[32;49m DBI[39;49m[32;49m x64_dbg[39;49m[32;49m REX_W[39;49m[32;49m IMM_B[39;49m[32;49m DISP_B[39;49m[32;49m SIB_B[39;49m[32;49m MODRM_B[39;49m[32;49m REX_B[39;49m[32;49m DEC[39;49m[32;49m INC[39;49m[32;49m N[39;49m[32;49m TO_REG[39;49m[32;49m INT32_SIZE[39;49m[32;49m CELL_SIZE[39;49m[32;49m CELL[39;49m[32;49m BYTE[39;49m[32;49m CALL[39;49m[32;49m CMP[39;49m[32;49m SUB[39;49m[32;49m ADD[39;49m[32;49m NG[39;49m[32;49m LE[39;49m[32;49m LESS[39;49m[32;49m NA[39;49m[32;49m BE[39;49m[32;49m Z[39;49m[32;49m ZERO[39;49m[32;49m EQ[39;49m[32;49m EQUAL[39;49m[32;49m BELOW[39;49m[32;49m THRU_REG[39;49m[32;49m ACC[39;49m[32;49m FP[39;49m[32;49m DSP[39;49m[32;49m R15D[39;49m[32;49m R14D[39;49m[32;49m R13D[39;49m[32;49m R12D[39;49m[32;49m R11D[39;49m[32;49m R10D[39;49m[32;49m R9D[39;49m[32;49m R8D[39;49m[32;49m RDI[39;49m[32;49m RSI[39;49m[32;49m RBP[39;49m[32;49m RSP[39;49m[32;49m RBX[39;49m[32;49m RDX[39;49m[32;49m RCX[39;49m[32;49m RAX[39;49m[32;49m MEM[39;49m[32;49m MEM0[39;49m[32;49m MEM32[39;49m[32;49m MEM8[39;49m[32;49m REG[39;49m[32;49m off[39;49m[32;49m on[39;49m[32;49m false[39;49m[32;49m true[39;49m
		 - Combinators[32;49m Compile_Stack_Push_R8D[39;49m[32;49m _Compile_CMPreg_IMM[39;49m[32;49m _Compile_ADDI_DSP[39;49m[32;49m _Compile_MoveTOS_To_R8D[39;49m[32;49m _Compile_IncDecreg[39;49m[32;49m _Compile_Test_Imm[39;49m[32;49m iax[39;49m[32;49m lT[39;49m[32;49m ppT[39;49m[32;49m cST[39;49m[32;49m oT[39;49m[32;49m cntT[39;49m[32;49m cT[39;49m[32;49m aT[39;49m[32;49m locT[39;49m[32;49m bT[39;49m[32;49m stT[39;49m[32;49m oldL[39;49m[32;49m lispTest[39;49m[32;49m sysT[39;49m[32;49m sT[39;49m[32;49m fT[39;49m[32;49m mT[39;49m[32;49m dT2[39;49m[32;49m dT[39;49m[32;49m loT[39;49m[32;49m dT3[39;49m[32;49m dT2[39;49m[32;49m dT0[39;49m[32;49m preprocessorTest[39;49m[32;49m syntaxTest[39;49m[32;49m c_SyntaxTest[39;49m[32;49m objectTest[39;49m[32;49m controlTest[39;49m[32;49m stackTest[39;49m[32;49m bigNumTest[39;49m[32;49m localsTest[39;49m[32;49m arrayTest[39;49m[32;49m classTest[39;49m[32;49m interpT[39;49m[32;49m iinc[39;49m[32;49m _TestDone_[39;49m[32;49m startupMacros[39;49m[32;49m ifElse[39;49m[32;49m ifte[39;49m[32;49m qEval[39;49m[32;49m ix[39;49m[32;49m ?[39;49m[32;49m for[39;49m[32;49m loop[39;49m[32;49m _[39;49m[32;49m _run[39;49m[32;49m _call[39;49m[32;49m run[39;49m[32;49m call[39;49m[32;49m doWhileDo[39;49m[32;49m doWhile[39;49m[32;49m while[39;49m[32;49m if3[39;49m[32;49m if2[39;49m[32;49m if[39;49m[32;49m if1[39;49m[32;49m tf3[39;49m[32;49m tf2[39;49m
		 - DObject[32;49m new[39;49m[32;49m clone[39;49m[32;49m dobject[39;49m
			 - DO_Experimental[32;49m o12[39;49m
				 - o1
					 - x[32;49m ott3[39;49m[32;49m zzx[39;49m[32;49m ott2[39;49m[32;49m zzz[39;49m
						 - xxy
							 - a
					 - [34;49mo2[39;49m[32;49m ay[39;49m
						 - [34;49mo3[39;49m[32;49m ott[39;49m[32;49m o4[39;49m
		 - List[32;49m lcRestoreStack[39;49m[32;49m dupList[39;49m[32;49m printList[39;49m[32;49m eval[39;49m[32;49m _([39;49m[32;49m lisp[39;49m
		 - Experimental[32;49m xyxz[39;49m[32;49m <do[39;49m[32;49m does>[39;49m[32;49m do>[39;49m[32;49m locationPrint[39;49m[32;49m locationPush[39;49m
		 - String[32;49m stricmp[39;49m[32;49m strcpy[39;49m[32;49m strcat[39;49m[32;49m strcmp[39;49m[32;49m Strlen[39;49m
			 - Dlsym
				 - libc[32;49m buf[39;49m
					 - CBuffer[32;49m this[39;49m[32;49m size[39;49m
		 - System[32;49m assertStkChk[39;49m[32;49m _assertStkChk[39;49m[32;49m _assert[39;49m[32;49m assert1[39;49m[32;49m assert1[39;49m[32;49m assert[39;49m[32;49m assert0[39;49m[32;49m assert1s[39;49m[32;49m _assert[39;49m[32;49m _assert0[39;49m[32;49m ctloc[39;49m[32;49m _assert1[39;49m[32;49m _assert1dbg[39;49m[32;49m debugTest[39;49m[32;49m debugTest1[39;49m[32;49m debugTest2[39;49m[32;49m debugTest3[39;49m[32;49m ddps[39;49m[32;49m adps[39;49m[32;49m ahOff[39;49m[32;49m ahOn[39;49m[32;49m sOn[39;49m[32;49m sOff[39;49m[32;49m vb0[39;49m[32;49m vb1[39;49m[32;49m vb2[39;49m[32;49m vb3[39;49m[32;49m vb4[39;49m[32;49m vb[39;49m[32;49m ahalt[39;49m[32;49m ti[39;49m[32;49m stk[39;49m[32;49m aw[39;49m[32;49m sys[39;49m[32;49m fload[39;49m[32;49m pwi[39;49m[32;49m pwdiss[39;49m[32;49m wi[39;49m[32;49m wdissl[39;49m[32;49m wdiss[39;49m[32;49m _wdiss[39;49m[32;49m _source[39;49m[32;49m pel[39;49m[32;49m pdl[39;49m[32;49m location[39;49m[32;49m F[39;49m[32;49m T[39;49m[32;49m false[39;49m[32;49m true[39;49m[32;49m Default[39;49m[32;49m White[39;49m[32;49m Cyan[39;49m[32;49m Magenta[39;49m[32;49m Blue[39;49m[32;49m Yellow[39;49m[32;49m Green[39;49m[32;49m Red[39;49m[32;49m Black[39;49m[32;49m wrun[39;49m[32;49m saveCpu2State[39;49m[32;49m restoreCpu2State[39;49m[32;49m saveCpuState[39;49m[32;49m restoreCpuState[39;49m[32;49m call_ToAddressThruR8_TestAlignRSP[39;49m[32;49m lcOff[39;49m[32;49m lcOn[39;49m[32;49m registers[39;49m[32;49m _pause[39;49m[32;49m pause[39;49m[32;49m location[39;49m[32;49m showTypeWordStack[39;49m[32;49m cpuStateShow[39;49m[32;49m console[39;49m[32;49m ok[39;49m[32;49m warmInit[39;49m[32;49m fr[39;49m[32;49m fullRestart[39;49m[32;49m ri[39;49m[32;49m restartInit[39;49m[32;49m restart[39;49m[32;49m exit[39;49m[32;49m systemBreak[39;49m[32;49m quit[39;49m[32;49m abort[39;49m[32;49m bye[39;49m[32;49m resetAll[39;49m[32;49m freeSessionMem[39;49m[32;49m allocateMem[39;49m[32;49m returnFromFile[39;49m[32;49m system3[39;49m[32;49m system2[39;49m[32;49m system1[39;49m[32;49m system0[39;49m[32;49m shell[39;49m[32;49m time[39;49m[32;49m timerInit[39;49m[32;49m timeInit[39;49m[32;49m echo[39;49m[32;49m jcc8_Off[39;49m[32;49m jcc8_On[39;49m[32;49m echoOff[39;49m[32;49m echoOn[39;49m[32;49m echoOff[39;49m[32;49m variables[39;49m[32;49m stateAll[39;49m[32;49m state[39;49m[32;49m binary[39;49m[32;49m hex[39;49m[32;49m decimal[39;49m[32;49m version[39;49m[32;49m charNumber[39;49m[32;49m lineNumber[39;49m[32;49m throw[39;49m[32;49m filename[39;49m[32;49m stackDepth[39;49m[32;49m stackInit[39;49m[32;49m reset[39;49m[32;49m _include[39;49m
			 - Colors[32;49m alertColors[39;49m[32;49m userColors[39;49m[32;49m defaultColors[39;49m[32;49m noticeColors[39;49m[32;49m debugColors[39;49m[32;49m setNoticeColors[39;49m[32;49m setDebugColors[39;49m[32;49m setAlertColors[39;49m[32;49m setDefaultColors[39;49m[32;49m setUserColors[39;49m[32;49m setNoticeRGB[39;49m[32;49m setUserRGB[39;49m[32;49m setDebugRGB[39;49m[32;49m setAlertRGB[39;49m[32;49m setDefaultRGB[39;49m
			 - File[32;49m freadToString[39;49m[32;49m fexists[39;49m[32;49m fsize[39;49m[32;49m ftell[39;49m[32;49m fseek[39;49m[32;49m fread[39;49m[32;49m fwrite[39;49m[32;49m fclose[39;49m[32;49m fopen[39;49m
		 - Shell[32;49m hio[39;49m[32;49m sh[39;49m[32;49m $[39;49m[32;49m _sh[39;49m[32;49m endif[39;49m[32;49m else[39;49m[32;49m if[39;49m
		 - Debug[32;49m rdi[39;49m[32;49m s[39;49m[32;49m _s[39;49m[32;49m dbiOff[39;49m[32;49m DbiOn[39;49m[32;49m dbiOn[39;49m[32;49m DebugFlag[39;49m[32;49m v1[39;49m[32;49m v4[39;49m[32;49m tcOnv[39;49m[32;49m scOff[39;49m[32;49m scOn[39;49m[32;49m dscOff[39;49m[32;49m dscOn[39;49m[32;49m nt[39;49m[32;49m tcOff[39;49m[32;49m tcOn[39;49m[32;49m ;t[39;49m[32;49m t:[39;49m[32;49m regs[39;49m[32;49m locals[39;49m[32;49m dbrk[39;49m[32;49m OptimizeOn[39;49m[32;49m d2:[39;49m[32;49m d1:[39;49m[32;49m d:[39;49m[32;49m _startDirectory_[39;49m[32;49m <dbg>[39;49m[32;49m saveCpuState[39;49m[32;49m restoreCpuState[39;49m[32;49m stop[39;49m[32;49m localsShow[39;49m[32;49m info[39;49m[32;49m _info[39;49m[32;49m xtDbg[39;49m[32;49m ;d[39;49m[32;49m _dbgOff[39;49m[32;49m _dbgOn[39;49m[32;49m scOn[39;49m[32;49m scOff[39;49m[32;49m dbgTypecheckOff[39;49m[32;49m dbgTypecheckOn[39;49m[32;49m dbgSourceCodeOff[39;49m[32;49m dbgSourceCodeOn[39;49m[32;49m ndstack[39;49m[32;49m dstack[39;49m[32;49m nrstack[39;49m[32;49m rstack[39;49m[32;49m stackDepthPrint[39;49m[32;49m stack[39;49m[32;49m setSourceCodeWord[39;49m[32;49m sourceDontAdd[39;49m[32;49m source[39;49m[32;49m sourceAdd[39;49m[32;49m wordDisassemble[39;49m[32;49m bdis[39;49m[32;49m dis[39;49m[32;49m dump[39;49m
		 - Control[32;49m maybePause[39;49m[32;49m hic2[39;49m[32;49m ct2[39;49m[32;49m ct1[39;49m[32;49m ct0[39;49m[32;49m ct00[39;49m[32;49m leaving[39;49m[32;49m abrk0[39;49m[32;49m abrkcon[39;49m[32;49m x[39;49m
		 - Lexer[32;49m ofile[39;49m[32;49m orpfile[39;49m[32;49m %[39;49m[32;49m "[39;49m
		 - OpenVmTil[32;49m lispOn[39;49m[32;49m lispOff[39;49m[32;49m addToHistoryOff[39;49m[32;49m addToHistoryOn[39;49m[32;49m historyReset[39;49m[32;49m addToHistory[39;49m[32;49m historySize[39;49m[32;49m dataStackSize[39;49m[32;49m dictionarySize[39;49m[32;49m sessionObjectsSize[39;49m[32;49m compilerTempObjectsSize[39;49m[32;49m objectsSize[39;49m[32;49m codeSize[39;49m[32;49m dbi[39;49m[32;49m verbosity[39;49m[32;49m debugLevel[39;49m[32;49m debugOn[39;49m[32;49m debugOff[39;49m[32;49m inlineOn[39;49m[32;49m inlineOff[39;49m[32;49m stringMacrosOff[39;49m[32;49m stringMacrosOn[39;49m[32;49m optimizeOff[39;49m[32;49m optimizeOn[39;49m[32;49m t{[39;49m[32;49m }t[39;49m[32;49m typecheckOff[39;49m[32;49m typecheckOn[39;49m[32;49m inlining[39;49m[32;49m optimize[39;49m[32;49m autoVarOff[39;49m[32;49m autoVarOn[39;49m[32;49m autoVar[39;49m
			 - Memory[32;49m recycleDebugInfo[39;49m[32;49m mem[39;49m[32;49m freeAllTempMem[39;49m[32;49m freeSessionMem[39;49m[32;49m freeLispTempMem[39;49m[32;49m freeCompilerTempMem[39;49m[32;49m freeTemporayMem[39;49m
		 - Word[32;49m code[39;49m[32;49m word_SC_WordList_Show[39;49m[32;49m wordNsListPrint[39;49m[32;49m purgeWordIfContainsName[39;49m[32;49m purgeWordName[39;49m[32;49m addrToWord[39;49m[32;49m codeSize[39;49m[32;49m codeStart[39;49m[32;49m wordAdd[39;49m[32;49m wordFinish[39;49m[32;49m xt=[39;49m[32;49m xt[39;49m[32;49m value[39;49m[32;49m definition[39;49m[32;49m run[39;49m[32;49m wordRun[39;49m[32;49m wordEval[39;49m[32;49m wNamespace[39;49m[32;49m wordNew[39;49m[32;49m name[39;49m
		 - Namespace[32;49m usingLast:[39;49m[32;49m notUsing:[39;49m[32;49m using:[39;49m[32;49m _findAny[39;49m[32;49m _findUsing[39;49m[32;49m namespace[39;49m[32;49m namespaceWords[39;49m[32;49m _namespaceWords[39;49m[32;49m allWords[39;49m[32;49m words[39;49m[32;49m namespaceTreeWithWords[39;49m[32;49m namespaceTree[39;49m[32;49m namespaces[39;49m[32;49m setStateUsing[39;49m[32;49m setStateNotUsing[39;49m[32;49m notUsing[39;49m[32;49m usingLast[39;49m[32;49m usingFirst[39;49m[32;49m usingWAddress[39;49m[32;49m using[39;49m[32;49m in[39;49m
		 - Io[32;49m logOff[39;49m[32;49m logOn[39;49m[32;49m logWrite[39;49m[32;49m logAppend[39;49m[32;49m space[39;49m[32;49m tab[39;49m[32;49m cr[39;49m[32;49m newline[39;49m[32;49m kbhit[39;49m[32;49m key[39;49m[32;49m emit[39;49m[32;49m printString[39;49m
		 - Macro[32;49m tm:[39;49m[32;49m findAlias[39;49m[32;49m alias[39;49m[32;49m sm:[39;49m
		 - PreProcessor[32;49m define[39;49m[32;49m elif[39;49m[32;49m if[39;49m[32;49m else[39;49m[32;49m endif[39;49m[32;49m ![39;49m
		 - Forth[32;49m n,[39;49m[32;49m 8,[39;49m[32;49m 4,[39;49m[32;49m ,[39;49m[32;49m 2,[39;49m[32;49m 1,[39;49m[32;49m '[39;49m
		 - [34;49mLisp[39;49m[32;49m /|[39;49m[32;49m /.[39;49m[32;49m /\[39;49m[32;49m lambda[39;49m[32;49m lcClearDefines[39;49m[32;49m lcReset[39;49m[32;49m ::[39;49m[32;49m ,@[39;49m[32;49m unquoteSplicing[39;49m[32;49m ,[39;49m[32;49m unquote[39;49m[32;49m `[39;49m[32;49m quasiquote[39;49m[32;49m @[39;49m[32;49m '[39;49m[32;49m list[39;49m[32;49m eval[39;49m[32;49m quote[39;49m[32;49m cdr[39;49m[32;49m car[39;49m[32;49m cond[39;49m[32;49m .if[39;49m[32;49m macro[39;49m[32;49m if*[39;49m[32;49m let[39;49m[32;49m set[39;49m[32;49m begin[39;49m[32;49m lambda[39;49m[32;49m _lambda[39;49m[32;49m compile[39;49m[32;49m define[39;49m[32;49m _Printf[39;49m[32;49m )[39;49m[32;49m print[39;49m[32;49m eval[39;49m[32;49m _([39;49m[32;49m ([39;49m
	 - Compiler
		 - Reserved[32;49m {|[39;49m[32;49m |}[39;49m[32;49m swap[39;49m[32;49m keyword[39;49m[32;49m dlsym:[39;49m[32;49m syntactic[39;49m[32;49m immediate[39;49m[32;49m end[39;49m[32;49m {[39;49m[32;49m }[39;49m[32;49m ;[39;49m[32;49m semi[39;49m[32;49m :[39;49m[32;49m word[39;49m
	 - [34;49mLispTemp[39;49m
	 - [34;49mLispDefines[39;49m
Total namespaces = 109 :: Total words = 1515
[34;49m
Increase the verbosity setting to 2 or more for more info here. ( Eg. : verbosity 2 = )[39;49m
ContextSpace                                InUse =    759949 : Unused =    276022 : ReAllocations =    7 : Largest =   274021 : Smallest =     1624
ContextSpace                                InUse =      9640 : Unused =       600 : ReAllocations =    0 : Largest =      600 : Smallest =      600
StringSpace                                 InUse =    154406 : Unused =     30066 : ReAllocations =    3 : Largest =    30004 : Smallest =       12
HistorySpace                                InUse =       232 : Unused =     10008 : ReAllocations =    0 : Largest =    10008 : Smallest =    10008
BufferSpace                                 InUse =    150371 : Unused =     78656 : ReAllocations =    2 : Largest =    75225 : Smallest =     1318
LispTempSpace                               InUse =         0 : Unused =    679848 : ReAllocations =   11 : Largest =   679848 : Smallest =   679848
DictionarySpace                             InUse =   5526592 : Unused =   1129864 : ReAllocations =    5 : Largest =  1128800 : Smallest =       88
SessionObjectsSpace                         InUse =    537582 : Unused =    130712 : ReAllocations =    5 : Largest =   130240 : Smallest =        1
CodeSpace                                   InUse =    215398 : Unused =    145050 : ReAllocations =    2 : Largest =   138439 : Smallest =     2552
WordRecylingSpace                           InUse =        56 : Unused =    595232 : ReAllocations =    9 : Largest =   595232 : Smallest =   595232
CompilerTempObjectSpace                     InUse =         0 : Unused =    986640 : ReAllocations =   13 : Largest =   986640 : Smallest =   986640
TempObjectSpace                             InUse =       105 : Unused =    461010 : ReAllocations =    9 : Largest =   461010 : Smallest =   461010
LispSpace                                   InUse =         0 : Unused =    567360 : ReAllocations =   10 : Largest =   567360 : Smallest =   567360
InternalObjectSpace                         InUse =   1028291 : Unused =     89989 : ReAllocations =    6 : Largest =    88750 : Smallest =       32
CSLInternalSpace                            InUse =     80008 : Unused =      1912 : ReAllocations =    0 : Largest =     1912 : Smallest =     1912
OpenVmTilSpace                              InUse =     20920 : Unused =      2144 : ReAllocations =    1 : Largest =     1912 : Smallest =      232
Data Stack                                  InUse =         0 : Unused =     16384
Total Accounted Mem                         InUse =   8516710 : Unused =   5185113
Mmap_RemainingMemoryAllocated                     =  48141711 : <=: ovt->Mmap_RemainingMemoryAllocated
Total Memory Allocated                            =  13701823
Total Memory leaks                                =         0
RecycledWordCount ::   168 x 440 bytes : Recycled =     73920
WrdInRecycling ::  7754 x 440 bytes : InRecycling =   3411760[39;49m[39;49m
<: bye
bye
