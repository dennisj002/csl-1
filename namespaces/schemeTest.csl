(define (divides? a b)
  (= (modulo b a) 0))
  ;;; (= (remainder b a) 0))

(define (find-divisor n test-divisor)
  (cond ((> (square test-divisor) n) n)
        ((divides? test-divisor n) test-divisor)
        (else (find-divisor n (+ test-divisor 1)))))

(define (smallest-divisor n)
  (find-divisor n 2))

(define (prime? n)
   ( if ( = (= n (smallest-divisor n)) 1) ( #t ) (#f))
(define (sd n) (smallest-divisor n))       
(prime? 13)            
(prime? 100) 
(define (p? n) (prime? n))
