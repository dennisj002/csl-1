
(define (square n) (* n n))
(define (divides? a b)
  (= (modulo b a) 0))
(define (find-divisor n test-divisor)
  (cond ((> (square test-divisor) n) n)
        ((divides? test-divisor n) test-divisor)
        (else (find-divisor n (+ test-divisor 1)))))
(define (smallest-divisor n)
  (find-divisor n 2))


(define (prime? n)
  (if ( = (= n (smallest-divisor n)) 1 ) 'true' 'false' ) )

(define (p? n) (prime? n))
(define (s? n) (smallest-divisor n))
(s? 7)
(p? 71) 
( s )
