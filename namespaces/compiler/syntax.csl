5
C
#if 0 // debug
: sp stack pause ; //sp
Root
: sp stack pause ; //sp
Interpreter
: sp stack pause ; //sp
C_Syntax
void sp () { stack ; pause ; } //sp
cOff
Infix
: sp stack pause ; //sp
#else
: sp ; 
#endif 
sp
User 
cOn
// problem with local variables in yada (below) finding this 'b' and 'c'
void yada () { int a = 2, b = 12, x ; x = (( a + b ) / 2 ) ; return x ; } pwi yada yada () ; 7 s _assert s
void yadaYada () { int a, b, x ; a = 2, b = 12 ; x = (( a + b ) / 2 ) ; return x ; } pwi yadaYada yadaYada () ; 7 _assert s
sp
cOff
infixOn 
Root
: _assert1 _assert s ;
: hi ( | x ) x = ( 2 + ( 3 * 4 ) ), x p return x ; // x p : infix mode 
' hi find wdiss
hi 14 _assert1 //pause
sp
dscOn
: hi1 ( a b | x ) x = 2 + ( ( a ) / ( b ) ) * ( 3 * 4 ), return x ; 
' hi1 find wdiss
6 3 hi1 dup p 48 _assert //pause
: hi1 ( a b | x ) x = ( 2 + ( a / b ) * ( 3 * 4 ) ), return x ; 
' hi1 find wdiss
6 3 hi1 dup p 48 _assert //pause

10 5 hi1 dup p 48 _assert1
: hi2 ( a b | x ) ( x = ( ( ( ( 2 + ( a / b ) ) * ( ( 3 * 4 ) ) ) ) ) ), return x ; 
' hi2 find wdiss
6 3 hi2 dup p 48 _assert1
sp
10 5 hi2 dup p 48 _assert1
: h3 ( a b | x ) ( x = ( ( ( ( 2 + ( ( 3 * 4 ) ) - ( (a) / (b) ) ) ) ) ) ), return x ; 
' h3 find wdiss
6 3 h3 dup p 12 "6 3 h3_assert1" assert
10 5 h3 dup p 12 _assert1
: h4 ( a b | x ) x = ( 20 - ( 3 * 4 ) - ( a / b ) ), return x ; 
' h4 find wdiss
6 3 h4 dup p 6 _assert1
10 5 h4 dup p 6 _assert1
sp
3 ( x ) { stack x dup p 3 _assert0 } ix 
"\nabove line should read 3" ps //pause
sp 
nl
c_syntaxOn
void thi42 ( n ) { n == 1 ? "hi1" ps : n == 2 ? "hi2" ps : n == 3 ? "hi3" ps : n == 4 ? "hi42" ps : "err" ps ; } 
c_syntaxOff
C_Syntax
//'thi42 find wdiss
1 thi42 
2 thi42 
3 thi42 
4 thi42 
sp
Interpreter
0 ? "hi" ps : 0 ? "hi2" ps : 0 ? "hi3" ps : 1 ? "hi42\n" ps : "err" ps 
: thi2 ( n ) n @ 1 == ? "hi1" ps : n @ 2 == ? "hi2" ps : "err" ps ; 
//'thi2 find wdiss
2 thi2
: thi3 ( n ) n @ 1 == ? "hi1" ps : n @ 2 == ? "hi2" ps : n @ 3 == ? "hi3" ps : "err" ps ; 
'thi3 find wdiss
3 thi3
sp
: thi43 ( n ) n @ 1 == ? "hi1" ps : n @ 2 == ? "hi2" ps : n @ 3 == ? "hi3" ps : n @ 4 == ? "hi42" ps : "err" ps ; 
'thi43 find wdiss
4 thi43
nl
sp
1 ? "hi1" ps 
1 ? "hi2" ps : "er2" ps 
sp
0 ? "er" ps : "hi3" ps  
sp
{ 0 ? "er" ps : "hi42" ps } ix //call
nl
sp
0 ? "hi1" ps : 0 ? "hi2" ps : 0 ? "hi3" ps : 1 ? "hi42\n" ps : "err" ps 
sp
c_syntaxOn
void thi41 () { 0 ? "hi1" ps : 0 ? "hi2" ps : 0 ? "hi3" ps : 1 ? "hi42\n" ps : "err" ps ; } 
sp
c_syntaxOff
C_Syntax
'thi41 find wdiss
thi41
sp
c_syntaxOn
void thi42 ( n ) { n == 1 ? "hi1" ps : n == 2 ? "hi2" ps : n == 3 ? "hi3" ps : n == 4 ? "hi42" ps : "err" ps ; } 
c_syntaxOff
C_Syntax
//'thi42 find wdiss
4 thi42 
c_syntaxOff
//pause
0 ? "er" ps : "ok" ps   
1 ? "ok" ps : "er" ps   
//pause
infixOff 
sp
: hi ( n ) 1 2 + infixOn + n @ + 3 infixOff n store return n @ ; 3 hi 9 _assert
: hip ( n ) 1 2 + {| infixOn |} + n @ + 3 infixOff n store return n @ ; 3 hip 9 _assert
2 + 7 assertStkChk // stack checking
sp
//pause