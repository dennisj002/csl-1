5   
#if 1

: sp ; //stack pause ;
"\ndynamic object test\n" ddps
DObject 
"DO_Experimental" namespace
DO_Experimental
"o1" new
"o12" new
o1.x 123 =
o1.x @ 123 "object new slot test : " assert1
"o2" 'o1 find clone
o2.x @ 123 "object clone test : " assert1
o2.ay 2 = 
"o3" 'o2 find clone 
o3.ay @ 2 "object clone test2 : " assert1
o3.x @ 123 "object clone test3 : " assert1
"o4" 'o3 find clone 
o4.x @ 123 "object clone test4 : " assert1
o4.ay @ 2 "object clone test5 : " assert1
: ott o1.x.zzz 456 = o1.x.zzz @ ; ".I" typeSignature
ott 456 "object compile test6 : " assert1
//: ott2 ( n ) o1.x.xxy n @ =  o1.x.zzx o1.x.xxy @ = o1.x.zzx @ return tos ;
: ott2 ( n ) o1.x.xxy n @ =  o1.x.zzx o1.x.xxy @ = return ( o1.x.zzx @ ) ;
987 dup ott2 "object compile test7 : " assert1    
: ott3 ( n ) 
    o1.x.xxy.a n @ = 
    o1.x.zzx  o1.x.xxy.a @ = 
    o1.x.zzx @  
    return tos
;
123987 dup ott3 "object compile test8 : " assert1   
sp 
"DO_Experimental" notUsing

#endif
    
2 + 7 assertStkChk // stack checking
