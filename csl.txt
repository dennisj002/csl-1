[39;49m[39;49m[39;49m[39;49m
Startup [ 0 ] : elapsed time = 0.007559210 seconds
version 0.909.237
<: tc demo

before testAll 
test nested elif 1 - correct 

 =============================
C.[34;49mfactorial[39;49m <:> csl compiled word
SourceCode for C.[34;49mfactorial[39;49m :> 
[34;49m: factorial ( n | rec ) rec 1 = { n @ 1 > } { rec @ n @ * rec store n -- } while return ( rec @ ) ; [39;49m
Source code file location of [34;49mfactorial[39;49m : "namespaces/test/bigNum.csl" : 9.2 :: we are now at : namespaces/test/bigNum.csl : 10.22
Compiled with : optimizeOn, inlineOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xaad59c91 -- code size = 84 bytes
TypeSignature : 
 -----------------------------
Word :: C.[34;49mfactorial[39;49m : definition = 0x00007fbdaad59c91 : disassembly at namespaces/test/bigNum.csl : 10.22 :
[34;49m ..                                     : [39;49m[33;40mfactorial[39;49m[34;49m ( n | rec ) rec 1 = { n @ 1 > } { rec @ n @ * rec store n -- } while return ( rec @ ) ;  .. [39;49m[32;49m
0x7fbdaad59c91    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fbdaad59c95    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaad59c99    4981c610000000          add r14, 0x10                                          [39;49m
[34;49m ..               : factorial ( n | rec ) [39;49m[33;40mrec[39;49m[34;49m 1 = { n @ 1 > } { rec @ n @ * rec store n -- } while return ( rec @ ) ;  .. [39;49m[32;49m
0x7fbdaad59ca0    498d4708                lea rax, [r15+0x8]                                     [39;49m
[34;49m ..           : factorial ( n | rec ) rec [39;49m[33;40m1[39;49m[34;49m = { n @ 1 > } { rec @ n @ * rec store n -- } while return ( rec @ ) ;  .. [39;49m[32;49m
0x7fbdaad59ca4    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m ..         : factorial ( n | rec ) rec 1 [39;49m[33;40m=[39;49m[34;49m { n @ 1 > } { rec @ n @ * rec store n -- } while return ( rec @ ) ;  .. [39;49m[32;49m
0x7fbdaad59cab    488908                  mov [rax], rcx                                         [39;49m
[34;49m ..     : factorial ( n | rec ) rec 1 = { [39;49m[33;40mn[39;49m[34;49m @ 1 > } { rec @ n @ * rec store n -- } while return ( rec @ ) ;  .. [39;49m[32;49m
0x7fbdaad59cae    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m  : factorial ( n | rec ) rec 1 = { n @ 1 [39;49m[33;40m>[39;49m[34;49m } { rec @ n @ * rec store n -- } while return ( rec @ ) ;  .. [39;49m[32;49m
0x7fbdaad59cb2    4883f801                cmp rax, 0x1                                           [39;49m[32;49m
0x7fbdaad59cb6    0f8e19000000            jle 0x7fbdaad59cd5         	< C.[34;49mfactorial[39;49m+68[32;49m >[39;49m[39;49m
[34;49m .. ial ( n | rec ) rec 1 = { n @ 1 > } { [39;49m[33;40mrec[39;49m[34;49m @ n @ * rec store n -- } while return ( rec @ ) ; [39;49m[32;49m
0x7fbdaad59cbc    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m .. n | rec ) rec 1 = { n @ 1 > } { rec @ [39;49m[33;40mn[39;49m[34;49m @ * rec store n -- } while return ( rec @ ) ; [39;49m[32;49m
0x7fbdaad59cc0    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m
[34;49m .. rec ) rec 1 = { n @ 1 > } { rec @ n @ [39;49m[33;40m*[39;49m[34;49m rec store n -- } while return ( rec @ ) ; [39;49m[32;49m
0x7fbdaad59cc4    480fafc1                imul rax, rcx                                          [39;49m
[34;49m .. c ) rec 1 = { n @ 1 > } { rec @ n @ * [39;49m[33;40mrec[39;49m[34;49m store n -- } while return ( rec @ ) ; [39;49m[32;49m
0x7fbdaad59cc8    498d4f08                lea rcx, [r15+0x8]                                     [39;49m
[34;49m .. rec 1 = { n @ 1 > } { rec @ n @ * rec [39;49m[33;40mstore[39;49m[34;49m n -- } while return ( rec @ ) ; [39;49m[32;49m
0x7fbdaad59ccc    488901                  mov [rcx], rax                                         [39;49m
[34;49m .. { n @ 1 > } { rec @ n @ * rec store n [39;49m[33;40m--[39;49m[34;49m } while return ( rec @ ) ; [39;49m[32;49m
0x7fbdaad59ccf    49ff4ff8                dec qword [r15-0x8]                                    [39;49m
[34;49m ..  @ 1 > } { rec @ n @ * rec store n -- [39;49m[33;40m}[39;49m[34;49m while return ( rec @ ) ; [39;49m[32;49m
0x7fbdaad59cd3    ebd9                    jmp 0x7fbdaad59cae         	< C.[34;49mfactorial[39;49m+29[32;49m >[39;49m[39;49m[32;49m
0x7fbdaad59cd5    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m .. c store n -- } while return ( rec @ ) [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fbdaad59cd9    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad59cdd    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m
[34;49m .. n @ * rec store n -- } while return ( [39;49m[33;40mrec[39;49m[34;49m @ ) ; [39;49m[32;49m
0x7fbdaad59ce1    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaad59ce4    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'factorial' :: codeSize = 83
Word : 0x00007fbdaad09600 :: Compiled at : 0x00007fbdaad59c91
 =============================
::> 'wdiss' was called at namespaces/test/bigNum.csl 10.22 <::
 5040 factorial  : ok


 =============================
C.[34;49mfactorial[39;49m <:> csl compiled word
SourceCode for C.[34;49mfactorial[39;49m :> 
[34;49m: factorial ( REG n | REG rec ) rec 1 = { n @ 1 > } { rec @ n @ * rec store n -- } while return ( rec @ ) ; [39;49m
Source code file location of [34;49mfactorial[39;49m : "namespaces/test/bigNum.csl" : 12.2 :: we are now at : namespaces/test/bigNum.csl : 13.22
Compiled with : optimizeOn, inlineOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xaad59cf9 -- code size = 33 bytes
TypeSignature : 
 -----------------------------
Word :: C.[34;49mfactorial[39;49m : definition = 0x00007fbdaad59cf9 : disassembly at namespaces/test/bigNum.csl : 13.22 :
[34;49m ..                           : factorial [39;49m[33;40m([39;49m[34;49m REG n | REG rec ) rec 1 = { n @ 1 > } { rec @ n @ * rec store n -- } while return ( rec @ ) ;  .. [39;49m[32;49m
0x7fbdaad59cf9    498b3e                  mov rdi, [r14]                                         [39;49m
[34;49m ..   : factorial ( REG n | REG rec ) rec [39;49m[33;40m1[39;49m[34;49m = { n @ 1 > } { rec @ n @ * rec store n -- } while return ( rec @ ) ;  .. [39;49m[32;49m
0x7fbdaad59cfc    48c7c601000000          mov rsi, 0x1                                           [39;49m
[34;49m .. l ( REG n | REG rec ) rec 1 = { n @ 1 [39;49m[33;40m>[39;49m[34;49m } { rec @ n @ * rec store n -- } while return ( rec @ ) ; [39;49m[32;49m
0x7fbdaad59d03    4883ff01                cmp rdi, 0x1                                           [39;49m[32;49m
0x7fbdaad59d07    0f8e09000000            jle 0x7fbdaad59d16         	< C.[34;49mfactorial[39;49m+29[32;49m >[39;49m[39;49m
[34;49m .. rec ) rec 1 = { n @ 1 > } { rec @ n @ [39;49m[33;40m*[39;49m[34;49m rec store n -- } while return ( rec @ ) ; [39;49m[32;49m
0x7fbdaad59d0d    480faff7                imul rsi, rdi                                          [39;49m
[34;49m .. { n @ 1 > } { rec @ n @ * rec store n [39;49m[33;40m--[39;49m[34;49m } while return ( rec @ ) ; [39;49m[32;49m
0x7fbdaad59d11    48ffcf                  dec rdi                                                [39;49m
[34;49m .. : factorial ( REG n | REG rec ) rec 1 [39;49m[33;40m=[39;49m[34;49m { n @ 1 > } { rec @ n @ * rec store n -- } while return ( rec @ ) ;  .. [39;49m[32;49m
0x7fbdaad59d14    ebed                    jmp 0x7fbdaad59d03         	< C.[34;49mfactorial[39;49m+10[32;49m >[39;49m[39;49m
[34;49m .. c store n -- } while return ( rec @ ) [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fbdaad59d16    498936                  mov [r14], rsi                                         [39;49m[32;49m
0x7fbdaad59d19    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'factorial' :: codeSize = 32
Word : 0x00007fbdaad0bdf8 :: Compiled at : 0x00007fbdaad59cf9
 =============================
::> 'wdiss' was called at namespaces/test/bigNum.csl 13.22 <::
 5040 factorial  : ok


 =============================
C.[34;49mfactorial[39;49m <:> csl compiled word
SourceCode for C.[34;49mfactorial[39;49m :> 
[34;49m: factorial ( REG n | REG rec ) rec 1 = { n @ 1 > } { rec @ n @ * rec store n -- } while return ( rec @ ) ; [39;49m
Source code file location of [34;49mfactorial[39;49m : "namespaces/test/bigNum.csl" : 12.2 :: we are now at : namespaces/test/bigNum.csl : 26.14
Compiled with : optimizeOn, inlineOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xaad59cf9 -- code size = 33 bytes
TypeSignature : 
 -----------------------------
Word :: C.[34;49mfactorial[39;49m : definition = 0x00007fbdaad59cf9 : disassembly at namespaces/test/bigNum.csl : 26.14 :
[34;49m ..                           : factorial [39;49m[33;40m([39;49m[34;49m REG n | REG rec ) rec 1 = { n @ 1 > } { rec @ n @ * rec store n -- } while return ( rec @ ) ;  .. [39;49m[32;49m
0x7fbdaad59cf9    498b3e                  mov rdi, [r14]                                         [39;49m
[34;49m ..   : factorial ( REG n | REG rec ) rec [39;49m[33;40m1[39;49m[34;49m = { n @ 1 > } { rec @ n @ * rec store n -- } while return ( rec @ ) ;  .. [39;49m[32;49m
0x7fbdaad59cfc    48c7c601000000          mov rsi, 0x1                                           [39;49m
[34;49m .. l ( REG n | REG rec ) rec 1 = { n @ 1 [39;49m[33;40m>[39;49m[34;49m } { rec @ n @ * rec store n -- } while return ( rec @ ) ; [39;49m[32;49m
0x7fbdaad59d03    4883ff01                cmp rdi, 0x1                                           [39;49m[32;49m
0x7fbdaad59d07    0f8e09000000            jle 0x7fbdaad59d16         	< C.[34;49mfactorial[39;49m+29[32;49m >[39;49m[39;49m
[34;49m .. rec ) rec 1 = { n @ 1 > } { rec @ n @ [39;49m[33;40m*[39;49m[34;49m rec store n -- } while return ( rec @ ) ; [39;49m[32;49m
0x7fbdaad59d0d    480faff7                imul rsi, rdi                                          [39;49m
[34;49m .. { n @ 1 > } { rec @ n @ * rec store n [39;49m[33;40m--[39;49m[34;49m } while return ( rec @ ) ; [39;49m[32;49m
0x7fbdaad59d11    48ffcf                  dec rdi                                                [39;49m
[34;49m .. : factorial ( REG n | REG rec ) rec 1 [39;49m[33;40m=[39;49m[34;49m { n @ 1 > } { rec @ n @ * rec store n -- } while return ( rec @ ) ;  .. [39;49m[32;49m
0x7fbdaad59d14    ebed                    jmp 0x7fbdaad59d03         	< C.[34;49mfactorial[39;49m+10[32;49m >[39;49m[39;49m
[34;49m .. c store n -- } while return ( rec @ ) [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fbdaad59d16    498936                  mov [r14], rsi                                         [39;49m[32;49m
0x7fbdaad59d19    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'factorial' :: codeSize = 32
Word : 0x00007fbdaad0bdf8 :: Compiled at : 0x00007fbdaad59cf9
 =============================
::> 'wdiss' was called at namespaces/test/bigNum.csl 26.14 <::
 5040
 =============================
BigNum.[34;49mqexp[39;49m <:> csl compiled word
SourceCode for BigNum.[34;49mqexp[39;49m :> 
[34;49m: qexp { dup 1 >= } { dup -- qexp * } { drop 1 } ifElse ; [39;49m
Source code file location of [34;49mqexp[39;49m : "namespaces/test/bigNum.csl" : 47.2 :: we are now at : namespaces/test/bigNum.csl : 48.17
Compiled with : optimizeOn, inlineOn, Jcc8 off
Debug Source Code on : BigNum on : Lisp off : Word Source Code on
starting at address : 0xaad59d9c -- code size = 154 bytes
TypeSignature : 
 -----------------------------
Word :: BigNum.[34;49mqexp[39;49m : definition = 0x00007fbdaad59d9c : disassembly at namespaces/test/bigNum.csl : 48.17 :
[34;49m ..                              : qexp { [39;49m[33;40mdup[39;49m[34;49m 1 >= } { dup -- qexp * } { drop 1 } ifElse ;  .. [39;49m[32;49m
0x7fbdaad59d9c    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fbdaad59d9f    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad59da3    498906                  mov [r14], rax                                         [39;49m
[34;49m ..                          : qexp { dup [39;49m[33;40m1[39;49m[34;49m >= } { dup -- qexp * } { drop 1 } ifElse ;  .. [39;49m[32;49m
0x7fbdaad59da6    48b89e84b7aabd7f0000    mov rax, 0x7fbdaab7849e                                [39;49m[32;49m
0x7fbdaad59db0    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad59db4    498906                  mov [r14], rax                                         [39;49m
[34;49m ..                        : qexp { dup 1 [39;49m[33;40m>=[39;49m[34;49m } { dup -- qexp * } { drop 1 } ifElse ;  .. [39;49m[32;49m
0x7fbdaad59db7    49b8007a3c1ebd550000    mov r8, 0x55bd1e3c7a00                                 [39;49m[32;49m
0x7fbdaad59dc1    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaad59dcb    49ffd1                  call r9                    	< BigNum.[34;49m>=[39;49m : 0x000055bd1e3c7a00[32;49m >[39;49m[39;49m
[34;49m ..                     : qexp { dup 1 >= [39;49m[33;40m}[39;49m[34;49m { dup -- qexp * } { drop 1 } ifElse ;  .. [39;49m[32;49m
0x7fbdaad59dce    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fbdaad59dd1    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m .. p 1 >= } { dup -- qexp * } { drop 1 } [39;49m[33;40mifElse[39;49m[34;49m ; [39;49m[32;49m
0x7fbdaad59dd5    4885c0                  test rax, rax                                          [39;49m[32;49m
0x7fbdaad59dd8    0f8442000000            jz 0x7fbdaad59e20          	< BigNum.[34;49mqexp[39;49m+132[32;49m >[39;49m[39;49m
[34;49m ..                 : qexp { dup 1 >= } { [39;49m[33;40mdup[39;49m[34;49m -- qexp * } { drop 1 } ifElse ;  .. [39;49m[32;49m
0x7fbdaad59dde    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fbdaad59de1    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad59de5    498906                  mov [r14], rax                                         [39;49m
[34;49m ..             : qexp { dup 1 >= } { dup [39;49m[33;40m--[39;49m[34;49m qexp * } { drop 1 } ifElse ;  .. [39;49m[32;49m
0x7fbdaad59de8    49b840773c1ebd550000    mov r8, 0x55bd1e3c7740                                 [39;49m[32;49m
0x7fbdaad59df2    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaad59dfc    49ffd1                  call r9                    	< BigNum.[34;49m--[39;49m : 0x000055bd1e3c7740[32;49m >[39;49m[39;49m
[34;49m ..          : qexp { dup 1 >= } { dup -- [39;49m[33;40mqexp[39;49m[34;49m * } { drop 1 } ifElse ;  .. [39;49m[32;49m
0x7fbdaad59dff    e898ffffff              call 0x7fbdaad59d9c        	< BigNum.[34;49mqexp[39;49m : 0x00007fbdaad59d9c[32;49m >[39;49m[39;49m
[34;49m ..     : qexp { dup 1 >= } { dup -- qexp [39;49m[33;40m*[39;49m[34;49m } { drop 1 } ifElse ;  .. [39;49m[32;49m
0x7fbdaad59e04    49b8a0713c1ebd550000    mov r8, 0x55bd1e3c71a0                                 [39;49m[32;49m
0x7fbdaad59e0e    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaad59e18    49ffd1                  call r9                    	< BigNum.[34;49m*[39;49m : 0x000055bd1e3c71a0[32;49m >[39;49m[39;49m
[34;49m ..   : qexp { dup 1 >= } { dup -- qexp * [39;49m[33;40m}[39;49m[34;49m { drop 1 } ifElse ;  .. [39;49m[32;49m
0x7fbdaad59e1b    e915000000              jmp 0x7fbdaad59e35         	< BigNum.[34;49mqexp[39;49m+153[32;49m >[39;49m[39;49m
[34;49m  : qexp { dup 1 >= } { dup -- qexp * } { [39;49m[33;40mdrop[39;49m[34;49m 1 } ifElse ;  .. [39;49m[32;49m
0x7fbdaad59e20    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m .. { dup 1 >= } { dup -- qexp * } { drop [39;49m[33;40m1[39;49m[34;49m } ifElse ; [39;49m[32;49m
0x7fbdaad59e24    48b89886b7aabd7f0000    mov rax, 0x7fbdaab78698                                [39;49m[32;49m
0x7fbdaad59e2e    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad59e32    498906                  mov [r14], rax                                         [39;49m
[34;49m .. } { dup -- qexp * } { drop 1 } ifElse [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fbdaad59e35    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'qexp' :: codeSize = 153
Word : 0x00007fbdaad11680 :: Compiled at : 0x00007fbdaad59d9c
 =============================
::> 'wdiss' was called at namespaces/test/bigNum.csl 48.17 <::

 64 ! =  126881533357939042808962815520364490349535517879012388551519623917277055579607782641369088.0000000000000000

 1000 ! =  402500373014356573965793741945905331466415717275973005160450229307388258333305832074207539846141283233702319438244769525411367331950099268525081393066425641102364440538975256902898517732664348980339626955005842316414123623403303314558289023634589822459704133213687429695457361657683095633068674365092298546917635737018843674171489187933483232494644423138811439404881511922556769048272927089741323503336434785632402662508318178665837259828423326590524272558247963332000435657214278730517996831484196794780521608426407559004504605957514774013092093469970916169727571697221184562821813938228404815831008615299778976697065770997474768189927041576443854543367349421048551080834222352223715990791568941498400546806702876237014372470939002485369774391979668323876230446769380468612251665618792787485288393684197966231925205109888854702615949497837812295005890936840393755566768606141716118106467089738495142725886845933949765463606863447249180212483368373142748531552050758951261860855735774759363503465340414857799903094848377914328225502420134160706225369387488557165388258856440905878114403243339443218369283812196222272876497915081151745950838312945559467001410733526843709990418280028695926067425904924017160403088385615383853873873671204578957424842028610403130207220061474237697930654817955553216533560486784371742524017943681683718654713276916520518555137831575727617116067581869846850943768524279471585922876093873717315955846078694518404073987301440581322109739376192655200814870217759606791532106403065695332871696199920944938503897192549529124195488766369835125707913130533414392578650377791848991673178941730310627156743745149304683957293789930220041980215281108226887715116296939951708865964679779009286134328403379974059781066494711832852475207094304993498881340552075990361298578180682331230675764232294360563311013586691240226085143490549124289072062567132304987422415635743567746070194311533656373274375562284550382281185947162716362544861561499521687491322833509308280351313300605862362525996908983812880072943508034247701921763281673871901503890888457638381822916177377158606802753036755393390872007093544903206115548100491698914408060729906267473152898417756855951690401658725978464746597327109704448469122845463964631650412175257859192393071378748734225914381731183587471712625532959775801733207335954317771408537556974482153172331123483834269159359882984336807116835459466939557047224231302459590282324146036434360668725577414879395184240477672413414171312952473257510332755655534651539589753187702700644828017240511283623211730090940094609561181224960.0000000000000000

 =============================
BigNum.[34;49maexp[39;49m <:> csl compiled word
SourceCode for BigNum.[34;49maexp[39;49m :> 
[34;49m: aexp ( -t N.N ) { dup 1 <= } { drop 1 } { dup -- aexp * } ifElse ; [39;49m
Source code file location of [34;49maexp[39;49m : "namespaces/test/bigNum.csl" : 53.2 :: we are now at : namespaces/test/bigNum.csl : 54.17
Compiled with : optimizeOn, inlineOn, Jcc8 off
Debug Source Code on : BigNum on : Lisp off : Word Source Code on
starting at address : 0xaad59e4a -- code size = 154 bytes
TypeSignature : BigNum -> BigNum 
 -----------------------------
Word :: BigNum.[34;49maexp[39;49m : definition = 0x00007fbdaad59e4a : disassembly at namespaces/test/bigNum.csl : 54.17 :
[34;49m ..                   : aexp ( -t N.N ) { [39;49m[33;40mdup[39;49m[34;49m 1 <= } { drop 1 } { dup -- aexp * } ifElse ;  .. [39;49m[32;49m
0x7fbdaad59e4a    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fbdaad59e4d    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad59e51    498906                  mov [r14], rax                                         [39;49m
[34;49m ..               : aexp ( -t N.N ) { dup [39;49m[33;40m1[39;49m[34;49m <= } { drop 1 } { dup -- aexp * } ifElse ;  .. [39;49m[32;49m
0x7fbdaad59e54    48b83c89b7aabd7f0000    mov rax, 0x7fbdaab7893c                                [39;49m[32;49m
0x7fbdaad59e5e    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad59e62    498906                  mov [r14], rax                                         [39;49m
[34;49m ..             : aexp ( -t N.N ) { dup 1 [39;49m[33;40m<=[39;49m[34;49m } { drop 1 } { dup -- aexp * } ifElse ;  .. [39;49m[32;49m
0x7fbdaad59e65    49b8a0793c1ebd550000    mov r8, 0x55bd1e3c79a0                                 [39;49m[32;49m
0x7fbdaad59e6f    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaad59e79    49ffd1                  call r9                    	< BigNum.[34;49m<=[39;49m : 0x000055bd1e3c79a0[32;49m >[39;49m[39;49m
[34;49m ..          : aexp ( -t N.N ) { dup 1 <= [39;49m[33;40m}[39;49m[34;49m { drop 1 } { dup -- aexp * } ifElse ;  .. [39;49m[32;49m
0x7fbdaad59e7c    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fbdaad59e7f    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m .. p 1 <= } { drop 1 } { dup -- aexp * } [39;49m[33;40mifElse[39;49m[34;49m ; [39;49m[32;49m
0x7fbdaad59e83    4885c0                  test rax, rax                                          [39;49m[32;49m
0x7fbdaad59e86    0f841a000000            jz 0x7fbdaad59ea6          	< BigNum.[34;49maexp[39;49m+92[32;49m >[39;49m[39;49m
[34;49m ..      : aexp ( -t N.N ) { dup 1 <= } { [39;49m[33;40mdrop[39;49m[34;49m 1 } { dup -- aexp * } ifElse ;  .. [39;49m[32;49m
0x7fbdaad59e8c    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m .. : aexp ( -t N.N ) { dup 1 <= } { drop [39;49m[33;40m1[39;49m[34;49m } { dup -- aexp * } ifElse ;  .. [39;49m[32;49m
0x7fbdaad59e90    48b8368bb7aabd7f0000    mov rax, 0x7fbdaab78b36                                [39;49m[32;49m
0x7fbdaad59e9a    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad59e9e    498906                  mov [r14], rax                                         [39;49m
[34;49m  : aexp ( -t N.N ) { dup 1 <= } { drop 1 [39;49m[33;40m}[39;49m[34;49m { dup -- aexp * } ifElse ;  .. [39;49m[32;49m
0x7fbdaad59ea1    e93d000000              jmp 0x7fbdaad59ee3         	< BigNum.[34;49maexp[39;49m+153[32;49m >[39;49m[39;49m
[34;49m ..  ( -t N.N ) { dup 1 <= } { drop 1 } { [39;49m[33;40mdup[39;49m[34;49m -- aexp * } ifElse ; [39;49m[32;49m
0x7fbdaad59ea6    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fbdaad59ea9    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad59ead    498906                  mov [r14], rax                                         [39;49m
[34;49m .. t N.N ) { dup 1 <= } { drop 1 } { dup [39;49m[33;40m--[39;49m[34;49m aexp * } ifElse ; [39;49m[32;49m
0x7fbdaad59eb0    49b840773c1ebd550000    mov r8, 0x55bd1e3c7740                                 [39;49m[32;49m
0x7fbdaad59eba    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaad59ec4    49ffd1                  call r9                    	< BigNum.[34;49m--[39;49m : 0x000055bd1e3c7740[32;49m >[39;49m[39;49m
[34;49m .. .N ) { dup 1 <= } { drop 1 } { dup -- [39;49m[33;40maexp[39;49m[34;49m * } ifElse ; [39;49m[32;49m
0x7fbdaad59ec7    e87effffff              call 0x7fbdaad59e4a        	< BigNum.[34;49maexp[39;49m : 0x00007fbdaad59e4a[32;49m >[39;49m[39;49m
[34;49m .. { dup 1 <= } { drop 1 } { dup -- aexp [39;49m[33;40m*[39;49m[34;49m } ifElse ; [39;49m[32;49m
0x7fbdaad59ecc    49b8a0713c1ebd550000    mov r8, 0x55bd1e3c71a0                                 [39;49m[32;49m
0x7fbdaad59ed6    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaad59ee0    49ffd1                  call r9                    	< BigNum.[34;49m*[39;49m : 0x000055bd1e3c71a0[32;49m >[39;49m[39;49m
[34;49m .. } { drop 1 } { dup -- aexp * } ifElse [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fbdaad59ee3    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'aexp' :: codeSize = 153
Word : 0x00007fbdaad12cd8 :: Compiled at : 0x00007fbdaad59e4a
 =============================
::> 'wdiss' was called at namespaces/test/bigNum.csl 54.17 <::

 =============================
BigNum.[34;49mbexp[39;49m <:> csl compiled word
SourceCode for BigNum.[34;49mbexp[39;49m :> 
[34;49m: bexp ( n ) { n @ 1 <= } { 1 } { n @ dup 1 - bexp * } ifElse return tos ; [39;49m
Source code file location of [34;49mbexp[39;49m : "namespaces/test/bigNum.csl" : 55.2 :: we are now at : namespaces/test/bigNum.csl : 57.18
Compiled with : optimizeOn, inlineOn, Jcc8 off
Debug Source Code on : BigNum on : Lisp off : Word Source Code on
starting at address : 0xaad59ee9 -- code size = 202 bytes
TypeSignature : 
 -----------------------------
Word :: BigNum.[34;49mbexp[39;49m : definition = 0x00007fbdaad59ee9 : disassembly at namespaces/test/bigNum.csl : 57.18 :
[34;49m ..                                     : [39;49m[33;40mbexp[39;49m[34;49m ( n ) { n @ 1 <= } { 1 } { n @ dup 1 - bexp * } ifElse return tos ;  .. [39;49m[32;49m
0x7fbdaad59ee9    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fbdaad59eed    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaad59ef1    4981c608000000          add r14, 0x8                                           [39;49m
[34;49m ..                        : bexp ( n ) { [39;49m[33;40mn[39;49m[34;49m @ 1 <= } { 1 } { n @ dup 1 - bexp * } ifElse return tos ;  .. [39;49m[32;49m
0x7fbdaad59ef8    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad59efc    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad59f00    498906                  mov [r14], rax                                         [39;49m
[34;49m ..                    : bexp ( n ) { n @ [39;49m[33;40m1[39;49m[34;49m <= } { 1 } { n @ dup 1 - bexp * } ifElse return tos ;  .. [39;49m[32;49m
0x7fbdaad59f03    48b8748db7aabd7f0000    mov rax, 0x7fbdaab78d74                                [39;49m[32;49m
0x7fbdaad59f0d    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad59f11    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaad59f14    49b8a0793c1ebd550000    mov r8, 0x55bd1e3c79a0                                 [39;49m[32;49m
0x7fbdaad59f1e    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaad59f28    49ffd1                  call r9                    	< BigNum.[34;49m<=[39;49m : 0x000055bd1e3c79a0[32;49m >[39;49m[39;49m
[34;49m ..               : bexp ( n ) { n @ 1 <= [39;49m[33;40m}[39;49m[34;49m { 1 } { n @ dup 1 - bexp * } ifElse return tos ;  .. [39;49m[32;49m
0x7fbdaad59f2b    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fbdaad59f2e    4983ee08                sub r14, 0x8                                           [39;49m[32;49m
0x7fbdaad59f32    4885c0                  test rax, rax                                          [39;49m[32;49m
0x7fbdaad59f35    0f8416000000            jz 0x7fbdaad59f51          	< BigNum.[34;49mbexp[39;49m+104[32;49m >[39;49m[39;49m
[34;49m ..           : bexp ( n ) { n @ 1 <= } { [39;49m[33;40m1[39;49m[34;49m } { n @ dup 1 - bexp * } ifElse return tos ;  .. [39;49m[32;49m
0x7fbdaad59f3b    48b86e8fb7aabd7f0000    mov rax, 0x7fbdaab78f6e                                [39;49m[32;49m
0x7fbdaad59f45    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad59f49    498906                  mov [r14], rax                                         [39;49m
[34;49m ..         : bexp ( n ) { n @ 1 <= } { 1 [39;49m[33;40m}[39;49m[34;49m { n @ dup 1 - bexp * } ifElse return tos ;  .. [39;49m[32;49m
0x7fbdaad59f4c    e953000000              jmp 0x7fbdaad59fa4         	< BigNum.[34;49mbexp[39;49m+187[32;49m >[39;49m[39;49m
[34;49m ..     : bexp ( n ) { n @ 1 <= } { 1 } { [39;49m[33;40mn[39;49m[34;49m @ dup 1 - bexp * } ifElse return tos ;  .. [39;49m[32;49m
0x7fbdaad59f51    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad59f55    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fbdaad59f59    498906                  mov [r14], rax                                         [39;49m
[34;49m .. : bexp ( n ) { n @ 1 <= } { 1 } { n @ [39;49m[33;40mdup[39;49m[34;49m 1 - bexp * } ifElse return tos ;  .. [39;49m[32;49m
0x7fbdaad59f5c    498946f8                mov [r14-0x8], rax                                     [39;49m
[34;49m: bexp ( n ) { n @ 1 <= } { 1 } { n @ dup [39;49m[33;40m1[39;49m[34;49m - bexp * } ifElse return tos ;  .. [39;49m[32;49m
0x7fbdaad59f60    48b86891b7aabd7f0000    mov rax, 0x7fbdaab79168                                [39;49m[32;49m
0x7fbdaad59f6a    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad59f6e    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  ( n ) { n @ 1 <= } { 1 } { n @ dup 1 [39;49m[33;40m-[39;49m[34;49m bexp * } ifElse return tos ; [39;49m[32;49m
0x7fbdaad59f71    49b8e0723c1ebd550000    mov r8, 0x55bd1e3c72e0                                 [39;49m[32;49m
0x7fbdaad59f7b    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaad59f85    49ffd1                  call r9                    	< BigNum.[34;49m-[39;49m : 0x000055bd1e3c72e0[32;49m >[39;49m[39;49m
[34;49m ..  n ) { n @ 1 <= } { 1 } { n @ dup 1 - [39;49m[33;40mbexp[39;49m[34;49m * } ifElse return tos ; [39;49m[32;49m
0x7fbdaad59f88    e85cffffff              call 0x7fbdaad59ee9        	< BigNum.[34;49mbexp[39;49m : 0x00007fbdaad59ee9[32;49m >[39;49m[39;49m[32;49m
0x7fbdaad59f8d    49b8a0713c1ebd550000    mov r8, 0x55bd1e3c71a0                                 [39;49m[32;49m
0x7fbdaad59f97    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaad59fa1    49ffd1                  call r9                    	< BigNum.[34;49m*[39;49m : 0x000055bd1e3c71a0[32;49m >[39;49m[39;49m
[34;49m .. } { 1 } { n @ dup 1 - bexp * } ifElse [39;49m[33;40mreturn[39;49m[34;49m tos ; [39;49m[32;49m
0x7fbdaad59fa4    498b06                  mov rax, [r14]                                         [39;49m
[34;49m ..  @ dup 1 - bexp * } ifElse return tos [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fbdaad59fa7    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad59fab    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaad59faf    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaad59fb2    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'bexp' :: codeSize = 201
Word : 0x00007fbdaad14330 :: Compiled at : 0x00007fbdaad59ee9
 =============================
::> 'wdiss' was called at namespaces/test/bigNum.csl 57.18 <::

 =============================
BigNum.[34;49mbexp0[39;49m <:> csl compiled word
SourceCode for BigNum.[34;49mbexp0[39;49m :> 
[34;49m: bexp0 ( n ) { n @ 1 <= } { 1 } { n @ dup -- bexp0 * } ifElse return tos ; [39;49m
Source code file location of [34;49mbexp0[39;49m : "namespaces/test/bigNum.csl" : 56.2 :: we are now at : namespaces/test/bigNum.csl : 57.37
Compiled with : optimizeOn, inlineOn, Jcc8 off
Debug Source Code on : BigNum on : Lisp off : Word Source Code on
starting at address : 0xaad59fb8 -- code size = 185 bytes
TypeSignature : 
 -----------------------------
Word :: BigNum.[34;49mbexp0[39;49m : definition = 0x00007fbdaad59fb8 : disassembly at namespaces/test/bigNum.csl : 57.37 :
[34;49m ..                                     : [39;49m[33;40mbexp0[39;49m[34;49m ( n ) { n @ 1 <= } { 1 } { n @ dup -- bexp0 * } ifElse return tos ;  .. [39;49m[32;49m
0x7fbdaad59fb8    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fbdaad59fbc    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaad59fc0    4981c608000000          add r14, 0x8                                           [39;49m
[34;49m ..                       : bexp0 ( n ) { [39;49m[33;40mn[39;49m[34;49m @ 1 <= } { 1 } { n @ dup -- bexp0 * } ifElse return tos ;  .. [39;49m[32;49m
0x7fbdaad59fc7    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad59fcb    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad59fcf    498906                  mov [r14], rax                                         [39;49m
[34;49m ..                   : bexp0 ( n ) { n @ [39;49m[33;40m1[39;49m[34;49m <= } { 1 } { n @ dup -- bexp0 * } ifElse return tos ;  .. [39;49m[32;49m
0x7fbdaad59fd2    48b8a693b7aabd7f0000    mov rax, 0x7fbdaab793a6                                [39;49m[32;49m
0x7fbdaad59fdc    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad59fe0    498906                  mov [r14], rax                                         [39;49m
[34;49m ..                 : bexp0 ( n ) { n @ 1 [39;49m[33;40m<=[39;49m[34;49m } { 1 } { n @ dup -- bexp0 * } ifElse return tos ;  .. [39;49m[32;49m
0x7fbdaad59fe3    49b8a0793c1ebd550000    mov r8, 0x55bd1e3c79a0                                 [39;49m[32;49m
0x7fbdaad59fed    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaad59ff7    49ffd1                  call r9                    	< BigNum.[34;49m<=[39;49m : 0x000055bd1e3c79a0[32;49m >[39;49m[39;49m
[34;49m ..              : bexp0 ( n ) { n @ 1 <= [39;49m[33;40m}[39;49m[34;49m { 1 } { n @ dup -- bexp0 * } ifElse return tos ;  .. [39;49m[32;49m
0x7fbdaad59ffa    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fbdaad59ffd    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m .. @ 1 <= } { 1 } { n @ dup -- bexp0 * } [39;49m[33;40mifElse[39;49m[34;49m return tos ; [39;49m[32;49m
0x7fbdaad5a001    4885c0                  test rax, rax                                          [39;49m[32;49m
0x7fbdaad5a004    0f8416000000            jz 0x7fbdaad5a020          	< BigNum.[34;49mbexp0[39;49m+104[32;49m >[39;49m[39;49m
[34;49m ..          : bexp0 ( n ) { n @ 1 <= } { [39;49m[33;40m1[39;49m[34;49m } { n @ dup -- bexp0 * } ifElse return tos ;  .. [39;49m[32;49m
0x7fbdaad5a00a    48b8a095b7aabd7f0000    mov rax, 0x7fbdaab795a0                                [39;49m[32;49m
0x7fbdaad5a014    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5a018    498906                  mov [r14], rax                                         [39;49m
[34;49m ..        : bexp0 ( n ) { n @ 1 <= } { 1 [39;49m[33;40m}[39;49m[34;49m { n @ dup -- bexp0 * } ifElse return tos ;  .. [39;49m[32;49m
0x7fbdaad5a01b    e942000000              jmp 0x7fbdaad5a062         	< BigNum.[34;49mbexp0[39;49m+170[32;49m >[39;49m[39;49m
[34;49m ..    : bexp0 ( n ) { n @ 1 <= } { 1 } { [39;49m[33;40mn[39;49m[34;49m @ dup -- bexp0 * } ifElse return tos ;  .. [39;49m[32;49m
0x7fbdaad5a020    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5a024    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fbdaad5a028    498906                  mov [r14], rax                                         [39;49m
[34;49m   : bexp0 ( n ) { n @ 1 <= } { 1 } { n @ [39;49m[33;40mdup[39;49m[34;49m -- bexp0 * } ifElse return tos ;  .. [39;49m[32;49m
0x7fbdaad5a02b    498946f8                mov [r14-0x8], rax                                     [39;49m
[34;49m .. p0 ( n ) { n @ 1 <= } { 1 } { n @ dup [39;49m[33;40m--[39;49m[34;49m bexp0 * } ifElse return tos ; [39;49m[32;49m
0x7fbdaad5a02f    49b840773c1ebd550000    mov r8, 0x55bd1e3c7740                                 [39;49m[32;49m
0x7fbdaad5a039    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaad5a043    49ffd1                  call r9                    	< BigNum.[34;49m--[39;49m : 0x000055bd1e3c7740[32;49m >[39;49m[39;49m
[34;49m .. ( n ) { n @ 1 <= } { 1 } { n @ dup -- [39;49m[33;40mbexp0[39;49m[34;49m * } ifElse return tos ; [39;49m[32;49m
0x7fbdaad5a046    e86dffffff              call 0x7fbdaad59fb8        	< BigNum.[34;49mbexp0[39;49m : 0x00007fbdaad59fb8[32;49m >[39;49m[39;49m
[34;49m .. { n @ 1 <= } { 1 } { n @ dup -- bexp0 [39;49m[33;40m*[39;49m[34;49m } ifElse return tos ; [39;49m[32;49m
0x7fbdaad5a04b    49b8a0713c1ebd550000    mov r8, 0x55bd1e3c71a0                                 [39;49m[32;49m
0x7fbdaad5a055    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaad5a05f    49ffd1                  call r9                    	< BigNum.[34;49m*[39;49m : 0x000055bd1e3c71a0[32;49m >[39;49m[39;49m
[34;49m .. } { 1 } { n @ dup -- bexp0 * } ifElse [39;49m[33;40mreturn[39;49m[34;49m tos ; [39;49m[32;49m
0x7fbdaad5a062    498b06                  mov rax, [r14]                                         [39;49m
[34;49m ..  @ dup -- bexp0 * } ifElse return tos [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fbdaad5a065    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5a069    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaad5a06d    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaad5a070    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'bexp0' :: codeSize = 184
Word : 0x00007fbdaad160d8 :: Compiled at : 0x00007fbdaad59fb8
 =============================
::> 'wdiss' was called at namespaces/test/bigNum.csl 57.37 <::
 5040.0000000000000000 5040.0000000000000000 40320.0000000000000000 40320.0000000000000000
 5040.0000000000000000 5040.0000000000000000 40320.0000000000000000
 =============================
BigNum.[34;49m!![39;49m <:> csl compiled word
SourceCode for BigNum.[34;49m!![39;49m :> 
[34;49m: !! ! p nl ; [39;49m
Source code file location of [34;49m!![39;49m : "namespaces/test/bigNum.csl" : 68.2 :: we are now at : namespaces/test/bigNum.csl : 69.15
Compiled with : optimizeOn, inlineOn, Jcc8 off
Debug Source Code on : BigNum on : Lisp off : Word Source Code on
starting at address : 0xaad5a085 -- code size = 50 bytes
TypeSignature : 
 -----------------------------
Word :: BigNum.[34;49m!![39;49m : definition = 0x00007fbdaad5a085 : disassembly at namespaces/test/bigNum.csl : 69.15 :
[34;49m ..                                  : !! [39;49m[33;40m![39;49m[34;49m p nl ;  .. [39;49m[32;49m
0x7fbdaad5a085    49b9b89fd5aabd7f0000    mov r9, 0x7fbdaad59fb8                                 [39;49m[32;49m
0x7fbdaad5a08f    49ffd1                  call r9                    	< BigNum.[34;49mbexp0[39;49m : 0x00007fbdaad59fb8[32;49m >[39;49m[39;49m
[34;49m ..                                : !! ! [39;49m[33;40mp[39;49m[34;49m nl ;  .. [39;49m[32;49m
0x7fbdaad5a092    49b97869d5aabd7f0000    mov r9, 0x7fbdaad56978                                 [39;49m[32;49m
0x7fbdaad5a09c    49ffd1                  call r9                    	< BigNum.[34;49mfprint[39;49m : 0x00007fbdaad56978[32;49m >[39;49m[39;49m
[34;49m ..                              : !! ! p [39;49m[33;40mnl[39;49m[34;49m ;  .. [39;49m[32;49m
0x7fbdaad5a09f    49b8e0903e1ebd550000    mov r8, 0x55bd1e3e90e0                                 [39;49m[32;49m
0x7fbdaad5a0a9    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaad5a0b3    49ffd1                  call r9                    	< Io.[34;49mnewline[39;49m : 0x000055bd1e3e90e0[32;49m >[39;49m[39;49m
[34;49m ..                           : !! ! p nl [39;49m[33;40m;[39;49m[34;49m  .. [39;49m[32;49m
0x7fbdaad5a0b6    c3                      ret                                                    [39;49m
Word_Disassemble : word - '!!' :: codeSize = 49
Word : 0x00007fbdaad18038 :: Compiled at : 0x00007fbdaad5a085
 =============================
::> 'wdiss' was called at namespaces/test/bigNum.csl 69.15 <::
 5040.0000000000000000
 40320.0000000000000000
 40320.0000000000000000

 =============================
BigNum.[34;49mbexpl[39;49m <:> csl compiled word
SourceCode for BigNum.[34;49mbexpl[39;49m :> 
[34;49m: bexpl ( n ) { n @ 1 <= } { 1 } { n @ dup 1 - bexpl * } ifElse return tos ; [39;49m
Source code file location of [34;49mbexpl[39;49m : "namespaces/test/bigNum.csl" : 79.2 :: we are now at : namespaces/test/bigNum.csl : 80.18
Compiled with : optimizeOn, inlineOn, Jcc8 off
Debug Source Code on : BigNum on : Lisp off : Word Source Code on
starting at address : 0xaad5a0bc -- code size = 202 bytes
TypeSignature : 
 -----------------------------
Word :: BigNum.[34;49mbexpl[39;49m : definition = 0x00007fbdaad5a0bc : disassembly at namespaces/test/bigNum.csl : 80.18 :
[34;49m ..                                     : [39;49m[33;40mbexpl[39;49m[34;49m ( n ) { n @ 1 <= } { 1 } { n @ dup 1 - bexpl * } ifElse return tos ;  .. [39;49m[32;49m
0x7fbdaad5a0bc    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fbdaad5a0c0    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaad5a0c4    4981c608000000          add r14, 0x8                                           [39;49m
[34;49m ..                       : bexpl ( n ) { [39;49m[33;40mn[39;49m[34;49m @ 1 <= } { 1 } { n @ dup 1 - bexpl * } ifElse return tos ;  .. [39;49m[32;49m
0x7fbdaad5a0cb    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5a0cf    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5a0d3    498906                  mov [r14], rax                                         [39;49m
[34;49m ..                   : bexpl ( n ) { n @ [39;49m[33;40m1[39;49m[34;49m <= } { 1 } { n @ dup 1 - bexpl * } ifElse return tos ;  .. [39;49m[32;49m
0x7fbdaad5a0d6    48b89899b7aabd7f0000    mov rax, 0x7fbdaab79998                                [39;49m[32;49m
0x7fbdaad5a0e0    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5a0e4    498906                  mov [r14], rax                                         [39;49m
[34;49m ..                 : bexpl ( n ) { n @ 1 [39;49m[33;40m<=[39;49m[34;49m } { 1 } { n @ dup 1 - bexpl * } ifElse return tos ;  .. [39;49m[32;49m
0x7fbdaad5a0e7    49b8a0793c1ebd550000    mov r8, 0x55bd1e3c79a0                                 [39;49m[32;49m
0x7fbdaad5a0f1    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaad5a0fb    49ffd1                  call r9                    	< BigNum.[34;49m<=[39;49m : 0x000055bd1e3c79a0[32;49m >[39;49m[39;49m
[34;49m ..              : bexpl ( n ) { n @ 1 <= [39;49m[33;40m}[39;49m[34;49m { 1 } { n @ dup 1 - bexpl * } ifElse return tos ;  .. [39;49m[32;49m
0x7fbdaad5a0fe    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fbdaad5a101    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m ..  1 <= } { 1 } { n @ dup 1 - bexpl * } [39;49m[33;40mifElse[39;49m[34;49m return tos ; [39;49m[32;49m
0x7fbdaad5a105    4885c0                  test rax, rax                                          [39;49m[32;49m
0x7fbdaad5a108    0f8416000000            jz 0x7fbdaad5a124          	< BigNum.[34;49mbexpl[39;49m+104[32;49m >[39;49m[39;49m
[34;49m ..          : bexpl ( n ) { n @ 1 <= } { [39;49m[33;40m1[39;49m[34;49m } { n @ dup 1 - bexpl * } ifElse return tos ;  .. [39;49m[32;49m
0x7fbdaad5a10e    48b8929bb7aabd7f0000    mov rax, 0x7fbdaab79b92                                [39;49m[32;49m
0x7fbdaad5a118    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5a11c    498906                  mov [r14], rax                                         [39;49m
[34;49m ..        : bexpl ( n ) { n @ 1 <= } { 1 [39;49m[33;40m}[39;49m[34;49m { n @ dup 1 - bexpl * } ifElse return tos ;  .. [39;49m[32;49m
0x7fbdaad5a11f    e953000000              jmp 0x7fbdaad5a177         	< BigNum.[34;49mbexpl[39;49m+187[32;49m >[39;49m[39;49m
[34;49m ..    : bexpl ( n ) { n @ 1 <= } { 1 } { [39;49m[33;40mn[39;49m[34;49m @ dup 1 - bexpl * } ifElse return tos ;  .. [39;49m[32;49m
0x7fbdaad5a124    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5a128    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fbdaad5a12c    498906                  mov [r14], rax                                         [39;49m
[34;49m   : bexpl ( n ) { n @ 1 <= } { 1 } { n @ [39;49m[33;40mdup[39;49m[34;49m 1 - bexpl * } ifElse return tos ;  .. [39;49m[32;49m
0x7fbdaad5a12f    498946f8                mov [r14-0x8], rax                                     [39;49m
[34;49m .. pl ( n ) { n @ 1 <= } { 1 } { n @ dup [39;49m[33;40m1[39;49m[34;49m - bexpl * } ifElse return tos ; [39;49m[32;49m
0x7fbdaad5a133    48b88c9db7aabd7f0000    mov rax, 0x7fbdaab79d8c                                [39;49m[32;49m
0x7fbdaad5a13d    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5a141    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  ( n ) { n @ 1 <= } { 1 } { n @ dup 1 [39;49m[33;40m-[39;49m[34;49m bexpl * } ifElse return tos ; [39;49m[32;49m
0x7fbdaad5a144    49b8e0723c1ebd550000    mov r8, 0x55bd1e3c72e0                                 [39;49m[32;49m
0x7fbdaad5a14e    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaad5a158    49ffd1                  call r9                    	< BigNum.[34;49m-[39;49m : 0x000055bd1e3c72e0[32;49m >[39;49m[39;49m
[34;49m ..  n ) { n @ 1 <= } { 1 } { n @ dup 1 - [39;49m[33;40mbexpl[39;49m[34;49m * } ifElse return tos ; [39;49m[32;49m
0x7fbdaad5a15b    e85cffffff              call 0x7fbdaad5a0bc        	< BigNum.[34;49mbexpl[39;49m : 0x00007fbdaad5a0bc[32;49m >[39;49m[39;49m
[34;49m ..  n @ 1 <= } { 1 } { n @ dup 1 - bexpl [39;49m[33;40m*[39;49m[34;49m } ifElse return tos ; [39;49m[32;49m
0x7fbdaad5a160    49b8a0713c1ebd550000    mov r8, 0x55bd1e3c71a0                                 [39;49m[32;49m
0x7fbdaad5a16a    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaad5a174    49ffd1                  call r9                    	< BigNum.[34;49m*[39;49m : 0x000055bd1e3c71a0[32;49m >[39;49m[39;49m
[34;49m ..  { 1 } { n @ dup 1 - bexpl * } ifElse [39;49m[33;40mreturn[39;49m[34;49m tos ; [39;49m[32;49m
0x7fbdaad5a177    498b06                  mov rax, [r14]                                         [39;49m
[34;49m .. @ dup 1 - bexpl * } ifElse return tos [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fbdaad5a17a    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5a17e    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaad5a182    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaad5a185    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'bexpl' :: codeSize = 201
Word : 0x00007fbdaad188d0 :: Compiled at : 0x00007fbdaad5a0bc
 =============================
::> 'wdiss' was called at namespaces/test/bigNum.csl 80.18 <::
 5040.0000000000000000
 starting BigNum
 0.3333358764648438 1.7320556640625000 3.0000000000000000 
preprocessor test ok1
 
preprocessor test ok2
 
preprocessor test ok3
 
preprocessor test ok 4
 ppx = 4
 ppxe = 0 
classTest.csl
Using Namespaces :> C Root Class Compiler Logic Int Combinators int System User Shell OpenVmTil Lexer Interpreter Debug Word Namespace StartupMacros Io Compiling Reserved Compiler DObject Macro PreProcessor List Stack Memory Colors File String Asm Bits Locals Forth Experimental 

Pointer.size =  8

Integer size =  8

Integer.int16.size =  2

Integer.byte.size =  1

Using Namespaces :> Class Root byte Integer Pointer C Compiler Logic Int Combinators int System User Shell OpenVmTil Lexer Interpreter Debug Word Namespace StartupMacros Io Compiling Reserved Compiler DObject Macro PreProcessor List Stack Memory Colors File String Asm Bits Locals Forth Experimental 

Using Namespaces :> Buffer Class Root byte Integer Pointer C Compiler Logic Int Combinators int System User Shell OpenVmTil Lexer Interpreter Debug Word Namespace StartupMacros Io Compiling Reserved Compiler DObject Macro PreProcessor List Stack Memory Colors File String Asm Bits Locals Forth Experimental 

Buffer size =  256

Using Namespaces :> DLLNode Buffer Class Root byte Integer Pointer C Compiler Logic Int Combinators int System User Shell OpenVmTil Lexer Interpreter Debug Word Namespace StartupMacros Io Compiling Reserved Compiler DObject Macro PreProcessor List Stack Memory Colors File String Asm Bits Locals Forth Experimental 

DLLNode size =  16

DLLNode size =  18

Using Namespaces :> DLLNode Buffer Class Root byte Integer Pointer C Compiler Logic Int Combinators int System User Shell OpenVmTil Lexer Interpreter Debug Word Namespace StartupMacros Io Compiling Reserved Compiler DObject Macro PreProcessor List Stack Memory Colors File String Asm Bits Locals Forth Experimental 

DLLNode size =  16
 16
Dump at : namespaces/test/classTest.csl : 62.51 :
Dump : Address = 0x00007fbdaab2e168 : Number = 16 :: (little endian dump)
0x00007fbdaab2e168 :  01 00 00 00 00 00 00 00  02 00 00 00 00 00 00 00  ........ ........ 

 =============================
DLList.[34;49minit[39;49m <:> csl compiled word
SourceCode for DLList.[34;49minit[39;49m :> 
[34;49m: init ( this ) this.HeadNode.AfterReference this.TailNode.BeforeReference = this.TailNode.BeforeReference this.HeadNode.AfterReference = this.HeadNode.BeforeReference 1 = this.TailNode.AfterReference 2 = ; [39;49m
Source code file location of [34;49minit[39;49m : "namespaces/test/classTest.csl" : 73.2 :: we are now at : namespaces/test/classTest.csl : 79.18
Compiled with : optimizeOn, inlineOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xaad5a1ca -- code size = 113 bytes
TypeSignature : 
 -----------------------------
Word :: DLList.[34;49minit[39;49m : definition = 0x00007fbdaad5a1ca : disassembly at namespaces/test/classTest.csl : 79.18 :
[34;49m ..                                     : [39;49m[33;40minit[39;49m[34;49m ( this ) this.HeadNode.AfterReference this.TailNode.BeforeReference = this.TailNode.BeforeRefere .. [39;49m[32;49m
0x7fbdaad5a1ca    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fbdaad5a1ce    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaad5a1d2    4981c608000000          add r14, 0x8                                           [39;49m
[34;49m ..                       : init ( this ) [39;49m[33;40mthis[39;49m[34;49m.HeadNode.AfterReference this.TailNode.BeforeReference = this.TailNode.BeforeReference this.HeadN .. [39;49m[32;49m
0x7fbdaad5a1d9    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5a1dd    4881c000000000          add rax, 0x0                                           [39;49m
[34;49m .. ( this ) this.HeadNode.AfterReference [39;49m[33;40mthis[39;49m[34;49m.TailNode.BeforeReference = this.TailNode.BeforeReference this.HeadNode.AfterReference = this.Hea .. [39;49m[32;49m
0x7fbdaad5a1e4    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5a1e8    4881c118000000          add rcx, 0x18                                          [39;49m
[34;49m .. ference this.TailNode.BeforeReference [39;49m[33;40m=[39;49m[34;49m this.TailNode.BeforeReference this.HeadNode.AfterReference = this.HeadNode.BeforeReference 1 = this .. [39;49m[32;49m
0x7fbdaad5a1ef    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. rence this.TailNode.BeforeReference = [39;49m[33;40mthis[39;49m[34;49m.TailNode.BeforeReference this.HeadNode.AfterReference = this.HeadNode.BeforeReference 1 = this.T .. [39;49m[32;49m
0x7fbdaad5a1f2    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. lNode.BeforeReference = this.TailNode.[39;49m[33;40mBeforeReference[39;49m[34;49m this.HeadNode.AfterReference = this.HeadNode.BeforeReference 1 = this.TailNode.AfterR .. [39;49m[32;49m
0x7fbdaad5a1f6    4881c018000000          add rax, 0x18                                          [39;49m
[34;49m .. rence = this.TailNode.BeforeReference [39;49m[33;40mthis[39;49m[34;49m.HeadNode.AfterReference = this.HeadNode.BeforeReference 1 = this.TailNode.AfterReference 2 = ;  .. [39;49m[32;49m
0x7fbdaad5a1fd    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m
[34;49m .. eference this.HeadNode.AfterReference [39;49m[33;40m=[39;49m[34;49m this.HeadNode.BeforeReference 1 = this.TailNode.AfterReference 2 = ;  .. [39;49m[32;49m
0x7fbdaad5a201    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. erence this.HeadNode.AfterReference = [39;49m[33;40mthis[39;49m[34;49m.HeadNode.BeforeReference 1 = this.TailNode.AfterReference 2 = ;  .. [39;49m[32;49m
0x7fbdaad5a204    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. adNode.AfterReference = this.HeadNode.[39;49m[33;40mBeforeReference[39;49m[34;49m 1 = this.TailNode.AfterReference 2 = ;  .. [39;49m[32;49m
0x7fbdaad5a208    4881c008000000          add rax, 0x8                                           [39;49m
[34;49m .. rence = this.HeadNode.BeforeReference [39;49m[33;40m1[39;49m[34;49m = this.TailNode.AfterReference 2 = ;  .. [39;49m[32;49m
0x7fbdaad5a20f    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m .. nce = this.HeadNode.BeforeReference 1 [39;49m[33;40m=[39;49m[34;49m this.TailNode.AfterReference 2 = ;  .. [39;49m[32;49m
0x7fbdaad5a216    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. e = this.HeadNode.BeforeReference 1 = [39;49m[33;40mthis[39;49m[34;49m.TailNode.AfterReference 2 = ;  .. [39;49m[32;49m
0x7fbdaad5a219    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. his.HeadNode.BeforeReference 1 = this.[39;49m[33;40mTailNode[39;49m[34;49m.AfterReference 2 = ;  .. [39;49m[32;49m
0x7fbdaad5a21d    4881c010000000          add rax, 0x10                                          [39;49m
[34;49m .. ence 1 = this.TailNode.AfterReference [39;49m[33;40m2[39;49m[34;49m = ;  .. [39;49m[32;49m
0x7fbdaad5a224    48c7c102000000          mov rcx, 0x2                                           [39;49m
[34;49m .. ce 1 = this.TailNode.AfterReference 2 [39;49m[33;40m=[39;49m[34;49m ;  .. [39;49m[32;49m
0x7fbdaad5a22b    488908                  mov [rax], rcx                                         [39;49m
[34;49m ..  1 = this.TailNode.AfterReference 2 = [39;49m[33;40m;[39;49m[34;49m  .. [39;49m[32;49m
0x7fbdaad5a22e    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5a232    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaad5a236    4983ee08                sub r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5a23a    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'init' :: codeSize = 112
Word : 0x00007fbdaad1e620 :: Compiled at : 0x00007fbdaad5a1ca
 =============================
::> 'wdiss' was called at namespaces/test/classTest.csl 79.18 <::
 32
Dump at : namespaces/test/classTest.csl : 82.36 :
Dump : Address = 0x00007fbdaab2e858 : Number = 32 :: (little endian dump)
0x00007fbdaab2e858 :  70 e8 b2 aa bd 7f 00 00  01 00 00 00 00 00 00 00  p....... ........ 
0x00007fbdaab2e868 :  02 00 00 00 00 00 00 00  58 e8 b2 aa bd 7f 00 00  ........ X....... 
 class init test :   : ok

 15 15 15 15 15 
 below line should show several 15's yada yada yada yada neti
 15 15 15 15 15
 
 above line should show several 15's
Using Namespaces :> DLList DLLNode Buffer Class Root byte Integer Pointer C Compiler Logic Int Combinators int System User Shell OpenVmTil Lexer Interpreter Debug Word Namespace StartupMacros Io Compiling Reserved Compiler DObject Macro PreProcessor List Stack Memory Colors File String Asm Bits Locals Forth Experimental 

 =============================
DLListClone.[34;49minit[39;49m <:> csl compiled word
SourceCode for DLListClone.[34;49minit[39;49m :> 
[34;49m: init ( this ) this.Category 12 = this.Three 3 = this.Prototype this.Three @ = this.Prototype @ dup p 3 "init_assert1" assert this.Prototype @ p this.Sum 0 = this.Four 4 = this.Twelve 12 = this.Accum this.Sum @ = this.Sum this.Category @ 3 + this.Prototype @ & = this.Sum @ 3 "init_assert2" do> locationPush does> locationPrint <do assert this.Accum this.Three @ this.Four @ * this.Three @ / = this.Accum @ 4 "\n DLListClone init : this.Accum = :" ps "init_assert3" assert this.Prototype @ p this.Sum this.Category @ this.Prototype @ * this.Category @ - = this.Sum @ dup hex p 24 "init_assert5" assert decimal nl this.Category @ dup p 12 "init_assert7" assert this.Prototype @ p this.Sum this.Category @ this.Prototype @ * = this.Sum @ "testing yada" ps 36 "init_assert8" assert this.Sum this.Category @ this.Prototype @ - dup p = this.Sum this.Category @ this.Prototype @ && dup p = this.Sum this.Category @ this.Prototype @ & dup p = this.Accum this.Prototype @ = this.Sum this.Category @ this.Prototype @ || dup p = this.Sum this.Category @ this.Prototype @ / dup p = this.Category @ dup p 12 _assert this.Sum @ p this.Prototype @ p "\n 12 3 testing yada 36 9 1 0 15 4 12 4 3 : output above should (approximately) read" ddps hex "\nthis = " ps this p "\nthis @ = " ps this @ p "\nthis.size = " ps this.size @ p nl this dup p this.size @ dump this.Accum this.Prototype @ dup p = this this.size @ dump decimal this.Accum @ dup 3 "\nAccum should be 3 : assert9 =" assert p this.Category @ dup 12 "\nCategory should be 12 : assert10 =" assert p ; [39;49m
Source code file location of [34;49minit[39;49m : "namespaces/test/classTest.csl" : 103.2 :: we are now at : namespaces/test/classTest.csl : 155.18
Compiled with : optimizeOn, inlineOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xaad5a3ee -- code size = 2539 bytes
TypeSignature : 
 -----------------------------
Word :: DLListClone.[34;49minit[39;49m : definition = 0x00007fbdaad5a3ee : disassembly at namespaces/test/classTest.csl : 155.18 :[32;49m
0x7fbdaad5a3ee    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fbdaad5a3f2    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaad5a3f6    4981c608000000          add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5a3fd    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5a401    4881c020000000          add rax, 0x20                                          [39;49m[32;49m
0x7fbdaad5a408    48c7c10c000000          mov rcx, 0xc                                           [39;49m[32;49m
0x7fbdaad5a40f    488908                  mov [rax], rcx                                         [39;49m[32;49m
0x7fbdaad5a412    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5a416    4881c040000000          add rax, 0x40                                          [39;49m[32;49m
0x7fbdaad5a41d    48c7c103000000          mov rcx, 0x3                                           [39;49m[32;49m
0x7fbdaad5a424    488908                  mov [rax], rcx                                         [39;49m[32;49m
0x7fbdaad5a427    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5a42b    4881c028000000          add rax, 0x28                                          [39;49m[32;49m
0x7fbdaad5a432    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5a436    4881c140000000          add rcx, 0x40                                          [39;49m[32;49m
0x7fbdaad5a43d    488b09                  mov rcx, [rcx]                                         [39;49m[32;49m
0x7fbdaad5a440    488908                  mov [rax], rcx                                         [39;49m[32;49m
0x7fbdaad5a443    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5a447    4881c028000000          add rax, 0x28                                          [39;49m[32;49m
0x7fbdaad5a44e    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fbdaad5a451    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fbdaad5a455    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaad5a458    498946f8                mov [r14-0x8], rax                                     [39;49m[32;49m
0x7fbdaad5a45c    49b94464d5aabd7f0000    mov r9, 0x7fbdaad56444                                 [39;49m[32;49m
0x7fbdaad5a466    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fbdaad56444[32;49m >[39;49m[39;49m[32;49m
0x7fbdaad5a469    48c7c003000000          mov rax, 0x3                                           [39;49m[32;49m
0x7fbdaad5a470    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5a474    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaad5a477    48b884b9bfaabd7f0000    mov rax, 0x7fbdaabfb984    	[32;49m< string : '[39;49m[39;49minit_assert1[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fbdaad5a481    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5a485    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaad5a488    49b92b7bd5aabd7f0000    mov r9, 0x7fbdaad57b2b                                 [39;49m[32;49m
0x7fbdaad5a492    49ffd1                  call r9                    	< System.[34;49m_assert1[39;49m : 0x00007fbdaad57b2b[32;49m >[39;49m[39;49m[32;49m
0x7fbdaad5a495    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5a499    4881c028000000          add rax, 0x28                                          [39;49m[32;49m
0x7fbdaad5a4a0    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fbdaad5a4a3    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5a4a7    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaad5a4aa    49b94464d5aabd7f0000    mov r9, 0x7fbdaad56444                                 [39;49m[32;49m
0x7fbdaad5a4b4    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fbdaad56444[32;49m >[39;49m[39;49m[32;49m
0x7fbdaad5a4b7    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5a4bb    4881c030000000          add rax, 0x30                                          [39;49m[32;49m
0x7fbdaad5a4c2    48c7c100000000          mov rcx, 0x0                                           [39;49m[32;49m
0x7fbdaad5a4c9    488908                  mov [rax], rcx                                         [39;49m[32;49m
0x7fbdaad5a4cc    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5a4d0    4881c048000000          add rax, 0x48                                          [39;49m[32;49m
0x7fbdaad5a4d7    48c7c104000000          mov rcx, 0x4                                           [39;49m[32;49m
0x7fbdaad5a4de    488908                  mov [rax], rcx                                         [39;49m[32;49m
0x7fbdaad5a4e1    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5a4e5    4881c038000000          add rax, 0x38                                          [39;49m[32;49m
0x7fbdaad5a4ec    48c7c10c000000          mov rcx, 0xc                                           [39;49m[32;49m
0x7fbdaad5a4f3    488908                  mov [rax], rcx                                         [39;49m[32;49m
0x7fbdaad5a4f6    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5a4fa    4881c050000000          add rax, 0x50                                          [39;49m[32;49m
0x7fbdaad5a501    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5a505    4881c130000000          add rcx, 0x30                                          [39;49m[32;49m
0x7fbdaad5a50c    488b09                  mov rcx, [rcx]                                         [39;49m[32;49m
0x7fbdaad5a50f    488908                  mov [rax], rcx                                         [39;49m[32;49m
0x7fbdaad5a512    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5a516    4881c030000000          add rax, 0x30                                          [39;49m[32;49m
0x7fbdaad5a51d    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5a521    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaad5a524    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5a528    4881c020000000          add rax, 0x20                                          [39;49m[32;49m
0x7fbdaad5a52f    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fbdaad5a532    48c7c103000000          mov rcx, 0x3                                           [39;49m[32;49m
0x7fbdaad5a539    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fbdaad5a53c    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5a540    4881c128000000          add rcx, 0x28                                          [39;49m[32;49m
0x7fbdaad5a547    488b09                  mov rcx, [rcx]                                         [39;49m[32;49m
0x7fbdaad5a54a    4823c1                  and rax, rcx                                           [39;49m[32;49m
0x7fbdaad5a54d    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fbdaad5a550    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fbdaad5a553    4983ee08                sub r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5a557    488908                  mov [rax], rcx                                         [39;49m[32;49m
0x7fbdaad5a55a    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5a55e    4881c030000000          add rax, 0x30                                          [39;49m[32;49m
0x7fbdaad5a565    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fbdaad5a568    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5a56c    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaad5a56f    48c7c003000000          mov rax, 0x3                                           [39;49m[32;49m
0x7fbdaad5a576    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5a57a    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaad5a57d    48b8bcb9bfaabd7f0000    mov rax, 0x7fbdaabfb9bc    	[32;49m< string : '[39;49m[39;49minit_assert2[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fbdaad5a587    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5a58b    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaad5a58e    48b8c8f2b2aabd7f0000    mov rax, 0x7fbdaab2f2c8                                [39;49m[32;49m
0x7fbdaad5a598    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5a59c    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaad5a59f    49b830c83e1ebd550000    mov r8, 0x55bd1e3ec830                                 [39;49m[32;49m
0x7fbdaad5a5a9    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaad5a5b3    49ffd1                  call r9                    	< Experimental.[34;49mlocationPrint[39;49m : 0x000055bd1e3ec830[32;49m >[39;49m[39;49m[32;49m
0x7fbdaad5a5b6    49b92b7bd5aabd7f0000    mov r9, 0x7fbdaad57b2b                                 [39;49m[32;49m
0x7fbdaad5a5c0    49ffd1                  call r9                    	< System.[34;49m_assert1[39;49m : 0x00007fbdaad57b2b[32;49m >[39;49m[39;49m[32;49m
0x7fbdaad5a5c3    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5a5c7    4881c050000000          add rax, 0x50                                          [39;49m[32;49m
0x7fbdaad5a5ce    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5a5d2    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaad5a5d5    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5a5d9    4881c040000000          add rax, 0x40                                          [39;49m[32;49m
0x7fbdaad5a5e0    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fbdaad5a5e3    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5a5e7    4881c148000000          add rcx, 0x48                                          [39;49m[32;49m
0x7fbdaad5a5ee    488b09                  mov rcx, [rcx]                                         [39;49m[32;49m
0x7fbdaad5a5f1    480fafc1                imul rax, rcx                                          [39;49m[32;49m
0x7fbdaad5a5f5    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5a5f9    4881c140000000          add rcx, 0x40                                          [39;49m[32;49m
0x7fbdaad5a600    488b09                  mov rcx, [rcx]                                         [39;49m[32;49m
0x7fbdaad5a603    48c7c200000000          mov rdx, 0x0                                           [39;49m[32;49m
0x7fbdaad5a60a    48f7f9                  idiv rcx                                               [39;49m[32;49m
0x7fbdaad5a60d    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fbdaad5a610    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fbdaad5a613    4983ee08                sub r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5a617    488908                  mov [rax], rcx                                         [39;49m[32;49m
0x7fbdaad5a61a    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5a61e    4881c050000000          add rax, 0x50                                          [39;49m[32;49m
0x7fbdaad5a625    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fbdaad5a628    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5a62c    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaad5a62f    48c7c004000000          mov rax, 0x4                                           [39;49m[32;49m
0x7fbdaad5a636    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5a63a    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaad5a63d    48b800babfaabd7f0000    mov rax, 0x7fbdaabfba00    	[32;49m< string : '[39;49m[39;49m\n DLListClone init : this.Accum = :[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fbdaad5a647    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5a64b    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaad5a64e    49b97d63d5aabd7f0000    mov r9, 0x7fbdaad5637d                                 [39;49m[32;49m
0x7fbdaad5a658    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fbdaad5637d[32;49m >[39;49m[39;49m[32;49m
0x7fbdaad5a65b    48b859babfaabd7f0000    mov rax, 0x7fbdaabfba59    	[32;49m< string : '[39;49m[39;49minit_assert3[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fbdaad5a665    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5a669    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaad5a66c    49b92b7bd5aabd7f0000    mov r9, 0x7fbdaad57b2b                                 [39;49m[32;49m
0x7fbdaad5a676    49ffd1                  call r9                    	< System.[34;49m_assert1[39;49m : 0x00007fbdaad57b2b[32;49m >[39;49m[39;49m[32;49m
0x7fbdaad5a679    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5a67d    4881c028000000          add rax, 0x28                                          [39;49m[32;49m
0x7fbdaad5a684    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fbdaad5a687    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5a68b    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaad5a68e    49b94464d5aabd7f0000    mov r9, 0x7fbdaad56444                                 [39;49m[32;49m
0x7fbdaad5a698    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fbdaad56444[32;49m >[39;49m[39;49m[32;49m
0x7fbdaad5a69b    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5a69f    4881c030000000          add rax, 0x30                                          [39;49m[32;49m
0x7fbdaad5a6a6    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5a6aa    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaad5a6ad    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5a6b1    4881c020000000          add rax, 0x20                                          [39;49m[32;49m
0x7fbdaad5a6b8    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fbdaad5a6bb    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5a6bf    4881c128000000          add rcx, 0x28                                          [39;49m[32;49m
0x7fbdaad5a6c6    488b09                  mov rcx, [rcx]                                         [39;49m[32;49m
0x7fbdaad5a6c9    480fafc1                imul rax, rcx                                          [39;49m[32;49m
0x7fbdaad5a6cd    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5a6d1    4881c120000000          add rcx, 0x20                                          [39;49m[32;49m
0x7fbdaad5a6d8    488b09                  mov rcx, [rcx]                                         [39;49m[32;49m
0x7fbdaad5a6db    482bc1                  sub rax, rcx                                           [39;49m[32;49m
0x7fbdaad5a6de    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fbdaad5a6e1    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fbdaad5a6e4    4983ee08                sub r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5a6e8    488908                  mov [rax], rcx                                         [39;49m[32;49m
0x7fbdaad5a6eb    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5a6ef    4881c030000000          add rax, 0x30                                          [39;49m[32;49m
0x7fbdaad5a6f6    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fbdaad5a6f9    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fbdaad5a6fd    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaad5a700    498946f8                mov [r14-0x8], rax                                     [39;49m[32;49m
0x7fbdaad5a704    49b8d0b33e1ebd550000    mov r8, 0x55bd1e3eb3d0                                 [39;49m[32;49m
0x7fbdaad5a70e    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaad5a718    49ffd1                  call r9                    	< System.[34;49mhex[39;49m : 0x000055bd1e3eb3d0[32;49m >[39;49m[39;49m[32;49m
0x7fbdaad5a71b    49b94464d5aabd7f0000    mov r9, 0x7fbdaad56444                                 [39;49m[32;49m
0x7fbdaad5a725    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fbdaad56444[32;49m >[39;49m[39;49m[32;49m
0x7fbdaad5a728    48c7c018000000          mov rax, 0x18                                          [39;49m[32;49m
0x7fbdaad5a72f    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5a733    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaad5a736    48b887babfaabd7f0000    mov rax, 0x7fbdaabfba87    	[32;49m< string : '[39;49m[39;49minit_assert5[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fbdaad5a740    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5a744    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaad5a747    49b92b7bd5aabd7f0000    mov r9, 0x7fbdaad57b2b                                 [39;49m[32;49m
0x7fbdaad5a751    49ffd1                  call r9                    	< System.[34;49m_assert1[39;49m : 0x00007fbdaad57b2b[32;49m >[39;49m[39;49m[32;49m
0x7fbdaad5a754    49b810b43e1ebd550000    mov r8, 0x55bd1e3eb410                                 [39;49m[32;49m
0x7fbdaad5a75e    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaad5a768    49ffd1                  call r9                    	< System.[34;49mdecimal[39;49m : 0x000055bd1e3eb410[32;49m >[39;49m[39;49m[32;49m
0x7fbdaad5a76b    49b8e0903e1ebd550000    mov r8, 0x55bd1e3e90e0                                 [39;49m[32;49m
0x7fbdaad5a775    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaad5a77f    49ffd1                  call r9                    	< Io.[34;49mnewline[39;49m : 0x000055bd1e3e90e0[32;49m >[39;49m[39;49m[32;49m
0x7fbdaad5a782    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5a786    4881c020000000          add rax, 0x20                                          [39;49m[32;49m
0x7fbdaad5a78d    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fbdaad5a790    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fbdaad5a794    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaad5a797    498946f8                mov [r14-0x8], rax                                     [39;49m[32;49m
0x7fbdaad5a79b    49b94464d5aabd7f0000    mov r9, 0x7fbdaad56444                                 [39;49m[32;49m
0x7fbdaad5a7a5    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fbdaad56444[32;49m >[39;49m[39;49m[32;49m
0x7fbdaad5a7a8    48c7c00c000000          mov rax, 0xc                                           [39;49m[32;49m
0x7fbdaad5a7af    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5a7b3    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaad5a7b6    48b8b5babfaabd7f0000    mov rax, 0x7fbdaabfbab5    	[32;49m< string : '[39;49m[39;49minit_assert7[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fbdaad5a7c0    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5a7c4    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaad5a7c7    49b92b7bd5aabd7f0000    mov r9, 0x7fbdaad57b2b                                 [39;49m[32;49m
0x7fbdaad5a7d1    49ffd1                  call r9                    	< System.[34;49m_assert1[39;49m : 0x00007fbdaad57b2b[32;49m >[39;49m[39;49m[32;49m
0x7fbdaad5a7d4    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5a7d8    4881c028000000          add rax, 0x28                                          [39;49m[32;49m
0x7fbdaad5a7df    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fbdaad5a7e2    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5a7e6    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaad5a7e9    49b94464d5aabd7f0000    mov r9, 0x7fbdaad56444                                 [39;49m[32;49m
0x7fbdaad5a7f3    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fbdaad56444[32;49m >[39;49m[39;49m[32;49m
0x7fbdaad5a7f6    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5a7fa    4881c030000000          add rax, 0x30                                          [39;49m[32;49m
0x7fbdaad5a801    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5a805    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaad5a808    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5a80c    4881c020000000          add rax, 0x20                                          [39;49m[32;49m
0x7fbdaad5a813    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fbdaad5a816    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5a81a    4881c128000000          add rcx, 0x28                                          [39;49m[32;49m
0x7fbdaad5a821    488b09                  mov rcx, [rcx]                                         [39;49m[32;49m
0x7fbdaad5a824    480fafc1                imul rax, rcx                                          [39;49m[32;49m
0x7fbdaad5a828    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fbdaad5a82b    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fbdaad5a82e    4983ee08                sub r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5a832    488908                  mov [rax], rcx                                         [39;49m[32;49m
0x7fbdaad5a835    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5a839    4881c030000000          add rax, 0x30                                          [39;49m[32;49m
0x7fbdaad5a840    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fbdaad5a843    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5a847    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaad5a84a    48b8e0babfaabd7f0000    mov rax, 0x7fbdaabfbae0    	[32;49m< string : '[39;49m[39;49mtesting yada[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fbdaad5a854    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5a858    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaad5a85b    49b97d63d5aabd7f0000    mov r9, 0x7fbdaad5637d                                 [39;49m[32;49m
0x7fbdaad5a865    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fbdaad5637d[32;49m >[39;49m[39;49m[32;49m
0x7fbdaad5a868    48c7c024000000          mov rax, 0x24                                          [39;49m[32;49m
0x7fbdaad5a86f    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5a873    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaad5a876    48b80ebbbfaabd7f0000    mov rax, 0x7fbdaabfbb0e    	[32;49m< string : '[39;49m[39;49minit_assert8[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fbdaad5a880    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5a884    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaad5a887    49b92b7bd5aabd7f0000    mov r9, 0x7fbdaad57b2b                                 [39;49m[32;49m
0x7fbdaad5a891    49ffd1                  call r9                    	< System.[34;49m_assert1[39;49m : 0x00007fbdaad57b2b[32;49m >[39;49m[39;49m[32;49m
0x7fbdaad5a894    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5a898    4881c030000000          add rax, 0x30                                          [39;49m[32;49m
0x7fbdaad5a89f    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5a8a3    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaad5a8a6    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5a8aa    4881c020000000          add rax, 0x20                                          [39;49m[32;49m
0x7fbdaad5a8b1    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fbdaad5a8b4    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5a8b8    4881c128000000          add rcx, 0x28                                          [39;49m[32;49m
0x7fbdaad5a8bf    488b09                  mov rcx, [rcx]                                         [39;49m[32;49m
0x7fbdaad5a8c2    482bc1                  sub rax, rcx                                           [39;49m[32;49m
0x7fbdaad5a8c5    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fbdaad5a8c9    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaad5a8cc    498946f8                mov [r14-0x8], rax                                     [39;49m[32;49m
0x7fbdaad5a8d0    49b94464d5aabd7f0000    mov r9, 0x7fbdaad56444                                 [39;49m[32;49m
0x7fbdaad5a8da    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fbdaad56444[32;49m >[39;49m[39;49m[32;49m
0x7fbdaad5a8dd    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fbdaad5a8e0    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fbdaad5a8e4    4983ee10                sub r14, 0x10                                          [39;49m[32;49m
0x7fbdaad5a8e8    488908                  mov [rax], rcx                                         [39;49m[32;49m
0x7fbdaad5a8eb    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5a8ef    4881c030000000          add rax, 0x30                                          [39;49m[32;49m
0x7fbdaad5a8f6    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5a8fa    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaad5a8fd    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5a901    4881c020000000          add rax, 0x20                                          [39;49m[32;49m
0x7fbdaad5a908    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fbdaad5a90b    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5a90f    4881c128000000          add rcx, 0x28                                          [39;49m[32;49m
0x7fbdaad5a916    488b09                  mov rcx, [rcx]                                         [39;49m[32;49m
0x7fbdaad5a919    4885c9                  test rcx, rcx                                          [39;49m[32;49m
0x7fbdaad5a91c    7405                    jz 0xaad5a923                                          [39;49m[32;49m
0x7fbdaad5a91e    4885c0                  test rax, rax                                          [39;49m[32;49m
0x7fbdaad5a921    7509                    jnz 0xaad5a92c                                         [39;49m[32;49m
0x7fbdaad5a923    48c7c000000000          mov rax, 0x0                                           [39;49m[32;49m
0x7fbdaad5a92a    eb07                    jmp 0x7fbdaad5a933         	< DLListClone.[34;49minit[39;49m+1349[32;49m >[39;49m[39;49m[32;49m
0x7fbdaad5a92c    48c7c001000000          mov rax, 0x1                                           [39;49m[32;49m
0x7fbdaad5a933    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fbdaad5a937    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaad5a93a    498946f8                mov [r14-0x8], rax                                     [39;49m[32;49m
0x7fbdaad5a93e    49b94464d5aabd7f0000    mov r9, 0x7fbdaad56444                                 [39;49m[32;49m
0x7fbdaad5a948    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fbdaad56444[32;49m >[39;49m[39;49m[32;49m
0x7fbdaad5a94b    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fbdaad5a94e    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fbdaad5a952    4983ee10                sub r14, 0x10                                          [39;49m[32;49m
0x7fbdaad5a956    488908                  mov [rax], rcx                                         [39;49m[32;49m
0x7fbdaad5a959    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5a95d    4881c030000000          add rax, 0x30                                          [39;49m[32;49m
0x7fbdaad5a964    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5a968    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaad5a96b    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5a96f    4881c020000000          add rax, 0x20                                          [39;49m[32;49m
0x7fbdaad5a976    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fbdaad5a979    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5a97d    4881c128000000          add rcx, 0x28                                          [39;49m[32;49m
0x7fbdaad5a984    488b09                  mov rcx, [rcx]                                         [39;49m[32;49m
0x7fbdaad5a987    4823c1                  and rax, rcx                                           [39;49m[32;49m
0x7fbdaad5a98a    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fbdaad5a98e    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaad5a991    498946f8                mov [r14-0x8], rax                                     [39;49m[32;49m
0x7fbdaad5a995    49b94464d5aabd7f0000    mov r9, 0x7fbdaad56444                                 [39;49m[32;49m
0x7fbdaad5a99f    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fbdaad56444[32;49m >[39;49m[39;49m[32;49m
0x7fbdaad5a9a2    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fbdaad5a9a5    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fbdaad5a9a9    4983ee10                sub r14, 0x10                                          [39;49m[32;49m
0x7fbdaad5a9ad    488908                  mov [rax], rcx                                         [39;49m[32;49m
0x7fbdaad5a9b0    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5a9b4    4881c050000000          add rax, 0x50                                          [39;49m[32;49m
0x7fbdaad5a9bb    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5a9bf    4881c128000000          add rcx, 0x28                                          [39;49m[32;49m
0x7fbdaad5a9c6    488b09                  mov rcx, [rcx]                                         [39;49m[32;49m
0x7fbdaad5a9c9    488908                  mov [rax], rcx                                         [39;49m[32;49m
0x7fbdaad5a9cc    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5a9d0    4881c030000000          add rax, 0x30                                          [39;49m[32;49m
0x7fbdaad5a9d7    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5a9db    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaad5a9de    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5a9e2    4881c020000000          add rax, 0x20                                          [39;49m[32;49m
0x7fbdaad5a9e9    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fbdaad5a9ec    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5a9f0    4881c128000000          add rcx, 0x28                                          [39;49m[32;49m
0x7fbdaad5a9f7    488b09                  mov rcx, [rcx]                                         [39;49m[32;49m
0x7fbdaad5a9fa    480bc1                  or rax, rcx                                            [39;49m[32;49m
0x7fbdaad5a9fd    4885c0                  test rax, rax                                          [39;49m[32;49m
0x7fbdaad5aa00    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fbdaad5aa04    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaad5aa07    498946f8                mov [r14-0x8], rax                                     [39;49m[32;49m
0x7fbdaad5aa0b    49b94464d5aabd7f0000    mov r9, 0x7fbdaad56444                                 [39;49m[32;49m
0x7fbdaad5aa15    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fbdaad56444[32;49m >[39;49m[39;49m[32;49m
0x7fbdaad5aa18    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fbdaad5aa1b    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fbdaad5aa1f    4983ee10                sub r14, 0x10                                          [39;49m[32;49m
0x7fbdaad5aa23    488908                  mov [rax], rcx                                         [39;49m[32;49m
0x7fbdaad5aa26    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5aa2a    4881c030000000          add rax, 0x30                                          [39;49m[32;49m
0x7fbdaad5aa31    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5aa35    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaad5aa38    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5aa3c    4881c020000000          add rax, 0x20                                          [39;49m[32;49m
0x7fbdaad5aa43    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fbdaad5aa46    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5aa4a    4881c128000000          add rcx, 0x28                                          [39;49m[32;49m
0x7fbdaad5aa51    488b09                  mov rcx, [rcx]                                         [39;49m[32;49m
0x7fbdaad5aa54    48c7c200000000          mov rdx, 0x0                                           [39;49m[32;49m
0x7fbdaad5aa5b    48f7f9                  idiv rcx                                               [39;49m[32;49m
0x7fbdaad5aa5e    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fbdaad5aa62    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaad5aa65    498946f8                mov [r14-0x8], rax                                     [39;49m[32;49m
0x7fbdaad5aa69    49b94464d5aabd7f0000    mov r9, 0x7fbdaad56444                                 [39;49m[32;49m
0x7fbdaad5aa73    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fbdaad56444[32;49m >[39;49m[39;49m[32;49m
0x7fbdaad5aa76    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fbdaad5aa79    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fbdaad5aa7d    4983ee10                sub r14, 0x10                                          [39;49m[32;49m
0x7fbdaad5aa81    488908                  mov [rax], rcx                                         [39;49m[32;49m
0x7fbdaad5aa84    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5aa88    4881c020000000          add rax, 0x20                                          [39;49m[32;49m
0x7fbdaad5aa8f    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fbdaad5aa92    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fbdaad5aa96    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaad5aa99    498946f8                mov [r14-0x8], rax                                     [39;49m[32;49m
0x7fbdaad5aa9d    49b94464d5aabd7f0000    mov r9, 0x7fbdaad56444                                 [39;49m[32;49m
0x7fbdaad5aaa7    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fbdaad56444[32;49m >[39;49m[39;49m[32;49m
0x7fbdaad5aaaa    48c7c00c000000          mov rax, 0xc                                           [39;49m[32;49m
0x7fbdaad5aab1    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5aab5    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaad5aab8    49b9df7cd5aabd7f0000    mov r9, 0x7fbdaad57cdf                                 [39;49m[32;49m
0x7fbdaad5aac2    49ffd1                  call r9                    	< System.[34;49m_assert0[39;49m : 0x00007fbdaad57cdf[32;49m >[39;49m[39;49m[32;49m
0x7fbdaad5aac5    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5aac9    4881c030000000          add rax, 0x30                                          [39;49m[32;49m
0x7fbdaad5aad0    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fbdaad5aad3    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5aad7    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaad5aada    49b94464d5aabd7f0000    mov r9, 0x7fbdaad56444                                 [39;49m[32;49m
0x7fbdaad5aae4    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fbdaad56444[32;49m >[39;49m[39;49m[32;49m
0x7fbdaad5aae7    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5aaeb    4881c028000000          add rax, 0x28                                          [39;49m[32;49m
0x7fbdaad5aaf2    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fbdaad5aaf5    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5aaf9    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaad5aafc    49b94464d5aabd7f0000    mov r9, 0x7fbdaad56444                                 [39;49m[32;49m
0x7fbdaad5ab06    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fbdaad56444[32;49m >[39;49m[39;49m[32;49m
0x7fbdaad5ab09    48b883bbbfaabd7f0000    mov rax, 0x7fbdaabfbb83    	[32;49m< string : '[39;49m[39;49m\n 12 3 testing yada 36 9 1 0 15 4 12 4 3 : output above should (approximately) read[39[39;49m[32;49m
0x7fbdaad5ab13    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5ab17    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaad5ab1a    49b9c078d5aabd7f0000    mov r9, 0x7fbdaad578c0                                 [39;49m[32;49m
0x7fbdaad5ab24    49ffd1                  call r9                    	< System.[34;49mddps[39;49m : 0x00007fbdaad578c0[32;49m >[39;49m[39;49m[32;49m
0x7fbdaad5ab27    49b8d0b33e1ebd550000    mov r8, 0x55bd1e3eb3d0                                 [39;49m[32;49m
0x7fbdaad5ab31    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaad5ab3b    49ffd1                  call r9                    	< System.[34;49mhex[39;49m : 0x000055bd1e3eb3d0[32;49m >[39;49m[39;49m[32;49m
0x7fbdaad5ab3e    48b838bcbfaabd7f0000    mov rax, 0x7fbdaabfbc38    	[32;49m< string : '[39;49m[39;49m\nthis = [39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fbdaad5ab48    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5ab4c    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaad5ab4f    49b97d63d5aabd7f0000    mov r9, 0x7fbdaad5637d                                 [39;49m[32;49m
0x7fbdaad5ab59    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fbdaad5637d[32;49m >[39;49m[39;49m[32;49m
0x7fbdaad5ab5c    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5ab60    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fbdaad5ab67    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5ab6b    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaad5ab6e    49b94464d5aabd7f0000    mov r9, 0x7fbdaad56444                                 [39;49m[32;49m
0x7fbdaad5ab78    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fbdaad56444[32;49m >[39;49m[39;49m[32;49m
0x7fbdaad5ab7b    48b859bcbfaabd7f0000    mov rax, 0x7fbdaabfbc59    	[32;49m< string : '[39;49m[39;49m\nthis @ = [39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fbdaad5ab85    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5ab89    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaad5ab8c    49b97d63d5aabd7f0000    mov r9, 0x7fbdaad5637d                                 [39;49m[32;49m
0x7fbdaad5ab96    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fbdaad5637d[32;49m >[39;49m[39;49m[32;49m
0x7fbdaad5ab99    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5ab9d    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fbdaad5aba0    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5aba4    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaad5aba7    49b94464d5aabd7f0000    mov r9, 0x7fbdaad56444                                 [39;49m[32;49m
0x7fbdaad5abb1    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fbdaad56444[32;49m >[39;49m[39;49m[32;49m
0x7fbdaad5abb4    48b881bcbfaabd7f0000    mov rax, 0x7fbdaabfbc81    	[32;49m< string : '[39;49m[39;49m\nthis.size = [39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fbdaad5abbe    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5abc2    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaad5abc5    49b97d63d5aabd7f0000    mov r9, 0x7fbdaad5637d                                 [39;49m[32;49m
0x7fbdaad5abcf    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fbdaad5637d[32;49m >[39;49m[39;49m[32;49m
0x7fbdaad5abd2    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5abd6    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fbdaad5abdd    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5abe1    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaad5abe4    48b8d040d2aabd7f0000    mov rax, 0x7fbdaad240d0    	[32;49m< string : '[39;49m[39;49mX[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fbdaad5abee    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fbdaad5abf1    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5abf5    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaad5abf8    49b94464d5aabd7f0000    mov r9, 0x7fbdaad56444                                 [39;49m[32;49m
0x7fbdaad5ac02    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fbdaad56444[32;49m >[39;49m[39;49m[32;49m
0x7fbdaad5ac05    49b8e0903e1ebd550000    mov r8, 0x55bd1e3e90e0                                 [39;49m[32;49m
0x7fbdaad5ac0f    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaad5ac19    49ffd1                  call r9                    	< Io.[34;49mnewline[39;49m : 0x000055bd1e3e90e0[32;49m >[39;49m[39;49m[32;49m
0x7fbdaad5ac1c    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5ac20    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fbdaad5ac27    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fbdaad5ac2b    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaad5ac2e    498946f8                mov [r14-0x8], rax                                     [39;49m[32;49m
0x7fbdaad5ac32    49b94464d5aabd7f0000    mov r9, 0x7fbdaad56444                                 [39;49m[32;49m
0x7fbdaad5ac3c    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fbdaad56444[32;49m >[39;49m[39;49m[32;49m
0x7fbdaad5ac3f    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5ac43    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fbdaad5ac4a    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5ac4e    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaad5ac51    48b8d040d2aabd7f0000    mov rax, 0x7fbdaad240d0    	[32;49m< string : '[39;49m[39;49mX[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fbdaad5ac5b    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fbdaad5ac5e    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5ac62    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaad5ac65    49b830b43e1ebd550000    mov r8, 0x55bd1e3eb430                                 [39;49m[32;49m
0x7fbdaad5ac6f    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaad5ac79    49ffd1                  call r9                    	< Debug.[34;49mdump[39;49m : 0x000055bd1e3eb430[32;49m >[39;49m[39;49m[32;49m
0x7fbdaad5ac7c    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5ac80    4881c050000000          add rax, 0x50                                          [39;49m[32;49m
0x7fbdaad5ac87    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5ac8b    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaad5ac8e    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5ac92    4881c028000000          add rax, 0x28                                          [39;49m[32;49m
0x7fbdaad5ac99    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fbdaad5ac9c    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fbdaad5aca0    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaad5aca3    498946f8                mov [r14-0x8], rax                                     [39;49m[32;49m
0x7fbdaad5aca7    49b94464d5aabd7f0000    mov r9, 0x7fbdaad56444                                 [39;49m[32;49m
0x7fbdaad5acb1    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fbdaad56444[32;49m >[39;49m[39;49m[32;49m
0x7fbdaad5acb4    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fbdaad5acb7    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fbdaad5acbb    4983ee10                sub r14, 0x10                                          [39;49m[32;49m
0x7fbdaad5acbf    488908                  mov [rax], rcx                                         [39;49m[32;49m
0x7fbdaad5acc2    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5acc6    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fbdaad5accd    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5acd1    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaad5acd4    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5acd8    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fbdaad5acdf    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5ace3    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaad5ace6    48b8d040d2aabd7f0000    mov rax, 0x7fbdaad240d0    	[32;49m< string : '[39;49m[39;49mX[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fbdaad5acf0    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fbdaad5acf3    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5acf7    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaad5acfa    49b830b43e1ebd550000    mov r8, 0x55bd1e3eb430                                 [39;49m[32;49m
0x7fbdaad5ad04    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaad5ad0e    49ffd1                  call r9                    	< Debug.[34;49mdump[39;49m : 0x000055bd1e3eb430[32;49m >[39;49m[39;49m[32;49m
0x7fbdaad5ad11    49b810b43e1ebd550000    mov r8, 0x55bd1e3eb410                                 [39;49m[32;49m
0x7fbdaad5ad1b    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaad5ad25    49ffd1                  call r9                    	< System.[34;49mdecimal[39;49m : 0x000055bd1e3eb410[32;49m >[39;49m[39;49m[32;49m
0x7fbdaad5ad28    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5ad2c    4881c050000000          add rax, 0x50                                          [39;49m[32;49m
0x7fbdaad5ad33    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fbdaad5ad36    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fbdaad5ad3a    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaad5ad3d    498946f8                mov [r14-0x8], rax                                     [39;49m[32;49m
0x7fbdaad5ad41    48c7c003000000          mov rax, 0x3                                           [39;49m[32;49m
0x7fbdaad5ad48    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5ad4c    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaad5ad4f    48b8c2bcbfaabd7f0000    mov rax, 0x7fbdaabfbcc2    	[32;49m< string : '[39;49m[39;49m\nAccum should be 3 : assert9 =[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fbdaad5ad59    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5ad5d    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaad5ad60    49b92b7bd5aabd7f0000    mov r9, 0x7fbdaad57b2b                                 [39;49m[32;49m
0x7fbdaad5ad6a    49ffd1                  call r9                    	< System.[34;49m_assert1[39;49m : 0x00007fbdaad57b2b[32;49m >[39;49m[39;49m[32;49m
0x7fbdaad5ad6d    49b94464d5aabd7f0000    mov r9, 0x7fbdaad56444                                 [39;49m[32;49m
0x7fbdaad5ad77    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fbdaad56444[32;49m >[39;49m[39;49m[32;49m
0x7fbdaad5ad7a    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5ad7e    4881c020000000          add rax, 0x20                                          [39;49m[32;49m
0x7fbdaad5ad85    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fbdaad5ad88    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fbdaad5ad8c    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaad5ad8f    498946f8                mov [r14-0x8], rax                                     [39;49m[32;49m
0x7fbdaad5ad93    48c7c00c000000          mov rax, 0xc                                           [39;49m[32;49m
0x7fbdaad5ad9a    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5ad9e    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaad5ada1    48b82bbdbfaabd7f0000    mov rax, 0x7fbdaabfbd2b    	[32;49m< string : '[39;49m[39;49m\nCategory should be 12 : assert10 =[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fbdaad5adab    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5adaf    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaad5adb2    49b92b7bd5aabd7f0000    mov r9, 0x7fbdaad57b2b                                 [39;49m[32;49m
0x7fbdaad5adbc    49ffd1                  call r9                    	< System.[34;49m_assert1[39;49m : 0x00007fbdaad57b2b[32;49m >[39;49m[39;49m[32;49m
0x7fbdaad5adbf    49b94464d5aabd7f0000    mov r9, 0x7fbdaad56444                                 [39;49m[32;49m
0x7fbdaad5adc9    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fbdaad56444[32;49m >[39;49m[39;49m[32;49m
0x7fbdaad5adcc    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5add0    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaad5add4    4983ee08                sub r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5add8    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'init' :: codeSize = 2538
Word : 0x00007fbdaad24fd8 :: Compiled at : 0x00007fbdaad5a3ee
 =============================
::> 'wdiss' was called at namespaces/test/classTest.csl 155.18 <::
 3 init_assert1  : ok

 3
Run Time Location : namespaces/test/classTest.csl 121.99 init_assert2  : ok

 
 DLListClone init : this.Accum = : init_assert3  : ok

 3 0x0000000000000018 init_assert5  : ok


 12 init_assert7  : ok

 3 testing yada init_assert8  : ok

 9 1 0 15 4 12 4 3[34;49m 
 12 3 testing yada 36 9 1 0 15 4 12 4 3 : output above should (approximately) read[39;49m 
this =  0x00007fbdaab2f2e8 
this @ =  0x00007fbdaab2f300 
this.size =  0x0000000000000058
 0x00007fbdaab2f2e8
Dump at : namespaces/test/classTest.csl : 157.27 :
Dump : Address = 0x00007fbdaab2f2e8 : Number = 0x0000000000000058 :: (little endian dump)
0x00007fbdaab2f2e8 :  00 f3 b2 aa bd 7f 00 00  01 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaab2f2f8 :  02 00 00 00 00 00 00 00  e8 f2 b2 aa bd 7f 00 00  ........ ........ 
0x00007fbdaab2f308 :  0c 00 00 00 00 00 00 00  03 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaab2f318 :  04 00 00 00 00 00 00 00  0c 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaab2f328 :  03 00 00 00 00 00 00 00  04 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaab2f338 :  03 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
 0x0000000000000003
Dump at : namespaces/test/classTest.csl : 157.27 :
Dump : Address = 0x00007fbdaab2f2e8 : Number = 0x0000000000000058 :: (little endian dump)
0x00007fbdaab2f2e8 :  00 f3 b2 aa bd 7f 00 00  01 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaab2f2f8 :  02 00 00 00 00 00 00 00  e8 f2 b2 aa bd 7f 00 00  ........ ........ 
0x00007fbdaab2f308 :  0c 00 00 00 00 00 00 00  03 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaab2f318 :  04 00 00 00 00 00 00 00  0c 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaab2f328 :  03 00 00 00 00 00 00 00  04 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaab2f338 :  03 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
 
Accum should be 3 : assert9 =  : ok

 3 
Category should be 12 : assert10 =  : ok

 12 
this =  0x00007fbdaad24288
Dump at : namespaces/test/classTest.csl : 161.25 :
Dump : Address = 0x00007fbdaab2f2e8 : Number = 0x0000000000000058 :: (little endian dump)
0x00007fbdaab2f2e8 :  00 f3 b2 aa bd 7f 00 00  01 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaab2f2f8 :  02 00 00 00 00 00 00 00  e8 f2 b2 aa bd 7f 00 00  ........ ........ 
0x00007fbdaab2f308 :  0c 00 00 00 00 00 00 00  03 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaab2f318 :  04 00 00 00 00 00 00 00  0c 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaab2f328 :  03 00 00 00 00 00 00 00  04 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaab2f338 :  03 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 

Dump at : namespaces/test/classTest.csl : 162.32 :
Dump : Address = 0x00007fbdaab2f2e8 : Number = 0x0000000000000058 :: (little endian dump)
0x00007fbdaab2f2e8 :  00 f3 b2 aa bd 7f 00 00  01 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaab2f2f8 :  02 00 00 00 00 00 00 00  e8 f2 b2 aa bd 7f 00 00  ........ ........ 
0x00007fbdaab2f308 :  0c 00 00 00 00 00 00 00  03 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaab2f318 :  04 00 00 00 00 00 00 00  0c 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaab2f328 :  03 00 00 00 00 00 00 00  04 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaab2f338 :  03 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 


DataStack at : [34;49mnamespaces/test/classTest.csl : 163.13[39;49m :
DataStack depth =   3 : Dsp (R14) = Top = 0x00007fbdab0efa58, InitialTos = 0x00007fbdab0efa40, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fbdab0efa58 > = 0x0000000000000005	
  DataStack   [  -1 ] < 0x00007fbdab0efa50 > = 0x0000000000000005	
  DataStack   [  -2 ] < 0x00007fbdab0efa48 > = 0x0000000000000005	
 DLListClone size = 88
 Clone size  : ok

 DLListClone init test :   : ok

 
this @ size @ p  88 
this.size =  88
Using Namespaces :> C Root DLListClone DLList DLLNode Buffer Class byte Integer Pointer Compiler Logic Int Combinators int System User Shell OpenVmTil Lexer Interpreter Debug Word Namespace StartupMacros Io Compiling Reserved Compiler DObject Macro PreProcessor List Stack Memory Colors File String Asm Bits Locals Forth Experimental 
 
printf output = this.size = 88
 0x00007fbdaab2f2e8 88
Dump at : namespaces/test/classTest.csl : 175.48 :
Dump : Address = 0x00007fbdaab2f2e8 : Number = 88 :: (little endian dump)
0x00007fbdaab2f2e8 :  00 f3 b2 aa bd 7f 00 00  01 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaab2f2f8 :  02 00 00 00 00 00 00 00  e8 f2 b2 aa bd 7f 00 00  ........ ........ 
0x00007fbdaab2f308 :  0c 00 00 00 00 00 00 00  03 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaab2f318 :  04 00 00 00 00 00 00 00  0c 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaab2f328 :  03 00 00 00 00 00 00 00  04 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaab2f338 :  03 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 


 -----------------------------
[35;40m 'this' semantics have yet to be solidified[39;49m namespaces/test/classTest.csl 177.53
 -----------------------------


Dump at : namespaces/test/classTest.csl : 178.32 :
Dump : Address = 0x00007fbdaab2f2e8 : Number = 88 :: (little endian dump)
0x00007fbdaab2f2e8 :  00 f3 b2 aa bd 7f 00 00  01 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaab2f2f8 :  02 00 00 00 00 00 00 00  e8 f2 b2 aa bd 7f 00 00  ........ ........ 
0x00007fbdaab2f308 :  0c 00 00 00 00 00 00 00  03 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaab2f318 :  04 00 00 00 00 00 00 00  0c 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaab2f328 :  03 00 00 00 00 00 00 00  04 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaab2f338 :  03 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 

 DLListClone init test4 :   : ok

[34;49m 
math test
[39;49m
 =============================
C.[34;49mt*[39;49m <:> csl compiled word
SourceCode for C.[34;49mt*[39;49m :> 
[34;49m: t* ( a b c d ) a @ b @ c @ d @ * * * return tos ; [39;49m
Source code file location of [34;49mt*[39;49m : "namespaces/test/math.csl" : 25.2 :: we are now at : namespaces/test/math.csl : 26.16
Compiled with : optimizeOn, inlineOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xaad5b09a -- code size = 100 bytes
TypeSignature : 
 -----------------------------
Word :: C.[34;49mt*[39;49m : definition = 0x00007fbdaad5b09a : disassembly at namespaces/test/math.csl : 26.16 :
[34;49m ..                                     : [39;49m[33;40mt*[39;49m[34;49m ( a b c d ) a @ b @ c @ d @ * * * return tos ;  .. [39;49m[32;49m
0x7fbdaad5b09a    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fbdaad5b09e    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaad5b0a2    4981c608000000          add r14, 0x8                                           [39;49m
[34;49m ..                      : t* ( a b c d ) [39;49m[33;40ma[39;49m[34;49m @ b @ c @ d @ * * * return tos ;  .. [39;49m[32;49m
0x7fbdaad5b0a9    498b47e0                mov rax, [r15-0x20]                                    [39;49m[32;49m
0x7fbdaad5b0ad    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5b0b1    498906                  mov [r14], rax                                         [39;49m
[34;49m ..                  : t* ( a b c d ) a @ [39;49m[33;40mb[39;49m[34;49m @ c @ d @ * * * return tos ;  .. [39;49m[32;49m
0x7fbdaad5b0b4    498b47e8                mov rax, [r15-0x18]                                    [39;49m[32;49m
0x7fbdaad5b0b8    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5b0bc    498906                  mov [r14], rax                                         [39;49m
[34;49m ..              : t* ( a b c d ) a @ b @ [39;49m[33;40mc[39;49m[34;49m @ d @ * * * return tos ;  .. [39;49m[32;49m
0x7fbdaad5b0bf    498b47f0                mov rax, [r15-0x10]                                    [39;49m
[34;49m ..          : t* ( a b c d ) a @ b @ c @ [39;49m[33;40md[39;49m[34;49m @ * * * return tos ;  .. [39;49m[32;49m
0x7fbdaad5b0c3    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m
[34;49m ..      : t* ( a b c d ) a @ b @ c @ d @ [39;49m[33;40m*[39;49m[34;49m * * return tos ;  .. [39;49m[32;49m
0x7fbdaad5b0c7    480fafc1                imul rax, rcx                                          [39;49m[32;49m
0x7fbdaad5b0cb    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fbdaad5b0ce    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fbdaad5b0d1    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m ..    : t* ( a b c d ) a @ b @ c @ d @ * [39;49m[33;40m*[39;49m[34;49m * return tos ;  .. [39;49m[32;49m
0x7fbdaad5b0d5    480fafc1                imul rax, rcx                                          [39;49m[32;49m
0x7fbdaad5b0d9    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fbdaad5b0dc    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fbdaad5b0df    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m ..  : t* ( a b c d ) a @ b @ c @ d @ * * [39;49m[33;40m*[39;49m[34;49m return tos ;  .. [39;49m[32;49m
0x7fbdaad5b0e3    480fafc1                imul rax, rcx                                          [39;49m[32;49m
0x7fbdaad5b0e7    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5b0eb    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  d ) a @ b @ c @ d @ * * * return tos [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fbdaad5b0ee    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5b0f2    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaad5b0f6    4983ee18                sub r14, 0x18                                          [39;49m[32;49m
0x7fbdaad5b0fa    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaad5b0fd    c3                      ret                                                    [39;49m
Word_Disassemble : word - 't*' :: codeSize = 99
Word : 0x00007fbdaad479c8 :: Compiled at : 0x00007fbdaad5b09a
 =============================
::> 'wdiss' was called at namespaces/test/math.csl 26.16 <::

 =============================
C.[34;49mmoe[39;49m <:> csl compiled word
SourceCode for C.[34;49mmoe[39;49m :> 
[34;49m: moe ( n m ) n m @ <<= n @ return tos ; [39;49m
Source code file location of [34;49mmoe[39;49m : "namespaces/test/math.csl" : 44.2 :: we are now at : namespaces/test/math.csl : 45.17
Compiled with : optimizeOn, inlineOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xaad5b2e3 -- code size = 60 bytes
TypeSignature : 
 -----------------------------
Word :: C.[34;49mmoe[39;49m : definition = 0x00007fbdaad5b2e3 : disassembly at namespaces/test/math.csl : 45.17 :
[34;49m ..                                     : [39;49m[33;40mmoe[39;49m[34;49m ( n m ) n m @ <<= n @ return tos ;  .. [39;49m[32;49m
0x7fbdaad5b2e3    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fbdaad5b2e7    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaad5b2eb    4981c608000000          add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5b2f2    498d5ff0                lea rbx, [r15-0x10]                                    [39;49m
[34;49m ..                         : moe ( n m ) [39;49m[33;40mn[39;49m[34;49m m @ <<= n @ return tos ;  .. [39;49m[32;49m
0x7fbdaad5b2f6    498b47f0                mov rax, [r15-0x10]                                    [39;49m
[34;49m ..                       : moe ( n m ) n [39;49m[33;40mm[39;49m[34;49m @ <<= n @ return tos ;  .. [39;49m[32;49m
0x7fbdaad5b2fa    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5b2fe    48d3e0                  shl rax, cl                                            [39;49m
[34;49m ..                   : moe ( n m ) n m @ [39;49m[33;40m<<=[39;49m[34;49m n @ return tos ;  .. [39;49m[32;49m
0x7fbdaad5b301    488903                  mov [rbx], rax                                         [39;49m
[34;49m ..               : moe ( n m ) n m @ <<= [39;49m[33;40mn[39;49m[34;49m @ return tos ;  .. [39;49m[32;49m
0x7fbdaad5b304    498b47f0                mov rax, [r15-0x10]                                    [39;49m[32;49m
0x7fbdaad5b308    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5b30c    498906                  mov [r14], rax                                         [39;49m
[34;49m   : moe ( n m ) n m @ <<= n @ return tos [39;49m[33;40m;[39;49m[34;49m  .. [39;49m[32;49m
0x7fbdaad5b30f    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5b313    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaad5b317    4983ee08                sub r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5b31b    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaad5b31e    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'moe' :: codeSize = 59
Word : 0x00007fbdaa8e2488 :: Compiled at : 0x00007fbdaad5b2e3
 =============================
::> 'wdiss' was called at namespaces/test/math.csl 45.17 <::
 moe_assert1  : ok

 moe_assert2  : ok

 moe_assert3  : ok

 moe_assert3  : ok



 =============================
Infix.[34;49mmoe[39;49m <:> csl compiled word
SourceCode for Infix.[34;49mmoe[39;49m :> 
[34;49m: moe ( n m ) n <<= m n return tos ; [39;49m
Source code file location of [34;49mmoe[39;49m : "namespaces/test/math.csl" : 53.2 :: we are now at : namespaces/test/math.csl : 54.17
Compiled with : optimizeOn, inlineOn, infixOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xaad5b365 -- code size = 71 bytes
TypeSignature : 
 -----------------------------
Word :: Infix.[34;49mmoe[39;49m : definition = 0x00007fbdaad5b365 : disassembly at namespaces/test/math.csl : 54.17 :
[34;49m ..                                     : [39;49m[33;40mmoe[39;49m[34;49m ( n m ) n <<= m n return tos ;  .. [39;49m[32;49m
0x7fbdaad5b365    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fbdaad5b369    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaad5b36d    4981c608000000          add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5b374    498b47f0                mov rax, [r15-0x10]                                    [39;49m[32;49m
0x7fbdaad5b378    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5b37c    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaad5b37f    498d5ff0                lea rbx, [r15-0x10]                                    [39;49m
[34;49m ..                         : moe ( n m ) [39;49m[33;40mn[39;49m[34;49m <<= m n return tos ;  .. [39;49m[32;49m
0x7fbdaad5b383    498b47f0                mov rax, [r15-0x10]                                    [39;49m
[34;49m ..                   : moe ( n m ) n <<= [39;49m[33;40mm[39;49m[34;49m n return tos ;  .. [39;49m[32;49m
0x7fbdaad5b387    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5b38b    48d3e0                  shl rax, cl                                            [39;49m
[34;49m ..                       : moe ( n m ) n [39;49m[33;40m<<=[39;49m[34;49m m n return tos ;  .. [39;49m[32;49m
0x7fbdaad5b38e    488903                  mov [rbx], rax                                         [39;49m
[34;49m ..                 : moe ( n m ) n <<= m [39;49m[33;40mn[39;49m[34;49m return tos ;  .. [39;49m[32;49m
0x7fbdaad5b391    498b47f0                mov rax, [r15-0x10]                                    [39;49m[32;49m
0x7fbdaad5b395    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5b399    498906                  mov [r14], rax                                         [39;49m
[34;49m ..    : moe ( n m ) n <<= m n return tos [39;49m[33;40m;[39;49m[34;49m  .. [39;49m[32;49m
0x7fbdaad5b39c    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5b3a0    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaad5b3a4    4983ee08                sub r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5b3a8    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaad5b3ab    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'moe' :: codeSize = 70
Word : 0x00007fbdaa8e4b38 :: Compiled at : 0x00007fbdaad5b365
 =============================
::> 'wdiss' was called at namespaces/test/math.csl 54.17 <::

 =============================
Infix.[34;49mmoe[39;49m <:> csl compiled word
SourceCode for Infix.[34;49mmoe[39;49m :> 
[34;49m: moe ( n m ) n >>= m n return tos ; [39;49m
Source code file location of [34;49mmoe[39;49m : "namespaces/test/math.csl" : 56.2 :: we are now at : namespaces/test/math.csl : 57.20
Compiled with : optimizeOn, inlineOn, infixOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xaad5b3b1 -- code size = 71 bytes
TypeSignature : 
 -----------------------------
Word :: Infix.[34;49mmoe[39;49m : definition = 0x00007fbdaad5b3b1 : disassembly at namespaces/test/math.csl : 57.20 :
[34;49m ..                                     : [39;49m[33;40mmoe[39;49m[34;49m ( n m ) n >>= m n return tos ;  .. [39;49m[32;49m
0x7fbdaad5b3b1    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fbdaad5b3b5    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaad5b3b9    4981c608000000          add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5b3c0    498b47f0                mov rax, [r15-0x10]                                    [39;49m[32;49m
0x7fbdaad5b3c4    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5b3c8    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaad5b3cb    498d5ff0                lea rbx, [r15-0x10]                                    [39;49m
[34;49m ..                         : moe ( n m ) [39;49m[33;40mn[39;49m[34;49m >>= m n return tos ;  .. [39;49m[32;49m
0x7fbdaad5b3cf    498b47f0                mov rax, [r15-0x10]                                    [39;49m
[34;49m ..                   : moe ( n m ) n >>= [39;49m[33;40mm[39;49m[34;49m n return tos ;  .. [39;49m[32;49m
0x7fbdaad5b3d3    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5b3d7    48d3e8                  shr rax, cl                                            [39;49m
[34;49m ..                       : moe ( n m ) n [39;49m[33;40m>>=[39;49m[34;49m m n return tos ;  .. [39;49m[32;49m
0x7fbdaad5b3da    488903                  mov [rbx], rax                                         [39;49m
[34;49m ..                 : moe ( n m ) n >>= m [39;49m[33;40mn[39;49m[34;49m return tos ;  .. [39;49m[32;49m
0x7fbdaad5b3dd    498b47f0                mov rax, [r15-0x10]                                    [39;49m[32;49m
0x7fbdaad5b3e1    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5b3e5    498906                  mov [r14], rax                                         [39;49m
[34;49m ..    : moe ( n m ) n >>= m n return tos [39;49m[33;40m;[39;49m[34;49m  .. [39;49m[32;49m
0x7fbdaad5b3e8    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5b3ec    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaad5b3f0    4983ee08                sub r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5b3f4    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaad5b3f7    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'moe' :: codeSize = 70
Word : 0x00007fbdaa8e5cd8 :: Compiled at : 0x00007fbdaad5b3b1
 =============================
::> 'wdiss' was called at namespaces/test/math.csl 57.20 <::
 128 65536 
should show 128 65536
 2 1 
should show 2 1

 =============================
C.[34;49mmoe[39;49m <:> csl compiled word
SourceCode for C.[34;49mmoe[39;49m :> 
[34;49m: moe ( n m ) n m @ *= n @ return tos ; [39;49m
Source code file location of [34;49mmoe[39;49m : "namespaces/test/math.csl" : 67.2 :: we are now at : namespaces/test/math.csl : 68.17
Compiled with : optimizeOn, inlineOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xaad5b4b7 -- code size = 61 bytes
TypeSignature : 
 -----------------------------
Word :: C.[34;49mmoe[39;49m : definition = 0x00007fbdaad5b4b7 : disassembly at namespaces/test/math.csl : 68.17 :
[34;49m ..                                     : [39;49m[33;40mmoe[39;49m[34;49m ( n m ) n m @ *= n @ return tos ;  .. [39;49m[32;49m
0x7fbdaad5b4b7    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fbdaad5b4bb    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaad5b4bf    4981c608000000          add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5b4c6    498d5ff0                lea rbx, [r15-0x10]                                    [39;49m
[34;49m ..                         : moe ( n m ) [39;49m[33;40mn[39;49m[34;49m m @ *= n @ return tos ;  .. [39;49m[32;49m
0x7fbdaad5b4ca    498b47f0                mov rax, [r15-0x10]                                    [39;49m
[34;49m ..                       : moe ( n m ) n [39;49m[33;40mm[39;49m[34;49m @ *= n @ return tos ;  .. [39;49m[32;49m
0x7fbdaad5b4ce    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5b4d2    480fafc1                imul rax, rcx                                          [39;49m
[34;49m ..                   : moe ( n m ) n m @ [39;49m[33;40m*=[39;49m[34;49m n @ return tos ;  .. [39;49m[32;49m
0x7fbdaad5b4d6    488903                  mov [rbx], rax                                         [39;49m
[34;49m ..                : moe ( n m ) n m @ *= [39;49m[33;40mn[39;49m[34;49m @ return tos ;  .. [39;49m[32;49m
0x7fbdaad5b4d9    498b47f0                mov rax, [r15-0x10]                                    [39;49m[32;49m
0x7fbdaad5b4dd    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5b4e1    498906                  mov [r14], rax                                         [39;49m
[34;49m .. : moe ( n m ) n m @ *= n @ return tos [39;49m[33;40m;[39;49m[34;49m  .. [39;49m[32;49m
0x7fbdaad5b4e4    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5b4e8    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaad5b4ec    4983ee08                sub r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5b4f0    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaad5b4f3    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'moe' :: codeSize = 60
Word : 0x00007fbdaa8e9c08 :: Compiled at : 0x00007fbdaad5b4b7
 =============================
::> 'wdiss' was called at namespaces/test/math.csl 68.17 <::


 =============================
C.[34;49mmoe[39;49m <:> csl compiled word
SourceCode for C.[34;49mmoe[39;49m :> 
[34;49m: moe ( n m ) n m @ /= n @ return tos ; [39;49m
Source code file location of [34;49mmoe[39;49m : "namespaces/test/math.csl" : 71.2 :: we are now at : namespaces/test/math.csl : 72.17
Compiled with : optimizeOn, inlineOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xaad5b4f9 -- code size = 67 bytes
TypeSignature : 
 -----------------------------
Word :: C.[34;49mmoe[39;49m : definition = 0x00007fbdaad5b4f9 : disassembly at namespaces/test/math.csl : 72.17 :
[34;49m ..                                     : [39;49m[33;40mmoe[39;49m[34;49m ( n m ) n m @ /= n @ return tos ;  .. [39;49m[32;49m
0x7fbdaad5b4f9    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fbdaad5b4fd    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaad5b501    4981c608000000          add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5b508    498d5ff0                lea rbx, [r15-0x10]                                    [39;49m
[34;49m ..                         : moe ( n m ) [39;49m[33;40mn[39;49m[34;49m m @ /= n @ return tos ;  .. [39;49m[32;49m
0x7fbdaad5b50c    498b47f0                mov rax, [r15-0x10]                                    [39;49m
[34;49m ..                       : moe ( n m ) n [39;49m[33;40mm[39;49m[34;49m @ /= n @ return tos ;  .. [39;49m[32;49m
0x7fbdaad5b510    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5b514    48c7c200000000          mov rdx, 0x0                                           [39;49m[32;49m
0x7fbdaad5b51b    48f7f9                  idiv rcx                                               [39;49m
[34;49m ..                   : moe ( n m ) n m @ [39;49m[33;40m/=[39;49m[34;49m n @ return tos ;  .. [39;49m[32;49m
0x7fbdaad5b51e    488903                  mov [rbx], rax                                         [39;49m
[34;49m ..                : moe ( n m ) n m @ /= [39;49m[33;40mn[39;49m[34;49m @ return tos ;  .. [39;49m[32;49m
0x7fbdaad5b521    498b47f0                mov rax, [r15-0x10]                                    [39;49m[32;49m
0x7fbdaad5b525    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5b529    498906                  mov [r14], rax                                         [39;49m
[34;49m .. : moe ( n m ) n m @ /= n @ return tos [39;49m[33;40m;[39;49m[34;49m  .. [39;49m[32;49m
0x7fbdaad5b52c    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5b530    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaad5b534    4983ee08                sub r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5b538    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaad5b53b    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'moe' :: codeSize = 66
Word : 0x00007fbdaa8eaf60 :: Compiled at : 0x00007fbdaad5b4f9
 =============================
::> 'wdiss' was called at namespaces/test/math.csl 72.17 <::


 =============================
C.[34;49mmoe2[39;49m <:> csl compiled word
SourceCode for C.[34;49mmoe2[39;49m :> 
[34;49m: moe2 ( n ) n 2 /= n @ return tos ; [39;49m
Source code file location of [34;49mmoe2[39;49m : "namespaces/test/math.csl" : 75.2 :: we are now at : namespaces/test/math.csl : 76.18
Compiled with : optimizeOn, inlineOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xaad5b541 -- code size = 66 bytes
TypeSignature : 
 -----------------------------
Word :: C.[34;49mmoe2[39;49m : definition = 0x00007fbdaad5b541 : disassembly at namespaces/test/math.csl : 76.18 :
[34;49m ..                                     : [39;49m[33;40mmoe2[39;49m[34;49m ( n ) n 2 /= n @ return tos ;  .. [39;49m[32;49m
0x7fbdaad5b541    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fbdaad5b545    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaad5b549    4981c608000000          add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5b550    498d5ff8                lea rbx, [r15-0x8]                                     [39;49m
[34;49m ..                          : moe2 ( n ) [39;49m[33;40mn[39;49m[34;49m 2 /= n @ return tos ;  .. [39;49m[32;49m
0x7fbdaad5b554    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m ..                        : moe2 ( n ) n [39;49m[33;40m2[39;49m[34;49m /= n @ return tos ;  .. [39;49m[32;49m
0x7fbdaad5b558    48c7c102000000          mov rcx, 0x2                                           [39;49m[32;49m
0x7fbdaad5b55f    48c7c200000000          mov rdx, 0x0                                           [39;49m[32;49m
0x7fbdaad5b566    48f7f9                  idiv rcx                                               [39;49m
[34;49m ..                      : moe2 ( n ) n 2 [39;49m[33;40m/=[39;49m[34;49m n @ return tos ;  .. [39;49m[32;49m
0x7fbdaad5b569    488903                  mov [rbx], rax                                         [39;49m
[34;49m ..                   : moe2 ( n ) n 2 /= [39;49m[33;40mn[39;49m[34;49m @ return tos ;  .. [39;49m[32;49m
0x7fbdaad5b56c    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5b570    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5b574    498906                  mov [r14], rax                                         [39;49m
[34;49m ..    : moe2 ( n ) n 2 /= n @ return tos [39;49m[33;40m;[39;49m[34;49m  .. [39;49m[32;49m
0x7fbdaad5b577    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5b57b    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaad5b57f    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaad5b582    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'moe2' :: codeSize = 65
Word : 0x00007fbdaa8ec2b8 :: Compiled at : 0x00007fbdaad5b541
 =============================
::> 'wdiss' was called at namespaces/test/math.csl 76.18 <::


 moe3_assert1  : ok


 moe3_assert2  : ok



 =============================
C.[34;49mt64bitAdd2[39;49m <:> csl compiled word
SourceCode for C.[34;49mt64bitAdd2[39;49m :> 
[34;49m: t64bitAdd2 ( n m ) 0x100000000 n @ + m @ + return tos ; [39;49m
Source code file location of [34;49mt64bitAdd2[39;49m : "namespaces/test/math.csl" : 83.2 :: we are now at : namespaces/test/math.csl : 84.23
Compiled with : optimizeOn, inlineOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xaad5b5ff -- code size = 62 bytes
TypeSignature : Integer . Integer -> Integer 
 -----------------------------
Word :: C.[34;49mt64bitAdd2[39;49m : definition = 0x00007fbdaad5b5ff : disassembly at namespaces/test/math.csl : 84.23 :
[34;49m ..                                     : [39;49m[33;40mt64bitAdd2[39;49m[34;49m ( n m ) 0x100000000 n @ + m @ + return tos ;  .. [39;49m[32;49m
0x7fbdaad5b5ff    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fbdaad5b603    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaad5b607    4981c608000000          add r14, 0x8                                           [39;49m
[34;49m ..                  : t64bitAdd2 ( n m ) [39;49m[33;40m0x100000000[39;49m[34;49m n @ + m @ + return tos ;  .. [39;49m[32;49m
0x7fbdaad5b60e    48b80000000001000000    mov rax, 0x100000000                                   [39;49m
[34;49m ..      : t64bitAdd2 ( n m ) 0x100000000 [39;49m[33;40mn[39;49m[34;49m @ + m @ + return tos ;  .. [39;49m[32;49m
0x7fbdaad5b618    498b4ff0                mov rcx, [r15-0x10]                                    [39;49m
[34;49m ..  : t64bitAdd2 ( n m ) 0x100000000 n @ [39;49m[33;40m+[39;49m[34;49m m @ + return tos ;  .. [39;49m[32;49m
0x7fbdaad5b61c    4803c1                  add rax, rcx                                           [39;49m
[34;49m   : t64bitAdd2 ( n m ) 0x100000000 n @ + [39;49m[33;40mm[39;49m[34;49m @ + return tos ;  .. [39;49m[32;49m
0x7fbdaad5b61f    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m
[34;49m .. bitAdd2 ( n m ) 0x100000000 n @ + m @ [39;49m[33;40m+[39;49m[34;49m return tos ; [39;49m[32;49m
0x7fbdaad5b623    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fbdaad5b626    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5b62a    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  ) 0x100000000 n @ + m @ + return tos [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fbdaad5b62d    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5b631    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaad5b635    4983ee08                sub r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5b639    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaad5b63c    c3                      ret                                                    [39;49m
Word_Disassemble : word - 't64bitAdd2' :: codeSize = 61
Word : 0x00007fbdaa8ef798 :: Compiled at : 0x00007fbdaad5b5ff
 =============================
::> 'wdiss' was called at namespaces/test/math.csl 84.23 <::
 t64bitAdd2_assert  : ok


 0x0000000000000002
 =============================
C.[34;49mt64bitSub2[39;49m <:> csl compiled word
SourceCode for C.[34;49mt64bitSub2[39;49m :> 
[34;49m: t64bitSub2 ( n m ) 0x100000003 n @ - m @ - return tos ; [39;49m
Source code file location of [34;49mt64bitSub2[39;49m : "namespaces/test/math.csl" : 87.2 :: we are now at : namespaces/test/math.csl : 88.23
Compiled with : optimizeOn, inlineOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xaad5b68c -- code size = 62 bytes
TypeSignature : Integer . Integer -> Integer 
 -----------------------------
Word :: C.[34;49mt64bitSub2[39;49m : definition = 0x00007fbdaad5b68c : disassembly at namespaces/test/math.csl : 88.23 :
[34;49m ..                                     : [39;49m[33;40mt64bitSub2[39;49m[34;49m ( n m ) 0x100000003 n @ - m @ - return tos ;  .. [39;49m[32;49m
0x7fbdaad5b68c    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fbdaad5b690    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaad5b694    4981c608000000          add r14, 0x8                                           [39;49m
[34;49m ..                  : t64bitSub2 ( n m ) [39;49m[33;40m0x100000003[39;49m[34;49m n @ - m @ - return tos ;  .. [39;49m[32;49m
0x7fbdaad5b69b    48b80300000001000000    mov rax, 0x100000003                                   [39;49m
[34;49m ..      : t64bitSub2 ( n m ) 0x100000003 [39;49m[33;40mn[39;49m[34;49m @ - m @ - return tos ;  .. [39;49m[32;49m
0x7fbdaad5b6a5    498b4ff0                mov rcx, [r15-0x10]                                    [39;49m
[34;49m ..  : t64bitSub2 ( n m ) 0x100000003 n @ [39;49m[33;40m-[39;49m[34;49m m @ - return tos ;  .. [39;49m[32;49m
0x7fbdaad5b6a9    482bc1                  sub rax, rcx                                           [39;49m
[34;49m   : t64bitSub2 ( n m ) 0x100000003 n @ - [39;49m[33;40mm[39;49m[34;49m @ - return tos ;  .. [39;49m[32;49m
0x7fbdaad5b6ac    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m
[34;49m .. bitSub2 ( n m ) 0x100000003 n @ - m @ [39;49m[33;40m-[39;49m[34;49m return tos ; [39;49m[32;49m
0x7fbdaad5b6b0    482bc1                  sub rax, rcx                                           [39;49m[32;49m
0x7fbdaad5b6b3    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5b6b7    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  ) 0x100000003 n @ - m @ - return tos [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fbdaad5b6ba    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5b6be    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaad5b6c2    4983ee08                sub r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5b6c6    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaad5b6c9    c3                      ret                                                    [39;49m
Word_Disassemble : word - 't64bitSub2' :: codeSize = 61
Word : 0x00007fbdaa8f2000 :: Compiled at : 0x00007fbdaad5b68c
 =============================
::> 'wdiss' was called at namespaces/test/math.csl 88.23 <::
 t64bitSub2_assert  : ok


 =============================
C.[34;49mt64bitSub3[39;49m <:> csl compiled word
SourceCode for C.[34;49mt64bitSub3[39;49m :> 
[34;49m: t64bitSub3 ( n m ) 0x100000004 n @ - m @ - return tos ; [39;49m
Source code file location of [34;49mt64bitSub3[39;49m : "namespaces/test/math.csl" : 90.2 :: we are now at : namespaces/test/math.csl : 91.23
Compiled with : optimizeOn, inlineOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xaad5b6cf -- code size = 62 bytes
TypeSignature : 
 -----------------------------
Word :: C.[34;49mt64bitSub3[39;49m : definition = 0x00007fbdaad5b6cf : disassembly at namespaces/test/math.csl : 91.23 :
[34;49m ..                                     : [39;49m[33;40mt64bitSub3[39;49m[34;49m ( n m ) 0x100000004 n @ - m @ - return tos ;  .. [39;49m[32;49m
0x7fbdaad5b6cf    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fbdaad5b6d3    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaad5b6d7    4981c608000000          add r14, 0x8                                           [39;49m
[34;49m ..                  : t64bitSub3 ( n m ) [39;49m[33;40m0x100000004[39;49m[34;49m n @ - m @ - return tos ;  .. [39;49m[32;49m
0x7fbdaad5b6de    48b80400000001000000    mov rax, 0x100000004                                   [39;49m
[34;49m ..      : t64bitSub3 ( n m ) 0x100000004 [39;49m[33;40mn[39;49m[34;49m @ - m @ - return tos ;  .. [39;49m[32;49m
0x7fbdaad5b6e8    498b4ff0                mov rcx, [r15-0x10]                                    [39;49m
[34;49m ..  : t64bitSub3 ( n m ) 0x100000004 n @ [39;49m[33;40m-[39;49m[34;49m m @ - return tos ;  .. [39;49m[32;49m
0x7fbdaad5b6ec    482bc1                  sub rax, rcx                                           [39;49m
[34;49m   : t64bitSub3 ( n m ) 0x100000004 n @ - [39;49m[33;40mm[39;49m[34;49m @ - return tos ;  .. [39;49m[32;49m
0x7fbdaad5b6ef    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m
[34;49m .. bitSub3 ( n m ) 0x100000004 n @ - m @ [39;49m[33;40m-[39;49m[34;49m return tos ; [39;49m[32;49m
0x7fbdaad5b6f3    482bc1                  sub rax, rcx                                           [39;49m[32;49m
0x7fbdaad5b6f6    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5b6fa    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  ) 0x100000004 n @ - m @ - return tos [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fbdaad5b6fd    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5b701    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaad5b705    4983ee08                sub r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5b709    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaad5b70c    c3                      ret                                                    [39;49m
Word_Disassemble : word - 't64bitSub3' :: codeSize = 61
Word : 0x00007fbdaa8f3358 :: Compiled at : 0x00007fbdaad5b6cf
 =============================
::> 'wdiss' was called at namespaces/test/math.csl 91.23 <::

 =============================
C.[34;49mt64bitSub3[39;49m <:> csl compiled word
SourceCode for C.[34;49mt64bitSub3[39;49m :> 
[34;49m: t64bitSub3 ( n m ) 0x100000003 0x100000002 - 0x100000003 + n @ - m @ - return tos ; [39;49m
Source code file location of [34;49mt64bitSub3[39;49m : "namespaces/test/math.csl" : 93.2 :: we are now at : namespaces/test/math.csl : 94.23
Compiled with : optimizeOn, inlineOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xaad5b712 -- code size = 72 bytes
TypeSignature : 
 -----------------------------
Word :: C.[34;49mt64bitSub3[39;49m : definition = 0x00007fbdaad5b712 : disassembly at namespaces/test/math.csl : 94.23 :
[34;49m ..                                     : [39;49m[33;40mt64bitSub3[39;49m[34;49m ( n m ) 0x100000003 0x100000002 - 0x100000003 + n @ - m @ - return tos ;  .. [39;49m[32;49m
0x7fbdaad5b712    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fbdaad5b716    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaad5b71a    4981c608000000          add r14, 0x8                                           [39;49m
[34;49m ..                  : t64bitSub3 ( n m ) [39;49m[33;40m0x100000003[39;49m[34;49m 0x100000002 - 0x100000003 + n @ - m @ - return tos ;  .. [39;49m[32;49m
0x7fbdaad5b721    48c7c001000000          mov rax, 0x1                                           [39;49m
[34;49m .. ub3 ( n m ) 0x100000003 0x100000002 - [39;49m[33;40m0x100000003[39;49m[34;49m + n @ - m @ - return tos ; [39;49m[32;49m
0x7fbdaad5b728    48b90300000001000000    mov rcx, 0x100000003                                   [39;49m
[34;49m .. 0x100000003 0x100000002 - 0x100000003 [39;49m[33;40m+[39;49m[34;49m n @ - m @ - return tos ; [39;49m[32;49m
0x7fbdaad5b732    4803c1                  add rax, rcx                                           [39;49m
[34;49m .. 100000003 0x100000002 - 0x100000003 + [39;49m[33;40mn[39;49m[34;49m @ - m @ - return tos ; [39;49m[32;49m
0x7fbdaad5b735    498b4ff0                mov rcx, [r15-0x10]                                    [39;49m
[34;49m .. 00003 0x100000002 - 0x100000003 + n @ [39;49m[33;40m-[39;49m[34;49m m @ - return tos ; [39;49m[32;49m
0x7fbdaad5b739    482bc1                  sub rax, rcx                                           [39;49m
[34;49m .. 003 0x100000002 - 0x100000003 + n @ - [39;49m[33;40mm[39;49m[34;49m @ - return tos ; [39;49m[32;49m
0x7fbdaad5b73c    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m
[34;49m .. 0x100000002 - 0x100000003 + n @ - m @ [39;49m[33;40m-[39;49m[34;49m return tos ; [39;49m[32;49m
0x7fbdaad5b740    482bc1                  sub rax, rcx                                           [39;49m[32;49m
0x7fbdaad5b743    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5b747    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  0x100000003 + n @ - m @ - return tos [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fbdaad5b74a    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5b74e    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaad5b752    4983ee08                sub r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5b756    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaad5b759    c3                      ret                                                    [39;49m
Word_Disassemble : word - 't64bitSub3' :: codeSize = 71
Word : 0x00007fbdaa8f46b0 :: Compiled at : 0x00007fbdaad5b712
 =============================
::> 'wdiss' was called at namespaces/test/math.csl 94.23 <::

 7176105502331971041 
 0110 0011  1001 0110   1010 0101  1110 1111    0000 1001  0011 1001   0010 0101  1110 0001 DLLNode size =  16
DLLNodeAlloc size =  512

Dump at : namespaces/test/arrayTest.csl : 18.15 :
Dump : Address = 0x00007fbdaa7d0ec8 : Number = 64 :: (little endian dump)
0x00007fbdaa7d0ec8 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7d0ed8 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7d0ee8 :  00 00 00 00 00 00 00 00  02 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7d0ef8 :  01 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
DLLNodeAlloc4 size =  2048
 
testna4 =  0x00007fbdaa7d2a90
 =============================
DLLNodeAlloc4.[34;49mtestna5[39;49m <:> csl compiled word
SourceCode for DLLNodeAlloc4.[34;49mtestna5[39;49m :> 
[34;49m: testna5 ( DLLNodeAlloc4 dlna4o ) "\ndlna4o = " ps dlna4o hp dlna4o.nodes [ 1 ] [ 0 ].AfterReference 1 = dlna4o.nodes [ 1 ] [ 0 ].BeforeReference 2 = dlna4o.nodes [ 1 ] [ 0 ] 32 dump dlna4o.nodes [ 2 ] [ 1 ].AfterReference 1 = dlna4o.nodes [ 2 ] [ 1 ].BeforeReference 2 = "\njust before : dlna4o.nodes [ 2 ] [ 1 ] 32 dump" ps dlna4o.nodes [ 2 ] [ 1 ] 32 dump dlna4o.nodes [ 3 ] [ 2 ].AfterReference 1 = dlna4o.nodes [ 3 ] [ 2 ].BeforeReference 2 = "\njust before : dlna4o.nodes [ 3 ] [ 2 ] 32 dump" ps dlna4o.nodes [ 3 ] [ 2 ] 32 dump dlna4o.nodes [ 3 ] [ 2 ].AfterReference dlna4o.nodes [ 3 ] [ 2 ].BeforeReference = dlna4o.nodes [ 3 ] [ 2 ].BeforeReference dlna4o.nodes [ 3 ] [ 2 ].AfterReference = "\njust before : dlna4o.nodes [ 3 ] [ 2 ] 32 dump" ps dlna4o.nodes [ 3 ] [ 2 ] 32 dump "dlna4o = " ps dlna4o hp ; [39;49m
Source code file location of [34;49mtestna5[39;49m : "namespaces/test/arrayTest.csl" : 28.2 :: we are now at : namespaces/test/arrayTest.csl : 47.21
Compiled with : optimizeOn, inlineOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xaad5c7aa -- code size = 636 bytes
TypeSignature : Object 
 -----------------------------
Word :: DLLNodeAlloc4.[34;49mtestna5[39;49m : definition = 0x00007fbdaad5c7aa : disassembly at namespaces/test/arrayTest.csl : 47.21 :
[34;49m ..                                     : [39;49m[33;40mtestna5[39;49m[34;49m ( DLLNodeAlloc4 dlna4o ) "\ndlna4o = " ps dlna4o hp dlna4o.nodes [ 1 ] [ 0 ].AfterReference 1 .. [39;49m[32;49m
0x7fbdaad5c7aa    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fbdaad5c7ae    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaad5c7b2    4981c608000000          add r14, 0x8                                           [39;49m
[34;49m ..    : testna5 ( DLLNodeAlloc4 dlna4o ) [39;49m[33;40m"[39;49m[34;49m\ndlna4o = " ps dlna4o hp dlna4o.nodes [ 1 ] [ 0 ].AfterReference 1 = dlna4o.nodes [ 1 ] [ 0 ].Befor .. [39;49m[32;49m
0x7fbdaad5c7b9    48b86ee3bfaabd7f0000    mov rax, 0x7fbdaabfe36e    	[32;49m< string : '[39;49m[39;49m\ndlna4o = [39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fbdaad5c7c3    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5c7c7    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  DLLNodeAlloc4 dlna4o ) "\ndlna4o = " [39;49m[33;40mps[39;49m[34;49m dlna4o hp dlna4o.nodes [ 1 ] [ 0 ].AfterReference 1 = dlna4o.nodes [ 1 ] [ 0 ].BeforeReference 2 = .. [39;49m[32;49m
0x7fbdaad5c7ca    49b97d63d5aabd7f0000    mov r9, 0x7fbdaad5637d                                 [39;49m[32;49m
0x7fbdaad5c7d4    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fbdaad5637d[32;49m >[39;49m[39;49m
[34;49m .. LNodeAlloc4 dlna4o ) "\ndlna4o = " ps [39;49m[33;40mdlna4o[39;49m[34;49m hp dlna4o.nodes [ 1 ] [ 0 ].AfterReference 1 = dlna4o.nodes [ 1 ] [ 0 ].BeforeReference 2 = dl .. [39;49m[32;49m
0x7fbdaad5c7d7    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5c7db    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fbdaad5c7e2    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5c7e6    498906                  mov [r14], rax                                         [39;49m
[34;49m .. loc4 dlna4o ) "\ndlna4o = " ps dlna4o [39;49m[33;40mhp[39;49m[34;49m dlna4o.nodes [ 1 ] [ 0 ].AfterReference 1 = dlna4o.nodes [ 1 ] [ 0 ].BeforeReference 2 = dlna4o.no .. [39;49m[32;49m
0x7fbdaad5c7e9    49b98764d5aabd7f0000    mov r9, 0x7fbdaad56487                                 [39;49m[32;49m
0x7fbdaad5c7f3    49ffd1                  call r9                    	< Int.[34;49mhp[39;49m : 0x00007fbdaad56487[32;49m >[39;49m[39;49m
[34;49m .. 4 dlna4o ) "\ndlna4o = " ps dlna4o hp [39;49m[33;40mdlna4o[39;49m[34;49m.nodes [ 1 ] [ 0 ].AfterReference 1 = dlna4o.nodes [ 1 ] [ 0 ].BeforeReference 2 = dlna4o.nodes .. [39;49m[32;49m
0x7fbdaad5c7f6    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5c7fa    4881c000020000          add rax, 0x200                                         [39;49m
[34;49m .. na4o.nodes [ 1 ] [ 0 ].AfterReference [39;49m[33;40m1[39;49m[34;49m = dlna4o.nodes [ 1 ] [ 0 ].BeforeReference 2 = dlna4o.nodes [ 1 ] [ 0 ] 32 dump dlna4o.nodes [ 2 ]  .. [39;49m[32;49m
0x7fbdaad5c801    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m .. 4o.nodes [ 1 ] [ 0 ].AfterReference 1 [39;49m[33;40m=[39;49m[34;49m dlna4o.nodes [ 1 ] [ 0 ].BeforeReference 2 = dlna4o.nodes [ 1 ] [ 0 ] 32 dump dlna4o.nodes [ 2 ] [  .. [39;49m[32;49m
0x7fbdaad5c808    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. .nodes [ 1 ] [ 0 ].AfterReference 1 = [39;49m[33;40mdlna4o[39;49m[34;49m.nodes [ 1 ] [ 0 ].BeforeReference 2 = dlna4o.nodes [ 1 ] [ 0 ] 32 dump dlna4o.nodes [ 2 ] [ 1  .. [39;49m[32;49m
0x7fbdaad5c80b    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. eference 1 = dlna4o.nodes [ 1 ] [ 0 ].[39;49m[33;40mBeforeReference[39;49m[34;49m 2 = dlna4o.nodes [ 1 ] [ 0 ] 32 dump dlna4o.nodes [ 2 ] [ 1 ].AfterReference 1 = dlna .. [39;49m[32;49m
0x7fbdaad5c80f    4881c008020000          add rax, 0x208                                         [39;49m
[34;49m .. a4o.nodes [ 1 ] [ 0 ].BeforeReference [39;49m[33;40m2[39;49m[34;49m = dlna4o.nodes [ 1 ] [ 0 ] 32 dump dlna4o.nodes [ 2 ] [ 1 ].AfterReference 1 = dlna4o.nodes [ 2 ] [ .. [39;49m[32;49m
0x7fbdaad5c816    48c7c102000000          mov rcx, 0x2                                           [39;49m
[34;49m .. o.nodes [ 1 ] [ 0 ].BeforeReference 2 [39;49m[33;40m=[39;49m[34;49m dlna4o.nodes [ 1 ] [ 0 ] 32 dump dlna4o.nodes [ 2 ] [ 1 ].AfterReference 1 = dlna4o.nodes [ 2 ] [ 1 .. [39;49m[32;49m
0x7fbdaad5c81d    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. nodes [ 1 ] [ 0 ].BeforeReference 2 = [39;49m[33;40mdlna4o[39;49m[34;49m.nodes [ 1 ] [ 0 ] 32 dump dlna4o.nodes [ 2 ] [ 1 ].AfterReference 1 = dlna4o.nodes [ 2 ] [ 1 ] .. [39;49m[32;49m
0x7fbdaad5c820    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5c824    4881c000020000          add rax, 0x200                                         [39;49m[32;49m
0x7fbdaad5c82b    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5c82f    498906                  mov [r14], rax                                         [39;49m
[34;49m .. eference 2 = dlna4o.nodes [ 1 ] [ 0 ] [39;49m[33;40m32[39;49m[34;49m dump dlna4o.nodes [ 2 ] [ 1 ].AfterReference 1 = dlna4o.nodes [ 2 ] [ 1 ].BeforeReference 2 = "\nj .. [39;49m[32;49m
0x7fbdaad5c832    48c7c020000000          mov rax, 0x20                                          [39;49m[32;49m
0x7fbdaad5c839    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5c83d    498906                  mov [r14], rax                                         [39;49m
[34;49m .. rence 2 = dlna4o.nodes [ 1 ] [ 0 ] 32 [39;49m[33;40mdump[39;49m[34;49m dlna4o.nodes [ 2 ] [ 1 ].AfterReference 1 = dlna4o.nodes [ 2 ] [ 1 ].BeforeReference 2 = "\njust .. [39;49m[32;49m
0x7fbdaad5c840    49b830b43e1ebd550000    mov r8, 0x55bd1e3eb430                                 [39;49m[32;49m
0x7fbdaad5c84a    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaad5c854    49ffd1                  call r9                    	< Debug.[34;49mdump[39;49m : 0x000055bd1e3eb430[32;49m >[39;49m[39;49m
[34;49m ..  2 = dlna4o.nodes [ 1 ] [ 0 ] 32 dump [39;49m[33;40mdlna4o[39;49m[34;49m.nodes [ 2 ] [ 1 ].AfterReference 1 = dlna4o.nodes [ 2 ] [ 1 ].BeforeReference 2 = "\njust befo .. [39;49m[32;49m
0x7fbdaad5c857    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5c85b    4881c010040000          add rax, 0x410                                         [39;49m
[34;49m .. na4o.nodes [ 2 ] [ 1 ].AfterReference [39;49m[33;40m1[39;49m[34;49m = dlna4o.nodes [ 2 ] [ 1 ].BeforeReference 2 = "\njust before : dlna4o.nodes [ 2 ] [ 1 ] 32 dump" p .. [39;49m[32;49m
0x7fbdaad5c862    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m .. 4o.nodes [ 2 ] [ 1 ].AfterReference 1 [39;49m[33;40m=[39;49m[34;49m dlna4o.nodes [ 2 ] [ 1 ].BeforeReference 2 = "\njust before : dlna4o.nodes [ 2 ] [ 1 ] 32 dump" ps  .. [39;49m[32;49m
0x7fbdaad5c869    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. .nodes [ 2 ] [ 1 ].AfterReference 1 = [39;49m[33;40mdlna4o[39;49m[34;49m.nodes [ 2 ] [ 1 ].BeforeReference 2 = "\njust before : dlna4o.nodes [ 2 ] [ 1 ] 32 dump" ps  d .. [39;49m[32;49m
0x7fbdaad5c86c    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. eference 1 = dlna4o.nodes [ 2 ] [ 1 ].[39;49m[33;40mBeforeReference[39;49m[34;49m 2 = "\njust before : dlna4o.nodes [ 2 ] [ 1 ] 32 dump" ps  dlna4o.nodes [ 2 ] [ 1 ] 3 .. [39;49m[32;49m
0x7fbdaad5c870    4881c018040000          add rax, 0x418                                         [39;49m
[34;49m .. a4o.nodes [ 2 ] [ 1 ].BeforeReference [39;49m[33;40m2[39;49m[34;49m = "\njust before : dlna4o.nodes [ 2 ] [ 1 ] 32 dump" ps  dlna4o.nodes [ 2 ] [ 1 ] 32 dump dlna4o.no .. [39;49m[32;49m
0x7fbdaad5c877    48c7c102000000          mov rcx, 0x2                                           [39;49m
[34;49m .. o.nodes [ 2 ] [ 1 ].BeforeReference 2 [39;49m[33;40m=[39;49m[34;49m "\njust before : dlna4o.nodes [ 2 ] [ 1 ] 32 dump" ps  dlna4o.nodes [ 2 ] [ 1 ] 32 dump dlna4o.node .. [39;49m[32;49m
0x7fbdaad5c87e    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. nodes [ 2 ] [ 1 ].BeforeReference 2 = [39;49m[33;40m"[39;49m[34;49m\njust before : dlna4o.nodes [ 2 ] [ 1 ] 32 dump" ps  dlna4o.nodes [ 2 ] [ 1 ] 32 dump dlna4o.nodes  .. [39;49m[32;49m
0x7fbdaad5c881    48b8d7e3bfaabd7f0000    mov rax, 0x7fbdaabfe3d7    	[32;49m< string : '[39;49m[39;49m\njust before : dlna4o.nodes [ 2 ] [ 1 ] 32 dump[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fbdaad5c88b    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5c88f    498906                  mov [r14], rax                                         [39;49m
[34;49m .. e : dlna4o.nodes [ 2 ] [ 1 ] 32 dump" [39;49m[33;40mps[39;49m[34;49m  dlna4o.nodes [ 2 ] [ 1 ] 32 dump dlna4o.nodes [ 3 ] [ 2 ].AfterReference 1 = dlna4o.nodes [ 3 ] [ .. [39;49m[32;49m
0x7fbdaad5c892    49b97d63d5aabd7f0000    mov r9, 0x7fbdaad5637d                                 [39;49m[32;49m
0x7fbdaad5c89c    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fbdaad5637d[32;49m >[39;49m[39;49m
[34;49m .. dlna4o.nodes [ 2 ] [ 1 ] 32 dump" ps  [39;49m[33;40mdlna4o[39;49m[34;49m.nodes [ 2 ] [ 1 ] 32 dump dlna4o.nodes [ 3 ] [ 2 ].AfterReference 1 = dlna4o.nodes [ 3 ] [ 2 ] .. [39;49m[32;49m
0x7fbdaad5c89f    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5c8a3    4881c010040000          add rax, 0x410                                         [39;49m[32;49m
0x7fbdaad5c8aa    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5c8ae    498906                  mov [r14], rax                                         [39;49m
[34;49m .. 32 dump" ps  dlna4o.nodes [ 2 ] [ 1 ] [39;49m[33;40m32[39;49m[34;49m dump dlna4o.nodes [ 3 ] [ 2 ].AfterReference 1 = dlna4o.nodes [ 3 ] [ 2 ].BeforeReference 2 = "\nj .. [39;49m[32;49m
0x7fbdaad5c8b1    48c7c020000000          mov rax, 0x20                                          [39;49m[32;49m
0x7fbdaad5c8b8    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5c8bc    498906                  mov [r14], rax                                         [39;49m
[34;49m .. dump" ps  dlna4o.nodes [ 2 ] [ 1 ] 32 [39;49m[33;40mdump[39;49m[34;49m dlna4o.nodes [ 3 ] [ 2 ].AfterReference 1 = dlna4o.nodes [ 3 ] [ 2 ].BeforeReference 2 = "\njust .. [39;49m[32;49m
0x7fbdaad5c8bf    49b830b43e1ebd550000    mov r8, 0x55bd1e3eb430                                 [39;49m[32;49m
0x7fbdaad5c8c9    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaad5c8d3    49ffd1                  call r9                    	< Debug.[34;49mdump[39;49m : 0x000055bd1e3eb430[32;49m >[39;49m[39;49m
[34;49m ..  ps  dlna4o.nodes [ 2 ] [ 1 ] 32 dump [39;49m[33;40mdlna4o[39;49m[34;49m.nodes [ 3 ] [ 2 ].AfterReference 1 = dlna4o.nodes [ 3 ] [ 2 ].BeforeReference 2 = "\njust befo .. [39;49m[32;49m
0x7fbdaad5c8d6    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5c8da    4881c020060000          add rax, 0x620                                         [39;49m
[34;49m .. na4o.nodes [ 3 ] [ 2 ].AfterReference [39;49m[33;40m1[39;49m[34;49m = dlna4o.nodes [ 3 ] [ 2 ].BeforeReference 2 = "\njust before : dlna4o.nodes [ 3 ] [ 2 ] 32 dump" p .. [39;49m[32;49m
0x7fbdaad5c8e1    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m .. 4o.nodes [ 3 ] [ 2 ].AfterReference 1 [39;49m[33;40m=[39;49m[34;49m dlna4o.nodes [ 3 ] [ 2 ].BeforeReference 2 = "\njust before : dlna4o.nodes [ 3 ] [ 2 ] 32 dump" ps  .. [39;49m[32;49m
0x7fbdaad5c8e8    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. .nodes [ 3 ] [ 2 ].AfterReference 1 = [39;49m[33;40mdlna4o[39;49m[34;49m.nodes [ 3 ] [ 2 ].BeforeReference 2 = "\njust before : dlna4o.nodes [ 3 ] [ 2 ] 32 dump" ps  d .. [39;49m[32;49m
0x7fbdaad5c8eb    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. eference 1 = dlna4o.nodes [ 3 ] [ 2 ].[39;49m[33;40mBeforeReference[39;49m[34;49m 2 = "\njust before : dlna4o.nodes [ 3 ] [ 2 ] 32 dump" ps  dlna4o.nodes [ 3 ] [ 2 ] 3 .. [39;49m[32;49m
0x7fbdaad5c8ef    4881c028060000          add rax, 0x628                                         [39;49m
[34;49m .. a4o.nodes [ 3 ] [ 2 ].BeforeReference [39;49m[33;40m2[39;49m[34;49m = "\njust before : dlna4o.nodes [ 3 ] [ 2 ] 32 dump" ps  dlna4o.nodes [ 3 ] [ 2 ] 32 dump dlna4o.no .. [39;49m[32;49m
0x7fbdaad5c8f6    48c7c102000000          mov rcx, 0x2                                           [39;49m
[34;49m .. o.nodes [ 3 ] [ 2 ].BeforeReference 2 [39;49m[33;40m=[39;49m[34;49m "\njust before : dlna4o.nodes [ 3 ] [ 2 ] 32 dump" ps  dlna4o.nodes [ 3 ] [ 2 ] 32 dump dlna4o.node .. [39;49m[32;49m
0x7fbdaad5c8fd    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. nodes [ 3 ] [ 2 ].BeforeReference 2 = [39;49m[33;40m"[39;49m[34;49m\njust before : dlna4o.nodes [ 3 ] [ 2 ] 32 dump" ps  dlna4o.nodes [ 3 ] [ 2 ] 32 dump dlna4o.nodes  .. [39;49m[32;49m
0x7fbdaad5c900    48b87ee4bfaabd7f0000    mov rax, 0x7fbdaabfe47e    	[32;49m< string : '[39;49m[39;49m\njust before : dlna4o.nodes [ 3 ] [ 2 ] 32 dump[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fbdaad5c90a    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5c90e    498906                  mov [r14], rax                                         [39;49m
[34;49m .. e : dlna4o.nodes [ 3 ] [ 2 ] 32 dump" [39;49m[33;40mps[39;49m[34;49m  dlna4o.nodes [ 3 ] [ 2 ] 32 dump dlna4o.nodes [ 3 ] [ 2 ].AfterReference dlna4o.nodes [ 3 ] [ 2 ] .. [39;49m[32;49m
0x7fbdaad5c911    49b97d63d5aabd7f0000    mov r9, 0x7fbdaad5637d                                 [39;49m[32;49m
0x7fbdaad5c91b    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fbdaad5637d[32;49m >[39;49m[39;49m
[34;49m .. dlna4o.nodes [ 3 ] [ 2 ] 32 dump" ps  [39;49m[33;40mdlna4o[39;49m[34;49m.nodes [ 3 ] [ 2 ] 32 dump dlna4o.nodes [ 3 ] [ 2 ].AfterReference dlna4o.nodes [ 3 ] [ 2 ].Bef .. [39;49m[32;49m
0x7fbdaad5c91e    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5c922    4881c020060000          add rax, 0x620                                         [39;49m[32;49m
0x7fbdaad5c929    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5c92d    498906                  mov [r14], rax                                         [39;49m
[34;49m .. 32 dump" ps  dlna4o.nodes [ 3 ] [ 2 ] [39;49m[33;40m32[39;49m[34;49m dump dlna4o.nodes [ 3 ] [ 2 ].AfterReference dlna4o.nodes [ 3 ] [ 2 ].BeforeReference = dlna4o.nod .. [39;49m[32;49m
0x7fbdaad5c930    48c7c020000000          mov rax, 0x20                                          [39;49m[32;49m
0x7fbdaad5c937    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5c93b    498906                  mov [r14], rax                                         [39;49m
[34;49m .. dump" ps  dlna4o.nodes [ 3 ] [ 2 ] 32 [39;49m[33;40mdump[39;49m[34;49m dlna4o.nodes [ 3 ] [ 2 ].AfterReference dlna4o.nodes [ 3 ] [ 2 ].BeforeReference = dlna4o.nodes  .. [39;49m[32;49m
0x7fbdaad5c93e    49b830b43e1ebd550000    mov r8, 0x55bd1e3eb430                                 [39;49m[32;49m
0x7fbdaad5c948    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaad5c952    49ffd1                  call r9                    	< Debug.[34;49mdump[39;49m : 0x000055bd1e3eb430[32;49m >[39;49m[39;49m
[34;49m ..  ps  dlna4o.nodes [ 3 ] [ 2 ] 32 dump [39;49m[33;40mdlna4o[39;49m[34;49m.nodes [ 3 ] [ 2 ].AfterReference dlna4o.nodes [ 3 ] [ 2 ].BeforeReference = dlna4o.nodes [ 3 ] .. [39;49m[32;49m
0x7fbdaad5c955    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5c959    4881c020060000          add rax, 0x620                                         [39;49m
[34;49m .. na4o.nodes [ 3 ] [ 2 ].AfterReference [39;49m[33;40mdlna4o[39;49m[34;49m.nodes [ 3 ] [ 2 ].BeforeReference = dlna4o.nodes [ 3 ] [ 2 ].BeforeReference dlna4o.nodes [ 3  .. [39;49m[32;49m
0x7fbdaad5c960    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5c964    4881c128060000          add rcx, 0x628                                         [39;49m
[34;49m .. a4o.nodes [ 3 ] [ 2 ].BeforeReference [39;49m[33;40m=[39;49m[34;49m dlna4o.nodes [ 3 ] [ 2 ].BeforeReference dlna4o.nodes [ 3 ] [ 2 ].AfterReference = "\njust before : .. [39;49m[32;49m
0x7fbdaad5c96b    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. o.nodes [ 3 ] [ 2 ].BeforeReference = [39;49m[33;40mdlna4o[39;49m[34;49m.nodes [ 3 ] [ 2 ].BeforeReference dlna4o.nodes [ 3 ] [ 2 ].AfterReference = "\njust before : d .. [39;49m[32;49m
0x7fbdaad5c96e    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. eReference = dlna4o.nodes [ 3 ] [ 2 ].[39;49m[33;40mBeforeReference[39;49m[34;49m dlna4o.nodes [ 3 ] [ 2 ].AfterReference = "\njust before : dlna4o.nodes [ 3 ] [ 2 ] 3 .. [39;49m[32;49m
0x7fbdaad5c972    4881c028060000          add rax, 0x628                                         [39;49m
[34;49m .. a4o.nodes [ 3 ] [ 2 ].BeforeReference [39;49m[33;40mdlna4o[39;49m[34;49m.nodes [ 3 ] [ 2 ].AfterReference = "\njust before : dlna4o.nodes [ 3 ] [ 2 ] 32 dump" ps  dlna .. [39;49m[32;49m
0x7fbdaad5c979    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5c97d    4881c120060000          add rcx, 0x620                                         [39;49m
[34;49m .. na4o.nodes [ 3 ] [ 2 ].AfterReference [39;49m[33;40m=[39;49m[34;49m "\njust before : dlna4o.nodes [ 3 ] [ 2 ] 32 dump" ps  dlna4o.nodes [ 3 ] [ 2 ] 32 dump "dlna4o = " .. [39;49m[32;49m
0x7fbdaad5c984    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. 4o.nodes [ 3 ] [ 2 ].AfterReference = [39;49m[33;40m"[39;49m[34;49m\njust before : dlna4o.nodes [ 3 ] [ 2 ] 32 dump" ps  dlna4o.nodes [ 3 ] [ 2 ] 32 dump "dlna4o = " p .. [39;49m[32;49m
0x7fbdaad5c987    48b829e5bfaabd7f0000    mov rax, 0x7fbdaabfe529    	[32;49m< string : '[39;49m[39;49m\njust before : dlna4o.nodes [ 3 ] [ 2 ] 32 dump[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fbdaad5c991    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5c995    498906                  mov [r14], rax                                         [39;49m
[34;49m .. e : dlna4o.nodes [ 3 ] [ 2 ] 32 dump" [39;49m[33;40mps[39;49m[34;49m  dlna4o.nodes [ 3 ] [ 2 ] 32 dump "dlna4o = " ps dlna4o hp ;  .. [39;49m[32;49m
0x7fbdaad5c998    49b97d63d5aabd7f0000    mov r9, 0x7fbdaad5637d                                 [39;49m[32;49m
0x7fbdaad5c9a2    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fbdaad5637d[32;49m >[39;49m[39;49m
[34;49m .. dlna4o.nodes [ 3 ] [ 2 ] 32 dump" ps  [39;49m[33;40mdlna4o[39;49m[34;49m.nodes [ 3 ] [ 2 ] 32 dump "dlna4o = " ps dlna4o hp ;  .. [39;49m[32;49m
0x7fbdaad5c9a5    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5c9a9    4881c020060000          add rax, 0x620                                         [39;49m[32;49m
0x7fbdaad5c9b0    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5c9b4    498906                  mov [r14], rax                                         [39;49m
[34;49m .. 32 dump" ps  dlna4o.nodes [ 3 ] [ 2 ] [39;49m[33;40m32[39;49m[34;49m dump "dlna4o = " ps dlna4o hp ;  .. [39;49m[32;49m
0x7fbdaad5c9b7    48c7c020000000          mov rax, 0x20                                          [39;49m[32;49m
0x7fbdaad5c9be    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5c9c2    498906                  mov [r14], rax                                         [39;49m
[34;49m .. dump" ps  dlna4o.nodes [ 3 ] [ 2 ] 32 [39;49m[33;40mdump[39;49m[34;49m "dlna4o = " ps dlna4o hp ;  .. [39;49m[32;49m
0x7fbdaad5c9c5    49b830b43e1ebd550000    mov r8, 0x55bd1e3eb430                                 [39;49m[32;49m
0x7fbdaad5c9cf    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaad5c9d9    49ffd1                  call r9                    	< Debug.[34;49mdump[39;49m : 0x000055bd1e3eb430[32;49m >[39;49m[39;49m
[34;49m ..  ps  dlna4o.nodes [ 3 ] [ 2 ] 32 dump [39;49m[33;40m"[39;49m[34;49mdlna4o = " ps dlna4o hp ;  .. [39;49m[32;49m
0x7fbdaad5c9dc    48b89ee5bfaabd7f0000    mov rax, 0x7fbdaabfe59e    	[32;49m< string : '[39;49m[39;49mdlna4o = [39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fbdaad5c9e6    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5c9ea    498906                  mov [r14], rax                                         [39;49m
[34;49m .. nodes [ 3 ] [ 2 ] 32 dump "dlna4o = " [39;49m[33;40mps[39;49m[34;49m dlna4o hp ;  .. [39;49m[32;49m
0x7fbdaad5c9ed    49b97d63d5aabd7f0000    mov r9, 0x7fbdaad5637d                                 [39;49m[32;49m
0x7fbdaad5c9f7    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fbdaad5637d[32;49m >[39;49m[39;49m
[34;49m .. es [ 3 ] [ 2 ] 32 dump "dlna4o = " ps [39;49m[33;40mdlna4o[39;49m[34;49m hp ;  .. [39;49m[32;49m
0x7fbdaad5c9fa    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5c9fe    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fbdaad5ca05    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5ca09    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ] [ 2 ] 32 dump "dlna4o = " ps dlna4o [39;49m[33;40mhp[39;49m[34;49m ;  .. [39;49m[32;49m
0x7fbdaad5ca0c    49b98764d5aabd7f0000    mov r9, 0x7fbdaad56487                                 [39;49m[32;49m
0x7fbdaad5ca16    49ffd1                  call r9                    	< Int.[34;49mhp[39;49m : 0x00007fbdaad56487[32;49m >[39;49m[39;49m
[34;49m ..  2 ] 32 dump "dlna4o = " ps dlna4o hp [39;49m[33;40m;[39;49m[34;49m  .. [39;49m[32;49m
0x7fbdaad5ca19    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5ca1d    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaad5ca21    4983ee08                sub r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5ca25    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'testna5' :: codeSize = 635
Word : 0x00007fbdaa93f980 :: Compiled at : 0x00007fbdaad5c7aa
 =============================
::> 'wdiss' was called at namespaces/test/arrayTest.csl 47.21 <::
 
dlna4o =  0x00007fbdaa7d2a90
Dump at : namespaces/test/arrayTest.csl : 49.16 :
Dump : Address = 0x00007fbdaa7d2c90 : Number = 32 :: (little endian dump)
0x00007fbdaa7d2c90 :  01 00 00 00 00 00 00 00  02 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7d2ca0 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
 
just before : dlna4o.nodes [ 2 ] [ 1 ] 32 dump
Dump at : namespaces/test/arrayTest.csl : 49.16 :
Dump : Address = 0x00007fbdaa7d2ea0 : Number = 32 :: (little endian dump)
0x00007fbdaa7d2ea0 :  01 00 00 00 00 00 00 00  02 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7d2eb0 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
 
just before : dlna4o.nodes [ 3 ] [ 2 ] 32 dump
Dump at : namespaces/test/arrayTest.csl : 49.16 :
Dump : Address = 0x00007fbdaa7d30b0 : Number = 32 :: (little endian dump)
0x00007fbdaa7d30b0 :  01 00 00 00 00 00 00 00  02 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7d30c0 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
 
just before : dlna4o.nodes [ 3 ] [ 2 ] 32 dump
Dump at : namespaces/test/arrayTest.csl : 49.16 :
Dump : Address = 0x00007fbdaa7d30b0 : Number = 32 :: (little endian dump)
0x00007fbdaa7d30b0 :  b8 30 7d aa bd 7f 00 00  b0 30 7d aa bd 7f 00 00  .0}..... .0}..... 
0x00007fbdaa7d30c0 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
 dlna4o =  0x00007fbdaa7d2a90
 =============================
DLLNodeAlloc4.[34;49mtestna5[39;49m <:> csl compiled word
SourceCode for DLLNodeAlloc4.[34;49mtestna5[39;49m :> 
[34;49m: testna5 "\ntestna4 = " ps testna4 hp testna4.nodes [ 1 ] [ 0 ].AfterReference 1 = testna4.nodes [ 1 ] [ 0 ].BeforeReference 2 = testna4.nodes [ 1 ] [ 0 ] 32 dump testna4.nodes [ 2 ] [ 1 ].AfterReference 1 = testna4.nodes [ 2 ] [ 1 ].BeforeReference 2 = "\njust before : testna4.nodes [ 2 ] [ 1 ] 32 dump" ps testna4.nodes [ 2 ] [ 1 ] 32 dump testna4.nodes [ 3 ] [ 2 ].AfterReference 1 = testna4.nodes [ 3 ] [ 2 ].BeforeReference 2 = "\njust before : testna4.nodes [ 3 ] [ 2 ] 32 dump" ps testna4.nodes [ 3 ] [ 2 ] 32 dump testna4.nodes [ 3 ] [ 2 ].AfterReference testna4.nodes [ 3 ] [ 2 ].BeforeReference = testna4.nodes [ 3 ] [ 2 ].BeforeReference testna4.nodes [ 3 ] [ 2 ].AfterReference = "\njust before : testna4.nodes [ 3 ] [ 2 ] 32 dump" ps testna4.nodes [ 3 ] [ 2 ] 32 dump "testna4 = " ps testna4 hp ; [39;49m
Source code file location of [34;49mtestna5[39;49m : "namespaces/test/arrayTest.csl" : 50.2 :: we are now at : namespaces/test/arrayTest.csl : 69.21
Compiled with : optimizeOn, inlineOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xaad5ca3a -- code size = 705 bytes
TypeSignature : 
 -----------------------------
Word :: DLLNodeAlloc4.[34;49mtestna5[39;49m : definition = 0x00007fbdaad5ca3a : disassembly at namespaces/test/arrayTest.csl : 69.21 :
[34;49m ..                            : testna5  [39;49m[33;40m"[39;49m[34;49m\ntestna4 = " ps testna4 hp testna4.nodes [ 1 ] [ 0 ].AfterReference 1 = testna4.nodes [ 1 ] [ 0 ].B .. [39;49m[32;49m
0x7fbdaad5ca3a    48b8fee8bfaabd7f0000    mov rax, 0x7fbdaabfe8fe    	[32;49m< string : '[39;49m[39;49m\ntestna4 = [39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fbdaad5ca44    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5ca48    498906                  mov [r14], rax                                         [39;49m
[34;49m ..             : testna5  "\ntestna4 = " [39;49m[33;40mps[39;49m[34;49m testna4 hp testna4.nodes [ 1 ] [ 0 ].AfterReference 1 = testna4.nodes [ 1 ] [ 0 ].BeforeReference  .. [39;49m[32;49m
0x7fbdaad5ca4b    49b97d63d5aabd7f0000    mov r9, 0x7fbdaad5637d                                 [39;49m[32;49m
0x7fbdaad5ca55    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fbdaad5637d[32;49m >[39;49m[39;49m
[34;49m ..          : testna5  "\ntestna4 = " ps [39;49m[33;40mtestna4[39;49m[34;49m hp testna4.nodes [ 1 ] [ 0 ].AfterReference 1 = testna4.nodes [ 1 ] [ 0 ].BeforeReference 2 = .. [39;49m[32;49m
0x7fbdaad5ca58    48b8902a7daabd7f0000    mov rax, 0x7fbdaa7d2a90                                [39;49m[32;49m
0x7fbdaad5ca62    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fbdaad5ca69    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5ca6d    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  : testna5  "\ntestna4 = " ps testna4 [39;49m[33;40mhp[39;49m[34;49m testna4.nodes [ 1 ] [ 0 ].AfterReference 1 = testna4.nodes [ 1 ] [ 0 ].BeforeReference 2 = testna4 .. [39;49m[32;49m
0x7fbdaad5ca70    49b98764d5aabd7f0000    mov r9, 0x7fbdaad56487                                 [39;49m[32;49m
0x7fbdaad5ca7a    49ffd1                  call r9                    	< Int.[34;49mhp[39;49m : 0x00007fbdaad56487[32;49m >[39;49m[39;49m
[34;49m  : testna5  "\ntestna4 = " ps testna4 hp [39;49m[33;40mtestna4[39;49m[34;49m.nodes [ 1 ] [ 0 ].AfterReference 1 = testna4.nodes [ 1 ] [ 0 ].BeforeReference 2 = testna4.no .. [39;49m[32;49m
0x7fbdaad5ca7d    48b8902a7daabd7f0000    mov rax, 0x7fbdaa7d2a90                                [39;49m[32;49m
0x7fbdaad5ca87    4881c000020000          add rax, 0x200                                         [39;49m
[34;49m .. tna4.nodes [ 1 ] [ 0 ].AfterReference [39;49m[33;40m1[39;49m[34;49m = testna4.nodes [ 1 ] [ 0 ].BeforeReference 2 = testna4.nodes [ 1 ] [ 0 ] 32 dump testna4.nodes [ 2 .. [39;49m[32;49m
0x7fbdaad5ca8e    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m .. a4.nodes [ 1 ] [ 0 ].AfterReference 1 [39;49m[33;40m=[39;49m[34;49m testna4.nodes [ 1 ] [ 0 ].BeforeReference 2 = testna4.nodes [ 1 ] [ 0 ] 32 dump testna4.nodes [ 2 ] .. [39;49m[32;49m
0x7fbdaad5ca95    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. .nodes [ 1 ] [ 0 ].AfterReference 1 = [39;49m[33;40mtestna4[39;49m[34;49m.nodes [ 1 ] [ 0 ].BeforeReference 2 = testna4.nodes [ 1 ] [ 0 ] 32 dump testna4.nodes [ 2 ] [ .. [39;49m[32;49m
0x7fbdaad5ca98    48b8902a7daabd7f0000    mov rax, 0x7fbdaa7d2a90                                [39;49m
[34;49m .. ference 1 = testna4.nodes [ 1 ] [ 0 ].[39;49m[33;40mBeforeReference[39;49m[34;49m 2 = testna4.nodes [ 1 ] [ 0 ] 32 dump testna4.nodes [ 2 ] [ 1 ].AfterReference 1 = te .. [39;49m[32;49m
0x7fbdaad5caa2    4881c008020000          add rax, 0x208                                         [39;49m
[34;49m .. na4.nodes [ 1 ] [ 0 ].BeforeReference [39;49m[33;40m2[39;49m[34;49m = testna4.nodes [ 1 ] [ 0 ] 32 dump testna4.nodes [ 2 ] [ 1 ].AfterReference 1 = testna4.nodes [ 2  .. [39;49m[32;49m
0x7fbdaad5caa9    48c7c102000000          mov rcx, 0x2                                           [39;49m
[34;49m .. 4.nodes [ 1 ] [ 0 ].BeforeReference 2 [39;49m[33;40m=[39;49m[34;49m testna4.nodes [ 1 ] [ 0 ] 32 dump testna4.nodes [ 2 ] [ 1 ].AfterReference 1 = testna4.nodes [ 2 ]  .. [39;49m[32;49m
0x7fbdaad5cab0    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. nodes [ 1 ] [ 0 ].BeforeReference 2 = [39;49m[33;40mtestna4[39;49m[34;49m.nodes [ 1 ] [ 0 ] 32 dump testna4.nodes [ 2 ] [ 1 ].AfterReference 1 = testna4.nodes [ 2 ] [  .. [39;49m[32;49m
0x7fbdaad5cab3    48b8902a7daabd7f0000    mov rax, 0x7fbdaa7d2a90                                [39;49m[32;49m
0x7fbdaad5cabd    4881c000020000          add rax, 0x200                                         [39;49m[32;49m
0x7fbdaad5cac4    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5cac8    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ference 2 = testna4.nodes [ 1 ] [ 0 ] [39;49m[33;40m32[39;49m[34;49m dump testna4.nodes [ 2 ] [ 1 ].AfterReference 1 = testna4.nodes [ 2 ] [ 1 ].BeforeReference 2 = "\ .. [39;49m[32;49m
0x7fbdaad5cacb    48c7c020000000          mov rax, 0x20                                          [39;49m[32;49m
0x7fbdaad5cad2    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5cad6    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ence 2 = testna4.nodes [ 1 ] [ 0 ] 32 [39;49m[33;40mdump[39;49m[34;49m testna4.nodes [ 2 ] [ 1 ].AfterReference 1 = testna4.nodes [ 2 ] [ 1 ].BeforeReference 2 = "\nju .. [39;49m[32;49m
0x7fbdaad5cad9    49b830b43e1ebd550000    mov r8, 0x55bd1e3eb430                                 [39;49m[32;49m
0x7fbdaad5cae3    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaad5caed    49ffd1                  call r9                    	< Debug.[34;49mdump[39;49m : 0x000055bd1e3eb430[32;49m >[39;49m[39;49m
[34;49m .. 2 = testna4.nodes [ 1 ] [ 0 ] 32 dump [39;49m[33;40mtestna4[39;49m[34;49m.nodes [ 2 ] [ 1 ].AfterReference 1 = testna4.nodes [ 2 ] [ 1 ].BeforeReference 2 = "\njust be .. [39;49m[32;49m
0x7fbdaad5caf0    48b8902a7daabd7f0000    mov rax, 0x7fbdaa7d2a90                                [39;49m[32;49m
0x7fbdaad5cafa    4881c010040000          add rax, 0x410                                         [39;49m
[34;49m .. tna4.nodes [ 2 ] [ 1 ].AfterReference [39;49m[33;40m1[39;49m[34;49m = testna4.nodes [ 2 ] [ 1 ].BeforeReference 2 = "\njust before : testna4.nodes [ 2 ] [ 1 ] 32 dump" .. [39;49m[32;49m
0x7fbdaad5cb01    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m .. a4.nodes [ 2 ] [ 1 ].AfterReference 1 [39;49m[33;40m=[39;49m[34;49m testna4.nodes [ 2 ] [ 1 ].BeforeReference 2 = "\njust before : testna4.nodes [ 2 ] [ 1 ] 32 dump" p .. [39;49m[32;49m
0x7fbdaad5cb08    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. .nodes [ 2 ] [ 1 ].AfterReference 1 = [39;49m[33;40mtestna4[39;49m[34;49m.nodes [ 2 ] [ 1 ].BeforeReference 2 = "\njust before : testna4.nodes [ 2 ] [ 1 ] 32 dump" ps  .. [39;49m[32;49m
0x7fbdaad5cb0b    48b8902a7daabd7f0000    mov rax, 0x7fbdaa7d2a90                                [39;49m
[34;49m .. ference 1 = testna4.nodes [ 2 ] [ 1 ].[39;49m[33;40mBeforeReference[39;49m[34;49m 2 = "\njust before : testna4.nodes [ 2 ] [ 1 ] 32 dump" ps  testna4.nodes [ 2 ] [ 1 ] .. [39;49m[32;49m
0x7fbdaad5cb15    4881c018040000          add rax, 0x418                                         [39;49m
[34;49m .. na4.nodes [ 2 ] [ 1 ].BeforeReference [39;49m[33;40m2[39;49m[34;49m = "\njust before : testna4.nodes [ 2 ] [ 1 ] 32 dump" ps  testna4.nodes [ 2 ] [ 1 ] 32 dump testna4 .. [39;49m[32;49m
0x7fbdaad5cb1c    48c7c102000000          mov rcx, 0x2                                           [39;49m
[34;49m .. 4.nodes [ 2 ] [ 1 ].BeforeReference 2 [39;49m[33;40m=[39;49m[34;49m "\njust before : testna4.nodes [ 2 ] [ 1 ] 32 dump" ps  testna4.nodes [ 2 ] [ 1 ] 32 dump testna4.n .. [39;49m[32;49m
0x7fbdaad5cb23    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. nodes [ 2 ] [ 1 ].BeforeReference 2 = [39;49m[33;40m"[39;49m[34;49m\njust before : testna4.nodes [ 2 ] [ 1 ] 32 dump" ps  testna4.nodes [ 2 ] [ 1 ] 32 dump testna4.nod .. [39;49m[32;49m
0x7fbdaad5cb26    48b86ae9bfaabd7f0000    mov rax, 0x7fbdaabfe96a    	[32;49m< string : '[39;49m[39;49m\njust before : testna4.nodes [ 2 ] [ 1 ] 32 dump[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fbdaad5cb30    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5cb34    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  : testna4.nodes [ 2 ] [ 1 ] 32 dump" [39;49m[33;40mps[39;49m[34;49m  testna4.nodes [ 2 ] [ 1 ] 32 dump testna4.nodes [ 3 ] [ 2 ].AfterReference 1 = testna4.nodes [ 3  .. [39;49m[32;49m
0x7fbdaad5cb37    49b97d63d5aabd7f0000    mov r9, 0x7fbdaad5637d                                 [39;49m[32;49m
0x7fbdaad5cb41    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fbdaad5637d[32;49m >[39;49m[39;49m
[34;49m .. estna4.nodes [ 2 ] [ 1 ] 32 dump" ps  [39;49m[33;40mtestna4[39;49m[34;49m.nodes [ 2 ] [ 1 ] 32 dump testna4.nodes [ 3 ] [ 2 ].AfterReference 1 = testna4.nodes [ 3 ] [  .. [39;49m[32;49m
0x7fbdaad5cb44    48b8902a7daabd7f0000    mov rax, 0x7fbdaa7d2a90                                [39;49m[32;49m
0x7fbdaad5cb4e    4881c010040000          add rax, 0x410                                         [39;49m[32;49m
0x7fbdaad5cb55    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5cb59    498906                  mov [r14], rax                                         [39;49m
[34;49m .. 2 dump" ps  testna4.nodes [ 2 ] [ 1 ] [39;49m[33;40m32[39;49m[34;49m dump testna4.nodes [ 3 ] [ 2 ].AfterReference 1 = testna4.nodes [ 3 ] [ 2 ].BeforeReference 2 = "\ .. [39;49m[32;49m
0x7fbdaad5cb5c    48c7c020000000          mov rax, 0x20                                          [39;49m[32;49m
0x7fbdaad5cb63    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5cb67    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ump" ps  testna4.nodes [ 2 ] [ 1 ] 32 [39;49m[33;40mdump[39;49m[34;49m testna4.nodes [ 3 ] [ 2 ].AfterReference 1 = testna4.nodes [ 3 ] [ 2 ].BeforeReference 2 = "\nju .. [39;49m[32;49m
0x7fbdaad5cb6a    49b830b43e1ebd550000    mov r8, 0x55bd1e3eb430                                 [39;49m[32;49m
0x7fbdaad5cb74    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaad5cb7e    49ffd1                  call r9                    	< Debug.[34;49mdump[39;49m : 0x000055bd1e3eb430[32;49m >[39;49m[39;49m
[34;49m .. ps  testna4.nodes [ 2 ] [ 1 ] 32 dump [39;49m[33;40mtestna4[39;49m[34;49m.nodes [ 3 ] [ 2 ].AfterReference 1 = testna4.nodes [ 3 ] [ 2 ].BeforeReference 2 = "\njust be .. [39;49m[32;49m
0x7fbdaad5cb81    48b8902a7daabd7f0000    mov rax, 0x7fbdaa7d2a90                                [39;49m[32;49m
0x7fbdaad5cb8b    4881c020060000          add rax, 0x620                                         [39;49m
[34;49m .. tna4.nodes [ 3 ] [ 2 ].AfterReference [39;49m[33;40m1[39;49m[34;49m = testna4.nodes [ 3 ] [ 2 ].BeforeReference 2 = "\njust before : testna4.nodes [ 3 ] [ 2 ] 32 dump" .. [39;49m[32;49m
0x7fbdaad5cb92    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m .. a4.nodes [ 3 ] [ 2 ].AfterReference 1 [39;49m[33;40m=[39;49m[34;49m testna4.nodes [ 3 ] [ 2 ].BeforeReference 2 = "\njust before : testna4.nodes [ 3 ] [ 2 ] 32 dump" p .. [39;49m[32;49m
0x7fbdaad5cb99    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. .nodes [ 3 ] [ 2 ].AfterReference 1 = [39;49m[33;40mtestna4[39;49m[34;49m.nodes [ 3 ] [ 2 ].BeforeReference 2 = "\njust before : testna4.nodes [ 3 ] [ 2 ] 32 dump" ps  .. [39;49m[32;49m
0x7fbdaad5cb9c    48b8902a7daabd7f0000    mov rax, 0x7fbdaa7d2a90                                [39;49m
[34;49m .. ference 1 = testna4.nodes [ 3 ] [ 2 ].[39;49m[33;40mBeforeReference[39;49m[34;49m 2 = "\njust before : testna4.nodes [ 3 ] [ 2 ] 32 dump" ps  testna4.nodes [ 3 ] [ 2 ] .. [39;49m[32;49m
0x7fbdaad5cba6    4881c028060000          add rax, 0x628                                         [39;49m
[34;49m .. na4.nodes [ 3 ] [ 2 ].BeforeReference [39;49m[33;40m2[39;49m[34;49m = "\njust before : testna4.nodes [ 3 ] [ 2 ] 32 dump" ps  testna4.nodes [ 3 ] [ 2 ] 32 dump testna4 .. [39;49m[32;49m
0x7fbdaad5cbad    48c7c102000000          mov rcx, 0x2                                           [39;49m
[34;49m .. 4.nodes [ 3 ] [ 2 ].BeforeReference 2 [39;49m[33;40m=[39;49m[34;49m "\njust before : testna4.nodes [ 3 ] [ 2 ] 32 dump" ps  testna4.nodes [ 3 ] [ 2 ] 32 dump testna4.n .. [39;49m[32;49m
0x7fbdaad5cbb4    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. nodes [ 3 ] [ 2 ].BeforeReference 2 = [39;49m[33;40m"[39;49m[34;49m\njust before : testna4.nodes [ 3 ] [ 2 ] 32 dump" ps  testna4.nodes [ 3 ] [ 2 ] 32 dump testna4.nod .. [39;49m[32;49m
0x7fbdaad5cbb7    48b814eabfaabd7f0000    mov rax, 0x7fbdaabfea14    	[32;49m< string : '[39;49m[39;49m\njust before : testna4.nodes [ 3 ] [ 2 ] 32 dump[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fbdaad5cbc1    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5cbc5    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  : testna4.nodes [ 3 ] [ 2 ] 32 dump" [39;49m[33;40mps[39;49m[34;49m  testna4.nodes [ 3 ] [ 2 ] 32 dump testna4.nodes [ 3 ] [ 2 ].AfterReference testna4.nodes [ 3 ] [  .. [39;49m[32;49m
0x7fbdaad5cbc8    49b97d63d5aabd7f0000    mov r9, 0x7fbdaad5637d                                 [39;49m[32;49m
0x7fbdaad5cbd2    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fbdaad5637d[32;49m >[39;49m[39;49m
[34;49m .. estna4.nodes [ 3 ] [ 2 ] 32 dump" ps  [39;49m[33;40mtestna4[39;49m[34;49m.nodes [ 3 ] [ 2 ] 32 dump testna4.nodes [ 3 ] [ 2 ].AfterReference testna4.nodes [ 3 ] [ 2 ]. .. [39;49m[32;49m
0x7fbdaad5cbd5    48b8902a7daabd7f0000    mov rax, 0x7fbdaa7d2a90                                [39;49m[32;49m
0x7fbdaad5cbdf    4881c020060000          add rax, 0x620                                         [39;49m[32;49m
0x7fbdaad5cbe6    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5cbea    498906                  mov [r14], rax                                         [39;49m
[34;49m .. 2 dump" ps  testna4.nodes [ 3 ] [ 2 ] [39;49m[33;40m32[39;49m[34;49m dump testna4.nodes [ 3 ] [ 2 ].AfterReference testna4.nodes [ 3 ] [ 2 ].BeforeReference = testna4. .. [39;49m[32;49m
0x7fbdaad5cbed    48c7c020000000          mov rax, 0x20                                          [39;49m[32;49m
0x7fbdaad5cbf4    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5cbf8    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ump" ps  testna4.nodes [ 3 ] [ 2 ] 32 [39;49m[33;40mdump[39;49m[34;49m testna4.nodes [ 3 ] [ 2 ].AfterReference testna4.nodes [ 3 ] [ 2 ].BeforeReference = testna4.nod .. [39;49m[32;49m
0x7fbdaad5cbfb    49b830b43e1ebd550000    mov r8, 0x55bd1e3eb430                                 [39;49m[32;49m
0x7fbdaad5cc05    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaad5cc0f    49ffd1                  call r9                    	< Debug.[34;49mdump[39;49m : 0x000055bd1e3eb430[32;49m >[39;49m[39;49m
[34;49m .. ps  testna4.nodes [ 3 ] [ 2 ] 32 dump [39;49m[33;40mtestna4[39;49m[34;49m.nodes [ 3 ] [ 2 ].AfterReference testna4.nodes [ 3 ] [ 2 ].BeforeReference = testna4.nodes [  .. [39;49m[32;49m
0x7fbdaad5cc12    48b8902a7daabd7f0000    mov rax, 0x7fbdaa7d2a90                                [39;49m[32;49m
0x7fbdaad5cc1c    4881c020060000          add rax, 0x620                                         [39;49m
[34;49m .. tna4.nodes [ 3 ] [ 2 ].AfterReference [39;49m[33;40mtestna4[39;49m[34;49m.nodes [ 3 ] [ 2 ].BeforeReference = testna4.nodes [ 3 ] [ 2 ].BeforeReference testna4.nodes [ .. [39;49m[32;49m
0x7fbdaad5cc23    48b9902a7daabd7f0000    mov rcx, 0x7fbdaa7d2a90                                [39;49m[32;49m
0x7fbdaad5cc2d    4881c128060000          add rcx, 0x628                                         [39;49m
[34;49m .. na4.nodes [ 3 ] [ 2 ].BeforeReference [39;49m[33;40m=[39;49m[34;49m testna4.nodes [ 3 ] [ 2 ].BeforeReference testna4.nodes [ 3 ] [ 2 ].AfterReference = "\njust before .. [39;49m[32;49m
0x7fbdaad5cc34    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. 4.nodes [ 3 ] [ 2 ].BeforeReference = [39;49m[33;40mtestna4[39;49m[34;49m.nodes [ 3 ] [ 2 ].BeforeReference testna4.nodes [ 3 ] [ 2 ].AfterReference = "\njust before : .. [39;49m[32;49m
0x7fbdaad5cc37    48b8902a7daabd7f0000    mov rax, 0x7fbdaa7d2a90                                [39;49m
[34;49m .. Reference = testna4.nodes [ 3 ] [ 2 ].[39;49m[33;40mBeforeReference[39;49m[34;49m testna4.nodes [ 3 ] [ 2 ].AfterReference = "\njust before : testna4.nodes [ 3 ] [ 2 ] .. [39;49m[32;49m
0x7fbdaad5cc41    4881c028060000          add rax, 0x628                                         [39;49m
[34;49m .. na4.nodes [ 3 ] [ 2 ].BeforeReference [39;49m[33;40mtestna4[39;49m[34;49m.nodes [ 3 ] [ 2 ].AfterReference = "\njust before : testna4.nodes [ 3 ] [ 2 ] 32 dump" ps  te .. [39;49m[32;49m
0x7fbdaad5cc48    48b9902a7daabd7f0000    mov rcx, 0x7fbdaa7d2a90                                [39;49m[32;49m
0x7fbdaad5cc52    4881c120060000          add rcx, 0x620                                         [39;49m
[34;49m .. tna4.nodes [ 3 ] [ 2 ].AfterReference [39;49m[33;40m=[39;49m[34;49m "\njust before : testna4.nodes [ 3 ] [ 2 ] 32 dump" ps  testna4.nodes [ 3 ] [ 2 ] 32 dump "testna4  .. [39;49m[32;49m
0x7fbdaad5cc59    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. a4.nodes [ 3 ] [ 2 ].AfterReference = [39;49m[33;40m"[39;49m[34;49m\njust before : testna4.nodes [ 3 ] [ 2 ] 32 dump" ps  testna4.nodes [ 3 ] [ 2 ] 32 dump "testna4 =  .. [39;49m[32;49m
0x7fbdaad5cc5c    48b8c2eabfaabd7f0000    mov rax, 0x7fbdaabfeac2    	[32;49m< string : '[39;49m[39;49m\njust before : testna4.nodes [ 3 ] [ 2 ] 32 dump[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fbdaad5cc66    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5cc6a    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  : testna4.nodes [ 3 ] [ 2 ] 32 dump" [39;49m[33;40mps[39;49m[34;49m  testna4.nodes [ 3 ] [ 2 ] 32 dump "testna4 = " ps testna4 hp ;  .. [39;49m[32;49m
0x7fbdaad5cc6d    49b97d63d5aabd7f0000    mov r9, 0x7fbdaad5637d                                 [39;49m[32;49m
0x7fbdaad5cc77    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fbdaad5637d[32;49m >[39;49m[39;49m
[34;49m .. estna4.nodes [ 3 ] [ 2 ] 32 dump" ps  [39;49m[33;40mtestna4[39;49m[34;49m.nodes [ 3 ] [ 2 ] 32 dump "testna4 = " ps testna4 hp ;  .. [39;49m[32;49m
0x7fbdaad5cc7a    48b8902a7daabd7f0000    mov rax, 0x7fbdaa7d2a90                                [39;49m[32;49m
0x7fbdaad5cc84    4881c020060000          add rax, 0x620                                         [39;49m[32;49m
0x7fbdaad5cc8b    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5cc8f    498906                  mov [r14], rax                                         [39;49m
[34;49m .. 2 dump" ps  testna4.nodes [ 3 ] [ 2 ] [39;49m[33;40m32[39;49m[34;49m dump "testna4 = " ps testna4 hp ;  .. [39;49m[32;49m
0x7fbdaad5cc92    48c7c020000000          mov rax, 0x20                                          [39;49m[32;49m
0x7fbdaad5cc99    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5cc9d    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ump" ps  testna4.nodes [ 3 ] [ 2 ] 32 [39;49m[33;40mdump[39;49m[34;49m "testna4 = " ps testna4 hp ;  .. [39;49m[32;49m
0x7fbdaad5cca0    49b830b43e1ebd550000    mov r8, 0x55bd1e3eb430                                 [39;49m[32;49m
0x7fbdaad5ccaa    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaad5ccb4    49ffd1                  call r9                    	< Debug.[34;49mdump[39;49m : 0x000055bd1e3eb430[32;49m >[39;49m[39;49m
[34;49m .. ps  testna4.nodes [ 3 ] [ 2 ] 32 dump [39;49m[33;40m"[39;49m[34;49mtestna4 = " ps testna4 hp ;  .. [39;49m[32;49m
0x7fbdaad5ccb7    48b83aebbfaabd7f0000    mov rax, 0x7fbdaabfeb3a    	[32;49m< string : '[39;49m[39;49mtestna4 = [39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fbdaad5ccc1    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5ccc5    498906                  mov [r14], rax                                         [39;49m
[34;49m .. odes [ 3 ] [ 2 ] 32 dump "testna4 = " [39;49m[33;40mps[39;49m[34;49m testna4 hp ;  .. [39;49m[32;49m
0x7fbdaad5ccc8    49b97d63d5aabd7f0000    mov r9, 0x7fbdaad5637d                                 [39;49m[32;49m
0x7fbdaad5ccd2    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fbdaad5637d[32;49m >[39;49m[39;49m
[34;49m .. s [ 3 ] [ 2 ] 32 dump "testna4 = " ps [39;49m[33;40mtestna4[39;49m[34;49m hp ;  .. [39;49m[32;49m
0x7fbdaad5ccd5    48b8902a7daabd7f0000    mov rax, 0x7fbdaa7d2a90                                [39;49m[32;49m
0x7fbdaad5ccdf    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fbdaad5cce6    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5ccea    498906                  mov [r14], rax                                         [39;49m
[34;49m .. [ 2 ] 32 dump "testna4 = " ps testna4 [39;49m[33;40mhp[39;49m[34;49m ;  .. [39;49m[32;49m
0x7fbdaad5cced    49b98764d5aabd7f0000    mov r9, 0x7fbdaad56487                                 [39;49m[32;49m
0x7fbdaad5ccf7    49ffd1                  call r9                    	< Int.[34;49mhp[39;49m : 0x00007fbdaad56487[32;49m >[39;49m[39;49m
[34;49m ..  ] 32 dump "testna4 = " ps testna4 hp [39;49m[33;40m;[39;49m[34;49m  .. [39;49m[32;49m
0x7fbdaad5ccfa    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'testna5' :: codeSize = 704
Word : 0x00007fbdaa94a5d0 :: Compiled at : 0x00007fbdaad5ca3a
 =============================
::> 'wdiss' was called at namespaces/test/arrayTest.csl 69.21 <::
 
testna4 =  0x00007fbdaa7d2a90
Dump at : namespaces/test/arrayTest.csl : 71.8 :
Dump : Address = 0x00007fbdaa7d2c90 : Number = 32 :: (little endian dump)
0x00007fbdaa7d2c90 :  01 00 00 00 00 00 00 00  02 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7d2ca0 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
 
just before : testna4.nodes [ 2 ] [ 1 ] 32 dump
Dump at : namespaces/test/arrayTest.csl : 71.8 :
Dump : Address = 0x00007fbdaa7d2ea0 : Number = 32 :: (little endian dump)
0x00007fbdaa7d2ea0 :  01 00 00 00 00 00 00 00  02 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7d2eb0 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
 
just before : testna4.nodes [ 3 ] [ 2 ] 32 dump
Dump at : namespaces/test/arrayTest.csl : 71.8 :
Dump : Address = 0x00007fbdaa7d30b0 : Number = 32 :: (little endian dump)
0x00007fbdaa7d30b0 :  01 00 00 00 00 00 00 00  02 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7d30c0 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
 
just before : testna4.nodes [ 3 ] [ 2 ] 32 dump
Dump at : namespaces/test/arrayTest.csl : 71.8 :
Dump : Address = 0x00007fbdaa7d30b0 : Number = 32 :: (little endian dump)
0x00007fbdaa7d30b0 :  b8 30 7d aa bd 7f 00 00  b0 30 7d aa bd 7f 00 00  .0}..... .0}..... 
0x00007fbdaa7d30c0 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
 testna4 =  0x00007fbdaa7d2a90 
testna4 =  0x00007fbdaa7d2a90
 =============================
DLLNodeAlloc.[34;49mtna[39;49m <:> csl compiled word
SourceCode for DLLNodeAlloc.[34;49mtna[39;49m :> 
[34;49m: tna testnarr2.nodes [ 1 ] 32 dump testnarr2.nodes [ 1 ].AfterReference 1 = testnarr2.nodes [ 1 ]. BeforeReference 2 = testnarr2.nodes [ 1 ] 32 dump ; [39;49m
Source code file location of [34;49mtna[39;49m : "namespaces/test/arrayTest.csl" : 78.2 :: we are now at : namespaces/test/arrayTest.csl : 84.17
Compiled with : optimizeOn, inlineOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xaad5cd0f -- code size = 177 bytes
TypeSignature : 
 -----------------------------
Word :: DLLNodeAlloc.[34;49mtna[39;49m : definition = 0x00007fbdaad5cd0f : disassembly at namespaces/test/arrayTest.csl : 84.17 :
[34;49m ..                                 : tna [39;49m[33;40mtestnarr2[39;49m[34;49m.nodes [ 1 ] 32 dump  testnarr2.nodes [ 1 ].AfterReference 1 =  testnarr2.nodes [ 1 ]. Befor .. [39;49m[32;49m
0x7fbdaad5cd0f    48b8d89e7daabd7f0000    mov rax, 0x7fbdaa7d9ed8                                [39;49m[32;49m
0x7fbdaad5cd19    4881c010000000          add rax, 0x10                                          [39;49m[32;49m
0x7fbdaad5cd20    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5cd24    498906                  mov [r14], rax                                         [39;49m
[34;49m ..           : tna testnarr2.nodes [ 1 ] [39;49m[33;40m32[39;49m[34;49m dump  testnarr2.nodes [ 1 ].AfterReference 1 =  testnarr2.nodes [ 1 ]. BeforeReference 2 =  testna .. [39;49m[32;49m
0x7fbdaad5cd27    48c7c020000000          mov rax, 0x20                                          [39;49m[32;49m
0x7fbdaad5cd2e    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5cd32    498906                  mov [r14], rax                                         [39;49m
[34;49m ..        : tna testnarr2.nodes [ 1 ] 32 [39;49m[33;40mdump[39;49m[34;49m  testnarr2.nodes [ 1 ].AfterReference 1 =  testnarr2.nodes [ 1 ]. BeforeReference 2 =  testnarr2 .. [39;49m[32;49m
0x7fbdaad5cd35    49b830b43e1ebd550000    mov r8, 0x55bd1e3eb430                                 [39;49m[32;49m
0x7fbdaad5cd3f    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaad5cd49    49ffd1                  call r9                    	< Debug.[34;49mdump[39;49m : 0x000055bd1e3eb430[32;49m >[39;49m[39;49m
[34;49m ..  : tna testnarr2.nodes [ 1 ] 32 dump  [39;49m[33;40mtestnarr2[39;49m[34;49m.nodes [ 1 ].AfterReference 1 =  testnarr2.nodes [ 1 ]. BeforeReference 2 =  testnarr2.nodes .. [39;49m[32;49m
0x7fbdaad5cd4c    48b8d89e7daabd7f0000    mov rax, 0x7fbdaa7d9ed8                                [39;49m[32;49m
0x7fbdaad5cd56    4881c010000000          add rax, 0x10                                          [39;49m
[34;49m ..  testnarr2.nodes [ 1 ].AfterReference [39;49m[33;40m1[39;49m[34;49m =  testnarr2.nodes [ 1 ]. BeforeReference 2 =  testnarr2.nodes [ 1 ] 32 dump  ;  .. [39;49m[32;49m
0x7fbdaad5cd5d    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m .. estnarr2.nodes [ 1 ].AfterReference 1 [39;49m[33;40m=[39;49m[34;49m  testnarr2.nodes [ 1 ]. BeforeReference 2 =  testnarr2.nodes [ 1 ] 32 dump  ;  .. [39;49m[32;49m
0x7fbdaad5cd64    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. narr2.nodes [ 1 ].AfterReference 1 =  [39;49m[33;40mtestnarr2[39;49m[34;49m.nodes [ 1 ]. BeforeReference 2 =  testnarr2.nodes [ 1 ] 32 dump  ;  .. [39;49m[32;49m
0x7fbdaad5cd67    48b8d89e7daabd7f0000    mov rax, 0x7fbdaa7d9ed8                                [39;49m
[34;49m .. Reference 1 =  testnarr2.nodes [ 1 ]. [39;49m[33;40mBeforeReference[39;49m[34;49m 2 =  testnarr2.nodes [ 1 ] 32 dump  ;  .. [39;49m[32;49m
0x7fbdaad5cd71    4881c018000000          add rax, 0x18                                          [39;49m
[34;49m .. estnarr2.nodes [ 1 ]. BeforeReference [39;49m[33;40m2[39;49m[34;49m =  testnarr2.nodes [ 1 ] 32 dump  ;  .. [39;49m[32;49m
0x7fbdaad5cd78    48c7c102000000          mov rcx, 0x2                                           [39;49m
[34;49m .. tnarr2.nodes [ 1 ]. BeforeReference 2 [39;49m[33;40m=[39;49m[34;49m  testnarr2.nodes [ 1 ] 32 dump  ;  .. [39;49m[32;49m
0x7fbdaad5cd7f    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. rr2.nodes [ 1 ]. BeforeReference 2 =  [39;49m[33;40mtestnarr2[39;49m[34;49m.nodes [ 1 ] 32 dump  ;  .. [39;49m[32;49m
0x7fbdaad5cd82    48b8d89e7daabd7f0000    mov rax, 0x7fbdaa7d9ed8                                [39;49m[32;49m
0x7fbdaad5cd8c    4881c010000000          add rax, 0x10                                          [39;49m[32;49m
0x7fbdaad5cd93    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5cd97    498906                  mov [r14], rax                                         [39;49m
[34;49m .. eReference 2 =  testnarr2.nodes [ 1 ] [39;49m[33;40m32[39;49m[34;49m dump  ;  .. [39;49m[32;49m
0x7fbdaad5cd9a    48c7c020000000          mov rax, 0x20                                          [39;49m[32;49m
0x7fbdaad5cda1    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5cda5    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ference 2 =  testnarr2.nodes [ 1 ] 32 [39;49m[33;40mdump[39;49m[34;49m  ;  .. [39;49m[32;49m
0x7fbdaad5cda8    49b830b43e1ebd550000    mov r8, 0x55bd1e3eb430                                 [39;49m[32;49m
0x7fbdaad5cdb2    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaad5cdbc    49ffd1                  call r9                    	< Debug.[34;49mdump[39;49m : 0x000055bd1e3eb430[32;49m >[39;49m[39;49m
[34;49m .. e 2 =  testnarr2.nodes [ 1 ] 32 dump  [39;49m[33;40m;[39;49m[34;49m  .. [39;49m[32;49m
0x7fbdaad5cdbf    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'tna' :: codeSize = 176
Word : 0x00007fbdaa954e78 :: Compiled at : 0x00007fbdaad5cd0f
 =============================
::> 'wdiss' was called at namespaces/test/arrayTest.csl 84.17 <::

Dump at : namespaces/test/arrayTest.csl : 85.4 :
Dump : Address = 0x00007fbdaa7d9ee8 : Number = 32 :: (little endian dump)
0x00007fbdaa7d9ee8 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7d9ef8 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 

Dump at : namespaces/test/arrayTest.csl : 85.4 :
Dump : Address = 0x00007fbdaa7d9ee8 : Number = 32 :: (little endian dump)
0x00007fbdaa7d9ee8 :  01 00 00 00 00 00 00 00  02 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7d9ef8 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
 tnarr2a

Dump at : namespaces/test/arrayTest.csl : 107.15 :
Dump : Address = 0x00007fbdaa7db730 : Number = 512 :: (little endian dump)
0x00007fbdaa7db730 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7db740 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7db750 :  01 00 00 00 00 00 00 00  02 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7db760 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7db770 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7db780 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7db790 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7db7a0 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7db7b0 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7db7c0 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7db7d0 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7db7e0 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7db7f0 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7db800 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7db810 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7db820 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7db830 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7db840 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7db850 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7db860 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7db870 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7db880 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7db890 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7db8a0 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7db8b0 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7db8c0 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7db8d0 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7db8e0 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7db8f0 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7db900 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7db910 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7db920 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 

 =============================
DLLNodeAlloc.[34;49mtna3[39;49m <:> csl compiled word
SourceCode for DLLNodeAlloc.[34;49mtna3[39;49m :> 
[34;49m: tna3 ( this ) "tna3" ps this.nodes [ 2 ].AfterReference 1 = this.nodes [ 2 ].BeforeReference 2 = this this.size @ dump ; [39;49m
Source code file location of [34;49mtna3[39;49m : "namespaces/test/arrayTest.csl" : 111.2 :: we are now at : namespaces/test/arrayTest.csl : 121.9
Compiled with : optimizeOn, inlineOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xaad5cf9e -- code size = 179 bytes
TypeSignature : 
 -----------------------------
Word :: DLLNodeAlloc.[34;49mtna3[39;49m : definition = 0x00007fbdaad5cf9e : disassembly at namespaces/test/arrayTest.csl : 121.9 :
[34;49m ..                                     : [39;49m[33;40mtna3[39;49m[34;49m ( this ) "tna3" ps  this.nodes [ 2 ].AfterReference 1 =  this.nodes [ 2 ].BeforeReference 2 =  t .. [39;49m[32;49m
0x7fbdaad5cf9e    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fbdaad5cfa2    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaad5cfa6    4981c608000000          add r14, 0x8                                           [39;49m
[34;49m ..                       : tna3 ( this ) [39;49m[33;40m"[39;49m[34;49mtna3" ps  this.nodes [ 2 ].AfterReference 1 =  this.nodes [ 2 ].BeforeReference 2 =  this this.size  .. [39;49m[32;49m
0x7fbdaad5cfad    48b86cf1bfaabd7f0000    mov rax, 0x7fbdaabff16c    	[32;49m< string : '[39;49m[39;49mtna3[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fbdaad5cfb7    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5cfbb    498906                  mov [r14], rax                                         [39;49m
[34;49m ..                : tna3 ( this ) "tna3" [39;49m[33;40mps[39;49m[34;49m  this.nodes [ 2 ].AfterReference 1 =  this.nodes [ 2 ].BeforeReference 2 =  this this.size @ dump  .. [39;49m[32;49m
0x7fbdaad5cfbe    49b97d63d5aabd7f0000    mov r9, 0x7fbdaad5637d                                 [39;49m[32;49m
0x7fbdaad5cfc8    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fbdaad5637d[32;49m >[39;49m[39;49m
[34;49m ..            : tna3 ( this ) "tna3" ps  [39;49m[33;40mthis[39;49m[34;49m.nodes [ 2 ].AfterReference 1 =  this.nodes [ 2 ].BeforeReference 2 =  this this.size @ dump ;  .. [39;49m[32;49m
0x7fbdaad5cfcb    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5cfcf    4881c020000000          add rax, 0x20                                          [39;49m
[34;49m .. " ps  this.nodes [ 2 ].AfterReference [39;49m[33;40m1[39;49m[34;49m =  this.nodes [ 2 ].BeforeReference 2 =  this this.size @ dump ; [39;49m[32;49m
0x7fbdaad5cfd6    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m .. ps  this.nodes [ 2 ].AfterReference 1 [39;49m[33;40m=[39;49m[34;49m  this.nodes [ 2 ].BeforeReference 2 =  this this.size @ dump ; [39;49m[32;49m
0x7fbdaad5cfdd    488908                  mov [rax], rcx                                         [39;49m
[34;49m ..  this.nodes [ 2 ].AfterReference 1 =  [39;49m[33;40mthis[39;49m[34;49m.nodes [ 2 ].BeforeReference 2 =  this this.size @ dump ; [39;49m[32;49m
0x7fbdaad5cfe0    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. .AfterReference 1 =  this.nodes [ 2 ].[39;49m[33;40mBeforeReference[39;49m[34;49m 2 =  this this.size @ dump ; [39;49m[32;49m
0x7fbdaad5cfe4    4881c028000000          add rax, 0x28                                          [39;49m
[34;49m .. 1 =  this.nodes [ 2 ].BeforeReference [39;49m[33;40m2[39;49m[34;49m =  this this.size @ dump ; [39;49m[32;49m
0x7fbdaad5cfeb    48c7c102000000          mov rcx, 0x2                                           [39;49m
[34;49m .. =  this.nodes [ 2 ].BeforeReference 2 [39;49m[33;40m=[39;49m[34;49m  this this.size @ dump ; [39;49m[32;49m
0x7fbdaad5cff2    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. this.nodes [ 2 ].BeforeReference 2 =  [39;49m[33;40mthis[39;49m[34;49m this.size @ dump ; [39;49m[32;49m
0x7fbdaad5cff5    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5cff9    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fbdaad5d000    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5d004    498906                  mov [r14], rax                                         [39;49m
[34;49m .. nodes [ 2 ].BeforeReference 2 =  this [39;49m[33;40mthis[39;49m[34;49m.size @ dump ; [39;49m[32;49m
0x7fbdaad5d007    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5d00b    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fbdaad5d012    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5d016    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  [ 2 ].BeforeReference 2 =  this this.[39;49m[33;40msize[39;49m[34;49m @ dump ; [39;49m[32;49m
0x7fbdaad5d019    48b848e693aabd7f0000    mov rax, 0x7fbdaa93e648                                [39;49m[32;49m
0x7fbdaad5d023    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fbdaad5d026    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5d02a    498906                  mov [r14], rax                                         [39;49m
[34;49m .. BeforeReference 2 =  this this.size @ [39;49m[33;40mdump[39;49m[34;49m ; [39;49m[32;49m
0x7fbdaad5d02d    49b830b43e1ebd550000    mov r8, 0x55bd1e3eb430                                 [39;49m[32;49m
0x7fbdaad5d037    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaad5d041    49ffd1                  call r9                    	< Debug.[34;49mdump[39;49m : 0x000055bd1e3eb430[32;49m >[39;49m[39;49m
[34;49m .. eReference 2 =  this this.size @ dump [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fbdaad5d044    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5d048    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaad5d04c    4983ee08                sub r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5d050    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'tna3' :: codeSize = 178
Word : 0x00007fbdaa95b868 :: Compiled at : 0x00007fbdaad5cf9e
 =============================
::> 'wdiss' was called at namespaces/test/arrayTest.csl 121.9 <::
 tna3
Dump at : namespaces/test/arrayTest.csl : 122.12 :
Dump : Address = 0x00007fbdaa7dc538 : Number = 512 :: (little endian dump)
0x00007fbdaa7dc538 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7dc548 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7dc558 :  01 00 00 00 00 00 00 00  02 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7dc568 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7dc578 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7dc588 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7dc598 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7dc5a8 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7dc5b8 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7dc5c8 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7dc5d8 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7dc5e8 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7dc5f8 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7dc608 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7dc618 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7dc628 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7dc638 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7dc648 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7dc658 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7dc668 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7dc678 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7dc688 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7dc698 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7dc6a8 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7dc6b8 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7dc6c8 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7dc6d8 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7dc6e8 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7dc6f8 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7dc708 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7dc718 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7dc728 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
 0x00007fbdaa7dc538 tnarr2

 0x00007fbdaa7dc538

Dump at : namespaces/test/arrayTest.csl : 125.14 :
Dump : Address = 0x00007fbdaa7dc538 : Number = 512 :: (little endian dump)
0x00007fbdaa7dc538 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7dc548 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7dc558 :  01 00 00 00 00 00 00 00  02 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7dc568 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7dc578 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7dc588 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7dc598 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7dc5a8 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7dc5b8 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7dc5c8 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7dc5d8 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7dc5e8 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7dc5f8 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7dc608 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7dc618 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7dc628 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7dc638 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7dc648 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7dc658 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7dc668 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7dc678 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7dc688 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7dc698 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7dc6a8 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7dc6b8 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7dc6c8 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7dc6d8 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7dc6e8 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7dc6f8 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7dc708 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7dc718 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7dc728 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 

 =============================
DLLNodeAlloc.[34;49mtnax1[39;49m <:> csl compiled word
SourceCode for DLLNodeAlloc.[34;49mtnax1[39;49m :> 
[34;49m: tnax1 ( this ) this nl hp nl this.nodes[3].AfterReference 1 = this.nodes[4].BeforeReference 2 = this.nodes[3] hp this.nodes[3].AfterReference dup hp 16 dump this.nodes[4] hp this.nodes[4].BeforeReference dup hp 16 dump ; [39;49m
Source code file location of [34;49mtnax1[39;49m : "namespaces/test/arrayTest.csl" : 127.2 :: we are now at : namespaces/test/arrayTest.csl : 136.19
Compiled with : optimizeOn, inlineOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xaad5d056 -- code size = 353 bytes
TypeSignature : 
 -----------------------------
Word :: DLLNodeAlloc.[34;49mtnax1[39;49m : definition = 0x00007fbdaad5d056 : disassembly at namespaces/test/arrayTest.csl : 136.19 :
[34;49m ..                                     : [39;49m[33;40mtnax1[39;49m[34;49m ( this ) this nl hp nl  this.nodes[3].AfterReference 1 =  this.nodes[4].BeforeReference 2 =  th .. [39;49m[32;49m
0x7fbdaad5d056    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fbdaad5d05a    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaad5d05e    4981c608000000          add r14, 0x8                                           [39;49m
[34;49m ..                      : tnax1 ( this ) [39;49m[33;40mthis[39;49m[34;49m nl hp nl  this.nodes[3].AfterReference 1 =  this.nodes[4].BeforeReference 2 =  this.nodes[3] hp  .. [39;49m[32;49m
0x7fbdaad5d065    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5d069    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fbdaad5d070    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5d074    498906                  mov [r14], rax                                         [39;49m
[34;49m ..                 : tnax1 ( this ) this [39;49m[33;40mnl[39;49m[34;49m hp nl  this.nodes[3].AfterReference 1 =  this.nodes[4].BeforeReference 2 =  this.nodes[3] hp   thi .. [39;49m[32;49m
0x7fbdaad5d077    49b8e0903e1ebd550000    mov r8, 0x55bd1e3e90e0                                 [39;49m[32;49m
0x7fbdaad5d081    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaad5d08b    49ffd1                  call r9                    	< Io.[34;49mnewline[39;49m : 0x000055bd1e3e90e0[32;49m >[39;49m[39;49m
[34;49m ..              : tnax1 ( this ) this nl [39;49m[33;40mhp[39;49m[34;49m nl  this.nodes[3].AfterReference 1 =  this.nodes[4].BeforeReference 2 =  this.nodes[3] hp   this.n .. [39;49m[32;49m
0x7fbdaad5d08e    49b98764d5aabd7f0000    mov r9, 0x7fbdaad56487                                 [39;49m[32;49m
0x7fbdaad5d098    49ffd1                  call r9                    	< Int.[34;49mhp[39;49m : 0x00007fbdaad56487[32;49m >[39;49m[39;49m
[34;49m ..           : tnax1 ( this ) this nl hp [39;49m[33;40mnl[39;49m[34;49m  this.nodes[3].AfterReference 1 =  this.nodes[4].BeforeReference 2 =  this.nodes[3] hp   this.node .. [39;49m[32;49m
0x7fbdaad5d09b    49b8e0903e1ebd550000    mov r8, 0x55bd1e3e90e0                                 [39;49m[32;49m
0x7fbdaad5d0a5    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaad5d0af    49ffd1                  call r9                    	< Io.[34;49mnewline[39;49m : 0x000055bd1e3e90e0[32;49m >[39;49m[39;49m
[34;49m ..       : tnax1 ( this ) this nl hp nl  [39;49m[33;40mthis[39;49m[34;49m.nodes[3].AfterReference 1 =  this.nodes[4].BeforeReference 2 =  this.nodes[3] hp   this.nodes[3] .. [39;49m[32;49m
0x7fbdaad5d0b2    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5d0b6    4881c030000000          add rax, 0x30                                          [39;49m
[34;49m .. l hp nl  this.nodes[3].AfterReference [39;49m[33;40m1[39;49m[34;49m =  this.nodes[4].BeforeReference 2 =  this.nodes[3] hp   this.nodes[3].AfterReference dup hp 16 dum .. [39;49m[32;49m
0x7fbdaad5d0bd    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m .. hp nl  this.nodes[3].AfterReference 1 [39;49m[33;40m=[39;49m[34;49m  this.nodes[4].BeforeReference 2 =  this.nodes[3] hp   this.nodes[3].AfterReference dup hp 16 dump  .. [39;49m[32;49m
0x7fbdaad5d0c4    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. nl  this.nodes[3].AfterReference 1 =  [39;49m[33;40mthis[39;49m[34;49m.nodes[4].BeforeReference 2 =  this.nodes[3] hp   this.nodes[3].AfterReference dup hp 16 dump  th .. [39;49m[32;49m
0x7fbdaad5d0c7    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. [3].AfterReference 1 =  this.nodes[4].[39;49m[33;40mBeforeReference[39;49m[34;49m 2 =  this.nodes[3] hp   this.nodes[3].AfterReference dup hp 16 dump  this.nodes[4] hp .. [39;49m[32;49m
0x7fbdaad5d0cb    4881c048000000          add rax, 0x48                                          [39;49m
[34;49m .. ce 1 =  this.nodes[4].BeforeReference [39;49m[33;40m2[39;49m[34;49m =  this.nodes[3] hp   this.nodes[3].AfterReference dup hp 16 dump  this.nodes[4] hp   this.nodes[4] .. [39;49m[32;49m
0x7fbdaad5d0d2    48c7c102000000          mov rcx, 0x2                                           [39;49m
[34;49m ..  1 =  this.nodes[4].BeforeReference 2 [39;49m[33;40m=[39;49m[34;49m  this.nodes[3] hp   this.nodes[3].AfterReference dup hp 16 dump  this.nodes[4] hp   this.nodes[4].B .. [39;49m[32;49m
0x7fbdaad5d0d9    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. =  this.nodes[4].BeforeReference 2 =  [39;49m[33;40mthis[39;49m[34;49m.nodes[3] hp   this.nodes[3].AfterReference dup hp 16 dump  this.nodes[4] hp   this.nodes[4].Befo .. [39;49m[32;49m
0x7fbdaad5d0dc    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5d0e0    4881c030000000          add rax, 0x30                                          [39;49m[32;49m
0x7fbdaad5d0e7    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5d0eb    498906                  mov [r14], rax                                         [39;49m
[34;49m .. 4].BeforeReference 2 =  this.nodes[3] [39;49m[33;40mhp[39;49m[34;49m   this.nodes[3].AfterReference dup hp 16 dump  this.nodes[4] hp   this.nodes[4].BeforeReference du .. [39;49m[32;49m
0x7fbdaad5d0ee    49b98764d5aabd7f0000    mov r9, 0x7fbdaad56487                                 [39;49m[32;49m
0x7fbdaad5d0f8    49ffd1                  call r9                    	< Int.[34;49mhp[39;49m : 0x00007fbdaad56487[32;49m >[39;49m[39;49m
[34;49m .. foreReference 2 =  this.nodes[3] hp   [39;49m[33;40mthis[39;49m[34;49m.nodes[3].AfterReference dup hp 16 dump  this.nodes[4] hp   this.nodes[4].BeforeReference dup hp  .. [39;49m[32;49m
0x7fbdaad5d0fb    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5d0ff    4881c030000000          add rax, 0x30                                          [39;49m[32;49m
0x7fbdaad5d106    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fbdaad5d10a    498906                  mov [r14], rax                                         [39;49m
[34;49m .. [3] hp   this.nodes[3].AfterReference [39;49m[33;40mdup[39;49m[34;49m hp 16 dump  this.nodes[4] hp   this.nodes[4].BeforeReference dup hp 16 dump ;  .. [39;49m[32;49m
0x7fbdaad5d10d    498946f8                mov [r14-0x8], rax                                     [39;49m
[34;49m .. hp   this.nodes[3].AfterReference dup [39;49m[33;40mhp[39;49m[34;49m 16 dump  this.nodes[4] hp   this.nodes[4].BeforeReference dup hp 16 dump ;  .. [39;49m[32;49m
0x7fbdaad5d111    49b98764d5aabd7f0000    mov r9, 0x7fbdaad56487                                 [39;49m[32;49m
0x7fbdaad5d11b    49ffd1                  call r9                    	< Int.[34;49mhp[39;49m : 0x00007fbdaad56487[32;49m >[39;49m[39;49m
[34;49m ..   this.nodes[3].AfterReference dup hp [39;49m[33;40m16[39;49m[34;49m dump  this.nodes[4] hp   this.nodes[4].BeforeReference dup hp 16 dump ;  .. [39;49m[32;49m
0x7fbdaad5d11e    48c7c010000000          mov rax, 0x10                                          [39;49m[32;49m
0x7fbdaad5d125    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5d129    498906                  mov [r14], rax                                         [39;49m
[34;49m .. his.nodes[3].AfterReference dup hp 16 [39;49m[33;40mdump[39;49m[34;49m  this.nodes[4] hp   this.nodes[4].BeforeReference dup hp 16 dump ;  .. [39;49m[32;49m
0x7fbdaad5d12c    49b830b43e1ebd550000    mov r8, 0x55bd1e3eb430                                 [39;49m[32;49m
0x7fbdaad5d136    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaad5d140    49ffd1                  call r9                    	< Debug.[34;49mdump[39;49m : 0x000055bd1e3eb430[32;49m >[39;49m[39;49m
[34;49m .. des[3].AfterReference dup hp 16 dump  [39;49m[33;40mthis[39;49m[34;49m.nodes[4] hp   this.nodes[4].BeforeReference dup hp 16 dump ;  .. [39;49m[32;49m
0x7fbdaad5d143    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5d147    4881c040000000          add rax, 0x40                                          [39;49m[32;49m
0x7fbdaad5d14e    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5d152    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ference dup hp 16 dump  this.nodes[4] [39;49m[33;40mhp[39;49m[34;49m   this.nodes[4].BeforeReference dup hp 16 dump ;  .. [39;49m[32;49m
0x7fbdaad5d155    49b98764d5aabd7f0000    mov r9, 0x7fbdaad56487                                 [39;49m[32;49m
0x7fbdaad5d15f    49ffd1                  call r9                    	< Int.[34;49mhp[39;49m : 0x00007fbdaad56487[32;49m >[39;49m[39;49m
[34;49m .. ce dup hp 16 dump  this.nodes[4] hp   [39;49m[33;40mthis[39;49m[34;49m.nodes[4].BeforeReference dup hp 16 dump ;  .. [39;49m[32;49m
0x7fbdaad5d162    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. ump  this.nodes[4] hp   this.nodes[4].[39;49m[33;40mBeforeReference[39;49m[34;49m dup hp 16 dump ;  .. [39;49m[32;49m
0x7fbdaad5d166    4881c048000000          add rax, 0x48                                          [39;49m[32;49m
0x7fbdaad5d16d    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fbdaad5d171    498906                  mov [r14], rax                                         [39;49m
[34;49m .. 4] hp   this.nodes[4].BeforeReference [39;49m[33;40mdup[39;49m[34;49m hp 16 dump ;  .. [39;49m[32;49m
0x7fbdaad5d174    498946f8                mov [r14-0x8], rax                                     [39;49m
[34;49m .. p   this.nodes[4].BeforeReference dup [39;49m[33;40mhp[39;49m[34;49m 16 dump ;  .. [39;49m[32;49m
0x7fbdaad5d178    49b98764d5aabd7f0000    mov r9, 0x7fbdaad56487                                 [39;49m[32;49m
0x7fbdaad5d182    49ffd1                  call r9                    	< Int.[34;49mhp[39;49m : 0x00007fbdaad56487[32;49m >[39;49m[39;49m
[34;49m ..  this.nodes[4].BeforeReference dup hp [39;49m[33;40m16[39;49m[34;49m dump ;  .. [39;49m[32;49m
0x7fbdaad5d185    48c7c010000000          mov rax, 0x10                                          [39;49m[32;49m
0x7fbdaad5d18c    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5d190    498906                  mov [r14], rax                                         [39;49m
[34;49m .. is.nodes[4].BeforeReference dup hp 16 [39;49m[33;40mdump[39;49m[34;49m ;  .. [39;49m[32;49m
0x7fbdaad5d193    49b830b43e1ebd550000    mov r8, 0x55bd1e3eb430                                 [39;49m[32;49m
0x7fbdaad5d19d    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaad5d1a7    49ffd1                  call r9                    	< Debug.[34;49mdump[39;49m : 0x000055bd1e3eb430[32;49m >[39;49m[39;49m
[34;49m .. des[4].BeforeReference dup hp 16 dump [39;49m[33;40m;[39;49m[34;49m  .. [39;49m[32;49m
0x7fbdaad5d1aa    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5d1ae    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaad5d1b2    4983ee08                sub r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5d1b6    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'tnax1' :: codeSize = 352
Word : 0x00007fbdaa95d9b8 :: Compiled at : 0x00007fbdaad5d056
 =============================
::> 'wdiss' was called at namespaces/test/arrayTest.csl 136.19 <::

 0x00007fbdaa7dd340
 0x00007fbdaa7dd370 0x00007fbdaa7dd370
Dump at : namespaces/test/arrayTest.csl : 139.13 :
Dump : Address = 0x00007fbdaa7dd370 : Number = 16 :: (little endian dump)
0x00007fbdaa7dd370 :  01 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
 0x00007fbdaa7dd380 0x00007fbdaa7dd388
Dump at : namespaces/test/arrayTest.csl : 139.13 :
Dump : Address = 0x00007fbdaa7dd388 : Number = 16 :: (little endian dump)
0x00007fbdaa7dd388 :  02 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
 arr1 :  namespaces/test/arrayTest.csl 145.22
Dump at : namespaces/test/arrayTest.csl : 145.39 :
Dump : Address = 0x00007fbdaa7dd8b0 : Number = 32 :: (little endian dump)
0x00007fbdaa7dd8b0 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7dd8c0 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
 arr1 :  namespaces/test/arrayTest.csl 150.22
Dump at : namespaces/test/arrayTest.csl : 150.39 :
Dump : Address = 0x00007fbdaa7dd8b0 : Number = 32 :: (little endian dump)
0x00007fbdaa7dd8b0 :  89 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7dd8c0 :  00 00 00 00 00 00 00 00  89 00 00 00 00 00 00 00  ........ ........ 

 =============================
Ar1.[34;49marr2[39;49m <:> csl compiled word
SourceCode for Ar1.[34;49marr2[39;49m :> 
[34;49m: arr2 ( Ar1 a ) a.ar[1] a.ar[3] @ = a.ar[2] a.ar[3] @ = a.ar[1] @ dup decimal p 0x89 _assert ; [39;49m
Source code file location of [34;49marr2[39;49m : "namespaces/test/arrayTest.csl" : 151.2 :: we are now at : namespaces/test/arrayTest.csl : 157.18
Compiled with : optimizeOn, inlineOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xaad5d1bc -- code size = 172 bytes
TypeSignature : Object 
 -----------------------------
Word :: Ar1.[34;49marr2[39;49m : definition = 0x00007fbdaad5d1bc : disassembly at namespaces/test/arrayTest.csl : 157.18 :
[34;49m ..                                     : [39;49m[33;40marr2[39;49m[34;49m ( Ar1 a )  a.ar[1] a.ar[3] @ =  a.ar[2] a.ar[3] @ =  a.ar[1] @ dup decimal p 0x89 _assert  ;  .. [39;49m[32;49m
0x7fbdaad5d1bc    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fbdaad5d1c0    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaad5d1c4    4981c608000000          add r14, 0x8                                           [39;49m
[34;49m ..                     : arr2 ( Ar1 a )  [39;49m[33;40ma[39;49m[34;49m.ar[1] a.ar[3] @ =  a.ar[2] a.ar[3] @ =  a.ar[1] @ dup decimal p 0x89 _assert  ;  .. [39;49m[32;49m
0x7fbdaad5d1cb    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5d1cf    4881c008000000          add rax, 0x8                                           [39;49m
[34;49m ..             : arr2 ( Ar1 a )  a.ar[1] [39;49m[33;40ma[39;49m[34;49m.ar[3] @ =  a.ar[2] a.ar[3] @ =  a.ar[1] @ dup decimal p 0x89 _assert  ;  .. [39;49m[32;49m
0x7fbdaad5d1d6    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5d1da    4881c118000000          add rcx, 0x18                                          [39;49m[32;49m
0x7fbdaad5d1e1    488b09                  mov rcx, [rcx]                                         [39;49m
[34;49m ..   : arr2 ( Ar1 a )  a.ar[1] a.ar[3] @ [39;49m[33;40m=[39;49m[34;49m  a.ar[2] a.ar[3] @ =  a.ar[1] @ dup decimal p 0x89 _assert  ;  .. [39;49m[32;49m
0x7fbdaad5d1e4    488908                  mov [rax], rcx                                         [39;49m
[34;49m   : arr2 ( Ar1 a )  a.ar[1] a.ar[3] @ =  [39;49m[33;40ma[39;49m[34;49m.ar[2] a.ar[3] @ =  a.ar[1] @ dup decimal p 0x89 _assert  ;  .. [39;49m[32;49m
0x7fbdaad5d1e7    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5d1eb    4881c010000000          add rax, 0x10                                          [39;49m
[34;49m .. Ar1 a )  a.ar[1] a.ar[3] @ =  a.ar[2] [39;49m[33;40ma[39;49m[34;49m.ar[3] @ =  a.ar[1] @ dup decimal p 0x89 _assert  ; [39;49m[32;49m
0x7fbdaad5d1f2    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5d1f6    4881c118000000          add rcx, 0x18                                          [39;49m[32;49m
0x7fbdaad5d1fd    488b09                  mov rcx, [rcx]                                         [39;49m
[34;49m .. .ar[1] a.ar[3] @ =  a.ar[2] a.ar[3] @ [39;49m[33;40m=[39;49m[34;49m  a.ar[1] @ dup decimal p 0x89 _assert  ; [39;49m[32;49m
0x7fbdaad5d200    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. [1] a.ar[3] @ =  a.ar[2] a.ar[3] @ =  [39;49m[33;40ma[39;49m[34;49m.ar[1] @ dup decimal p 0x89 _assert  ; [39;49m[32;49m
0x7fbdaad5d203    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5d207    4881c008000000          add rax, 0x8                                           [39;49m[32;49m
0x7fbdaad5d20e    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fbdaad5d211    4983c610                add r14, 0x10                                          [39;49m
[34;49m .. .ar[3] @ =  a.ar[2] a.ar[3] @ =  a.ar[[39;49m[33;40m1[39;49m[34;49m] @ dup decimal p 0x89 _assert  ; [39;49m[32;49m
0x7fbdaad5d215    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ] @ =  a.ar[2] a.ar[3] @ =  a.ar[1] @ [39;49m[33;40mdup[39;49m[34;49m decimal p 0x89 _assert  ; [39;49m[32;49m
0x7fbdaad5d218    498946f8                mov [r14-0x8], rax                                     [39;49m
[34;49m .. =  a.ar[2] a.ar[3] @ =  a.ar[1] @ dup [39;49m[33;40mdecimal[39;49m[34;49m p 0x89 _assert  ; [39;49m[32;49m
0x7fbdaad5d21c    49b810b43e1ebd550000    mov r8, 0x55bd1e3eb410                                 [39;49m[32;49m
0x7fbdaad5d226    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaad5d230    49ffd1                  call r9                    	< System.[34;49mdecimal[39;49m : 0x000055bd1e3eb410[32;49m >[39;49m[39;49m
[34;49m .. 2] a.ar[3] @ =  a.ar[1] @ dup decimal [39;49m[33;40mp[39;49m[34;49m 0x89 _assert  ; [39;49m[32;49m
0x7fbdaad5d233    49b94464d5aabd7f0000    mov r9, 0x7fbdaad56444                                 [39;49m[32;49m
0x7fbdaad5d23d    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fbdaad56444[32;49m >[39;49m[39;49m
[34;49m ..  a.ar[3] @ =  a.ar[1] @ dup decimal p [39;49m[33;40m0x89[39;49m[34;49m _assert  ; [39;49m[32;49m
0x7fbdaad5d240    48c7c089000000          mov rax, 0x89                                          [39;49m[32;49m
0x7fbdaad5d247    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5d24b    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaad5d24e    49b9df7cd5aabd7f0000    mov r9, 0x7fbdaad57cdf                                 [39;49m[32;49m
0x7fbdaad5d258    49ffd1                  call r9                    	< System.[34;49m_assert0[39;49m : 0x00007fbdaad57cdf[32;49m >[39;49m[39;49m
[34;49m .. a.ar[1] @ dup decimal p 0x89 _assert  [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fbdaad5d25b    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5d25f    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaad5d263    4983ee08                sub r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5d267    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'arr2' :: codeSize = 171
Word : 0x00007fbdaa9630c8 :: Compiled at : 0x00007fbdaad5d1bc
 =============================
::> 'wdiss' was called at namespaces/test/arrayTest.csl 157.18 <::
 137 
arr1 :  namespaces/test/arrayTest.csl 159.24
Dump at : namespaces/test/arrayTest.csl : 159.41 :
Dump : Address = 0x00007fbdaa7dd8b0 : Number = 32 :: (little endian dump)
0x00007fbdaa7dd8b0 :  89 00 00 00 00 00 00 00  89 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7dd8c0 :  89 00 00 00 00 00 00 00  89 00 00 00 00 00 00 00  ........ ........ 

 =============================
Ar1.[34;49ma3[39;49m <:> csl compiled word
SourceCode for Ar1.[34;49ma3[39;49m :> 
[34;49m: a3 ( n Ar1 a ) a.ar [n @ 1 +] a.ar[n @ 2 +] @ = a.ar[ n @ 1 +] @ dup hp 0x89 _assert decimal a.ar[2] @ dup hp 0x89 _assert decimal ; [39;49m
Source code file location of [34;49ma3[39;49m : "namespaces/test/arrayTest.csl" : 161.2 :: we are now at : namespaces/test/arrayTest.csl : 166.16
Compiled with : optimizeOn, inlineOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xaad5d26d -- code size = 350 bytes
TypeSignature : 
 -----------------------------
Word :: Ar1.[34;49ma3[39;49m : definition = 0x00007fbdaad5d26d : disassembly at namespaces/test/arrayTest.csl : 166.16 :
[34;49m ..                                     : [39;49m[33;40ma3[39;49m[34;49m ( n Ar1 a )  a.ar [n @ 1 +] a.ar[n @ 2 +] @ =  a.ar[ n @ 1 +] @ dup hp 0x89 _assert decimal a.ar[2 .. [39;49m[32;49m
0x7fbdaad5d26d    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fbdaad5d271    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaad5d275    4981c608000000          add r14, 0x8                                           [39;49m
[34;49m ..                     : a3 ( n Ar1 a )  [39;49m[33;40ma[39;49m[34;49m.ar [n @ 1 +] a.ar[n @ 2 +] @ =  a.ar[ n @ 1 +] @ dup hp 0x89 _assert decimal a.ar[2] @ dup hp 0x89  .. [39;49m[32;49m
0x7fbdaad5d27c    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5d280    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fbdaad5d287    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5d28b    498906                  mov [r14], rax                                         [39;49m
[34;49m ..               : a3 ( n Ar1 a )  a.ar [[39;49m[33;40mn[39;49m[34;49m @ 1 +] a.ar[n @ 2 +] @ =  a.ar[ n @ 1 +] @ dup hp 0x89 _assert decimal a.ar[2] @ dup hp 0x89 _asser .. [39;49m[32;49m
0x7fbdaad5d28e    498b47f0                mov rax, [r15-0x10]                                    [39;49m
[34;49m ..           : a3 ( n Ar1 a )  a.ar [n @ [39;49m[33;40m1[39;49m[34;49m +] a.ar[n @ 2 +] @ =  a.ar[ n @ 1 +] @ dup hp 0x89 _assert decimal a.ar[2] @ dup hp 0x89 _assert de .. [39;49m[32;49m
0x7fbdaad5d292    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m ..         : a3 ( n Ar1 a )  a.ar [n @ 1 [39;49m[33;40m+[39;49m[34;49m] a.ar[n @ 2 +] @ =  a.ar[ n @ 1 +] @ dup hp 0x89 _assert decimal a.ar[2] @ dup hp 0x89 _assert deci .. [39;49m[32;49m
0x7fbdaad5d299    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fbdaad5d29c    486bc008                imul rax, rax, 0x8                                     [39;49m[32;49m
0x7fbdaad5d2a0    490106                  add [r14], rax                                         [39;49m
[34;49m ..      : a3 ( n Ar1 a )  a.ar [n @ 1 +] [39;49m[33;40ma[39;49m[34;49m.ar[n @ 2 +] @ =  a.ar[ n @ 1 +] @ dup hp 0x89 _assert decimal a.ar[2] @ dup hp 0x89 _assert decimal .. [39;49m[32;49m
0x7fbdaad5d2a3    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5d2a7    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fbdaad5d2ae    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5d2b2    498906                  mov [r14], rax                                         [39;49m
[34;49m .. : a3 ( n Ar1 a )  a.ar [n @ 1 +] a.ar[[39;49m[33;40mn[39;49m[34;49m @ 2 +] @ =  a.ar[ n @ 1 +] @ dup hp 0x89 _assert decimal a.ar[2] @ dup hp 0x89 _assert decimal ;  .. [39;49m[32;49m
0x7fbdaad5d2b5    498b47f0                mov rax, [r15-0x10]                                    [39;49m
[34;49m: a3 ( n Ar1 a )  a.ar [n @ 1 +] a.ar[n @ [39;49m[33;40m2[39;49m[34;49m +] @ =  a.ar[ n @ 1 +] @ dup hp 0x89 _assert decimal a.ar[2] @ dup hp 0x89 _assert decimal ;  .. [39;49m[32;49m
0x7fbdaad5d2b9    48c7c102000000          mov rcx, 0x2                                           [39;49m
[34;49m ..  n Ar1 a )  a.ar [n @ 1 +] a.ar[n @ 2 [39;49m[33;40m+[39;49m[34;49m] @ =  a.ar[ n @ 1 +] @ dup hp 0x89 _assert decimal a.ar[2] @ dup hp 0x89 _assert decimal ; [39;49m[32;49m
0x7fbdaad5d2c0    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fbdaad5d2c3    486bc008                imul rax, rax, 0x8                                     [39;49m[32;49m
0x7fbdaad5d2c7    490106                  add [r14], rax                                         [39;49m
[34;49m .. Ar1 a )  a.ar [n @ 1 +] a.ar[n @ 2 +] [39;49m[33;40m@[39;49m[34;49m =  a.ar[ n @ 1 +] @ dup hp 0x89 _assert decimal a.ar[2] @ dup hp 0x89 _assert decimal ; [39;49m[32;49m
0x7fbdaad5d2ca    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fbdaad5d2cd    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fbdaad5d2d0    498906                  mov [r14], rax                                         [39;49m
[34;49m .. 1 a )  a.ar [n @ 1 +] a.ar[n @ 2 +] @ [39;49m[33;40m=[39;49m[34;49m  a.ar[ n @ 1 +] @ dup hp 0x89 _assert decimal a.ar[2] @ dup hp 0x89 _assert decimal ; [39;49m[32;49m
0x7fbdaad5d2d3    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fbdaad5d2d6    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fbdaad5d2da    488908                  mov [rax], rcx                                         [39;49m[32;49m
0x7fbdaad5d2dd    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m ..  )  a.ar [n @ 1 +] a.ar[n @ 2 +] @ =  [39;49m[33;40ma[39;49m[34;49m.ar[ n @ 1 +] @ dup hp 0x89 _assert decimal a.ar[2] @ dup hp 0x89 _assert decimal ; [39;49m[32;49m
0x7fbdaad5d2e1    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5d2e5    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fbdaad5d2ec    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5d2f0    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ar [n @ 1 +] a.ar[n @ 2 +] @ =  a.ar[ [39;49m[33;40mn[39;49m[34;49m @ 1 +] @ dup hp 0x89 _assert decimal a.ar[2] @ dup hp 0x89 _assert decimal ; [39;49m[32;49m
0x7fbdaad5d2f3    498b47f0                mov rax, [r15-0x10]                                    [39;49m
[34;49m .. n @ 1 +] a.ar[n @ 2 +] @ =  a.ar[ n @ [39;49m[33;40m1[39;49m[34;49m +] @ dup hp 0x89 _assert decimal a.ar[2] @ dup hp 0x89 _assert decimal ; [39;49m[32;49m
0x7fbdaad5d2f7    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m .. @ 1 +] a.ar[n @ 2 +] @ =  a.ar[ n @ 1 [39;49m[33;40m+[39;49m[34;49m] @ dup hp 0x89 _assert decimal a.ar[2] @ dup hp 0x89 _assert decimal ; [39;49m[32;49m
0x7fbdaad5d2fe    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fbdaad5d301    486bc008                imul rax, rax, 0x8                                     [39;49m[32;49m
0x7fbdaad5d305    490106                  add [r14], rax                                         [39;49m
[34;49m ..  +] a.ar[n @ 2 +] @ =  a.ar[ n @ 1 +] [39;49m[33;40m@[39;49m[34;49m dup hp 0x89 _assert decimal a.ar[2] @ dup hp 0x89 _assert decimal ; [39;49m[32;49m
0x7fbdaad5d308    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fbdaad5d30b    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fbdaad5d30e    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ] a.ar[n @ 2 +] @ =  a.ar[ n @ 1 +] @ [39;49m[33;40mdup[39;49m[34;49m hp 0x89 _assert decimal a.ar[2] @ dup hp 0x89 _assert decimal ; [39;49m[32;49m
0x7fbdaad5d311    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fbdaad5d314    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5d318    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ar[n @ 2 +] @ =  a.ar[ n @ 1 +] @ dup [39;49m[33;40mhp[39;49m[34;49m 0x89 _assert decimal a.ar[2] @ dup hp 0x89 _assert decimal ; [39;49m[32;49m
0x7fbdaad5d31b    49b98764d5aabd7f0000    mov r9, 0x7fbdaad56487                                 [39;49m[32;49m
0x7fbdaad5d325    49ffd1                  call r9                    	< Int.[34;49mhp[39;49m : 0x00007fbdaad56487[32;49m >[39;49m[39;49m
[34;49m .. n @ 2 +] @ =  a.ar[ n @ 1 +] @ dup hp [39;49m[33;40m0x89[39;49m[34;49m _assert decimal a.ar[2] @ dup hp 0x89 _assert decimal ; [39;49m[32;49m
0x7fbdaad5d328    48c7c089000000          mov rax, 0x89                                          [39;49m[32;49m
0x7fbdaad5d32f    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5d333    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaad5d336    49b9df7cd5aabd7f0000    mov r9, 0x7fbdaad57cdf                                 [39;49m[32;49m
0x7fbdaad5d340    49ffd1                  call r9                    	< System.[34;49m_assert0[39;49m : 0x00007fbdaad57cdf[32;49m >[39;49m[39;49m
[34;49m ..  a.ar[ n @ 1 +] @ dup hp 0x89 _assert [39;49m[33;40mdecimal[39;49m[34;49m a.ar[2] @ dup hp 0x89 _assert decimal ; [39;49m[32;49m
0x7fbdaad5d343    49b810b43e1ebd550000    mov r8, 0x55bd1e3eb410                                 [39;49m[32;49m
0x7fbdaad5d34d    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaad5d357    49ffd1                  call r9                    	< System.[34;49mdecimal[39;49m : 0x000055bd1e3eb410[32;49m >[39;49m[39;49m
[34;49m ..  @ 1 +] @ dup hp 0x89 _assert decimal [39;49m[33;40ma[39;49m[34;49m.ar[2] @ dup hp 0x89 _assert decimal ; [39;49m[32;49m
0x7fbdaad5d35a    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5d35e    4881c010000000          add rax, 0x10                                          [39;49m[32;49m
0x7fbdaad5d365    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5d369    498906                  mov [r14], rax                                         [39;49m
[34;49m .. @ dup hp 0x89 _assert decimal a.ar[2] [39;49m[33;40m@[39;49m[34;49m dup hp 0x89 _assert decimal ; [39;49m[32;49m
0x7fbdaad5d36c    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fbdaad5d36f    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fbdaad5d372    498906                  mov [r14], rax                                         [39;49m
[34;49m .. dup hp 0x89 _assert decimal a.ar[2] @ [39;49m[33;40mdup[39;49m[34;49m hp 0x89 _assert decimal ; [39;49m[32;49m
0x7fbdaad5d375    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fbdaad5d378    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5d37c    498906                  mov [r14], rax                                         [39;49m
[34;49m .. hp 0x89 _assert decimal a.ar[2] @ dup [39;49m[33;40mhp[39;49m[34;49m 0x89 _assert decimal ; [39;49m[32;49m
0x7fbdaad5d37f    49b98764d5aabd7f0000    mov r9, 0x7fbdaad56487                                 [39;49m[32;49m
0x7fbdaad5d389    49ffd1                  call r9                    	< Int.[34;49mhp[39;49m : 0x00007fbdaad56487[32;49m >[39;49m[39;49m
[34;49m .. 0x89 _assert decimal a.ar[2] @ dup hp [39;49m[33;40m0x89[39;49m[34;49m _assert decimal ; [39;49m[32;49m
0x7fbdaad5d38c    48c7c089000000          mov rax, 0x89                                          [39;49m[32;49m
0x7fbdaad5d393    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5d397    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaad5d39a    49b9df7cd5aabd7f0000    mov r9, 0x7fbdaad57cdf                                 [39;49m[32;49m
0x7fbdaad5d3a4    49ffd1                  call r9                    	< System.[34;49m_assert0[39;49m : 0x00007fbdaad57cdf[32;49m >[39;49m[39;49m
[34;49m .. decimal a.ar[2] @ dup hp 0x89 _assert [39;49m[33;40mdecimal[39;49m[34;49m ; [39;49m[32;49m
0x7fbdaad5d3a7    49b810b43e1ebd550000    mov r8, 0x55bd1e3eb410                                 [39;49m[32;49m
0x7fbdaad5d3b1    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaad5d3bb    49ffd1                  call r9                    	< System.[34;49mdecimal[39;49m : 0x000055bd1e3eb410[32;49m >[39;49m[39;49m
[34;49m .. a.ar[2] @ dup hp 0x89 _assert decimal [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fbdaad5d3be    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5d3c2    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaad5d3c6    4983ee10                sub r14, 0x10                                          [39;49m[32;49m
0x7fbdaad5d3ca    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'a3' :: codeSize = 349
Word : 0x00007fbdaa965fa0 :: Compiled at : 0x00007fbdaad5d26d
 =============================
::> 'wdiss' was called at namespaces/test/arrayTest.csl 166.16 <::
 0x0000000000000089 0x0000000000000089 a4 :  namespaces/test/arrayTest.csl 172.20
Dump at : namespaces/test/arrayTest.csl : 172.35 :
Dump : Address = 0x00007fbdaa7dfea0 : Number = 128 :: (little endian dump)
0x00007fbdaa7dfea0 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7dfeb0 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7dfec0 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7dfed0 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7dfee0 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7dfef0 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7dff00 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7dff10 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
 a4 :  namespaces/test/arrayTest.csl 174.20
Dump at : namespaces/test/arrayTest.csl : 174.35 :
Dump : Address = 0x00007fbdaa7dfea0 : Number = 128 :: (little endian dump)
0x00007fbdaa7dfea0 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7dfeb0 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7dfec0 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7dfed0 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7dfee0 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7dfef0 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7dff00 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7dff10 :  89 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 

 =============================
Ar2.[34;49ma5[39;49m <:> csl compiled word
SourceCode for Ar2.[34;49ma5[39;49m :> 
[34;49m: a5 ( n m Ar2 a ) a.ar[n @ 1 +][m @] a.ar[n @ 2 +][m @] @ = nl "a4 : " ps location a a.size @ dump a.ar[n @ 1 +][m @] @ dup hp 0x89 _assert ; [39;49m
Source code file location of [34;49ma5[39;49m : "namespaces/test/arrayTest.csl" : 175.2 :: we are now at : namespaces/test/arrayTest.csl : 180.16
Compiled with : optimizeOn, inlineOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xaad5d3d0 -- code size = 405 bytes
TypeSignature : 
 -----------------------------
Word :: Ar2.[34;49ma5[39;49m : definition = 0x00007fbdaad5d3d0 : disassembly at namespaces/test/arrayTest.csl : 180.16 :
[34;49m ..                                     : [39;49m[33;40ma5[39;49m[34;49m ( n m Ar2 a )  a.ar[n @ 1 +][m @] a.ar[n @ 2 +][m @] @ =  nl "a4 : " ps location a a.size @ dump a .. [39;49m[32;49m
0x7fbdaad5d3d0    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fbdaad5d3d4    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaad5d3d8    4981c608000000          add r14, 0x8                                           [39;49m
[34;49m ..                   : a5 ( n m Ar2 a )  [39;49m[33;40ma[39;49m[34;49m.ar[n @ 1 +][m @] a.ar[n @ 2 +][m @] @ =  nl "a4 : " ps location a a.size @ dump a.ar[n @ 1 +][m @]  .. [39;49m[32;49m
0x7fbdaad5d3df    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5d3e3    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fbdaad5d3ea    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5d3ee    498906                  mov [r14], rax                                         [39;49m
[34;49m ..              : a5 ( n m Ar2 a )  a.ar[[39;49m[33;40mn[39;49m[34;49m @ 1 +][m @] a.ar[n @ 2 +][m @] @ =  nl "a4 : " ps location a a.size @ dump a.ar[n @ 1 +][m @] @ dup .. [39;49m[32;49m
0x7fbdaad5d3f1    498b47e8                mov rax, [r15-0x18]                                    [39;49m
[34;49m ..          : a5 ( n m Ar2 a )  a.ar[n @ [39;49m[33;40m1[39;49m[34;49m +][m @] a.ar[n @ 2 +][m @] @ =  nl "a4 : " ps location a a.size @ dump a.ar[n @ 1 +][m @] @ dup hp  .. [39;49m[32;49m
0x7fbdaad5d3f5    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m ..        : a5 ( n m Ar2 a )  a.ar[n @ 1 [39;49m[33;40m+[39;49m[34;49m][m @] a.ar[n @ 2 +][m @] @ =  nl "a4 : " ps location a a.size @ dump a.ar[n @ 1 +][m @] @ dup hp 0x .. [39;49m[32;49m
0x7fbdaad5d3fc    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fbdaad5d3ff    486bc020                imul rax, rax, 0x20                                    [39;49m[32;49m
0x7fbdaad5d403    490106                  add [r14], rax                                         [39;49m
[34;49m ..     : a5 ( n m Ar2 a )  a.ar[n @ 1 +][[39;49m[33;40mm[39;49m[34;49m @] a.ar[n @ 2 +][m @] @ =  nl "a4 : " ps location a a.size @ dump a.ar[n @ 1 +][m @] @ dup hp 0x89  .. [39;49m[32;49m
0x7fbdaad5d406    498b47f0                mov rax, [r15-0x10]                                    [39;49m[32;49m
0x7fbdaad5d40a    486bc008                imul rax, rax, 0x8                                     [39;49m[32;49m
0x7fbdaad5d40e    490106                  add [r14], rax                                         [39;49m
[34;49m   : a5 ( n m Ar2 a )  a.ar[n @ 1 +][m @] [39;49m[33;40ma[39;49m[34;49m.ar[n @ 2 +][m @] @ =  nl "a4 : " ps location a a.size @ dump a.ar[n @ 1 +][m @] @ dup hp 0x89 _asse .. [39;49m[32;49m
0x7fbdaad5d411    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5d415    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fbdaad5d41c    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5d420    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  n m Ar2 a )  a.ar[n @ 1 +][m @] a.ar[[39;49m[33;40mn[39;49m[34;49m @ 2 +][m @] @ =  nl "a4 : " ps location a a.size @ dump a.ar[n @ 1 +][m @] @ dup hp 0x89 _assert  ; [39;49m[32;49m
0x7fbdaad5d423    498b47e8                mov rax, [r15-0x18]                                    [39;49m
[34;49m ..  Ar2 a )  a.ar[n @ 1 +][m @] a.ar[n @ [39;49m[33;40m2[39;49m[34;49m +][m @] @ =  nl "a4 : " ps location a a.size @ dump a.ar[n @ 1 +][m @] @ dup hp 0x89 _assert  ; [39;49m[32;49m
0x7fbdaad5d427    48c7c102000000          mov rcx, 0x2                                           [39;49m
[34;49m .. r2 a )  a.ar[n @ 1 +][m @] a.ar[n @ 2 [39;49m[33;40m+[39;49m[34;49m][m @] @ =  nl "a4 : " ps location a a.size @ dump a.ar[n @ 1 +][m @] @ dup hp 0x89 _assert  ; [39;49m[32;49m
0x7fbdaad5d42e    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fbdaad5d431    486bc020                imul rax, rax, 0x20                                    [39;49m[32;49m
0x7fbdaad5d435    490106                  add [r14], rax                                         [39;49m
[34;49m .. a )  a.ar[n @ 1 +][m @] a.ar[n @ 2 +][[39;49m[33;40mm[39;49m[34;49m @] @ =  nl "a4 : " ps location a a.size @ dump a.ar[n @ 1 +][m @] @ dup hp 0x89 _assert  ; [39;49m[32;49m
0x7fbdaad5d438    498b47f0                mov rax, [r15-0x10]                                    [39;49m[32;49m
0x7fbdaad5d43c    486bc008                imul rax, rax, 0x8                                     [39;49m[32;49m
0x7fbdaad5d440    490106                  add [r14], rax                                         [39;49m
[34;49m .. a.ar[n @ 1 +][m @] a.ar[n @ 2 +][m @] [39;49m[33;40m@[39;49m[34;49m =  nl "a4 : " ps location a a.size @ dump a.ar[n @ 1 +][m @] @ dup hp 0x89 _assert  ; [39;49m[32;49m
0x7fbdaad5d443    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fbdaad5d446    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fbdaad5d449    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ar[n @ 1 +][m @] a.ar[n @ 2 +][m @] @ [39;49m[33;40m=[39;49m[34;49m  nl "a4 : " ps location a a.size @ dump a.ar[n @ 1 +][m @] @ dup hp 0x89 _assert  ; [39;49m[32;49m
0x7fbdaad5d44c    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fbdaad5d44f    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fbdaad5d453    488908                  mov [rax], rcx                                         [39;49m[32;49m
0x7fbdaad5d456    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m .. n @ 1 +][m @] a.ar[n @ 2 +][m @] @ =  [39;49m[33;40mnl[39;49m[34;49m "a4 : " ps location a a.size @ dump a.ar[n @ 1 +][m @] @ dup hp 0x89 _assert  ; [39;49m[32;49m
0x7fbdaad5d45a    49b8e0903e1ebd550000    mov r8, 0x55bd1e3e90e0                                 [39;49m[32;49m
0x7fbdaad5d464    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaad5d46e    49ffd1                  call r9                    	< Io.[34;49mnewline[39;49m : 0x000055bd1e3e90e0[32;49m >[39;49m[39;49m
[34;49m ..  1 +][m @] a.ar[n @ 2 +][m @] @ =  nl [39;49m[33;40m"[39;49m[34;49ma4 : " ps location a a.size @ dump a.ar[n @ 1 +][m @] @ dup hp 0x89 _assert  ; [39;49m[32;49m
0x7fbdaad5d471    48b8a3f5bfaabd7f0000    mov rax, 0x7fbdaabff5a3    	[32;49m< string : '[39;49m[39;49ma4 : [39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fbdaad5d47b    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5d47f    498906                  mov [r14], rax                                         [39;49m
[34;49m .. @] a.ar[n @ 2 +][m @] @ =  nl "a4 : " [39;49m[33;40mps[39;49m[34;49m location a a.size @ dump a.ar[n @ 1 +][m @] @ dup hp 0x89 _assert  ; [39;49m[32;49m
0x7fbdaad5d482    49b97d63d5aabd7f0000    mov r9, 0x7fbdaad5637d                                 [39;49m[32;49m
0x7fbdaad5d48c    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fbdaad5637d[32;49m >[39;49m[39;49m
[34;49m .. a.ar[n @ 2 +][m @] @ =  nl "a4 : " ps [39;49m[33;40mlocation[39;49m[34;49m a a.size @ dump a.ar[n @ 1 +][m @] @ dup hp 0x89 _assert  ; [39;49m[32;49m
0x7fbdaad5d48f    49b91f70d5aabd7f0000    mov r9, 0x7fbdaad5701f                                 [39;49m[32;49m
0x7fbdaad5d499    49ffd1                  call r9                    	< System.[34;49mlocation[39;49m : 0x00007fbdaad5701f[32;49m >[39;49m[39;49m
[34;49m .. 2 +][m @] @ =  nl "a4 : " ps location [39;49m[33;40ma[39;49m[34;49m a.size @ dump a.ar[n @ 1 +][m @] @ dup hp 0x89 _assert  ; [39;49m[32;49m
0x7fbdaad5d49c    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5d4a0    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fbdaad5d4a7    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5d4ab    498906                  mov [r14], rax                                         [39;49m
[34;49m .. +][m @] @ =  nl "a4 : " ps location a [39;49m[33;40ma[39;49m[34;49m.size @ dump a.ar[n @ 1 +][m @] @ dup hp 0x89 _assert  ; [39;49m[32;49m
0x7fbdaad5d4ae    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5d4b2    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fbdaad5d4b9    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5d4bd    498906                  mov [r14], rax                                         [39;49m
[34;49m .. [m @] @ =  nl "a4 : " ps location a a.[39;49m[33;40msize[39;49m[34;49m @ dump a.ar[n @ 1 +][m @] @ dup hp 0x89 _assert  ; [39;49m[32;49m
0x7fbdaad5d4c0    48b8909296aabd7f0000    mov rax, 0x7fbdaa969290                                [39;49m[32;49m
0x7fbdaad5d4ca    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fbdaad5d4cd    4983c608                add r14, 0x8                                           [39;49m
[34;49m ..  @ =  nl "a4 : " ps location a a.size [39;49m[33;40m@[39;49m[34;49m dump a.ar[n @ 1 +][m @] @ dup hp 0x89 _assert  ; [39;49m[32;49m
0x7fbdaad5d4d1    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  =  nl "a4 : " ps location a a.size @ [39;49m[33;40mdump[39;49m[34;49m a.ar[n @ 1 +][m @] @ dup hp 0x89 _assert  ; [39;49m[32;49m
0x7fbdaad5d4d4    49b830b43e1ebd550000    mov r8, 0x55bd1e3eb430                                 [39;49m[32;49m
0x7fbdaad5d4de    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaad5d4e8    49ffd1                  call r9                    	< Debug.[34;49mdump[39;49m : 0x000055bd1e3eb430[32;49m >[39;49m[39;49m
[34;49m .. l "a4 : " ps location a a.size @ dump [39;49m[33;40ma[39;49m[34;49m.ar[n @ 1 +][m @] @ dup hp 0x89 _assert  ; [39;49m[32;49m
0x7fbdaad5d4eb    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5d4ef    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fbdaad5d4f6    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5d4fa    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  : " ps location a a.size @ dump a.ar[[39;49m[33;40mn[39;49m[34;49m @ 1 +][m @] @ dup hp 0x89 _assert  ; [39;49m[32;49m
0x7fbdaad5d4fd    498b47e8                mov rax, [r15-0x18]                                    [39;49m
[34;49m ..  ps location a a.size @ dump a.ar[n @ [39;49m[33;40m1[39;49m[34;49m +][m @] @ dup hp 0x89 _assert  ; [39;49m[32;49m
0x7fbdaad5d501    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m .. s location a a.size @ dump a.ar[n @ 1 [39;49m[33;40m+[39;49m[34;49m][m @] @ dup hp 0x89 _assert  ; [39;49m[32;49m
0x7fbdaad5d508    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fbdaad5d50b    486bc020                imul rax, rax, 0x20                                    [39;49m[32;49m
0x7fbdaad5d50f    490106                  add [r14], rax                                         [39;49m
[34;49m .. ocation a a.size @ dump a.ar[n @ 1 +][[39;49m[33;40mm[39;49m[34;49m @] @ dup hp 0x89 _assert  ; [39;49m[32;49m
0x7fbdaad5d512    498b47f0                mov rax, [r15-0x10]                                    [39;49m[32;49m
0x7fbdaad5d516    486bc008                imul rax, rax, 0x8                                     [39;49m[32;49m
0x7fbdaad5d51a    490106                  add [r14], rax                                         [39;49m
[34;49m .. on a a.size @ dump a.ar[n @ 1 +][m @] [39;49m[33;40m@[39;49m[34;49m dup hp 0x89 _assert  ; [39;49m[32;49m
0x7fbdaad5d51d    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fbdaad5d520    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fbdaad5d523    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  a a.size @ dump a.ar[n @ 1 +][m @] @ [39;49m[33;40mdup[39;49m[34;49m hp 0x89 _assert  ; [39;49m[32;49m
0x7fbdaad5d526    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fbdaad5d529    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5d52d    498906                  mov [r14], rax                                         [39;49m
[34;49m .. .size @ dump a.ar[n @ 1 +][m @] @ dup [39;49m[33;40mhp[39;49m[34;49m 0x89 _assert  ; [39;49m[32;49m
0x7fbdaad5d530    49b98764d5aabd7f0000    mov r9, 0x7fbdaad56487                                 [39;49m[32;49m
0x7fbdaad5d53a    49ffd1                  call r9                    	< Int.[34;49mhp[39;49m : 0x00007fbdaad56487[32;49m >[39;49m[39;49m
[34;49m .. ze @ dump a.ar[n @ 1 +][m @] @ dup hp [39;49m[33;40m0x89[39;49m[34;49m _assert  ; [39;49m[32;49m
0x7fbdaad5d53d    48c7c089000000          mov rax, 0x89                                          [39;49m[32;49m
0x7fbdaad5d544    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5d548    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaad5d54b    49b9df7cd5aabd7f0000    mov r9, 0x7fbdaad57cdf                                 [39;49m[32;49m
0x7fbdaad5d555    49ffd1                  call r9                    	< System.[34;49m_assert0[39;49m : 0x00007fbdaad57cdf[32;49m >[39;49m[39;49m
[34;49m .. [n @ 1 +][m @] @ dup hp 0x89 _assert  [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fbdaad5d558    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5d55c    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaad5d560    4983ee18                sub r14, 0x18                                          [39;49m[32;49m
0x7fbdaad5d564    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'a5' :: codeSize = 404
Word : 0x00007fbdaa969948 :: Compiled at : 0x00007fbdaad5d3d0
 =============================
::> 'wdiss' was called at namespaces/test/arrayTest.csl 180.16 <::

 a4 :  namespaces/test/arrayTest.csl 182.10
Dump at : namespaces/test/arrayTest.csl : 182.10 :
Dump : Address = 0x00007fbdaa7dfea0 : Number = 128 :: (little endian dump)
0x00007fbdaa7dfea0 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7dfeb0 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7dfec0 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7dfed0 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7dfee0 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7dfef0 :  89 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7dff00 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7dff10 :  89 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
 0x0000000000000089
DataStack at : [34;49mnamespaces/test/arrayTest.csl : 182.12[39;49m :
DataStack depth =   3 : Dsp (R14) = Top = 0x00007fbdab0efa58, InitialTos = 0x00007fbdab0efa40, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fbdab0efa58 > = 0x0000000000000005	
  DataStack   [  -1 ] < 0x00007fbdab0efa50 > = 0x0000000000000005	
  DataStack   [  -2 ] < 0x00007fbdab0efa48 > = 0x0000000000000005	
 a4 :  namespaces/test/arrayTest.csl 183.20
Dump at : namespaces/test/arrayTest.csl : 183.32 :
Dump : Address = 0x00007fbdaa7dfea0 : Number = 128 :: (little endian dump)
0x00007fbdaa7dfea0 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7dfeb0 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7dfec0 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7dfed0 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7dfee0 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7dfef0 :  89 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7dff00 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7dff10 :  89 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 

DataStack at : [34;49mnamespaces/test/arrayTest.csl : 185.11[39;49m :
DataStack depth =   4 : Dsp (R14) = Top = 0x00007fbdab0efa60, InitialTos = 0x00007fbdab0efa40, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fbdab0efa60 > = 0x00007fbdaabff69e	[32;49m< string : '[39;49m[34;49ma6[39;49m[32;49m' >[39;49m
  DataStack   [  -1 ] < 0x00007fbdab0efa58 > = 0x0000000000000005	
  DataStack   [  -2 ] < 0x00007fbdab0efa50 > = 0x0000000000000005	
  DataStack   [  -3 ] < 0x00007fbdab0efa48 > = 0x0000000000000005	
 0x00007fbdaa7e1d20 0x00007fbdaa7e1d20 0x0000000000000089 0x00007fbdaa7e1d20 0x0000000000000089 a6 :  namespaces/test/arrayTest.csl 193.20
Dump at : namespaces/test/arrayTest.csl : 193.38 :
Dump : Address = 0x00007fbdaa7e1c58 : Number = 144 :: (little endian dump)
0x00007fbdaa7e1c58 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7e1c68 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7e1c78 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7e1c88 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7e1c98 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7e1ca8 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7e1cb8 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7e1cc8 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7e1cd8 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 

 0x00007fbdaa7e1d20 0x00007fbdaa7e1d20 0x0000000000000089
 0x00007fbdaa7e1cd8
DataStack at : [34;49mnamespaces/test/arrayTest.csl : 197.42[39;49m :
DataStack depth =   5 : Dsp (R14) = Top = 0x00007fbdab0efa68, InitialTos = 0x00007fbdab0efa40, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fbdab0efa68 > = 0x00007fbdaa7e1d20	
  DataStack   [  -1 ] < 0x00007fbdab0efa60 > = 0x00007fbdaa7e1cd8	
  DataStack   [  -2 ] < 0x00007fbdab0efa58 > = 0x0000000000000005	
  DataStack   [  -3 ] < 0x00007fbdab0efa50 > = 0x0000000000000005	
  DataStack   [  -4 ] < 0x00007fbdab0efa48 > = 0x0000000000000005	
 0x00007fbdaa7e1d20 0x00007fbdaa7e1d20 0x0000000000000089
 a6 :  namespaces/test/arrayTest.csl 200.23
Dump at : namespaces/test/arrayTest.csl : 200.38 :
Dump : Address = 0x00007fbdaa7e1c58 : Number = 144 :: (little endian dump)
0x00007fbdaa7e1c58 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7e1c68 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7e1c78 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7e1c88 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7e1c98 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7e1ca8 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7e1cb8 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7e1cc8 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7e1cd8 :  89 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
 137 0x00007fbdaa7e1d20 0x0000000000000089 0x00007fbdaa7e1cd8 0x0000000000000089 0x00007fbdaa7e1cd8 0x0000000000000089 0x00007fbdaa7e1cd8 0x0000000000000000
 a6 :  namespaces/test/arrayTest.csl 208.23
Dump at : namespaces/test/arrayTest.csl : 208.43 :
Dump : Address = 0x00007fbdaa7e1cd0 : Number = 16 :: (little endian dump)
0x00007fbdaa7e1cd0 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 

 =============================
Ar3.[34;49ma8[39;49m <:> csl compiled word
SourceCode for Ar3.[34;49ma8[39;49m :> 
[34;49m: a8 ( Ar3 a ) a.ar[1][2][1] a.ar[2][2][1] @ = nl "a8.a : " ps location a size @ dump a.ar[1][2][1] dup hp @ dup hp 0x89 _assert a.ar[2][2][1] dup hp @ dup hp 0x89 _assert ; [39;49m
Source code file location of [34;49ma8[39;49m : "namespaces/test/arrayTest.csl" : 210.2 :: we are now at : namespaces/test/arrayTest.csl : 221.16
Compiled with : optimizeOn, inlineOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xaad5d56a -- code size = 371 bytes
TypeSignature : Object 
 -----------------------------
Word :: Ar3.[34;49ma8[39;49m : definition = 0x00007fbdaad5d56a : disassembly at namespaces/test/arrayTest.csl : 221.16 :
[34;49m ..                                     : [39;49m[33;40ma8[39;49m[34;49m ( Ar3 a )  a.ar[1][2][1] a.ar[2][2][1] @ =  nl "a8.a : " ps location a size @ dump a.ar[1][2][1] d .. [39;49m[32;49m
0x7fbdaad5d56a    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fbdaad5d56e    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaad5d572    4981c608000000          add r14, 0x8                                           [39;49m
[34;49m ..                       : a8 ( Ar3 a )  [39;49m[33;40ma[39;49m[34;49m.ar[1][2][1] a.ar[2][2][1] @ =  nl "a8.a : " ps location a size @ dump a.ar[1][2][1] dup hp @ dup hp .. [39;49m[32;49m
0x7fbdaad5d579    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5d57d    4881c080000000          add rax, 0x80                                          [39;49m
[34;49m ..         : a8 ( Ar3 a )  a.ar[1][2][1] [39;49m[33;40ma[39;49m[34;49m.ar[2][2][1] @ =  nl "a8.a : " ps location a size @ dump a.ar[1][2][1] dup hp @ dup hp 0x89 _assert  .. [39;49m[32;49m
0x7fbdaad5d584    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5d588    4881c1c8000000          add rcx, 0xc8                                          [39;49m[32;49m
0x7fbdaad5d58f    488b09                  mov rcx, [rcx]                                         [39;49m
[34;49m .. r3 a )  a.ar[1][2][1] a.ar[2][2][1] @ [39;49m[33;40m=[39;49m[34;49m  nl "a8.a : " ps location a size @ dump a.ar[1][2][1] dup hp @ dup hp 0x89 _assert  a.ar[2][2][1] d .. [39;49m[32;49m
0x7fbdaad5d592    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. a )  a.ar[1][2][1] a.ar[2][2][1] @ =  [39;49m[33;40mnl[39;49m[34;49m "a8.a : " ps location a size @ dump a.ar[1][2][1] dup hp @ dup hp 0x89 _assert  a.ar[2][2][1] dup  .. [39;49m[32;49m
0x7fbdaad5d595    49b8e0903e1ebd550000    mov r8, 0x55bd1e3e90e0                                 [39;49m[32;49m
0x7fbdaad5d59f    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaad5d5a9    49ffd1                  call r9                    	< Io.[34;49mnewline[39;49m : 0x000055bd1e3e90e0[32;49m >[39;49m[39;49m
[34;49m ..   a.ar[1][2][1] a.ar[2][2][1] @ =  nl [39;49m[33;40m"[39;49m[34;49ma8.a : " ps location a size @ dump a.ar[1][2][1] dup hp @ dup hp 0x89 _assert  a.ar[2][2][1] dup hp  .. [39;49m[32;49m
0x7fbdaad5d5ac    48b899f7bfaabd7f0000    mov rax, 0x7fbdaabff799    	[32;49m< string : '[39;49m[39;49ma8.a : [39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fbdaad5d5b6    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5d5ba    498906                  mov [r14], rax                                         [39;49m
[34;49m .. 2][1] a.ar[2][2][1] @ =  nl "a8.a : " [39;49m[33;40mps[39;49m[34;49m location a size @ dump a.ar[1][2][1] dup hp @ dup hp 0x89 _assert  a.ar[2][2][1] dup hp @ dup hp 0 .. [39;49m[32;49m
0x7fbdaad5d5bd    49b97d63d5aabd7f0000    mov r9, 0x7fbdaad5637d                                 [39;49m[32;49m
0x7fbdaad5d5c7    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fbdaad5637d[32;49m >[39;49m[39;49m
[34;49m .. 1] a.ar[2][2][1] @ =  nl "a8.a : " ps [39;49m[33;40mlocation[39;49m[34;49m a size @ dump a.ar[1][2][1] dup hp @ dup hp 0x89 _assert  a.ar[2][2][1] dup hp @ dup hp 0x89 .. [39;49m[32;49m
0x7fbdaad5d5ca    49b91f70d5aabd7f0000    mov r9, 0x7fbdaad5701f                                 [39;49m[32;49m
0x7fbdaad5d5d4    49ffd1                  call r9                    	< System.[34;49mlocation[39;49m : 0x00007fbdaad5701f[32;49m >[39;49m[39;49m
[34;49m .. ][2][1] @ =  nl "a8.a : " ps location [39;49m[33;40ma[39;49m[34;49m size @ dump a.ar[1][2][1] dup hp @ dup hp 0x89 _assert  a.ar[2][2][1] dup hp @ dup hp 0x89 _assert  .. [39;49m[32;49m
0x7fbdaad5d5d7    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5d5db    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fbdaad5d5e2    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5d5e6    498906                  mov [r14], rax                                         [39;49m
[34;49m .. 2][1] @ =  nl "a8.a : " ps location a [39;49m[33;40msize[39;49m[34;49m @ dump a.ar[1][2][1] dup hp @ dup hp 0x89 _assert  a.ar[2][2][1] dup hp @ dup hp 0x89 _assert  ; .. [39;49m[32;49m
0x7fbdaad5d5e9    48b840d896aabd7f0000    mov rax, 0x7fbdaa96d840                                [39;49m[32;49m
0x7fbdaad5d5f3    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fbdaad5d5f6    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5d5fa    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  =  nl "a8.a : " ps location a size @ [39;49m[33;40mdump[39;49m[34;49m a.ar[1][2][1] dup hp @ dup hp 0x89 _assert  a.ar[2][2][1] dup hp @ dup hp 0x89 _assert  ;  .. [39;49m[32;49m
0x7fbdaad5d5fd    49b830b43e1ebd550000    mov r8, 0x55bd1e3eb430                                 [39;49m[32;49m
0x7fbdaad5d607    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaad5d611    49ffd1                  call r9                    	< Debug.[34;49mdump[39;49m : 0x000055bd1e3eb430[32;49m >[39;49m[39;49m
[34;49m .. l "a8.a : " ps location a size @ dump [39;49m[33;40ma[39;49m[34;49m.ar[1][2][1] dup hp @ dup hp 0x89 _assert  a.ar[2][2][1] dup hp @ dup hp 0x89 _assert  ;  .. [39;49m[32;49m
0x7fbdaad5d614    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5d618    4881c080000000          add rax, 0x80                                          [39;49m[32;49m
0x7fbdaad5d61f    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fbdaad5d623    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  location a size @ dump a.ar[1][2][1] [39;49m[33;40mdup[39;49m[34;49m hp @ dup hp 0x89 _assert  a.ar[2][2][1] dup hp @ dup hp 0x89 _assert  ;  .. [39;49m[32;49m
0x7fbdaad5d626    498946f8                mov [r14-0x8], rax                                     [39;49m
[34;49m .. ation a size @ dump a.ar[1][2][1] dup [39;49m[33;40mhp[39;49m[34;49m @ dup hp 0x89 _assert  a.ar[2][2][1] dup hp @ dup hp 0x89 _assert  ;  .. [39;49m[32;49m
0x7fbdaad5d62a    49b98764d5aabd7f0000    mov r9, 0x7fbdaad56487                                 [39;49m[32;49m
0x7fbdaad5d634    49ffd1                  call r9                    	< Int.[34;49mhp[39;49m : 0x00007fbdaad56487[32;49m >[39;49m[39;49m
[34;49m .. on a size @ dump a.ar[1][2][1] dup hp [39;49m[33;40m@[39;49m[34;49m dup hp 0x89 _assert  a.ar[2][2][1] dup hp @ dup hp 0x89 _assert  ;  .. [39;49m[32;49m
0x7fbdaad5d637    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fbdaad5d63a    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fbdaad5d63d    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  a size @ dump a.ar[1][2][1] dup hp @ [39;49m[33;40mdup[39;49m[34;49m hp 0x89 _assert  a.ar[2][2][1] dup hp @ dup hp 0x89 _assert  ;  .. [39;49m[32;49m
0x7fbdaad5d640    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fbdaad5d643    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5d647    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ize @ dump a.ar[1][2][1] dup hp @ dup [39;49m[33;40mhp[39;49m[34;49m 0x89 _assert  a.ar[2][2][1] dup hp @ dup hp 0x89 _assert  ;  .. [39;49m[32;49m
0x7fbdaad5d64a    49b98764d5aabd7f0000    mov r9, 0x7fbdaad56487                                 [39;49m[32;49m
0x7fbdaad5d654    49ffd1                  call r9                    	< Int.[34;49mhp[39;49m : 0x00007fbdaad56487[32;49m >[39;49m[39;49m
[34;49m ..  @ dump a.ar[1][2][1] dup hp @ dup hp [39;49m[33;40m0x89[39;49m[34;49m _assert  a.ar[2][2][1] dup hp @ dup hp 0x89 _assert  ;  .. [39;49m[32;49m
0x7fbdaad5d657    48c7c089000000          mov rax, 0x89                                          [39;49m[32;49m
0x7fbdaad5d65e    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5d662    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaad5d665    49b9df7cd5aabd7f0000    mov r9, 0x7fbdaad57cdf                                 [39;49m[32;49m
0x7fbdaad5d66f    49ffd1                  call r9                    	< System.[34;49m_assert0[39;49m : 0x00007fbdaad57cdf[32;49m >[39;49m[39;49m
[34;49m .. ][2][1] dup hp @ dup hp 0x89 _assert  [39;49m[33;40ma[39;49m[34;49m.ar[2][2][1] dup hp @ dup hp 0x89 _assert  ;  .. [39;49m[32;49m
0x7fbdaad5d672    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5d676    4881c0c8000000          add rax, 0xc8                                          [39;49m[32;49m
0x7fbdaad5d67d    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fbdaad5d681    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  @ dup hp 0x89 _assert  a.ar[2][2][1] [39;49m[33;40mdup[39;49m[34;49m hp @ dup hp 0x89 _assert  ;  .. [39;49m[32;49m
0x7fbdaad5d684    498946f8                mov [r14-0x8], rax                                     [39;49m
[34;49m .. up hp 0x89 _assert  a.ar[2][2][1] dup [39;49m[33;40mhp[39;49m[34;49m @ dup hp 0x89 _assert  ;  .. [39;49m[32;49m
0x7fbdaad5d688    49b98764d5aabd7f0000    mov r9, 0x7fbdaad56487                                 [39;49m[32;49m
0x7fbdaad5d692    49ffd1                  call r9                    	< Int.[34;49mhp[39;49m : 0x00007fbdaad56487[32;49m >[39;49m[39;49m
[34;49m .. hp 0x89 _assert  a.ar[2][2][1] dup hp [39;49m[33;40m@[39;49m[34;49m dup hp 0x89 _assert  ;  .. [39;49m[32;49m
0x7fbdaad5d695    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fbdaad5d698    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fbdaad5d69b    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  0x89 _assert  a.ar[2][2][1] dup hp @ [39;49m[33;40mdup[39;49m[34;49m hp 0x89 _assert  ;  .. [39;49m[32;49m
0x7fbdaad5d69e    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fbdaad5d6a1    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5d6a5    498906                  mov [r14], rax                                         [39;49m
[34;49m .. 9 _assert  a.ar[2][2][1] dup hp @ dup [39;49m[33;40mhp[39;49m[34;49m 0x89 _assert  ;  .. [39;49m[32;49m
0x7fbdaad5d6a8    49b98764d5aabd7f0000    mov r9, 0x7fbdaad56487                                 [39;49m[32;49m
0x7fbdaad5d6b2    49ffd1                  call r9                    	< Int.[34;49mhp[39;49m : 0x00007fbdaad56487[32;49m >[39;49m[39;49m
[34;49m .. assert  a.ar[2][2][1] dup hp @ dup hp [39;49m[33;40m0x89[39;49m[34;49m _assert  ;  .. [39;49m[32;49m
0x7fbdaad5d6b5    48c7c089000000          mov rax, 0x89                                          [39;49m[32;49m
0x7fbdaad5d6bc    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5d6c0    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaad5d6c3    49b9df7cd5aabd7f0000    mov r9, 0x7fbdaad57cdf                                 [39;49m[32;49m
0x7fbdaad5d6cd    49ffd1                  call r9                    	< System.[34;49m_assert0[39;49m : 0x00007fbdaad57cdf[32;49m >[39;49m[39;49m
[34;49m .. ][2][1] dup hp @ dup hp 0x89 _assert  [39;49m[33;40m;[39;49m[34;49m  .. [39;49m[32;49m
0x7fbdaad5d6d0    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5d6d4    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaad5d6d8    4983ee08                sub r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5d6dc    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'a8' :: codeSize = 370
Word : 0x00007fbdaa96e0b8 :: Compiled at : 0x00007fbdaad5d56a
 =============================
::> 'wdiss' was called at namespaces/test/arrayTest.csl 221.16 <::
 0x00007fbdaa7e1d20 137 a6 :  namespaces/test/arrayTest.csl 224.20
Dump at : namespaces/test/arrayTest.csl : 224.43 :
Dump : Address = 0x00007fbdaa7e1d20 : Number = 16 :: (little endian dump)
0x00007fbdaa7e1d20 :  89 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 

 a8.a :  namespaces/test/arrayTest.csl 225.6
Dump at : namespaces/test/arrayTest.csl : 225.6 :
Dump : Address = 0x00007fbdaa7e1c58 : Number = 144 :: (little endian dump)
0x00007fbdaa7e1c58 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7e1c68 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7e1c78 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7e1c88 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7e1c98 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7e1ca8 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7e1cb8 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7e1cc8 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7e1cd8 :  89 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
 0x00007fbdaa7e1cd8 0x0000000000000089 0x00007fbdaa7e1d20 0x0000000000000089 a6 :  namespaces/test/arrayTest.csl 226.20
Dump at : namespaces/test/arrayTest.csl : 226.43 :
Dump : Address = 0x00007fbdaa7e1d20 : Number = 16 :: (little endian dump)
0x00007fbdaa7e1d20 :  89 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 

 =============================
Ar3.[34;49ma7[39;49m <:> csl compiled word, prefix
SourceCode for Ar3.[34;49ma7[39;49m :> 
[34;49m: a7 ( n, m, o, Ar3 a ) a.ar[n @ 1 +][m @][o @] a.ar[n @ 2 +][m @][o @] @ = nl "a7.a : " ps location a.ar[n @ 1 +][m @][o @] 16 dump a.ar[n @ 1 +][m @][o @] @ dup hp 0x89 s _assert ;; [39;49m
Source code file location of [34;49ma7[39;49m : "namespaces/test/arrayTest.csl" : 227.2 :: we are now at : namespaces/test/arrayTest.csl : 233.16
Compiled with : optimizeOn, inlineOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xaad5d6e2 -- code size = 480 bytes
TypeSignature : 
 -----------------------------
Word :: Ar3.[34;49ma7[39;49m : definition = 0x00007fbdaad5d6e2 : disassembly at namespaces/test/arrayTest.csl : 233.16 :
[34;49m ..                                     : [39;49m[33;40ma7[39;49m[34;49m ( n, m, o, Ar3 a )  a.ar[n @ 1 +][m @][o @] a.ar[n @ 2 +][m @][o @] @ =  nl "a7.a : " ps location  .. [39;49m[32;49m
0x7fbdaad5d6e2    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fbdaad5d6e6    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaad5d6ea    4981c608000000          add r14, 0x8                                           [39;49m
[34;49m ..              : a7 ( n, m, o, Ar3 a )  [39;49m[33;40ma[39;49m[34;49m.ar[n @ 1 +][m @][o @] a.ar[n @ 2 +][m @][o @] @ =  nl "a7.a : " ps location a.ar[n @ 1 +][m @][o @] .. [39;49m[32;49m
0x7fbdaad5d6f1    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5d6f5    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fbdaad5d6fc    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5d700    498906                  mov [r14], rax                                         [39;49m
[34;49m ..         : a7 ( n, m, o, Ar3 a )  a.ar[[39;49m[33;40mn[39;49m[34;49m @ 1 +][m @][o @] a.ar[n @ 2 +][m @][o @] @ =  nl "a7.a : " ps location a.ar[n @ 1 +][m @][o @] 16 d .. [39;49m[32;49m
0x7fbdaad5d703    498b47e0                mov rax, [r15-0x20]                                    [39;49m
[34;49m ..     : a7 ( n, m, o, Ar3 a )  a.ar[n @ [39;49m[33;40m1[39;49m[34;49m +][m @][o @] a.ar[n @ 2 +][m @][o @] @ =  nl "a7.a : " ps location a.ar[n @ 1 +][m @][o @] 16 dump  .. [39;49m[32;49m
0x7fbdaad5d707    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m ..   : a7 ( n, m, o, Ar3 a )  a.ar[n @ 1 [39;49m[33;40m+[39;49m[34;49m][m @][o @] a.ar[n @ 2 +][m @][o @] @ =  nl "a7.a : " ps location a.ar[n @ 1 +][m @][o @] 16 dump a. .. [39;49m[32;49m
0x7fbdaad5d70e    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fbdaad5d711    486bc048                imul rax, rax, 0x48                                    [39;49m[32;49m
0x7fbdaad5d715    490106                  add [r14], rax                                         [39;49m
[34;49m   : a7 ( n, m, o, Ar3 a )  a.ar[n @ 1 +][[39;49m[33;40mm[39;49m[34;49m @][o @] a.ar[n @ 2 +][m @][o @] @ =  nl "a7.a : " ps location a.ar[n @ 1 +][m @][o @] 16 dump a.ar[ .. [39;49m[32;49m
0x7fbdaad5d718    498b47e8                mov rax, [r15-0x18]                                    [39;49m[32;49m
0x7fbdaad5d71c    486bc018                imul rax, rax, 0x18                                    [39;49m[32;49m
0x7fbdaad5d720    490106                  add [r14], rax                                         [39;49m
[34;49m ..  n, m, o, Ar3 a )  a.ar[n @ 1 +][m @][[39;49m[33;40mo[39;49m[34;49m @] a.ar[n @ 2 +][m @][o @] @ =  nl "a7.a : " ps location a.ar[n @ 1 +][m @][o @] 16 dump a.ar[n @ 1 .. [39;49m[32;49m
0x7fbdaad5d723    498b47f0                mov rax, [r15-0x10]                                    [39;49m[32;49m
0x7fbdaad5d727    486bc008                imul rax, rax, 0x8                                     [39;49m[32;49m
0x7fbdaad5d72b    490106                  add [r14], rax                                         [39;49m
[34;49m .. , o, Ar3 a )  a.ar[n @ 1 +][m @][o @] [39;49m[33;40ma[39;49m[34;49m.ar[n @ 2 +][m @][o @] @ =  nl "a7.a : " ps location a.ar[n @ 1 +][m @][o @] 16 dump a.ar[n @ 1 +][m .. [39;49m[32;49m
0x7fbdaad5d72e    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5d732    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fbdaad5d739    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5d73d    498906                  mov [r14], rax                                         [39;49m
[34;49m .. Ar3 a )  a.ar[n @ 1 +][m @][o @] a.ar[[39;49m[33;40mn[39;49m[34;49m @ 2 +][m @][o @] @ =  nl "a7.a : " ps location a.ar[n @ 1 +][m @][o @] 16 dump a.ar[n @ 1 +][m @][o .. [39;49m[32;49m
0x7fbdaad5d740    498b47e0                mov rax, [r15-0x20]                                    [39;49m
[34;49m .. a )  a.ar[n @ 1 +][m @][o @] a.ar[n @ [39;49m[33;40m2[39;49m[34;49m +][m @][o @] @ =  nl "a7.a : " ps location a.ar[n @ 1 +][m @][o @] 16 dump a.ar[n @ 1 +][m @][o @]  .. [39;49m[32;49m
0x7fbdaad5d744    48c7c102000000          mov rcx, 0x2                                           [39;49m
[34;49m .. )  a.ar[n @ 1 +][m @][o @] a.ar[n @ 2 [39;49m[33;40m+[39;49m[34;49m][m @][o @] @ =  nl "a7.a : " ps location a.ar[n @ 1 +][m @][o @] 16 dump a.ar[n @ 1 +][m @][o @] @  .. [39;49m[32;49m
0x7fbdaad5d74b    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fbdaad5d74e    486bc048                imul rax, rax, 0x48                                    [39;49m[32;49m
0x7fbdaad5d752    490106                  add [r14], rax                                         [39;49m
[34;49m .. a.ar[n @ 1 +][m @][o @] a.ar[n @ 2 +][[39;49m[33;40mm[39;49m[34;49m @][o @] @ =  nl "a7.a : " ps location a.ar[n @ 1 +][m @][o @] 16 dump a.ar[n @ 1 +][m @][o @] @ dup .. [39;49m[32;49m
0x7fbdaad5d755    498b47e8                mov rax, [r15-0x18]                                    [39;49m[32;49m
0x7fbdaad5d759    486bc018                imul rax, rax, 0x18                                    [39;49m[32;49m
0x7fbdaad5d75d    490106                  add [r14], rax                                         [39;49m
[34;49m .. n @ 1 +][m @][o @] a.ar[n @ 2 +][m @][[39;49m[33;40mo[39;49m[34;49m @] @ =  nl "a7.a : " ps location a.ar[n @ 1 +][m @][o @] 16 dump a.ar[n @ 1 +][m @][o @] @ dup hp 0 .. [39;49m[32;49m
0x7fbdaad5d760    498b47f0                mov rax, [r15-0x10]                                    [39;49m[32;49m
0x7fbdaad5d764    486bc008                imul rax, rax, 0x8                                     [39;49m[32;49m
0x7fbdaad5d768    490106                  add [r14], rax                                         [39;49m
[34;49m ..  +][m @][o @] a.ar[n @ 2 +][m @][o @] [39;49m[33;40m@[39;49m[34;49m =  nl "a7.a : " ps location a.ar[n @ 1 +][m @][o @] 16 dump a.ar[n @ 1 +][m @][o @] @ dup hp 0x89 s .. [39;49m[32;49m
0x7fbdaad5d76b    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fbdaad5d76e    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fbdaad5d771    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ][m @][o @] a.ar[n @ 2 +][m @][o @] @ [39;49m[33;40m=[39;49m[34;49m  nl "a7.a : " ps location a.ar[n @ 1 +][m @][o @] 16 dump a.ar[n @ 1 +][m @][o @] @ dup hp 0x89 s _ .. [39;49m[32;49m
0x7fbdaad5d774    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fbdaad5d777    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fbdaad5d77b    488908                  mov [rax], rcx                                         [39;49m[32;49m
0x7fbdaad5d77e    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m ..  @][o @] a.ar[n @ 2 +][m @][o @] @ =  [39;49m[33;40mnl[39;49m[34;49m "a7.a : " ps location a.ar[n @ 1 +][m @][o @] 16 dump a.ar[n @ 1 +][m @][o @] @ dup hp 0x89 s _ass .. [39;49m[32;49m
0x7fbdaad5d782    49b8e0903e1ebd550000    mov r8, 0x55bd1e3e90e0                                 [39;49m[32;49m
0x7fbdaad5d78c    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaad5d796    49ffd1                  call r9                    	< Io.[34;49mnewline[39;49m : 0x000055bd1e3e90e0[32;49m >[39;49m[39;49m
[34;49m .. [o @] a.ar[n @ 2 +][m @][o @] @ =  nl [39;49m[33;40m"[39;49m[34;49ma7.a : " ps location a.ar[n @ 1 +][m @][o @] 16 dump a.ar[n @ 1 +][m @][o @] @ dup hp 0x89 s _assert .. [39;49m[32;49m
0x7fbdaad5d799    48b8e1f8bfaabd7f0000    mov rax, 0x7fbdaabff8e1    	[32;49m< string : '[39;49m[39;49ma7.a : [39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fbdaad5d7a3    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5d7a7    498906                  mov [r14], rax                                         [39;49m
[34;49m .. [n @ 2 +][m @][o @] @ =  nl "a7.a : " [39;49m[33;40mps[39;49m[34;49m location a.ar[n @ 1 +][m @][o @] 16 dump a.ar[n @ 1 +][m @][o @] @ dup hp 0x89 s _assert ;;  .. [39;49m[32;49m
0x7fbdaad5d7aa    49b97d63d5aabd7f0000    mov r9, 0x7fbdaad5637d                                 [39;49m[32;49m
0x7fbdaad5d7b4    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fbdaad5637d[32;49m >[39;49m[39;49m
[34;49m .. @ 2 +][m @][o @] @ =  nl "a7.a : " ps [39;49m[33;40mlocation[39;49m[34;49m a.ar[n @ 1 +][m @][o @] 16 dump a.ar[n @ 1 +][m @][o @] @ dup hp 0x89 s _assert ;;  .. [39;49m[32;49m
0x7fbdaad5d7b7    49b91f70d5aabd7f0000    mov r9, 0x7fbdaad5701f                                 [39;49m[32;49m
0x7fbdaad5d7c1    49ffd1                  call r9                    	< System.[34;49mlocation[39;49m : 0x00007fbdaad5701f[32;49m >[39;49m[39;49m
[34;49m .. @][o @] @ =  nl "a7.a : " ps location [39;49m[33;40ma[39;49m[34;49m.ar[n @ 1 +][m @][o @] 16 dump a.ar[n @ 1 +][m @][o @] @ dup hp 0x89 s _assert ;;  .. [39;49m[32;49m
0x7fbdaad5d7c4    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5d7c8    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fbdaad5d7cf    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5d7d3    498906                  mov [r14], rax                                         [39;49m
[34;49m .. @] @ =  nl "a7.a : " ps location a.ar[[39;49m[33;40mn[39;49m[34;49m @ 1 +][m @][o @] 16 dump a.ar[n @ 1 +][m @][o @] @ dup hp 0x89 s _assert ;;  .. [39;49m[32;49m
0x7fbdaad5d7d6    498b47e0                mov rax, [r15-0x20]                                    [39;49m
[34;49m ..  =  nl "a7.a : " ps location a.ar[n @ [39;49m[33;40m1[39;49m[34;49m +][m @][o @] 16 dump a.ar[n @ 1 +][m @][o @] @ dup hp 0x89 s _assert ;;  .. [39;49m[32;49m
0x7fbdaad5d7da    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m ..   nl "a7.a : " ps location a.ar[n @ 1 [39;49m[33;40m+[39;49m[34;49m][m @][o @] 16 dump a.ar[n @ 1 +][m @][o @] @ dup hp 0x89 s _assert ;;  .. [39;49m[32;49m
0x7fbdaad5d7e1    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fbdaad5d7e4    486bc048                imul rax, rax, 0x48                                    [39;49m[32;49m
0x7fbdaad5d7e8    490106                  add [r14], rax                                         [39;49m
[34;49m .. l "a7.a : " ps location a.ar[n @ 1 +][[39;49m[33;40mm[39;49m[34;49m @][o @] 16 dump a.ar[n @ 1 +][m @][o @] @ dup hp 0x89 s _assert ;;  .. [39;49m[32;49m
0x7fbdaad5d7eb    498b47e8                mov rax, [r15-0x18]                                    [39;49m[32;49m
0x7fbdaad5d7ef    486bc018                imul rax, rax, 0x18                                    [39;49m[32;49m
0x7fbdaad5d7f3    490106                  add [r14], rax                                         [39;49m
[34;49m .. .a : " ps location a.ar[n @ 1 +][m @][[39;49m[33;40mo[39;49m[34;49m @] 16 dump a.ar[n @ 1 +][m @][o @] @ dup hp 0x89 s _assert ;;  .. [39;49m[32;49m
0x7fbdaad5d7f6    498b47f0                mov rax, [r15-0x10]                                    [39;49m[32;49m
0x7fbdaad5d7fa    486bc008                imul rax, rax, 0x8                                     [39;49m[32;49m
0x7fbdaad5d7fe    490106                  add [r14], rax                                         [39;49m
[34;49m .. " ps location a.ar[n @ 1 +][m @][o @] [39;49m[33;40m16[39;49m[34;49m dump a.ar[n @ 1 +][m @][o @] @ dup hp 0x89 s _assert ;;  .. [39;49m[32;49m
0x7fbdaad5d801    48c7c010000000          mov rax, 0x10                                          [39;49m[32;49m
0x7fbdaad5d808    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5d80c    498906                  mov [r14], rax                                         [39;49m
[34;49m .. s location a.ar[n @ 1 +][m @][o @] 16 [39;49m[33;40mdump[39;49m[34;49m a.ar[n @ 1 +][m @][o @] @ dup hp 0x89 s _assert ;;  .. [39;49m[32;49m
0x7fbdaad5d80f    49b830b43e1ebd550000    mov r8, 0x55bd1e3eb430                                 [39;49m[32;49m
0x7fbdaad5d819    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaad5d823    49ffd1                  call r9                    	< Debug.[34;49mdump[39;49m : 0x000055bd1e3eb430[32;49m >[39;49m[39;49m
[34;49m .. ation a.ar[n @ 1 +][m @][o @] 16 dump [39;49m[33;40ma[39;49m[34;49m.ar[n @ 1 +][m @][o @] @ dup hp 0x89 s _assert ;;  .. [39;49m[32;49m
0x7fbdaad5d826    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5d82a    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fbdaad5d831    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5d835    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  a.ar[n @ 1 +][m @][o @] 16 dump a.ar[[39;49m[33;40mn[39;49m[34;49m @ 1 +][m @][o @] @ dup hp 0x89 s _assert ;;  .. [39;49m[32;49m
0x7fbdaad5d838    498b47e0                mov rax, [r15-0x20]                                    [39;49m
[34;49m .. r[n @ 1 +][m @][o @] 16 dump a.ar[n @ [39;49m[33;40m1[39;49m[34;49m +][m @][o @] @ dup hp 0x89 s _assert ;;  .. [39;49m[32;49m
0x7fbdaad5d83c    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m .. n @ 1 +][m @][o @] 16 dump a.ar[n @ 1 [39;49m[33;40m+[39;49m[34;49m][m @][o @] @ dup hp 0x89 s _assert ;;  .. [39;49m[32;49m
0x7fbdaad5d843    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fbdaad5d846    486bc048                imul rax, rax, 0x48                                    [39;49m[32;49m
0x7fbdaad5d84a    490106                  add [r14], rax                                         [39;49m
[34;49m ..  1 +][m @][o @] 16 dump a.ar[n @ 1 +][[39;49m[33;40mm[39;49m[34;49m @][o @] @ dup hp 0x89 s _assert ;;  .. [39;49m[32;49m
0x7fbdaad5d84d    498b47e8                mov rax, [r15-0x18]                                    [39;49m[32;49m
0x7fbdaad5d851    486bc018                imul rax, rax, 0x18                                    [39;49m[32;49m
0x7fbdaad5d855    490106                  add [r14], rax                                         [39;49m
[34;49m .. [m @][o @] 16 dump a.ar[n @ 1 +][m @][[39;49m[33;40mo[39;49m[34;49m @] @ dup hp 0x89 s _assert ;;  .. [39;49m[32;49m
0x7fbdaad5d858    498b47f0                mov rax, [r15-0x10]                                    [39;49m[32;49m
0x7fbdaad5d85c    486bc008                imul rax, rax, 0x8                                     [39;49m[32;49m
0x7fbdaad5d860    490106                  add [r14], rax                                         [39;49m
[34;49m .. [o @] 16 dump a.ar[n @ 1 +][m @][o @] [39;49m[33;40m@[39;49m[34;49m dup hp 0x89 s _assert ;;  .. [39;49m[32;49m
0x7fbdaad5d863    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fbdaad5d866    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fbdaad5d869    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  @] 16 dump a.ar[n @ 1 +][m @][o @] @ [39;49m[33;40mdup[39;49m[34;49m hp 0x89 s _assert ;;  .. [39;49m[32;49m
0x7fbdaad5d86c    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fbdaad5d86f    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5d873    498906                  mov [r14], rax                                         [39;49m
[34;49m .. 16 dump a.ar[n @ 1 +][m @][o @] @ dup [39;49m[33;40mhp[39;49m[34;49m 0x89 s _assert ;;  .. [39;49m[32;49m
0x7fbdaad5d876    49b98764d5aabd7f0000    mov r9, 0x7fbdaad56487                                 [39;49m[32;49m
0x7fbdaad5d880    49ffd1                  call r9                    	< Int.[34;49mhp[39;49m : 0x00007fbdaad56487[32;49m >[39;49m[39;49m
[34;49m .. dump a.ar[n @ 1 +][m @][o @] @ dup hp [39;49m[33;40m0x89[39;49m[34;49m s _assert ;;  .. [39;49m[32;49m
0x7fbdaad5d883    48c7c089000000          mov rax, 0x89                                          [39;49m[32;49m
0x7fbdaad5d88a    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5d88e    498906                  mov [r14], rax                                         [39;49m
[34;49m .. a.ar[n @ 1 +][m @][o @] @ dup hp 0x89 [39;49m[33;40ms[39;49m[34;49m _assert ;;  .. [39;49m[32;49m
0x7fbdaad5d891    49b8e0363c1ebd550000    mov r8, 0x55bd1e3c36e0                                 [39;49m[32;49m
0x7fbdaad5d89b    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaad5d8a5    49ffd1                  call r9                    	< Debug.[34;49mstack[39;49m : 0x000055bd1e3c36e0[32;49m >[39;49m[39;49m[32;49m
0x7fbdaad5d8a8    49b9df7cd5aabd7f0000    mov r9, 0x7fbdaad57cdf                                 [39;49m[32;49m
0x7fbdaad5d8b2    49ffd1                  call r9                    	< System.[34;49m_assert0[39;49m : 0x00007fbdaad57cdf[32;49m >[39;49m[39;49m
[34;49m ..  +][m @][o @] @ dup hp 0x89 s _assert [39;49m[33;40m;;[39;49m[34;49m  .. [39;49m[32;49m
0x7fbdaad5d8b5    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5d8b9    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaad5d8bd    4983ee20                sub r14, 0x20                                          [39;49m[32;49m
0x7fbdaad5d8c1    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'a7' :: codeSize = 479
Word : 0x00007fbdaa971b98 :: Compiled at : 0x00007fbdaad5d6e2
 =============================
::> 'wdiss' was called at namespaces/test/arrayTest.csl 233.16 <::
 a6 :  namespaces/test/arrayTest.csl 235.20
Dump at : namespaces/test/arrayTest.csl : 235.43 :
Dump : Address = 0x00007fbdaa7e1d20 : Number = 16 :: (little endian dump)
0x00007fbdaa7e1d20 :  89 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 

 a7.a :  namespaces/test/arrayTest.csl 237.12
Dump at : namespaces/test/arrayTest.csl : 237.12 :
Dump : Address = 0x00007fbdaa7e1cd8 : Number = 16 :: (little endian dump)
0x00007fbdaa7e1cd8 :  89 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
 0x0000000000000089
DataStack at : [34;49mnamespaces/test/arrayTest.csl : 237.12[39;49m :
DataStack depth =  10 : Dsp (R14) = Top = 0x00007fbdab0efa90, InitialTos = 0x00007fbdab0efa40, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fbdab0efa90 > = 0x0000000000000089	
  DataStack   [  -1 ] < 0x00007fbdab0efa88 > = 0x0000000000000089	
  DataStack   [  -2 ] < 0x00007fbdab0efa80 > = 0x0000000000000000	
  DataStack   [  -3 ] < 0x00007fbdab0efa78 > = 0x00007fbdaa7e1c58	
  DataStack   [  -4 ] < 0x00007fbdab0efa70 > = 0x0000000000000001	
  DataStack   [  -5 ] < 0x00007fbdab0efa68 > = 0x0000000000000002	
  DataStack   [  -6 ] < 0x00007fbdab0efa60 > = 0x0000000000000000	
  DataStack   [  -7 ] < 0x00007fbdab0efa58 > = 0x0000000000000005	
  DataStack   [  -8 ] < 0x00007fbdab0efa50 > = 0x0000000000000005	
  DataStack   [  -9 ] < 0x00007fbdab0efa48 > = 0x0000000000000005	
 a6 :  namespaces/test/arrayTest.csl 238.20
Dump at : namespaces/test/arrayTest.csl : 238.38 :
Dump : Address = 0x00007fbdaa7e1c58 : Number = 144 :: (little endian dump)
0x00007fbdaa7e1c58 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7e1c68 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7e1c78 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7e1c88 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7e1c98 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7e1ca8 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7e1cb8 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7e1cc8 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa7e1cd8 :  89 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 

 =============================
Ar9.[34;49ma9[39;49m <:> csl compiled word
SourceCode for Ar9.[34;49ma9[39;49m :> 
[34;49m: a9 ( Ar9 a | x y z ) x 0 = y 0 = z 0 = { z @ 256 < } { { y @ 256 < } { { x @ 256 < } { a.ar [z @][y @][x @ ] x @ = x ++ } while x 0 = y ++ } while x 0 = y 0 = z ++ } while adump ( 0 246 67 a ) ; [39;49m
Source code file location of [34;49ma9[39;49m : "namespaces/test/arrayTest.csl" : 261.2 :: we are now at : namespaces/test/arrayTest.csl : 290.16
Compiled with : optimizeOn, inlineOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xaad5dad5 -- code size = 437 bytes
TypeSignature : Object 
 -----------------------------
Word :: Ar9.[34;49ma9[39;49m : definition = 0x00007fbdaad5dad5 : disassembly at namespaces/test/arrayTest.csl : 290.16 :
[34;49m ..                                     : [39;49m[33;40ma9[39;49m[34;49m ( Ar9 a | x y z )  x 0 = y 0 = z 0 =  { z @ 256 < } { { y @ 256 < } { { x @ 256 < } { a.ar [z @][y .. [39;49m[32;49m
0x7fbdaad5dad5    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fbdaad5dad9    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaad5dadd    4981c620000000          add r14, 0x20                                          [39;49m
[34;49m ..               : a9 ( Ar9 a | x y z )  [39;49m[33;40mx[39;49m[34;49m 0 = y 0 = z 0 =  { z @ 256 < } { { y @ 256 < } { { x @ 256 < } { a.ar [z @][y @][x @ ] x @ = x ++   .. [39;49m[32;49m
0x7fbdaad5dae4    498d4708                lea rax, [r15+0x8]                                     [39;49m
[34;49m ..             : a9 ( Ar9 a | x y z )  x [39;49m[33;40m0[39;49m[34;49m = y 0 = z 0 =  { z @ 256 < } { { y @ 256 < } { { x @ 256 < } { a.ar [z @][y @][x @ ] x @ = x ++  }  .. [39;49m[32;49m
0x7fbdaad5dae8    48c7c100000000          mov rcx, 0x0                                           [39;49m
[34;49m ..           : a9 ( Ar9 a | x y z )  x 0 [39;49m[33;40m=[39;49m[34;49m y 0 = z 0 =  { z @ 256 < } { { y @ 256 < } { { x @ 256 < } { a.ar [z @][y @][x @ ] x @ = x ++  } wh .. [39;49m[32;49m
0x7fbdaad5daef    488908                  mov [rax], rcx                                         [39;49m
[34;49m ..         : a9 ( Ar9 a | x y z )  x 0 = [39;49m[33;40my[39;49m[34;49m 0 = z 0 =  { z @ 256 < } { { y @ 256 < } { { x @ 256 < } { a.ar [z @][y @][x @ ] x @ = x ++  } whil .. [39;49m[32;49m
0x7fbdaad5daf2    498d4710                lea rax, [r15+0x10]                                    [39;49m
[34;49m ..       : a9 ( Ar9 a | x y z )  x 0 = y [39;49m[33;40m0[39;49m[34;49m = z 0 =  { z @ 256 < } { { y @ 256 < } { { x @ 256 < } { a.ar [z @][y @][x @ ] x @ = x ++  } while  .. [39;49m[32;49m
0x7fbdaad5daf6    48c7c100000000          mov rcx, 0x0                                           [39;49m
[34;49m ..     : a9 ( Ar9 a | x y z )  x 0 = y 0 [39;49m[33;40m=[39;49m[34;49m z 0 =  { z @ 256 < } { { y @ 256 < } { { x @ 256 < } { a.ar [z @][y @][x @ ] x @ = x ++  } while  x .. [39;49m[32;49m
0x7fbdaad5dafd    488908                  mov [rax], rcx                                         [39;49m
[34;49m ..   : a9 ( Ar9 a | x y z )  x 0 = y 0 = [39;49m[33;40mz[39;49m[34;49m 0 =  { z @ 256 < } { { y @ 256 < } { { x @ 256 < } { a.ar [z @][y @][x @ ] x @ = x ++  } while  x 0 .. [39;49m[32;49m
0x7fbdaad5db00    498d4718                lea rax, [r15+0x18]                                    [39;49m
[34;49m .. : a9 ( Ar9 a | x y z )  x 0 = y 0 = z [39;49m[33;40m0[39;49m[34;49m =  { z @ 256 < } { { y @ 256 < } { { x @ 256 < } { a.ar [z @][y @][x @ ] x @ = x ++  } while  x 0 = .. [39;49m[32;49m
0x7fbdaad5db04    48c7c100000000          mov rcx, 0x0                                           [39;49m
[34;49m  : a9 ( Ar9 a | x y z )  x 0 = y 0 = z 0 [39;49m[33;40m=[39;49m[34;49m  { z @ 256 < } { { y @ 256 < } { { x @ 256 < } { a.ar [z @][y @][x @ ] x @ = x ++  } while  x 0 = y .. [39;49m[32;49m
0x7fbdaad5db0b    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. Ar9 a | x y z )  x 0 = y 0 = z 0 =  { [39;49m[33;40mz[39;49m[34;49m @ 256 < } { { y @ 256 < } { { x @ 256 < } { a.ar [z @][y @][x @ ] x @ = x ++  } while  x 0 = y ++   .. [39;49m[32;49m
0x7fbdaad5db0e    498b4718                mov rax, [r15+0x18]                                    [39;49m
[34;49m .. x y z )  x 0 = y 0 = z 0 =  { z @ 256 [39;49m[33;40m<[39;49m[34;49m } { { y @ 256 < } { { x @ 256 < } { a.ar [z @][y @][x @ ] x @ = x ++  } while  x 0 = y ++  } while  .. [39;49m[32;49m
0x7fbdaad5db12    4881f800010000          cmp rax, 0x100                                         [39;49m
[34;49m .. a | x y z )  x 0 = y 0 = z 0 =  { z @ [39;49m[33;40m256[39;49m[34;49m < } { { y @ 256 < } { { x @ 256 < } { a.ar [z @][y @][x @ ] x @ = x ++  } while  x 0 = y ++  } wh .. [39;49m[32;49m
0x7fbdaad5db19    0f8d15010000            jge 0x7fbdaad5dc34         	< Ar9.[34;49ma9[39;49m+351[32;49m >[39;49m[39;49m
[34;49m ..  x 0 = y 0 = z 0 =  { z @ 256 < } { { [39;49m[33;40my[39;49m[34;49m @ 256 < } { { x @ 256 < } { a.ar [z @][y @][x @ ] x @ = x ++  } while  x 0 = y ++  } while x 0 = y  .. [39;49m[32;49m
0x7fbdaad5db1f    498b4710                mov rax, [r15+0x10]                                    [39;49m
[34;49m ..  0 = z 0 =  { z @ 256 < } { { y @ 256 [39;49m[33;40m<[39;49m[34;49m } { { x @ 256 < } { a.ar [z @][y @][x @ ] x @ = x ++  } while  x 0 = y ++  } while x 0 = y 0 = z ++ .. [39;49m[32;49m
0x7fbdaad5db23    4881f800010000          cmp rax, 0x100                                         [39;49m
[34;49m ..  = y 0 = z 0 =  { z @ 256 < } { { y @ [39;49m[33;40m256[39;49m[34;49m < } { { x @ 256 < } { a.ar [z @][y @][x @ ] x @ = x ++  } while  x 0 = y ++  } while x 0 = y 0 =  .. [39;49m[32;49m
0x7fbdaad5db2a    0f8da6000000            jge 0x7fbdaad5dbd6         	< Ar9.[34;49ma9[39;49m+257[32;49m >[39;49m[39;49m
[34;49m ..  =  { z @ 256 < } { { y @ 256 < } { { [39;49m[33;40mx[39;49m[34;49m @ 256 < } { a.ar [z @][y @][x @ ] x @ = x ++  } while  x 0 = y ++  } while x 0 = y 0 = z ++ } while .. [39;49m[32;49m
0x7fbdaad5db30    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m .. @ 256 < } { { y @ 256 < } { { x @ 256 [39;49m[33;40m<[39;49m[34;49m } { a.ar [z @][y @][x @ ] x @ = x ++  } while  x 0 = y ++  } while x 0 = y 0 = z ++ } while adump ( .. [39;49m[32;49m
0x7fbdaad5db34    4881f800010000          cmp rax, 0x100                                         [39;49m
[34;49m .. { z @ 256 < } { { y @ 256 < } { { x @ [39;49m[33;40m256[39;49m[34;49m < } { a.ar [z @][y @][x @ ] x @ = x ++  } while  x 0 = y ++  } while x 0 = y 0 = z ++ } while adu .. [39;49m[32;49m
0x7fbdaad5db3b    0f8d5e000000            jge 0x7fbdaad5db9f         	< Ar9.[34;49ma9[39;49m+202[32;49m >[39;49m[39;49m
[34;49m .. < } { { y @ 256 < } { { x @ 256 < } { [39;49m[33;40ma[39;49m[34;49m.ar [z @][y @][x @ ] x @ = x ++  } while  x 0 = y ++  } while x 0 = y 0 = z ++ } while adump ( 0 246 .. [39;49m[32;49m
0x7fbdaad5db41    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5db45    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fbdaad5db4c    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5db50    498906                  mov [r14], rax                                         [39;49m
[34;49m .. { y @ 256 < } { { x @ 256 < } { a.ar [[39;49m[33;40mz[39;49m[34;49m @][y @][x @ ] x @ = x ++  } while  x 0 = y ++  } while x 0 = y 0 = z ++ } while adump ( 0 246 67 a  .. [39;49m[32;49m
0x7fbdaad5db53    498b4718                mov rax, [r15+0x18]                                    [39;49m[32;49m
0x7fbdaad5db57    4869c000000100          imul rax, rax, 0x10000                                 [39;49m[32;49m
0x7fbdaad5db5e    490106                  add [r14], rax                                         [39;49m
[34;49m ..  256 < } { { x @ 256 < } { a.ar [z @][[39;49m[33;40my[39;49m[34;49m @][x @ ] x @ = x ++  } while  x 0 = y ++  } while x 0 = y 0 = z ++ } while adump ( 0 246 67 a ) ;  .. [39;49m[32;49m
0x7fbdaad5db61    498b4710                mov rax, [r15+0x10]                                    [39;49m[32;49m
0x7fbdaad5db65    4869c000010000          imul rax, rax, 0x100                                   [39;49m[32;49m
0x7fbdaad5db6c    490106                  add [r14], rax                                         [39;49m
[34;49m .. < } { { x @ 256 < } { a.ar [z @][y @][[39;49m[33;40mx[39;49m[34;49m @ ] x @ = x ++  } while  x 0 = y ++  } while x 0 = y 0 = z ++ } while adump ( 0 246 67 a ) ;  .. [39;49m[32;49m
0x7fbdaad5db6f    498b4708                mov rax, [r15+0x8]                                     [39;49m[32;49m
0x7fbdaad5db73    490106                  add [r14], rax                                         [39;49m
[34;49m .. { x @ 256 < } { a.ar [z @][y @][x @ ] [39;49m[33;40mx[39;49m[34;49m @ = x ++  } while  x 0 = y ++  } while x 0 = y 0 = z ++ } while adump ( 0 246 67 a ) ;  .. [39;49m[32;49m
0x7fbdaad5db76    498d4708                lea rax, [r15+0x8]                                     [39;49m[32;49m
0x7fbdaad5db7a    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fbdaad5db7d    4983c608                add r14, 0x8                                           [39;49m
[34;49m .. x @ 256 < } { a.ar [z @][y @][x @ ] x [39;49m[33;40m@[39;49m[34;49m = x ++  } while  x 0 = y ++  } while x 0 = y 0 = z ++ } while adump ( 0 246 67 a ) ;  .. [39;49m[32;49m
0x7fbdaad5db81    498906                  mov [r14], rax                                         [39;49m
[34;49m .. @ 256 < } { a.ar [z @][y @][x @ ] x @ [39;49m[33;40m=[39;49m[34;49m x ++  } while  x 0 = y ++  } while x 0 = y 0 = z ++ } while adump ( 0 246 67 a ) ;  .. [39;49m[32;49m
0x7fbdaad5db84    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fbdaad5db87    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fbdaad5db8b    488908                  mov [rax], rcx                                         [39;49m[32;49m
0x7fbdaad5db8e    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m .. 256 < } { a.ar [z @][y @][x @ ] x @ = [39;49m[33;40mx[39;49m[34;49m ++  } while  x 0 = y ++  } while x 0 = y 0 = z ++ } while adump ( 0 246 67 a ) ;  .. [39;49m[32;49m
0x7fbdaad5db92    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m .. 6 < } { a.ar [z @][y @][x @ ] x @ = x [39;49m[33;40m++[39;49m[34;49m  } while  x 0 = y ++  } while x 0 = y 0 = z ++ } while adump ( 0 246 67 a ) ;  .. [39;49m[32;49m
0x7fbdaad5db96    48ffc0                  inc rax                                                [39;49m[32;49m
0x7fbdaad5db99    49894708                mov [r15+0x8], rax                                     [39;49m
[34;49m .. } { a.ar [z @][y @][x @ ] x @ = x ++  [39;49m[33;40m}[39;49m[34;49m while  x 0 = y ++  } while x 0 = y 0 = z ++ } while adump ( 0 246 67 a ) ;  .. [39;49m[32;49m
0x7fbdaad5db9d    eb91                    jmp 0x7fbdaad5db30         	< Ar9.[34;49ma9[39;49m+91[32;49m >[39;49m[39;49m
[34;49m .. [z @][y @][x @ ] x @ = x ++  } while  [39;49m[33;40mx[39;49m[34;49m 0 = y ++  } while x 0 = y 0 = z ++ } while adump ( 0 246 67 a ) ;  .. [39;49m[32;49m
0x7fbdaad5db9f    498d4708                lea rax, [r15+0x8]                                     [39;49m[32;49m
0x7fbdaad5dba3    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5dba7    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  @][y @][x @ ] x @ = x ++  } while  x [39;49m[33;40m0[39;49m[34;49m = y ++  } while x 0 = y 0 = z ++ } while adump ( 0 246 67 a ) ;  .. [39;49m[32;49m
0x7fbdaad5dbaa    48c7c000000000          mov rax, 0x0                                           [39;49m[32;49m
0x7fbdaad5dbb1    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5dbb5    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ][y @][x @ ] x @ = x ++  } while  x 0 [39;49m[33;40m=[39;49m[34;49m y ++  } while x 0 = y 0 = z ++ } while adump ( 0 246 67 a ) ;  .. [39;49m[32;49m
0x7fbdaad5dbb8    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fbdaad5dbbb    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fbdaad5dbbf    488908                  mov [rax], rcx                                         [39;49m[32;49m
0x7fbdaad5dbc2    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m .. y @][x @ ] x @ = x ++  } while  x 0 = [39;49m[33;40my[39;49m[34;49m ++  } while x 0 = y 0 = z ++ } while adump ( 0 246 67 a ) ;  .. [39;49m[32;49m
0x7fbdaad5dbc6    498b4710                mov rax, [r15+0x10]                                    [39;49m
[34;49m .. @][x @ ] x @ = x ++  } while  x 0 = y [39;49m[33;40m++[39;49m[34;49m  } while x 0 = y 0 = z ++ } while adump ( 0 246 67 a ) ;  .. [39;49m[32;49m
0x7fbdaad5dbca    48ffc0                  inc rax                                                [39;49m[32;49m
0x7fbdaad5dbcd    49894710                mov [r15+0x10], rax                                    [39;49m
[34;49m ..  @ ] x @ = x ++  } while  x 0 = y ++  [39;49m[33;40m}[39;49m[34;49m while x 0 = y 0 = z ++ } while adump ( 0 246 67 a ) ;  .. [39;49m[32;49m
0x7fbdaad5dbd1    e949ffffff              jmp 0x7fbdaad5db1f         	< Ar9.[34;49ma9[39;49m+74[32;49m >[39;49m[39;49m
[34;49m ..  = x ++  } while  x 0 = y ++  } while [39;49m[33;40mx[39;49m[34;49m 0 = y 0 = z ++ } while adump ( 0 246 67 a ) ;  .. [39;49m[32;49m
0x7fbdaad5dbd6    498d4708                lea rax, [r15+0x8]                                     [39;49m[32;49m
0x7fbdaad5dbda    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5dbde    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  x ++  } while  x 0 = y ++  } while x [39;49m[33;40m0[39;49m[34;49m = y 0 = z ++ } while adump ( 0 246 67 a ) ;  .. [39;49m[32;49m
0x7fbdaad5dbe1    48c7c000000000          mov rax, 0x0                                           [39;49m[32;49m
0x7fbdaad5dbe8    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5dbec    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  ++  } while  x 0 = y ++  } while x 0 [39;49m[33;40m=[39;49m[34;49m y 0 = z ++ } while adump ( 0 246 67 a ) ;  .. [39;49m[32;49m
0x7fbdaad5dbef    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fbdaad5dbf2    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fbdaad5dbf6    488908                  mov [rax], rcx                                         [39;49m[32;49m
0x7fbdaad5dbf9    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m .. +  } while  x 0 = y ++  } while x 0 = [39;49m[33;40my[39;49m[34;49m 0 = z ++ } while adump ( 0 246 67 a ) ;  .. [39;49m[32;49m
0x7fbdaad5dbfd    498d4710                lea rax, [r15+0x10]                                    [39;49m[32;49m
0x7fbdaad5dc01    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5dc05    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  } while  x 0 = y ++  } while x 0 = y [39;49m[33;40m0[39;49m[34;49m = z ++ } while adump ( 0 246 67 a ) ;  .. [39;49m[32;49m
0x7fbdaad5dc08    48c7c000000000          mov rax, 0x0                                           [39;49m[32;49m
0x7fbdaad5dc0f    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5dc13    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  while  x 0 = y ++  } while x 0 = y 0 [39;49m[33;40m=[39;49m[34;49m z ++ } while adump ( 0 246 67 a ) ;  .. [39;49m[32;49m
0x7fbdaad5dc16    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fbdaad5dc19    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fbdaad5dc1d    488908                  mov [rax], rcx                                         [39;49m[32;49m
0x7fbdaad5dc20    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m .. hile  x 0 = y ++  } while x 0 = y 0 = [39;49m[33;40mz[39;49m[34;49m ++ } while adump ( 0 246 67 a ) ;  .. [39;49m[32;49m
0x7fbdaad5dc24    498b4718                mov rax, [r15+0x18]                                    [39;49m
[34;49m .. le  x 0 = y ++  } while x 0 = y 0 = z [39;49m[33;40m++[39;49m[34;49m } while adump ( 0 246 67 a ) ;  .. [39;49m[32;49m
0x7fbdaad5dc28    48ffc0                  inc rax                                                [39;49m[32;49m
0x7fbdaad5dc2b    49894718                mov [r15+0x18], rax                                    [39;49m
[34;49m ..  x 0 = y ++  } while x 0 = y 0 = z ++ [39;49m[33;40m}[39;49m[34;49m while adump ( 0 246 67 a ) ;  .. [39;49m[32;49m
0x7fbdaad5dc2f    e9dafeffff              jmp 0x7fbdaad5db0e         	< Ar9.[34;49ma9[39;49m+57[32;49m >[39;49m[39;49m
[34;49m .. hile x 0 = y 0 = z ++ } while adump ( [39;49m[33;40m0[39;49m[34;49m 246 67 a ) ;  .. [39;49m[32;49m
0x7fbdaad5dc34    48c7c000000000          mov rax, 0x0                                           [39;49m[32;49m
0x7fbdaad5dc3b    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5dc3f    498906                  mov [r14], rax                                         [39;49m
[34;49m .. le x 0 = y 0 = z ++ } while adump ( 0 [39;49m[33;40m246[39;49m[34;49m 67 a ) ;  .. [39;49m[32;49m
0x7fbdaad5dc42    48c7c0f6000000          mov rax, 0xf6                                          [39;49m[32;49m
0x7fbdaad5dc49    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5dc4d    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  0 = y 0 = z ++ } while adump ( 0 246 [39;49m[33;40m67[39;49m[34;49m a ) ;  .. [39;49m[32;49m
0x7fbdaad5dc50    48c7c043000000          mov rax, 0x43                                          [39;49m[32;49m
0x7fbdaad5dc57    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5dc5b    498906                  mov [r14], rax                                         [39;49m
[34;49m .. = y 0 = z ++ } while adump ( 0 246 67 [39;49m[33;40ma[39;49m[34;49m ) ;  .. [39;49m[32;49m
0x7fbdaad5dc5e    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5dc62    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fbdaad5dc69    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5dc6d    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  ++  } while x 0 = y 0 = z ++ } while [39;49m[33;40madump[39;49m[34;49m ( 0 246 67 a ) ;  .. [39;49m[32;49m
0x7fbdaad5dc70    49b915d9d5aabd7f0000    mov r9, 0x7fbdaad5d915                                 [39;49m[32;49m
0x7fbdaad5dc7a    49ffd1                  call r9                    	< Ar9.[34;49madump[39;49m : 0x00007fbdaad5d915[32;49m >[39;49m[39;49m
[34;49m .. 0 = z ++ } while adump ( 0 246 67 a ) [39;49m[33;40m;[39;49m[34;49m  .. [39;49m[32;49m
0x7fbdaad5dc7d    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5dc81    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaad5dc85    4983ee08                sub r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5dc89    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'a9' :: codeSize = 436
Word : 0x00007fbdaa97c080 :: Compiled at : 0x00007fbdaad5dad5
 =============================
::> 'wdiss' was called at namespaces/test/arrayTest.csl 290.16 <::

DataStack at : [34;49mnamespaces/test/arrayTest.csl : 290.18[39;49m :
DataStack depth =   3 : Dsp (R14) = Top = 0x00007fbdab0efa58, InitialTos = 0x00007fbdab0efa40, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fbdab0efa58 > = 0x0000000000000005	
  DataStack   [  -1 ] < 0x00007fbdab0efa50 > = 0x0000000000000005	
  DataStack   [  -2 ] < 0x00007fbdab0efa48 > = 0x0000000000000005	

 Ar9 :  namespaces/test/arrayTest.csl 291.23 : x = 0 y = 246 z = 67
 a.ar = 0x00007fbda96681f8

Dump at : namespaces/test/arrayTest.csl : 291.23 :
Dump : Address = 0x00007fbda9aa77f8 : Number = 256 :: (little endian dump)
0x00007fbda9aa77f8 :  00 01 02 03 04 05 06 07  08 09 0a 0b 0c 0d 0e 0f  ........ ........ 
0x00007fbda9aa7808 :  10 11 12 13 14 15 16 17  18 19 1a 1b 1c 1d 1e 1f  ........ ........ 
0x00007fbda9aa7818 :  20 21 22 23 24 25 26 27  28 29 2a 2b 2c 2d 2e 2f   !"#$%&' ()*+,-./ 
0x00007fbda9aa7828 :  30 31 32 33 34 35 36 37  38 39 3a 3b 3c 3d 3e 3f  01234567 89:;<=>? 
0x00007fbda9aa7838 :  40 41 42 43 44 45 46 47  48 49 4a 4b 4c 4d 4e 4f  @ABCDEFG HIJKLMNO 
0x00007fbda9aa7848 :  50 51 52 53 54 55 56 57  58 59 5a 5b 5c 5d 5e 5f  PQRSTUVW XYZ[\]^_ 
0x00007fbda9aa7858 :  60 61 62 63 64 65 66 67  68 69 6a 6b 6c 6d 6e 6f  `abcdefg hijklmno 
0x00007fbda9aa7868 :  70 71 72 73 74 75 76 77  78 79 7a 7b 7c 7d 7e 7f  pqrstuvw xyz{|}~. 
0x00007fbda9aa7878 :  80 81 82 83 84 85 86 87  88 89 8a 8b 8c 8d 8e 8f  ........ ........ 
0x00007fbda9aa7888 :  90 91 92 93 94 95 96 97  98 99 9a 9b 9c 9d 9e 9f  ........ ........ 
0x00007fbda9aa7898 :  a0 a1 a2 a3 a4 a5 a6 a7  a8 a9 aa ab ac ad ae af  ........ ........ 
0x00007fbda9aa78a8 :  b0 b1 b2 b3 b4 b5 b6 b7  b8 b9 ba bb bc bd be bf  ........ ........ 
0x00007fbda9aa78b8 :  c0 c1 c2 c3 c4 c5 c6 c7  c8 c9 ca cb cc cd ce cf  ........ ........ 
0x00007fbda9aa78c8 :  d0 d1 d2 d3 d4 d5 d6 d7  d8 d9 da db dc dd de df  ........ ........ 
0x00007fbda9aa78d8 :  e0 e1 e2 e3 e4 e5 e6 e7  e8 e9 ea eb ec ed ee ef  ........ ........ 
0x00007fbda9aa78e8 :  f0 f1 f2 f3 f4 f5 f6 f7  f8 f9 fa fb fc fd fe ff  ........ ........ 

 Ar9 :  namespaces/test/arrayTest.csl 292.24 : x = 0 y = 123 z = 234
 a.ar = 0x00007fbda96681f8

Dump at : namespaces/test/arrayTest.csl : 292.24 :
Dump : Address = 0x00007fbdaa50fcf8 : Number = 256 :: (little endian dump)
0x00007fbdaa50fcf8 :  00 01 02 03 04 05 06 07  08 09 0a 0b 0c 0d 0e 0f  ........ ........ 
0x00007fbdaa50fd08 :  10 11 12 13 14 15 16 17  18 19 1a 1b 1c 1d 1e 1f  ........ ........ 
0x00007fbdaa50fd18 :  20 21 22 23 24 25 26 27  28 29 2a 2b 2c 2d 2e 2f   !"#$%&' ()*+,-./ 
0x00007fbdaa50fd28 :  30 31 32 33 34 35 36 37  38 39 3a 3b 3c 3d 3e 3f  01234567 89:;<=>? 
0x00007fbdaa50fd38 :  40 41 42 43 44 45 46 47  48 49 4a 4b 4c 4d 4e 4f  @ABCDEFG HIJKLMNO 
0x00007fbdaa50fd48 :  50 51 52 53 54 55 56 57  58 59 5a 5b 5c 5d 5e 5f  PQRSTUVW XYZ[\]^_ 
0x00007fbdaa50fd58 :  60 61 62 63 64 65 66 67  68 69 6a 6b 6c 6d 6e 6f  `abcdefg hijklmno 
0x00007fbdaa50fd68 :  70 71 72 73 74 75 76 77  78 79 7a 7b 7c 7d 7e 7f  pqrstuvw xyz{|}~. 
0x00007fbdaa50fd78 :  80 81 82 83 84 85 86 87  88 89 8a 8b 8c 8d 8e 8f  ........ ........ 
0x00007fbdaa50fd88 :  90 91 92 93 94 95 96 97  98 99 9a 9b 9c 9d 9e 9f  ........ ........ 
0x00007fbdaa50fd98 :  a0 a1 a2 a3 a4 a5 a6 a7  a8 a9 aa ab ac ad ae af  ........ ........ 
0x00007fbdaa50fda8 :  b0 b1 b2 b3 b4 b5 b6 b7  b8 b9 ba bb bc bd be bf  ........ ........ 
0x00007fbdaa50fdb8 :  c0 c1 c2 c3 c4 c5 c6 c7  c8 c9 ca cb cc cd ce cf  ........ ........ 
0x00007fbdaa50fdc8 :  d0 d1 d2 d3 d4 d5 d6 d7  d8 d9 da db dc dd de df  ........ ........ 
0x00007fbdaa50fdd8 :  e0 e1 e2 e3 e4 e5 e6 e7  e8 e9 ea eb ec ed ee ef  ........ ........ 
0x00007fbdaa50fde8 :  f0 f1 f2 f3 f4 f5 f6 f7  f8 f9 fa fb fc fd fe ff  ........ ........ 
 0x00007fbdaa668fb8 0x00007fbdaa668fb9 0x00007fbdaa668fc1 26 254
 =============================
ct.[34;49mtct[39;49m <:> csl compiled word
SourceCode for ct.[34;49mtct[39;49m :> 
[34;49m: tct ( y ct a ) a.ar [0][0][0] 0x77 = a.ar [0][y @][0] a.ar [0][0][0] @ = a.ar [y @][y @][0] a.ar [0][0][0] @ = a.ar [y @ 1 +][y @][y @] dup nl hp a.ar [0][0][0] @ = a.ar [y @][y @][y @ 1 +] dup nl hp a.ar [0][0][0] @ = TODO ( "array out of bounds checking with variables?!" ) a.ar 32 dump ; [39;49m
Source code file location of [34;49mtct[39;49m : "namespaces/test/arrayTest.csl" : 303.2 :: we are now at : namespaces/test/arrayTest.csl : 313.16
Compiled with : optimizeOn, inlineOn, Jcc8 on
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xaad5dc8f -- code size = 567 bytes
TypeSignature : 
 -----------------------------
Word :: ct.[34;49mtct[39;49m : definition = 0x00007fbdaad5dc8f : disassembly at namespaces/test/arrayTest.csl : 313.16 :
[34;49m ..                                     : [39;49m[33;40mtct[39;49m[34;49m ( y ct a ) a.ar [0][0][0] 0x77 =  a.ar [0][y @][0] a.ar [0][0][0] @ = a.ar [y @][y @][0] a.ar [0] .. [39;49m[32;49m
0x7fbdaad5dc8f    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fbdaad5dc93    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaad5dc97    4981c608000000          add r14, 0x8                                           [39;49m
[34;49m ..                      : tct ( y ct a ) [39;49m[33;40ma[39;49m[34;49m.ar [0][0][0] 0x77 =  a.ar [0][y @][0] a.ar [0][0][0] @ = a.ar [y @][y @][0] a.ar [0][0][0] @ = a.ar .. [39;49m[32;49m
0x7fbdaad5dc9e    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5dca2    4881c000000000          add rax, 0x0                                           [39;49m
[34;49m ..       : tct ( y ct a ) a.ar [0][0][0] [39;49m[33;40m0x77[39;49m[34;49m =  a.ar [0][y @][0] a.ar [0][0][0] @ = a.ar [y @][y @][0] a.ar [0][0][0] @ = a.ar [y @ 1 +][y @] .. [39;49m[32;49m
0x7fbdaad5dca9    b177                    mov cl, 0x77                                           [39;49m
[34;49m ..  : tct ( y ct a ) a.ar [0][0][0] 0x77 [39;49m[33;40m=[39;49m[34;49m  a.ar [0][y @][0] a.ar [0][0][0] @ = a.ar [y @][y @][0] a.ar [0][0][0] @ = a.ar [y @ 1 +][y @][y @] .. [39;49m[32;49m
0x7fbdaad5dcab    8808                    mov [rax], cl                                          [39;49m
[34;49m  : tct ( y ct a ) a.ar [0][0][0] 0x77 =  [39;49m[33;40ma[39;49m[34;49m.ar [0][y @][0] a.ar [0][0][0] @ = a.ar [y @][y @][0] a.ar [0][0][0] @ = a.ar [y @ 1 +][y @][y @] du .. [39;49m[32;49m
0x7fbdaad5dcad    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5dcb1    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fbdaad5dcb8    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5dcbc    498906                  mov [r14], rax                                         [39;49m
[34;49m .. t a ) a.ar [0][0][0] 0x77 =  a.ar [0][[39;49m[33;40my[39;49m[34;49m @][0] a.ar [0][0][0] @ = a.ar [y @][y @][0] a.ar [0][0][0] @ = a.ar [y @ 1 +][y @][y @] dup nl hp a .. [39;49m[32;49m
0x7fbdaad5dcbf    498b47f0                mov rax, [r15-0x10]                                    [39;49m[32;49m
0x7fbdaad5dcc3    486bc003                imul rax, rax, 0x3                                     [39;49m[32;49m
0x7fbdaad5dcc7    490106                  add [r14], rax                                         [39;49m
[34;49m .. ar [0][0][0] 0x77 =  a.ar [0][y @][0] [39;49m[33;40ma[39;49m[34;49m.ar [0][0][0] @ = a.ar [y @][y @][0] a.ar [0][0][0] @ = a.ar [y @ 1 +][y @][y @] dup nl hp a.ar [0][ .. [39;49m[32;49m
0x7fbdaad5dcca    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5dcce    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fbdaad5dcd5    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5dcd9    498906                  mov [r14], rax                                         [39;49m
[34;49m .. 77 =  a.ar [0][y @][0] a.ar [0][0][0] [39;49m[33;40m@[39;49m[34;49m = a.ar [y @][y @][0] a.ar [0][0][0] @ = a.ar [y @ 1 +][y @][y @] dup nl hp a.ar [0][0][0] @ = a.ar  .. [39;49m[32;49m
0x7fbdaad5dcdc    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fbdaad5dcdf    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fbdaad5dce2    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  =  a.ar [0][y @][0] a.ar [0][0][0] @ [39;49m[33;40m=[39;49m[34;49m a.ar [y @][y @][0] a.ar [0][0][0] @ = a.ar [y @ 1 +][y @][y @] dup nl hp a.ar [0][0][0] @ = a.ar [y .. [39;49m[32;49m
0x7fbdaad5dce5    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fbdaad5dce8    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fbdaad5dcec    488908                  mov [rax], rcx                                         [39;49m[32;49m
0x7fbdaad5dcef    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m ..   a.ar [0][y @][0] a.ar [0][0][0] @ = [39;49m[33;40ma[39;49m[34;49m.ar [y @][y @][0] a.ar [0][0][0] @ = a.ar [y @ 1 +][y @][y @] dup nl hp a.ar [0][0][0] @ = a.ar [y @ .. [39;49m[32;49m
0x7fbdaad5dcf3    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5dcf7    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fbdaad5dcfe    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5dd02    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  [0][y @][0] a.ar [0][0][0] @ = a.ar [[39;49m[33;40my[39;49m[34;49m @][y @][0] a.ar [0][0][0] @ = a.ar [y @ 1 +][y @][y @] dup nl hp a.ar [0][0][0] @ = a.ar [y @][y @] .. [39;49m[32;49m
0x7fbdaad5dd05    498b47f0                mov rax, [r15-0x10]                                    [39;49m[32;49m
0x7fbdaad5dd09    486bc009                imul rax, rax, 0x9                                     [39;49m[32;49m
0x7fbdaad5dd0d    490106                  add [r14], rax                                         [39;49m
[34;49m .. y @][0] a.ar [0][0][0] @ = a.ar [y @][[39;49m[33;40my[39;49m[34;49m @][0] a.ar [0][0][0] @ = a.ar [y @ 1 +][y @][y @] dup nl hp a.ar [0][0][0] @ = a.ar [y @][y @][y @  .. [39;49m[32;49m
0x7fbdaad5dd10    498b47f0                mov rax, [r15-0x10]                                    [39;49m[32;49m
0x7fbdaad5dd14    486bc003                imul rax, rax, 0x3                                     [39;49m[32;49m
0x7fbdaad5dd18    490106                  add [r14], rax                                         [39;49m
[34;49m .. a.ar [0][0][0] @ = a.ar [y @][y @][0] [39;49m[33;40ma[39;49m[34;49m.ar [0][0][0] @ = a.ar [y @ 1 +][y @][y @] dup nl hp a.ar [0][0][0] @ = a.ar [y @][y @][y @ 1 +] dup .. [39;49m[32;49m
0x7fbdaad5dd1b    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5dd1f    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fbdaad5dd26    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5dd2a    498906                  mov [r14], rax                                         [39;49m
[34;49m .. @ = a.ar [y @][y @][0] a.ar [0][0][0] [39;49m[33;40m@[39;49m[34;49m = a.ar [y @ 1 +][y @][y @] dup nl hp a.ar [0][0][0] @ = a.ar [y @][y @][y @ 1 +] dup nl hp a.ar [0] .. [39;49m[32;49m
0x7fbdaad5dd2d    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fbdaad5dd30    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fbdaad5dd33    498906                  mov [r14], rax                                         [39;49m
[34;49m .. = a.ar [y @][y @][0] a.ar [0][0][0] @ [39;49m[33;40m=[39;49m[34;49m a.ar [y @ 1 +][y @][y @] dup nl hp a.ar [0][0][0] @ = a.ar [y @][y @][y @ 1 +] dup nl hp a.ar [0][0 .. [39;49m[32;49m
0x7fbdaad5dd36    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fbdaad5dd39    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fbdaad5dd3d    488908                  mov [rax], rcx                                         [39;49m[32;49m
0x7fbdaad5dd40    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m .. a.ar [y @][y @][0] a.ar [0][0][0] @ = [39;49m[33;40ma[39;49m[34;49m.ar [y @ 1 +][y @][y @] dup nl hp a.ar [0][0][0] @ = a.ar [y @][y @][y @ 1 +] dup nl hp a.ar [0][0][ .. [39;49m[32;49m
0x7fbdaad5dd44    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5dd48    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fbdaad5dd4f    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5dd53    498906                  mov [r14], rax                                         [39;49m
[34;49m .. y @][y @][0] a.ar [0][0][0] @ = a.ar [[39;49m[33;40my[39;49m[34;49m @ 1 +][y @][y @] dup nl hp a.ar [0][0][0] @ = a.ar [y @][y @][y @ 1 +] dup nl hp a.ar [0][0][0] @ = .. [39;49m[32;49m
0x7fbdaad5dd56    498b47f0                mov rax, [r15-0x10]                                    [39;49m
[34;49m .. [y @][0] a.ar [0][0][0] @ = a.ar [y @ [39;49m[33;40m1[39;49m[34;49m +][y @][y @] dup nl hp a.ar [0][0][0] @ = a.ar [y @][y @][y @ 1 +] dup nl hp a.ar [0][0][0] @ = TOD .. [39;49m[32;49m
0x7fbdaad5dd5a    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m ..  @][0] a.ar [0][0][0] @ = a.ar [y @ 1 [39;49m[33;40m+[39;49m[34;49m][y @][y @] dup nl hp a.ar [0][0][0] @ = a.ar [y @][y @][y @ 1 +] dup nl hp a.ar [0][0][0] @ = TODO  .. [39;49m[32;49m
0x7fbdaad5dd61    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fbdaad5dd64    486bc009                imul rax, rax, 0x9                                     [39;49m[32;49m
0x7fbdaad5dd68    490106                  add [r14], rax                                         [39;49m
[34;49m .. [0] a.ar [0][0][0] @ = a.ar [y @ 1 +][[39;49m[33;40my[39;49m[34;49m @][y @] dup nl hp a.ar [0][0][0] @ = a.ar [y @][y @][y @ 1 +] dup nl hp a.ar [0][0][0] @ = TODO ( " .. [39;49m[32;49m
0x7fbdaad5dd6b    498b47f0                mov rax, [r15-0x10]                                    [39;49m[32;49m
0x7fbdaad5dd6f    486bc003                imul rax, rax, 0x3                                     [39;49m[32;49m
0x7fbdaad5dd73    490106                  add [r14], rax                                         [39;49m
[34;49m .. .ar [0][0][0] @ = a.ar [y @ 1 +][y @][[39;49m[33;40my[39;49m[34;49m @] dup nl hp a.ar [0][0][0] @ = a.ar [y @][y @][y @ 1 +] dup nl hp a.ar [0][0][0] @ = TODO ( "array .. [39;49m[32;49m
0x7fbdaad5dd76    498b47f0                mov rax, [r15-0x10]                                    [39;49m[32;49m
0x7fbdaad5dd7a    490106                  add [r14], rax                                         [39;49m
[34;49m .. 0][0][0] @ = a.ar [y @ 1 +][y @][y @] [39;49m[33;40mdup[39;49m[34;49m nl hp a.ar [0][0][0] @ = a.ar [y @][y @][y @ 1 +] dup nl hp a.ar [0][0][0] @ = TODO ( "array out  .. [39;49m[32;49m
0x7fbdaad5dd7d    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fbdaad5dd80    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5dd84    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ][0] @ = a.ar [y @ 1 +][y @][y @] dup [39;49m[33;40mnl[39;49m[34;49m hp a.ar [0][0][0] @ = a.ar [y @][y @][y @ 1 +] dup nl hp a.ar [0][0][0] @ = TODO ( "array out of b .. [39;49m[32;49m
0x7fbdaad5dd87    49b8e0903e1ebd550000    mov r8, 0x55bd1e3e90e0                                 [39;49m[32;49m
0x7fbdaad5dd91    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaad5dd9b    49ffd1                  call r9                    	< Io.[34;49mnewline[39;49m : 0x000055bd1e3e90e0[32;49m >[39;49m[39;49m
[34;49m .. ] @ = a.ar [y @ 1 +][y @][y @] dup nl [39;49m[33;40mhp[39;49m[34;49m a.ar [0][0][0] @ = a.ar [y @][y @][y @ 1 +] dup nl hp a.ar [0][0][0] @ = TODO ( "array out of boun .. [39;49m[32;49m
0x7fbdaad5dd9e    49b98764d5aabd7f0000    mov r9, 0x7fbdaad56487                                 [39;49m[32;49m
0x7fbdaad5dda8    49ffd1                  call r9                    	< Int.[34;49mhp[39;49m : 0x00007fbdaad56487[32;49m >[39;49m[39;49m
[34;49m ..  = a.ar [y @ 1 +][y @][y @] dup nl hp [39;49m[33;40ma[39;49m[34;49m.ar [0][0][0] @ = a.ar [y @][y @][y @ 1 +] dup nl hp a.ar [0][0][0] @ = TODO ( "array out of bounds  .. [39;49m[32;49m
0x7fbdaad5ddab    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5ddaf    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fbdaad5ddb6    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5ddba    498906                  mov [r14], rax                                         [39;49m
[34;49m .. +][y @][y @] dup nl hp a.ar [0][0][0] [39;49m[33;40m@[39;49m[34;49m = a.ar [y @][y @][y @ 1 +] dup nl hp a.ar [0][0][0] @ = TODO ( "array out of bounds checking with v .. [39;49m[32;49m
0x7fbdaad5ddbd    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fbdaad5ddc0    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fbdaad5ddc3    498906                  mov [r14], rax                                         [39;49m
[34;49m .. [y @][y @] dup nl hp a.ar [0][0][0] @ [39;49m[33;40m=[39;49m[34;49m a.ar [y @][y @][y @ 1 +] dup nl hp a.ar [0][0][0] @ = TODO ( "array out of bounds checking with var .. [39;49m[32;49m
0x7fbdaad5ddc6    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fbdaad5ddc9    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fbdaad5ddcd    488908                  mov [rax], rcx                                         [39;49m[32;49m
0x7fbdaad5ddd0    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m ..  @][y @] dup nl hp a.ar [0][0][0] @ = [39;49m[33;40ma[39;49m[34;49m.ar [y @][y @][y @ 1 +] dup nl hp a.ar [0][0][0] @ = TODO ( "array out of bounds checking with varia .. [39;49m[32;49m
0x7fbdaad5ddd4    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5ddd8    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fbdaad5dddf    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5dde3    498906                  mov [r14], rax                                         [39;49m
[34;49m .. @] dup nl hp a.ar [0][0][0] @ = a.ar [[39;49m[33;40my[39;49m[34;49m @][y @][y @ 1 +] dup nl hp a.ar [0][0][0] @ = TODO ( "array out of bounds checking with variables?! .. [39;49m[32;49m
0x7fbdaad5dde6    498b47f0                mov rax, [r15-0x10]                                    [39;49m[32;49m
0x7fbdaad5ddea    486bc009                imul rax, rax, 0x9                                     [39;49m[32;49m
0x7fbdaad5ddee    490106                  add [r14], rax                                         [39;49m
[34;49m .. p nl hp a.ar [0][0][0] @ = a.ar [y @][[39;49m[33;40my[39;49m[34;49m @][y @ 1 +] dup nl hp a.ar [0][0][0] @ = TODO ( "array out of bounds checking with variables?!" ) a .. [39;49m[32;49m
0x7fbdaad5ddf1    498b47f0                mov rax, [r15-0x10]                                    [39;49m[32;49m
0x7fbdaad5ddf5    486bc003                imul rax, rax, 0x3                                     [39;49m[32;49m
0x7fbdaad5ddf9    490106                  add [r14], rax                                         [39;49m
[34;49m .. hp a.ar [0][0][0] @ = a.ar [y @][y @][[39;49m[33;40my[39;49m[34;49m @ 1 +] dup nl hp a.ar [0][0][0] @ = TODO ( "array out of bounds checking with variables?!" ) a.ar 3 .. [39;49m[32;49m
0x7fbdaad5ddfc    498b47f0                mov rax, [r15-0x10]                                    [39;49m
[34;49m .. .ar [0][0][0] @ = a.ar [y @][y @][y @ [39;49m[33;40m1[39;49m[34;49m +] dup nl hp a.ar [0][0][0] @ = TODO ( "array out of bounds checking with variables?!" ) a.ar 32 du .. [39;49m[32;49m
0x7fbdaad5de00    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m .. r [0][0][0] @ = a.ar [y @][y @][y @ 1 [39;49m[33;40m+[39;49m[34;49m] dup nl hp a.ar [0][0][0] @ = TODO ( "array out of bounds checking with variables?!" ) a.ar 32 dump .. [39;49m[32;49m
0x7fbdaad5de07    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fbdaad5de0a    490106                  add [r14], rax                                         [39;49m
[34;49m .. 0][0][0] @ = a.ar [y @][y @][y @ 1 +] [39;49m[33;40mdup[39;49m[34;49m nl hp a.ar [0][0][0] @ = TODO ( "array out of bounds checking with variables?!" ) a.ar 32 dump ;  .. [39;49m[32;49m
0x7fbdaad5de0d    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fbdaad5de10    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5de14    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ][0] @ = a.ar [y @][y @][y @ 1 +] dup [39;49m[33;40mnl[39;49m[34;49m hp a.ar [0][0][0] @ = TODO ( "array out of bounds checking with variables?!" ) a.ar 32 dump ;  .. [39;49m[32;49m
0x7fbdaad5de17    49b8e0903e1ebd550000    mov r8, 0x55bd1e3e90e0                                 [39;49m[32;49m
0x7fbdaad5de21    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaad5de2b    49ffd1                  call r9                    	< Io.[34;49mnewline[39;49m : 0x000055bd1e3e90e0[32;49m >[39;49m[39;49m
[34;49m .. ] @ = a.ar [y @][y @][y @ 1 +] dup nl [39;49m[33;40mhp[39;49m[34;49m a.ar [0][0][0] @ = TODO ( "array out of bounds checking with variables?!" ) a.ar 32 dump ;  .. [39;49m[32;49m
0x7fbdaad5de2e    49b98764d5aabd7f0000    mov r9, 0x7fbdaad56487                                 [39;49m[32;49m
0x7fbdaad5de38    49ffd1                  call r9                    	< Int.[34;49mhp[39;49m : 0x00007fbdaad56487[32;49m >[39;49m[39;49m
[34;49m ..  = a.ar [y @][y @][y @ 1 +] dup nl hp [39;49m[33;40ma[39;49m[34;49m.ar [0][0][0] @ = TODO ( "array out of bounds checking with variables?!" ) a.ar 32 dump ;  .. [39;49m[32;49m
0x7fbdaad5de3b    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5de3f    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fbdaad5de46    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5de4a    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  @][y @ 1 +] dup nl hp a.ar [0][0][0] [39;49m[33;40m@[39;49m[34;49m = TODO ( "array out of bounds checking with variables?!" ) a.ar 32 dump ;  .. [39;49m[32;49m
0x7fbdaad5de4d    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fbdaad5de50    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fbdaad5de53    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ][y @ 1 +] dup nl hp a.ar [0][0][0] @ [39;49m[33;40m=[39;49m[34;49m TODO ( "array out of bounds checking with variables?!" ) a.ar 32 dump ;  .. [39;49m[32;49m
0x7fbdaad5de56    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fbdaad5de59    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fbdaad5de5d    488908                  mov [rax], rcx                                         [39;49m[32;49m
0x7fbdaad5de60    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m .. ] dup nl hp a.ar [0][0][0] @ = TODO ( [39;49m[33;40m"[39;49m[34;49marray out of bounds checking with variables?!" ) a.ar 32 dump ;  .. [39;49m[32;49m
0x7fbdaad5de64    48b895fdbfaabd7f0000    mov rax, 0x7fbdaabffd95    	[32;49m< string : '[39;49m[39;49marray out of bounds checking with variables?![39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fbdaad5de6e    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5de72    498906                  mov [r14], rax                                         [39;49m
[34;49m .. y @ 1 +] dup nl hp a.ar [0][0][0] @ = [39;49m[33;40mTODO[39;49m[34;49m ( "array out of bounds checking with variables?!" ) a.ar 32 dump ;  .. [39;49m[32;49m
0x7fbdaad5de75    49b9278cd5aabd7f0000    mov r9, 0x7fbdaad58c27                                 [39;49m[32;49m
0x7fbdaad5de7f    49ffd1                  call r9                    	< Root.[34;49mTODO[39;49m : 0x00007fbdaad58c27[32;49m >[39;49m[39;49m
[34;49m .. f bounds checking with variables?!" ) [39;49m[33;40ma[39;49m[34;49m.ar 32 dump ;  .. [39;49m[32;49m
0x7fbdaad5de82    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5de86    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fbdaad5de8d    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5de91    498906                  mov [r14], rax                                         [39;49m
[34;49m .. nds checking with variables?!" ) a.ar [39;49m[33;40m32[39;49m[34;49m dump ;  .. [39;49m[32;49m
0x7fbdaad5de94    48c7c020000000          mov rax, 0x20                                          [39;49m[32;49m
0x7fbdaad5de9b    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5de9f    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  checking with variables?!" ) a.ar 32 [39;49m[33;40mdump[39;49m[34;49m ;  .. [39;49m[32;49m
0x7fbdaad5dea2    49b830b43e1ebd550000    mov r8, 0x55bd1e3eb430                                 [39;49m[32;49m
0x7fbdaad5deac    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaad5deb6    49ffd1                  call r9                    	< Debug.[34;49mdump[39;49m : 0x000055bd1e3eb430[32;49m >[39;49m[39;49m
[34;49m .. king with variables?!" ) a.ar 32 dump [39;49m[33;40m;[39;49m[34;49m  .. [39;49m[32;49m
0x7fbdaad5deb9    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5debd    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaad5dec1    4983ee10                sub r14, 0x10                                          [39;49m[32;49m
0x7fbdaad5dec5    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'tct' :: codeSize = 566
Word : 0x00007fbdaa982c40 :: Compiled at : 0x00007fbdaad5dc8f
 =============================
::> 'wdiss' was called at namespaces/test/arrayTest.csl 313.16 <::

 0x00007fbdaa66d4b6
 0x00007fbdaa66d4ae

 -----------------------------
[35;40m array out of bounds checking with variables?![39;49m namespaces/test/arrayTest.csl 315.9
 -----------------------------


Dump at : namespaces/test/arrayTest.csl : 315.9 :
Dump : Address = 0x00007fbdaa66d493 : Number = 32 :: (little endian dump)
0x00007fbdaa66d493 :  77 00 00 00 00 00 77 00  00 00 00 00 00 00 00 00  w.....w. ........ 
0x00007fbdaa66d4a3 :  00 00 00 00 00 00 00 00  77 00 00 77 00 00 00 00  ........ w..w.... 

 0x00007fbdaa66df07
 0x00007fbdaa66df19
 0x00007fbdaa66df07
Dump at : namespaces/test/arrayTest.csl : 325.11 :
Dump : Address = 0x00007fbdaa66defe : Number = 32 :: (little endian dump)
0x00007fbdaa66defe :  00 00 00 00 00 00 00 00  00 4d 00 00 00 00 00 00  ........ .M...... 
0x00007fbdaa66df0e :  00 00 00 00 00 00 00 00  00 00 00 4d 00 00 00 00  ........ ...M.... 
 0x004d000000000010 0x00007fbdaa66e5f9
Dump at : namespaces/test/arrayTest.csl : 348.16 :
Dump : Address = 0x00007fbdaa66e5f9 : Number = 27 :: (little endian dump)
0x00007fbdaa66e5f9 :  00 00 00 00 00 00 4d 00  00 00 00 00 00 00 00 06  ......M. ........ 
0x00007fbdaa66e609 :  0f 00 00 00 00 00 4d 00  10 19 19 00 00 00 00 00  ......M. ........ 

 =============================
C_Syntax.[34;49mctcta[39;49m <:> csl compiled word, prefix
SourceCode for C_Syntax.[34;49mctcta[39;49m :> 
[34;49mvoid ctcta ( y cta a ) { a.ar [0][y + 1][0] = ' ; a.ar [y ][y + 1][ 0] = a.ar [0][y + 1][0] ; a.ar [y ][y + 1][1] = a.ar [y ][y + 1][0] ; a.ar [y + 1][y + 1][ 0 ] = a.ar [y ][y + 1][1] ; hp ( a.ar [y ][y + 1][1] ) ; a.ar [y + 1][y + 1][1] = a.ar [y + 1][y + 1][0] ; a.ar [y + 1][y + 1][ y ] = a.ar [y + 1][y + 1][1] ; a.ar [y + 1][y + 1][y + 1] = a.ar [y + 1][y + 1][y] ; hp ( &a.ar ) ; cadump ( &a.ar 27 ) ; } [39;49m
Source code file location of [34;49mctcta[39;49m : "namespaces/test/arrayTest.csl" : 334.6 :: we are now at : namespaces/test/arrayTest.csl : 350.19
Compiled with : optimizeOn, inlineOn, c_syntaxOn, infixOn, Jcc8 on
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xaad5e0b4 -- code size = 1079 bytes
TypeSignature : Any . Object 
 -----------------------------
Word :: C_Syntax.[34;49mctcta[39;49m : definition = 0x00007fbdaad5e0b4 : disassembly at namespaces/test/arrayTest.csl : 350.19 :
[34;49m ..                                  void [39;49m[33;40mctcta[39;49m[34;49m ( y cta a ) { a.ar [0][y + 1][0] = ' ; a.ar [y ][y + 1][ 0] = a.ar [0][y + 1][0] ;  a.ar [y ][y .. [39;49m[32;49m
0x7fbdaad5e0b4    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fbdaad5e0b8    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaad5e0bc    4981c608000000          add r14, 0x8                                           [39;49m
[34;49m ..              void ctcta ( y cta a ) { [39;49m[33;40ma[39;49m[34;49m.ar [0][y + 1][0] = ' ; a.ar [y ][y + 1][ 0] = a.ar [0][y + 1][0] ;  a.ar [y ][y + 1][1] = a.ar [y ] .. [39;49m[32;49m
0x7fbdaad5e0c3    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5e0c7    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fbdaad5e0ce    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5e0d2    498906                  mov [r14], rax                                         [39;49m
[34;49m ..     void ctcta ( y cta a ) { a.ar [0][[39;49m[33;40my[39;49m[34;49m + 1][0] = ' ; a.ar [y ][y + 1][ 0] = a.ar [0][y + 1][0] ;  a.ar [y ][y + 1][1] = a.ar [y ][y + 1][0 .. [39;49m[32;49m
0x7fbdaad5e0d5    498b47f0                mov rax, [r15-0x10]                                    [39;49m
[34;49m .. void ctcta ( y cta a ) { a.ar [0][y + [39;49m[33;40m1[39;49m[34;49m][0] = ' ; a.ar [y ][y + 1][ 0] = a.ar [0][y + 1][0] ;  a.ar [y ][y + 1][1] = a.ar [y ][y + 1][0] ;  .. [39;49m[32;49m
0x7fbdaad5e0d9    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m ..   void ctcta ( y cta a ) { a.ar [0][y [39;49m[33;40m+[39;49m[34;49m 1][0] = ' ; a.ar [y ][y + 1][ 0] = a.ar [0][y + 1][0] ;  a.ar [y ][y + 1][1] = a.ar [y ][y + 1][0]  .. [39;49m[32;49m
0x7fbdaad5e0e0    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fbdaad5e0e3    486bc003                imul rax, rax, 0x3                                     [39;49m[32;49m
0x7fbdaad5e0e7    490106                  add [r14], rax                                         [39;49m
[34;49m .. ta ( y cta a ) { a.ar [0][y + 1][0] = [39;49m[33;40m'M'[39;49m[34;49m a.ar [y ][y + 1][ 0] = a.ar [0][y + 1][0] ;  a.ar [y ][y + 1][1] = a.ar [y ][y + 1][0] ;  a.ar [y .. [39;49m[32;49m
0x7fbdaad5e0ea    48c7c04d000000          mov rax, 0x4d                                          [39;49m[32;49m
0x7fbdaad5e0f1    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5e0f5    498906                  mov [r14], rax                                         [39;49m
[34;49m .. tcta ( y cta a ) { a.ar [0][y + 1][0] [39;49m[33;40m=[39;49m[34;49m ' ; a.ar [y ][y + 1][ 0] = a.ar [0][y + 1][0] ;  a.ar [y ][y + 1][1] = a.ar [y ][y + 1][0] ;  a.ar  .. [39;49m[32;49m
0x7fbdaad5e0f8    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fbdaad5e0fb    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fbdaad5e0ff    488908                  mov [rax], rcx                                         [39;49m[32;49m
0x7fbdaad5e102    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m ..  y cta a ) { a.ar [0][y + 1][0] = ' ; [39;49m[33;40ma[39;49m[34;49m.ar [y ][y + 1][ 0] = a.ar [0][y + 1][0] ;  a.ar [y ][y + 1][1] = a.ar [y ][y + 1][0] ;  a.ar [y + 1 .. [39;49m[32;49m
0x7fbdaad5e106    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5e10a    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fbdaad5e111    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5e115    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  a ) { a.ar [0][y + 1][0] = ' ; a.ar [[39;49m[33;40my[39;49m[34;49m ][y + 1][ 0] = a.ar [0][y + 1][0] ;  a.ar [y ][y + 1][1] = a.ar [y ][y + 1][0] ;  a.ar [y + 1][y +  .. [39;49m[32;49m
0x7fbdaad5e118    498b47f0                mov rax, [r15-0x10]                                    [39;49m[32;49m
0x7fbdaad5e11c    486bc009                imul rax, rax, 0x9                                     [39;49m[32;49m
0x7fbdaad5e120    490106                  add [r14], rax                                         [39;49m
[34;49m ..  { a.ar [0][y + 1][0] = ' ; a.ar [y ][[39;49m[33;40my[39;49m[34;49m + 1][ 0] = a.ar [0][y + 1][0] ;  a.ar [y ][y + 1][1] = a.ar [y ][y + 1][0] ;  a.ar [y + 1][y + 1][  .. [39;49m[32;49m
0x7fbdaad5e123    498b47f0                mov rax, [r15-0x10]                                    [39;49m
[34;49m .. .ar [0][y + 1][0] = ' ; a.ar [y ][y + [39;49m[33;40m1[39;49m[34;49m][ 0] = a.ar [0][y + 1][0] ;  a.ar [y ][y + 1][1] = a.ar [y ][y + 1][0] ;  a.ar [y + 1][y + 1][ 0 ]  .. [39;49m[32;49m
0x7fbdaad5e127    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m ..  a.ar [0][y + 1][0] = ' ; a.ar [y ][y [39;49m[33;40m+[39;49m[34;49m 1][ 0] = a.ar [0][y + 1][0] ;  a.ar [y ][y + 1][1] = a.ar [y ][y + 1][0] ;  a.ar [y + 1][y + 1][ 0  .. [39;49m[32;49m
0x7fbdaad5e12e    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fbdaad5e131    486bc003                imul rax, rax, 0x3                                     [39;49m[32;49m
0x7fbdaad5e135    490106                  add [r14], rax                                         [39;49m
[34;49m ..  + 1][0] = ' ; a.ar [y ][y + 1][ 0] = [39;49m[33;40ma[39;49m[34;49m.ar [0][y + 1][0] ;  a.ar [y ][y + 1][1] = a.ar [y ][y + 1][0] ;  a.ar [y + 1][y + 1][ 0 ] = a.ar [y .. [39;49m[32;49m
0x7fbdaad5e138    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5e13c    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fbdaad5e143    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fbdaad5e146    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5e14a    498906                  mov [r14], rax                                         [39;49m
[34;49m .. = ' ; a.ar [y ][y + 1][ 0] = a.ar [0][[39;49m[33;40my[39;49m[34;49m + 1][0] ;  a.ar [y ][y + 1][1] = a.ar [y ][y + 1][0] ;  a.ar [y + 1][y + 1][ 0 ] = a.ar [y ][y + 1] .. [39;49m[32;49m
0x7fbdaad5e14d    498b47f0                mov rax, [r15-0x10]                                    [39;49m
[34;49m .. ; a.ar [y ][y + 1][ 0] = a.ar [0][y + [39;49m[33;40m1[39;49m[34;49m][0] ;  a.ar [y ][y + 1][1] = a.ar [y ][y + 1][0] ;  a.ar [y + 1][y + 1][ 0 ] = a.ar [y ][y + 1][1]  .. [39;49m[32;49m
0x7fbdaad5e151    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m .. ' ; a.ar [y ][y + 1][ 0] = a.ar [0][y [39;49m[33;40m+[39;49m[34;49m 1][0] ;  a.ar [y ][y + 1][1] = a.ar [y ][y + 1][0] ;  a.ar [y + 1][y + 1][ 0 ] = a.ar [y ][y + 1][1 .. [39;49m[32;49m
0x7fbdaad5e158    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fbdaad5e15b    486bc003                imul rax, rax, 0x3                                     [39;49m[32;49m
0x7fbdaad5e15f    490106                  add [r14], rax                                         [39;49m
[34;49m .. [y + 1][0] = ' ; a.ar [y ][y + 1][ 0] [39;49m[33;40m=[39;49m[34;49m a.ar [0][y + 1][0] ;  a.ar [y ][y + 1][1] = a.ar [y ][y + 1][0] ;  a.ar [y + 1][y + 1][ 0 ] = a.ar  .. [39;49m[32;49m
0x7fbdaad5e162    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fbdaad5e165    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fbdaad5e169    488908                  mov [rax], rcx                                         [39;49m[32;49m
0x7fbdaad5e16c    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m ..  ][y + 1][ 0] = a.ar [0][y + 1][0] ;  [39;49m[33;40ma[39;49m[34;49m.ar [y ][y + 1][1] = a.ar [y ][y + 1][0] ;  a.ar [y + 1][y + 1][ 0 ] = a.ar [y ][y + 1][1] ;  hp ( a .. [39;49m[32;49m
0x7fbdaad5e170    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5e174    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fbdaad5e17b    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5e17f    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  1][ 0] = a.ar [0][y + 1][0] ;  a.ar [[39;49m[33;40my[39;49m[34;49m ][y + 1][1] = a.ar [y ][y + 1][0] ;  a.ar [y + 1][y + 1][ 0 ] = a.ar [y ][y + 1][1] ;  hp ( a.ar [y .. [39;49m[32;49m
0x7fbdaad5e182    498b47f0                mov rax, [r15-0x10]                                    [39;49m[32;49m
0x7fbdaad5e186    486bc009                imul rax, rax, 0x9                                     [39;49m[32;49m
0x7fbdaad5e18a    490106                  add [r14], rax                                         [39;49m
[34;49m ..  0] = a.ar [0][y + 1][0] ;  a.ar [y ][[39;49m[33;40my[39;49m[34;49m + 1][1] = a.ar [y ][y + 1][0] ;  a.ar [y + 1][y + 1][ 0 ] = a.ar [y ][y + 1][1] ;  hp ( a.ar [y ][y .. [39;49m[32;49m
0x7fbdaad5e18d    498b47f0                mov rax, [r15-0x10]                                    [39;49m
[34;49m .. = a.ar [0][y + 1][0] ;  a.ar [y ][y + [39;49m[33;40m1[39;49m[34;49m][1] = a.ar [y ][y + 1][0] ;  a.ar [y + 1][y + 1][ 0 ] = a.ar [y ][y + 1][1] ;  hp ( a.ar [y ][y + 1 .. [39;49m[32;49m
0x7fbdaad5e191    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m .. ] = a.ar [0][y + 1][0] ;  a.ar [y ][y [39;49m[33;40m+[39;49m[34;49m 1][1] = a.ar [y ][y + 1][0] ;  a.ar [y + 1][y + 1][ 0 ] = a.ar [y ][y + 1][1] ;  hp ( a.ar [y ][y + .. [39;49m[32;49m
0x7fbdaad5e198    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fbdaad5e19b    486bc003                imul rax, rax, 0x3                                     [39;49m[32;49m
0x7fbdaad5e19f    490106                  add [r14], rax                                         [39;49m
[34;49m .. .ar [0][y + 1][0] ;  a.ar [y ][y + 1][[39;49m[33;40m1[39;49m[34;49m] = a.ar [y ][y + 1][0] ;  a.ar [y + 1][y + 1][ 0 ] = a.ar [y ][y + 1][1] ;  hp ( a.ar [y ][y + 1][1 .. [39;49m[32;49m
0x7fbdaad5e1a2    48c7c001000000          mov rax, 0x1                                           [39;49m[32;49m
0x7fbdaad5e1a9    490106                  add [r14], rax                                         [39;49m
[34;49m .. 0][y + 1][0] ;  a.ar [y ][y + 1][1] = [39;49m[33;40ma[39;49m[34;49m.ar [y ][y + 1][0] ;  a.ar [y + 1][y + 1][ 0 ] = a.ar [y ][y + 1][1] ;  hp ( a.ar [y ][y + 1][1] ) ; .. [39;49m[32;49m
0x7fbdaad5e1ac    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5e1b0    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fbdaad5e1b7    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fbdaad5e1ba    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5e1be    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  1][0] ;  a.ar [y ][y + 1][1] = a.ar [[39;49m[33;40my[39;49m[34;49m ][y + 1][0] ;  a.ar [y + 1][y + 1][ 0 ] = a.ar [y ][y + 1][1] ;  hp ( a.ar [y ][y + 1][1] ) ; a.ar  .. [39;49m[32;49m
0x7fbdaad5e1c1    498b47f0                mov rax, [r15-0x10]                                    [39;49m[32;49m
0x7fbdaad5e1c5    486bc009                imul rax, rax, 0x9                                     [39;49m[32;49m
0x7fbdaad5e1c9    490106                  add [r14], rax                                         [39;49m
[34;49m .. 0] ;  a.ar [y ][y + 1][1] = a.ar [y ][[39;49m[33;40my[39;49m[34;49m + 1][0] ;  a.ar [y + 1][y + 1][ 0 ] = a.ar [y ][y + 1][1] ;  hp ( a.ar [y ][y + 1][1] ) ; a.ar [y + .. [39;49m[32;49m
0x7fbdaad5e1cc    498b47f0                mov rax, [r15-0x10]                                    [39;49m
[34;49m ..   a.ar [y ][y + 1][1] = a.ar [y ][y + [39;49m[33;40m1[39;49m[34;49m][0] ;  a.ar [y + 1][y + 1][ 0 ] = a.ar [y ][y + 1][1] ;  hp ( a.ar [y ][y + 1][1] ) ; a.ar [y + 1][ .. [39;49m[32;49m
0x7fbdaad5e1d0    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m ..  ;  a.ar [y ][y + 1][1] = a.ar [y ][y [39;49m[33;40m+[39;49m[34;49m 1][0] ;  a.ar [y + 1][y + 1][ 0 ] = a.ar [y ][y + 1][1] ;  hp ( a.ar [y ][y + 1][1] ) ; a.ar [y + 1 .. [39;49m[32;49m
0x7fbdaad5e1d7    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fbdaad5e1da    486bc003                imul rax, rax, 0x3                                     [39;49m[32;49m
0x7fbdaad5e1de    490106                  add [r14], rax                                         [39;49m
[34;49m ..  [0][y + 1][0] ;  a.ar [y ][y + 1][1] [39;49m[33;40m=[39;49m[34;49m a.ar [y ][y + 1][0] ;  a.ar [y + 1][y + 1][ 0 ] = a.ar [y ][y + 1][1] ;  hp ( a.ar [y ][y + 1][1] ) .. [39;49m[32;49m
0x7fbdaad5e1e1    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fbdaad5e1e4    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fbdaad5e1e8    488908                  mov [rax], rcx                                         [39;49m[32;49m
0x7fbdaad5e1eb    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m ..  ][y + 1][1] = a.ar [y ][y + 1][0] ;  [39;49m[33;40ma[39;49m[34;49m.ar [y + 1][y + 1][ 0 ] = a.ar [y ][y + 1][1] ;  hp ( a.ar [y ][y + 1][1] ) ; a.ar [y + 1][y + 1][1] .. [39;49m[32;49m
0x7fbdaad5e1ef    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5e1f3    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fbdaad5e1fa    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5e1fe    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  1][1] = a.ar [y ][y + 1][0] ;  a.ar [[39;49m[33;40my[39;49m[34;49m + 1][y + 1][ 0 ] = a.ar [y ][y + 1][1] ;  hp ( a.ar [y ][y + 1][1] ) ; a.ar [y + 1][y + 1][1] = a.a .. [39;49m[32;49m
0x7fbdaad5e201    498b47f0                mov rax, [r15-0x10]                                    [39;49m
[34;49m .. 1] = a.ar [y ][y + 1][0] ;  a.ar [y + [39;49m[33;40m1[39;49m[34;49m][y + 1][ 0 ] = a.ar [y ][y + 1][1] ;  hp ( a.ar [y ][y + 1][1] ) ; a.ar [y + 1][y + 1][1] = a.ar [y .. [39;49m[32;49m
0x7fbdaad5e205    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m .. ][1] = a.ar [y ][y + 1][0] ;  a.ar [y [39;49m[33;40m+[39;49m[34;49m 1][y + 1][ 0 ] = a.ar [y ][y + 1][1] ;  hp ( a.ar [y ][y + 1][1] ) ; a.ar [y + 1][y + 1][1] = a.ar  .. [39;49m[32;49m
0x7fbdaad5e20c    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fbdaad5e20f    486bc009                imul rax, rax, 0x9                                     [39;49m[32;49m
0x7fbdaad5e213    490106                  add [r14], rax                                         [39;49m
[34;49m .. = a.ar [y ][y + 1][0] ;  a.ar [y + 1][[39;49m[33;40my[39;49m[34;49m + 1][ 0 ] = a.ar [y ][y + 1][1] ;  hp ( a.ar [y ][y + 1][1] ) ; a.ar [y + 1][y + 1][1] = a.ar [y +  .. [39;49m[32;49m
0x7fbdaad5e216    498b47f0                mov rax, [r15-0x10]                                    [39;49m
[34;49m .. ar [y ][y + 1][0] ;  a.ar [y + 1][y + [39;49m[33;40m1[39;49m[34;49m][ 0 ] = a.ar [y ][y + 1][1] ;  hp ( a.ar [y ][y + 1][1] ) ; a.ar [y + 1][y + 1][1] = a.ar [y + 1][y .. [39;49m[32;49m
0x7fbdaad5e21a    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m .. a.ar [y ][y + 1][0] ;  a.ar [y + 1][y [39;49m[33;40m+[39;49m[34;49m 1][ 0 ] = a.ar [y ][y + 1][1] ;  hp ( a.ar [y ][y + 1][1] ) ; a.ar [y + 1][y + 1][1] = a.ar [y + 1] .. [39;49m[32;49m
0x7fbdaad5e221    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fbdaad5e224    486bc003                imul rax, rax, 0x3                                     [39;49m[32;49m
0x7fbdaad5e228    490106                  add [r14], rax                                         [39;49m
[34;49m .. + 1][0] ;  a.ar [y + 1][y + 1][ 0 ] = [39;49m[33;40ma[39;49m[34;49m.ar [y ][y + 1][1] ;  hp ( a.ar [y ][y + 1][1] ) ; a.ar [y + 1][y + 1][1] = a.ar [y + 1][y + 1][0] ; .. [39;49m[32;49m
0x7fbdaad5e22b    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5e22f    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fbdaad5e236    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fbdaad5e239    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5e23d    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ] ;  a.ar [y + 1][y + 1][ 0 ] = a.ar [[39;49m[33;40my[39;49m[34;49m ][y + 1][1] ;  hp ( a.ar [y ][y + 1][1] ) ; a.ar [y + 1][y + 1][1] = a.ar [y + 1][y + 1][0] ;  a.ar .. [39;49m[32;49m
0x7fbdaad5e240    498b47f0                mov rax, [r15-0x10]                                    [39;49m[32;49m
0x7fbdaad5e244    486bc009                imul rax, rax, 0x9                                     [39;49m[32;49m
0x7fbdaad5e248    490106                  add [r14], rax                                         [39;49m
[34;49m ..  a.ar [y + 1][y + 1][ 0 ] = a.ar [y ][[39;49m[33;40my[39;49m[34;49m + 1][1] ;  hp ( a.ar [y ][y + 1][1] ) ; a.ar [y + 1][y + 1][1] = a.ar [y + 1][y + 1][0] ;  a.ar [y  .. [39;49m[32;49m
0x7fbdaad5e24b    498b47f0                mov rax, [r15-0x10]                                    [39;49m
[34;49m .. r [y + 1][y + 1][ 0 ] = a.ar [y ][y + [39;49m[33;40m1[39;49m[34;49m][1] ;  hp ( a.ar [y ][y + 1][1] ) ; a.ar [y + 1][y + 1][1] = a.ar [y + 1][y + 1][0] ;  a.ar [y + 1] .. [39;49m[32;49m
0x7fbdaad5e24f    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m .. .ar [y + 1][y + 1][ 0 ] = a.ar [y ][y [39;49m[33;40m+[39;49m[34;49m 1][1] ;  hp ( a.ar [y ][y + 1][1] ) ; a.ar [y + 1][y + 1][1] = a.ar [y + 1][y + 1][0] ;  a.ar [y +  .. [39;49m[32;49m
0x7fbdaad5e256    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fbdaad5e259    486bc003                imul rax, rax, 0x3                                     [39;49m[32;49m
0x7fbdaad5e25d    490106                  add [r14], rax                                         [39;49m
[34;49m .. y + 1][y + 1][ 0 ] = a.ar [y ][y + 1][[39;49m[33;40m1[39;49m[34;49m] ;  hp ( a.ar [y ][y + 1][1] ) ; a.ar [y + 1][y + 1][1] = a.ar [y + 1][y + 1][0] ;  a.ar [y + 1][y  .. [39;49m[32;49m
0x7fbdaad5e260    48c7c001000000          mov rax, 0x1                                           [39;49m[32;49m
0x7fbdaad5e267    490106                  add [r14], rax                                         [39;49m
[34;49m .. y + 1][0] ;  a.ar [y + 1][y + 1][ 0 ] [39;49m[33;40m=[39;49m[34;49m a.ar [y ][y + 1][1] ;  hp ( a.ar [y ][y + 1][1] ) ; a.ar [y + 1][y + 1][1] = a.ar [y + 1][y + 1][0] .. [39;49m[32;49m
0x7fbdaad5e26a    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fbdaad5e26d    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fbdaad5e271    488908                  mov [rax], rcx                                         [39;49m[32;49m
0x7fbdaad5e274    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m .. 1][ 0 ] = a.ar [y ][y + 1][1] ;  hp ( [39;49m[33;40ma[39;49m[34;49m.ar [y ][y + 1][1] ) ; a.ar [y + 1][y + 1][1] = a.ar [y + 1][y + 1][0] ;  a.ar [y + 1][y + 1][ y ] = .. [39;49m[32;49m
0x7fbdaad5e278    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5e27c    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fbdaad5e283    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fbdaad5e286    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5e28a    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ] = a.ar [y ][y + 1][1] ;  hp ( a.ar [[39;49m[33;40my[39;49m[34;49m ][y + 1][1] ) ; a.ar [y + 1][y + 1][1] = a.ar [y + 1][y + 1][0] ;  a.ar [y + 1][y + 1][ y ] = a.ar  .. [39;49m[32;49m
0x7fbdaad5e28d    498b47f0                mov rax, [r15-0x10]                                    [39;49m[32;49m
0x7fbdaad5e291    486bc009                imul rax, rax, 0x9                                     [39;49m[32;49m
0x7fbdaad5e295    490106                  add [r14], rax                                         [39;49m
[34;49m .. a.ar [y ][y + 1][1] ;  hp ( a.ar [y ][[39;49m[33;40my[39;49m[34;49m + 1][1] ) ; a.ar [y + 1][y + 1][1] = a.ar [y + 1][y + 1][0] ;  a.ar [y + 1][y + 1][ y ] = a.ar [y + .. [39;49m[32;49m
0x7fbdaad5e298    498b47f0                mov rax, [r15-0x10]                                    [39;49m
[34;49m ..  [y ][y + 1][1] ;  hp ( a.ar [y ][y + [39;49m[33;40m1[39;49m[34;49m][1] ) ; a.ar [y + 1][y + 1][1] = a.ar [y + 1][y + 1][0] ;  a.ar [y + 1][y + 1][ y ] = a.ar [y + 1][ .. [39;49m[32;49m
0x7fbdaad5e29c    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m .. ar [y ][y + 1][1] ;  hp ( a.ar [y ][y [39;49m[33;40m+[39;49m[34;49m 1][1] ) ; a.ar [y + 1][y + 1][1] = a.ar [y + 1][y + 1][0] ;  a.ar [y + 1][y + 1][ y ] = a.ar [y + 1 .. [39;49m[32;49m
0x7fbdaad5e2a3    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fbdaad5e2a6    486bc003                imul rax, rax, 0x3                                     [39;49m[32;49m
0x7fbdaad5e2aa    490106                  add [r14], rax                                         [39;49m
[34;49m ..  ][y + 1][1] ;  hp ( a.ar [y ][y + 1][[39;49m[33;40m1[39;49m[34;49m] ) ; a.ar [y + 1][y + 1][1] = a.ar [y + 1][y + 1][0] ;  a.ar [y + 1][y + 1][ y ] = a.ar [y + 1][y + .. [39;49m[32;49m
0x7fbdaad5e2ad    48c7c001000000          mov rax, 0x1                                           [39;49m[32;49m
0x7fbdaad5e2b4    490106                  add [r14], rax                                         [39;49m
[34;49m .. [y + 1][ 0 ] = a.ar [y ][y + 1][1] ;  [39;49m[33;40mhp[39;49m[34;49m ( a.ar [y ][y + 1][1] ) ; a.ar [y + 1][y + 1][1] = a.ar [y + 1][y + 1][0] ;  a.ar [y + 1][y + 1][  .. [39;49m[32;49m
0x7fbdaad5e2b7    49b98764d5aabd7f0000    mov r9, 0x7fbdaad56487                                 [39;49m[32;49m
0x7fbdaad5e2c1    49ffd1                  call r9                    	< Int.[34;49mhp[39;49m : 0x00007fbdaad56487[32;49m >[39;49m[39;49m
[34;49m .. 1][1] ;  hp ( a.ar [y ][y + 1][1] ) ; [39;49m[33;40ma[39;49m[34;49m.ar [y + 1][y + 1][1] = a.ar [y + 1][y + 1][0] ;  a.ar [y + 1][y + 1][ y ] = a.ar [y + 1][y + 1][1]  .. [39;49m[32;49m
0x7fbdaad5e2c4    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5e2c8    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fbdaad5e2cf    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5e2d3    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ;  hp ( a.ar [y ][y + 1][1] ) ; a.ar [[39;49m[33;40my[39;49m[34;49m + 1][y + 1][1] = a.ar [y + 1][y + 1][0] ;  a.ar [y + 1][y + 1][ y ] = a.ar [y + 1][y + 1][1] ;  a.a .. [39;49m[32;49m
0x7fbdaad5e2d6    498b47f0                mov rax, [r15-0x10]                                    [39;49m
[34;49m .. p ( a.ar [y ][y + 1][1] ) ; a.ar [y + [39;49m[33;40m1[39;49m[34;49m][y + 1][1] = a.ar [y + 1][y + 1][0] ;  a.ar [y + 1][y + 1][ y ] = a.ar [y + 1][y + 1][1] ;  a.ar [y .. [39;49m[32;49m
0x7fbdaad5e2da    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m ..  hp ( a.ar [y ][y + 1][1] ) ; a.ar [y [39;49m[33;40m+[39;49m[34;49m 1][y + 1][1] = a.ar [y + 1][y + 1][0] ;  a.ar [y + 1][y + 1][ y ] = a.ar [y + 1][y + 1][1] ;  a.ar  .. [39;49m[32;49m
0x7fbdaad5e2e1    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fbdaad5e2e4    486bc009                imul rax, rax, 0x9                                     [39;49m[32;49m
0x7fbdaad5e2e8    490106                  add [r14], rax                                         [39;49m
[34;49m ..  a.ar [y ][y + 1][1] ) ; a.ar [y + 1][[39;49m[33;40my[39;49m[34;49m + 1][1] = a.ar [y + 1][y + 1][0] ;  a.ar [y + 1][y + 1][ y ] = a.ar [y + 1][y + 1][1] ;  a.ar [y +  .. [39;49m[32;49m
0x7fbdaad5e2eb    498b47f0                mov rax, [r15-0x10]                                    [39;49m
[34;49m .. r [y ][y + 1][1] ) ; a.ar [y + 1][y + [39;49m[33;40m1[39;49m[34;49m][1] = a.ar [y + 1][y + 1][0] ;  a.ar [y + 1][y + 1][ y ] = a.ar [y + 1][y + 1][1] ;  a.ar [y + 1][y .. [39;49m[32;49m
0x7fbdaad5e2ef    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m .. .ar [y ][y + 1][1] ) ; a.ar [y + 1][y [39;49m[33;40m+[39;49m[34;49m 1][1] = a.ar [y + 1][y + 1][0] ;  a.ar [y + 1][y + 1][ y ] = a.ar [y + 1][y + 1][1] ;  a.ar [y + 1] .. [39;49m[32;49m
0x7fbdaad5e2f6    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fbdaad5e2f9    486bc003                imul rax, rax, 0x3                                     [39;49m[32;49m
0x7fbdaad5e2fd    490106                  add [r14], rax                                         [39;49m
[34;49m .. y ][y + 1][1] ) ; a.ar [y + 1][y + 1][[39;49m[33;40m1[39;49m[34;49m] = a.ar [y + 1][y + 1][0] ;  a.ar [y + 1][y + 1][ y ] = a.ar [y + 1][y + 1][1] ;  a.ar [y + 1][y +  .. [39;49m[32;49m
0x7fbdaad5e300    48c7c001000000          mov rax, 0x1                                           [39;49m[32;49m
0x7fbdaad5e307    490106                  add [r14], rax                                         [39;49m
[34;49m ..  + 1][1] ) ; a.ar [y + 1][y + 1][1] = [39;49m[33;40ma[39;49m[34;49m.ar [y + 1][y + 1][0] ;  a.ar [y + 1][y + 1][ y ] = a.ar [y + 1][y + 1][1] ;  a.ar [y + 1][y + 1][y  .. [39;49m[32;49m
0x7fbdaad5e30a    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5e30e    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fbdaad5e315    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fbdaad5e318    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5e31c    498906                  mov [r14], rax                                         [39;49m
[34;49m .. 1] ) ; a.ar [y + 1][y + 1][1] = a.ar [[39;49m[33;40my[39;49m[34;49m + 1][y + 1][0] ;  a.ar [y + 1][y + 1][ y ] = a.ar [y + 1][y + 1][1] ;  a.ar [y + 1][y + 1][y + 1] = .. [39;49m[32;49m
0x7fbdaad5e31f    498b47f0                mov rax, [r15-0x10]                                    [39;49m
[34;49m ..  ; a.ar [y + 1][y + 1][1] = a.ar [y + [39;49m[33;40m1[39;49m[34;49m][y + 1][0] ;  a.ar [y + 1][y + 1][ y ] = a.ar [y + 1][y + 1][1] ;  a.ar [y + 1][y + 1][y + 1] = a.a .. [39;49m[32;49m
0x7fbdaad5e323    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m ..  ) ; a.ar [y + 1][y + 1][1] = a.ar [y [39;49m[33;40m+[39;49m[34;49m 1][y + 1][0] ;  a.ar [y + 1][y + 1][ y ] = a.ar [y + 1][y + 1][1] ;  a.ar [y + 1][y + 1][y + 1] = a .. [39;49m[32;49m
0x7fbdaad5e32a    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fbdaad5e32d    486bc009                imul rax, rax, 0x9                                     [39;49m[32;49m
0x7fbdaad5e331    490106                  add [r14], rax                                         [39;49m
[34;49m .. a.ar [y + 1][y + 1][1] = a.ar [y + 1][[39;49m[33;40my[39;49m[34;49m + 1][0] ;  a.ar [y + 1][y + 1][ y ] = a.ar [y + 1][y + 1][1] ;  a.ar [y + 1][y + 1][y + 1] = a.ar [ .. [39;49m[32;49m
0x7fbdaad5e334    498b47f0                mov rax, [r15-0x10]                                    [39;49m
[34;49m ..  [y + 1][y + 1][1] = a.ar [y + 1][y + [39;49m[33;40m1[39;49m[34;49m][0] ;  a.ar [y + 1][y + 1][ y ] = a.ar [y + 1][y + 1][1] ;  a.ar [y + 1][y + 1][y + 1] = a.ar [y +  .. [39;49m[32;49m
0x7fbdaad5e338    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m .. ar [y + 1][y + 1][1] = a.ar [y + 1][y [39;49m[33;40m+[39;49m[34;49m 1][0] ;  a.ar [y + 1][y + 1][ y ] = a.ar [y + 1][y + 1][1] ;  a.ar [y + 1][y + 1][y + 1] = a.ar [y  .. [39;49m[32;49m
0x7fbdaad5e33f    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fbdaad5e342    486bc003                imul rax, rax, 0x3                                     [39;49m[32;49m
0x7fbdaad5e346    490106                  add [r14], rax                                         [39;49m
[34;49m .. [y + 1][1] ) ; a.ar [y + 1][y + 1][1] [39;49m[33;40m=[39;49m[34;49m a.ar [y + 1][y + 1][0] ;  a.ar [y + 1][y + 1][ y ] = a.ar [y + 1][y + 1][1] ;  a.ar [y + 1][y + 1][ .. [39;49m[32;49m
0x7fbdaad5e349    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fbdaad5e34c    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fbdaad5e350    488908                  mov [rax], rcx                                         [39;49m[32;49m
0x7fbdaad5e353    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m .. y + 1][1] = a.ar [y + 1][y + 1][0] ;  [39;49m[33;40ma[39;49m[34;49m.ar [y + 1][y + 1][ y ] = a.ar [y + 1][y + 1][1] ;  a.ar [y + 1][y + 1][y + 1] = a.ar [y + 1][y + 1] .. [39;49m[32;49m
0x7fbdaad5e357    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5e35b    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fbdaad5e362    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5e366    498906                  mov [r14], rax                                         [39;49m
[34;49m .. [1] = a.ar [y + 1][y + 1][0] ;  a.ar [[39;49m[33;40my[39;49m[34;49m + 1][y + 1][ y ] = a.ar [y + 1][y + 1][1] ;  a.ar [y + 1][y + 1][y + 1] = a.ar [y + 1][y + 1][y] ;  .. [39;49m[32;49m
0x7fbdaad5e369    498b47f0                mov rax, [r15-0x10]                                    [39;49m
[34;49m .. = a.ar [y + 1][y + 1][0] ;  a.ar [y + [39;49m[33;40m1[39;49m[34;49m][y + 1][ y ] = a.ar [y + 1][y + 1][1] ;  a.ar [y + 1][y + 1][y + 1] = a.ar [y + 1][y + 1][y] ;  hp  .. [39;49m[32;49m
0x7fbdaad5e36d    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m .. ] = a.ar [y + 1][y + 1][0] ;  a.ar [y [39;49m[33;40m+[39;49m[34;49m 1][y + 1][ y ] = a.ar [y + 1][y + 1][1] ;  a.ar [y + 1][y + 1][y + 1] = a.ar [y + 1][y + 1][y] ;  h .. [39;49m[32;49m
0x7fbdaad5e374    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fbdaad5e377    486bc009                imul rax, rax, 0x9                                     [39;49m[32;49m
0x7fbdaad5e37b    490106                  add [r14], rax                                         [39;49m
[34;49m .. .ar [y + 1][y + 1][0] ;  a.ar [y + 1][[39;49m[33;40my[39;49m[34;49m + 1][ y ] = a.ar [y + 1][y + 1][1] ;  a.ar [y + 1][y + 1][y + 1] = a.ar [y + 1][y + 1][y] ;  hp ( & .. [39;49m[32;49m
0x7fbdaad5e37e    498b47f0                mov rax, [r15-0x10]                                    [39;49m
[34;49m .. [y + 1][y + 1][0] ;  a.ar [y + 1][y + [39;49m[33;40m1[39;49m[34;49m][ y ] = a.ar [y + 1][y + 1][1] ;  a.ar [y + 1][y + 1][y + 1] = a.ar [y + 1][y + 1][y] ;  hp ( &a.ar .. [39;49m[32;49m
0x7fbdaad5e382    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m .. r [y + 1][y + 1][0] ;  a.ar [y + 1][y [39;49m[33;40m+[39;49m[34;49m 1][ y ] = a.ar [y + 1][y + 1][1] ;  a.ar [y + 1][y + 1][y + 1] = a.ar [y + 1][y + 1][y] ;  hp ( &a. .. [39;49m[32;49m
0x7fbdaad5e389    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fbdaad5e38c    486bc003                imul rax, rax, 0x3                                     [39;49m[32;49m
0x7fbdaad5e390    490106                  add [r14], rax                                         [39;49m
[34;49m ..  1][y + 1][0] ;  a.ar [y + 1][y + 1][ [39;49m[33;40my[39;49m[34;49m ] = a.ar [y + 1][y + 1][1] ;  a.ar [y + 1][y + 1][y + 1] = a.ar [y + 1][y + 1][y] ;  hp ( &a.ar ) ; .. [39;49m[32;49m
0x7fbdaad5e393    498b47f0                mov rax, [r15-0x10]                                    [39;49m[32;49m
0x7fbdaad5e397    490106                  add [r14], rax                                         [39;49m
[34;49m .. + 1][0] ;  a.ar [y + 1][y + 1][ y ] = [39;49m[33;40ma[39;49m[34;49m.ar [y + 1][y + 1][1] ;  a.ar [y + 1][y + 1][y + 1] = a.ar [y + 1][y + 1][y] ;  hp ( &a.ar ) ; cadum .. [39;49m[32;49m
0x7fbdaad5e39a    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5e39e    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fbdaad5e3a5    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fbdaad5e3a8    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5e3ac    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ] ;  a.ar [y + 1][y + 1][ y ] = a.ar [[39;49m[33;40my[39;49m[34;49m + 1][y + 1][1] ;  a.ar [y + 1][y + 1][y + 1] = a.ar [y + 1][y + 1][y] ;  hp ( &a.ar ) ; cadump ( &a .. [39;49m[32;49m
0x7fbdaad5e3af    498b47f0                mov rax, [r15-0x10]                                    [39;49m
[34;49m ..  a.ar [y + 1][y + 1][ y ] = a.ar [y + [39;49m[33;40m1[39;49m[34;49m][y + 1][1] ;  a.ar [y + 1][y + 1][y + 1] = a.ar [y + 1][y + 1][y] ;  hp ( &a.ar ) ; cadump ( &a.ar  .. [39;49m[32;49m
0x7fbdaad5e3b3    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m .. ;  a.ar [y + 1][y + 1][ y ] = a.ar [y [39;49m[33;40m+[39;49m[34;49m 1][y + 1][1] ;  a.ar [y + 1][y + 1][y + 1] = a.ar [y + 1][y + 1][y] ;  hp ( &a.ar ) ; cadump ( &a.a .. [39;49m[32;49m
0x7fbdaad5e3ba    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fbdaad5e3bd    486bc009                imul rax, rax, 0x9                                     [39;49m[32;49m
0x7fbdaad5e3c1    490106                  add [r14], rax                                         [39;49m
[34;49m .. ar [y + 1][y + 1][ y ] = a.ar [y + 1][[39;49m[33;40my[39;49m[34;49m + 1][1] ;  a.ar [y + 1][y + 1][y + 1] = a.ar [y + 1][y + 1][y] ;  hp ( &a.ar ) ; cadump ( &a.ar 27  .. [39;49m[32;49m
0x7fbdaad5e3c4    498b47f0                mov rax, [r15-0x10]                                    [39;49m
[34;49m .. y + 1][y + 1][ y ] = a.ar [y + 1][y + [39;49m[33;40m1[39;49m[34;49m][1] ;  a.ar [y + 1][y + 1][y + 1] = a.ar [y + 1][y + 1][y] ;  hp ( &a.ar ) ; cadump ( &a.ar 27 ) ;  .. [39;49m[32;49m
0x7fbdaad5e3c8    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m ..  [y + 1][y + 1][ y ] = a.ar [y + 1][y [39;49m[33;40m+[39;49m[34;49m 1][1] ;  a.ar [y + 1][y + 1][y + 1] = a.ar [y + 1][y + 1][y] ;  hp ( &a.ar ) ; cadump ( &a.ar 27 )  .. [39;49m[32;49m
0x7fbdaad5e3cf    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fbdaad5e3d2    486bc003                imul rax, rax, 0x3                                     [39;49m[32;49m
0x7fbdaad5e3d6    490106                  add [r14], rax                                         [39;49m
[34;49m ..  1][y + 1][ y ] = a.ar [y + 1][y + 1][[39;49m[33;40m1[39;49m[34;49m] ;  a.ar [y + 1][y + 1][y + 1] = a.ar [y + 1][y + 1][y] ;  hp ( &a.ar ) ; cadump ( &a.ar 27 ) ;  }  .. [39;49m[32;49m
0x7fbdaad5e3d9    48c7c001000000          mov rax, 0x1                                           [39;49m[32;49m
0x7fbdaad5e3e0    490106                  add [r14], rax                                         [39;49m
[34;49m .. y + 1][0] ;  a.ar [y + 1][y + 1][ y ] [39;49m[33;40m=[39;49m[34;49m a.ar [y + 1][y + 1][1] ;  a.ar [y + 1][y + 1][y + 1] = a.ar [y + 1][y + 1][y] ;  hp ( &a.ar ) ; cad .. [39;49m[32;49m
0x7fbdaad5e3e3    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fbdaad5e3e6    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fbdaad5e3ea    488908                  mov [rax], rcx                                         [39;49m[32;49m
0x7fbdaad5e3ed    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m .. + 1][ y ] = a.ar [y + 1][y + 1][1] ;  [39;49m[33;40ma[39;49m[34;49m.ar [y + 1][y + 1][y + 1] = a.ar [y + 1][y + 1][y] ;  hp ( &a.ar ) ; cadump ( &a.ar 27 ) ;  }  .. [39;49m[32;49m
0x7fbdaad5e3f1    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5e3f5    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fbdaad5e3fc    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5e400    498906                  mov [r14], rax                                         [39;49m
[34;49m .. y ] = a.ar [y + 1][y + 1][1] ;  a.ar [[39;49m[33;40my[39;49m[34;49m + 1][y + 1][y + 1] = a.ar [y + 1][y + 1][y] ;  hp ( &a.ar ) ; cadump ( &a.ar 27 ) ;  }  .. [39;49m[32;49m
0x7fbdaad5e403    498b47f0                mov rax, [r15-0x10]                                    [39;49m
[34;49m .. = a.ar [y + 1][y + 1][1] ;  a.ar [y + [39;49m[33;40m1[39;49m[34;49m][y + 1][y + 1] = a.ar [y + 1][y + 1][y] ;  hp ( &a.ar ) ; cadump ( &a.ar 27 ) ;  }  .. [39;49m[32;49m
0x7fbdaad5e407    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m .. ] = a.ar [y + 1][y + 1][1] ;  a.ar [y [39;49m[33;40m+[39;49m[34;49m 1][y + 1][y + 1] = a.ar [y + 1][y + 1][y] ;  hp ( &a.ar ) ; cadump ( &a.ar 27 ) ;  }  .. [39;49m[32;49m
0x7fbdaad5e40e    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fbdaad5e411    486bc009                imul rax, rax, 0x9                                     [39;49m[32;49m
0x7fbdaad5e415    490106                  add [r14], rax                                         [39;49m
[34;49m .. .ar [y + 1][y + 1][1] ;  a.ar [y + 1][[39;49m[33;40my[39;49m[34;49m + 1][y + 1] = a.ar [y + 1][y + 1][y] ;  hp ( &a.ar ) ; cadump ( &a.ar 27 ) ;  }  .. [39;49m[32;49m
0x7fbdaad5e418    498b47f0                mov rax, [r15-0x10]                                    [39;49m
[34;49m .. [y + 1][y + 1][1] ;  a.ar [y + 1][y + [39;49m[33;40m1[39;49m[34;49m][y + 1] = a.ar [y + 1][y + 1][y] ;  hp ( &a.ar ) ; cadump ( &a.ar 27 ) ;  }  .. [39;49m[32;49m
0x7fbdaad5e41c    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m .. r [y + 1][y + 1][1] ;  a.ar [y + 1][y [39;49m[33;40m+[39;49m[34;49m 1][y + 1] = a.ar [y + 1][y + 1][y] ;  hp ( &a.ar ) ; cadump ( &a.ar 27 ) ;  }  .. [39;49m[32;49m
0x7fbdaad5e423    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fbdaad5e426    486bc003                imul rax, rax, 0x3                                     [39;49m[32;49m
0x7fbdaad5e42a    490106                  add [r14], rax                                         [39;49m
[34;49m .. + 1][y + 1][1] ;  a.ar [y + 1][y + 1][[39;49m[33;40my[39;49m[34;49m + 1] = a.ar [y + 1][y + 1][y] ;  hp ( &a.ar ) ; cadump ( &a.ar 27 ) ;  }  .. [39;49m[32;49m
0x7fbdaad5e42d    498b47f0                mov rax, [r15-0x10]                                    [39;49m
[34;49m .. [y + 1][1] ;  a.ar [y + 1][y + 1][y + [39;49m[33;40m1[39;49m[34;49m] = a.ar [y + 1][y + 1][y] ;  hp ( &a.ar ) ; cadump ( &a.ar 27 ) ;  }  .. [39;49m[32;49m
0x7fbdaad5e431    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m .. 1][y + 1][1] ;  a.ar [y + 1][y + 1][y [39;49m[33;40m+[39;49m[34;49m 1] = a.ar [y + 1][y + 1][y] ;  hp ( &a.ar ) ; cadump ( &a.ar 27 ) ;  }  .. [39;49m[32;49m
0x7fbdaad5e438    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fbdaad5e43b    490106                  add [r14], rax                                         [39;49m
[34;49m .. 1][1] ;  a.ar [y + 1][y + 1][y + 1] = [39;49m[33;40ma[39;49m[34;49m.ar [y + 1][y + 1][y] ;  hp ( &a.ar ) ; cadump ( &a.ar 27 ) ;  }  .. [39;49m[32;49m
0x7fbdaad5e43e    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5e442    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fbdaad5e449    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fbdaad5e44c    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5e450    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ;  a.ar [y + 1][y + 1][y + 1] = a.ar [[39;49m[33;40my[39;49m[34;49m + 1][y + 1][y] ;  hp ( &a.ar ) ; cadump ( &a.ar 27 ) ;  }  .. [39;49m[32;49m
0x7fbdaad5e453    498b47f0                mov rax, [r15-0x10]                                    [39;49m
[34;49m .. .ar [y + 1][y + 1][y + 1] = a.ar [y + [39;49m[33;40m1[39;49m[34;49m][y + 1][y] ;  hp ( &a.ar ) ; cadump ( &a.ar 27 ) ;  }  .. [39;49m[32;49m
0x7fbdaad5e457    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m ..  a.ar [y + 1][y + 1][y + 1] = a.ar [y [39;49m[33;40m+[39;49m[34;49m 1][y + 1][y] ;  hp ( &a.ar ) ; cadump ( &a.ar 27 ) ;  }  .. [39;49m[32;49m
0x7fbdaad5e45e    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fbdaad5e461    486bc009                imul rax, rax, 0x9                                     [39;49m[32;49m
0x7fbdaad5e465    490106                  add [r14], rax                                         [39;49m
[34;49m ..  [y + 1][y + 1][y + 1] = a.ar [y + 1][[39;49m[33;40my[39;49m[34;49m + 1][y] ;  hp ( &a.ar ) ; cadump ( &a.ar 27 ) ;  }  .. [39;49m[32;49m
0x7fbdaad5e468    498b47f0                mov rax, [r15-0x10]                                    [39;49m
[34;49m .. + 1][y + 1][y + 1] = a.ar [y + 1][y + [39;49m[33;40m1[39;49m[34;49m][y] ;  hp ( &a.ar ) ; cadump ( &a.ar 27 ) ;  }  .. [39;49m[32;49m
0x7fbdaad5e46c    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m .. y + 1][y + 1][y + 1] = a.ar [y + 1][y [39;49m[33;40m+[39;49m[34;49m 1][y] ;  hp ( &a.ar ) ; cadump ( &a.ar 27 ) ;  }  .. [39;49m[32;49m
0x7fbdaad5e473    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fbdaad5e476    486bc003                imul rax, rax, 0x3                                     [39;49m[32;49m
0x7fbdaad5e47a    490106                  add [r14], rax                                         [39;49m
[34;49m .. ][y + 1][y + 1] = a.ar [y + 1][y + 1][[39;49m[33;40my[39;49m[34;49m] ;  hp ( &a.ar ) ; cadump ( &a.ar 27 ) ;  }  .. [39;49m[32;49m
0x7fbdaad5e47d    498b47f0                mov rax, [r15-0x10]                                    [39;49m[32;49m
0x7fbdaad5e481    490106                  add [r14], rax                                         [39;49m
[34;49m .. + 1][1] ;  a.ar [y + 1][y + 1][y + 1] [39;49m[33;40m=[39;49m[34;49m a.ar [y + 1][y + 1][y] ;  hp ( &a.ar ) ; cadump ( &a.ar 27 ) ;  }  .. [39;49m[32;49m
0x7fbdaad5e484    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fbdaad5e487    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fbdaad5e48b    488908                  mov [rax], rcx                                         [39;49m[32;49m
0x7fbdaad5e48e    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m ..  1] = a.ar [y + 1][y + 1][y] ;  hp ( &[39;49m[33;40ma[39;49m[34;49m.ar ) ; cadump ( &a.ar 27 ) ;  }  .. [39;49m[32;49m
0x7fbdaad5e492    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5e496    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fbdaad5e49d    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5e4a1    498906                  mov [r14], rax                                         [39;49m
[34;49m .. 1][y + 1] = a.ar [y + 1][y + 1][y] ;  [39;49m[33;40mhp[39;49m[34;49m ( &a.ar ) ; cadump ( &a.ar 27 ) ;  }  .. [39;49m[32;49m
0x7fbdaad5e4a4    49b98764d5aabd7f0000    mov r9, 0x7fbdaad56487                                 [39;49m[32;49m
0x7fbdaad5e4ae    49ffd1                  call r9                    	< Int.[34;49mhp[39;49m : 0x00007fbdaad56487[32;49m >[39;49m[39;49m
[34;49m .. y + 1][y] ;  hp ( &a.ar ) ; cadump ( &[39;49m[33;40ma[39;49m[34;49m.ar 27 ) ;  }  .. [39;49m[32;49m
0x7fbdaad5e4b1    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5e4b5    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fbdaad5e4bc    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5e4c0    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ][y] ;  hp ( &a.ar ) ; cadump ( &a.ar [39;49m[33;40m27[39;49m[34;49m ) ;  }  .. [39;49m[32;49m
0x7fbdaad5e4c3    48c7c01b000000          mov rax, 0x1b                                          [39;49m[32;49m
0x7fbdaad5e4ca    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5e4ce    498906                  mov [r14], rax                                         [39;49m
[34;49m .. r [y + 1][y + 1][y] ;  hp ( &a.ar ) ; [39;49m[33;40mcadump[39;49m[34;49m ( &a.ar 27 ) ;  }  .. [39;49m[32;49m
0x7fbdaad5e4d1    49b966e0d5aabd7f0000    mov r9, 0x7fbdaad5e066                                 [39;49m[32;49m
0x7fbdaad5e4db    49ffd1                  call r9                    	< cta.[34;49mcadump[39;49m : 0x00007fbdaad5e066[32;49m >[39;49m[39;49m
[34;49m .. hp ( &a.ar ) ; cadump ( &a.ar 27 ) ;  [39;49m[33;40m}[39;49m[34;49m  .. [39;49m[32;49m
0x7fbdaad5e4de    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5e4e2    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaad5e4e6    4983ee10                sub r14, 0x10                                          [39;49m[32;49m
0x7fbdaad5e4ea    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'ctcta' :: codeSize = 1078
Word : 0x00007fbdaa990038 :: Compiled at : 0x00007fbdaad5e0b4
 =============================
::> 'wdiss' was called at namespaces/test/arrayTest.csl 350.19 <::
 1 0
 =============================
Bits.[34;49mlnt[39;49m <:> csl compiled word
SourceCode for Bits.[34;49mlnt[39;49m :> 
[34;49m: lnt ( n ) n @ 7 < dup p return tos ; [39;49m
Source code file location of [34;49mlnt[39;49m : "namespaces/test/logic.csl" : 12.2 :: we are now at : namespaces/test/logic.csl : 13.17
Compiled with : optimizeOn, inlineOn, Jcc8 on
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xaad5e56d -- code size = 69 bytes
TypeSignature : 
 -----------------------------
Word :: Bits.[34;49mlnt[39;49m : definition = 0x00007fbdaad5e56d : disassembly at namespaces/test/logic.csl : 13.17 :
[34;49m ..                                     : [39;49m[33;40mlnt[39;49m[34;49m ( n ) n @ 7 < dup p return tos ;  .. [39;49m[32;49m
0x7fbdaad5e56d    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fbdaad5e571    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaad5e575    4981c608000000          add r14, 0x8                                           [39;49m
[34;49m ..                           : lnt ( n ) [39;49m[33;40mn[39;49m[34;49m @ 7 < dup p return tos ;  .. [39;49m[32;49m
0x7fbdaad5e57c    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m ..                     : lnt ( n ) n @ 7 [39;49m[33;40m<[39;49m[34;49m dup p return tos ;  .. [39;49m[32;49m
0x7fbdaad5e580    4883f807                cmp rax, 0x7                                           [39;49m[32;49m
0x7fbdaad5e584    0f9cc0                  setl al                                                [39;49m
[34;49m ..                       : lnt ( n ) n @ [39;49m[33;40m7[39;49m[34;49m < dup p return tos ;  .. [39;49m[32;49m
0x7fbdaad5e587    480fb6c0                movzx rax, al                                          [39;49m[32;49m
0x7fbdaad5e58b    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fbdaad5e58f    498906                  mov [r14], rax                                         [39;49m
[34;49m ..                   : lnt ( n ) n @ 7 < [39;49m[33;40mdup[39;49m[34;49m p return tos ;  .. [39;49m[32;49m
0x7fbdaad5e592    498946f8                mov [r14-0x8], rax                                     [39;49m
[34;49m ..               : lnt ( n ) n @ 7 < dup [39;49m[33;40mp[39;49m[34;49m return tos ;  .. [39;49m[32;49m
0x7fbdaad5e596    49b94464d5aabd7f0000    mov r9, 0x7fbdaad56444                                 [39;49m[32;49m
0x7fbdaad5e5a0    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fbdaad56444[32;49m >[39;49m[39;49m
[34;49m ..             : lnt ( n ) n @ 7 < dup p [39;49m[33;40mreturn[39;49m[34;49m tos ;  .. [39;49m[32;49m
0x7fbdaad5e5a3    498b06                  mov rax, [r14]                                         [39;49m
[34;49m ..  : lnt ( n ) n @ 7 < dup p return tos [39;49m[33;40m;[39;49m[34;49m  .. [39;49m[32;49m
0x7fbdaad5e5a6    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5e5aa    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaad5e5ae    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaad5e5b1    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'lnt' :: codeSize = 68
Word : 0x00007fbdaa99daf0 :: Compiled at : 0x00007fbdaad5e56d
 =============================
::> 'wdiss' was called at namespaces/test/logic.csl 13.17 <::
 1 0 0 1 0 0 0 1 0 1 1 1 0 1 1 0 0 1 1 1 1 0
 =============================
Bits.[34;49mlnt2[39;49m <:> csl compiled word
SourceCode for Bits.[34;49mlnt2[39;49m :> 
[34;49m: lnt2 ( n m ) n @ m @ >= dup p return tos ; [39;49m
Source code file location of [34;49mlnt2[39;49m : "namespaces/test/logic.csl" : 25.2 :: we are now at : namespaces/test/logic.csl : 26.18
Compiled with : optimizeOn, inlineOn, Jcc8 on
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xaad5e788 -- code size = 76 bytes
TypeSignature : 
 -----------------------------
Word :: Bits.[34;49mlnt2[39;49m : definition = 0x00007fbdaad5e788 : disassembly at namespaces/test/logic.csl : 26.18 :
[34;49m ..                                     : [39;49m[33;40mlnt2[39;49m[34;49m ( n m ) n @ m @ >= dup p return tos ;  .. [39;49m[32;49m
0x7fbdaad5e788    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fbdaad5e78c    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaad5e790    4981c608000000          add r14, 0x8                                           [39;49m
[34;49m ..                        : lnt2 ( n m ) [39;49m[33;40mn[39;49m[34;49m @ m @ >= dup p return tos ;  .. [39;49m[32;49m
0x7fbdaad5e797    498b47f0                mov rax, [r15-0x10]                                    [39;49m
[34;49m ..                    : lnt2 ( n m ) n @ [39;49m[33;40mm[39;49m[34;49m @ >= dup p return tos ;  .. [39;49m[32;49m
0x7fbdaad5e79b    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m
[34;49m ..                : lnt2 ( n m ) n @ m @ [39;49m[33;40m>=[39;49m[34;49m dup p return tos ;  .. [39;49m[32;49m
0x7fbdaad5e79f    483bc1                  cmp rax, rcx                                           [39;49m[32;49m
0x7fbdaad5e7a2    0f9dc0                  setge al                                               [39;49m[32;49m
0x7fbdaad5e7a5    480fb6c0                movzx rax, al                                          [39;49m[32;49m
0x7fbdaad5e7a9    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fbdaad5e7ad    498906                  mov [r14], rax                                         [39;49m
[34;49m ..             : lnt2 ( n m ) n @ m @ >= [39;49m[33;40mdup[39;49m[34;49m p return tos ;  .. [39;49m[32;49m
0x7fbdaad5e7b0    498946f8                mov [r14-0x8], rax                                     [39;49m
[34;49m ..         : lnt2 ( n m ) n @ m @ >= dup [39;49m[33;40mp[39;49m[34;49m return tos ;  .. [39;49m[32;49m
0x7fbdaad5e7b4    49b94464d5aabd7f0000    mov r9, 0x7fbdaad56444                                 [39;49m[32;49m
0x7fbdaad5e7be    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fbdaad56444[32;49m >[39;49m[39;49m
[34;49m ..       : lnt2 ( n m ) n @ m @ >= dup p [39;49m[33;40mreturn[39;49m[34;49m tos ;  .. [39;49m[32;49m
0x7fbdaad5e7c1    498b06                  mov rax, [r14]                                         [39;49m
[34;49m .. 2 ( n m ) n @ m @ >= dup p return tos [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fbdaad5e7c4    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5e7c8    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaad5e7cc    4983ee08                sub r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5e7d0    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaad5e7d3    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'lnt2' :: codeSize = 75
Word : 0x00007fbdaa9a60a0 :: Compiled at : 0x00007fbdaad5e788
 =============================
::> 'wdiss' was called at namespaces/test/logic.csl 26.18 <::

 0 0 1 1 0 0 0 0 1 1
 1 1 0 0
 =============================
Bits.[34;49mtnot[39;49m <:> csl compiled word
SourceCode for Bits.[34;49mtnot[39;49m :> 
[34;49m: tnot ( n ) n @ not dup n store n @ dup p return tos ; [39;49m
Source code file location of [34;49mtnot[39;49m : "namespaces/test/logic.csl" : 46.2 :: we are now at : namespaces/test/logic.csl : 47.18
Compiled with : optimizeOn, inlineOn, Jcc8 on
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xaad5eb1a -- code size = 111 bytes
TypeSignature : Integer -> Integer 
 -----------------------------
Word :: Bits.[34;49mtnot[39;49m : definition = 0x00007fbdaad5eb1a : disassembly at namespaces/test/logic.csl : 47.18 :
[34;49m ..                                     : [39;49m[33;40mtnot[39;49m[34;49m ( n ) n @ not dup n store n @ dup p return tos ;  .. [39;49m[32;49m
0x7fbdaad5eb1a    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fbdaad5eb1e    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaad5eb22    4981c608000000          add r14, 0x8                                           [39;49m
[34;49m ..                          : tnot ( n ) [39;49m[33;40mn[39;49m[34;49m @ not dup n store n @ dup p return tos ;  .. [39;49m[32;49m
0x7fbdaad5eb29    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m ..                      : tnot ( n ) n @ [39;49m[33;40mnot[39;49m[34;49m dup n store n @ dup p return tos ;  .. [39;49m[32;49m
0x7fbdaad5eb2d    4885c0                  test rax, rax                                          [39;49m[32;49m
0x7fbdaad5eb30    7409                    jz 0xaad5eb3b                                          [39;49m[32;49m
0x7fbdaad5eb32    48c7c000000000          mov rax, 0x0                                           [39;49m[32;49m
0x7fbdaad5eb39    eb07                    jmp 0x7fbdaad5eb42         	< Bits.[34;49mtnot[39;49m+40[32;49m >[39;49m[39;49m[32;49m
0x7fbdaad5eb3b    48c7c001000000          mov rax, 0x1                                           [39;49m[32;49m
0x7fbdaad5eb42    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fbdaad5eb46    498906                  mov [r14], rax                                         [39;49m
[34;49m ..                  : tnot ( n ) n @ not [39;49m[33;40mdup[39;49m[34;49m n store n @ dup p return tos ;  .. [39;49m[32;49m
0x7fbdaad5eb49    498946f8                mov [r14-0x8], rax                                     [39;49m
[34;49m ..              : tnot ( n ) n @ not dup [39;49m[33;40mn[39;49m[34;49m store n @ dup p return tos ;  .. [39;49m[32;49m
0x7fbdaad5eb4d    498d47f8                lea rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5eb51    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fbdaad5eb54    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fbdaad5eb57    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m ..            : tnot ( n ) n @ not dup n [39;49m[33;40mstore[39;49m[34;49m n @ dup p return tos ;  .. [39;49m[32;49m
0x7fbdaad5eb5b    488901                  mov [rcx], rax                                         [39;49m
[34;49m ..      : tnot ( n ) n @ not dup n store [39;49m[33;40mn[39;49m[34;49m @ dup p return tos ;  .. [39;49m[32;49m
0x7fbdaad5eb5e    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5eb62    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fbdaad5eb66    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  : tnot ( n ) n @ not dup n store n @ [39;49m[33;40mdup[39;49m[34;49m p return tos ;  .. [39;49m[32;49m
0x7fbdaad5eb69    498946f8                mov [r14-0x8], rax                                     [39;49m
[34;49m : tnot ( n ) n @ not dup n store n @ dup [39;49m[33;40mp[39;49m[34;49m return tos ;  .. [39;49m[32;49m
0x7fbdaad5eb6d    49b94464d5aabd7f0000    mov r9, 0x7fbdaad56444                                 [39;49m[32;49m
0x7fbdaad5eb77    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fbdaad56444[32;49m >[39;49m[39;49m
[34;49m .. t ( n ) n @ not dup n store n @ dup p [39;49m[33;40mreturn[39;49m[34;49m tos ; [39;49m[32;49m
0x7fbdaad5eb7a    498b06                  mov rax, [r14]                                         [39;49m
[34;49m ..  not dup n store n @ dup p return tos [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fbdaad5eb7d    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5eb81    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaad5eb85    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaad5eb88    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'tnot' :: codeSize = 110
Word : 0x00007fbdaa9b0768 :: Compiled at : 0x00007fbdaad5eb1a
 =============================
::> 'wdiss' was called at namespaces/test/logic.csl 47.18 <::
 tnot1_assert  : ok

 tnot2_assert  : ok

 1 tnot3_assert  : ok

 0 tnot4_assert  : ok


 =============================
Bits.[34;49mtnot2[39;49m <:> csl compiled word
SourceCode for Bits.[34;49mtnot2[39;49m :> 
[34;49m: tnot2 ( n m | v ) n @ m @ | not dup v store p return ( v @ ) ; [39;49m
Source code file location of [34;49mtnot2[39;49m : "namespaces/test/logic.csl" : 53.2 :: we are now at : namespaces/test/logic.csl : 54.19
Compiled with : optimizeOn, inlineOn, Jcc8 on
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xaad5eb8e -- code size = 108 bytes
TypeSignature : 
 -----------------------------
Word :: Bits.[34;49mtnot2[39;49m : definition = 0x00007fbdaad5eb8e : disassembly at namespaces/test/logic.csl : 54.19 :
[34;49m ..                                     : [39;49m[33;40mtnot2[39;49m[34;49m ( n m | v ) n @ m @ | not dup v store p return ( v @ ) ;  .. [39;49m[32;49m
0x7fbdaad5eb8e    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fbdaad5eb92    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaad5eb96    4981c610000000          add r14, 0x10                                          [39;49m
[34;49m ..                   : tnot2 ( n m | v ) [39;49m[33;40mn[39;49m[34;49m @ m @ | not dup v store p return ( v @ ) ;  .. [39;49m[32;49m
0x7fbdaad5eb9d    498b47f0                mov rax, [r15-0x10]                                    [39;49m
[34;49m ..               : tnot2 ( n m | v ) n @ [39;49m[33;40mm[39;49m[34;49m @ | not dup v store p return ( v @ ) ;  .. [39;49m[32;49m
0x7fbdaad5eba1    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m
[34;49m ..           : tnot2 ( n m | v ) n @ m @ [39;49m[33;40m|[39;49m[34;49m not dup v store p return ( v @ ) ;  .. [39;49m[32;49m
0x7fbdaad5eba5    480bc1                  or rax, rcx                                            [39;49m
[34;49m ..         : tnot2 ( n m | v ) n @ m @ | [39;49m[33;40mnot[39;49m[34;49m dup v store p return ( v @ ) ;  .. [39;49m[32;49m
0x7fbdaad5eba8    4885c0                  test rax, rax                                          [39;49m[32;49m
0x7fbdaad5ebab    7409                    jz 0xaad5ebb6                                          [39;49m[32;49m
0x7fbdaad5ebad    48c7c000000000          mov rax, 0x0                                           [39;49m[32;49m
0x7fbdaad5ebb4    eb07                    jmp 0x7fbdaad5ebbd         	< Bits.[34;49mtnot2[39;49m+47[32;49m >[39;49m[39;49m[32;49m
0x7fbdaad5ebb6    48c7c001000000          mov rax, 0x1                                           [39;49m[32;49m
0x7fbdaad5ebbd    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fbdaad5ebc1    498906                  mov [r14], rax                                         [39;49m
[34;49m ..     : tnot2 ( n m | v ) n @ m @ | not [39;49m[33;40mdup[39;49m[34;49m v store p return ( v @ ) ;  .. [39;49m[32;49m
0x7fbdaad5ebc4    498946f8                mov [r14-0x8], rax                                     [39;49m
[34;49m .. : tnot2 ( n m | v ) n @ m @ | not dup [39;49m[33;40mv[39;49m[34;49m store p return ( v @ ) ;  .. [39;49m[32;49m
0x7fbdaad5ebc8    498d4708                lea rax, [r15+0x8]                                     [39;49m[32;49m
0x7fbdaad5ebcc    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fbdaad5ebcf    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fbdaad5ebd2    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m  : tnot2 ( n m | v ) n @ m @ | not dup v [39;49m[33;40mstore[39;49m[34;49m p return ( v @ ) ;  .. [39;49m[32;49m
0x7fbdaad5ebd6    488901                  mov [rcx], rax                                         [39;49m
[34;49m .. ( n m | v ) n @ m @ | not dup v store [39;49m[33;40mp[39;49m[34;49m return ( v @ ) ; [39;49m[32;49m
0x7fbdaad5ebd9    49b94464d5aabd7f0000    mov r9, 0x7fbdaad56444                                 [39;49m[32;49m
0x7fbdaad5ebe3    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fbdaad56444[32;49m >[39;49m[39;49m[32;49m
0x7fbdaad5ebe6    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m ..  @ | not dup v store p return ( v @ ) [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fbdaad5ebea    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5ebee    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaad5ebf2    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m ..  n @ m @ | not dup v store p return ( [39;49m[33;40mv[39;49m[34;49m @ ) ; [39;49m[32;49m
0x7fbdaad5ebf6    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaad5ebf9    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'tnot2' :: codeSize = 107
Word : 0x00007fbdaa9b1fe8 :: Compiled at : 0x00007fbdaad5eb8e
 =============================
::> 'wdiss' was called at namespaces/test/logic.csl 54.19 <::
 1 0
 =============================
Bits.[34;49mtnot3[39;49m <:> csl compiled word
SourceCode for Bits.[34;49mtnot3[39;49m :> 
[34;49m: tnot3 ( n ) n @ not dup p return tos ; [39;49m
Source code file location of [34;49mtnot3[39;49m : "namespaces/test/logic.csl" : 57.2 :: we are now at : namespaces/test/logic.csl : 58.19
Compiled with : optimizeOn, inlineOn, Jcc8 on
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xaad5ebff -- code size = 79 bytes
TypeSignature : 
 -----------------------------
Word :: Bits.[34;49mtnot3[39;49m : definition = 0x00007fbdaad5ebff : disassembly at namespaces/test/logic.csl : 58.19 :
[34;49m ..                                     : [39;49m[33;40mtnot3[39;49m[34;49m ( n ) n @ not dup p return tos ;  .. [39;49m[32;49m
0x7fbdaad5ebff    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fbdaad5ec03    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaad5ec07    4981c608000000          add r14, 0x8                                           [39;49m
[34;49m ..                         : tnot3 ( n ) [39;49m[33;40mn[39;49m[34;49m @ not dup p return tos ;  .. [39;49m[32;49m
0x7fbdaad5ec0e    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m ..                     : tnot3 ( n ) n @ [39;49m[33;40mnot[39;49m[34;49m dup p return tos ;  .. [39;49m[32;49m
0x7fbdaad5ec12    4885c0                  test rax, rax                                          [39;49m[32;49m
0x7fbdaad5ec15    7409                    jz 0xaad5ec20                                          [39;49m[32;49m
0x7fbdaad5ec17    48c7c000000000          mov rax, 0x0                                           [39;49m[32;49m
0x7fbdaad5ec1e    eb07                    jmp 0x7fbdaad5ec27         	< Bits.[34;49mtnot3[39;49m+40[32;49m >[39;49m[39;49m[32;49m
0x7fbdaad5ec20    48c7c001000000          mov rax, 0x1                                           [39;49m[32;49m
0x7fbdaad5ec27    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fbdaad5ec2b    498906                  mov [r14], rax                                         [39;49m
[34;49m ..                 : tnot3 ( n ) n @ not [39;49m[33;40mdup[39;49m[34;49m p return tos ;  .. [39;49m[32;49m
0x7fbdaad5ec2e    498946f8                mov [r14-0x8], rax                                     [39;49m
[34;49m ..             : tnot3 ( n ) n @ not dup [39;49m[33;40mp[39;49m[34;49m return tos ;  .. [39;49m[32;49m
0x7fbdaad5ec32    49b94464d5aabd7f0000    mov r9, 0x7fbdaad56444                                 [39;49m[32;49m
0x7fbdaad5ec3c    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fbdaad56444[32;49m >[39;49m[39;49m
[34;49m ..           : tnot3 ( n ) n @ not dup p [39;49m[33;40mreturn[39;49m[34;49m tos ;  .. [39;49m[32;49m
0x7fbdaad5ec3f    498b06                  mov rax, [r14]                                         [39;49m
[34;49m   : tnot3 ( n ) n @ not dup p return tos [39;49m[33;40m;[39;49m[34;49m  .. [39;49m[32;49m
0x7fbdaad5ec42    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5ec46    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaad5ec4a    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaad5ec4d    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'tnot3' :: codeSize = 78
Word : 0x00007fbdaa9b3a20 :: Compiled at : 0x00007fbdaad5ebff
 =============================
::> 'wdiss' was called at namespaces/test/logic.csl 58.19 <::
 0
 =============================
Bits.[34;49mtAnd[39;49m <:> csl compiled word
SourceCode for Bits.[34;49mtAnd[39;49m :> 
[34;49m: tAnd ( n m ) n @ m @ && dup p return tos ; [39;49m
Source code file location of [34;49mtAnd[39;49m : "namespaces/test/logic.csl" : 61.2 :: we are now at : namespaces/test/logic.csl : 62.18
Compiled with : optimizeOn, inlineOn, Jcc8 on
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xaad5ec53 -- code size = 92 bytes
TypeSignature : Integer . Integer -> Integer 
 -----------------------------
Word :: Bits.[34;49mtAnd[39;49m : definition = 0x00007fbdaad5ec53 : disassembly at namespaces/test/logic.csl : 62.18 :
[34;49m ..                                     : [39;49m[33;40mtAnd[39;49m[34;49m ( n m ) n @ m @ && dup p return tos ;  .. [39;49m[32;49m
0x7fbdaad5ec53    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fbdaad5ec57    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaad5ec5b    4981c608000000          add r14, 0x8                                           [39;49m
[34;49m ..                        : tAnd ( n m ) [39;49m[33;40mn[39;49m[34;49m @ m @ && dup p return tos ;  .. [39;49m[32;49m
0x7fbdaad5ec62    498b47f0                mov rax, [r15-0x10]                                    [39;49m
[34;49m ..                    : tAnd ( n m ) n @ [39;49m[33;40mm[39;49m[34;49m @ && dup p return tos ;  .. [39;49m[32;49m
0x7fbdaad5ec66    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5ec6a    4885c9                  test rcx, rcx                                          [39;49m[32;49m
0x7fbdaad5ec6d    7405                    jz 0xaad5ec74                                          [39;49m
[34;49m ..                : tAnd ( n m ) n @ m @ [39;49m[33;40m&&[39;49m[34;49m dup p return tos ;  .. [39;49m[32;49m
0x7fbdaad5ec6f    4885c0                  test rax, rax                                          [39;49m[32;49m
0x7fbdaad5ec72    7509                    jnz 0xaad5ec7d                                         [39;49m[32;49m
0x7fbdaad5ec74    48c7c000000000          mov rax, 0x0                                           [39;49m[32;49m
0x7fbdaad5ec7b    eb07                    jmp 0x7fbdaad5ec84         	< Bits.[34;49mtAnd[39;49m+49[32;49m >[39;49m[39;49m[32;49m
0x7fbdaad5ec7d    48c7c001000000          mov rax, 0x1                                           [39;49m[32;49m
0x7fbdaad5ec84    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fbdaad5ec88    498906                  mov [r14], rax                                         [39;49m
[34;49m ..             : tAnd ( n m ) n @ m @ && [39;49m[33;40mdup[39;49m[34;49m p return tos ;  .. [39;49m[32;49m
0x7fbdaad5ec8b    498946f8                mov [r14-0x8], rax                                     [39;49m
[34;49m ..         : tAnd ( n m ) n @ m @ && dup [39;49m[33;40mp[39;49m[34;49m return tos ;  .. [39;49m[32;49m
0x7fbdaad5ec8f    49b94464d5aabd7f0000    mov r9, 0x7fbdaad56444                                 [39;49m[32;49m
0x7fbdaad5ec99    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fbdaad56444[32;49m >[39;49m[39;49m
[34;49m ..       : tAnd ( n m ) n @ m @ && dup p [39;49m[33;40mreturn[39;49m[34;49m tos ;  .. [39;49m[32;49m
0x7fbdaad5ec9c    498b06                  mov rax, [r14]                                         [39;49m
[34;49m .. d ( n m ) n @ m @ && dup p return tos [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fbdaad5ec9f    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5eca3    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaad5eca7    4983ee08                sub r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5ecab    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaad5ecae    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'tAnd' :: codeSize = 91
Word : 0x00007fbdaa9b4bc0 :: Compiled at : 0x00007fbdaad5ec53
 =============================
::> 'wdiss' was called at namespaces/test/logic.csl 62.18 <::
 0 1 0  : ok

 1 1 1  : ok

 0 0 0  : ok

 0 0 1  : ok


 =============================
Bits.[34;49mtNotAnd[39;49m <:> csl compiled word
SourceCode for Bits.[34;49mtNotAnd[39;49m :> 
[34;49m: tNotAnd ( n m ) n @ m @ not && dup p return tos ; [39;49m
Source code file location of [34;49mtNotAnd[39;49m : "namespaces/test/logic.csl" : 68.2 :: we are now at : namespaces/test/logic.csl : 69.21
Compiled with : optimizeOn, inlineOn, Jcc8 on
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xaad5ecb4 -- code size = 130 bytes
TypeSignature : Integer . Integer -> Integer 
 -----------------------------
Word :: Bits.[34;49mtNotAnd[39;49m : definition = 0x00007fbdaad5ecb4 : disassembly at namespaces/test/logic.csl : 69.21 :
[34;49m ..                                     : [39;49m[33;40mtNotAnd[39;49m[34;49m ( n m ) n @ m @ not && dup p return tos ;  .. [39;49m[32;49m
0x7fbdaad5ecb4    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fbdaad5ecb8    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaad5ecbc    4981c608000000          add r14, 0x8                                           [39;49m
[34;49m ..                     : tNotAnd ( n m ) [39;49m[33;40mn[39;49m[34;49m @ m @ not && dup p return tos ;  .. [39;49m[32;49m
0x7fbdaad5ecc3    498b47f0                mov rax, [r15-0x10]                                    [39;49m[32;49m
0x7fbdaad5ecc7    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5eccb    498906                  mov [r14], rax                                         [39;49m
[34;49m ..                 : tNotAnd ( n m ) n @ [39;49m[33;40mm[39;49m[34;49m @ not && dup p return tos ;  .. [39;49m[32;49m
0x7fbdaad5ecce    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m ..             : tNotAnd ( n m ) n @ m @ [39;49m[33;40mnot[39;49m[34;49m && dup p return tos ;  .. [39;49m[32;49m
0x7fbdaad5ecd2    4885c0                  test rax, rax                                          [39;49m[32;49m
0x7fbdaad5ecd5    7409                    jz 0xaad5ece0                                          [39;49m[32;49m
0x7fbdaad5ecd7    48c7c000000000          mov rax, 0x0                                           [39;49m[32;49m
0x7fbdaad5ecde    eb07                    jmp 0x7fbdaad5ece7         	< Bits.[34;49mtNotAnd[39;49m+51[32;49m >[39;49m[39;49m[32;49m
0x7fbdaad5ece0    48c7c001000000          mov rax, 0x1                                           [39;49m[32;49m
0x7fbdaad5ece7    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fbdaad5ecea    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fbdaad5eced    4983ee08                sub r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5ecf1    4885c9                  test rcx, rcx                                          [39;49m[32;49m
0x7fbdaad5ecf4    7405                    jz 0xaad5ecfb                                          [39;49m
[34;49m ..         : tNotAnd ( n m ) n @ m @ not [39;49m[33;40m&&[39;49m[34;49m dup p return tos ;  .. [39;49m[32;49m
0x7fbdaad5ecf6    4885c0                  test rax, rax                                          [39;49m[32;49m
0x7fbdaad5ecf9    7509                    jnz 0xaad5ed04                                         [39;49m[32;49m
0x7fbdaad5ecfb    48c7c000000000          mov rax, 0x0                                           [39;49m[32;49m
0x7fbdaad5ed02    eb07                    jmp 0x7fbdaad5ed0b         	< Bits.[34;49mtNotAnd[39;49m+87[32;49m >[39;49m[39;49m[32;49m
0x7fbdaad5ed04    48c7c001000000          mov rax, 0x1                                           [39;49m[32;49m
0x7fbdaad5ed0b    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fbdaad5ed0f    498906                  mov [r14], rax                                         [39;49m
[34;49m ..      : tNotAnd ( n m ) n @ m @ not && [39;49m[33;40mdup[39;49m[34;49m p return tos ;  .. [39;49m[32;49m
0x7fbdaad5ed12    498946f8                mov [r14-0x8], rax                                     [39;49m
[34;49m ..  : tNotAnd ( n m ) n @ m @ not && dup [39;49m[33;40mp[39;49m[34;49m return tos ;  .. [39;49m[32;49m
0x7fbdaad5ed16    49b94464d5aabd7f0000    mov r9, 0x7fbdaad56444                                 [39;49m[32;49m
0x7fbdaad5ed20    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fbdaad56444[32;49m >[39;49m[39;49m
[34;49m   : tNotAnd ( n m ) n @ m @ not && dup p [39;49m[33;40mreturn[39;49m[34;49m tos ;  .. [39;49m[32;49m
0x7fbdaad5ed23    498b06                  mov rax, [r14]                                         [39;49m
[34;49m .. n m ) n @ m @ not && dup p return tos [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fbdaad5ed26    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5ed2a    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaad5ed2e    4983ee08                sub r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5ed32    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaad5ed35    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'tNotAnd' :: codeSize = 129
Word : 0x00007fbdaa9b60d0 :: Compiled at : 0x00007fbdaad5ecb4
 =============================
::> 'wdiss' was called at namespaces/test/logic.csl 69.21 <::
 1 tNotAnd1 1 0  : ok

 0 tNotAnd2 1 1  : ok

 0 tNotAnd3 0 0  : ok

 0 tNotAnd4 0 1  : ok


 0x0000000100000000  >  0x00000000ffffffff 1
DataStack at : [34;49mnamespaces/test/logic.csl : 77.2[39;49m :
DataStack depth =   3 : Dsp (R14) = Top = 0x00007fbdab0efa58, InitialTos = 0x00007fbdab0efa40, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fbdab0efa58 > = 0x0000000000000005	
  DataStack   [  -1 ] < 0x00007fbdab0efa50 > = 0x0000000000000005	
  DataStack   [  -2 ] < 0x00007fbdab0efa48 > = 0x0000000000000005	

 0x00000000ffffffff  >  0x0000000100000000 0
 =============================
Logic.[34;49mnt[39;49m <:> csl compiled word
SourceCode for Logic.[34;49mnt[39;49m :> 
[34;49m: nt ( n ) n @ ! ! ! return tos ; [39;49m
Source code file location of [34;49mnt[39;49m : "namespaces/test/logic.csl" : 80.2 :: we are now at : namespaces/test/logic.csl : 83.15
Compiled with : optimizeOn, inlineOn, Jcc8 on
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xaad5edf1 -- code size = 101 bytes
TypeSignature : 
 -----------------------------
Word :: Logic.[34;49mnt[39;49m : definition = 0x00007fbdaad5edf1 : disassembly at namespaces/test/logic.csl : 83.15 :
[34;49m ..                                     : [39;49m[33;40mnt[39;49m[34;49m ( n ) n @ ! ! ! return tos ;  .. [39;49m[32;49m
0x7fbdaad5edf1    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fbdaad5edf5    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaad5edf9    4981c608000000          add r14, 0x8                                           [39;49m
[34;49m ..                            : nt ( n ) [39;49m[33;40mn[39;49m[34;49m @ ! ! ! return tos ;  .. [39;49m[32;49m
0x7fbdaad5ee00    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m ..                        : nt ( n ) n @ [39;49m[33;40m![39;49m[34;49m ! ! return tos ;  .. [39;49m[32;49m
0x7fbdaad5ee04    4885c0                  test rax, rax                                          [39;49m[32;49m
0x7fbdaad5ee07    7409                    jz 0xaad5ee12                                          [39;49m[32;49m
0x7fbdaad5ee09    48c7c000000000          mov rax, 0x0                                           [39;49m[32;49m
0x7fbdaad5ee10    eb07                    jmp 0x7fbdaad5ee19         	< Logic.[34;49mnt[39;49m+40[32;49m >[39;49m[39;49m[32;49m
0x7fbdaad5ee12    48c7c001000000          mov rax, 0x1                                           [39;49m
[34;49m ..                      : nt ( n ) n @ ! [39;49m[33;40m![39;49m[34;49m ! return tos ;  .. [39;49m[32;49m
0x7fbdaad5ee19    4885c0                  test rax, rax                                          [39;49m[32;49m
0x7fbdaad5ee1c    7409                    jz 0xaad5ee27                                          [39;49m[32;49m
0x7fbdaad5ee1e    48c7c000000000          mov rax, 0x0                                           [39;49m[32;49m
0x7fbdaad5ee25    eb07                    jmp 0x7fbdaad5ee2e         	< Logic.[34;49mnt[39;49m+61[32;49m >[39;49m[39;49m[32;49m
0x7fbdaad5ee27    48c7c001000000          mov rax, 0x1                                           [39;49m
[34;49m ..                    : nt ( n ) n @ ! ! [39;49m[33;40m![39;49m[34;49m return tos ;  .. [39;49m[32;49m
0x7fbdaad5ee2e    4885c0                  test rax, rax                                          [39;49m[32;49m
0x7fbdaad5ee31    7409                    jz 0xaad5ee3c                                          [39;49m[32;49m
0x7fbdaad5ee33    48c7c000000000          mov rax, 0x0                                           [39;49m[32;49m
0x7fbdaad5ee3a    eb07                    jmp 0x7fbdaad5ee43         	< Logic.[34;49mnt[39;49m+82[32;49m >[39;49m[39;49m[32;49m
0x7fbdaad5ee3c    48c7c001000000          mov rax, 0x1                                           [39;49m[32;49m
0x7fbdaad5ee43    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5ee47    498906                  mov [r14], rax                                         [39;49m
[34;49m ..       : nt ( n ) n @ ! ! ! return tos [39;49m[33;40m;[39;49m[34;49m  .. [39;49m[32;49m
0x7fbdaad5ee4a    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5ee4e    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaad5ee52    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaad5ee55    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'nt' :: codeSize = 100
Word : 0x00007fbdaa9b9a68 :: Compiled at : 0x00007fbdaad5edf1
 =============================
::> 'wdiss' was called at namespaces/test/logic.csl 83.15 <::
 1 2 3 12

 =============================
C_Syntax.[34;49mtaa[39;49m <:> csl compiled word
SourceCode for C_Syntax.[34;49mtaa[39;49m :> 
[34;49mint64 taa ( one two three ) { int64 four, five ; four = one + two + three ; five = one + two + three + four ; p ( one ) ; p ( two ) ; p ( three ) ; p ( five ) ; nl () ; } [39;49m
Source code file location of [34;49mtaa[39;49m : "namespaces/test/localsTest.csl" : 23.4 :: we are now at : namespaces/test/localsTest.csl : 35.16
Compiled with : optimizeOn, inlineOn, c_syntaxOn, infixOn, Jcc8 on
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xaad5eedd -- code size = 204 bytes
TypeSignature : 
 -----------------------------
Word :: C_Syntax.[34;49mtaa[39;49m : definition = 0x00007fbdaad5eedd : disassembly at namespaces/test/localsTest.csl : 35.16 :
[34;49m ..                                 int64 [39;49m[33;40mtaa[39;49m[34;49m ( one two three ) { int64 four, five ; four = one + two + three ; five = one + two + three + four .. [39;49m[32;49m
0x7fbdaad5eedd    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fbdaad5eee1    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaad5eee5    4981c618000000          add r14, 0x18                                          [39;49m
[34;49m .. o three ) { int64 four, five ; four = [39;49m[33;40mone[39;49m[34;49m + two + three ; five = one + two + three + four ; p ( one ) ; p ( two ) ; p ( three ) ; p ( five  .. [39;49m[32;49m
0x7fbdaad5eeec    498b47e8                mov rax, [r15-0x18]                                    [39;49m
[34;49m .. e ) { int64 four, five ; four = one + [39;49m[33;40mtwo[39;49m[34;49m + three ; five = one + two + three + four ; p ( one ) ; p ( two ) ; p ( three ) ; p ( five ) ; nl .. [39;49m[32;49m
0x7fbdaad5eef0    498b4ff0                mov rcx, [r15-0x10]                                    [39;49m
[34;49m .. ree ) { int64 four, five ; four = one [39;49m[33;40m+[39;49m[34;49m two + three ; five = one + two + three + four ; p ( one ) ; p ( two ) ; p ( three ) ; p ( five ) ;  .. [39;49m[32;49m
0x7fbdaad5eef4    4803c1                  add rax, rcx                                           [39;49m
[34;49m .. int64 four, five ; four = one + two + [39;49m[33;40mthree[39;49m[34;49m ; five = one + two + three + four ; p ( one ) ; p ( two ) ; p ( three ) ; p ( five ) ; nl () ;  .. [39;49m[32;49m
0x7fbdaad5eef7    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m
[34;49m .. { int64 four, five ; four = one + two [39;49m[33;40m+[39;49m[34;49m three ; five = one + two + three + four ; p ( one ) ; p ( two ) ; p ( three ) ; p ( five ) ; nl ()  .. [39;49m[32;49m
0x7fbdaad5eefb    4803c1                  add rax, rcx                                           [39;49m
[34;49m ..  one two three ) { int64 four, five ; [39;49m[33;40mfour[39;49m[34;49m = one + two + three ; five = one + two + three + four ; p ( one ) ; p ( two ) ; p ( three ) ; p  .. [39;49m[32;49m
0x7fbdaad5eefe    498d4f08                lea rcx, [r15+0x8]                                     [39;49m
[34;49m .. two three ) { int64 four, five ; four [39;49m[33;40m=[39;49m[34;49m one + two + three ; five = one + two + three + four ; p ( one ) ; p ( two ) ; p ( three ) ; p ( fiv .. [39;49m[32;49m
0x7fbdaad5ef02    488901                  mov [rcx], rax                                         [39;49m
[34;49m .. e ; four = one + two + three ; five = [39;49m[33;40mone[39;49m[34;49m + two + three + four ; p ( one ) ; p ( two ) ; p ( three ) ; p ( five ) ; nl () ; }  .. [39;49m[32;49m
0x7fbdaad5ef05    498b47e8                mov rax, [r15-0x18]                                    [39;49m
[34;49m .. ur = one + two + three ; five = one + [39;49m[33;40mtwo[39;49m[34;49m + three + four ; p ( one ) ; p ( two ) ; p ( three ) ; p ( five ) ; nl () ; }  .. [39;49m[32;49m
0x7fbdaad5ef09    498b4ff0                mov rcx, [r15-0x10]                                    [39;49m
[34;49m .. four = one + two + three ; five = one [39;49m[33;40m+[39;49m[34;49m two + three + four ; p ( one ) ; p ( two ) ; p ( three ) ; p ( five ) ; nl () ; }  .. [39;49m[32;49m
0x7fbdaad5ef0d    4803c1                  add rax, rcx                                           [39;49m
[34;49m .. ne + two + three ; five = one + two + [39;49m[33;40mthree[39;49m[34;49m + four ; p ( one ) ; p ( two ) ; p ( three ) ; p ( five ) ; nl () ; }  .. [39;49m[32;49m
0x7fbdaad5ef10    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m
[34;49m ..  one + two + three ; five = one + two [39;49m[33;40m+[39;49m[34;49m three + four ; p ( one ) ; p ( two ) ; p ( three ) ; p ( five ) ; nl () ; }  .. [39;49m[32;49m
0x7fbdaad5ef14    4803c1                  add rax, rcx                                           [39;49m
[34;49m ..  + three ; five = one + two + three + [39;49m[33;40mfour[39;49m[34;49m ; p ( one ) ; p ( two ) ; p ( three ) ; p ( five ) ; nl () ; }  .. [39;49m[32;49m
0x7fbdaad5ef17    498b4f08                mov rcx, [r15+0x8]                                     [39;49m
[34;49m .. wo + three ; five = one + two + three [39;49m[33;40m+[39;49m[34;49m four ; p ( one ) ; p ( two ) ; p ( three ) ; p ( five ) ; nl () ; }  .. [39;49m[32;49m
0x7fbdaad5ef1b    4803c1                  add rax, rcx                                           [39;49m
[34;49m .. ur, five ; four = one + two + three ; [39;49m[33;40mfive[39;49m[34;49m = one + two + three + four ; p ( one ) ; p ( two ) ; p ( three ) ; p ( five ) ; nl () ; }  .. [39;49m[32;49m
0x7fbdaad5ef1e    498d4f10                lea rcx, [r15+0x10]                                    [39;49m
[34;49m .. ive ; four = one + two + three ; five [39;49m[33;40m=[39;49m[34;49m one + two + three + four ; p ( one ) ; p ( two ) ; p ( three ) ; p ( five ) ; nl () ; }  .. [39;49m[32;49m
0x7fbdaad5ef22    488901                  mov [rcx], rax                                         [39;49m
[34;49m .. five = one + two + three + four ; p ( [39;49m[33;40mone[39;49m[34;49m ) ; p ( two ) ; p ( three ) ; p ( five ) ; nl () ; }  .. [39;49m[32;49m
0x7fbdaad5ef25    498b47e8                mov rax, [r15-0x18]                                    [39;49m[32;49m
0x7fbdaad5ef29    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5ef2d    498906                  mov [r14], rax                                         [39;49m
[34;49m .. e ; five = one + two + three + four ; [39;49m[33;40mp[39;49m[34;49m ( one ) ; p ( two ) ; p ( three ) ; p ( five ) ; nl () ; }  .. [39;49m[32;49m
0x7fbdaad5ef30    49b9d965d5aabd7f0000    mov r9, 0x7fbdaad565d9                                 [39;49m[32;49m
0x7fbdaad5ef3a    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fbdaad565d9[32;49m >[39;49m[39;49m
[34;49m ..  two + three + four ; p ( one ) ; p ( [39;49m[33;40mtwo[39;49m[34;49m ) ; p ( three ) ; p ( five ) ; nl () ; }  .. [39;49m[32;49m
0x7fbdaad5ef3d    498b47f0                mov rax, [r15-0x10]                                    [39;49m[32;49m
0x7fbdaad5ef41    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5ef45    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ne + two + three + four ; p ( one ) ; [39;49m[33;40mp[39;49m[34;49m ( two ) ; p ( three ) ; p ( five ) ; nl () ; }  .. [39;49m[32;49m
0x7fbdaad5ef48    49b9d965d5aabd7f0000    mov r9, 0x7fbdaad565d9                                 [39;49m[32;49m
0x7fbdaad5ef52    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fbdaad565d9[32;49m >[39;49m[39;49m
[34;49m ..  + four ; p ( one ) ; p ( two ) ; p ( [39;49m[33;40mthree[39;49m[34;49m ) ; p ( five ) ; nl () ; }  .. [39;49m[32;49m
0x7fbdaad5ef55    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5ef59    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5ef5d    498906                  mov [r14], rax                                         [39;49m
[34;49m .. hree + four ; p ( one ) ; p ( two ) ; [39;49m[33;40mp[39;49m[34;49m ( three ) ; p ( five ) ; nl () ; }  .. [39;49m[32;49m
0x7fbdaad5ef60    49b9d965d5aabd7f0000    mov r9, 0x7fbdaad565d9                                 [39;49m[32;49m
0x7fbdaad5ef6a    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fbdaad565d9[32;49m >[39;49m[39;49m
[34;49m .. one ) ; p ( two ) ; p ( three ) ; p ( [39;49m[33;40mfive[39;49m[34;49m ) ; nl () ; }  .. [39;49m[32;49m
0x7fbdaad5ef6d    498b4710                mov rax, [r15+0x10]                                    [39;49m[32;49m
0x7fbdaad5ef71    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5ef75    498906                  mov [r14], rax                                         [39;49m
[34;49m .. p ( one ) ; p ( two ) ; p ( three ) ; [39;49m[33;40mp[39;49m[34;49m ( five ) ; nl () ; }  .. [39;49m[32;49m
0x7fbdaad5ef78    49b9d965d5aabd7f0000    mov r9, 0x7fbdaad565d9                                 [39;49m[32;49m
0x7fbdaad5ef82    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fbdaad565d9[32;49m >[39;49m[39;49m
[34;49m ..  ( two ) ; p ( three ) ; p ( five ) ; [39;49m[33;40mnl[39;49m[34;49m () ; }  .. [39;49m[32;49m
0x7fbdaad5ef85    49b8e0903e1ebd550000    mov r8, 0x55bd1e3e90e0                                 [39;49m[32;49m
0x7fbdaad5ef8f    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaad5ef99    49ffd1                  call r9                    	< Io.[34;49mnewline[39;49m : 0x000055bd1e3e90e0[32;49m >[39;49m[39;49m
[34;49m .. wo ) ; p ( three ) ; p ( five ) ; nl ([39;49m[33;40m)[39;49m[34;49m ; }  .. [39;49m[32;49m
0x7fbdaad5ef9c    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5efa0    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaad5efa4    4983ee18                sub r14, 0x18                                          [39;49m[32;49m
0x7fbdaad5efa8    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'taa' :: codeSize = 203
Word : 0x00007fbdaa9bb9c8 :: Compiled at : 0x00007fbdaad5eedd
 =============================
::> 'wdiss' was called at namespaces/test/localsTest.csl 35.16 <::
 1 2 3 12
 3 3 3
 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7
 1 2 3
 1 2 3 4 3 3 3 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 1 2 3
 1 2 3 4
 =============================
C.[34;49mhey[39;49m <:> csl compiled word
SourceCode for C.[34;49mhey[39;49m :> 
[34;49m: hey ( n m | o q ) o m @ = m @ o @ "hey_1_assert" assert q n @ = n @ q @ "hey_2_assert" assert n @ m @ o @ q @ + + + 1 + dup p 7 "hey_3_assert" assert n @ m @ + o @ + q @ + 1 + dup p 7 "hey_4_assert" assert ; [39;49m
Source code file location of [34;49mhey[39;49m : "namespaces/test/localsTest.csl" : 103.2 :: we are now at : namespaces/test/localsTest.csl : 111.17
Compiled with : optimizeOn, inlineOn, Jcc8 on
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xaad5f7d2 -- code size = 394 bytes
TypeSignature : 
 -----------------------------
Word :: C.[34;49mhey[39;49m : definition = 0x00007fbdaad5f7d2 : disassembly at namespaces/test/localsTest.csl : 111.17 :
[34;49m ..                                     : [39;49m[33;40mhey[39;49m[34;49m ( n m | o q )  o m @ =  m @ o @ "hey_1_assert" assert  q n @ =  n @ q @ "hey_2_assert" assert  n  .. [39;49m[32;49m
0x7fbdaad5f7d2    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fbdaad5f7d6    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaad5f7da    4981c618000000          add r14, 0x18                                          [39;49m
[34;49m ..                  : hey ( n m | o q )  [39;49m[33;40mo[39;49m[34;49m m @ =  m @ o @ "hey_1_assert" assert  q n @ =  n @ q @ "hey_2_assert" assert  n @ m @ o @ q @ + + + .. [39;49m[32;49m
0x7fbdaad5f7e1    498d4708                lea rax, [r15+0x8]                                     [39;49m
[34;49m ..                : hey ( n m | o q )  o [39;49m[33;40mm[39;49m[34;49m @ =  m @ o @ "hey_1_assert" assert  q n @ =  n @ q @ "hey_2_assert" assert  n @ m @ o @ q @ + + + 1 .. [39;49m[32;49m
0x7fbdaad5f7e5    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m
[34;49m ..            : hey ( n m | o q )  o m @ [39;49m[33;40m=[39;49m[34;49m  m @ o @ "hey_1_assert" assert  q n @ =  n @ q @ "hey_2_assert" assert  n @ m @ o @ q @ + + + 1 + d .. [39;49m[32;49m
0x7fbdaad5f7e9    488908                  mov [rax], rcx                                         [39;49m
[34;49m ..         : hey ( n m | o q )  o m @ =  [39;49m[33;40mm[39;49m[34;49m @ o @ "hey_1_assert" assert  q n @ =  n @ q @ "hey_2_assert" assert  n @ m @ o @ q @ + + + 1 + dup  .. [39;49m[32;49m
0x7fbdaad5f7ec    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5f7f0    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5f7f4    498906                  mov [r14], rax                                         [39;49m
[34;49m ..     : hey ( n m | o q )  o m @ =  m @ [39;49m[33;40mo[39;49m[34;49m @ "hey_1_assert" assert  q n @ =  n @ q @ "hey_2_assert" assert  n @ m @ o @ q @ + + + 1 + dup p 7  .. [39;49m[32;49m
0x7fbdaad5f7f7    498b4708                mov rax, [r15+0x8]                                     [39;49m[32;49m
0x7fbdaad5f7fb    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5f7ff    498906                  mov [r14], rax                                         [39;49m
[34;49m .. : hey ( n m | o q )  o m @ =  m @ o @ [39;49m[33;40m"[39;49m[34;49mhey_1_assert" assert  q n @ =  n @ q @ "hey_2_assert" assert  n @ m @ o @ q @ + + + 1 + dup p 7 "hey .. [39;49m[32;49m
0x7fbdaad5f802    48b89b12c0aabd7f0000    mov rax, 0x7fbdaac0129b    	[32;49m< string : '[39;49m[39;49mhey_1_assert[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fbdaad5f80c    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5f810    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaad5f813    49b92b7bd5aabd7f0000    mov r9, 0x7fbdaad57b2b                                 [39;49m[32;49m
0x7fbdaad5f81d    49ffd1                  call r9                    	< System.[34;49m_assert1[39;49m : 0x00007fbdaad57b2b[32;49m >[39;49m[39;49m
[34;49m .. m @ =  m @ o @ "hey_1_assert" assert  [39;49m[33;40mq[39;49m[34;49m n @ =  n @ q @ "hey_2_assert" assert  n @ m @ o @ q @ + + + 1 + dup p 7 "hey_3_assert" assert  n @  .. [39;49m[32;49m
0x7fbdaad5f820    498d4710                lea rax, [r15+0x10]                                    [39;49m
[34;49m .. @ =  m @ o @ "hey_1_assert" assert  q [39;49m[33;40mn[39;49m[34;49m @ =  n @ q @ "hey_2_assert" assert  n @ m @ o @ q @ + + + 1 + dup p 7 "hey_3_assert" assert  n @ m  .. [39;49m[32;49m
0x7fbdaad5f824    498b4ff0                mov rcx, [r15-0x10]                                    [39;49m
[34;49m ..  m @ o @ "hey_1_assert" assert  q n @ [39;49m[33;40m=[39;49m[34;49m  n @ q @ "hey_2_assert" assert  n @ m @ o @ q @ + + + 1 + dup p 7 "hey_3_assert" assert  n @ m @ +  .. [39;49m[32;49m
0x7fbdaad5f828    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. @ o @ "hey_1_assert" assert  q n @ =  [39;49m[33;40mn[39;49m[34;49m @ q @ "hey_2_assert" assert  n @ m @ o @ q @ + + + 1 + dup p 7 "hey_3_assert" assert  n @ m @ + o @ .. [39;49m[32;49m
0x7fbdaad5f82b    498b47f0                mov rax, [r15-0x10]                                    [39;49m[32;49m
0x7fbdaad5f82f    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5f833    498906                  mov [r14], rax                                         [39;49m
[34;49m .. @ "hey_1_assert" assert  q n @ =  n @ [39;49m[33;40mq[39;49m[34;49m @ "hey_2_assert" assert  n @ m @ o @ q @ + + + 1 + dup p 7 "hey_3_assert" assert  n @ m @ + o @ + q .. [39;49m[32;49m
0x7fbdaad5f836    498b4710                mov rax, [r15+0x10]                                    [39;49m[32;49m
0x7fbdaad5f83a    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5f83e    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ey_1_assert" assert  q n @ =  n @ q @ [39;49m[33;40m"[39;49m[34;49mhey_2_assert" assert  n @ m @ o @ q @ + + + 1 + dup p 7 "hey_3_assert" assert  n @ m @ + o @ + q @ + .. [39;49m[32;49m
0x7fbdaad5f841    48b8c612c0aabd7f0000    mov rax, 0x7fbdaac012c6    	[32;49m< string : '[39;49m[39;49mhey_2_assert[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fbdaad5f84b    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5f84f    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaad5f852    49b92b7bd5aabd7f0000    mov r9, 0x7fbdaad57b2b                                 [39;49m[32;49m
0x7fbdaad5f85c    49ffd1                  call r9                    	< System.[34;49m_assert1[39;49m : 0x00007fbdaad57b2b[32;49m >[39;49m[39;49m
[34;49m .. n @ =  n @ q @ "hey_2_assert" assert  [39;49m[33;40mn[39;49m[34;49m @ m @ o @ q @ + + + 1 + dup p 7 "hey_3_assert" assert  n @ m @ + o @ + q @ + 1 + dup p 7 "hey_4_ass .. [39;49m[32;49m
0x7fbdaad5f85f    498b47f0                mov rax, [r15-0x10]                                    [39;49m[32;49m
0x7fbdaad5f863    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5f867    498906                  mov [r14], rax                                         [39;49m
[34;49m .. =  n @ q @ "hey_2_assert" assert  n @ [39;49m[33;40mm[39;49m[34;49m @ o @ q @ + + + 1 + dup p 7 "hey_3_assert" assert  n @ m @ + o @ + q @ + 1 + dup p 7 "hey_4_assert" .. [39;49m[32;49m
0x7fbdaad5f86a    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5f86e    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5f872    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  @ q @ "hey_2_assert" assert  n @ m @ [39;49m[33;40mo[39;49m[34;49m @ q @ + + + 1 + dup p 7 "hey_3_assert" assert  n @ m @ + o @ + q @ + 1 + dup p 7 "hey_4_assert" ass .. [39;49m[32;49m
0x7fbdaad5f875    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m ..  @ "hey_2_assert" assert  n @ m @ o @ [39;49m[33;40mq[39;49m[34;49m @ + + + 1 + dup p 7 "hey_3_assert" assert  n @ m @ + o @ + q @ + 1 + dup p 7 "hey_4_assert" assert  .. [39;49m[32;49m
0x7fbdaad5f879    498b4f10                mov rcx, [r15+0x10]                                    [39;49m
[34;49m .. hey_2_assert" assert  n @ m @ o @ q @ [39;49m[33;40m+[39;49m[34;49m + + 1 + dup p 7 "hey_3_assert" assert  n @ m @ + o @ + q @ + 1 + dup p 7 "hey_4_assert" assert ;  .. [39;49m[32;49m
0x7fbdaad5f87d    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fbdaad5f880    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fbdaad5f883    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fbdaad5f886    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m .. y_2_assert" assert  n @ m @ o @ q @ + [39;49m[33;40m+[39;49m[34;49m + 1 + dup p 7 "hey_3_assert" assert  n @ m @ + o @ + q @ + 1 + dup p 7 "hey_4_assert" assert ;  .. [39;49m[32;49m
0x7fbdaad5f88a    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fbdaad5f88d    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fbdaad5f890    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fbdaad5f893    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m .. 2_assert" assert  n @ m @ o @ q @ + + [39;49m[33;40m+[39;49m[34;49m 1 + dup p 7 "hey_3_assert" assert  n @ m @ + o @ + q @ + 1 + dup p 7 "hey_4_assert" assert ;  .. [39;49m[32;49m
0x7fbdaad5f897    4803c1                  add rax, rcx                                           [39;49m
[34;49m .. assert" assert  n @ m @ o @ q @ + + + [39;49m[33;40m1[39;49m[34;49m + dup p 7 "hey_3_assert" assert  n @ m @ + o @ + q @ + 1 + dup p 7 "hey_4_assert" assert ;  .. [39;49m[32;49m
0x7fbdaad5f89a    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m .. sert" assert  n @ m @ o @ q @ + + + 1 [39;49m[33;40m+[39;49m[34;49m dup p 7 "hey_3_assert" assert  n @ m @ + o @ + q @ + 1 + dup p 7 "hey_4_assert" assert ;  .. [39;49m[32;49m
0x7fbdaad5f8a1    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fbdaad5f8a4    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fbdaad5f8a8    498906                  mov [r14], rax                                         [39;49m
[34;49m .. rt" assert  n @ m @ o @ q @ + + + 1 + [39;49m[33;40mdup[39;49m[34;49m p 7 "hey_3_assert" assert  n @ m @ + o @ + q @ + 1 + dup p 7 "hey_4_assert" assert ;  .. [39;49m[32;49m
0x7fbdaad5f8ab    498946f8                mov [r14-0x8], rax                                     [39;49m
[34;49m .. assert  n @ m @ o @ q @ + + + 1 + dup [39;49m[33;40mp[39;49m[34;49m 7 "hey_3_assert" assert  n @ m @ + o @ + q @ + 1 + dup p 7 "hey_4_assert" assert ;  .. [39;49m[32;49m
0x7fbdaad5f8af    49b9d965d5aabd7f0000    mov r9, 0x7fbdaad565d9                                 [39;49m[32;49m
0x7fbdaad5f8b9    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fbdaad565d9[32;49m >[39;49m[39;49m
[34;49m .. sert  n @ m @ o @ q @ + + + 1 + dup p [39;49m[33;40m7[39;49m[34;49m "hey_3_assert" assert  n @ m @ + o @ + q @ + 1 + dup p 7 "hey_4_assert" assert ;  .. [39;49m[32;49m
0x7fbdaad5f8bc    48c7c007000000          mov rax, 0x7                                           [39;49m[32;49m
0x7fbdaad5f8c3    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5f8c7    498906                  mov [r14], rax                                         [39;49m
[34;49m .. rt  n @ m @ o @ q @ + + + 1 + dup p 7 [39;49m[33;40m"[39;49m[34;49mhey_3_assert" assert  n @ m @ + o @ + q @ + 1 + dup p 7 "hey_4_assert" assert ;  .. [39;49m[32;49m
0x7fbdaad5f8ca    48b8f512c0aabd7f0000    mov rax, 0x7fbdaac012f5    	[32;49m< string : '[39;49m[39;49mhey_3_assert[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fbdaad5f8d4    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5f8d8    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaad5f8db    49b92b7bd5aabd7f0000    mov r9, 0x7fbdaad57b2b                                 [39;49m[32;49m
0x7fbdaad5f8e5    49ffd1                  call r9                    	< System.[34;49m_assert1[39;49m : 0x00007fbdaad57b2b[32;49m >[39;49m[39;49m
[34;49m ..  + 1 + dup p 7 "hey_3_assert" assert  [39;49m[33;40mn[39;49m[34;49m @ m @ + o @ + q @ + 1 + dup p 7 "hey_4_assert" assert ;  .. [39;49m[32;49m
0x7fbdaad5f8e8    498b47f0                mov rax, [r15-0x10]                                    [39;49m
[34;49m ..  + dup p 7 "hey_3_assert" assert  n @ [39;49m[33;40mm[39;49m[34;49m @ + o @ + q @ + 1 + dup p 7 "hey_4_assert" assert ;  .. [39;49m[32;49m
0x7fbdaad5f8ec    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m
[34;49m .. up p 7 "hey_3_assert" assert  n @ m @ [39;49m[33;40m+[39;49m[34;49m o @ + q @ + 1 + dup p 7 "hey_4_assert" assert ;  .. [39;49m[32;49m
0x7fbdaad5f8f0    4803c1                  add rax, rcx                                           [39;49m
[34;49m ..  p 7 "hey_3_assert" assert  n @ m @ + [39;49m[33;40mo[39;49m[34;49m @ + q @ + 1 + dup p 7 "hey_4_assert" assert ;  .. [39;49m[32;49m
0x7fbdaad5f8f3    498b4f08                mov rcx, [r15+0x8]                                     [39;49m
[34;49m ..  "hey_3_assert" assert  n @ m @ + o @ [39;49m[33;40m+[39;49m[34;49m q @ + 1 + dup p 7 "hey_4_assert" assert ;  .. [39;49m[32;49m
0x7fbdaad5f8f7    4803c1                  add rax, rcx                                           [39;49m
[34;49m .. hey_3_assert" assert  n @ m @ + o @ + [39;49m[33;40mq[39;49m[34;49m @ + 1 + dup p 7 "hey_4_assert" assert ;  .. [39;49m[32;49m
0x7fbdaad5f8fa    498b4f10                mov rcx, [r15+0x10]                                    [39;49m
[34;49m .. 3_assert" assert  n @ m @ + o @ + q @ [39;49m[33;40m+[39;49m[34;49m 1 + dup p 7 "hey_4_assert" assert ;  .. [39;49m[32;49m
0x7fbdaad5f8fe    4803c1                  add rax, rcx                                           [39;49m
[34;49m .. assert" assert  n @ m @ + o @ + q @ + [39;49m[33;40m1[39;49m[34;49m + dup p 7 "hey_4_assert" assert ;  .. [39;49m[32;49m
0x7fbdaad5f901    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m .. sert" assert  n @ m @ + o @ + q @ + 1 [39;49m[33;40m+[39;49m[34;49m dup p 7 "hey_4_assert" assert ;  .. [39;49m[32;49m
0x7fbdaad5f908    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fbdaad5f90b    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fbdaad5f90f    498906                  mov [r14], rax                                         [39;49m
[34;49m .. rt" assert  n @ m @ + o @ + q @ + 1 + [39;49m[33;40mdup[39;49m[34;49m p 7 "hey_4_assert" assert ;  .. [39;49m[32;49m
0x7fbdaad5f912    498946f8                mov [r14-0x8], rax                                     [39;49m
[34;49m .. assert  n @ m @ + o @ + q @ + 1 + dup [39;49m[33;40mp[39;49m[34;49m 7 "hey_4_assert" assert ;  .. [39;49m[32;49m
0x7fbdaad5f916    49b9d965d5aabd7f0000    mov r9, 0x7fbdaad565d9                                 [39;49m[32;49m
0x7fbdaad5f920    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fbdaad565d9[32;49m >[39;49m[39;49m
[34;49m .. sert  n @ m @ + o @ + q @ + 1 + dup p [39;49m[33;40m7[39;49m[34;49m "hey_4_assert" assert ;  .. [39;49m[32;49m
0x7fbdaad5f923    48c7c007000000          mov rax, 0x7                                           [39;49m[32;49m
0x7fbdaad5f92a    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5f92e    498906                  mov [r14], rax                                         [39;49m
[34;49m .. rt  n @ m @ + o @ + q @ + 1 + dup p 7 [39;49m[33;40m"[39;49m[34;49mhey_4_assert" assert ;  .. [39;49m[32;49m
0x7fbdaad5f931    48b82413c0aabd7f0000    mov rax, 0x7fbdaac01324    	[32;49m< string : '[39;49m[39;49mhey_4_assert[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fbdaad5f93b    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad5f93f    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaad5f942    49b92b7bd5aabd7f0000    mov r9, 0x7fbdaad57b2b                                 [39;49m[32;49m
0x7fbdaad5f94c    49ffd1                  call r9                    	< System.[34;49m_assert1[39;49m : 0x00007fbdaad57b2b[32;49m >[39;49m[39;49m
[34;49m .. @ + 1 + dup p 7 "hey_4_assert" assert [39;49m[33;40m;[39;49m[34;49m  .. [39;49m[32;49m
0x7fbdaad5f94f    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad5f953    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaad5f957    4983ee10                sub r14, 0x10                                          [39;49m[32;49m
0x7fbdaad5f95b    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'hey' :: codeSize = 393
Word : 0x00007fbda952ca78 :: Compiled at : 0x00007fbdaad5f7d2
 =============================
::> 'wdiss' was called at namespaces/test/localsTest.csl 111.17 <::
 hey_1_assert  : ok

 hey_2_assert  : ok

 7 hey_3_assert  : ok

 7 hey_4_assert  : ok

 hey_1_assert  : ok

 hey_2_assert  : ok

 7 hey_3_assert  : ok

 7 hey_4_assert  : ok

 hey_1_assert  : ok

 hey_2_assert  : ok

 7 hey_3_assert  : ok

 7 hey_4_assert  : ok

 7
beforeHeey
 hey_1_assert  : ok

 hey_2_assert  : ok

 7 hey_3_assert  : ok

 7 hey_4_assert  : ok

 7 hey_1_assert  : ok

 hey_2_assert  : ok

 7 hey_3_assert  : ok

 7 hey_4_assert  : ok

 7 hey_1_assert  : ok

 hey_2_assert  : ok

 7 hey_3_assert  : ok

 7 hey_4_assert  : ok

 7 hey_1_assert  : ok

 hey_2_assert  : ok

 7 hey_3_assert  : ok

 7 hey_4_assert  : ok

 7 hey_1_assert  : ok

 hey_2_assert  : ok

 7 hey_3_assert  : ok

 7 hey_4_assert  : ok

 7 hey_1_assert  : ok

 hey_2_assert  : ok

 7 hey_3_assert  : ok

 7 hey_4_assert  : ok

 7 hey_1_assert  : ok

 hey_2_assert  : ok

 7 hey_3_assert  : ok

 7 hey_4_assert  : ok

 7 hey_1_assert  : ok

 hey_2_assert  : ok

 7 hey_3_assert  : ok

 7 hey_4_assert  : ok

 7 hey_1_assert  : ok

 hey_2_assert  : ok

 7 hey_3_assert  : ok

 7 hey_4_assert  : ok

 7 hey_1_assert  : ok

 hey_2_assert  : ok

 7 hey_3_assert  : ok

 7 hey_4_assert  : ok

 7 hey_1_assert  : ok

 hey_2_assert  : ok

 7 hey_3_assert  : ok

 7 hey_4_assert  : ok

 7 hey_1_assert  : ok

 hey_2_assert  : ok

 7 hey_3_assert  : ok

 7 hey_4_assert  : ok

 7 hey_1_assert  : ok

 hey_2_assert  : ok

 7 hey_3_assert  : ok

 7 hey_4_assert  : ok

 7 hey_1_assert  : ok

 hey_2_assert  : ok

 7 hey_3_assert  : ok

 7 hey_4_assert  : ok

 7 hey_1_assert  : ok

 hey_2_assert  : ok

 7 hey_3_assert  : ok

 7 hey_4_assert  : ok

 7 hey_1_assert  : ok

 hey_2_assert  : ok

 7 hey_3_assert  : ok

 7 hey_4_assert  : ok

 7 hey_1_assert  : ok

 hey_2_assert  : ok

 7 hey_3_assert  : ok

 7 hey_4_assert  : ok

 7 hey_1_assert  : ok

 hey_2_assert  : ok

 7 hey_3_assert  : ok

 7 hey_4_assert  : ok

 7 hey_1_assert  : ok

 hey_2_assert  : ok

 7 hey_3_assert  : ok

 7 hey_4_assert  : ok

 7 hey_1_assert  : ok

 hey_2_assert  : ok

 7 hey_3_assert  : ok

 7 hey_4_assert  : ok

 7 hey_1_assert  : ok

 hey_2_assert  : ok

 7 hey_3_assert  : ok

 7 hey_4_assert  : ok

 7 hey_1_assert  : ok

 hey_2_assert  : ok

 7 hey_3_assert  : ok

 7 hey_4_assert  : ok

 7
afterHeey
testA1 =  0x00007fbdaa684144
 0x00007fbdaa684144 0x00007fbdab0efa70 0x00007fbdaa684144
 this =  0x00007fbdaa684144

 t1 @ =  0x00007fbdaa684144
 t1 =  0x00007fbdab0efa70
 done showing variables

Dump at : namespaces/test/localsTest.csl : 157.48 :
Dump : Address = 0x00007fbdaa684144 : Number = 0x0000000000000080 :: (little endian dump)
0x00007fbdaa684144 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa684154 :  01 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa684164 :  02 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa684174 :  00 00 00 00 00 00 00 00  03 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa684184 :  00 00 00 00 00 00 00 00  04 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa684194 :  00 00 00 00 00 00 00 00  05 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa6841a4 :  00 00 00 00 00 00 00 00  06 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa6841b4 :  00 00 00 00 00 00 00 00  07 00 00 00 00 00 00 00  ........ ........ 

Dump at : namespaces/test/localsTest.csl : 166.15 :
Dump : Address = 0x00007fbdaa684a6c : Number = 0x0000000000000032 :: (little endian dump)
0x00007fbdaa684a6c :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa684a7c :  03 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa684a8c :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa684a9c :  00 00 00 00 00 00 00 00  04 00 00 00 00 00 00 00  ........ ........ 
 0x0000000000000003 0x0000000000000004
 before test

Using Namespaces :> DLLNodeAlloc DLLNode Buffer Class Root C int64 User Logic Bits Int cta void ct Ar9 Ar3 Ar2 Ar1 DLLNodeAlloc4 DLListClone DLList byte Integer Pointer Compiler Combinators int System Shell OpenVmTil Lexer Interpreter Debug Word Namespace StartupMacros Io Compiling Reserved Compiler DObject Macro PreProcessor List Stack Memory Colors File String Asm Locals Forth Experimental 

 array test ok
 0x0000000000000001
Dump at : namespaces/test/localsTest.csl : 175.15 :
Dump : Address = 0x00007fbdaa684a6c : Number = 0x0000000000000032 :: (little endian dump)
0x00007fbdaa684a6c :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa684a7c :  03 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa684a8c :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa684a9c :  00 00 00 00 00 00 00 00  04 00 00 00 00 00 00 00  ........ ........ 

Dump at : namespaces/test/localsTest.csl : 178.15 :
Dump : Address = 0x00007fbdaa684e24 : Number = 0x0000000000000032 :: (little endian dump)
0x00007fbdaa684e24 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa684e34 :  05 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa684e44 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbdaa684e54 :  00 00 00 00 00 00 00 00  06 00 00 00 00 00 00 00  ........ ........ 
 0x0000000000000077 0x00007fbdab0efa60 0x0000000000000001 0x00007fbdab0efa70 0x0000000000000000 0x0000000000000001 0x00007fbdab0efa78 0x0000000000000001 0x00007fbdab0efa88 0x00007fbdab0efa70 0x0000000000000001 0x00007fbdab0efa78 0x0000000000000001 0x00007fbdab0efa88 0x0000000000000001 0x0000000000000001 

testing nested locals

 =============================
User.[34;49mgoedel[39;49m <:> csl compiled word
SourceCode for User.[34;49mgoedel[39;49m :> 
[34;49m: goedel { (| n ) n 1 = n @ 6 + dup 7 _assert p } ix { (| m ) m 3 = m @ 4 + dup 7 _assert p } ix ; [39;49m
Source code file location of [34;49mgoedel[39;49m : "namespaces/test/localsTest.csl" : 214.2 :: we are now at : namespaces/test/localsTest.csl : 216.19
Compiled with : optimizeOn, inlineOn, Jcc8 on
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xaad600f8 -- code size = 182 bytes
TypeSignature : 
 -----------------------------
Word :: User.[34;49mgoedel[39;49m : definition = 0x00007fbdaad600f8 : disassembly at namespaces/test/localsTest.csl : 216.19 :
[34;49m ..                                     : [39;49m[33;40mgoedel[39;49m[34;49m { (| n ) n 1 = n @ 6 + dup 7 _assert p } ix { (| m ) m 3 = m @ 4 + dup 7 _assert p } ix ;  .. [39;49m[32;49m
0x7fbdaad600f8    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fbdaad600fc    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaad60100    4981c618000000          add r14, 0x18                                          [39;49m
[34;49m ..                     : goedel { (| n ) [39;49m[33;40mn[39;49m[34;49m 1 = n @ 6 + dup 7 _assert p } ix { (| m ) m 3 = m @ 4 + dup 7 _assert p } ix ;  .. [39;49m[32;49m
0x7fbdaad60107    498d4708                lea rax, [r15+0x8]                                     [39;49m
[34;49m ..                   : goedel { (| n ) n [39;49m[33;40m1[39;49m[34;49m = n @ 6 + dup 7 _assert p } ix { (| m ) m 3 = m @ 4 + dup 7 _assert p } ix ;  .. [39;49m[32;49m
0x7fbdaad6010b    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m ..                 : goedel { (| n ) n 1 [39;49m[33;40m=[39;49m[34;49m n @ 6 + dup 7 _assert p } ix { (| m ) m 3 = m @ 4 + dup 7 _assert p } ix ;  .. [39;49m[32;49m
0x7fbdaad60112    488908                  mov [rax], rcx                                         [39;49m
[34;49m ..               : goedel { (| n ) n 1 = [39;49m[33;40mn[39;49m[34;49m @ 6 + dup 7 _assert p } ix { (| m ) m 3 = m @ 4 + dup 7 _assert p } ix ;  .. [39;49m[32;49m
0x7fbdaad60115    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m ..           : goedel { (| n ) n 1 = n @ [39;49m[33;40m6[39;49m[34;49m + dup 7 _assert p } ix { (| m ) m 3 = m @ 4 + dup 7 _assert p } ix ;  .. [39;49m[32;49m
0x7fbdaad60119    48c7c106000000          mov rcx, 0x6                                           [39;49m
[34;49m ..         : goedel { (| n ) n 1 = n @ 6 [39;49m[33;40m+[39;49m[34;49m dup 7 _assert p } ix { (| m ) m 3 = m @ 4 + dup 7 _assert p } ix ;  .. [39;49m[32;49m
0x7fbdaad60120    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fbdaad60123    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fbdaad60127    498906                  mov [r14], rax                                         [39;49m
[34;49m ..       : goedel { (| n ) n 1 = n @ 6 + [39;49m[33;40mdup[39;49m[34;49m 7 _assert p } ix { (| m ) m 3 = m @ 4 + dup 7 _assert p } ix ;  .. [39;49m[32;49m
0x7fbdaad6012a    498946f8                mov [r14-0x8], rax                                     [39;49m
[34;49m ..   : goedel { (| n ) n 1 = n @ 6 + dup [39;49m[33;40m7[39;49m[34;49m _assert p } ix { (| m ) m 3 = m @ 4 + dup 7 _assert p } ix ;  .. [39;49m[32;49m
0x7fbdaad6012e    48c7c007000000          mov rax, 0x7                                           [39;49m[32;49m
0x7fbdaad60135    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad60139    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaad6013c    49b9df7cd5aabd7f0000    mov r9, 0x7fbdaad57cdf                                 [39;49m[32;49m
0x7fbdaad60146    49ffd1                  call r9                    	< System.[34;49m_assert0[39;49m : 0x00007fbdaad57cdf[32;49m >[39;49m[39;49m
[34;49m ..  { (| n ) n 1 = n @ 6 + dup 7 _assert [39;49m[33;40mp[39;49m[34;49m } ix { (| m ) m 3 = m @ 4 + dup 7 _assert p } ix ; [39;49m[32;49m
0x7fbdaad60149    49b9d965d5aabd7f0000    mov r9, 0x7fbdaad565d9                                 [39;49m[32;49m
0x7fbdaad60153    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fbdaad565d9[32;49m >[39;49m[39;49m
[34;49m .. n @ 6 + dup 7 _assert p } ix { (| m ) [39;49m[33;40mm[39;49m[34;49m 3 = m @ 4 + dup 7 _assert p } ix ; [39;49m[32;49m
0x7fbdaad60156    498d4710                lea rax, [r15+0x10]                                    [39;49m
[34;49m .. @ 6 + dup 7 _assert p } ix { (| m ) m [39;49m[33;40m3[39;49m[34;49m = m @ 4 + dup 7 _assert p } ix ; [39;49m[32;49m
0x7fbdaad6015a    48c7c103000000          mov rcx, 0x3                                           [39;49m
[34;49m .. 6 + dup 7 _assert p } ix { (| m ) m 3 [39;49m[33;40m=[39;49m[34;49m m @ 4 + dup 7 _assert p } ix ; [39;49m[32;49m
0x7fbdaad60161    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. + dup 7 _assert p } ix { (| m ) m 3 = [39;49m[33;40mm[39;49m[34;49m @ 4 + dup 7 _assert p } ix ; [39;49m[32;49m
0x7fbdaad60164    498b4710                mov rax, [r15+0x10]                                    [39;49m
[34;49m .. p 7 _assert p } ix { (| m ) m 3 = m @ [39;49m[33;40m4[39;49m[34;49m + dup 7 _assert p } ix ; [39;49m[32;49m
0x7fbdaad60168    48c7c104000000          mov rcx, 0x4                                           [39;49m
[34;49m .. 7 _assert p } ix { (| m ) m 3 = m @ 4 [39;49m[33;40m+[39;49m[34;49m dup 7 _assert p } ix ; [39;49m[32;49m
0x7fbdaad6016f    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fbdaad60172    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fbdaad60176    498906                  mov [r14], rax                                         [39;49m
[34;49m .. _assert p } ix { (| m ) m 3 = m @ 4 + [39;49m[33;40mdup[39;49m[34;49m 7 _assert p } ix ; [39;49m[32;49m
0x7fbdaad60179    498946f8                mov [r14-0x8], rax                                     [39;49m
[34;49m .. ert p } ix { (| m ) m 3 = m @ 4 + dup [39;49m[33;40m7[39;49m[34;49m _assert p } ix ; [39;49m[32;49m
0x7fbdaad6017d    48c7c007000000          mov rax, 0x7                                           [39;49m[32;49m
0x7fbdaad60184    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad60188    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaad6018b    49b9df7cd5aabd7f0000    mov r9, 0x7fbdaad57cdf                                 [39;49m[32;49m
0x7fbdaad60195    49ffd1                  call r9                    	< System.[34;49m_assert0[39;49m : 0x00007fbdaad57cdf[32;49m >[39;49m[39;49m
[34;49m ..  { (| m ) m 3 = m @ 4 + dup 7 _assert [39;49m[33;40mp[39;49m[34;49m } ix ; [39;49m[32;49m
0x7fbdaad60198    49b9d965d5aabd7f0000    mov r9, 0x7fbdaad565d9                                 [39;49m[32;49m
0x7fbdaad601a2    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fbdaad565d9[32;49m >[39;49m[39;49m
[34;49m ..  ) m 3 = m @ 4 + dup 7 _assert p } ix [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fbdaad601a5    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad601a9    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaad601ad    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'goedel' :: codeSize = 181
Word : 0x00007fbda954cc10 :: Compiled at : 0x00007fbdaad600f8
 =============================
::> 'wdiss' was called at namespaces/test/localsTest.csl 216.19 <::

 goedel ::  7 7
 =============================
User.[34;49mgoedel2[39;49m <:> csl compiled word
SourceCode for User.[34;49mgoedel2[39;49m :> 
[34;49m: goedel2 { (| n ) n 2 = n @ 5 + dup 7 "goedel2_1_assert" assert p } ix { (| n ) n @ p n 3 = n @ 4 + dup p 7 "goedel2_2_assert" assert } ix ; [39;49m
Source code file location of [34;49mgoedel2[39;49m : "namespaces/test/localsTest.csl" : 218.2 :: we are now at : namespaces/test/localsTest.csl : 219.20
Compiled with : optimizeOn, inlineOn, Jcc8 on
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xaad601b3 -- code size = 240 bytes
TypeSignature : 
 -----------------------------
Word :: User.[34;49mgoedel2[39;49m : definition = 0x00007fbdaad601b3 : disassembly at namespaces/test/localsTest.csl : 219.20 :
[34;49m ..                                     : [39;49m[33;40mgoedel2[39;49m[34;49m { (| n ) n 2 = n @ 5 + dup 7 "goedel2_1_assert" assert p } ix { (| n ) n @ p n 3 = n @ 4 + du .. [39;49m[32;49m
0x7fbdaad601b3    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fbdaad601b7    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaad601bb    4981c618000000          add r14, 0x18                                          [39;49m
[34;49m ..                    : goedel2 { (| n ) [39;49m[33;40mn[39;49m[34;49m 2 = n @ 5 + dup 7 "goedel2_1_assert" assert p } ix { (| n ) n @ p n 3 = n @ 4 + dup p 7 "goedel2_2_ .. [39;49m[32;49m
0x7fbdaad601c2    498d4708                lea rax, [r15+0x8]                                     [39;49m
[34;49m ..                  : goedel2 { (| n ) n [39;49m[33;40m2[39;49m[34;49m = n @ 5 + dup 7 "goedel2_1_assert" assert p } ix { (| n ) n @ p n 3 = n @ 4 + dup p 7 "goedel2_2_as .. [39;49m[32;49m
0x7fbdaad601c6    48c7c102000000          mov rcx, 0x2                                           [39;49m
[34;49m ..                : goedel2 { (| n ) n 2 [39;49m[33;40m=[39;49m[34;49m n @ 5 + dup 7 "goedel2_1_assert" assert p } ix { (| n ) n @ p n 3 = n @ 4 + dup p 7 "goedel2_2_asse .. [39;49m[32;49m
0x7fbdaad601cd    488908                  mov [rax], rcx                                         [39;49m
[34;49m ..              : goedel2 { (| n ) n 2 = [39;49m[33;40mn[39;49m[34;49m @ 5 + dup 7 "goedel2_1_assert" assert p } ix { (| n ) n @ p n 3 = n @ 4 + dup p 7 "goedel2_2_assert .. [39;49m[32;49m
0x7fbdaad601d0    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m ..          : goedel2 { (| n ) n 2 = n @ [39;49m[33;40m5[39;49m[34;49m + dup 7 "goedel2_1_assert" assert p } ix { (| n ) n @ p n 3 = n @ 4 + dup p 7 "goedel2_2_assert" as .. [39;49m[32;49m
0x7fbdaad601d4    48c7c105000000          mov rcx, 0x5                                           [39;49m
[34;49m ..        : goedel2 { (| n ) n 2 = n @ 5 [39;49m[33;40m+[39;49m[34;49m dup 7 "goedel2_1_assert" assert p } ix { (| n ) n @ p n 3 = n @ 4 + dup p 7 "goedel2_2_assert" asse .. [39;49m[32;49m
0x7fbdaad601db    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fbdaad601de    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fbdaad601e2    498906                  mov [r14], rax                                         [39;49m
[34;49m ..      : goedel2 { (| n ) n 2 = n @ 5 + [39;49m[33;40mdup[39;49m[34;49m 7 "goedel2_1_assert" assert p } ix { (| n ) n @ p n 3 = n @ 4 + dup p 7 "goedel2_2_assert" assert .. [39;49m[32;49m
0x7fbdaad601e5    498946f8                mov [r14-0x8], rax                                     [39;49m
[34;49m ..  : goedel2 { (| n ) n 2 = n @ 5 + dup [39;49m[33;40m7[39;49m[34;49m "goedel2_1_assert" assert p } ix { (| n ) n @ p n 3 = n @ 4 + dup p 7 "goedel2_2_assert" assert } i .. [39;49m[32;49m
0x7fbdaad601e9    48c7c007000000          mov rax, 0x7                                           [39;49m[32;49m
0x7fbdaad601f0    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad601f4    498906                  mov [r14], rax                                         [39;49m
[34;49m   : goedel2 { (| n ) n 2 = n @ 5 + dup 7 [39;49m[33;40m"[39;49m[34;49mgoedel2_1_assert" assert p } ix { (| n ) n @ p n 3 = n @ 4 + dup p 7 "goedel2_2_assert" assert } ix  .. [39;49m[32;49m
0x7fbdaad601f7    48b877f482aabd7f0000    mov rax, 0x7fbdaa82f477    	[32;49m< string : '[39;49m[39;49mgoedel2_1_assert[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fbdaad60201    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad60205    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaad60208    49b92b7bd5aabd7f0000    mov r9, 0x7fbdaad57b2b                                 [39;49m[32;49m
0x7fbdaad60212    49ffd1                  call r9                    	< System.[34;49m_assert1[39;49m : 0x00007fbdaad57b2b[32;49m >[39;49m[39;49m
[34;49m .. @ 5 + dup 7 "goedel2_1_assert" assert [39;49m[33;40mp[39;49m[34;49m } ix { (| n ) n @ p n 3 = n @ 4 + dup p 7 "goedel2_2_assert" assert } ix ; [39;49m[32;49m
0x7fbdaad60215    49b9d965d5aabd7f0000    mov r9, 0x7fbdaad565d9                                 [39;49m[32;49m
0x7fbdaad6021f    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fbdaad565d9[32;49m >[39;49m[39;49m
[34;49m .. del2_1_assert" assert p } ix { (| n ) [39;49m[33;40mn[39;49m[34;49m @ p n 3 = n @ 4 + dup p 7 "goedel2_2_assert" assert } ix ; [39;49m[32;49m
0x7fbdaad60222    498b4710                mov rax, [r15+0x10]                                    [39;49m[32;49m
0x7fbdaad60226    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad6022a    498906                  mov [r14], rax                                         [39;49m
[34;49m .. _1_assert" assert p } ix { (| n ) n @ [39;49m[33;40mp[39;49m[34;49m n 3 = n @ 4 + dup p 7 "goedel2_2_assert" assert } ix ; [39;49m[32;49m
0x7fbdaad6022d    49b9d965d5aabd7f0000    mov r9, 0x7fbdaad565d9                                 [39;49m[32;49m
0x7fbdaad60237    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fbdaad565d9[32;49m >[39;49m[39;49m
[34;49m .. _assert" assert p } ix { (| n ) n @ p [39;49m[33;40mn[39;49m[34;49m 3 = n @ 4 + dup p 7 "goedel2_2_assert" assert } ix ; [39;49m[32;49m
0x7fbdaad6023a    498d4710                lea rax, [r15+0x10]                                    [39;49m
[34;49m .. ssert" assert p } ix { (| n ) n @ p n [39;49m[33;40m3[39;49m[34;49m = n @ 4 + dup p 7 "goedel2_2_assert" assert } ix ; [39;49m[32;49m
0x7fbdaad6023e    48c7c103000000          mov rcx, 0x3                                           [39;49m
[34;49m .. ert" assert p } ix { (| n ) n @ p n 3 [39;49m[33;40m=[39;49m[34;49m n @ 4 + dup p 7 "goedel2_2_assert" assert } ix ; [39;49m[32;49m
0x7fbdaad60245    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. t" assert p } ix { (| n ) n @ p n 3 = [39;49m[33;40mn[39;49m[34;49m @ 4 + dup p 7 "goedel2_2_assert" assert } ix ; [39;49m[32;49m
0x7fbdaad60248    498b4710                mov rax, [r15+0x10]                                    [39;49m
[34;49m .. ssert p } ix { (| n ) n @ p n 3 = n @ [39;49m[33;40m4[39;49m[34;49m + dup p 7 "goedel2_2_assert" assert } ix ; [39;49m[32;49m
0x7fbdaad6024c    48c7c104000000          mov rcx, 0x4                                           [39;49m
[34;49m .. ert p } ix { (| n ) n @ p n 3 = n @ 4 [39;49m[33;40m+[39;49m[34;49m dup p 7 "goedel2_2_assert" assert } ix ; [39;49m[32;49m
0x7fbdaad60253    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fbdaad60256    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fbdaad6025a    498906                  mov [r14], rax                                         [39;49m
[34;49m .. t p } ix { (| n ) n @ p n 3 = n @ 4 + [39;49m[33;40mdup[39;49m[34;49m p 7 "goedel2_2_assert" assert } ix ; [39;49m[32;49m
0x7fbdaad6025d    498946f8                mov [r14-0x8], rax                                     [39;49m
[34;49m .. } ix { (| n ) n @ p n 3 = n @ 4 + dup [39;49m[33;40mp[39;49m[34;49m 7 "goedel2_2_assert" assert } ix ; [39;49m[32;49m
0x7fbdaad60261    49b9d965d5aabd7f0000    mov r9, 0x7fbdaad565d9                                 [39;49m[32;49m
0x7fbdaad6026b    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fbdaad565d9[32;49m >[39;49m[39;49m
[34;49m .. ix { (| n ) n @ p n 3 = n @ 4 + dup p [39;49m[33;40m7[39;49m[34;49m "goedel2_2_assert" assert } ix ; [39;49m[32;49m
0x7fbdaad6026e    48c7c007000000          mov rax, 0x7                                           [39;49m[32;49m
0x7fbdaad60275    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad60279    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  { (| n ) n @ p n 3 = n @ 4 + dup p 7 [39;49m[33;40m"[39;49m[34;49mgoedel2_2_assert" assert } ix ; [39;49m[32;49m
0x7fbdaad6027c    48b8bff482aabd7f0000    mov rax, 0x7fbdaa82f4bf    	[32;49m< string : '[39;49m[39;49mgoedel2_2_assert[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fbdaad60286    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad6028a    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaad6028d    49b92b7bd5aabd7f0000    mov r9, 0x7fbdaad57b2b                                 [39;49m[32;49m
0x7fbdaad60297    49ffd1                  call r9                    	< System.[34;49m_assert1[39;49m : 0x00007fbdaad57b2b[32;49m >[39;49m[39;49m
[34;49m .. up p 7 "goedel2_2_assert" assert } ix [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fbdaad6029a    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad6029e    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaad602a2    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'goedel2' :: codeSize = 239
Word : 0x00007fbda954f630 :: Compiled at : 0x00007fbdaad601b3
 =============================
::> 'wdiss' was called at namespaces/test/localsTest.csl 219.20 <::

 goedel2 ::  goedel2_1_assert  : ok

 7 0 7 goedel2_2_assert  : ok


 =============================
User.[34;49mgoedel4[39;49m <:> csl compiled word
SourceCode for User.[34;49mgoedel4[39;49m :> 
[34;49m: goedel4 (| n ) nl "goedel4 :: " ps nl n 9 = { (| n ) n @ p n 2 = n @ dup p 2 "goedel4_1_assert" assert { (| n ) n @ p n 3 = n @ 4 + dup p 7 "goedel4_2_assert" assert } ix n @ 6 + 8 _assert } ix { (| n ) n @ p n 3 = n dup @ 4 + dup dup 7 "goedel4_3_assert" assert p = n @ p n @ 7 "goedel4_4_assert" assert } ix n @ dup p return tos ; [39;49m
Source code file location of [34;49mgoedel4[39;49m : "namespaces/test/localsTest.csl" : 222.2 :: we are now at : namespaces/test/localsTest.csl : 242.21
Compiled with : optimizeOn, inlineOn, Jcc8 on
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xaad602a8 -- code size = 682 bytes
TypeSignature : -> Integer 
 -----------------------------
Word :: User.[34;49mgoedel4[39;49m : definition = 0x00007fbdaad602a8 : disassembly at namespaces/test/localsTest.csl : 242.21 :
[34;49m ..                                     : [39;49m[33;40mgoedel4[39;49m[34;49m (| n )  nl "goedel4 :: " ps nl n 9 = {  (| n ) n @ p n 2 = n @ dup p 2 "goedel4_1_assert" ass .. [39;49m[32;49m
0x7fbdaad602a8    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fbdaad602ac    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaad602b0    4981c628000000          add r14, 0x28                                          [39;49m
[34;49m ..                     : goedel4 (| n )  [39;49m[33;40mnl[39;49m[34;49m "goedel4 :: " ps nl n 9 = {  (| n ) n @ p n 2 = n @ dup p 2 "goedel4_1_assert" assert { (| n ) n @ .. [39;49m[32;49m
0x7fbdaad602b7    49b8e0903e1ebd550000    mov r8, 0x55bd1e3e90e0                                 [39;49m[32;49m
0x7fbdaad602c1    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaad602cb    49ffd1                  call r9                    	< Io.[34;49mnewline[39;49m : 0x000055bd1e3e90e0[32;49m >[39;49m[39;49m
[34;49m ..                  : goedel4 (| n )  nl [39;49m[33;40m"[39;49m[34;49mgoedel4 :: " ps nl n 9 = {  (| n ) n @ p n 2 = n @ dup p 2 "goedel4_1_assert" assert { (| n ) n @ p  .. [39;49m[32;49m
0x7fbdaad602ce    48b8bbf582aabd7f0000    mov rax, 0x7fbdaa82f5bb    	[32;49m< string : '[39;49m[39;49mgoedel4 :: [39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fbdaad602d8    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad602dc    498906                  mov [r14], rax                                         [39;49m
[34;49m ..    : goedel4 (| n )  nl "goedel4 :: " [39;49m[33;40mps[39;49m[34;49m nl n 9 = {  (| n ) n @ p n 2 = n @ dup p 2 "goedel4_1_assert" assert { (| n ) n @ p n 3 = n @ 4 +  .. [39;49m[32;49m
0x7fbdaad602df    49b97d63d5aabd7f0000    mov r9, 0x7fbdaad5637d                                 [39;49m[32;49m
0x7fbdaad602e9    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fbdaad5637d[32;49m >[39;49m[39;49m
[34;49m .. : goedel4 (| n )  nl "goedel4 :: " ps [39;49m[33;40mnl[39;49m[34;49m n 9 = {  (| n ) n @ p n 2 = n @ dup p 2 "goedel4_1_assert" assert { (| n ) n @ p n 3 = n @ 4 + dup .. [39;49m[32;49m
0x7fbdaad602ec    49b8e0903e1ebd550000    mov r8, 0x55bd1e3e90e0                                 [39;49m[32;49m
0x7fbdaad602f6    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaad60300    49ffd1                  call r9                    	< Io.[34;49mnewline[39;49m : 0x000055bd1e3e90e0[32;49m >[39;49m[39;49m
[34;49m : goedel4 (| n )  nl "goedel4 :: " ps nl [39;49m[33;40mn[39;49m[34;49m 9 = {  (| n ) n @ p n 2 = n @ dup p 2 "goedel4_1_assert" assert { (| n ) n @ p n 3 = n @ 4 + dup p  .. [39;49m[32;49m
0x7fbdaad60303    498d4708                lea rax, [r15+0x8]                                     [39;49m
[34;49m .. del4 (| n )  nl "goedel4 :: " ps nl n [39;49m[33;40m9[39;49m[34;49m = {  (| n ) n @ p n 2 = n @ dup p 2 "goedel4_1_assert" assert { (| n ) n @ p n 3 = n @ 4 + dup p 7  .. [39;49m[32;49m
0x7fbdaad60307    48c7c109000000          mov rcx, 0x9                                           [39;49m
[34;49m .. l4 (| n )  nl "goedel4 :: " ps nl n 9 [39;49m[33;40m=[39;49m[34;49m {  (| n ) n @ p n 2 = n @ dup p 2 "goedel4_1_assert" assert { (| n ) n @ p n 3 = n @ 4 + dup p 7 "g .. [39;49m[32;49m
0x7fbdaad6030e    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. l "goedel4 :: " ps nl n 9 = {  (| n ) [39;49m[33;40mn[39;49m[34;49m @ p n 2 = n @ dup p 2 "goedel4_1_assert" assert { (| n ) n @ p n 3 = n @ 4 + dup p 7 "goedel4_2_ass .. [39;49m[32;49m
0x7fbdaad60311    498b4710                mov rax, [r15+0x10]                                    [39;49m[32;49m
0x7fbdaad60315    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad60319    498906                  mov [r14], rax                                         [39;49m
[34;49m .. oedel4 :: " ps nl n 9 = {  (| n ) n @ [39;49m[33;40mp[39;49m[34;49m n 2 = n @ dup p 2 "goedel4_1_assert" assert { (| n ) n @ p n 3 = n @ 4 + dup p 7 "goedel4_2_assert" .. [39;49m[32;49m
0x7fbdaad6031c    49b9d965d5aabd7f0000    mov r9, 0x7fbdaad565d9                                 [39;49m[32;49m
0x7fbdaad60326    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fbdaad565d9[32;49m >[39;49m[39;49m
[34;49m .. del4 :: " ps nl n 9 = {  (| n ) n @ p [39;49m[33;40mn[39;49m[34;49m 2 = n @ dup p 2 "goedel4_1_assert" assert { (| n ) n @ p n 3 = n @ 4 + dup p 7 "goedel4_2_assert" a .. [39;49m[32;49m
0x7fbdaad60329    498d4710                lea rax, [r15+0x10]                                    [39;49m
[34;49m .. l4 :: " ps nl n 9 = {  (| n ) n @ p n [39;49m[33;40m2[39;49m[34;49m = n @ dup p 2 "goedel4_1_assert" assert { (| n ) n @ p n 3 = n @ 4 + dup p 7 "goedel4_2_assert" ass .. [39;49m[32;49m
0x7fbdaad6032d    48c7c102000000          mov rcx, 0x2                                           [39;49m
[34;49m ..  :: " ps nl n 9 = {  (| n ) n @ p n 2 [39;49m[33;40m=[39;49m[34;49m n @ dup p 2 "goedel4_1_assert" assert { (| n ) n @ p n 3 = n @ 4 + dup p 7 "goedel4_2_assert" asser .. [39;49m[32;49m
0x7fbdaad60334    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. : " ps nl n 9 = {  (| n ) n @ p n 2 = [39;49m[33;40mn[39;49m[34;49m @ dup p 2 "goedel4_1_assert" assert { (| n ) n @ p n 3 = n @ 4 + dup p 7 "goedel4_2_assert" assert  .. [39;49m[32;49m
0x7fbdaad60337    498b4710                mov rax, [r15+0x10]                                    [39;49m[32;49m
0x7fbdaad6033b    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fbdaad6033f    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ps nl n 9 = {  (| n ) n @ p n 2 = n @ [39;49m[33;40mdup[39;49m[34;49m p 2 "goedel4_1_assert" assert { (| n ) n @ p n 3 = n @ 4 + dup p 7 "goedel4_2_assert" assert } ix .. [39;49m[32;49m
0x7fbdaad60342    498946f8                mov [r14-0x8], rax                                     [39;49m
[34;49m .. l n 9 = {  (| n ) n @ p n 2 = n @ dup [39;49m[33;40mp[39;49m[34;49m 2 "goedel4_1_assert" assert { (| n ) n @ p n 3 = n @ 4 + dup p 7 "goedel4_2_assert" assert } ix n @ .. [39;49m[32;49m
0x7fbdaad60346    49b9d965d5aabd7f0000    mov r9, 0x7fbdaad565d9                                 [39;49m[32;49m
0x7fbdaad60350    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fbdaad565d9[32;49m >[39;49m[39;49m
[34;49m .. n 9 = {  (| n ) n @ p n 2 = n @ dup p [39;49m[33;40m2[39;49m[34;49m "goedel4_1_assert" assert { (| n ) n @ p n 3 = n @ 4 + dup p 7 "goedel4_2_assert" assert } ix n @ 6 .. [39;49m[32;49m
0x7fbdaad60353    48c7c002000000          mov rax, 0x2                                           [39;49m[32;49m
0x7fbdaad6035a    4983c608                add r14, 0x8                                           [39;49m
[34;49m .. 4 + dup p 7 "goedel4_2_assert" assert [39;49m[33;40m}[39;49m[34;49m ix n @ 6 + 8 _assert  } ix { (| n )  n @ p  n 3 = n dup @ 4 + dup dup 7 "goedel4_3_assert" assert p .. [39;49m[32;49m
0x7fbdaad6035e    498906                  mov [r14], rax                                         [39;49m
[34;49m .. 9 = {  (| n ) n @ p n 2 = n @ dup p 2 [39;49m[33;40m"[39;49m[34;49mgoedel4_1_assert" assert { (| n ) n @ p n 3 = n @ 4 + dup p 7 "goedel4_2_assert" assert } ix n @ 6 + .. [39;49m[32;49m
0x7fbdaad60361    48b8f9f582aabd7f0000    mov rax, 0x7fbdaa82f5f9    	[32;49m< string : '[39;49m[39;49mgoedel4_1_assert[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fbdaad6036b    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad6036f    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaad60372    49b92b7bd5aabd7f0000    mov r9, 0x7fbdaad57b2b                                 [39;49m[32;49m
0x7fbdaad6037c    49ffd1                  call r9                    	< System.[34;49m_assert1[39;49m : 0x00007fbdaad57b2b[32;49m >[39;49m[39;49m
[34;49m ..  2 "goedel4_1_assert" assert { (| n ) [39;49m[33;40mn[39;49m[34;49m @ p n 3 = n @ 4 + dup p 7 "goedel4_2_assert" assert } ix n @ 6 + 8 _assert  } ix { (| n )  n @ p  n .. [39;49m[32;49m
0x7fbdaad6037f    498b4718                mov rax, [r15+0x18]                                    [39;49m[32;49m
0x7fbdaad60383    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad60387    498906                  mov [r14], rax                                         [39;49m
[34;49m .. goedel4_1_assert" assert { (| n ) n @ [39;49m[33;40mp[39;49m[34;49m n 3 = n @ 4 + dup p 7 "goedel4_2_assert" assert } ix n @ 6 + 8 _assert  } ix { (| n )  n @ p  n 3 = .. [39;49m[32;49m
0x7fbdaad6038a    49b9d965d5aabd7f0000    mov r9, 0x7fbdaad565d9                                 [39;49m[32;49m
0x7fbdaad60394    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fbdaad565d9[32;49m >[39;49m[39;49m
[34;49m .. edel4_1_assert" assert { (| n ) n @ p [39;49m[33;40mn[39;49m[34;49m 3 = n @ 4 + dup p 7 "goedel4_2_assert" assert } ix n @ 6 + 8 _assert  } ix { (| n )  n @ p  n 3 = n .. [39;49m[32;49m
0x7fbdaad60397    498d4718                lea rax, [r15+0x18]                                    [39;49m
[34;49m .. el4_1_assert" assert { (| n ) n @ p n [39;49m[33;40m3[39;49m[34;49m = n @ 4 + dup p 7 "goedel4_2_assert" assert } ix n @ 6 + 8 _assert  } ix { (| n )  n @ p  n 3 = n d .. [39;49m[32;49m
0x7fbdaad6039b    48c7c103000000          mov rcx, 0x3                                           [39;49m
[34;49m .. 4_1_assert" assert { (| n ) n @ p n 3 [39;49m[33;40m=[39;49m[34;49m n @ 4 + dup p 7 "goedel4_2_assert" assert } ix n @ 6 + 8 _assert  } ix { (| n )  n @ p  n 3 = n dup .. [39;49m[32;49m
0x7fbdaad603a2    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. 1_assert" assert { (| n ) n @ p n 3 = [39;49m[33;40mn[39;49m[34;49m @ 4 + dup p 7 "goedel4_2_assert" assert } ix n @ 6 + 8 _assert  } ix { (| n )  n @ p  n 3 = n dup @ .. [39;49m[32;49m
0x7fbdaad603a5    498b4718                mov rax, [r15+0x18]                                    [39;49m
[34;49m .. sert" assert { (| n ) n @ p n 3 = n @ [39;49m[33;40m4[39;49m[34;49m + dup p 7 "goedel4_2_assert" assert } ix n @ 6 + 8 _assert  } ix { (| n )  n @ p  n 3 = n dup @ 4 + .. [39;49m[32;49m
0x7fbdaad603a9    48c7c104000000          mov rcx, 0x4                                           [39;49m
[34;49m .. rt" assert { (| n ) n @ p n 3 = n @ 4 [39;49m[33;40m+[39;49m[34;49m dup p 7 "goedel4_2_assert" assert } ix n @ 6 + 8 _assert  } ix { (| n )  n @ p  n 3 = n dup @ 4 + d .. [39;49m[32;49m
0x7fbdaad603b0    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fbdaad603b3    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fbdaad603b7    498906                  mov [r14], rax                                         [39;49m
[34;49m .. " assert { (| n ) n @ p n 3 = n @ 4 + [39;49m[33;40mdup[39;49m[34;49m p 7 "goedel4_2_assert" assert } ix n @ 6 + 8 _assert  } ix { (| n )  n @ p  n 3 = n dup @ 4 + dup .. [39;49m[32;49m
0x7fbdaad603ba    498946f8                mov [r14-0x8], rax                                     [39;49m
[34;49m .. sert { (| n ) n @ p n 3 = n @ 4 + dup [39;49m[33;40mp[39;49m[34;49m 7 "goedel4_2_assert" assert } ix n @ 6 + 8 _assert  } ix { (| n )  n @ p  n 3 = n dup @ 4 + dup dup .. [39;49m[32;49m
0x7fbdaad603be    49b9d965d5aabd7f0000    mov r9, 0x7fbdaad565d9                                 [39;49m[32;49m
0x7fbdaad603c8    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fbdaad565d9[32;49m >[39;49m[39;49m
[34;49m .. rt { (| n ) n @ p n 3 = n @ 4 + dup p [39;49m[33;40m7[39;49m[34;49m "goedel4_2_assert" assert } ix n @ 6 + 8 _assert  } ix { (| n )  n @ p  n 3 = n dup @ 4 + dup dup 7 .. [39;49m[32;49m
0x7fbdaad603cb    48c7c007000000          mov rax, 0x7                                           [39;49m[32;49m
0x7fbdaad603d2    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad603d6    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  { (| n ) n @ p n 3 = n @ 4 + dup p 7 [39;49m[33;40m"[39;49m[34;49mgoedel4_2_assert" assert } ix n @ 6 + 8 _assert  } ix { (| n )  n @ p  n 3 = n dup @ 4 + dup dup 7 " .. [39;49m[32;49m
0x7fbdaad603d9    48b841f682aabd7f0000    mov rax, 0x7fbdaa82f641    	[32;49m< string : '[39;49m[39;49mgoedel4_2_assert[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fbdaad603e3    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad603e7    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaad603ea    49b92b7bd5aabd7f0000    mov r9, 0x7fbdaad57b2b                                 [39;49m[32;49m
0x7fbdaad603f4    49ffd1                  call r9                    	< System.[34;49m_assert1[39;49m : 0x00007fbdaad57b2b[32;49m >[39;49m[39;49m
[34;49m .. up p 7 "goedel4_2_assert" assert } ix [39;49m[33;40mn[39;49m[34;49m @ 6 + 8 _assert  } ix { (| n )  n @ p  n 3 = n dup @ 4 + dup dup 7 "goedel4_3_assert" assert p = n  .. [39;49m[32;49m
0x7fbdaad603f7    498b4710                mov rax, [r15+0x10]                                    [39;49m
[34;49m ..  7 "goedel4_2_assert" assert } ix n @ [39;49m[33;40m6[39;49m[34;49m + 8 _assert  } ix { (| n )  n @ p  n 3 = n dup @ 4 + dup dup 7 "goedel4_3_assert" assert p = n @ p  .. [39;49m[32;49m
0x7fbdaad603fb    48c7c106000000          mov rcx, 0x6                                           [39;49m
[34;49m ..  "goedel4_2_assert" assert } ix n @ 6 [39;49m[33;40m+[39;49m[34;49m 8 _assert  } ix { (| n )  n @ p  n 3 = n dup @ 4 + dup dup 7 "goedel4_3_assert" assert p = n @ p n  .. [39;49m[32;49m
0x7fbdaad60402    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fbdaad60405    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad60409    498906                  mov [r14], rax                                         [39;49m
[34;49m .. goedel4_2_assert" assert } ix n @ 6 + [39;49m[33;40m8[39;49m[34;49m _assert  } ix { (| n )  n @ p  n 3 = n dup @ 4 + dup dup 7 "goedel4_3_assert" assert p = n @ p n @  .. [39;49m[32;49m
0x7fbdaad6040c    48c7c008000000          mov rax, 0x8                                           [39;49m[32;49m
0x7fbdaad60413    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad60417    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaad6041a    49b9df7cd5aabd7f0000    mov r9, 0x7fbdaad57cdf                                 [39;49m[32;49m
0x7fbdaad60424    49ffd1                  call r9                    	< System.[34;49m_assert0[39;49m : 0x00007fbdaad57cdf[32;49m >[39;49m[39;49m
[34;49m ..  ix n @ 6 + 8 _assert  } ix { (| n )  [39;49m[33;40mn[39;49m[34;49m @ p  n 3 = n dup @ 4 + dup dup 7 "goedel4_3_assert" assert p = n @ p n @ 7 "goedel4_4_assert" asser .. [39;49m[32;49m
0x7fbdaad60427    498b4720                mov rax, [r15+0x20]                                    [39;49m[32;49m
0x7fbdaad6042b    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad6042f    498906                  mov [r14], rax                                         [39;49m
[34;49m .. n @ 6 + 8 _assert  } ix { (| n )  n @ [39;49m[33;40mp[39;49m[34;49m  n 3 = n dup @ 4 + dup dup 7 "goedel4_3_assert" assert p = n @ p n @ 7 "goedel4_4_assert" assert }  .. [39;49m[32;49m
0x7fbdaad60432    49b9d965d5aabd7f0000    mov r9, 0x7fbdaad565d9                                 [39;49m[32;49m
0x7fbdaad6043c    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fbdaad565d9[32;49m >[39;49m[39;49m
[34;49m ..  6 + 8 _assert  } ix { (| n )  n @ p  [39;49m[33;40mn[39;49m[34;49m 3 = n dup @ 4 + dup dup 7 "goedel4_3_assert" assert p = n @ p n @ 7 "goedel4_4_assert" assert } ix  .. [39;49m[32;49m
0x7fbdaad6043f    498d4720                lea rax, [r15+0x20]                                    [39;49m
[34;49m ..  + 8 _assert  } ix { (| n )  n @ p  n [39;49m[33;40m3[39;49m[34;49m = n dup @ 4 + dup dup 7 "goedel4_3_assert" assert p = n @ p n @ 7 "goedel4_4_assert" assert } ix  n .. [39;49m[32;49m
0x7fbdaad60443    48c7c103000000          mov rcx, 0x3                                           [39;49m
[34;49m ..  8 _assert  } ix { (| n )  n @ p  n 3 [39;49m[33;40m=[39;49m[34;49m n dup @ 4 + dup dup 7 "goedel4_3_assert" assert p = n @ p n @ 7 "goedel4_4_assert" assert } ix  n @ .. [39;49m[32;49m
0x7fbdaad6044a    488908                  mov [rax], rcx                                         [39;49m
[34;49m ..  _assert  } ix { (| n )  n @ p  n 3 = [39;49m[33;40mn[39;49m[34;49m dup @ 4 + dup dup 7 "goedel4_3_assert" assert p = n @ p n @ 7 "goedel4_4_assert" assert } ix  n @ d .. [39;49m[32;49m
0x7fbdaad6044d    498d4720                lea rax, [r15+0x20]                                    [39;49m[32;49m
0x7fbdaad60451    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fbdaad60455    498906                  mov [r14], rax                                         [39;49m
[34;49m .. assert  } ix { (| n )  n @ p  n 3 = n [39;49m[33;40mdup[39;49m[34;49m @ 4 + dup dup 7 "goedel4_3_assert" assert p = n @ p n @ 7 "goedel4_4_assert" assert } ix  n @ dup .. [39;49m[32;49m
0x7fbdaad60458    498946f8                mov [r14-0x8], rax                                     [39;49m
[34;49m .. rt  } ix { (| n )  n @ p  n 3 = n dup [39;49m[33;40m@[39;49m[34;49m 4 + dup dup 7 "goedel4_3_assert" assert p = n @ p n @ 7 "goedel4_4_assert" assert } ix  n @ dup p r .. [39;49m[32;49m
0x7fbdaad6045c    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fbdaad6045f    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fbdaad60462    498906                  mov [r14], rax                                         [39;49m
[34;49m ..   } ix { (| n )  n @ p  n 3 = n dup @ [39;49m[33;40m4[39;49m[34;49m + dup dup 7 "goedel4_3_assert" assert p = n @ p n @ 7 "goedel4_4_assert" assert } ix  n @ dup p ret .. [39;49m[32;49m
0x7fbdaad60465    48c7c004000000          mov rax, 0x4                                           [39;49m[32;49m
0x7fbdaad6046c    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fbdaad6046f    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fbdaad60472    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m .. } ix { (| n )  n @ p  n 3 = n dup @ 4 [39;49m[33;40m+[39;49m[34;49m dup dup 7 "goedel4_3_assert" assert p = n @ p n @ 7 "goedel4_4_assert" assert } ix  n @ dup p retur .. [39;49m[32;49m
0x7fbdaad60476    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fbdaad60479    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fbdaad6047d    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ix { (| n )  n @ p  n 3 = n dup @ 4 + [39;49m[33;40mdup[39;49m[34;49m dup 7 "goedel4_3_assert" assert p = n @ p n @ 7 "goedel4_4_assert" assert } ix  n @ dup p return  .. [39;49m[32;49m
0x7fbdaad60480    498946f8                mov [r14-0x8], rax                                     [39;49m
[34;49m ..  (| n )  n @ p  n 3 = n dup @ 4 + dup [39;49m[33;40mdup[39;49m[34;49m 7 "goedel4_3_assert" assert p = n @ p n @ 7 "goedel4_4_assert" assert } ix  n @ dup p return tos  .. [39;49m[32;49m
0x7fbdaad60484    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fbdaad60487    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad6048b    498906                  mov [r14], rax                                         [39;49m
[34;49m .. n )  n @ p  n 3 = n dup @ 4 + dup dup [39;49m[33;40m7[39;49m[34;49m "goedel4_3_assert" assert p = n @ p n @ 7 "goedel4_4_assert" assert } ix  n @ dup p return tos ;  .. [39;49m[32;49m
0x7fbdaad6048e    48c7c007000000          mov rax, 0x7                                           [39;49m[32;49m
0x7fbdaad60495    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad60499    498906                  mov [r14], rax                                         [39;49m
[34;49m .. )  n @ p  n 3 = n dup @ 4 + dup dup 7 [39;49m[33;40m"[39;49m[34;49mgoedel4_3_assert" assert p = n @ p n @ 7 "goedel4_4_assert" assert } ix  n @ dup p return tos ;  .. [39;49m[32;49m
0x7fbdaad6049c    48b88df682aabd7f0000    mov rax, 0x7fbdaa82f68d    	[32;49m< string : '[39;49m[39;49mgoedel4_3_assert[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fbdaad604a6    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad604aa    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaad604ad    49b92b7bd5aabd7f0000    mov r9, 0x7fbdaad57b2b                                 [39;49m[32;49m
0x7fbdaad604b7    49ffd1                  call r9                    	< System.[34;49m_assert1[39;49m : 0x00007fbdaad57b2b[32;49m >[39;49m[39;49m
[34;49m .. + dup dup 7 "goedel4_3_assert" assert [39;49m[33;40mp[39;49m[34;49m = n @ p n @ 7 "goedel4_4_assert" assert } ix  n @ dup p return tos ;  .. [39;49m[32;49m
0x7fbdaad604ba    49b9d965d5aabd7f0000    mov r9, 0x7fbdaad565d9                                 [39;49m[32;49m
0x7fbdaad604c4    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fbdaad565d9[32;49m >[39;49m[39;49m[32;49m
0x7fbdaad604c7    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fbdaad604ca    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fbdaad604ce    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m .. dup dup 7 "goedel4_3_assert" assert p [39;49m[33;40m=[39;49m[34;49m n @ p n @ 7 "goedel4_4_assert" assert } ix  n @ dup p return tos ;  .. [39;49m[32;49m
0x7fbdaad604d2    8808                    mov [rax], cl                                          [39;49m
[34;49m .. p dup 7 "goedel4_3_assert" assert p = [39;49m[33;40mn[39;49m[34;49m @ p n @ 7 "goedel4_4_assert" assert } ix  n @ dup p return tos ;  .. [39;49m[32;49m
0x7fbdaad604d4    498b4720                mov rax, [r15+0x20]                                    [39;49m[32;49m
0x7fbdaad604d8    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad604dc    498906                  mov [r14], rax                                         [39;49m
[34;49m .. p 7 "goedel4_3_assert" assert p = n @ [39;49m[33;40mp[39;49m[34;49m n @ 7 "goedel4_4_assert" assert } ix  n @ dup p return tos ;  .. [39;49m[32;49m
0x7fbdaad604df    49b9d965d5aabd7f0000    mov r9, 0x7fbdaad565d9                                 [39;49m[32;49m
0x7fbdaad604e9    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fbdaad565d9[32;49m >[39;49m[39;49m
[34;49m .. 7 "goedel4_3_assert" assert p = n @ p [39;49m[33;40mn[39;49m[34;49m @ 7 "goedel4_4_assert" assert } ix  n @ dup p return tos ;  .. [39;49m[32;49m
0x7fbdaad604ec    498b4720                mov rax, [r15+0x20]                                    [39;49m[32;49m
0x7fbdaad604f0    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad604f4    498906                  mov [r14], rax                                         [39;49m
[34;49m .. oedel4_3_assert" assert p = n @ p n @ [39;49m[33;40m7[39;49m[34;49m "goedel4_4_assert" assert } ix  n @ dup p return tos ;  .. [39;49m[32;49m
0x7fbdaad604f7    48c7c007000000          mov rax, 0x7                                           [39;49m[32;49m
0x7fbdaad604fe    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad60502    498906                  mov [r14], rax                                         [39;49m
[34;49m .. del4_3_assert" assert p = n @ p n @ 7 [39;49m[33;40m"[39;49m[34;49mgoedel4_4_assert" assert } ix  n @ dup p return tos ;  .. [39;49m[32;49m
0x7fbdaad60505    48b8c6f682aabd7f0000    mov rax, 0x7fbdaa82f6c6    	[32;49m< string : '[39;49m[39;49mgoedel4_4_assert[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fbdaad6050f    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad60513    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaad60516    49b92b7bd5aabd7f0000    mov r9, 0x7fbdaad57b2b                                 [39;49m[32;49m
0x7fbdaad60520    49ffd1                  call r9                    	< System.[34;49m_assert1[39;49m : 0x00007fbdaad57b2b[32;49m >[39;49m[39;49m
[34;49m .. n @ 7 "goedel4_4_assert" assert } ix  [39;49m[33;40mn[39;49m[34;49m @ dup p return tos ;  .. [39;49m[32;49m
0x7fbdaad60523    498b4708                mov rax, [r15+0x8]                                     [39;49m[32;49m
0x7fbdaad60527    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fbdaad6052b    498906                  mov [r14], rax                                         [39;49m
[34;49m .. 7 "goedel4_4_assert" assert } ix  n @ [39;49m[33;40mdup[39;49m[34;49m p return tos ;  .. [39;49m[32;49m
0x7fbdaad6052e    498946f8                mov [r14-0x8], rax                                     [39;49m
[34;49m .. oedel4_4_assert" assert } ix  n @ dup [39;49m[33;40mp[39;49m[34;49m return tos ;  .. [39;49m[32;49m
0x7fbdaad60532    49b9d965d5aabd7f0000    mov r9, 0x7fbdaad565d9                                 [39;49m[32;49m
0x7fbdaad6053c    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fbdaad565d9[32;49m >[39;49m[39;49m
[34;49m .. del4_4_assert" assert } ix  n @ dup p [39;49m[33;40mreturn[39;49m[34;49m tos ;  .. [39;49m[32;49m
0x7fbdaad6053f    498b06                  mov rax, [r14]                                         [39;49m
[34;49m .. rt" assert } ix  n @ dup p return tos [39;49m[33;40m;[39;49m[34;49m  .. [39;49m[32;49m
0x7fbdaad60542    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad60546    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaad6054a    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad6054e    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaad60551    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'goedel4' :: codeSize = 681
Word : 0x00007fbda95528e8 :: Compiled at : 0x00007fbdaad602a8
 =============================
::> 'wdiss' was called at namespaces/test/localsTest.csl 242.21 <::

 goedel4 :: 
 140452566477032 2 goedel4_1_assert  : ok

 140452595432040 7 goedel4_2_assert  : ok

 140452590447898 goedel4_3_assert  : ok

 7 7 goedel4_4_assert  : ok

 9 goedel4_0_assert  : ok

 
goedel4 :: output should have read : 
'junk' 2 'junk' 7 'junk' 7 7 9
 goedel5 :: 
 0 2 goedel5_1_assert  : ok

 140452590449557 7 goedel5_2_assert  : ok

 goedel5_3_assert  : ok

 7 7 goedel5_4_assert  : ok

 9 goedel5_0_assert  : ok

 
goedel5 :: output should read : junk' 2 'junk' 7 7 9
 goedel6 :: 
 0 2 goedel6_1_assert  : ok

 140452590449557 7 goedel6_2_assert  : ok

 goedel6_3_assert  : ok

 7 7 goedel6_4_assert  : ok

 9 goedel6_0_assert  : ok

 
goedel6 :: goedel6 output should read : 
'junk' 2 'junk' 7 7 'junk' 9
 goedel7 :: 

 goedel7 :: 
 0 2 goedel7_1_assert  : ok

 140452590449557 7 goedel7_2_assert  : ok

 18 goedel7_0_assert  : ok

 
goedel7 :: goedel7 output should read : 
'junk' 2 'junk' 7 18
 =============================
Lexer.[34;49mofile[39;49m <:> csl compiled word, prefix
SourceCode for Lexer.[34;49mofile[39;49m :> 
[34;49m: ofile ( name | file input result ) input 0 = "open/read/print :: " ps name @ ps nl file name @ fopen = nl { result file @ input 1 fread = input @ emit } { result @ 1 == } doWhile file @ fclose ; [39;49m
Source code file location of [34;49mofile[39;49m : "namespaces/test/file.csl" : 4.2 :: we are now at : namespaces/test/file.csl : 13.19
Compiled with : optimizeOn, inlineOn, Jcc8 on
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xaad60bdf -- code size = 368 bytes
TypeSignature : 
 -----------------------------
Word :: Lexer.[34;49mofile[39;49m : definition = 0x00007fbdaad60bdf : disassembly at namespaces/test/file.csl : 13.19 :
[34;49m ..                                     : [39;49m[33;40mofile[39;49m[34;49m ( name | file input result ) input 0 = "open/read/print :: " ps name @ ps nl file name @ fopen  .. [39;49m[32;49m
0x7fbdaad60bdf    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fbdaad60be3    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaad60be7    4981c620000000          add r14, 0x20                                          [39;49m
[34;49m ..  : ofile ( name | file input result ) [39;49m[33;40minput[39;49m[34;49m 0 = "open/read/print :: " ps name @ ps nl file name @ fopen = nl { result file @ input 1 fread  .. [39;49m[32;49m
0x7fbdaad60bee    498d4710                lea rax, [r15+0x10]                                    [39;49m
[34;49m .. le ( name | file input result ) input [39;49m[33;40m0[39;49m[34;49m = "open/read/print :: " ps name @ ps nl file name @ fopen = nl { result file @ input 1 fread = inpu .. [39;49m[32;49m
0x7fbdaad60bf2    48c7c100000000          mov rcx, 0x0                                           [39;49m
[34;49m ..  ( name | file input result ) input 0 [39;49m[33;40m=[39;49m[34;49m "open/read/print :: " ps name @ ps nl file name @ fopen = nl { result file @ input 1 fread = input  .. [39;49m[32;49m
0x7fbdaad60bf9    488908                  mov [rax], rcx                                         [39;49m
[34;49m ..  name | file input result ) input 0 = [39;49m[33;40m"[39;49m[34;49mopen/read/print :: " ps name @ ps nl file name @ fopen = nl { result file @ input 1 fread = input @  .. [39;49m[32;49m
0x7fbdaad60bfc    48b8f00383aabd7f0000    mov rax, 0x7fbdaa8303f0    	[32;49m< string : '[39;49m[39;49mopen/read/print :: [39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fbdaad60c06    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad60c0a    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ult ) input 0 = "open/read/print :: " [39;49m[33;40mps[39;49m[34;49m name @ ps nl file name @ fopen = nl { result file @ input 1 fread = input @ emit } { result @ 1 == .. [39;49m[32;49m
0x7fbdaad60c0d    49b97d63d5aabd7f0000    mov r9, 0x7fbdaad5637d                                 [39;49m[32;49m
0x7fbdaad60c17    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fbdaad5637d[32;49m >[39;49m[39;49m
[34;49m ..  ) input 0 = "open/read/print :: " ps [39;49m[33;40mname[39;49m[34;49m @ ps nl file name @ fopen = nl { result file @ input 1 fread = input @ emit } { result @ 1 == }  .. [39;49m[32;49m
0x7fbdaad60c1a    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad60c1e    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad60c22    498906                  mov [r14], rax                                         [39;49m
[34;49m .. t 0 = "open/read/print :: " ps name @ [39;49m[33;40mps[39;49m[34;49m nl file name @ fopen = nl { result file @ input 1 fread = input @ emit } { result @ 1 == } doWhile .. [39;49m[32;49m
0x7fbdaad60c25    49b97d63d5aabd7f0000    mov r9, 0x7fbdaad5637d                                 [39;49m[32;49m
0x7fbdaad60c2f    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fbdaad5637d[32;49m >[39;49m[39;49m
[34;49m ..  = "open/read/print :: " ps name @ ps [39;49m[33;40mnl[39;49m[34;49m file name @ fopen = nl { result file @ input 1 fread = input @ emit } { result @ 1 == } doWhile  f .. [39;49m[32;49m
0x7fbdaad60c32    49b8e0903e1ebd550000    mov r8, 0x55bd1e3e90e0                                 [39;49m[32;49m
0x7fbdaad60c3c    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaad60c46    49ffd1                  call r9                    	< Io.[34;49mnewline[39;49m : 0x000055bd1e3e90e0[32;49m >[39;49m[39;49m
[34;49m .. "open/read/print :: " ps name @ ps nl [39;49m[33;40mfile[39;49m[34;49m name @ fopen = nl { result file @ input 1 fread = input @ emit } { result @ 1 == } doWhile  file .. [39;49m[32;49m
0x7fbdaad60c49    498d4708                lea rax, [r15+0x8]                                     [39;49m[32;49m
0x7fbdaad60c4d    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad60c51    498906                  mov [r14], rax                                         [39;49m
[34;49m .. /read/print :: " ps name @ ps nl file [39;49m[33;40mname[39;49m[34;49m @ fopen = nl { result file @ input 1 fread = input @ emit } { result @ 1 == } doWhile  file @ fc .. [39;49m[32;49m
0x7fbdaad60c54    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad60c58    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad60c5c    498906                  mov [r14], rax                                         [39;49m
[34;49m .. rint :: " ps name @ ps nl file name @ [39;49m[33;40mfopen[39;49m[34;49m = nl { result file @ input 1 fread = input @ emit } { result @ 1 == } doWhile  file @ fclose ;  .. [39;49m[32;49m
0x7fbdaad60c5f    49b840d43e1ebd550000    mov r8, 0x55bd1e3ed440                                 [39;49m[32;49m
0x7fbdaad60c69    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaad60c73    49ffd1                  call r9                    	< File.[34;49mfopen[39;49m : 0x000055bd1e3ed440[32;49m >[39;49m[39;49m[32;49m
0x7fbdaad60c76    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fbdaad60c79    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fbdaad60c7d    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m .. : " ps name @ ps nl file name @ fopen [39;49m[33;40m=[39;49m[34;49m nl { result file @ input 1 fread = input @ emit } { result @ 1 == } doWhile  file @ fclose ;  .. [39;49m[32;49m
0x7fbdaad60c81    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. " ps name @ ps nl file name @ fopen = [39;49m[33;40mnl[39;49m[34;49m { result file @ input 1 fread = input @ emit } { result @ 1 == } doWhile  file @ fclose ;  .. [39;49m[32;49m
0x7fbdaad60c84    49b8e0903e1ebd550000    mov r8, 0x55bd1e3e90e0                                 [39;49m[32;49m
0x7fbdaad60c8e    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaad60c98    49ffd1                  call r9                    	< Io.[34;49mnewline[39;49m : 0x000055bd1e3e90e0[32;49m >[39;49m[39;49m
[34;49m .. name @ ps nl file name @ fopen = nl { [39;49m[33;40mresult[39;49m[34;49m file @ input 1 fread = input @ emit } { result @ 1 == } doWhile  file @ fclose ;  .. [39;49m[32;49m
0x7fbdaad60c9b    498d4718                lea rax, [r15+0x18]                                    [39;49m[32;49m
0x7fbdaad60c9f    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad60ca3    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ps nl file name @ fopen = nl { result [39;49m[33;40mfile[39;49m[34;49m @ input 1 fread = input @ emit } { result @ 1 == } doWhile  file @ fclose ;  .. [39;49m[32;49m
0x7fbdaad60ca6    498b4708                mov rax, [r15+0x8]                                     [39;49m[32;49m
0x7fbdaad60caa    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad60cae    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ile name @ fopen = nl { result file @ [39;49m[33;40minput[39;49m[34;49m 1 fread = input @ emit } { result @ 1 == } doWhile  file @ fclose ;  .. [39;49m[32;49m
0x7fbdaad60cb1    498d4710                lea rax, [r15+0x10]                                    [39;49m[32;49m
0x7fbdaad60cb5    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad60cb9    498906                  mov [r14], rax                                         [39;49m
[34;49m .. me @ fopen = nl { result file @ input [39;49m[33;40m1[39;49m[34;49m fread = input @ emit } { result @ 1 == } doWhile  file @ fclose ;  .. [39;49m[32;49m
0x7fbdaad60cbc    48c7c001000000          mov rax, 0x1                                           [39;49m[32;49m
0x7fbdaad60cc3    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad60cc7    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  @ fopen = nl { result file @ input 1 [39;49m[33;40mfread[39;49m[34;49m = input @ emit } { result @ 1 == } doWhile  file @ fclose ;  .. [39;49m[32;49m
0x7fbdaad60cca    49b8b0d43e1ebd550000    mov r8, 0x55bd1e3ed4b0                                 [39;49m[32;49m
0x7fbdaad60cd4    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaad60cde    49ffd1                  call r9                    	< File.[34;49mfread[39;49m : 0x000055bd1e3ed4b0[32;49m >[39;49m[39;49m[32;49m
0x7fbdaad60ce1    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fbdaad60ce4    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fbdaad60ce8    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m .. en = nl { result file @ input 1 fread [39;49m[33;40m=[39;49m[34;49m input @ emit } { result @ 1 == } doWhile  file @ fclose ;  .. [39;49m[32;49m
0x7fbdaad60cec    488908                  mov [rax], rcx                                         [39;49m
[34;49m ..  = nl { result file @ input 1 fread = [39;49m[33;40minput[39;49m[34;49m @ emit } { result @ 1 == } doWhile  file @ fclose ;  .. [39;49m[32;49m
0x7fbdaad60cef    498b4710                mov rax, [r15+0x10]                                    [39;49m[32;49m
0x7fbdaad60cf3    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad60cf7    498906                  mov [r14], rax                                         [39;49m
[34;49m .. result file @ input 1 fread = input @ [39;49m[33;40memit[39;49m[34;49m } { result @ 1 == } doWhile  file @ fclose ;  .. [39;49m[32;49m
0x7fbdaad60cfa    49b820943e1ebd550000    mov r8, 0x55bd1e3e9420                                 [39;49m[32;49m
0x7fbdaad60d04    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaad60d0e    49ffd1                  call r9                    	< Io.[34;49memit[39;49m : 0x000055bd1e3e9420[32;49m >[39;49m[39;49m
[34;49m .. le @ input 1 fread = input @ emit } { [39;49m[33;40mresult[39;49m[34;49m @ 1 == } doWhile  file @ fclose ;  .. [39;49m[32;49m
0x7fbdaad60d11    498b4718                mov rax, [r15+0x18]                                    [39;49m
[34;49m .. 1 fread = input @ emit } { result @ 1 [39;49m[33;40m==[39;49m[34;49m } doWhile  file @ fclose ;  .. [39;49m[32;49m
0x7fbdaad60d15    4883f801                cmp rax, 0x1                                           [39;49m[32;49m
0x7fbdaad60d19    7505                    jnz 0xaad60d20                                         [39;49m[32;49m
0x7fbdaad60d1b    e97bffffff              jmp 0x7fbdaad60c9b         	< Lexer.[34;49mofile[39;49m+188[32;49m >[39;49m[39;49m
[34;49m .. t @ emit } { result @ 1 == } doWhile  [39;49m[33;40mfile[39;49m[34;49m @ fclose ;  .. [39;49m[32;49m
0x7fbdaad60d20    498b4708                mov rax, [r15+0x8]                                     [39;49m[32;49m
0x7fbdaad60d24    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad60d28    498906                  mov [r14], rax                                         [39;49m
[34;49m .. t } { result @ 1 == } doWhile  file @ [39;49m[33;40mfclose[39;49m[34;49m ;  .. [39;49m[32;49m
0x7fbdaad60d2b    49b890d43e1ebd550000    mov r8, 0x55bd1e3ed490                                 [39;49m[32;49m
0x7fbdaad60d35    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaad60d3f    49ffd1                  call r9                    	< File.[34;49mfclose[39;49m : 0x000055bd1e3ed490[32;49m >[39;49m[39;49m
[34;49m .. esult @ 1 == } doWhile  file @ fclose [39;49m[33;40m;[39;49m[34;49m  .. [39;49m[32;49m
0x7fbdaad60d42    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad60d46    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaad60d4a    4983ee08                sub r14, 0x8                                           [39;49m[32;49m
0x7fbdaad60d4e    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'ofile' :: codeSize = 367
Word : 0x00007fbda956fc18 :: Compiled at : 0x00007fbdaad60bdf
 =============================
::> 'wdiss' was called at namespaces/test/file.csl 13.19 <::
 open/read/print ::  namespaces/test/file.csl

5
#if 1 // already added to .init.csl
C Compiler Int Lexer
: ofile ( name | file input result )
    input 0 =
    "open/read/print :: " ps name @ ps nl
    file name @ fopen =
    nl { result file @ input 1 fread = input @ emit } { result @ 1 == } doWhile 
    file @ fclose
; prefix
//pause
#endif 
' ofile find wdiss //pause
ofile ( "namespaces/test/file.csl" )
// pause
: hi 1 2 + p ;
: hey hi hi ;
: heey hey hey ;
heey
2 + 7 assertStkChk // stack checking


 3 3 3 3[34;49m 
dynamic object test
[39;49m object new slot test :   : ok

 object clone test :   : ok

 object clone test2 :   : ok

 object clone test3 :   : ok

 object clone test4 :   : ok

 object clone test5 :   : ok

 object compile test6 :   : ok

 object compile test7 :   : ok

 object compile test8 :   : ok


 =============================
Control.[34;49mabrkcon[39;49m <:> csl compiled word
SourceCode for Control.[34;49mabrkcon[39;49m :> 
[34;49m: abrkcon { { x @ 0 == } { break } { x @ p x dup @ 1 - = continue } ifElse 2 p } loop ; [39;49m
Source code file location of [34;49mabrkcon[39;49m : "namespaces/test/control.csl" : 16.2 :: we are now at : namespaces/test/control.csl : 17.20
Compiled with : optimizeOn, inlineOn, Jcc8 on
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xaad60f41 -- code size = 162 bytes
TypeSignature : 
 -----------------------------
Word :: Control.[34;49mabrkcon[39;49m : definition = 0x00007fbdaad60f41 : disassembly at namespaces/test/control.csl : 17.20 :
[34;49m ..                         : abrkcon { { [39;49m[33;40mx[39;49m[34;49m @ 0 == } { break } { x @ p x dup @ 1 - = continue } ifElse 2 p } loop ;  .. [39;49m[32;49m
0x7fbdaad60f41    48b858a057a9bd7f0000    mov rax, 0x7fbda957a058    	[32;49m< string : '[39;49m[39;49m\n[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fbdaad60f4b    488b00                  mov rax, [rax]                                         [39;49m
[34;49m ..                   : abrkcon { { x @ 0 [39;49m[33;40m==[39;49m[34;49m } { break } { x @ p x dup @ 1 - = continue } ifElse 2 p } loop ;  .. [39;49m[32;49m
0x7fbdaad60f4e    4885c0                  test rax, rax                                          [39;49m[32;49m
0x7fbdaad60f51    750a                    jnz 0xaad60f5d                                         [39;49m
[34;49m ..            : abrkcon { { x @ 0 == } { [39;49m[33;40mbreak[39;49m[34;49m } { x @ p x dup @ 1 - = continue } ifElse 2 p } loop ;  .. [39;49m[32;49m
0x7fbdaad60f53    e98a000000              jmp 0x7fbdaad60fe2         	< Control.[34;49mabrkcon[39;49m+161[32;49m >[39;49m[39;49m
[34;49m ..      : abrkcon { { x @ 0 == } { break [39;49m[33;40m}[39;49m[34;49m { x @ p x dup @ 1 - = continue } ifElse 2 p } loop ;  .. [39;49m[32;49m
0x7fbdaad60f58    e965000000              jmp 0x7fbdaad60fc2         	< Control.[34;49mabrkcon[39;49m+129[32;49m >[39;49m[39;49m
[34;49m ..  : abrkcon { { x @ 0 == } { break } { [39;49m[33;40mx[39;49m[34;49m @ p x dup @ 1 - = continue } ifElse 2 p } loop ;  .. [39;49m[32;49m
0x7fbdaad60f5d    48b858a057a9bd7f0000    mov rax, 0x7fbda957a058    	[32;49m< string : '[39;49m[39;49m\n[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fbdaad60f67    488b00                  mov rax, [rax]                                         [39;49m
[34;49m ..              : abrkcon { { x @ 0 == } [39;49m[33;40m{[39;49m[34;49m break } { x @ p x dup @ 1 - = continue } ifElse 2 p } loop ;  .. [39;49m[32;49m
0x7fbdaad60f6a    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad60f6e    498906                  mov [r14], rax                                         [39;49m
[34;49m : abrkcon { { x @ 0 == } { break } { x @ [39;49m[33;40mp[39;49m[34;49m x dup @ 1 - = continue } ifElse 2 p } loop ;  .. [39;49m[32;49m
0x7fbdaad60f71    49b94464d5aabd7f0000    mov r9, 0x7fbdaad56444                                 [39;49m[32;49m
0x7fbdaad60f7b    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fbdaad56444[32;49m >[39;49m[39;49m
[34;49m .. kcon { { x @ 0 == } { break } { x @ p [39;49m[33;40mx[39;49m[34;49m dup @ 1 - = continue } ifElse 2 p } loop ; [39;49m[32;49m
0x7fbdaad60f7e    48b858a057a9bd7f0000    mov rax, 0x7fbda957a058    	[32;49m< string : '[39;49m[39;49m\n[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fbdaad60f88    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fbdaad60f8c    498906                  mov [r14], rax                                         [39;49m
[34;49m .. on { { x @ 0 == } { break } { x @ p x [39;49m[33;40mdup[39;49m[34;49m @ 1 - = continue } ifElse 2 p } loop ; [39;49m[32;49m
0x7fbdaad60f8f    498946f8                mov [r14-0x8], rax                                     [39;49m
[34;49m ..  { x @ 0 == } { break } { x @ p x dup [39;49m[33;40m@[39;49m[34;49m 1 - = continue } ifElse 2 p } loop ; [39;49m[32;49m
0x7fbdaad60f93    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fbdaad60f96    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fbdaad60f99    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  x @ 0 == } { break } { x @ p x dup @ [39;49m[33;40m1[39;49m[34;49m - = continue } ifElse 2 p } loop ; [39;49m[32;49m
0x7fbdaad60f9c    48c7c001000000          mov rax, 0x1                                           [39;49m[32;49m
0x7fbdaad60fa3    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fbdaad60fa6    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fbdaad60fa9    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m ..  @ 0 == } { break } { x @ p x dup @ 1 [39;49m[33;40m-[39;49m[34;49m = continue } ifElse 2 p } loop ; [39;49m[32;49m
0x7fbdaad60fad    482bc1                  sub rax, rcx                                           [39;49m[32;49m
0x7fbdaad60fb0    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fbdaad60fb3    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fbdaad60fb6    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m ..  0 == } { break } { x @ p x dup @ 1 - [39;49m[33;40m=[39;49m[34;49m continue } ifElse 2 p } loop ; [39;49m[32;49m
0x7fbdaad60fba    488908                  mov [rax], rcx                                         [39;49m
[34;49m ..  == } { break } { x @ p x dup @ 1 - = [39;49m[33;40mcontinue[39;49m[34;49m } ifElse 2 p } loop ; [39;49m[32;49m
0x7fbdaad60fbd    e97fffffff              jmp 0x7fbdaad60f41         	< Control.[34;49mabrkcon[39;49m : 0x00007fbdaad60f41[32;49m >[39;49m[39;49m
[34;49m .. x @ p x dup @ 1 - = continue } ifElse [39;49m[33;40m2[39;49m[34;49m p } loop ; [39;49m[32;49m
0x7fbdaad60fc2    48c7c002000000          mov rax, 0x2                                           [39;49m[32;49m
0x7fbdaad60fc9    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad60fcd    498906                  mov [r14], rax                                         [39;49m
[34;49m .. @ p x dup @ 1 - = continue } ifElse 2 [39;49m[33;40mp[39;49m[34;49m } loop ; [39;49m[32;49m
0x7fbdaad60fd0    49b94464d5aabd7f0000    mov r9, 0x7fbdaad56444                                 [39;49m[32;49m
0x7fbdaad60fda    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fbdaad56444[32;49m >[39;49m[39;49m
[34;49m .. p x dup @ 1 - = continue } ifElse 2 p [39;49m[33;40m}[39;49m[34;49m loop ; [39;49m[32;49m
0x7fbdaad60fdd    e95fffffff              jmp 0x7fbdaad60f41         	< Control.[34;49mabrkcon[39;49m : 0x00007fbdaad60f41[32;49m >[39;49m[39;49m
[34;49m ..  @ 1 - = continue } ifElse 2 p } loop [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fbdaad60fe2    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'abrkcon' :: codeSize = 161
Word : 0x00007fbda957a1a0 :: Compiled at : 0x00007fbdaad60f41
 =============================
::> 'wdiss' was called at namespaces/test/control.csl 17.20 <::
 10 9 8 7 6 5 4 3 2 1
 10 9 8 7 6 5 4 3 2 1
 =============================
Control.[34;49mct00[39;49m <:> csl compiled word
SourceCode for Control.[34;49mct00[39;49m :> 
[34;49m: ct00 ( n | j ) { j 1 = } { j @ n @ <= } { j ++ } { n @ p j @ p } for ; [39;49m
Source code file location of [34;49mct00[39;49m : "namespaces/test/control.csl" : 34.2 :: we are now at : namespaces/test/control.csl : 41.17
Compiled with : optimizeOn, inlineOn, Jcc8 on
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xaad6115c -- code size = 109 bytes
TypeSignature : 
 -----------------------------
Word :: Control.[34;49mct00[39;49m : definition = 0x00007fbdaad6115c : disassembly at namespaces/test/control.csl : 41.17 :
[34;49m ..                                     : [39;49m[33;40mct00[39;49m[34;49m ( n | j )  { j 1 = } { j @ n @ <= } { j ++ } { n @ p j @ p  } for ;  .. [39;49m[32;49m
0x7fbdaad6115c    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fbdaad61160    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaad61164    4981c610000000          add r14, 0x10                                          [39;49m
[34;49m ..                   : ct00 ( n | j )  { [39;49m[33;40mj[39;49m[34;49m 1 = } { j @ n @ <= } { j ++ } { n @ p j @ p  } for ;  .. [39;49m[32;49m
0x7fbdaad6116b    498d4708                lea rax, [r15+0x8]                                     [39;49m
[34;49m ..                 : ct00 ( n | j )  { j [39;49m[33;40m1[39;49m[34;49m = } { j @ n @ <= } { j ++ } { n @ p j @ p  } for ;  .. [39;49m[32;49m
0x7fbdaad6116f    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m ..               : ct00 ( n | j )  { j 1 [39;49m[33;40m=[39;49m[34;49m } { j @ n @ <= } { j ++ } { n @ p j @ p  } for ;  .. [39;49m[32;49m
0x7fbdaad61176    488908                  mov [rax], rcx                                         [39;49m
[34;49m ..         : ct00 ( n | j )  { j 1 = } { [39;49m[33;40mj[39;49m[34;49m @ n @ <= } { j ++ } { n @ p j @ p  } for ;  .. [39;49m[32;49m
0x7fbdaad61179    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m ..     : ct00 ( n | j )  { j 1 = } { j @ [39;49m[33;40mn[39;49m[34;49m @ <= } { j ++ } { n @ p j @ p  } for ;  .. [39;49m[32;49m
0x7fbdaad6117d    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m
[34;49m .. : ct00 ( n | j )  { j 1 = } { j @ n @ [39;49m[33;40m<=[39;49m[34;49m } { j ++ } { n @ p j @ p  } for ;  .. [39;49m[32;49m
0x7fbdaad61181    483bc1                  cmp rax, rcx                                           [39;49m[32;49m
0x7fbdaad61184    7f36                    jg 0xaad611bc                                          [39;49m
[34;49m ..   { j 1 = } { j @ n @ <= } { j ++ } { [39;49m[33;40mn[39;49m[34;49m @ p j @ p  } for ; [39;49m[32;49m
0x7fbdaad61186    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad6118a    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad6118e    498906                  mov [r14], rax                                         [39;49m
[34;49m .. j 1 = } { j @ n @ <= } { j ++ } { n @ [39;49m[33;40mp[39;49m[34;49m j @ p  } for ; [39;49m[32;49m
0x7fbdaad61191    49b94464d5aabd7f0000    mov r9, 0x7fbdaad56444                                 [39;49m[32;49m
0x7fbdaad6119b    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fbdaad56444[32;49m >[39;49m[39;49m
[34;49m .. 1 = } { j @ n @ <= } { j ++ } { n @ p [39;49m[33;40mj[39;49m[34;49m @ p  } for ; [39;49m[32;49m
0x7fbdaad6119e    498b4708                mov rax, [r15+0x8]                                     [39;49m[32;49m
0x7fbdaad611a2    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad611a6    498906                  mov [r14], rax                                         [39;49m
[34;49m .. } { j @ n @ <= } { j ++ } { n @ p j @ [39;49m[33;40mp[39;49m[34;49m  } for ; [39;49m[32;49m
0x7fbdaad611a9    49b94464d5aabd7f0000    mov r9, 0x7fbdaad56444                                 [39;49m[32;49m
0x7fbdaad611b3    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fbdaad56444[32;49m >[39;49m[39;49m
[34;49m .. n | j )  { j 1 = } { j @ n @ <= } { j [39;49m[33;40m++[39;49m[34;49m } { n @ p j @ p  } for ; [39;49m[32;49m
0x7fbdaad611b6    49ff4708                inc qword [r15+0x8]                                    [39;49m
[34;49m ..  j )  { j 1 = } { j @ n @ <= } { j ++ [39;49m[33;40m}[39;49m[34;49m { n @ p j @ p  } for ; [39;49m[32;49m
0x7fbdaad611ba    ebbd                    jmp 0x7fbdaad61179         	< Control.[34;49mct00[39;49m+29[32;49m >[39;49m[39;49m
[34;49m ..  @ <= } { j ++ } { n @ p j @ p  } for [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fbdaad611bc    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad611c0    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaad611c4    4983ee08                sub r14, 0x8                                           [39;49m[32;49m
0x7fbdaad611c8    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'ct00' :: codeSize = 108
Word : 0x00007fbda95807e8 :: Compiled at : 0x00007fbdaad6115c
 =============================
::> 'wdiss' was called at namespaces/test/control.csl 41.17 <::
 17 1 17 2 17 3 17 4 17 5 17 6 17 7 17 8 17 9 17 10 17 11 17 12 17 13 17 14 17 15 17 16 17 17
 =============================
Control.[34;49mct0[39;49m <:> csl compiled word
SourceCode for Control.[34;49mct0[39;49m :> 
[34;49m: ct0 ( n | j ) nl "ct0 : " ps nl { label: test1 "ct0 before goto/label works" ps nl goto: leave } _ { j 1 = } { j @ n @ <= } { j ++ } { n @ p j @ p { n @ j @ == } { nl "testing ct0 : goto/label \'hi\' ->" ps goto: test1 } { "continuing ct0" ps } ifElse } for label: leave "ct0" n @ j @ leaving ; [39;49m
Source code file location of [34;49mct0[39;49m : "namespaces/test/control.csl" : 44.2 :: we are now at : namespaces/test/control.csl : 60.16
Compiled with : optimizeOn, inlineOn, Jcc8 on
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xaad611ce -- code size = 410 bytes
TypeSignature : 
 -----------------------------
Word :: Control.[34;49mct0[39;49m : definition = 0x00007fbdaad611ce : disassembly at namespaces/test/control.csl : 60.16 :
[34;49m ..                                     : [39;49m[33;40mct0[39;49m[34;49m ( n | j )  nl "ct0 : " ps nl {  label: test1  "ct0 before goto/label works" ps nl  goto: leave  } .. [39;49m[32;49m
0x7fbdaad611ce    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fbdaad611d2    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaad611d6    4981c610000000          add r14, 0x10                                          [39;49m
[34;49m ..                      : ct0 ( n | j )  [39;49m[33;40mnl[39;49m[34;49m "ct0 : " ps nl {  label: test1  "ct0 before goto/label works" ps nl  goto: leave  } _ { j 1 = } {  .. [39;49m[32;49m
0x7fbdaad611dd    49b8e0903e1ebd550000    mov r8, 0x55bd1e3e90e0                                 [39;49m[32;49m
0x7fbdaad611e7    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaad611f1    49ffd1                  call r9                    	< Io.[34;49mnewline[39;49m : 0x000055bd1e3e90e0[32;49m >[39;49m[39;49m
[34;49m ..                   : ct0 ( n | j )  nl [39;49m[33;40m"[39;49m[34;49mct0 : " ps nl {  label: test1  "ct0 before goto/label works" ps nl  goto: leave  } _ { j 1 = } { j @ .. [39;49m[32;49m
0x7fbdaad611f4    48b8ee0c83aabd7f0000    mov rax, 0x7fbdaa830cee    	[32;49m< string : '[39;49m[39;49mct0 : [39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fbdaad611fe    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad61202    498906                  mov [r14], rax                                         [39;49m
[34;49m ..          : ct0 ( n | j )  nl "ct0 : " [39;49m[33;40mps[39;49m[34;49m nl {  label: test1  "ct0 before goto/label works" ps nl  goto: leave  } _ { j 1 = } { j @ n @ <= } .. [39;49m[32;49m
0x7fbdaad61205    49b97d63d5aabd7f0000    mov r9, 0x7fbdaad5637d                                 [39;49m[32;49m
0x7fbdaad6120f    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fbdaad5637d[32;49m >[39;49m[39;49m
[34;49m ..       : ct0 ( n | j )  nl "ct0 : " ps [39;49m[33;40mnl[39;49m[34;49m {  label: test1  "ct0 before goto/label works" ps nl  goto: leave  } _ { j 1 = } { j @ n @ <= } {  .. [39;49m[32;49m
0x7fbdaad61212    49b8e0903e1ebd550000    mov r8, 0x55bd1e3e90e0                                 [39;49m[32;49m
0x7fbdaad6121c    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaad61226    49ffd1                  call r9                    	< Io.[34;49mnewline[39;49m : 0x000055bd1e3e90e0[32;49m >[39;49m[39;49m
[34;49m ..    : ct0 ( n | j )  nl "ct0 : " ps nl [39;49m[33;40m{[39;49m[34;49m  label: test1  "ct0 before goto/label works" ps nl  goto: leave  } _ { j 1 = } { j @ n @ <= } { j + .. [39;49m[32;49m
0x7fbdaad61229    e93b000000              jmp 0x7fbdaad61269         	< Control.[34;49mct0[39;49m+155[32;49m >[39;49m[39;49m
[34;49m .. )  nl "ct0 : " ps nl {  label: test1  [39;49m[33;40m"[39;49m[34;49mct0 before goto/label works" ps nl  goto: leave  } _ { j 1 = } { j @ n @ <= } { j ++ } { n @ p j @ p .. [39;49m[32;49m
0x7fbdaad6122e    48b82d0d83aabd7f0000    mov rax, 0x7fbdaa830d2d    	[32;49m< string : '[39;49m[39;49mct0 before goto/label works[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fbdaad61238    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad6123c    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  test1  "ct0 before goto/label works" [39;49m[33;40mps[39;49m[34;49m nl  goto: leave  } _ { j 1 = } { j @ n @ <= } { j ++ } { n @ p j @ p  { n @ j @ == } { nl "testing .. [39;49m[32;49m
0x7fbdaad6123f    49b97d63d5aabd7f0000    mov r9, 0x7fbdaad5637d                                 [39;49m[32;49m
0x7fbdaad61249    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fbdaad5637d[32;49m >[39;49m[39;49m
[34;49m .. st1  "ct0 before goto/label works" ps [39;49m[33;40mnl[39;49m[34;49m  goto: leave  } _ { j 1 = } { j @ n @ <= } { j ++ } { n @ p j @ p  { n @ j @ == } { nl "testing ct .. [39;49m[32;49m
0x7fbdaad6124c    49b8e0903e1ebd550000    mov r8, 0x55bd1e3e90e0                                 [39;49m[32;49m
0x7fbdaad61256    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaad61260    49ffd1                  call r9                    	< Io.[34;49mnewline[39;49m : 0x000055bd1e3e90e0[32;49m >[39;49m[39;49m
[34;49m ..  "ct0 before goto/label works" ps nl  [39;49m[33;40mgoto:[39;49m[34;49m leave  } _ { j 1 = } { j @ n @ <= } { j ++ } { n @ p j @ p  { n @ j @ == } { nl "testing ct0 :  .. [39;49m[32;49m
0x7fbdaad61263    e9bf000000              jmp 0x7fbdaad61327         	< Control.[34;49mct0[39;49m+345[32;49m >[39;49m[39;49m
[34;49m .. goto/label works" ps nl  goto: leave  [39;49m[33;40m}[39;49m[34;49m _ { j 1 = } { j @ n @ <= } { j ++ } { n @ p j @ p  { n @ j @ == } { nl "testing ct0 : goto/label \' .. [39;49m[32;49m
0x7fbdaad61268    c3                      ret                                                    [39;49m
[34;49m .. abel works" ps nl  goto: leave  } _ { [39;49m[33;40mj[39;49m[34;49m 1 = } { j @ n @ <= } { j ++ } { n @ p j @ p  { n @ j @ == } { nl "testing ct0 : goto/label \'hi\' - .. [39;49m[32;49m
0x7fbdaad61269    498d4708                lea rax, [r15+0x8]                                     [39;49m
[34;49m .. el works" ps nl  goto: leave  } _ { j [39;49m[33;40m1[39;49m[34;49m = } { j @ n @ <= } { j ++ } { n @ p j @ p  { n @ j @ == } { nl "testing ct0 : goto/label \'hi\' ->" .. [39;49m[32;49m
0x7fbdaad6126d    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m ..  works" ps nl  goto: leave  } _ { j 1 [39;49m[33;40m=[39;49m[34;49m } { j @ n @ <= } { j ++ } { n @ p j @ p  { n @ j @ == } { nl "testing ct0 : goto/label \'hi\' ->" p .. [39;49m[32;49m
0x7fbdaad61274    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. " ps nl  goto: leave  } _ { j 1 = } { [39;49m[33;40mj[39;49m[34;49m @ n @ <= } { j ++ } { n @ p j @ p  { n @ j @ == } { nl "testing ct0 : goto/label \'hi\' ->" ps goto .. [39;49m[32;49m
0x7fbdaad61277    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m ..  nl  goto: leave  } _ { j 1 = } { j @ [39;49m[33;40mn[39;49m[34;49m @ <= } { j ++ } { n @ p j @ p  { n @ j @ == } { nl "testing ct0 : goto/label \'hi\' ->" ps goto: te .. [39;49m[32;49m
0x7fbdaad6127b    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m
[34;49m ..  goto: leave  } _ { j 1 = } { j @ n @ [39;49m[33;40m<=[39;49m[34;49m } { j ++ } { n @ p j @ p  { n @ j @ == } { nl "testing ct0 : goto/label \'hi\' ->" ps goto: test1  .. [39;49m[32;49m
0x7fbdaad6127f    483bc1                  cmp rax, rcx                                           [39;49m[32;49m
0x7fbdaad61282    7f00                    jg 0xaad61284                                          [39;49m
[34;49m .. _ { j 1 = } { j @ n @ <= } { j ++ } { [39;49m[33;40mn[39;49m[34;49m @ p j @ p  { n @ j @ == } { nl "testing ct0 : goto/label \'hi\' ->" ps goto: test1 } { "continuing  .. [39;49m[32;49m
0x7fbdaad61284    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad61288    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad6128c    498906                  mov [r14], rax                                         [39;49m
[34;49m .. j 1 = } { j @ n @ <= } { j ++ } { n @ [39;49m[33;40mp[39;49m[34;49m j @ p  { n @ j @ == } { nl "testing ct0 : goto/label \'hi\' ->" ps goto: test1 } { "continuing ct0" .. [39;49m[32;49m
0x7fbdaad6128f    49b94464d5aabd7f0000    mov r9, 0x7fbdaad56444                                 [39;49m[32;49m
0x7fbdaad61299    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fbdaad56444[32;49m >[39;49m[39;49m
[34;49m .. 1 = } { j @ n @ <= } { j ++ } { n @ p [39;49m[33;40mj[39;49m[34;49m @ p  { n @ j @ == } { nl "testing ct0 : goto/label \'hi\' ->" ps goto: test1 } { "continuing ct0" p .. [39;49m[32;49m
0x7fbdaad6129c    498b4708                mov rax, [r15+0x8]                                     [39;49m[32;49m
0x7fbdaad612a0    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad612a4    498906                  mov [r14], rax                                         [39;49m
[34;49m .. } { j @ n @ <= } { j ++ } { n @ p j @ [39;49m[33;40mp[39;49m[34;49m  { n @ j @ == } { nl "testing ct0 : goto/label \'hi\' ->" ps goto: test1 } { "continuing ct0" ps }  .. [39;49m[32;49m
0x7fbdaad612a7    49b94464d5aabd7f0000    mov r9, 0x7fbdaad56444                                 [39;49m[32;49m
0x7fbdaad612b1    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fbdaad56444[32;49m >[39;49m[39;49m
[34;49m ..  @ n @ <= } { j ++ } { n @ p j @ p  { [39;49m[33;40mn[39;49m[34;49m @ j @ == } { nl "testing ct0 : goto/label \'hi\' ->" ps goto: test1 } { "continuing ct0" ps } ifEls .. [39;49m[32;49m
0x7fbdaad612b4    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m ..  @ <= } { j ++ } { n @ p j @ p  { n @ [39;49m[33;40mj[39;49m[34;49m @ == } { nl "testing ct0 : goto/label \'hi\' ->" ps goto: test1 } { "continuing ct0" ps } ifElse }  .. [39;49m[32;49m
0x7fbdaad612b8    498b4f08                mov rcx, [r15+0x8]                                     [39;49m
[34;49m .. = } { j ++ } { n @ p j @ p  { n @ j @ [39;49m[33;40m==[39;49m[34;49m } { nl "testing ct0 : goto/label \'hi\' ->" ps goto: test1 } { "continuing ct0" ps } ifElse } for  .. [39;49m[32;49m
0x7fbdaad612bc    483bc1                  cmp rax, rcx                                           [39;49m[32;49m
0x7fbdaad612bf    753f                    jnz 0xaad61300                                         [39;49m
[34;49m ..  ++ } { n @ p j @ p  { n @ j @ == } { [39;49m[33;40mnl[39;49m[34;49m "testing ct0 : goto/label \'hi\' ->" ps goto: test1 } { "continuing ct0" ps } ifElse } for label:  .. [39;49m[32;49m
0x7fbdaad612c1    49b8e0903e1ebd550000    mov r8, 0x55bd1e3e90e0                                 [39;49m[32;49m
0x7fbdaad612cb    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaad612d5    49ffd1                  call r9                    	< Io.[34;49mnewline[39;49m : 0x000055bd1e3e90e0[32;49m >[39;49m[39;49m
[34;49m ..  } { n @ p j @ p  { n @ j @ == } { nl [39;49m[33;40m"[39;49m[34;49mtesting ct0 : goto/label \'hi\' ->" ps goto: test1 } { "continuing ct0" ps } ifElse } for label: lea .. [39;49m[32;49m
0x7fbdaad612d8    48b88c0d83aabd7f0000    mov rax, 0x7fbdaa830d8c    	[32;49m< string : '[39;49m[39;49mtesting ct0 : goto/label 'hi' ->[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fbdaad612e2    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad612e6    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  "testing ct0 : goto/label \'hi\' ->" [39;49m[33;40mps[39;49m[34;49m goto: test1 } { "continuing ct0" ps } ifElse } for label: leave  "ct0" n @ j @ leaving ;  .. [39;49m[32;49m
0x7fbdaad612e9    49b97d63d5aabd7f0000    mov r9, 0x7fbdaad5637d                                 [39;49m[32;49m
0x7fbdaad612f3    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fbdaad5637d[32;49m >[39;49m[39;49m
[34;49m .. esting ct0 : goto/label \'hi\' ->" ps [39;49m[33;40mgoto:[39;49m[34;49m test1 } { "continuing ct0" ps } ifElse } for label: leave  "ct0" n @ j @ leaving ;  .. [39;49m[32;49m
0x7fbdaad612f6    e933ffffff              jmp 0x7fbdaad6122e         	< Control.[34;49mct0[39;49m+96[32;49m >[39;49m[39;49m
[34;49m ..  goto/label \'hi\' ->" ps goto: test1 [39;49m[33;40m}[39;49m[34;49m { "continuing ct0" ps } ifElse } for label: leave  "ct0" n @ j @ leaving ;  .. [39;49m[32;49m
0x7fbdaad612fb    e91e000000              jmp 0x7fbdaad6131e         	< Control.[34;49mct0[39;49m+336[32;49m >[39;49m[39;49m
[34;49m .. o/label \'hi\' ->" ps goto: test1 } { [39;49m[33;40m"[39;49m[34;49mcontinuing ct0" ps } ifElse } for label: leave  "ct0" n @ j @ leaving ;  .. [39;49m[32;49m
0x7fbdaad61300    48b8e10d83aabd7f0000    mov rax, 0x7fbdaa830de1    	[32;49m< string : '[39;49m[39;49mcontinuing ct0[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fbdaad6130a    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad6130e    498906                  mov [r14], rax                                         [39;49m
[34;49m .. " ps goto: test1 } { "continuing ct0" [39;49m[33;40mps[39;49m[34;49m } ifElse } for label: leave  "ct0" n @ j @ leaving ;  .. [39;49m[32;49m
0x7fbdaad61311    49b97d63d5aabd7f0000    mov r9, 0x7fbdaad5637d                                 [39;49m[32;49m
0x7fbdaad6131b    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fbdaad5637d[32;49m >[39;49m[39;49m
[34;49m .. ave  } _ { j 1 = } { j @ n @ <= } { j [39;49m[33;40m++[39;49m[34;49m } { n @ p j @ p  { n @ j @ == } { nl "testing ct0 : goto/label \'hi\' ->" ps goto: test1 } { "cont .. [39;49m[32;49m
0x7fbdaad6131e    49ff4708                inc qword [r15+0x8]                                    [39;49m
[34;49m ..   } _ { j 1 = } { j @ n @ <= } { j ++ [39;49m[33;40m}[39;49m[34;49m { n @ p j @ p  { n @ j @ == } { nl "testing ct0 : goto/label \'hi\' ->" ps goto: test1 } { "continu .. [39;49m[32;49m
0x7fbdaad61322    e950ffffff              jmp 0x7fbdaad61277         	< Control.[34;49mct0[39;49m+169[32;49m >[39;49m[39;49m
[34;49m ..  ct0" ps } ifElse } for label: leave  [39;49m[33;40m"[39;49m[34;49mct0" n @ j @ leaving ;  .. [39;49m[32;49m
0x7fbdaad61327    48b80d0e83aabd7f0000    mov rax, 0x7fbdaa830e0d    	[32;49m< string : '[39;49m[39;49mct0[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fbdaad61331    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad61335    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ps } ifElse } for label: leave  "ct0" [39;49m[33;40mn[39;49m[34;49m @ j @ leaving ;  .. [39;49m[32;49m
0x7fbdaad61338    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad6133c    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad61340    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  ifElse } for label: leave  "ct0" n @ [39;49m[33;40mj[39;49m[34;49m @ leaving ;  .. [39;49m[32;49m
0x7fbdaad61343    498b4708                mov rax, [r15+0x8]                                     [39;49m[32;49m
0x7fbdaad61347    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad6134b    498906                  mov [r14], rax                                         [39;49m
[34;49m .. lse } for label: leave  "ct0" n @ j @ [39;49m[33;40mleaving[39;49m[34;49m ;  .. [39;49m[32;49m
0x7fbdaad6134e    49b96b10d6aabd7f0000    mov r9, 0x7fbdaad6106b                                 [39;49m[32;49m
0x7fbdaad61358    49ffd1                  call r9                    	< Control.[34;49mleaving[39;49m : 0x00007fbdaad6106b[32;49m >[39;49m[39;49m
[34;49m .. r label: leave  "ct0" n @ j @ leaving [39;49m[33;40m;[39;49m[34;49m  .. [39;49m[32;49m
0x7fbdaad6135b    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad6135f    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaad61363    4983ee08                sub r14, 0x8                                           [39;49m[32;49m
0x7fbdaad61367    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'ct0' :: codeSize = 409
Word : 0x00007fbda9583508 :: Compiled at : 0x00007fbdaad611ce
 =============================
::> 'wdiss' was called at namespaces/test/control.csl 60.16 <::

 ct0 : 
 17 1 continuing ct0 17 2 continuing ct0 17 3 continuing ct0 17 4 continuing ct0 17 5 continuing ct0 17 6 continuing ct0 17 7 continuing ct0 17 8 continuing ct0 17 9 continuing ct0 17 10 continuing ct0 17 11 continuing ct0 17 12 continuing ct0 17 13 continuing ct0 17 14 continuing ct0 17 15 continuing ct0 17 16 continuing ct0 17 17
 testing ct0 : goto/label 'hi' -> ct0 before goto/label works

DataStack at : [34;49mnamespaces/test/control.csl : 61.7[39;49m :
DataStack depth =  10 : Dsp (R14) = Top = 0x00007fbdab0efa90, InitialTos = 0x00007fbdab0efa40, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fbdab0efa90 > = 0x00007fbdab0efa68	
  DataStack   [  -1 ] < 0x00007fbdab0efa88 > = 0x0000000000000011	
  DataStack   [  -2 ] < 0x00007fbdab0efa80 > = 0x0000000000000011	
  DataStack   [  -3 ] < 0x00007fbdab0efa78 > = 0x00007fbdaa830e0d	[32;49m< string : '[39;49m[34;49mct0[39;49m[32;49m' >[39;49m
  DataStack   [  -4 ] < 0x00007fbdab0efa70 > = 0x0000000000000011	
  DataStack   [  -5 ] < 0x00007fbdab0efa68 > = 0x0000000000000000	
  DataStack   [  -6 ] < 0x00007fbdab0efa60 > = 0x0000000000000011	
  DataStack   [  -7 ] < 0x00007fbdab0efa58 > = 0x0000000000000005	
  DataStack   [  -8 ] < 0x00007fbdab0efa50 > = 0x0000000000000005	
  DataStack   [  -9 ] < 0x00007fbdab0efa48 > = 0x0000000000000005	
 leaving ct0 n = 17 j =  17
DataStack at : [34;49mnamespaces/test/control.csl : 61.7[39;49m :
DataStack depth =  10 : Dsp (R14) = Top = 0x00007fbdab0efa90, InitialTos = 0x00007fbdab0efa40, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fbdab0efa90 > = 0x00007fbdab0efa68	
  DataStack   [  -1 ] < 0x00007fbdab0efa88 > = 0x0000000000000011	
  DataStack   [  -2 ] < 0x00007fbdab0efa80 > = 0x0000000000000011	
  DataStack   [  -3 ] < 0x00007fbdab0efa78 > = 0x00007fbdaa830e0d	[32;49m< string : '[39;49m[34;49mct0[39;49m[32;49m' >[39;49m
  DataStack   [  -4 ] < 0x00007fbdab0efa70 > = 0x0000000000000011	
  DataStack   [  -5 ] < 0x00007fbdab0efa68 > = 0x0000000000000000	
  DataStack   [  -6 ] < 0x00007fbdab0efa60 > = 0x0000000000000011	
  DataStack   [  -7 ] < 0x00007fbdab0efa58 > = 0x0000000000000005	
  DataStack   [  -8 ] < 0x00007fbdab0efa50 > = 0x0000000000000005	
  DataStack   [  -9 ] < 0x00007fbdab0efa48 > = 0x0000000000000005	

 ct1 : 
 17 1 continuing ct1 17 2 continuing ct1 17 3 continuing ct1 17 4 continuing ct1 17 5 continuing ct1 17 6 continuing ct1 17 7 continuing ct1 17 8 continuing ct1 17 9 continuing ct1 17 10 continuing ct1 17 11 continuing ct1 17 12 continuing ct1 17 13 continuing ct1 17 14 continuing ct1 17 15 continuing ct1 17 16 continuing ct1 17 17
 testing ct1 : goto/label1 -> ct1 after nested goto/label1 works

 ct2 : 

 testing ct2 : goto/label2 -> ct2 after goto/label2 works

 =============================
Control.[34;49mhic2[39;49m <:> csl compiled word
SourceCode for Control.[34;49mhic2[39;49m :> 
[34;49m: hic2 ( n ) nl "hic2 : start " ps nl s n @ p n @ s ct0 s n @ s ct1 n @ s ct2 s n @ p nl "hic2 : done " ps nl ; [39;49m
Source code file location of [34;49mhic2[39;49m : "namespaces/test/control.csl" : 83.2 :: we are now at : namespaces/test/control.csl : 88.17
Compiled with : optimizeOn, inlineOn, Jcc8 on
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xaad615ba -- code size = 438 bytes
TypeSignature : 
 -----------------------------
Word :: Control.[34;49mhic2[39;49m : definition = 0x00007fbdaad615ba : disassembly at namespaces/test/control.csl : 88.17 :
[34;49m ..                                     : [39;49m[33;40mhic2[39;49m[34;49m ( n )  nl "hic2 : start " ps nl s n @ p n @ s ct0 s n @ s ct1 n @ s ct2 s n @ p  nl "hic2 : done .. [39;49m[32;49m
0x7fbdaad615ba    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fbdaad615be    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaad615c2    4981c608000000          add r14, 0x8                                           [39;49m
[34;49m ..                         : hic2 ( n )  [39;49m[33;40mnl[39;49m[34;49m "hic2 : start " ps nl s n @ p n @ s ct0 s n @ s ct1 n @ s ct2 s n @ p  nl "hic2 : done " ps nl  ;  .. [39;49m[32;49m
0x7fbdaad615c9    49b8e0903e1ebd550000    mov r8, 0x55bd1e3e90e0                                 [39;49m[32;49m
0x7fbdaad615d3    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaad615dd    49ffd1                  call r9                    	< Io.[34;49mnewline[39;49m : 0x000055bd1e3e90e0[32;49m >[39;49m[39;49m
[34;49m ..                      : hic2 ( n )  nl [39;49m[33;40m"[39;49m[34;49mhic2 : start " ps nl s n @ p n @ s ct0 s n @ s ct1 n @ s ct2 s n @ p  nl "hic2 : done " ps nl  ;  .. [39;49m[32;49m
0x7fbdaad615e0    48b8151383aabd7f0000    mov rax, 0x7fbdaa831315    	[32;49m< string : '[39;49m[39;49mhic2 : start [39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fbdaad615ea    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad615ee    498906                  mov [r14], rax                                         [39;49m
[34;49m ..      : hic2 ( n )  nl "hic2 : start " [39;49m[33;40mps[39;49m[34;49m nl s n @ p n @ s ct0 s n @ s ct1 n @ s ct2 s n @ p  nl "hic2 : done " ps nl  ;  .. [39;49m[32;49m
0x7fbdaad615f1    49b97d63d5aabd7f0000    mov r9, 0x7fbdaad5637d                                 [39;49m[32;49m
0x7fbdaad615fb    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fbdaad5637d[32;49m >[39;49m[39;49m
[34;49m ..   : hic2 ( n )  nl "hic2 : start " ps [39;49m[33;40mnl[39;49m[34;49m s n @ p n @ s ct0 s n @ s ct1 n @ s ct2 s n @ p  nl "hic2 : done " ps nl  ;  .. [39;49m[32;49m
0x7fbdaad615fe    49b8e0903e1ebd550000    mov r8, 0x55bd1e3e90e0                                 [39;49m[32;49m
0x7fbdaad61608    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaad61612    49ffd1                  call r9                    	< Io.[34;49mnewline[39;49m : 0x000055bd1e3e90e0[32;49m >[39;49m[39;49m
[34;49m   : hic2 ( n )  nl "hic2 : start " ps nl [39;49m[33;40ms[39;49m[34;49m n @ p n @ s ct0 s n @ s ct1 n @ s ct2 s n @ p  nl "hic2 : done " ps nl  ;  .. [39;49m[32;49m
0x7fbdaad61615    49b8e0363c1ebd550000    mov r8, 0x55bd1e3c36e0                                 [39;49m[32;49m
0x7fbdaad6161f    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaad61629    49ffd1                  call r9                    	< Debug.[34;49mstack[39;49m : 0x000055bd1e3c36e0[32;49m >[39;49m[39;49m
[34;49m : hic2 ( n )  nl "hic2 : start " ps nl s [39;49m[33;40mn[39;49m[34;49m @ p n @ s ct0 s n @ s ct1 n @ s ct2 s n @ p  nl "hic2 : done " ps nl  ;  .. [39;49m[32;49m
0x7fbdaad6162c    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad61630    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad61634    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ( n )  nl "hic2 : start " ps nl s n @ [39;49m[33;40mp[39;49m[34;49m n @ s ct0 s n @ s ct1 n @ s ct2 s n @ p  nl "hic2 : done " ps nl  ; [39;49m[32;49m
0x7fbdaad61637    49b94464d5aabd7f0000    mov r9, 0x7fbdaad56444                                 [39;49m[32;49m
0x7fbdaad61641    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fbdaad56444[32;49m >[39;49m[39;49m
[34;49m .. n )  nl "hic2 : start " ps nl s n @ p [39;49m[33;40mn[39;49m[34;49m @ s ct0 s n @ s ct1 n @ s ct2 s n @ p  nl "hic2 : done " ps nl  ; [39;49m[32;49m
0x7fbdaad61644    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad61648    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad6164c    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  nl "hic2 : start " ps nl s n @ p n @ [39;49m[33;40ms[39;49m[34;49m ct0 s n @ s ct1 n @ s ct2 s n @ p  nl "hic2 : done " ps nl  ; [39;49m[32;49m
0x7fbdaad6164f    49b8e0363c1ebd550000    mov r8, 0x55bd1e3c36e0                                 [39;49m[32;49m
0x7fbdaad61659    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaad61663    49ffd1                  call r9                    	< Debug.[34;49mstack[39;49m : 0x000055bd1e3c36e0[32;49m >[39;49m[39;49m
[34;49m .. l "hic2 : start " ps nl s n @ p n @ s [39;49m[33;40mct0[39;49m[34;49m s n @ s ct1 n @ s ct2 s n @ p  nl "hic2 : done " ps nl  ; [39;49m[32;49m
0x7fbdaad61666    49b9ce11d6aabd7f0000    mov r9, 0x7fbdaad611ce                                 [39;49m[32;49m
0x7fbdaad61670    49ffd1                  call r9                    	< Control.[34;49mct0[39;49m : 0x00007fbdaad611ce[32;49m >[39;49m[39;49m
[34;49m .. ic2 : start " ps nl s n @ p n @ s ct0 [39;49m[33;40ms[39;49m[34;49m n @ s ct1 n @ s ct2 s n @ p  nl "hic2 : done " ps nl  ; [39;49m[32;49m
0x7fbdaad61673    49b8e0363c1ebd550000    mov r8, 0x55bd1e3c36e0                                 [39;49m[32;49m
0x7fbdaad6167d    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaad61687    49ffd1                  call r9                    	< Debug.[34;49mstack[39;49m : 0x000055bd1e3c36e0[32;49m >[39;49m[39;49m
[34;49m .. 2 : start " ps nl s n @ p n @ s ct0 s [39;49m[33;40mn[39;49m[34;49m @ s ct1 n @ s ct2 s n @ p  nl "hic2 : done " ps nl  ; [39;49m[32;49m
0x7fbdaad6168a    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad6168e    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad61692    498906                  mov [r14], rax                                         [39;49m
[34;49m .. start " ps nl s n @ p n @ s ct0 s n @ [39;49m[33;40ms[39;49m[34;49m ct1 n @ s ct2 s n @ p  nl "hic2 : done " ps nl  ; [39;49m[32;49m
0x7fbdaad61695    49b8e0363c1ebd550000    mov r8, 0x55bd1e3c36e0                                 [39;49m[32;49m
0x7fbdaad6169f    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaad616a9    49ffd1                  call r9                    	< Debug.[34;49mstack[39;49m : 0x000055bd1e3c36e0[32;49m >[39;49m[39;49m
[34;49m .. art " ps nl s n @ p n @ s ct0 s n @ s [39;49m[33;40mct1[39;49m[34;49m n @ s ct2 s n @ p  nl "hic2 : done " ps nl  ; [39;49m[32;49m
0x7fbdaad616ac    49b96d13d6aabd7f0000    mov r9, 0x7fbdaad6136d                                 [39;49m[32;49m
0x7fbdaad616b6    49ffd1                  call r9                    	< Control.[34;49mct1[39;49m : 0x00007fbdaad6136d[32;49m >[39;49m[39;49m
[34;49m .. " ps nl s n @ p n @ s ct0 s n @ s ct1 [39;49m[33;40mn[39;49m[34;49m @ s ct2 s n @ p  nl "hic2 : done " ps nl  ; [39;49m[32;49m
0x7fbdaad616b9    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad616bd    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad616c1    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  nl s n @ p n @ s ct0 s n @ s ct1 n @ [39;49m[33;40ms[39;49m[34;49m ct2 s n @ p  nl "hic2 : done " ps nl  ; [39;49m[32;49m
0x7fbdaad616c4    49b8e0363c1ebd550000    mov r8, 0x55bd1e3c36e0                                 [39;49m[32;49m
0x7fbdaad616ce    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaad616d8    49ffd1                  call r9                    	< Debug.[34;49mstack[39;49m : 0x000055bd1e3c36e0[32;49m >[39;49m[39;49m
[34;49m .. l s n @ p n @ s ct0 s n @ s ct1 n @ s [39;49m[33;40mct2[39;49m[34;49m s n @ p  nl "hic2 : done " ps nl  ; [39;49m[32;49m
0x7fbdaad616db    49b9f314d6aabd7f0000    mov r9, 0x7fbdaad614f3                                 [39;49m[32;49m
0x7fbdaad616e5    49ffd1                  call r9                    	< Control.[34;49mct2[39;49m : 0x00007fbdaad614f3[32;49m >[39;49m[39;49m
[34;49m .. n @ p n @ s ct0 s n @ s ct1 n @ s ct2 [39;49m[33;40ms[39;49m[34;49m n @ p  nl "hic2 : done " ps nl  ; [39;49m[32;49m
0x7fbdaad616e8    49b8e0363c1ebd550000    mov r8, 0x55bd1e3c36e0                                 [39;49m[32;49m
0x7fbdaad616f2    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaad616fc    49ffd1                  call r9                    	< Debug.[34;49mstack[39;49m : 0x000055bd1e3c36e0[32;49m >[39;49m[39;49m
[34;49m .. @ p n @ s ct0 s n @ s ct1 n @ s ct2 s [39;49m[33;40mn[39;49m[34;49m @ p  nl "hic2 : done " ps nl  ; [39;49m[32;49m
0x7fbdaad616ff    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad61703    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad61707    498906                  mov [r14], rax                                         [39;49m
[34;49m .. n @ s ct0 s n @ s ct1 n @ s ct2 s n @ [39;49m[33;40mp[39;49m[34;49m  nl "hic2 : done " ps nl  ; [39;49m[32;49m
0x7fbdaad6170a    49b94464d5aabd7f0000    mov r9, 0x7fbdaad56444                                 [39;49m[32;49m
0x7fbdaad61714    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fbdaad56444[32;49m >[39;49m[39;49m
[34;49m ..  s ct0 s n @ s ct1 n @ s ct2 s n @ p  [39;49m[33;40mnl[39;49m[34;49m "hic2 : done " ps nl  ; [39;49m[32;49m
0x7fbdaad61717    49b8e0903e1ebd550000    mov r8, 0x55bd1e3e90e0                                 [39;49m[32;49m
0x7fbdaad61721    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaad6172b    49ffd1                  call r9                    	< Io.[34;49mnewline[39;49m : 0x000055bd1e3e90e0[32;49m >[39;49m[39;49m
[34;49m .. ct0 s n @ s ct1 n @ s ct2 s n @ p  nl [39;49m[33;40m"[39;49m[34;49mhic2 : done " ps nl  ; [39;49m[32;49m
0x7fbdaad6172e    48b8421383aabd7f0000    mov rax, 0x7fbdaa831342    	[32;49m< string : '[39;49m[39;49mhic2 : done [39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fbdaad61738    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad6173c    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  n @ s ct2 s n @ p  nl "hic2 : done " [39;49m[33;40mps[39;49m[34;49m nl  ; [39;49m[32;49m
0x7fbdaad6173f    49b97d63d5aabd7f0000    mov r9, 0x7fbdaad5637d                                 [39;49m[32;49m
0x7fbdaad61749    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fbdaad5637d[32;49m >[39;49m[39;49m
[34;49m .. @ s ct2 s n @ p  nl "hic2 : done " ps [39;49m[33;40mnl[39;49m[34;49m  ; [39;49m[32;49m
0x7fbdaad6174c    49b8e0903e1ebd550000    mov r8, 0x55bd1e3e90e0                                 [39;49m[32;49m
0x7fbdaad61756    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaad61760    49ffd1                  call r9                    	< Io.[34;49mnewline[39;49m : 0x000055bd1e3e90e0[32;49m >[39;49m[39;49m
[34;49m .. ct2 s n @ p  nl "hic2 : done " ps nl  [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fbdaad61763    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad61767    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaad6176b    4983ee08                sub r14, 0x8                                           [39;49m[32;49m
0x7fbdaad6176f    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'hic2' :: codeSize = 437
Word : 0x00007fbda9592990 :: Compiled at : 0x00007fbdaad615ba
 =============================
::> 'wdiss' was called at namespaces/test/control.csl 88.17 <::

 hic2 : start 

DataStack at : [34;49mnamespaces/test/control.csl : 89.7[39;49m :
DataStack depth =   5 : Dsp (R14) = Top = 0x00007fbdab0efa68, InitialTos = 0x00007fbdab0efa40, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fbdab0efa68 > = 0x0000000000000000	
  DataStack   [  -1 ] < 0x00007fbdab0efa60 > = 0x0000000000000003	
  DataStack   [  -2 ] < 0x00007fbdab0efa58 > = 0x0000000000000005	
  DataStack   [  -3 ] < 0x00007fbdab0efa50 > = 0x0000000000000005	
  DataStack   [  -4 ] < 0x00007fbdab0efa48 > = 0x0000000000000005	
 3
DataStack at : [34;49mnamespaces/test/control.csl : 89.7[39;49m :
DataStack depth =   6 : Dsp (R14) = Top = 0x00007fbdab0efa70, InitialTos = 0x00007fbdab0efa40, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fbdab0efa70 > = 0x0000000000000003	
  DataStack   [  -1 ] < 0x00007fbdab0efa68 > = 0x0000000000000000	
  DataStack   [  -2 ] < 0x00007fbdab0efa60 > = 0x0000000000000003	
  DataStack   [  -3 ] < 0x00007fbdab0efa58 > = 0x0000000000000005	
  DataStack   [  -4 ] < 0x00007fbdab0efa50 > = 0x0000000000000005	
  DataStack   [  -5 ] < 0x00007fbdab0efa48 > = 0x0000000000000005	

 ct0 : 
 3 1 continuing ct0 3 2 continuing ct0 3 3
 testing ct0 : goto/label 'hi' -> ct0 before goto/label works

DataStack at : [34;49mnamespaces/test/control.csl : 89.7[39;49m :
DataStack depth =  12 : Dsp (R14) = Top = 0x00007fbdab0efaa0, InitialTos = 0x00007fbdab0efa40, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fbdab0efaa0 > = 0x00007fbdab0efa78	
  DataStack   [  -1 ] < 0x00007fbdab0efa98 > = 0x0000000000000003	
  DataStack   [  -2 ] < 0x00007fbdab0efa90 > = 0x0000000000000003	
  DataStack   [  -3 ] < 0x00007fbdab0efa88 > = 0x00007fbdaa830e0d	[32;49m< string : '[39;49m[34;49mct0[39;49m[32;49m' >[39;49m
  DataStack   [  -4 ] < 0x00007fbdab0efa80 > = 0x0000000000000003	
  DataStack   [  -5 ] < 0x00007fbdab0efa78 > = 0x00007fbdab0efa68	
  DataStack   [  -6 ] < 0x00007fbdab0efa70 > = 0x0000000000000003	
  DataStack   [  -7 ] < 0x00007fbdab0efa68 > = 0x0000000000000000	
  DataStack   [  -8 ] < 0x00007fbdab0efa60 > = 0x0000000000000003	
  DataStack   [  -9 ] < 0x00007fbdab0efa58 > = 0x0000000000000005	
  DataStack   [ -10 ] < 0x00007fbdab0efa50 > = 0x0000000000000005	
  DataStack   [ -11 ] < 0x00007fbdab0efa48 > = 0x0000000000000005	
 leaving ct0 n = 3 j =  3
DataStack at : [34;49mnamespaces/test/control.csl : 89.7[39;49m :
DataStack depth =  12 : Dsp (R14) = Top = 0x00007fbdab0efaa0, InitialTos = 0x00007fbdab0efa40, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fbdab0efaa0 > = 0x00007fbdab0efa78	
  DataStack   [  -1 ] < 0x00007fbdab0efa98 > = 0x0000000000000003	
  DataStack   [  -2 ] < 0x00007fbdab0efa90 > = 0x0000000000000003	
  DataStack   [  -3 ] < 0x00007fbdab0efa88 > = 0x00007fbdaa830e0d	[32;49m< string : '[39;49m[34;49mct0[39;49m[32;49m' >[39;49m
  DataStack   [  -4 ] < 0x00007fbdab0efa80 > = 0x0000000000000003	
  DataStack   [  -5 ] < 0x00007fbdab0efa78 > = 0x00007fbdab0efa68	
  DataStack   [  -6 ] < 0x00007fbdab0efa70 > = 0x0000000000000003	
  DataStack   [  -7 ] < 0x00007fbdab0efa68 > = 0x0000000000000000	
  DataStack   [  -8 ] < 0x00007fbdab0efa60 > = 0x0000000000000003	
  DataStack   [  -9 ] < 0x00007fbdab0efa58 > = 0x0000000000000005	
  DataStack   [ -10 ] < 0x00007fbdab0efa50 > = 0x0000000000000005	
  DataStack   [ -11 ] < 0x00007fbdab0efa48 > = 0x0000000000000005	

DataStack at : [34;49mnamespaces/test/control.csl : 89.7[39;49m :
DataStack depth =   5 : Dsp (R14) = Top = 0x00007fbdab0efa68, InitialTos = 0x00007fbdab0efa40, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fbdab0efa68 > = 0x0000000000000000	
  DataStack   [  -1 ] < 0x00007fbdab0efa60 > = 0x0000000000000003	
  DataStack   [  -2 ] < 0x00007fbdab0efa58 > = 0x0000000000000005	
  DataStack   [  -3 ] < 0x00007fbdab0efa50 > = 0x0000000000000005	
  DataStack   [  -4 ] < 0x00007fbdab0efa48 > = 0x0000000000000005	

DataStack at : [34;49mnamespaces/test/control.csl : 89.7[39;49m :
DataStack depth =   6 : Dsp (R14) = Top = 0x00007fbdab0efa70, InitialTos = 0x00007fbdab0efa40, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fbdab0efa70 > = 0x0000000000000003	
  DataStack   [  -1 ] < 0x00007fbdab0efa68 > = 0x0000000000000000	
  DataStack   [  -2 ] < 0x00007fbdab0efa60 > = 0x0000000000000003	
  DataStack   [  -3 ] < 0x00007fbdab0efa58 > = 0x0000000000000005	
  DataStack   [  -4 ] < 0x00007fbdab0efa50 > = 0x0000000000000005	
  DataStack   [  -5 ] < 0x00007fbdab0efa48 > = 0x0000000000000005	

 ct1 : 
 3 1 continuing ct1 3 2 continuing ct1 3 3
 testing ct1 : goto/label1 -> ct1 after nested goto/label1 works

DataStack at : [34;49mnamespaces/test/control.csl : 89.7[39;49m :
DataStack depth =   6 : Dsp (R14) = Top = 0x00007fbdab0efa70, InitialTos = 0x00007fbdab0efa40, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fbdab0efa70 > = 0x0000000000000003	
  DataStack   [  -1 ] < 0x00007fbdab0efa68 > = 0x0000000000000000	
  DataStack   [  -2 ] < 0x00007fbdab0efa60 > = 0x0000000000000003	
  DataStack   [  -3 ] < 0x00007fbdab0efa58 > = 0x0000000000000005	
  DataStack   [  -4 ] < 0x00007fbdab0efa50 > = 0x0000000000000005	
  DataStack   [  -5 ] < 0x00007fbdab0efa48 > = 0x0000000000000005	

 ct2 : 

 testing ct2 : goto/label2 -> ct2 after goto/label2 works

DataStack at : [34;49mnamespaces/test/control.csl : 89.7[39;49m :
DataStack depth =   6 : Dsp (R14) = Top = 0x00007fbdab0efa70, InitialTos = 0x00007fbdab0efa40, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fbdab0efa70 > = 0x0000000000000003	
  DataStack   [  -1 ] < 0x00007fbdab0efa68 > = 0x0000000000000000	
  DataStack   [  -2 ] < 0x00007fbdab0efa60 > = 0x0000000000000003	
  DataStack   [  -3 ] < 0x00007fbdab0efa58 > = 0x0000000000000005	
  DataStack   [  -4 ] < 0x00007fbdab0efa50 > = 0x0000000000000005	
  DataStack   [  -5 ] < 0x00007fbdab0efa48 > = 0x0000000000000005	
 3
 hic2 : done 

 hic2 : start 

DataStack at : [34;49mnamespaces/test/control.csl : 91.7[39;49m :
DataStack depth =   5 : Dsp (R14) = Top = 0x00007fbdab0efa68, InitialTos = 0x00007fbdab0efa40, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fbdab0efa68 > = 0x0000000000000000	
  DataStack   [  -1 ] < 0x00007fbdab0efa60 > = 0x0000000000000007	
  DataStack   [  -2 ] < 0x00007fbdab0efa58 > = 0x0000000000000005	
  DataStack   [  -3 ] < 0x00007fbdab0efa50 > = 0x0000000000000005	
  DataStack   [  -4 ] < 0x00007fbdab0efa48 > = 0x0000000000000005	
 7
DataStack at : [34;49mnamespaces/test/control.csl : 91.7[39;49m :
DataStack depth =   6 : Dsp (R14) = Top = 0x00007fbdab0efa70, InitialTos = 0x00007fbdab0efa40, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fbdab0efa70 > = 0x0000000000000007	
  DataStack   [  -1 ] < 0x00007fbdab0efa68 > = 0x0000000000000000	
  DataStack   [  -2 ] < 0x00007fbdab0efa60 > = 0x0000000000000007	
  DataStack   [  -3 ] < 0x00007fbdab0efa58 > = 0x0000000000000005	
  DataStack   [  -4 ] < 0x00007fbdab0efa50 > = 0x0000000000000005	
  DataStack   [  -5 ] < 0x00007fbdab0efa48 > = 0x0000000000000005	

 ct0 : 
 7 1 continuing ct0 7 2 continuing ct0 7 3 continuing ct0 7 4 continuing ct0 7 5 continuing ct0 7 6 continuing ct0 7 7
 testing ct0 : goto/label 'hi' -> ct0 before goto/label works

DataStack at : [34;49mnamespaces/test/control.csl : 91.7[39;49m :
DataStack depth =  12 : Dsp (R14) = Top = 0x00007fbdab0efaa0, InitialTos = 0x00007fbdab0efa40, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fbdab0efaa0 > = 0x00007fbdab0efa78	
  DataStack   [  -1 ] < 0x00007fbdab0efa98 > = 0x0000000000000007	
  DataStack   [  -2 ] < 0x00007fbdab0efa90 > = 0x0000000000000007	
  DataStack   [  -3 ] < 0x00007fbdab0efa88 > = 0x00007fbdaa830e0d	[32;49m< string : '[39;49m[34;49mct0[39;49m[32;49m' >[39;49m
  DataStack   [  -4 ] < 0x00007fbdab0efa80 > = 0x0000000000000007	
  DataStack   [  -5 ] < 0x00007fbdab0efa78 > = 0x00007fbdab0efa68	
  DataStack   [  -6 ] < 0x00007fbdab0efa70 > = 0x0000000000000007	
  DataStack   [  -7 ] < 0x00007fbdab0efa68 > = 0x0000000000000000	
  DataStack   [  -8 ] < 0x00007fbdab0efa60 > = 0x0000000000000007	
  DataStack   [  -9 ] < 0x00007fbdab0efa58 > = 0x0000000000000005	
  DataStack   [ -10 ] < 0x00007fbdab0efa50 > = 0x0000000000000005	
  DataStack   [ -11 ] < 0x00007fbdab0efa48 > = 0x0000000000000005	
 leaving ct0 n = 7 j =  7
DataStack at : [34;49mnamespaces/test/control.csl : 91.7[39;49m :
DataStack depth =  12 : Dsp (R14) = Top = 0x00007fbdab0efaa0, InitialTos = 0x00007fbdab0efa40, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fbdab0efaa0 > = 0x00007fbdab0efa78	
  DataStack   [  -1 ] < 0x00007fbdab0efa98 > = 0x0000000000000007	
  DataStack   [  -2 ] < 0x00007fbdab0efa90 > = 0x0000000000000007	
  DataStack   [  -3 ] < 0x00007fbdab0efa88 > = 0x00007fbdaa830e0d	[32;49m< string : '[39;49m[34;49mct0[39;49m[32;49m' >[39;49m
  DataStack   [  -4 ] < 0x00007fbdab0efa80 > = 0x0000000000000007	
  DataStack   [  -5 ] < 0x00007fbdab0efa78 > = 0x00007fbdab0efa68	
  DataStack   [  -6 ] < 0x00007fbdab0efa70 > = 0x0000000000000007	
  DataStack   [  -7 ] < 0x00007fbdab0efa68 > = 0x0000000000000000	
  DataStack   [  -8 ] < 0x00007fbdab0efa60 > = 0x0000000000000007	
  DataStack   [  -9 ] < 0x00007fbdab0efa58 > = 0x0000000000000005	
  DataStack   [ -10 ] < 0x00007fbdab0efa50 > = 0x0000000000000005	
  DataStack   [ -11 ] < 0x00007fbdab0efa48 > = 0x0000000000000005	

DataStack at : [34;49mnamespaces/test/control.csl : 91.7[39;49m :
DataStack depth =   5 : Dsp (R14) = Top = 0x00007fbdab0efa68, InitialTos = 0x00007fbdab0efa40, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fbdab0efa68 > = 0x0000000000000000	
  DataStack   [  -1 ] < 0x00007fbdab0efa60 > = 0x0000000000000007	
  DataStack   [  -2 ] < 0x00007fbdab0efa58 > = 0x0000000000000005	
  DataStack   [  -3 ] < 0x00007fbdab0efa50 > = 0x0000000000000005	
  DataStack   [  -4 ] < 0x00007fbdab0efa48 > = 0x0000000000000005	

DataStack at : [34;49mnamespaces/test/control.csl : 91.7[39;49m :
DataStack depth =   6 : Dsp (R14) = Top = 0x00007fbdab0efa70, InitialTos = 0x00007fbdab0efa40, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fbdab0efa70 > = 0x0000000000000007	
  DataStack   [  -1 ] < 0x00007fbdab0efa68 > = 0x0000000000000000	
  DataStack   [  -2 ] < 0x00007fbdab0efa60 > = 0x0000000000000007	
  DataStack   [  -3 ] < 0x00007fbdab0efa58 > = 0x0000000000000005	
  DataStack   [  -4 ] < 0x00007fbdab0efa50 > = 0x0000000000000005	
  DataStack   [  -5 ] < 0x00007fbdab0efa48 > = 0x0000000000000005	

 ct1 : 
 7 1 continuing ct1 7 2 continuing ct1 7 3 continuing ct1 7 4 continuing ct1 7 5 continuing ct1 7 6 continuing ct1 7 7
 testing ct1 : goto/label1 -> ct1 after nested goto/label1 works

DataStack at : [34;49mnamespaces/test/control.csl : 91.7[39;49m :
DataStack depth =   6 : Dsp (R14) = Top = 0x00007fbdab0efa70, InitialTos = 0x00007fbdab0efa40, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fbdab0efa70 > = 0x0000000000000007	
  DataStack   [  -1 ] < 0x00007fbdab0efa68 > = 0x0000000000000000	
  DataStack   [  -2 ] < 0x00007fbdab0efa60 > = 0x0000000000000007	
  DataStack   [  -3 ] < 0x00007fbdab0efa58 > = 0x0000000000000005	
  DataStack   [  -4 ] < 0x00007fbdab0efa50 > = 0x0000000000000005	
  DataStack   [  -5 ] < 0x00007fbdab0efa48 > = 0x0000000000000005	

 ct2 : 

 testing ct2 : goto/label2 -> ct2 after goto/label2 works

DataStack at : [34;49mnamespaces/test/control.csl : 91.7[39;49m :
DataStack depth =   6 : Dsp (R14) = Top = 0x00007fbdab0efa70, InitialTos = 0x00007fbdab0efa40, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fbdab0efa70 > = 0x0000000000000007	
  DataStack   [  -1 ] < 0x00007fbdab0efa68 > = 0x0000000000000000	
  DataStack   [  -2 ] < 0x00007fbdab0efa60 > = 0x0000000000000007	
  DataStack   [  -3 ] < 0x00007fbdab0efa58 > = 0x0000000000000005	
  DataStack   [  -4 ] < 0x00007fbdab0efa50 > = 0x0000000000000005	
  DataStack   [  -5 ] < 0x00007fbdab0efa48 > = 0x0000000000000005	
 7
 hic2 : done 

 7
 3
 2
 '1
 1
 77
 7
 9
 9
 8

 7
 7
 3
 2
 1
 77
 3
 8
 9

 =============================
C_Syntax.[34;49mcsMatchExWithReturn[39;49m <:> csl compiled word
SourceCode for C_Syntax.[34;49mcsMatchExWithReturn[39;49m :> 
[34;49mvoid csMatchExWithReturn ( n | x rtn ) { x = 1111 ; match ( n ) { case '1 { nl ; p (1) ; rtn = x ; } case '2 { nl ; p (2) ; rtn = n ; } case '3 { nl ; p (3) ; rtn = x ; } case 3 { nl ; p (3) ; rtn = n ; } case 77 { nl ; p (77) ; rtn = n ; } case 'seven { nl ; p (7) ; rtn = n ; } case 'eight { nl ; p (8) ; rtn = n ; } case ( 'nine ) { nl ; ps ( n ) ; p (9) ; ps ( "singleQuote1" ) ; rtn = x ; } case 'nine { nl ; ps ( n ) ; p (9) ; ps ( "singleQuote2" ) ; rtn = x ; } case ( "nine" ) { nl ; ps (n) ; p (9) ; ps ( "doubleQuote" ) ; rtn = x ; } } p ( x - 103 ) ; return rtn ; } [39;49m
Source code file location of [34;49mcsMatchExWithReturn[39;49m : "namespaces/test/control.csl" : 153.20 :: we are now at : namespaces/test/control.csl : 172.24
Compiled with : optimizeOn, inlineOn, c_syntaxOn, infixOn, Jcc8 on
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xaad61c39 -- code size = 996 bytes
TypeSignature : 
 -----------------------------
Word :: C_Syntax.[34;49mcsMatchExWithReturn[39;49m : definition = 0x00007fbdaad61c39 : disassembly at namespaces/test/control.csl : 172.24 :
[34;49m ..                                  void [39;49m[33;40mcsMatchExWithReturn[39;49m[34;49m ( n | x rtn ) { x = 1111 ; match ( n ) { case '1 { nl ; p (1) ; rtn = x ; }  case .. [39;49m[32;49m
0x7fbdaad61c39    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fbdaad61c3d    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaad61c41    4981c618000000          add r14, 0x18                                          [39;49m
[34;49m .. MatchExWithReturn ( n | x rtn ) { x = [39;49m[33;40m1111[39;49m[34;49m ; match ( n ) { case '1 { nl ; p (1) ; rtn = x ; }  case '2 { nl ; p (2) ; rtn = n ; }  case '3  .. [39;49m[32;49m
0x7fbdaad61c48    48c7c057040000          mov rax, 0x457                                         [39;49m
[34;49m void csMatchExWithReturn ( n | x rtn ) { [39;49m[33;40mx[39;49m[34;49m = 1111 ; match ( n ) { case '1 { nl ; p (1) ; rtn = x ; }  case '2 { nl ; p (2) ; rtn = n ; }  case .. [39;49m[32;49m
0x7fbdaad61c4f    498d4f08                lea rcx, [r15+0x8]                                     [39;49m
[34;49m .. csMatchExWithReturn ( n | x rtn ) { x [39;49m[33;40m=[39;49m[34;49m 1111 ; match ( n ) { case '1 { nl ; p (1) ; rtn = x ; }  case '2 { nl ; p (2) ; rtn = n ; }  case ' .. [39;49m[32;49m
0x7fbdaad61c53    488901                  mov [rcx], rax                                         [39;49m
[34;49m .. rn ( n | x rtn ) { x = 1111 ; match ( [39;49m[33;40mn[39;49m[34;49m ) { case '1 { nl ; p (1) ; rtn = x ; }  case '2 { nl ; p (2) ; rtn = n ; }  case '3 { nl ; p (3) ;  .. [39;49m[32;49m
0x7fbdaad61c56    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad61c5a    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad61c5e    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  n | x rtn ) { x = 1111 ; match ( n ) [39;49m[33;40m{[39;49m[34;49m case '1 { nl ; p (1) ; rtn = x ; }  case '2 { nl ; p (2) ; rtn = n ; }  case '3 { nl ; p (3) ; rtn  .. [39;49m[32;49m
0x7fbdaad61c61    e95d030000              jmp 0x7fbdaad61fc3         	< C_Syntax.[34;49mcsMatchExWithReturn[39;49m+906[32;49m >[39;49m[39;49m
[34;49m ..  ) { x = 1111 ; match ( n ) { case '1 [39;49m[33;40m{[39;49m[34;49m nl ; p (1) ; rtn = x ; }  case '2 { nl ; p (2) ; rtn = n ; }  case '3 { nl ; p (3) ; rtn = x ; }  c .. [39;49m[32;49m
0x7fbdaad61c66    e93e000000              jmp 0x7fbdaad61ca9         	< C_Syntax.[34;49mcsMatchExWithReturn[39;49m+112[32;49m >[39;49m[39;49m
[34;49m ..  { x = 1111 ; match ( n ) { case '1 { [39;49m[33;40mnl[39;49m[34;49m ; p (1) ; rtn = x ; }  case '2 { nl ; p (2) ; rtn = n ; }  case '3 { nl ; p (3) ; rtn = x ; }  cas .. [39;49m[32;49m
0x7fbdaad61c6b    49b8e0903e1ebd550000    mov r8, 0x55bd1e3e90e0                                 [39;49m[32;49m
0x7fbdaad61c75    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaad61c7f    49ffd1                  call r9                    	< Io.[34;49mnewline[39;49m : 0x000055bd1e3e90e0[32;49m >[39;49m[39;49m
[34;49m .. 111 ; match ( n ) { case '1 { nl ; p ([39;49m[33;40m1[39;49m[34;49m) ; rtn = x ; }  case '2 { nl ; p (2) ; rtn = n ; }  case '3 { nl ; p (3) ; rtn = x ; }  case 3 { nl .. [39;49m[32;49m
0x7fbdaad61c82    48c7c001000000          mov rax, 0x1                                           [39;49m[32;49m
0x7fbdaad61c89    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad61c8d    498906                  mov [r14], rax                                         [39;49m
[34;49m .. = 1111 ; match ( n ) { case '1 { nl ; [39;49m[33;40mp[39;49m[34;49m (1) ; rtn = x ; }  case '2 { nl ; p (2) ; rtn = n ; }  case '3 { nl ; p (3) ; rtn = x ; }  case 3 { .. [39;49m[32;49m
0x7fbdaad61c90    49b9d965d5aabd7f0000    mov r9, 0x7fbdaad565d9                                 [39;49m[32;49m
0x7fbdaad61c9a    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fbdaad565d9[32;49m >[39;49m[39;49m
[34;49m ..  ( n ) { case '1 { nl ; p (1) ; rtn = [39;49m[33;40mx[39;49m[34;49m ; }  case '2 { nl ; p (2) ; rtn = n ; }  case '3 { nl ; p (3) ; rtn = x ; }  case 3 { nl ; p (3) ;  .. [39;49m[32;49m
0x7fbdaad61c9d    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m ..  match ( n ) { case '1 { nl ; p (1) ; [39;49m[33;40mrtn[39;49m[34;49m = x ; }  case '2 { nl ; p (2) ; rtn = n ; }  case '3 { nl ; p (3) ; rtn = x ; }  case 3 { nl ; p  .. [39;49m[32;49m
0x7fbdaad61ca1    498d4f10                lea rcx, [r15+0x10]                                    [39;49m
[34;49m .. ch ( n ) { case '1 { nl ; p (1) ; rtn [39;49m[33;40m=[39;49m[34;49m x ; }  case '2 { nl ; p (2) ; rtn = n ; }  case '3 { nl ; p (3) ; rtn = x ; }  case 3 { nl ; p (3)  .. [39;49m[32;49m
0x7fbdaad61ca5    488901                  mov [rcx], rax                                         [39;49m
[34;49m ..  ) { case '1 { nl ; p (1) ; rtn = x ; [39;49m[33;40m}[39;49m[34;49m  case '2 { nl ; p (2) ; rtn = n ; }  case '3 { nl ; p (3) ; rtn = x ; }  case 3 { nl ; p (3) ; rtn  .. [39;49m[32;49m
0x7fbdaad61ca8    c3                      ret                                                    [39;49m
[34;49m .. 1 { nl ; p (1) ; rtn = x ; }  case '2 [39;49m[33;40m{[39;49m[34;49m nl ; p (2) ; rtn = n ; }  case '3 { nl ; p (3) ; rtn = x ; }  case 3 { nl ; p (3) ; rtn = n ; }  ca .. [39;49m[32;49m
0x7fbdaad61ca9    e93e000000              jmp 0x7fbdaad61cec         	< C_Syntax.[34;49mcsMatchExWithReturn[39;49m+179[32;49m >[39;49m[39;49m
[34;49m .. { nl ; p (1) ; rtn = x ; }  case '2 { [39;49m[33;40mnl[39;49m[34;49m ; p (2) ; rtn = n ; }  case '3 { nl ; p (3) ; rtn = x ; }  case 3 { nl ; p (3) ; rtn = n ; }  case .. [39;49m[32;49m
0x7fbdaad61cae    49b8e0903e1ebd550000    mov r8, 0x55bd1e3e90e0                                 [39;49m[32;49m
0x7fbdaad61cb8    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaad61cc2    49ffd1                  call r9                    	< Io.[34;49mnewline[39;49m : 0x000055bd1e3e90e0[32;49m >[39;49m[39;49m
[34;49m ..  (1) ; rtn = x ; }  case '2 { nl ; p ([39;49m[33;40m2[39;49m[34;49m) ; rtn = n ; }  case '3 { nl ; p (3) ; rtn = x ; }  case 3 { nl ; p (3) ; rtn = n ; }  case 77 { nl .. [39;49m[32;49m
0x7fbdaad61cc5    48c7c002000000          mov rax, 0x2                                           [39;49m[32;49m
0x7fbdaad61ccc    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad61cd0    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ; p (1) ; rtn = x ; }  case '2 { nl ; [39;49m[33;40mp[39;49m[34;49m (2) ; rtn = n ; }  case '3 { nl ; p (3) ; rtn = x ; }  case 3 { nl ; p (3) ; rtn = n ; }  case 77 { .. [39;49m[32;49m
0x7fbdaad61cd3    49b9d965d5aabd7f0000    mov r9, 0x7fbdaad565d9                                 [39;49m[32;49m
0x7fbdaad61cdd    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fbdaad565d9[32;49m >[39;49m[39;49m
[34;49m .. = x ; }  case '2 { nl ; p (2) ; rtn = [39;49m[33;40mn[39;49m[34;49m ; }  case '3 { nl ; p (3) ; rtn = x ; }  case 3 { nl ; p (3) ; rtn = n ; }  case 77 { nl ; p (77) ; .. [39;49m[32;49m
0x7fbdaad61ce0    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. ; rtn = x ; }  case '2 { nl ; p (2) ; [39;49m[33;40mrtn[39;49m[34;49m = n ; }  case '3 { nl ; p (3) ; rtn = x ; }  case 3 { nl ; p (3) ; rtn = n ; }  case 77 { nl ; p  .. [39;49m[32;49m
0x7fbdaad61ce4    498d4f10                lea rcx, [r15+0x10]                                    [39;49m
[34;49m .. n = x ; }  case '2 { nl ; p (2) ; rtn [39;49m[33;40m=[39;49m[34;49m n ; }  case '3 { nl ; p (3) ; rtn = x ; }  case 3 { nl ; p (3) ; rtn = n ; }  case 77 { nl ; p (77) .. [39;49m[32;49m
0x7fbdaad61ce8    488901                  mov [rcx], rax                                         [39;49m
[34;49m .. ; }  case '2 { nl ; p (2) ; rtn = n ; [39;49m[33;40m}[39;49m[34;49m  case '3 { nl ; p (3) ; rtn = x ; }  case 3 { nl ; p (3) ; rtn = n ; }  case 77 { nl ; p (77) ; rtn .. [39;49m[32;49m
0x7fbdaad61ceb    c3                      ret                                                    [39;49m
[34;49m .. 2 { nl ; p (2) ; rtn = n ; }  case '3 [39;49m[33;40m{[39;49m[34;49m nl ; p (3) ; rtn = x ; }  case 3 { nl ; p (3) ; rtn = n ; }  case 77 { nl ; p (77) ; rtn = n ; }  c .. [39;49m[32;49m
0x7fbdaad61cec    e93e000000              jmp 0x7fbdaad61d2f         	< C_Syntax.[34;49mcsMatchExWithReturn[39;49m+246[32;49m >[39;49m[39;49m
[34;49m .. { nl ; p (2) ; rtn = n ; }  case '3 { [39;49m[33;40mnl[39;49m[34;49m ; p (3) ; rtn = x ; }  case 3 { nl ; p (3) ; rtn = n ; }  case 77 { nl ; p (77) ; rtn = n ; }  cas .. [39;49m[32;49m
0x7fbdaad61cf1    49b8e0903e1ebd550000    mov r8, 0x55bd1e3e90e0                                 [39;49m[32;49m
0x7fbdaad61cfb    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaad61d05    49ffd1                  call r9                    	< Io.[34;49mnewline[39;49m : 0x000055bd1e3e90e0[32;49m >[39;49m[39;49m
[34;49m ..  (2) ; rtn = n ; }  case '3 { nl ; p ([39;49m[33;40m3[39;49m[34;49m) ; rtn = x ; }  case 3 { nl ; p (3) ; rtn = n ; }  case 77 { nl ; p (77) ; rtn = n ; }  case 'seven .. [39;49m[32;49m
0x7fbdaad61d08    48c7c003000000          mov rax, 0x3                                           [39;49m[32;49m
0x7fbdaad61d0f    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad61d13    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ; p (2) ; rtn = n ; }  case '3 { nl ; [39;49m[33;40mp[39;49m[34;49m (3) ; rtn = x ; }  case 3 { nl ; p (3) ; rtn = n ; }  case 77 { nl ; p (77) ; rtn = n ; }  case 'se .. [39;49m[32;49m
0x7fbdaad61d16    49b9d965d5aabd7f0000    mov r9, 0x7fbdaad565d9                                 [39;49m[32;49m
0x7fbdaad61d20    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fbdaad565d9[32;49m >[39;49m[39;49m
[34;49m .. = n ; }  case '3 { nl ; p (3) ; rtn = [39;49m[33;40mx[39;49m[34;49m ; }  case 3 { nl ; p (3) ; rtn = n ; }  case 77 { nl ; p (77) ; rtn = n ; }  case 'seven { nl ; p ( .. [39;49m[32;49m
0x7fbdaad61d23    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m .. ; rtn = n ; }  case '3 { nl ; p (3) ; [39;49m[33;40mrtn[39;49m[34;49m = x ; }  case 3 { nl ; p (3) ; rtn = n ; }  case 77 { nl ; p (77) ; rtn = n ; }  case 'seven { nl .. [39;49m[32;49m
0x7fbdaad61d27    498d4f10                lea rcx, [r15+0x10]                                    [39;49m
[34;49m .. n = n ; }  case '3 { nl ; p (3) ; rtn [39;49m[33;40m=[39;49m[34;49m x ; }  case 3 { nl ; p (3) ; rtn = n ; }  case 77 { nl ; p (77) ; rtn = n ; }  case 'seven { nl ; p .. [39;49m[32;49m
0x7fbdaad61d2b    488901                  mov [rcx], rax                                         [39;49m
[34;49m .. ; }  case '3 { nl ; p (3) ; rtn = x ; [39;49m[33;40m}[39;49m[34;49m  case 3 { nl ; p (3) ; rtn = n ; }  case 77 { nl ; p (77) ; rtn = n ; }  case 'seven { nl ; p (7) ; .. [39;49m[32;49m
0x7fbdaad61d2e    c3                      ret                                                    [39;49m
[34;49m .. e '3 { nl ; p (3) ; rtn = x ; }  case [39;49m[33;40m3[39;49m[34;49m { nl ; p (3) ; rtn = n ; }  case 77 { nl ; p (77) ; rtn = n ; }  case 'seven { nl ; p (7) ; rtn = n .. [39;49m[32;49m
0x7fbdaad61d2f    48c7c003000000          mov rax, 0x3                                           [39;49m[32;49m
0x7fbdaad61d36    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad61d3a    498906                  mov [r14], rax                                         [39;49m
[34;49m .. '3 { nl ; p (3) ; rtn = x ; }  case 3 [39;49m[33;40m{[39;49m[34;49m nl ; p (3) ; rtn = n ; }  case 77 { nl ; p (77) ; rtn = n ; }  case 'seven { nl ; p (7) ; rtn = n ; .. [39;49m[32;49m
0x7fbdaad61d3d    e93e000000              jmp 0x7fbdaad61d80         	< C_Syntax.[34;49mcsMatchExWithReturn[39;49m+327[32;49m >[39;49m[39;49m
[34;49m ..  { nl ; p (3) ; rtn = x ; }  case 3 { [39;49m[33;40mnl[39;49m[34;49m ; p (3) ; rtn = n ; }  case 77 { nl ; p (77) ; rtn = n ; }  case 'seven { nl ; p (7) ; rtn = n ; } .. [39;49m[32;49m
0x7fbdaad61d42    49b8e0903e1ebd550000    mov r8, 0x55bd1e3e90e0                                 [39;49m[32;49m
0x7fbdaad61d4c    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaad61d56    49ffd1                  call r9                    	< Io.[34;49mnewline[39;49m : 0x000055bd1e3e90e0[32;49m >[39;49m[39;49m
[34;49m .. p (3) ; rtn = x ; }  case 3 { nl ; p ([39;49m[33;40m3[39;49m[34;49m) ; rtn = n ; }  case 77 { nl ; p (77) ; rtn = n ; }  case 'seven { nl ; p (7) ; rtn = n ; }  case ' .. [39;49m[32;49m
0x7fbdaad61d59    48c7c003000000          mov rax, 0x3                                           [39;49m[32;49m
0x7fbdaad61d60    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad61d64    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  ; p (3) ; rtn = x ; }  case 3 { nl ; [39;49m[33;40mp[39;49m[34;49m (3) ; rtn = n ; }  case 77 { nl ; p (77) ; rtn = n ; }  case 'seven { nl ; p (7) ; rtn = n ; }  cas .. [39;49m[32;49m
0x7fbdaad61d67    49b9d965d5aabd7f0000    mov r9, 0x7fbdaad565d9                                 [39;49m[32;49m
0x7fbdaad61d71    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fbdaad565d9[32;49m >[39;49m[39;49m
[34;49m ..  = x ; }  case 3 { nl ; p (3) ; rtn = [39;49m[33;40mn[39;49m[34;49m ; }  case 77 { nl ; p (77) ; rtn = n ; }  case 'seven { nl ; p (7) ; rtn = n ; }  case 'eight { nl  .. [39;49m[32;49m
0x7fbdaad61d74    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m ..  ; rtn = x ; }  case 3 { nl ; p (3) ; [39;49m[33;40mrtn[39;49m[34;49m = n ; }  case 77 { nl ; p (77) ; rtn = n ; }  case 'seven { nl ; p (7) ; rtn = n ; }  case 'eight .. [39;49m[32;49m
0x7fbdaad61d78    498d4f10                lea rcx, [r15+0x10]                                    [39;49m
[34;49m .. tn = x ; }  case 3 { nl ; p (3) ; rtn [39;49m[33;40m=[39;49m[34;49m n ; }  case 77 { nl ; p (77) ; rtn = n ; }  case 'seven { nl ; p (7) ; rtn = n ; }  case 'eight { n .. [39;49m[32;49m
0x7fbdaad61d7c    488901                  mov [rcx], rax                                         [39;49m
[34;49m ..  ; }  case 3 { nl ; p (3) ; rtn = n ; [39;49m[33;40m}[39;49m[34;49m  case 77 { nl ; p (77) ; rtn = n ; }  case 'seven { nl ; p (7) ; rtn = n ; }  case 'eight { nl ; p  .. [39;49m[32;49m
0x7fbdaad61d7f    c3                      ret                                                    [39;49m
[34;49m .. se 3 { nl ; p (3) ; rtn = n ; }  case [39;49m[33;40m77[39;49m[34;49m { nl ; p (77) ; rtn = n ; }  case 'seven { nl ; p (7) ; rtn = n ; }  case 'eight { nl ; p (8) ; rt .. [39;49m[32;49m
0x7fbdaad61d80    48c7c04d000000          mov rax, 0x4d                                          [39;49m[32;49m
0x7fbdaad61d87    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad61d8b    498906                  mov [r14], rax                                         [39;49m
[34;49m .. 3 { nl ; p (3) ; rtn = n ; }  case 77 [39;49m[33;40m{[39;49m[34;49m nl ; p (77) ; rtn = n ; }  case 'seven { nl ; p (7) ; rtn = n ; }  case 'eight { nl ; p (8) ; rtn = .. [39;49m[32;49m
0x7fbdaad61d8e    e93e000000              jmp 0x7fbdaad61dd1         	< C_Syntax.[34;49mcsMatchExWithReturn[39;49m+408[32;49m >[39;49m[39;49m
[34;49m .. { nl ; p (3) ; rtn = n ; }  case 77 { [39;49m[33;40mnl[39;49m[34;49m ; p (77) ; rtn = n ; }  case 'seven { nl ; p (7) ; rtn = n ; }  case 'eight { nl ; p (8) ; rtn = n .. [39;49m[32;49m
0x7fbdaad61d93    49b8e0903e1ebd550000    mov r8, 0x55bd1e3e90e0                                 [39;49m[32;49m
0x7fbdaad61d9d    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaad61da7    49ffd1                  call r9                    	< Io.[34;49mnewline[39;49m : 0x000055bd1e3e90e0[32;49m >[39;49m[39;49m
[34;49m ..  (3) ; rtn = n ; }  case 77 { nl ; p ([39;49m[33;40m77[39;49m[34;49m) ; rtn = n ; }  case 'seven { nl ; p (7) ; rtn = n ; }  case 'eight { nl ; p (8) ; rtn = n ; }  ca .. [39;49m[32;49m
0x7fbdaad61daa    48c7c04d000000          mov rax, 0x4d                                          [39;49m[32;49m
0x7fbdaad61db1    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad61db5    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ; p (3) ; rtn = n ; }  case 77 { nl ; [39;49m[33;40mp[39;49m[34;49m (77) ; rtn = n ; }  case 'seven { nl ; p (7) ; rtn = n ; }  case 'eight { nl ; p (8) ; rtn = n ; }  .. [39;49m[32;49m
0x7fbdaad61db8    49b9d965d5aabd7f0000    mov r9, 0x7fbdaad565d9                                 [39;49m[32;49m
0x7fbdaad61dc2    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fbdaad565d9[32;49m >[39;49m[39;49m
[34;49m ..  n ; }  case 77 { nl ; p (77) ; rtn = [39;49m[33;40mn[39;49m[34;49m ; }  case 'seven { nl ; p (7) ; rtn = n ; }  case 'eight { nl ; p (8) ; rtn = n ; }  case ( 'nine ) .. [39;49m[32;49m
0x7fbdaad61dc5    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m ..  rtn = n ; }  case 77 { nl ; p (77) ; [39;49m[33;40mrtn[39;49m[34;49m = n ; }  case 'seven { nl ; p (7) ; rtn = n ; }  case 'eight { nl ; p (8) ; rtn = n ; }  case ( ' .. [39;49m[32;49m
0x7fbdaad61dc9    498d4f10                lea rcx, [r15+0x10]                                    [39;49m
[34;49m ..  = n ; }  case 77 { nl ; p (77) ; rtn [39;49m[33;40m=[39;49m[34;49m n ; }  case 'seven { nl ; p (7) ; rtn = n ; }  case 'eight { nl ; p (8) ; rtn = n ; }  case ( 'nine .. [39;49m[32;49m
0x7fbdaad61dcd    488901                  mov [rcx], rax                                         [39;49m
[34;49m ..  }  case 77 { nl ; p (77) ; rtn = n ; [39;49m[33;40m}[39;49m[34;49m  case 'seven { nl ; p (7) ; rtn = n ; }  case 'eight { nl ; p (8) ; rtn = n ; }  case ( 'nine ) { n .. [39;49m[32;49m
0x7fbdaad61dd0    c3                      ret                                                    [39;49m
[34;49m .. l ; p (77) ; rtn = n ; }  case 'seven [39;49m[33;40m{[39;49m[34;49m nl ; p (7) ; rtn = n ; }  case 'eight { nl ; p (8) ; rtn = n ; }  case ( 'nine ) { nl ; ps ( n ) ;  .. [39;49m[32;49m
0x7fbdaad61dd1    e93e000000              jmp 0x7fbdaad61e14         	< C_Syntax.[34;49mcsMatchExWithReturn[39;49m+475[32;49m >[39;49m[39;49m
[34;49m .. ; p (77) ; rtn = n ; }  case 'seven { [39;49m[33;40mnl[39;49m[34;49m ; p (7) ; rtn = n ; }  case 'eight { nl ; p (8) ; rtn = n ; }  case ( 'nine ) { nl ; ps ( n ) ; p  .. [39;49m[32;49m
0x7fbdaad61dd6    49b8e0903e1ebd550000    mov r8, 0x55bd1e3e90e0                                 [39;49m[32;49m
0x7fbdaad61de0    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaad61dea    49ffd1                  call r9                    	< Io.[34;49mnewline[39;49m : 0x000055bd1e3e90e0[32;49m >[39;49m[39;49m
[34;49m ..  ; rtn = n ; }  case 'seven { nl ; p ([39;49m[33;40m7[39;49m[34;49m) ; rtn = n ; }  case 'eight { nl ; p (8) ; rtn = n ; }  case ( 'nine ) { nl ; ps ( n ) ; p (9) ; ps .. [39;49m[32;49m
0x7fbdaad61ded    48c7c007000000          mov rax, 0x7                                           [39;49m[32;49m
0x7fbdaad61df4    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad61df8    498906                  mov [r14], rax                                         [39;49m
[34;49m .. 77) ; rtn = n ; }  case 'seven { nl ; [39;49m[33;40mp[39;49m[34;49m (7) ; rtn = n ; }  case 'eight { nl ; p (8) ; rtn = n ; }  case ( 'nine ) { nl ; ps ( n ) ; p (9) ; .. [39;49m[32;49m
0x7fbdaad61dfb    49b9d965d5aabd7f0000    mov r9, 0x7fbdaad565d9                                 [39;49m[32;49m
0x7fbdaad61e05    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fbdaad565d9[32;49m >[39;49m[39;49m
[34;49m .. ; }  case 'seven { nl ; p (7) ; rtn = [39;49m[33;40mn[39;49m[34;49m ; }  case 'eight { nl ; p (8) ; rtn = n ; }  case ( 'nine ) { nl ; ps ( n ) ; p (9) ; ps ( "singleQ .. [39;49m[32;49m
0x7fbdaad61e08    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. n = n ; }  case 'seven { nl ; p (7) ; [39;49m[33;40mrtn[39;49m[34;49m = n ; }  case 'eight { nl ; p (8) ; rtn = n ; }  case ( 'nine ) { nl ; ps ( n ) ; p (9) ; ps ( "s .. [39;49m[32;49m
0x7fbdaad61e0c    498d4f10                lea rcx, [r15+0x10]                                    [39;49m
[34;49m .. n ; }  case 'seven { nl ; p (7) ; rtn [39;49m[33;40m=[39;49m[34;49m n ; }  case 'eight { nl ; p (8) ; rtn = n ; }  case ( 'nine ) { nl ; ps ( n ) ; p (9) ; ps ( "singl .. [39;49m[32;49m
0x7fbdaad61e10    488901                  mov [rcx], rax                                         [39;49m
[34;49m ..  case 'seven { nl ; p (7) ; rtn = n ; [39;49m[33;40m}[39;49m[34;49m  case 'eight { nl ; p (8) ; rtn = n ; }  case ( 'nine ) { nl ; ps ( n ) ; p (9) ; ps ( "singleQuote .. [39;49m[32;49m
0x7fbdaad61e13    c3                      ret                                                    [39;49m
[34;49m .. nl ; p (7) ; rtn = n ; }  case 'eight [39;49m[33;40m{[39;49m[34;49m nl ; p (8) ; rtn = n ; }  case ( 'nine ) { nl ; ps ( n ) ; p (9) ; ps ( "singleQuote1" ) ; rtn = x  .. [39;49m[32;49m
0x7fbdaad61e14    e93e000000              jmp 0x7fbdaad61e57         	< C_Syntax.[34;49mcsMatchExWithReturn[39;49m+542[32;49m >[39;49m[39;49m
[34;49m ..  ; p (7) ; rtn = n ; }  case 'eight { [39;49m[33;40mnl[39;49m[34;49m ; p (8) ; rtn = n ; }  case ( 'nine ) { nl ; ps ( n ) ; p (9) ; ps ( "singleQuote1" ) ; rtn = x ;  .. [39;49m[32;49m
0x7fbdaad61e19    49b8e0903e1ebd550000    mov r8, 0x55bd1e3e90e0                                 [39;49m[32;49m
0x7fbdaad61e23    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaad61e2d    49ffd1                  call r9                    	< Io.[34;49mnewline[39;49m : 0x000055bd1e3e90e0[32;49m >[39;49m[39;49m
[34;49m ..  ; rtn = n ; }  case 'eight { nl ; p ([39;49m[33;40m8[39;49m[34;49m) ; rtn = n ; }  case ( 'nine ) { nl ; ps ( n ) ; p (9) ; ps ( "singleQuote1" ) ; rtn = x ; }  case  .. [39;49m[32;49m
0x7fbdaad61e30    48c7c008000000          mov rax, 0x8                                           [39;49m[32;49m
0x7fbdaad61e37    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad61e3b    498906                  mov [r14], rax                                         [39;49m
[34;49m .. (7) ; rtn = n ; }  case 'eight { nl ; [39;49m[33;40mp[39;49m[34;49m (8) ; rtn = n ; }  case ( 'nine ) { nl ; ps ( n ) ; p (9) ; ps ( "singleQuote1" ) ; rtn = x ; }  ca .. [39;49m[32;49m
0x7fbdaad61e3e    49b9d965d5aabd7f0000    mov r9, 0x7fbdaad565d9                                 [39;49m[32;49m
0x7fbdaad61e48    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fbdaad565d9[32;49m >[39;49m[39;49m
[34;49m .. ; }  case 'eight { nl ; p (8) ; rtn = [39;49m[33;40mn[39;49m[34;49m ; }  case ( 'nine ) { nl ; ps ( n ) ; p (9) ; ps ( "singleQuote1" ) ; rtn = x ; }  case 'nine { nl  .. [39;49m[32;49m
0x7fbdaad61e4b    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. n = n ; }  case 'eight { nl ; p (8) ; [39;49m[33;40mrtn[39;49m[34;49m = n ; }  case ( 'nine ) { nl ; ps ( n ) ; p (9) ; ps ( "singleQuote1" ) ; rtn = x ; }  case 'nine .. [39;49m[32;49m
0x7fbdaad61e4f    498d4f10                lea rcx, [r15+0x10]                                    [39;49m
[34;49m .. n ; }  case 'eight { nl ; p (8) ; rtn [39;49m[33;40m=[39;49m[34;49m n ; }  case ( 'nine ) { nl ; ps ( n ) ; p (9) ; ps ( "singleQuote1" ) ; rtn = x ; }  case 'nine { n .. [39;49m[32;49m
0x7fbdaad61e53    488901                  mov [rcx], rax                                         [39;49m
[34;49m ..  case 'eight { nl ; p (8) ; rtn = n ; [39;49m[33;40m}[39;49m[34;49m  case ( 'nine ) { nl ; ps ( n ) ; p (9) ; ps ( "singleQuote1" ) ; rtn = x ; }  case 'nine { nl ; ps .. [39;49m[32;49m
0x7fbdaad61e56    c3                      ret                                                    [39;49m
[34;49m .. ; p (8) ; rtn = n ; }  case ( 'nine ) [39;49m[33;40m{[39;49m[34;49m nl ; ps ( n ) ; p (9) ; ps ( "singleQuote1" ) ; rtn = x ; }  case 'nine { nl ; ps ( n ) ; p (9) ; p .. [39;49m[32;49m
0x7fbdaad61e57    e974000000              jmp 0x7fbdaad61ed0         	< C_Syntax.[34;49mcsMatchExWithReturn[39;49m+663[32;49m >[39;49m[39;49m
[34;49m .. p (8) ; rtn = n ; }  case ( 'nine ) { [39;49m[33;40mnl[39;49m[34;49m ; ps ( n ) ; p (9) ; ps ( "singleQuote1" ) ; rtn = x ; }  case 'nine { nl ; ps ( n ) ; p (9) ; ps  .. [39;49m[32;49m
0x7fbdaad61e5c    49b8e0903e1ebd550000    mov r8, 0x55bd1e3e90e0                                 [39;49m[32;49m
0x7fbdaad61e66    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaad61e70    49ffd1                  call r9                    	< Io.[34;49mnewline[39;49m : 0x000055bd1e3e90e0[32;49m >[39;49m[39;49m
[34;49m .. n = n ; }  case ( 'nine ) { nl ; ps ( [39;49m[33;40mn[39;49m[34;49m ) ; p (9) ; ps ( "singleQuote1" ) ; rtn = x ; }  case 'nine { nl ; ps ( n ) ; p (9) ; ps ( "singleQ .. [39;49m[32;49m
0x7fbdaad61e73    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad61e77    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad61e7b    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  ; rtn = n ; }  case ( 'nine ) { nl ; [39;49m[33;40mps[39;49m[34;49m ( n ) ; p (9) ; ps ( "singleQuote1" ) ; rtn = x ; }  case 'nine { nl ; ps ( n ) ; p (9) ; ps ( "si .. [39;49m[32;49m
0x7fbdaad61e7e    49b97d63d5aabd7f0000    mov r9, 0x7fbdaad5637d                                 [39;49m[32;49m
0x7fbdaad61e88    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fbdaad5637d[32;49m >[39;49m[39;49m
[34;49m ..   case ( 'nine ) { nl ; ps ( n ) ; p ([39;49m[33;40m9[39;49m[34;49m) ; ps ( "singleQuote1" ) ; rtn = x ; }  case 'nine { nl ; ps ( n ) ; p (9) ; ps ( "singleQuote2" )  .. [39;49m[32;49m
0x7fbdaad61e8b    48c7c009000000          mov rax, 0x9                                           [39;49m[32;49m
0x7fbdaad61e92    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad61e96    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ; }  case ( 'nine ) { nl ; ps ( n ) ; [39;49m[33;40mp[39;49m[34;49m (9) ; ps ( "singleQuote1" ) ; rtn = x ; }  case 'nine { nl ; ps ( n ) ; p (9) ; ps ( "singleQuote2" .. [39;49m[32;49m
0x7fbdaad61e99    49b9d965d5aabd7f0000    mov r9, 0x7fbdaad565d9                                 [39;49m[32;49m
0x7fbdaad61ea3    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fbdaad565d9[32;49m >[39;49m[39;49m
[34;49m .. nine ) { nl ; ps ( n ) ; p (9) ; ps ( [39;49m[33;40m"[39;49m[34;49msingleQuote1" ) ; rtn = x ; }  case 'nine { nl ; ps ( n ) ; p (9) ; ps ( "singleQuote2" ) ; rtn = x  .. [39;49m[32;49m
0x7fbdaad61ea6    48b84b1783aabd7f0000    mov rax, 0x7fbdaa83174b    	[32;49m< string : '[39;49m[39;49msingleQuote1[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fbdaad61eb0    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad61eb4    498906                  mov [r14], rax                                         [39;49m
[34;49m .. e ( 'nine ) { nl ; ps ( n ) ; p (9) ; [39;49m[33;40mps[39;49m[34;49m ( "singleQuote1" ) ; rtn = x ; }  case 'nine { nl ; ps ( n ) ; p (9) ; ps ( "singleQuote2" ) ; rtn .. [39;49m[32;49m
0x7fbdaad61eb7    49b97d63d5aabd7f0000    mov r9, 0x7fbdaad5637d                                 [39;49m[32;49m
0x7fbdaad61ec1    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fbdaad5637d[32;49m >[39;49m[39;49m
[34;49m .. p (9) ; ps ( "singleQuote1" ) ; rtn = [39;49m[33;40mx[39;49m[34;49m ; }  case 'nine { nl ; ps ( n ) ; p (9) ; ps ( "singleQuote2" ) ; rtn = x ; }  case ( "nine" ) { nl .. [39;49m[32;49m
0x7fbdaad61ec4    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m .. n ) ; p (9) ; ps ( "singleQuote1" ) ; [39;49m[33;40mrtn[39;49m[34;49m = x ; }  case 'nine { nl ; ps ( n ) ; p (9) ; ps ( "singleQuote2" ) ; rtn = x ; }  case ( "nine"  .. [39;49m[32;49m
0x7fbdaad61ec8    498d4f10                lea rcx, [r15+0x10]                                    [39;49m
[34;49m .. ; p (9) ; ps ( "singleQuote1" ) ; rtn [39;49m[33;40m=[39;49m[34;49m x ; }  case 'nine { nl ; ps ( n ) ; p (9) ; ps ( "singleQuote2" ) ; rtn = x ; }  case ( "nine" ) {  .. [39;49m[32;49m
0x7fbdaad61ecc    488901                  mov [rcx], rax                                         [39;49m
[34;49m .. ) ; ps ( "singleQuote1" ) ; rtn = x ; [39;49m[33;40m}[39;49m[34;49m  case 'nine { nl ; ps ( n ) ; p (9) ; ps ( "singleQuote2" ) ; rtn = x ; }  case ( "nine" ) { nl ; p .. [39;49m[32;49m
0x7fbdaad61ecf    c3                      ret                                                    [39;49m
[34;49m .. leQuote1" ) ; rtn = x ; }  case 'nine [39;49m[33;40m{[39;49m[34;49m nl ; ps ( n ) ; p (9) ; ps ( "singleQuote2" ) ; rtn = x ; }  case ( "nine" ) { nl ; ps (n) ; p (9)  .. [39;49m[32;49m
0x7fbdaad61ed0    e974000000              jmp 0x7fbdaad61f49         	< C_Syntax.[34;49mcsMatchExWithReturn[39;49m+784[32;49m >[39;49m[39;49m
[34;49m .. Quote1" ) ; rtn = x ; }  case 'nine { [39;49m[33;40mnl[39;49m[34;49m ; ps ( n ) ; p (9) ; ps ( "singleQuote2" ) ; rtn = x ; }  case ( "nine" ) { nl ; ps (n) ; p (9) ;  .. [39;49m[32;49m
0x7fbdaad61ed5    49b8e0903e1ebd550000    mov r8, 0x55bd1e3e90e0                                 [39;49m[32;49m
0x7fbdaad61edf    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaad61ee9    49ffd1                  call r9                    	< Io.[34;49mnewline[39;49m : 0x000055bd1e3e90e0[32;49m >[39;49m[39;49m
[34;49m .. ; rtn = x ; }  case 'nine { nl ; ps ( [39;49m[33;40mn[39;49m[34;49m ) ; p (9) ; ps ( "singleQuote2" ) ; rtn = x ; }  case ( "nine" ) { nl ; ps (n) ; p (9) ; ps ( "doub .. [39;49m[32;49m
0x7fbdaad61eec    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad61ef0    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad61ef4    498906                  mov [r14], rax                                         [39;49m
[34;49m .. 1" ) ; rtn = x ; }  case 'nine { nl ; [39;49m[33;40mps[39;49m[34;49m ( n ) ; p (9) ; ps ( "singleQuote2" ) ; rtn = x ; }  case ( "nine" ) { nl ; ps (n) ; p (9) ; ps (  .. [39;49m[32;49m
0x7fbdaad61ef7    49b97d63d5aabd7f0000    mov r9, 0x7fbdaad5637d                                 [39;49m[32;49m
0x7fbdaad61f01    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fbdaad5637d[32;49m >[39;49m[39;49m
[34;49m ..  ; }  case 'nine { nl ; ps ( n ) ; p ([39;49m[33;40m9[39;49m[34;49m) ; ps ( "singleQuote2" ) ; rtn = x ; }  case ( "nine" ) { nl ; ps (n) ; p (9) ; ps ( "doubleQuote"  .. [39;49m[32;49m
0x7fbdaad61f04    48c7c009000000          mov rax, 0x9                                           [39;49m[32;49m
0x7fbdaad61f0b    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad61f0f    498906                  mov [r14], rax                                         [39;49m
[34;49m .. = x ; }  case 'nine { nl ; ps ( n ) ; [39;49m[33;40mp[39;49m[34;49m (9) ; ps ( "singleQuote2" ) ; rtn = x ; }  case ( "nine" ) { nl ; ps (n) ; p (9) ; ps ( "doubleQuot .. [39;49m[32;49m
0x7fbdaad61f12    49b9d965d5aabd7f0000    mov r9, 0x7fbdaad565d9                                 [39;49m[32;49m
0x7fbdaad61f1c    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fbdaad565d9[32;49m >[39;49m[39;49m
[34;49m ..  'nine { nl ; ps ( n ) ; p (9) ; ps ( [39;49m[33;40m"[39;49m[34;49msingleQuote2" ) ; rtn = x ; }  case ( "nine" ) { nl ; ps (n) ; p (9) ; ps ( "doubleQuote" ) ; rtn =  .. [39;49m[32;49m
0x7fbdaad61f1f    48b87d1783aabd7f0000    mov rax, 0x7fbdaa83177d    	[32;49m< string : '[39;49m[39;49msingleQuote2[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fbdaad61f29    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad61f2d    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  case 'nine { nl ; ps ( n ) ; p (9) ; [39;49m[33;40mps[39;49m[34;49m ( "singleQuote2" ) ; rtn = x ; }  case ( "nine" ) { nl ; ps (n) ; p (9) ; ps ( "doubleQuote" ) ; r .. [39;49m[32;49m
0x7fbdaad61f30    49b97d63d5aabd7f0000    mov r9, 0x7fbdaad5637d                                 [39;49m[32;49m
0x7fbdaad61f3a    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fbdaad5637d[32;49m >[39;49m[39;49m
[34;49m .. p (9) ; ps ( "singleQuote2" ) ; rtn = [39;49m[33;40mx[39;49m[34;49m ; }  case ( "nine" ) { nl ; ps (n) ; p (9) ; ps ( "doubleQuote" ) ; rtn = x ; }  }  p ( x - 103 ) ; .. [39;49m[32;49m
0x7fbdaad61f3d    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m .. n ) ; p (9) ; ps ( "singleQuote2" ) ; [39;49m[33;40mrtn[39;49m[34;49m = x ; }  case ( "nine" ) { nl ; ps (n) ; p (9) ; ps ( "doubleQuote" ) ; rtn = x ; }  }  p ( x - 1 .. [39;49m[32;49m
0x7fbdaad61f41    498d4f10                lea rcx, [r15+0x10]                                    [39;49m
[34;49m .. ; p (9) ; ps ( "singleQuote2" ) ; rtn [39;49m[33;40m=[39;49m[34;49m x ; }  case ( "nine" ) { nl ; ps (n) ; p (9) ; ps ( "doubleQuote" ) ; rtn = x ; }  }  p ( x - 103 ) .. [39;49m[32;49m
0x7fbdaad61f45    488901                  mov [rcx], rax                                         [39;49m
[34;49m .. ) ; ps ( "singleQuote2" ) ; rtn = x ; [39;49m[33;40m}[39;49m[34;49m  case ( "nine" ) { nl ; ps (n) ; p (9) ; ps ( "doubleQuote" ) ; rtn = x ; }  }  p ( x - 103 ) ; ret .. [39;49m[32;49m
0x7fbdaad61f48    c3                      ret                                                    [39;49m
[34;49m .. te2" ) ; rtn = x ; }  case ( "nine" ) [39;49m[33;40m{[39;49m[34;49m nl ; ps (n) ; p (9) ; ps ( "doubleQuote" ) ; rtn = x ; }  }  p ( x - 103 ) ; return rtn ; }  .. [39;49m[32;49m
0x7fbdaad61f49    e974000000              jmp 0x7fbdaad61fc2         	< C_Syntax.[34;49mcsMatchExWithReturn[39;49m+905[32;49m >[39;49m[39;49m
[34;49m .. 2" ) ; rtn = x ; }  case ( "nine" ) { [39;49m[33;40mnl[39;49m[34;49m ; ps (n) ; p (9) ; ps ( "doubleQuote" ) ; rtn = x ; }  }  p ( x - 103 ) ; return rtn ; }  .. [39;49m[32;49m
0x7fbdaad61f4e    49b8e0903e1ebd550000    mov r8, 0x55bd1e3e90e0                                 [39;49m[32;49m
0x7fbdaad61f58    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaad61f62    49ffd1                  call r9                    	< Io.[34;49mnewline[39;49m : 0x000055bd1e3e90e0[32;49m >[39;49m[39;49m
[34;49m .. n = x ; }  case ( "nine" ) { nl ; ps ([39;49m[33;40mn[39;49m[34;49m) ; p (9) ; ps ( "doubleQuote" ) ; rtn = x ; }  }  p ( x - 103 ) ; return rtn ; }  .. [39;49m[32;49m
0x7fbdaad61f65    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad61f69    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad61f6d    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ; rtn = x ; }  case ( "nine" ) { nl ; [39;49m[33;40mps[39;49m[34;49m (n) ; p (9) ; ps ( "doubleQuote" ) ; rtn = x ; }  }  p ( x - 103 ) ; return rtn ; }  .. [39;49m[32;49m
0x7fbdaad61f70    49b97d63d5aabd7f0000    mov r9, 0x7fbdaad5637d                                 [39;49m[32;49m
0x7fbdaad61f7a    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fbdaad5637d[32;49m >[39;49m[39;49m
[34;49m .. }  case ( "nine" ) { nl ; ps (n) ; p ([39;49m[33;40m9[39;49m[34;49m) ; ps ( "doubleQuote" ) ; rtn = x ; }  }  p ( x - 103 ) ; return rtn ; }  .. [39;49m[32;49m
0x7fbdaad61f7d    48c7c009000000          mov rax, 0x9                                           [39;49m[32;49m
0x7fbdaad61f84    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad61f88    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  ; }  case ( "nine" ) { nl ; ps (n) ; [39;49m[33;40mp[39;49m[34;49m (9) ; ps ( "doubleQuote" ) ; rtn = x ; }  }  p ( x - 103 ) ; return rtn ; }  .. [39;49m[32;49m
0x7fbdaad61f8b    49b9d965d5aabd7f0000    mov r9, 0x7fbdaad565d9                                 [39;49m[32;49m
0x7fbdaad61f95    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fbdaad565d9[32;49m >[39;49m[39;49m
[34;49m .. "nine" ) { nl ; ps (n) ; p (9) ; ps ( [39;49m[33;40m"[39;49m[34;49mdoubleQuote" ) ; rtn = x ; }  }  p ( x - 103 ) ; return rtn ; }  .. [39;49m[32;49m
0x7fbdaad61f98    48b8bc1783aabd7f0000    mov rax, 0x7fbdaa8317bc    	[32;49m< string : '[39;49m[39;49mdoubleQuote[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fbdaad61fa2    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad61fa6    498906                  mov [r14], rax                                         [39;49m
[34;49m .. se ( "nine" ) { nl ; ps (n) ; p (9) ; [39;49m[33;40mps[39;49m[34;49m ( "doubleQuote" ) ; rtn = x ; }  }  p ( x - 103 ) ; return rtn ; }  .. [39;49m[32;49m
0x7fbdaad61fa9    49b97d63d5aabd7f0000    mov r9, 0x7fbdaad5637d                                 [39;49m[32;49m
0x7fbdaad61fb3    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fbdaad5637d[32;49m >[39;49m[39;49m
[34;49m ..  p (9) ; ps ( "doubleQuote" ) ; rtn = [39;49m[33;40mx[39;49m[34;49m ; }  }  p ( x - 103 ) ; return rtn ; }  .. [39;49m[32;49m
0x7fbdaad61fb6    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m ..  (n) ; p (9) ; ps ( "doubleQuote" ) ; [39;49m[33;40mrtn[39;49m[34;49m = x ; }  }  p ( x - 103 ) ; return rtn ; }  .. [39;49m[32;49m
0x7fbdaad61fba    498d4f10                lea rcx, [r15+0x10]                                    [39;49m
[34;49m ..  ; p (9) ; ps ( "doubleQuote" ) ; rtn [39;49m[33;40m=[39;49m[34;49m x ; }  }  p ( x - 103 ) ; return rtn ; }  .. [39;49m[32;49m
0x7fbdaad61fbe    488901                  mov [rcx], rax                                         [39;49m
[34;49m .. 9) ; ps ( "doubleQuote" ) ; rtn = x ; [39;49m[33;40m}[39;49m[34;49m  }  p ( x - 103 ) ; return rtn ; }  .. [39;49m[32;49m
0x7fbdaad61fc1    c3                      ret                                                    [39;49m
[34;49m .. ; ps ( "doubleQuote" ) ; rtn = x ; }  [39;49m[33;40m}[39;49m[34;49m  p ( x - 103 ) ; return rtn ; }  .. [39;49m[32;49m
0x7fbdaad61fc2    c3                      ret                                                    [39;49m[32;49m
0x7fbdaad61fc3    48b8a8535aa9bd7f0000    mov rax, 0x7fbda95a53a8                                [39;49m[32;49m
0x7fbdaad61fcd    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad61fd1    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaad61fd4    49b8c04b3a1ebd550000    mov r8, 0x55bd1e3a4bc0                                 [39;49m[32;49m
0x7fbdaad61fde    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaad61fe8    49ffd1                  call r9                    	< C compiler code >        [39;49m
[34;49m .. "doubleQuote" ) ; rtn = x ; }  }  p ( [39;49m[33;40mx[39;49m[34;49m - 103 ) ; return rtn ; }  .. [39;49m[32;49m
0x7fbdaad61feb    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m .. bleQuote" ) ; rtn = x ; }  }  p ( x - [39;49m[33;40m103[39;49m[34;49m ) ; return rtn ; }  .. [39;49m[32;49m
0x7fbdaad61fef    48c7c167000000          mov rcx, 0x67                                          [39;49m
[34;49m .. oubleQuote" ) ; rtn = x ; }  }  p ( x [39;49m[33;40m-[39;49m[34;49m 103 ) ; return rtn ; }  .. [39;49m[32;49m
0x7fbdaad61ff6    482bc1                  sub rax, rcx                                           [39;49m[32;49m
0x7fbdaad61ff9    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad61ffd    498906                  mov [r14], rax                                         [39;49m
[34;49m .. s ( "doubleQuote" ) ; rtn = x ; }  }  [39;49m[33;40mp[39;49m[34;49m ( x - 103 ) ; return rtn ; }  .. [39;49m[32;49m
0x7fbdaad62000    49b9d965d5aabd7f0000    mov r9, 0x7fbdaad565d9                                 [39;49m[32;49m
0x7fbdaad6200a    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fbdaad565d9[32;49m >[39;49m[39;49m[32;49m
0x7fbdaad6200d    498b4710                mov rax, [r15+0x10]                                    [39;49m
[34;49m ..  ; }  }  p ( x - 103 ) ; return rtn ; [39;49m[33;40m}[39;49m[34;49m  .. [39;49m[32;49m
0x7fbdaad62011    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad62015    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m
[34;49m .. tn = x ; }  }  p ( x - 103 ) ; return [39;49m[33;40mrtn[39;49m[34;49m ; }  .. [39;49m[32;49m
0x7fbdaad62019    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaad6201c    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'csMatchExWithReturn' :: codeSize = 995
Word : 0x00007fbda95a2ff8 :: Compiled at : 0x00007fbdaad61c39
 =============================
::> 'wdiss' was called at namespaces/test/control.csl 172.24 <::

 1 1008 1111
 7 1008 seven
 7 1008 seven
 3 1008 1111
 2 1008 2
 77 1008 77
 3 1008 3
 8 1008 eight
 nine 9 singleQuote1 1008 1111
 nine 9 singleQuote1 1008 1111
 1008 1111
 2 2 2 
last line should show : 2 2 2[34;49m 
starting lisp.csl
[39;49m[39;49m 7
[39;49m ( 1 2 ( 3 4 ) 5 6 ( 7 ( 8 ( 9 ) 10 11 ) ( ( ( ( 12 ) ) 121 ) ) 13 ( 14 ) ) 15 ( 16 ( 17 ( 18 ) ) ) )
[39;49m ( 1 2 ( 3 4 ) 5 6 ( 7 ( 8 ( 9 ) 10 11 ) ( ) ( ( ( ( 12 ) ) 121 ) 122 ) 13 ( 14 ( 141 ) ) 15 ( 16 ( 161 ( 162 ( 163 ) ) ) ( 17 ( 18 ) ) ) ) )
[39;49m ( 1 2 ( 3 4 ) 5 6 ( 7 ( 8 9 10 11 ) 12 13 14 ) 15 ( 16 ( 17 18 ) ) )
[39;49m 7
[39;49m 777
[39;49m f

 =============================
LispDefines.[34;49mf[39;49m <:> variable[34;49mf[39;49m <:> lambdaCalculus compiled word
SourceCode for LispDefines.[34;49mf[39;49m :> 
[34;49m( define f ( lambda x ( + x 1 2 ) ) )[39;49m
Source code file location of [34;49mf[39;49m : "namespaces/test/lisp.csl" : 28.36 :: we are now at : namespaces/test/lisp.csl : 29.18
Compiled with : optimizeOn, inlineOn, Jcc8 on
Debug Source Code on : BigNum off : Lisp on : Word Source Code on
starting at address : 0xaad62167 -- code size = 58 bytes
 -----------------------------
Word :: LispDefines.[34;49mf[39;49m : definition = 0x00007fbdaad62167 : disassembly at namespaces/test/lisp.csl : 29.18 :[32;49m
0x7fbdaad62167    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fbdaad6216b    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaad6216f    4981c608000000          add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad62176    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad6217a    48c7c101000000          mov rcx, 0x1                                           [39;49m[32;49m
0x7fbdaad62181    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fbdaad62184    48c7c102000000          mov rcx, 0x2                                           [39;49m[32;49m
0x7fbdaad6218b    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fbdaad6218e    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad62192    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaad62195    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad62199    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaad6219d    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaad621a0    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'f' :: codeSize = 57
Word : 0x00007fbdaaa72808 :: Compiled at : 0x00007fbdaad62167
 =============================
::> 'wdiss' was called at namespaces/test/lisp.csl 29.18 <::
[39;49m 7
[39;49m 7
[39;49m 7
[39;49m 777
[39;49m 7
[39;49m 77
[39;49m 77
[39;49m 77
[39;49m 77
[39;49m 77
[39;49m 77
[39;49m 77
[39;49m x
[39;49m 7
[39;49m 7
[39;49m f1
[39;49m 7
[39;49m 7
[39;49m 7
[39;49m f4
[39;49m zs1[39;49m abc[39;49m
[39;49m zs1
[39;49m f3
[39;49m 13
[39;49m f4
[39;49m 77
[39;49m zs1
[39;49m 7
[39;49m 7
[39;49m 7
[39;49m 7
[39;49m 7
[39;49m 11
 
 cond :: should show 7 7 7 11
[39;49m g
[39;49m h
[39;49m 7
[39;49m 7
[39;49m 7
[39;49m 7
[39;49m 7
[39;49m 7
[39;49m 7
[39;49m h1
[39;49m 7
[39;49m 7
[39;49m 7
[39;49m 7
[39;49m 7
[39;49m 7
[39;49m 7
[39;49m 7
[39;49m 77
[39;49m 77
[39;49m pd
[39;49m 7
[34;49m 
starting BigNum
[39;49m[39;49m g
[39;49m h
[39;49m1.0000000000000000
[39;49m-1.0000000000000000
[39;49m-2.0000000000000000
[39;49m0.3333358764648438
[39;49m3.0000000000000000
[39;49m7.0000000000000000
[39;49m7.0000000000000000
[34;49m 
ending BigNum
[39;49m[39;49m a
[39;49m b
[39;49m ( 3 4 1 2 )
[39;49m ( a b 1 2 )
[39;49m x
[39;49m ( x ( 3 4 1 2 ) ( 3 4 1 2 ) 3 4 1 2 )
[39;49m ( x x x x )
[39;49m ( x x x 3 4 1 2 )
[39;49m y
[39;49m ( y ( x ( 3 4 1 2 ) ( 3 4 1 2 ) 3 4 1 2 ) ( x ( 3 4 1 2 ) ( 3 4 1 2 ) 3 4 1 2 ) x ( 3 4 1 2 ) ( 3 4 1 2 ) 3 4 1 2 )
[39;49m ( y y y y )
[39;49m ( y y y x ( 3 4 1 2 ) ( 3 4 1 2 ) 3 4 1 2 )
[34;49m 
lisp test
[39;49m namespaces/test/lisp.csl 149.30[39;49m a
[39;49m b
[39;49m y
[39;49m x
[39;49m y
[39;49m ( x x x 1 2 3 4 5 6 7 8 9 y )
[39;49m ( 1 2 ( 3 4 ) 5 6 ( 7 ( 8 ( 9 ) 10 11 ) ( ( ( ( 12 ) ) 121 ) ) 13 ( 14 ) ) 15 ( 16 ( 17 ( 18 ) ) ) )
[39;49m ( 1 2 ( 3 4 ) 5 6 ( 7 ( 8 9 10 11 ) 12 13 14 ) 15 ( 16 ( 17 18 ) ) )
[39;49m 7
[39;49m 7
[39;49m x
[39;49m ( 1 2 3 x )
[39;49m ( 1 2 3 ( 7 8 9 47 ) )
[39;49m ( 1 2 3 ( 7 8 9 47 ) )
[39;49m ( 1 2 3 7 8 9 47 )
[39;49m 77
[39;49m q1x
[39;49m q2
[39;49m 7
[39;49m q3
[39;49m q4
[39;49m q2
[39;49m 77
[39;49m 7
[39;49m yfac
[39;49m 3628800
[39;49m 5040
[39;49m fibc

 =============================
LispDefines.[34;49mfibc[39;49m <:> variable[34;49mfibc[39;49m <:> lambdaCalculus compiled word
SourceCode for LispDefines.[34;49mfibc[39;49m :> 
[34;49m(define fibc (lambda ( n ) (ifElse (< n 2) n (+ (fibc (- n 1)) (fibc (- n 2))))))[39;49m
Source code file location of [34;49mfibc[39;49m : "namespaces/test/lisp.csl" : 182.80 :: we are now at : namespaces/test/lisp.csl : 183.21
Compiled with : optimizeOn, inlineOn, Jcc8 on
Debug Source Code on : BigNum off : Lisp on : Word Source Code on
starting at address : 0xaad62358 -- code size = 126 bytes
 -----------------------------
Word :: LispDefines.[34;49mfibc[39;49m : definition = 0x00007fbdaad62358 : disassembly at namespaces/test/lisp.csl : 183.21 :[32;49m
0x7fbdaad62358    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fbdaad6235c    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaad62360    4981c608000000          add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad62367    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad6236b    4883f802                cmp rax, 0x2                                           [39;49m[32;49m
0x7fbdaad6236f    7d10                    jge 0xaad62381                                         [39;49m[32;49m
0x7fbdaad62371    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad62375    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad62379    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaad6237c    e949000000              jmp 0x7fbdaad623ca         	< LispDefines.[34;49mfibc[39;49m+114[32;49m >[39;49m[39;49m[32;49m
0x7fbdaad62381    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad62385    48c7c101000000          mov rcx, 0x1                                           [39;49m[32;49m
0x7fbdaad6238c    482bc1                  sub rax, rcx                                           [39;49m[32;49m
0x7fbdaad6238f    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad62393    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaad62396    e8bdffffff              call 0x7fbdaad62358        	< LispDefines.[34;49mfibc[39;49m : 0x00007fbdaad62358[32;49m >[39;49m[39;49m[32;49m
0x7fbdaad6239b    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad6239f    48c7c102000000          mov rcx, 0x2                                           [39;49m[32;49m
0x7fbdaad623a6    482bc1                  sub rax, rcx                                           [39;49m[32;49m
0x7fbdaad623a9    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad623ad    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaad623b0    e8a3ffffff              call 0x7fbdaad62358        	< LispDefines.[34;49mfibc[39;49m : 0x00007fbdaad62358[32;49m >[39;49m[39;49m[32;49m
0x7fbdaad623b5    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fbdaad623b8    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fbdaad623bc    4983ee10                sub r14, 0x10                                          [39;49m[32;49m
0x7fbdaad623c0    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fbdaad623c3    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad623c7    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaad623ca    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad623ce    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaad623d2    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaad623d5    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'fibc' :: codeSize = 125
Word : 0x00007fbda9322848 :: Compiled at : 0x00007fbdaad62358
 =============================
::> 'wdiss' was called at namespaces/test/lisp.csl 183.21 <::
 
fibc 20 = [39;49m 6765
 11 7[39;49m

DataStack at : [34;49mnamespaces/test/lisp.csl : 189.80[39;49m :
DataStack depth =   3 : Dsp (R14) = Top = 0x00007fbdab0efa58, InitialTos = 0x00007fbdab0efa40, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fbdab0efa58 > = 0x0000000000000005	
  DataStack   [  -1 ] < 0x00007fbdab0efa50 > = 0x0000000000000005	
  DataStack   [  -2 ] < 0x00007fbdab0efa48 > = 0x0000000000000005	
 7[39;49m
 11[39;49m
 11 7
 =============================
Root.[34;49mhioo[39;49m <:> csl compiled word
SourceCode for Root.[34;49mhioo[39;49m :> 
[34;49m( :: : hioo 3 4 + dup p ; : hio 5 6 + dup p ; hio hioo )[39;49m
Source code file location of [34;49mhioo[39;49m : "namespaces/test/lisp.csl" : 189.55 :: we are now at : namespaces/test/lisp.csl : 191.21
Compiled with : optimizeOn, inlineOn, Jcc8 on
Debug Source Code on : BigNum off : Lisp on : Word Source Code on
starting at address : 0xaad623ea -- code size = 32 bytes
TypeSignature : 
 -----------------------------
Word :: Root.[34;49mhioo[39;49m : definition = 0x00007fbdaad623ea : disassembly at namespaces/test/lisp.csl : 191.21 :
[34;49m ..                           ( :: : hioo [39;49m[33;40m3[39;49m[34;49m 4 + dup p ; : hio 5 6 + dup p ; hio hioo ) .. [39;49m[32;49m
0x7fbdaad623ea    48c7c007000000          mov rax, 0x7                                           [39;49m[32;49m
0x7fbdaad623f1    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fbdaad623f5    498906                  mov [r14], rax                                         [39;49m
[34;49m ..                     ( :: : hioo 3 4 + [39;49m[33;40mdup[39;49m[34;49m p ; : hio 5 6 + dup p ; hio hioo ) .. [39;49m[32;49m
0x7fbdaad623f8    498946f8                mov [r14-0x8], rax                                     [39;49m
[34;49m ..                 ( :: : hioo 3 4 + dup [39;49m[33;40mp[39;49m[34;49m ; : hio 5 6 + dup p ; hio hioo ) .. [39;49m[32;49m
0x7fbdaad623fc    49b94464d5aabd7f0000    mov r9, 0x7fbdaad56444                                 [39;49m
[34;49m ..                       ( :: : hioo 3 4 [39;49m[33;40m+[39;49m[34;49m dup p ; : hio 5 6 + dup p ; hio hioo ) .. [39;49m[32;49m
0x7fbdaad62406    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fbdaad56444[32;49m >[39;49m[39;49m[32;49m
0x7fbdaad62409    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'hioo' :: codeSize = 31
Word : 0x00007fbda95bf2d8 :: Compiled at : 0x00007fbdaad623ea
 =============================
::> 'wdiss' was called at namespaces/test/lisp.csl 191.21 <::

 =============================
Root.[34;49mhio[39;49m <:> csl compiled word
SourceCode for Root.[34;49mhio[39;49m :> 
[34;49m( :: : hioo 3 4 + dup p ; : hio 5 6 + dup p ; hio hioo )[39;49m
Source code file location of [34;49mhio[39;49m : "namespaces/test/lisp.csl" : 189.55 :: we are now at : namespaces/test/lisp.csl : 192.20
Compiled with : optimizeOn, inlineOn, Jcc8 on
Debug Source Code on : BigNum off : Lisp on : Word Source Code on
starting at address : 0xaad6241e -- code size = 32 bytes
TypeSignature : 
 -----------------------------
Word :: Root.[34;49mhio[39;49m : definition = 0x00007fbdaad6241e : disassembly at namespaces/test/lisp.csl : 192.20 :
[34;49m ..       ( :: : hioo 3 4 + dup p ; : hio [39;49m[33;40m5[39;49m[34;49m 6 + dup p ; hio hioo ) .. [39;49m[32;49m
0x7fbdaad6241e    48c7c00b000000          mov rax, 0xb                                           [39;49m[32;49m
0x7fbdaad62425    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fbdaad62429    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ( :: : hioo 3 4 + dup p ; : hio 5 6 + [39;49m[33;40mdup[39;49m[34;49m p ; hio hioo ) .. [39;49m[32;49m
0x7fbdaad6242c    498946f8                mov [r14-0x8], rax                                     [39;49m
[34;49m( :: : hioo 3 4 + dup p ; : hio 5 6 + dup [39;49m[33;40mp[39;49m[34;49m ; hio hioo ) .. [39;49m[32;49m
0x7fbdaad62430    49b94464d5aabd7f0000    mov r9, 0x7fbdaad56444                                 [39;49m
[34;49m ..   ( :: : hioo 3 4 + dup p ; : hio 5 6 [39;49m[33;40m+[39;49m[34;49m dup p ; hio hioo ) .. [39;49m[32;49m
0x7fbdaad6243a    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fbdaad56444[32;49m >[39;49m[39;49m[32;49m
0x7fbdaad6243d    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'hio' :: codeSize = 31
Word : 0x00007fbda95bf9b8 :: Compiled at : 0x00007fbdaad6241e
 =============================
::> 'wdiss' was called at namespaces/test/lisp.csl 192.20 <::

 =============================
C.[34;49mbexp43[39;49m <:> csl compiled word
SourceCode for C.[34;49mbexp43[39;49m :> 
[34;49m: bexp43 ( n ) { n @ 1 > } { n @ n @ -- bexp43 * } { 1 } ifElse ; [39;49m
Source code file location of [34;49mbexp43[39;49m : "namespaces/test/lisp.csl" : 195.2 :: we are now at : namespaces/test/lisp.csl : 196.19
Compiled with : optimizeOn, inlineOn, Jcc8 on
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xaad62443 -- code size = 108 bytes
TypeSignature : 
 -----------------------------
Word :: C.[34;49mbexp43[39;49m : definition = 0x00007fbdaad62443 : disassembly at namespaces/test/lisp.csl : 196.19 :
[34;49m ..                                     : [39;49m[33;40mbexp43[39;49m[34;49m ( n ) { n @ 1 > } { n @ n @ -- bexp43 * } { 1 } ifElse ;  .. [39;49m[32;49m
0x7fbdaad62443    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fbdaad62447    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaad6244b    4981c608000000          add r14, 0x8                                           [39;49m
[34;49m ..                      : bexp43 ( n ) { [39;49m[33;40mn[39;49m[34;49m @ 1 > } { n @ n @ -- bexp43 * } { 1 } ifElse ;  .. [39;49m[32;49m
0x7fbdaad62452    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m ..                : bexp43 ( n ) { n @ 1 [39;49m[33;40m>[39;49m[34;49m } { n @ n @ -- bexp43 * } { 1 } ifElse ;  .. [39;49m[32;49m
0x7fbdaad62456    4883f801                cmp rax, 0x1                                           [39;49m[32;49m
0x7fbdaad6245a    7e39                    jle 0xaad62495                                         [39;49m
[34;49m ..          : bexp43 ( n ) { n @ 1 > } { [39;49m[33;40mn[39;49m[34;49m @ n @ -- bexp43 * } { 1 } ifElse ;  .. [39;49m[32;49m
0x7fbdaad6245c    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad62460    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad62464    498906                  mov [r14], rax                                         [39;49m
[34;49m ..      : bexp43 ( n ) { n @ 1 > } { n @ [39;49m[33;40mn[39;49m[34;49m @ -- bexp43 * } { 1 } ifElse ;  .. [39;49m[32;49m
0x7fbdaad62467    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m ..  : bexp43 ( n ) { n @ 1 > } { n @ n @ [39;49m[33;40m--[39;49m[34;49m bexp43 * } { 1 } ifElse ;  .. [39;49m[32;49m
0x7fbdaad6246b    48ffc8                  dec rax                                                [39;49m
[34;49m ..            : bexp43 ( n ) { n @ 1 > } [39;49m[33;40m{[39;49m[34;49m n @ n @ -- bexp43 * } { 1 } ifElse ;  .. [39;49m[32;49m
0x7fbdaad6246e    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad62472    498906                  mov [r14], rax                                         [39;49m
[34;49m  : bexp43 ( n ) { n @ 1 > } { n @ n @ -- [39;49m[33;40mbexp43[39;49m[34;49m * } { 1 } ifElse ;  .. [39;49m[32;49m
0x7fbdaad62475    e8c9ffffff              call 0x7fbdaad62443        	< C.[34;49mbexp43[39;49m : 0x00007fbdaad62443[32;49m >[39;49m[39;49m[32;49m
0x7fbdaad6247a    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fbdaad6247d    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fbdaad62481    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m .. ( n ) { n @ 1 > } { n @ n @ -- bexp43 [39;49m[33;40m*[39;49m[34;49m } { 1 } ifElse ; [39;49m[32;49m
0x7fbdaad62485    480fafc1                imul rax, rcx                                          [39;49m[32;49m
0x7fbdaad62489    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad6248d    498906                  mov [r14], rax                                         [39;49m
[34;49m .. n ) { n @ 1 > } { n @ n @ -- bexp43 * [39;49m[33;40m}[39;49m[34;49m { 1 } ifElse ; [39;49m[32;49m
0x7fbdaad62490    e90e000000              jmp 0x7fbdaad624a3         	< C.[34;49mbexp43[39;49m+96[32;49m >[39;49m[39;49m
[34;49m .. { n @ 1 > } { n @ n @ -- bexp43 * } { [39;49m[33;40m1[39;49m[34;49m } ifElse ; [39;49m[32;49m
0x7fbdaad62495    48c7c001000000          mov rax, 0x1                                           [39;49m[32;49m
0x7fbdaad6249c    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad624a0    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  { n @ n @ -- bexp43 * } { 1 } ifElse [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fbdaad624a3    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad624a7    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaad624ab    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaad624ae    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'bexp43' :: codeSize = 107
Word : 0x00007fbda95c0098 :: Compiled at : 0x00007fbdaad62443
 =============================
::> 'wdiss' was called at namespaces/test/lisp.csl 196.19 <::
 C : bexp43_assert  : ok

 5040[39;49m

 =============================
C.[34;49mbexp44[39;49m <:> csl compiled word
SourceCode for C.[34;49mbexp44[39;49m :> 
[34;49m( :: C : bexp44 ( n ) { n @ 1 > } { n @ n @ -- bexp44 * } { 1 } ifElse ; )[39;49m
Source code file location of [34;49mbexp44[39;49m : "namespaces/test/lisp.csl" : 201.73 :: we are now at : namespaces/test/lisp.csl : 202.23
Compiled with : optimizeOn, inlineOn, Jcc8 on
Debug Source Code on : BigNum off : Lisp on : Word Source Code on
starting at address : 0xaad624b4 -- code size = 108 bytes
TypeSignature : 
 -----------------------------
Word :: C.[34;49mbexp44[39;49m : definition = 0x00007fbdaad624b4 : disassembly at namespaces/test/lisp.csl : 202.23 :
[34;49m ..  n @ -- bexp44 * } { 1 } ifElse ; )[39;49m[33;40m([39;49m[34;49m[39;49m[32;49m
0x7fbdaad624b4    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fbdaad624b8    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaad624bc    4981c608000000          add r14, 0x8                                           [39;49m
[34;49m ..               ( :: C : bexp44 ( n ) { [39;49m[33;40mn[39;49m[34;49m @ 1 > } { n @ n @ -- bexp44 * } { 1 } ifElse ; ) .. [39;49m[32;49m
0x7fbdaad624c3    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m ..         ( :: C : bexp44 ( n ) { n @ 1 [39;49m[33;40m>[39;49m[34;49m } { n @ n @ -- bexp44 * } { 1 } ifElse ; ) .. [39;49m[32;49m
0x7fbdaad624c7    4883f801                cmp rax, 0x1                                           [39;49m[32;49m
0x7fbdaad624cb    7e39                    jle 0xaad62506                                         [39;49m
[34;49m ..   ( :: C : bexp44 ( n ) { n @ 1 > } { [39;49m[33;40mn[39;49m[34;49m @ n @ -- bexp44 * } { 1 } ifElse ; ) .. [39;49m[32;49m
0x7fbdaad624cd    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad624d1    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad624d5    498906                  mov [r14], rax                                         [39;49m
[34;49m  ( :: C : bexp44 ( n ) { n @ 1 > } { n @ [39;49m[33;40mn[39;49m[34;49m @ -- bexp44 * } { 1 } ifElse ; ) .. [39;49m[32;49m
0x7fbdaad624d8    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m ..  : bexp44 ( n ) { n @ 1 > } { n @ n @ [39;49m[33;40m--[39;49m[34;49m bexp44 * } { 1 } ifElse ; )[39;49m[32;49m
0x7fbdaad624dc    48ffc8                  dec rax                                                [39;49m
[34;49m ..     ( :: C : bexp44 ( n ) { n @ 1 > } [39;49m[33;40m{[39;49m[34;49m n @ n @ -- bexp44 * } { 1 } ifElse ; ) .. [39;49m[32;49m
0x7fbdaad624df    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad624e3    498906                  mov [r14], rax                                         [39;49m
[34;49m .. bexp44 ( n ) { n @ 1 > } { n @ n @ -- [39;49m[33;40mbexp44[39;49m[34;49m * } { 1 } ifElse ; )[39;49m[32;49m
0x7fbdaad624e6    e8c9ffffff              call 0x7fbdaad624b4        	< C.[34;49mbexp44[39;49m : 0x00007fbdaad624b4[32;49m >[39;49m[39;49m[32;49m
0x7fbdaad624eb    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fbdaad624ee    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fbdaad624f2    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m .. ( n ) { n @ 1 > } { n @ n @ -- bexp44 [39;49m[33;40m*[39;49m[34;49m } { 1 } ifElse ; )[39;49m[32;49m
0x7fbdaad624f6    480fafc1                imul rax, rcx                                          [39;49m[32;49m
0x7fbdaad624fa    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad624fe    498906                  mov [r14], rax                                         [39;49m
[34;49m .. n ) { n @ 1 > } { n @ n @ -- bexp44 * [39;49m[33;40m}[39;49m[34;49m { 1 } ifElse ; )[39;49m[32;49m
0x7fbdaad62501    e90e000000              jmp 0x7fbdaad62514         	< C.[34;49mbexp44[39;49m+96[32;49m >[39;49m[39;49m
[34;49m .. { n @ 1 > } { n @ n @ -- bexp44 * } { [39;49m[33;40m1[39;49m[34;49m } ifElse ; )[39;49m[32;49m
0x7fbdaad62506    48c7c001000000          mov rax, 0x1                                           [39;49m[32;49m
0x7fbdaad6250d    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad62511    498906                  mov [r14], rax                                         [39;49m
[34;49m .. @ 1 > } { n @ n @ -- bexp44 * } { 1 } [39;49m[33;40mifElse[39;49m[34;49m ; )[39;49m[32;49m
0x7fbdaad62514    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad62518    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaad6251c    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaad6251f    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'bexp44' :: codeSize = 107
Word : 0x00007fbda95c21e8 :: Compiled at : 0x00007fbdaad624b4
 =============================
::> 'wdiss' was called at namespaces/test/lisp.csl 202.23 <::
 C : bexp43_assert  : ok

 5040
DataStack at : [34;49mnamespaces/test/lisp.csl : 205.2[39;49m :
DataStack depth =   3 : Dsp (R14) = Top = 0x00007fbdab0efa58, InitialTos = 0x00007fbdab0efa40, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fbdab0efa58 > = 0x0000000000000005	
  DataStack   [  -1 ] < 0x00007fbdab0efa50 > = 0x0000000000000005	
  DataStack   [  -2 ] < 0x00007fbdab0efa48 > = 0x0000000000000005	
 goedel3 ::  
 goedel3 ::  140452586274342 2 goedel3_assert1  : ok

 0 7 goedel3_assert2  : ok

 goedel3_assert4  : ok

 140452590449557 7 goedel3_assert5  : ok

 9 
goedel3 output should read (after ignoring _asserts) : 
'junk' 2 'junk' 7 'junk' 7 9
 =============================
Root.[34;49mgoedel6[39;49m <:> csl compiled word
SourceCode for Root.[34;49mgoedel6[39;49m :> 
[34;49m( :: : goedel6 (| n ) "\n goedel6 :: " ps n 9 = { (| n ) n @ p n 2 = n @ dup p 2 "goedel6_1_assert" assert { (| n ) n @ p n 3 = n @ 4 + dup p 7 "goedel6_2_assert" assert } ix n @ 6 + 8 "goedel6_3_assert" assert } ix { (| n ) n @ p n 3 = n dup @ 4 + = n @ dup p 7 "goedel6_4_assert" assert } ix n @ dup p return tos ; ".I" typeSignature ' goedel6 find wdiss 9 goedel6 "goedel6_0_assert" assert "\ngoedel6 output should read (after ignoring _asserts) : \n 'junk' 2 'junk' 7 'junk' 7 9" ps )[39;49m
Source code file location of [34;49mgoedel6[39;49m : "namespaces/test/lisp.csl" : 252.0 :: we are now at : namespaces/test/lisp.csl : 252.1
Compiled with : optimizeOn, inlineOn, Jcc8 on
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xaad62762 -- code size = 568 bytes
TypeSignature : -> Integer 
 -----------------------------
Word :: Root.[34;49mgoedel6[39;49m : definition = 0x00007fbdaad62762 : disassembly at namespaces/test/lisp.csl : 252.1 :
[34;49m ..  assert { (| n ) n @ p n 3 = n @ 4 + d[39;49m[33;40m([39;49m[34;49mp p 7 "goedel6_2_assert" assert } ix n @ 6 + 8 "goedel6_3_assert" assert  } ix { (| n )  n @ p  n 3  .. [39;49m[32;49m
0x7fbdaad62762    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fbdaad62766    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaad6276a    4981c628000000          add r14, 0x28                                          [39;49m
[34;49m ..               ( ::  : goedel6 (| n )  [39;49m[33;40m"\n goedel6 :: "[39;49m[34;49m ps  n 9 = {  (| n ) n @ p n 2 = n @ dup p 2 "goedel6_1_assert" assert { (| n ) n @ p .. [39;49m[32;49m
0x7fbdaad62771    48b83b4883aabd7f0000    mov rax, 0x7fbdaa83483b    	[32;49m< string : '[39;49m[39;49m\n goedel6 :: [39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fbdaad6277b    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad6277f    498906                  mov [r14], rax                                         [39;49m
[34;49m ( ::  : goedel6 (| n )  "\n goedel6 :: " [39;49m[33;40mps[39;49m[34;49m  n 9 = {  (| n ) n @ p n 2 = n @ dup p 2 "goedel6_1_assert" assert { (| n ) n @ p n 3 = n @ 4 + du .. [39;49m[32;49m
0x7fbdaad62782    49b97d63d5aabd7f0000    mov r9, 0x7fbdaad5637d                                 [39;49m[32;49m
0x7fbdaad6278c    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fbdaad5637d[32;49m >[39;49m[39;49m
[34;49m ..  goedel6 (| n )  "\n goedel6 :: " ps  [39;49m[33;40mn[39;49m[34;49m 9 = {  (| n ) n @ p n 2 = n @ dup p 2 "goedel6_1_assert" assert { (| n ) n @ p n 3 = n @ 4 + dup p  .. [39;49m[32;49m
0x7fbdaad6278f    498d4708                lea rax, [r15+0x8]                                     [39;49m
[34;49m .. oedel6 (| n )  "\n goedel6 :: " ps  n [39;49m[33;40m9[39;49m[34;49m = {  (| n ) n @ p n 2 = n @ dup p 2 "goedel6_1_assert" assert { (| n ) n @ p n 3 = n @ 4 + dup p 7  .. [39;49m[32;49m
0x7fbdaad62793    48c7c109000000          mov rcx, 0x9                                           [39;49m
[34;49m .. del6 (| n )  "\n goedel6 :: " ps  n 9 [39;49m[33;40m=[39;49m[34;49m {  (| n ) n @ p n 2 = n @ dup p 2 "goedel6_1_assert" assert { (| n ) n @ p n 3 = n @ 4 + dup p 7 "g .. [39;49m[32;49m
0x7fbdaad6279a    488908                  mov [rax], rcx                                         [39;49m
[34;49m ..  "\n goedel6 :: " ps  n 9 = {  (| n ) [39;49m[33;40mn[39;49m[34;49m @ p n 2 = n @ dup p 2 "goedel6_1_assert" assert { (| n ) n @ p n 3 = n @ 4 + dup p 7 "goedel6_2_ass .. [39;49m[32;49m
0x7fbdaad6279d    498b4710                mov rax, [r15+0x10]                                    [39;49m[32;49m
0x7fbdaad627a1    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad627a5    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  goedel6 :: " ps  n 9 = {  (| n ) n @ [39;49m[33;40mp[39;49m[34;49m n 2 = n @ dup p 2 "goedel6_1_assert" assert { (| n ) n @ p n 3 = n @ 4 + dup p 7 "goedel6_2_assert" .. [39;49m[32;49m
0x7fbdaad627a8    49b94464d5aabd7f0000    mov r9, 0x7fbdaad56444                                 [39;49m[32;49m
0x7fbdaad627b2    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fbdaad56444[32;49m >[39;49m[39;49m
[34;49m .. oedel6 :: " ps  n 9 = {  (| n ) n @ p [39;49m[33;40mn[39;49m[34;49m 2 = n @ dup p 2 "goedel6_1_assert" assert { (| n ) n @ p n 3 = n @ 4 + dup p 7 "goedel6_2_assert" a .. [39;49m[32;49m
0x7fbdaad627b5    498d4710                lea rax, [r15+0x10]                                    [39;49m
[34;49m .. del6 :: " ps  n 9 = {  (| n ) n @ p n [39;49m[33;40m2[39;49m[34;49m = n @ dup p 2 "goedel6_1_assert" assert { (| n ) n @ p n 3 = n @ 4 + dup p 7 "goedel6_2_assert" ass .. [39;49m[32;49m
0x7fbdaad627b9    48c7c102000000          mov rcx, 0x2                                           [39;49m
[34;49m .. l6 :: " ps  n 9 = {  (| n ) n @ p n 2 [39;49m[33;40m=[39;49m[34;49m n @ dup p 2 "goedel6_1_assert" assert { (| n ) n @ p n 3 = n @ 4 + dup p 7 "goedel6_2_assert" asser .. [39;49m[32;49m
0x7fbdaad627c0    488908                  mov [rax], rcx                                         [39;49m
[34;49m ..  :: " ps  n 9 = {  (| n ) n @ p n 2 = [39;49m[33;40mn[39;49m[34;49m @ dup p 2 "goedel6_1_assert" assert { (| n ) n @ p n 3 = n @ 4 + dup p 7 "goedel6_2_assert" assert  .. [39;49m[32;49m
0x7fbdaad627c3    498b4710                mov rax, [r15+0x10]                                    [39;49m[32;49m
0x7fbdaad627c7    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fbdaad627cb    498906                  mov [r14], rax                                         [39;49m
[34;49m .. " ps  n 9 = {  (| n ) n @ p n 2 = n @ [39;49m[33;40mdup[39;49m[34;49m p 2 "goedel6_1_assert" assert { (| n ) n @ p n 3 = n @ 4 + dup p 7 "goedel6_2_assert" assert } ix .. [39;49m[32;49m
0x7fbdaad627ce    498946f8                mov [r14-0x8], rax                                     [39;49m
[34;49m ..   n 9 = {  (| n ) n @ p n 2 = n @ dup [39;49m[33;40mp[39;49m[34;49m 2 "goedel6_1_assert" assert { (| n ) n @ p n 3 = n @ 4 + dup p 7 "goedel6_2_assert" assert } ix n @ .. [39;49m[32;49m
0x7fbdaad627d2    49b94464d5aabd7f0000    mov r9, 0x7fbdaad56444                                 [39;49m[32;49m
0x7fbdaad627dc    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fbdaad56444[32;49m >[39;49m[39;49m
[34;49m .. n 9 = {  (| n ) n @ p n 2 = n @ dup p [39;49m[33;40m2[39;49m[34;49m "goedel6_1_assert" assert { (| n ) n @ p n 3 = n @ 4 + dup p 7 "goedel6_2_assert" assert } ix n @ 6 .. [39;49m[32;49m
0x7fbdaad627df    48c7c002000000          mov rax, 0x2                                           [39;49m[32;49m
0x7fbdaad627e6    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad627ea    498906                  mov [r14], rax                                         [39;49m
[34;49m .. 9 = {  (| n ) n @ p n 2 = n @ dup p 2 [39;49m[33;40m"goedel6_1_assert"[39;49m[34;49m assert { (| n ) n @ p n 3 = n @ 4 + dup p 7 "goedel6_2_assert" assert } ix n @ 6 + .. [39;49m[32;49m
0x7fbdaad627ed    48b86a4883aabd7f0000    mov rax, 0x7fbdaa83486a    	[32;49m< string : '[39;49m[39;49mgoedel6_1_assert[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fbdaad627f7    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad627fb    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaad627fe    49b92b7bd5aabd7f0000    mov r9, 0x7fbdaad57b2b                                 [39;49m[32;49m
0x7fbdaad62808    49ffd1                  call r9                    	< System.[34;49m_assert1[39;49m : 0x00007fbdaad57b2b[32;49m >[39;49m[39;49m
[34;49m ..  2 "goedel6_1_assert" assert { (| n ) [39;49m[33;40mn[39;49m[34;49m @ p n 3 = n @ 4 + dup p 7 "goedel6_2_assert" assert } ix n @ 6 + 8 "goedel6_3_assert" assert  } ix  .. [39;49m[32;49m
0x7fbdaad6280b    498b4718                mov rax, [r15+0x18]                                    [39;49m[32;49m
0x7fbdaad6280f    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad62813    498906                  mov [r14], rax                                         [39;49m
[34;49m .. goedel6_1_assert" assert { (| n ) n @ [39;49m[33;40mp[39;49m[34;49m n 3 = n @ 4 + dup p 7 "goedel6_2_assert" assert } ix n @ 6 + 8 "goedel6_3_assert" assert  } ix { (| .. [39;49m[32;49m
0x7fbdaad62816    49b94464d5aabd7f0000    mov r9, 0x7fbdaad56444                                 [39;49m[32;49m
0x7fbdaad62820    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fbdaad56444[32;49m >[39;49m[39;49m
[34;49m .. edel6_1_assert" assert { (| n ) n @ p [39;49m[33;40mn[39;49m[34;49m 3 = n @ 4 + dup p 7 "goedel6_2_assert" assert } ix n @ 6 + 8 "goedel6_3_assert" assert  } ix { (| n .. [39;49m[32;49m
0x7fbdaad62823    498d4718                lea rax, [r15+0x18]                                    [39;49m
[34;49m .. el6_1_assert" assert { (| n ) n @ p n [39;49m[33;40m3[39;49m[34;49m = n @ 4 + dup p 7 "goedel6_2_assert" assert } ix n @ 6 + 8 "goedel6_3_assert" assert  } ix { (| n ) .. [39;49m[32;49m
0x7fbdaad62827    48c7c103000000          mov rcx, 0x3                                           [39;49m
[34;49m .. 6_1_assert" assert { (| n ) n @ p n 3 [39;49m[33;40m=[39;49m[34;49m n @ 4 + dup p 7 "goedel6_2_assert" assert } ix n @ 6 + 8 "goedel6_3_assert" assert  } ix { (| n )   .. [39;49m[32;49m
0x7fbdaad6282e    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. 1_assert" assert { (| n ) n @ p n 3 = [39;49m[33;40mn[39;49m[34;49m @ 4 + dup p 7 "goedel6_2_assert" assert } ix n @ 6 + 8 "goedel6_3_assert" assert  } ix { (| n )  n  .. [39;49m[32;49m
0x7fbdaad62831    498b4718                mov rax, [r15+0x18]                                    [39;49m
[34;49m .. sert" assert { (| n ) n @ p n 3 = n @ [39;49m[33;40m4[39;49m[34;49m + dup p 7 "goedel6_2_assert" assert } ix n @ 6 + 8 "goedel6_3_assert" assert  } ix { (| n )  n @ p  .. [39;49m[32;49m
0x7fbdaad62835    48c7c104000000          mov rcx, 0x4                                           [39;49m
[34;49m .. rt" assert { (| n ) n @ p n 3 = n @ 4 [39;49m[33;40m+[39;49m[34;49m dup p 7 "goedel6_2_assert" assert } ix n @ 6 + 8 "goedel6_3_assert" assert  } ix { (| n )  n @ p  n .. [39;49m[32;49m
0x7fbdaad6283c    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fbdaad6283f    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fbdaad62843    498906                  mov [r14], rax                                         [39;49m
[34;49m .. " assert { (| n ) n @ p n 3 = n @ 4 + [39;49m[33;40mdup[39;49m[34;49m p 7 "goedel6_2_assert" assert } ix n @ 6 + 8 "goedel6_3_assert" assert  } ix { (| n )  n @ p  n 3 .. [39;49m[32;49m
0x7fbdaad62846    498946f8                mov [r14-0x8], rax                                     [39;49m
[34;49m .. sert { (| n ) n @ p n 3 = n @ 4 + dup [39;49m[33;40mp[39;49m[34;49m 7 "goedel6_2_assert" assert } ix n @ 6 + 8 "goedel6_3_assert" assert  } ix { (| n )  n @ p  n 3 =   .. [39;49m[32;49m
0x7fbdaad6284a    49b94464d5aabd7f0000    mov r9, 0x7fbdaad56444                                 [39;49m[32;49m
0x7fbdaad62854    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fbdaad56444[32;49m >[39;49m[39;49m
[34;49m .. rt { (| n ) n @ p n 3 = n @ 4 + dup p [39;49m[33;40m7[39;49m[34;49m "goedel6_2_assert" assert } ix n @ 6 + 8 "goedel6_3_assert" assert  } ix { (| n )  n @ p  n 3 =  n  .. [39;49m[32;49m
0x7fbdaad62857    48c7c007000000          mov rax, 0x7                                           [39;49m[32;49m
0x7fbdaad6285e    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad62862    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  { (| n ) n @ p n 3 = n @ 4 + dup p 7 [39;49m[33;40m"goedel6_2_assert"[39;49m[34;49m assert } ix n @ 6 + 8 "goedel6_3_assert" assert  } ix { (| n )  n @ p  n 3 =  n du .. [39;49m[32;49m
0x7fbdaad62865    48b89f4883aabd7f0000    mov rax, 0x7fbdaa83489f    	[32;49m< string : '[39;49m[39;49mgoedel6_2_assert[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fbdaad6286f    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad62873    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaad62876    49b92b7bd5aabd7f0000    mov r9, 0x7fbdaad57b2b                                 [39;49m[32;49m
0x7fbdaad62880    49ffd1                  call r9                    	< System.[34;49m_assert1[39;49m : 0x00007fbdaad57b2b[32;49m >[39;49m[39;49m
[34;49m .. up p 7 "goedel6_2_assert" assert } ix [39;49m[33;40mn[39;49m[34;49m @ 6 + 8 "goedel6_3_assert" assert  } ix { (| n )  n @ p  n 3 =  n dup @ 4 + =  n @ dup p 7 "goedel6 .. [39;49m[32;49m
0x7fbdaad62883    498b4710                mov rax, [r15+0x10]                                    [39;49m
[34;49m ..  7 "goedel6_2_assert" assert } ix n @ [39;49m[33;40m6[39;49m[34;49m + 8 "goedel6_3_assert" assert  } ix { (| n )  n @ p  n 3 =  n dup @ 4 + =  n @ dup p 7 "goedel6_4_a .. [39;49m[32;49m
0x7fbdaad62887    48c7c106000000          mov rcx, 0x6                                           [39;49m
[34;49m ..  "goedel6_2_assert" assert } ix n @ 6 [39;49m[33;40m+[39;49m[34;49m 8 "goedel6_3_assert" assert  } ix { (| n )  n @ p  n 3 =  n dup @ 4 + =  n @ dup p 7 "goedel6_4_ass .. [39;49m[32;49m
0x7fbdaad6288e    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fbdaad62891    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad62895    498906                  mov [r14], rax                                         [39;49m
[34;49m .. goedel6_2_assert" assert } ix n @ 6 + [39;49m[33;40m8[39;49m[34;49m "goedel6_3_assert" assert  } ix { (| n )  n @ p  n 3 =  n dup @ 4 + =  n @ dup p 7 "goedel6_4_asser .. [39;49m[32;49m
0x7fbdaad62898    48c7c008000000          mov rax, 0x8                                           [39;49m[32;49m
0x7fbdaad6289f    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad628a3    498906                  mov [r14], rax                                         [39;49m
[34;49m .. edel6_2_assert" assert } ix n @ 6 + 8 [39;49m[33;40m"goedel6_3_assert"[39;49m[34;49m assert  } ix { (| n )  n @ p  n 3 =  n dup @ 4 + =  n @ dup p 7 "goedel6_4_assert" .. [39;49m[32;49m
0x7fbdaad628a6    48b8c74883aabd7f0000    mov rax, 0x7fbdaa8348c7    	[32;49m< string : '[39;49m[39;49mgoedel6_3_assert[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fbdaad628b0    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad628b4    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaad628b7    49b92b7bd5aabd7f0000    mov r9, 0x7fbdaad57b2b                                 [39;49m[32;49m
0x7fbdaad628c1    49ffd1                  call r9                    	< System.[34;49m_assert1[39;49m : 0x00007fbdaad57b2b[32;49m >[39;49m[39;49m
[34;49m .. del6_3_assert" assert  } ix { (| n )  [39;49m[33;40mn[39;49m[34;49m @ p  n 3 =  n dup @ 4 + =  n @ dup p 7 "goedel6_4_assert" assert  } ix n @ dup p return tos ; ".I"  .. [39;49m[32;49m
0x7fbdaad628c4    498b4720                mov rax, [r15+0x20]                                    [39;49m[32;49m
0x7fbdaad628c8    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad628cc    498906                  mov [r14], rax                                         [39;49m
[34;49m .. _3_assert" assert  } ix { (| n )  n @ [39;49m[33;40mp[39;49m[34;49m  n 3 =  n dup @ 4 + =  n @ dup p 7 "goedel6_4_assert" assert  } ix n @ dup p return tos ; ".I" type .. [39;49m[32;49m
0x7fbdaad628cf    49b94464d5aabd7f0000    mov r9, 0x7fbdaad56444                                 [39;49m[32;49m
0x7fbdaad628d9    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fbdaad56444[32;49m >[39;49m[39;49m
[34;49m .. assert" assert  } ix { (| n )  n @ p  [39;49m[33;40mn[39;49m[34;49m 3 =  n dup @ 4 + =  n @ dup p 7 "goedel6_4_assert" assert  } ix n @ dup p return tos ; ".I" typeSig .. [39;49m[32;49m
0x7fbdaad628dc    498d4720                lea rax, [r15+0x20]                                    [39;49m
[34;49m .. sert" assert  } ix { (| n )  n @ p  n [39;49m[33;40m3[39;49m[34;49m =  n dup @ 4 + =  n @ dup p 7 "goedel6_4_assert" assert  } ix n @ dup p return tos ; ".I" typeSigna .. [39;49m[32;49m
0x7fbdaad628e0    48c7c103000000          mov rcx, 0x3                                           [39;49m
[34;49m .. rt" assert  } ix { (| n )  n @ p  n 3 [39;49m[33;40m=[39;49m[34;49m  n dup @ 4 + =  n @ dup p 7 "goedel6_4_assert" assert  } ix n @ dup p return tos ; ".I" typeSignatu .. [39;49m[32;49m
0x7fbdaad628e7    488908                  mov [rax], rcx                                         [39;49m
[34;49m ..  assert  } ix { (| n )  n @ p  n 3 =  [39;49m[33;40mn[39;49m[34;49m dup @ 4 + =  n @ dup p 7 "goedel6_4_assert" assert  } ix n @ dup p return tos ; ".I" typeSignature  .. [39;49m[32;49m
0x7fbdaad628ea    498d4720                lea rax, [r15+0x20]                                    [39;49m[32;49m
0x7fbdaad628ee    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fbdaad628f2    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ssert  } ix { (| n )  n @ p  n 3 =  n [39;49m[33;40mdup[39;49m[34;49m @ 4 + =  n @ dup p 7 "goedel6_4_assert" assert  } ix n @ dup p return tos ; ".I" typeSignature '  .. [39;49m[32;49m
0x7fbdaad628f5    498946f8                mov [r14-0x8], rax                                     [39;49m
[34;49m .. t  } ix { (| n )  n @ p  n 3 =  n dup [39;49m[33;40m@[39;49m[34;49m 4 + =  n @ dup p 7 "goedel6_4_assert" assert  } ix n @ dup p return tos ; ".I" typeSignature ' goed .. [39;49m[32;49m
0x7fbdaad628f9    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fbdaad628fc    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fbdaad628ff    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  } ix { (| n )  n @ p  n 3 =  n dup @ [39;49m[33;40m4[39;49m[34;49m + =  n @ dup p 7 "goedel6_4_assert" assert  } ix n @ dup p return tos ; ".I" typeSignature ' goedel .. [39;49m[32;49m
0x7fbdaad62902    48c7c004000000          mov rax, 0x4                                           [39;49m[32;49m
0x7fbdaad62909    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fbdaad6290c    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fbdaad6290f    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m ..  ix { (| n )  n @ p  n 3 =  n dup @ 4 [39;49m[33;40m+[39;49m[34;49m =  n @ dup p 7 "goedel6_4_assert" assert  } ix n @ dup p return tos ; ".I" typeSignature ' goedel6  .. [39;49m[32;49m
0x7fbdaad62913    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fbdaad62916    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fbdaad62919    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fbdaad6291c    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m .. x { (| n )  n @ p  n 3 =  n dup @ 4 + [39;49m[33;40m=[39;49m[34;49m  n @ dup p 7 "goedel6_4_assert" assert  } ix n @ dup p return tos ; ".I" typeSignature ' goedel6 fi .. [39;49m[32;49m
0x7fbdaad62920    488908                  mov [rax], rcx                                         [39;49m
[34;49m ..  (| n )  n @ p  n 3 =  n dup @ 4 + =  [39;49m[33;40mn[39;49m[34;49m @ dup p 7 "goedel6_4_assert" assert  } ix n @ dup p return tos ; ".I" typeSignature ' goedel6 find  .. [39;49m[32;49m
0x7fbdaad62923    498b4720                mov rax, [r15+0x20]                                    [39;49m[32;49m
0x7fbdaad62927    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fbdaad6292b    498906                  mov [r14], rax                                         [39;49m
[34;49m .. n )  n @ p  n 3 =  n dup @ 4 + =  n @ [39;49m[33;40mdup[39;49m[34;49m p 7 "goedel6_4_assert" assert  } ix n @ dup p return tos ; ".I" typeSignature ' goedel6 find wdis .. [39;49m[32;49m
0x7fbdaad6292e    498946f8                mov [r14-0x8], rax                                     [39;49m
[34;49m ..  n @ p  n 3 =  n dup @ 4 + =  n @ dup [39;49m[33;40mp[39;49m[34;49m 7 "goedel6_4_assert" assert  } ix n @ dup p return tos ; ".I" typeSignature ' goedel6 find wdiss 9  .. [39;49m[32;49m
0x7fbdaad62932    49b94464d5aabd7f0000    mov r9, 0x7fbdaad56444                                 [39;49m[32;49m
0x7fbdaad6293c    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fbdaad56444[32;49m >[39;49m[39;49m
[34;49m ..  @ p  n 3 =  n dup @ 4 + =  n @ dup p [39;49m[33;40m7[39;49m[34;49m "goedel6_4_assert" assert  } ix n @ dup p return tos ; ".I" typeSignature ' goedel6 find wdiss 9 go .. [39;49m[32;49m
0x7fbdaad6293f    48c7c007000000          mov rax, 0x7                                           [39;49m[32;49m
0x7fbdaad62946    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad6294a    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  p  n 3 =  n dup @ 4 + =  n @ dup p 7 [39;49m[33;40m"goedel6_4_assert"[39;49m[34;49m assert  } ix n @ dup p return tos ; ".I" typeSignature ' goedel6 find wdiss 9 goed .. [39;49m[32;49m
0x7fbdaad6294d    48b8fc4883aabd7f0000    mov rax, 0x7fbdaa8348fc    	[32;49m< string : '[39;49m[39;49mgoedel6_4_assert[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fbdaad62957    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad6295b    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaad6295e    49b92b7bd5aabd7f0000    mov r9, 0x7fbdaad57b2b                                 [39;49m[32;49m
0x7fbdaad62968    49ffd1                  call r9                    	< System.[34;49m_assert1[39;49m : 0x00007fbdaad57b2b[32;49m >[39;49m[39;49m
[34;49m .. p p 7 "goedel6_4_assert" assert  } ix [39;49m[33;40mn[39;49m[34;49m @ dup p return tos ; ".I" typeSignature ' goedel6 find wdiss 9 goedel6 "goedel6_0_assert" assert "\ .. [39;49m[32;49m
0x7fbdaad6296b    498b4708                mov rax, [r15+0x8]                                     [39;49m[32;49m
0x7fbdaad6296f    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fbdaad62973    498906                  mov [r14], rax                                         [39;49m
[34;49m .. 7 "goedel6_4_assert" assert  } ix n @ [39;49m[33;40mdup[39;49m[34;49m p return tos ; ".I" typeSignature ' goedel6 find wdiss 9 goedel6 "goedel6_0_assert" assert "\ngoe .. [39;49m[32;49m
0x7fbdaad62976    498946f8                mov [r14-0x8], rax                                     [39;49m[32;49m
0x7fbdaad6297a    49b94464d5aabd7f0000    mov r9, 0x7fbdaad56444                                 [39;49m[32;49m
0x7fbdaad62984    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fbdaad56444[32;49m >[39;49m[39;49m[32;49m
0x7fbdaad62987    498b06                  mov rax, [r14]                                         [39;49m
[34;49m .. oedel6_4_assert" assert  } ix n @ dup [39;49m[33;40mp[39;49m[34;49m return tos ; ".I" typeSignature ' goedel6 find wdiss 9 goedel6 "goedel6_0_assert" assert "\ngoedel6 .. [39;49m[32;49m
0x7fbdaad6298a    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad6298e    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaad62992    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad62996    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaad62999    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'goedel6' :: codeSize = 567
Word : 0x00007fbda95cb478 :: Compiled at : 0x00007fbdaad62762
 =============================
::> 'wdiss' was called at namespaces/test/lisp.csl 252.1 <::
 
 goedel6 ::  140452566971512 2 goedel6_1_assert  : ok

 140452595432040 7 goedel6_2_assert  : ok

 goedel6_3_assert  : ok

 140452590447898 7 goedel6_4_assert  : ok

 9 goedel6_0_assert  : ok

 
goedel6 output should read (after ignoring _asserts) : 
 'junk' 2 'junk' 7 'junk' 7 9[39;49m
 
goedel8 output :  140452586277187 2 goedel8_1_assert  : ok

 0 7 goedel8_3_assert  : ok

 goedel8_4_assert  : ok

 140452590449557 10 goedel8_5_assert  : ok

 9 goedel8_6_assert  : ok

 
goedel8 output should read : 
'junk' 2 'junk' 7 'junk' 10 9[39;49m

 =============================
Root.[34;49mgoedel8[39;49m <:> csl compiled word
SourceCode for Root.[34;49mgoedel8[39;49m :> 
[34;49m( :: "\ngoedel8 output : " ps : goedel8 (| n -t "V.I" ) n 1 = { 'n var n @ p n 2 = n @ dup p 2 "goedel8_1_assert" assert { 'n var n @ p n 3 = n @ 4 + dup p 7 "goedel8_3_assert" assert } ix n @ 6 + 8 "goedel8_4_assert" assert } ix { 'n var n @ p n 3 = n dup @ 7 + = n @ dup p 10 "goedel8_5_assert" assert } ix n @ 8 + dup p return tos ; goedel8 9 "goedel8_6_assert" assert1 "\ngoedel8 output should read : \n'junk' 2 'junk' 7 'junk' 10 9" ps )[39;49m
Source code file location of [34;49mgoedel8[39;49m : "namespaces/test/lisp.csl" : 275.0 :: we are now at : namespaces/test/lisp.csl : 276.24
Compiled with : optimizeOn, inlineOn, Jcc8 on
Debug Source Code on : BigNum off : Lisp on : Word Source Code on
starting at address : 0xaad6299f -- code size = 548 bytes
TypeSignature : 
 -----------------------------
Word :: Root.[34;49mgoedel8[39;49m : definition = 0x00007fbdaad6299f : disassembly at namespaces/test/lisp.csl : 276.24 :
[34;49m ..            ( :: "\ngoedel8 output : " [39;49m[33;40mps[39;49m[34;49m  : goedel8 (| n -t "V.I" )  n 1 = {  'n var n @ p  n 2 = n @ dup p 2 "goedel8_1_assert" assert { ' .. [39;49m[32;49m
0x7fbdaad6299f    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fbdaad629a3    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaad629a7    4981c628000000          add r14, 0x28                                          [39;49m
[34;49m .. ut : " ps  : goedel8 (| n -t "V.I" )  [39;49m[33;40mn[39;49m[34;49m 1 = {  'n var n @ p  n 2 = n @ dup p 2 "goedel8_1_assert" assert { 'n var n @ p n 3 = n @ 4 + dup p .. [39;49m[32;49m
0x7fbdaad629ae    498d4708                lea rax, [r15+0x8]                                     [39;49m
[34;49m ..  : " ps  : goedel8 (| n -t "V.I" )  n [39;49m[33;40m1[39;49m[34;49m = {  'n var n @ p  n 2 = n @ dup p 2 "goedel8_1_assert" assert { 'n var n @ p n 3 = n @ 4 + dup p 7 .. [39;49m[32;49m
0x7fbdaad629b2    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m ..  " ps  : goedel8 (| n -t "V.I" )  n 1 [39;49m[33;40m=[39;49m[34;49m {  'n var n @ p  n 2 = n @ dup p 2 "goedel8_1_assert" assert { 'n var n @ p n 3 = n @ 4 + dup p 7 " .. [39;49m[32;49m
0x7fbdaad629b9    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. del8 (| n -t "V.I" )  n 1 = {  'n var [39;49m[33;40mn[39;49m[34;49m @ p  n 2 = n @ dup p 2 "goedel8_1_assert" assert { 'n var n @ p n 3 = n @ 4 + dup p 7 "goedel8_3_as .. [39;49m[32;49m
0x7fbdaad629bc    498b4710                mov rax, [r15+0x10]                                    [39;49m[32;49m
0x7fbdaad629c0    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad629c4    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  (| n -t "V.I" )  n 1 = {  'n var n @ [39;49m[33;40mp[39;49m[34;49m  n 2 = n @ dup p 2 "goedel8_1_assert" assert { 'n var n @ p n 3 = n @ 4 + dup p 7 "goedel8_3_assert .. [39;49m[32;49m
0x7fbdaad629c7    49b94464d5aabd7f0000    mov r9, 0x7fbdaad56444                                 [39;49m[32;49m
0x7fbdaad629d1    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fbdaad56444[32;49m >[39;49m[39;49m
[34;49m ..  n -t "V.I" )  n 1 = {  'n var n @ p  [39;49m[33;40mn[39;49m[34;49m 2 = n @ dup p 2 "goedel8_1_assert" assert { 'n var n @ p n 3 = n @ 4 + dup p 7 "goedel8_3_assert" a .. [39;49m[32;49m
0x7fbdaad629d4    498d4710                lea rax, [r15+0x10]                                    [39;49m
[34;49m ..  -t "V.I" )  n 1 = {  'n var n @ p  n [39;49m[33;40m2[39;49m[34;49m = n @ dup p 2 "goedel8_1_assert" assert { 'n var n @ p n 3 = n @ 4 + dup p 7 "goedel8_3_assert" ass .. [39;49m[32;49m
0x7fbdaad629d8    48c7c102000000          mov rcx, 0x2                                           [39;49m
[34;49m .. t "V.I" )  n 1 = {  'n var n @ p  n 2 [39;49m[33;40m=[39;49m[34;49m n @ dup p 2 "goedel8_1_assert" assert { 'n var n @ p n 3 = n @ 4 + dup p 7 "goedel8_3_assert" asser .. [39;49m[32;49m
0x7fbdaad629df    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. "V.I" )  n 1 = {  'n var n @ p  n 2 = [39;49m[33;40mn[39;49m[34;49m @ dup p 2 "goedel8_1_assert" assert { 'n var n @ p n 3 = n @ 4 + dup p 7 "goedel8_3_assert" assert  .. [39;49m[32;49m
0x7fbdaad629e2    498b4710                mov rax, [r15+0x10]                                    [39;49m[32;49m
0x7fbdaad629e6    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fbdaad629ea    498906                  mov [r14], rax                                         [39;49m
[34;49m .. " )  n 1 = {  'n var n @ p  n 2 = n @ [39;49m[33;40mdup[39;49m[34;49m p 2 "goedel8_1_assert" assert { 'n var n @ p n 3 = n @ 4 + dup p 7 "goedel8_3_assert" assert } ix .. [39;49m[32;49m
0x7fbdaad629ed    498946f8                mov [r14-0x8], rax                                     [39;49m
[34;49m ..  n 1 = {  'n var n @ p  n 2 = n @ dup [39;49m[33;40mp[39;49m[34;49m 2 "goedel8_1_assert" assert { 'n var n @ p n 3 = n @ 4 + dup p 7 "goedel8_3_assert" assert } ix n @ .. [39;49m[32;49m
0x7fbdaad629f1    49b94464d5aabd7f0000    mov r9, 0x7fbdaad56444                                 [39;49m[32;49m
0x7fbdaad629fb    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fbdaad56444[32;49m >[39;49m[39;49m
[34;49m ..  1 = {  'n var n @ p  n 2 = n @ dup p [39;49m[33;40m2[39;49m[34;49m "goedel8_1_assert" assert { 'n var n @ p n 3 = n @ 4 + dup p 7 "goedel8_3_assert" assert } ix n @ 6 .. [39;49m[32;49m
0x7fbdaad629fe    48c7c002000000          mov rax, 0x2                                           [39;49m[32;49m
0x7fbdaad62a05    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad62a09    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  = {  'n var n @ p  n 2 = n @ dup p 2 [39;49m[33;40m"goedel8_1_assert"[39;49m[34;49m assert { 'n var n @ p n 3 = n @ 4 + dup p 7 "goedel8_3_assert" assert } ix n @ 6 + .. [39;49m[32;49m
0x7fbdaad62a0c    48b8fa4f83aabd7f0000    mov rax, 0x7fbdaa834ffa    	[32;49m< string : '[39;49m[39;49mgoedel8_1_assert[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fbdaad62a16    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad62a1a    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaad62a1d    49b92b7bd5aabd7f0000    mov r9, 0x7fbdaad57b2b                                 [39;49m[32;49m
0x7fbdaad62a27    49ffd1                  call r9                    	< System.[34;49m_assert1[39;49m : 0x00007fbdaad57b2b[32;49m >[39;49m[39;49m
[34;49m ..  2 "goedel8_1_assert" assert { 'n var [39;49m[33;40mn[39;49m[34;49m @ p n 3 = n @ 4 + dup p 7 "goedel8_3_assert" assert } ix n @ 6 + 8 "goedel8_4_assert" assert  } ix  .. [39;49m[32;49m
0x7fbdaad62a2a    498b4718                mov rax, [r15+0x18]                                    [39;49m[32;49m
0x7fbdaad62a2e    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad62a32    498906                  mov [r14], rax                                         [39;49m
[34;49m .. goedel8_1_assert" assert { 'n var n @ [39;49m[33;40mp[39;49m[34;49m n 3 = n @ 4 + dup p 7 "goedel8_3_assert" assert } ix n @ 6 + 8 "goedel8_4_assert" assert  } ix {  ' .. [39;49m[32;49m
0x7fbdaad62a35    49b94464d5aabd7f0000    mov r9, 0x7fbdaad56444                                 [39;49m[32;49m
0x7fbdaad62a3f    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fbdaad56444[32;49m >[39;49m[39;49m
[34;49m .. edel8_1_assert" assert { 'n var n @ p [39;49m[33;40mn[39;49m[34;49m 3 = n @ 4 + dup p 7 "goedel8_3_assert" assert } ix n @ 6 + 8 "goedel8_4_assert" assert  } ix {  'n  .. [39;49m[32;49m
0x7fbdaad62a42    498d4718                lea rax, [r15+0x18]                                    [39;49m
[34;49m .. el8_1_assert" assert { 'n var n @ p n [39;49m[33;40m3[39;49m[34;49m = n @ 4 + dup p 7 "goedel8_3_assert" assert } ix n @ 6 + 8 "goedel8_4_assert" assert  } ix {  'n va .. [39;49m[32;49m
0x7fbdaad62a46    48c7c103000000          mov rcx, 0x3                                           [39;49m
[34;49m .. 8_1_assert" assert { 'n var n @ p n 3 [39;49m[33;40m=[39;49m[34;49m n @ 4 + dup p 7 "goedel8_3_assert" assert } ix n @ 6 + 8 "goedel8_4_assert" assert  } ix {  'n var  .. [39;49m[32;49m
0x7fbdaad62a4d    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. 1_assert" assert { 'n var n @ p n 3 = [39;49m[33;40mn[39;49m[34;49m @ 4 + dup p 7 "goedel8_3_assert" assert } ix n @ 6 + 8 "goedel8_4_assert" assert  } ix {  'n var n  .. [39;49m[32;49m
0x7fbdaad62a50    498b4718                mov rax, [r15+0x18]                                    [39;49m
[34;49m .. sert" assert { 'n var n @ p n 3 = n @ [39;49m[33;40m4[39;49m[34;49m + dup p 7 "goedel8_3_assert" assert } ix n @ 6 + 8 "goedel8_4_assert" assert  } ix {  'n var n @ p  .. [39;49m[32;49m
0x7fbdaad62a54    48c7c104000000          mov rcx, 0x4                                           [39;49m
[34;49m .. rt" assert { 'n var n @ p n 3 = n @ 4 [39;49m[33;40m+[39;49m[34;49m dup p 7 "goedel8_3_assert" assert } ix n @ 6 + 8 "goedel8_4_assert" assert  } ix {  'n var n @ p  n .. [39;49m[32;49m
0x7fbdaad62a5b    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fbdaad62a5e    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fbdaad62a62    498906                  mov [r14], rax                                         [39;49m
[34;49m .. " assert { 'n var n @ p n 3 = n @ 4 + [39;49m[33;40mdup[39;49m[34;49m p 7 "goedel8_3_assert" assert } ix n @ 6 + 8 "goedel8_4_assert" assert  } ix {  'n var n @ p  n 3 .. [39;49m[32;49m
0x7fbdaad62a65    498946f8                mov [r14-0x8], rax                                     [39;49m
[34;49m .. sert { 'n var n @ p n 3 = n @ 4 + dup [39;49m[33;40mp[39;49m[34;49m 7 "goedel8_3_assert" assert } ix n @ 6 + 8 "goedel8_4_assert" assert  } ix {  'n var n @ p  n 3 =   .. [39;49m[32;49m
0x7fbdaad62a69    49b94464d5aabd7f0000    mov r9, 0x7fbdaad56444                                 [39;49m[32;49m
0x7fbdaad62a73    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fbdaad56444[32;49m >[39;49m[39;49m
[34;49m .. rt { 'n var n @ p n 3 = n @ 4 + dup p [39;49m[33;40m7[39;49m[34;49m "goedel8_3_assert" assert } ix n @ 6 + 8 "goedel8_4_assert" assert  } ix {  'n var n @ p  n 3 =  n  .. [39;49m[32;49m
0x7fbdaad62a76    48c7c007000000          mov rax, 0x7                                           [39;49m[32;49m
0x7fbdaad62a7d    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad62a81    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  { 'n var n @ p n 3 = n @ 4 + dup p 7 [39;49m[33;40m"goedel8_3_assert"[39;49m[34;49m assert } ix n @ 6 + 8 "goedel8_4_assert" assert  } ix {  'n var n @ p  n 3 =  n du .. [39;49m[32;49m
0x7fbdaad62a84    48b82f5083aabd7f0000    mov rax, 0x7fbdaa83502f    	[32;49m< string : '[39;49m[39;49mgoedel8_3_assert[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fbdaad62a8e    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad62a92    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaad62a95    49b92b7bd5aabd7f0000    mov r9, 0x7fbdaad57b2b                                 [39;49m[32;49m
0x7fbdaad62a9f    49ffd1                  call r9                    	< System.[34;49m_assert1[39;49m : 0x00007fbdaad57b2b[32;49m >[39;49m[39;49m
[34;49m .. up p 7 "goedel8_3_assert" assert } ix [39;49m[33;40mn[39;49m[34;49m @ 6 + 8 "goedel8_4_assert" assert  } ix {  'n var n @ p  n 3 =  n dup @ 7 + =  n @ dup p 10 "goedel .. [39;49m[32;49m
0x7fbdaad62aa2    498b4710                mov rax, [r15+0x10]                                    [39;49m
[34;49m ..  7 "goedel8_3_assert" assert } ix n @ [39;49m[33;40m6[39;49m[34;49m + 8 "goedel8_4_assert" assert  } ix {  'n var n @ p  n 3 =  n dup @ 7 + =  n @ dup p 10 "goedel8_5_ .. [39;49m[32;49m
0x7fbdaad62aa6    48c7c106000000          mov rcx, 0x6                                           [39;49m
[34;49m ..  "goedel8_3_assert" assert } ix n @ 6 [39;49m[33;40m+[39;49m[34;49m 8 "goedel8_4_assert" assert  } ix {  'n var n @ p  n 3 =  n dup @ 7 + =  n @ dup p 10 "goedel8_5_as .. [39;49m[32;49m
0x7fbdaad62aad    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fbdaad62ab0    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad62ab4    498906                  mov [r14], rax                                         [39;49m
[34;49m .. goedel8_3_assert" assert } ix n @ 6 + [39;49m[33;40m8[39;49m[34;49m "goedel8_4_assert" assert  } ix {  'n var n @ p  n 3 =  n dup @ 7 + =  n @ dup p 10 "goedel8_5_asse .. [39;49m[32;49m
0x7fbdaad62ab7    48c7c008000000          mov rax, 0x8                                           [39;49m[32;49m
0x7fbdaad62abe    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad62ac2    498906                  mov [r14], rax                                         [39;49m
[34;49m .. edel8_3_assert" assert } ix n @ 6 + 8 [39;49m[33;40m"goedel8_4_assert"[39;49m[34;49m assert  } ix {  'n var n @ p  n 3 =  n dup @ 7 + =  n @ dup p 10 "goedel8_5_assert .. [39;49m[32;49m
0x7fbdaad62ac5    48b8575083aabd7f0000    mov rax, 0x7fbdaa835057    	[32;49m< string : '[39;49m[39;49mgoedel8_4_assert[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fbdaad62acf    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad62ad3    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaad62ad6    49b92b7bd5aabd7f0000    mov r9, 0x7fbdaad57b2b                                 [39;49m[32;49m
0x7fbdaad62ae0    49ffd1                  call r9                    	< System.[34;49m_assert1[39;49m : 0x00007fbdaad57b2b[32;49m >[39;49m[39;49m
[34;49m .. del8_4_assert" assert  } ix {  'n var [39;49m[33;40mn[39;49m[34;49m @ p  n 3 =  n dup @ 7 + =  n @ dup p 10 "goedel8_5_assert" assert  } ix n @ 8 + dup p return tos  ; .. [39;49m[32;49m
0x7fbdaad62ae3    498b4720                mov rax, [r15+0x20]                                    [39;49m[32;49m
0x7fbdaad62ae7    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad62aeb    498906                  mov [r14], rax                                         [39;49m
[34;49m .. _4_assert" assert  } ix {  'n var n @ [39;49m[33;40mp[39;49m[34;49m  n 3 =  n dup @ 7 + =  n @ dup p 10 "goedel8_5_assert" assert  } ix n @ 8 + dup p return tos  ; goe .. [39;49m[32;49m
0x7fbdaad62aee    49b94464d5aabd7f0000    mov r9, 0x7fbdaad56444                                 [39;49m[32;49m
0x7fbdaad62af8    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fbdaad56444[32;49m >[39;49m[39;49m
[34;49m .. assert" assert  } ix {  'n var n @ p  [39;49m[33;40mn[39;49m[34;49m 3 =  n dup @ 7 + =  n @ dup p 10 "goedel8_5_assert" assert  } ix n @ 8 + dup p return tos  ; goedel .. [39;49m[32;49m
0x7fbdaad62afb    498d4720                lea rax, [r15+0x20]                                    [39;49m
[34;49m .. sert" assert  } ix {  'n var n @ p  n [39;49m[33;40m3[39;49m[34;49m =  n dup @ 7 + =  n @ dup p 10 "goedel8_5_assert" assert  } ix n @ 8 + dup p return tos  ; goedel8  .. [39;49m[32;49m
0x7fbdaad62aff    48c7c103000000          mov rcx, 0x3                                           [39;49m
[34;49m .. rt" assert  } ix {  'n var n @ p  n 3 [39;49m[33;40m=[39;49m[34;49m  n dup @ 7 + =  n @ dup p 10 "goedel8_5_assert" assert  } ix n @ 8 + dup p return tos  ; goedel8 9  .. [39;49m[32;49m
0x7fbdaad62b06    488908                  mov [rax], rcx                                         [39;49m
[34;49m ..  assert  } ix {  'n var n @ p  n 3 =  [39;49m[33;40mn[39;49m[34;49m dup @ 7 + =  n @ dup p 10 "goedel8_5_assert" assert  } ix n @ 8 + dup p return tos  ; goedel8 9 "go .. [39;49m[32;49m
0x7fbdaad62b09    498d4720                lea rax, [r15+0x20]                                    [39;49m[32;49m
0x7fbdaad62b0d    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fbdaad62b11    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ssert  } ix {  'n var n @ p  n 3 =  n [39;49m[33;40mdup[39;49m[34;49m @ 7 + =  n @ dup p 10 "goedel8_5_assert" assert  } ix n @ 8 + dup p return tos  ; goedel8 9 "goed .. [39;49m[32;49m
0x7fbdaad62b14    498946f8                mov [r14-0x8], rax                                     [39;49m
[34;49m .. t  } ix {  'n var n @ p  n 3 =  n dup [39;49m[33;40m@[39;49m[34;49m 7 + =  n @ dup p 10 "goedel8_5_assert" assert  } ix n @ 8 + dup p return tos  ; goedel8 9 "goedel8_ .. [39;49m[32;49m
0x7fbdaad62b18    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fbdaad62b1b    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fbdaad62b1e    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  } ix {  'n var n @ p  n 3 =  n dup @ [39;49m[33;40m7[39;49m[34;49m + =  n @ dup p 10 "goedel8_5_assert" assert  } ix n @ 8 + dup p return tos  ; goedel8 9 "goedel8_6_ .. [39;49m[32;49m
0x7fbdaad62b21    48c7c007000000          mov rax, 0x7                                           [39;49m[32;49m
0x7fbdaad62b28    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fbdaad62b2b    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fbdaad62b2e    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m ..  ix {  'n var n @ p  n 3 =  n dup @ 7 [39;49m[33;40m+[39;49m[34;49m =  n @ dup p 10 "goedel8_5_assert" assert  } ix n @ 8 + dup p return tos  ; goedel8 9 "goedel8_6_as .. [39;49m[32;49m
0x7fbdaad62b32    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fbdaad62b35    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fbdaad62b38    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fbdaad62b3b    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m .. x {  'n var n @ p  n 3 =  n dup @ 7 + [39;49m[33;40m=[39;49m[34;49m  n @ dup p 10 "goedel8_5_assert" assert  } ix n @ 8 + dup p return tos  ; goedel8 9 "goedel8_6_asse .. [39;49m[32;49m
0x7fbdaad62b3f    488908                  mov [rax], rcx                                         [39;49m
[34;49m ..   'n var n @ p  n 3 =  n dup @ 7 + =  [39;49m[33;40mn[39;49m[34;49m @ dup p 10 "goedel8_5_assert" assert  } ix n @ 8 + dup p return tos  ; goedel8 9 "goedel8_6_assert" .. [39;49m[32;49m
0x7fbdaad62b42    498b4720                mov rax, [r15+0x20]                                    [39;49m[32;49m
0x7fbdaad62b46    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fbdaad62b4a    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  var n @ p  n 3 =  n dup @ 7 + =  n @ [39;49m[33;40mdup[39;49m[34;49m p 10 "goedel8_5_assert" assert  } ix n @ 8 + dup p return tos  ; goedel8 9 "goedel8_6_assert" ass .. [39;49m[32;49m
0x7fbdaad62b4d    498946f8                mov [r14-0x8], rax                                     [39;49m
[34;49m ..  n @ p  n 3 =  n dup @ 7 + =  n @ dup [39;49m[33;40mp[39;49m[34;49m 10 "goedel8_5_assert" assert  } ix n @ 8 + dup p return tos  ; goedel8 9 "goedel8_6_assert" assert1 .. [39;49m[32;49m
0x7fbdaad62b51    49b94464d5aabd7f0000    mov r9, 0x7fbdaad56444                                 [39;49m[32;49m
0x7fbdaad62b5b    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fbdaad56444[32;49m >[39;49m[39;49m
[34;49m ..  @ p  n 3 =  n dup @ 7 + =  n @ dup p [39;49m[33;40m10[39;49m[34;49m "goedel8_5_assert" assert  } ix n @ 8 + dup p return tos  ; goedel8 9 "goedel8_6_assert" assert1 " .. [39;49m[32;49m
0x7fbdaad62b5e    48c7c00a000000          mov rax, 0xa                                           [39;49m[32;49m
0x7fbdaad62b65    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad62b69    498906                  mov [r14], rax                                         [39;49m
[34;49m .. p  n 3 =  n dup @ 7 + =  n @ dup p 10 [39;49m[33;40m"goedel8_5_assert"[39;49m[34;49m assert  } ix n @ 8 + dup p return tos  ; goedel8 9 "goedel8_6_assert" assert1 "\ng .. [39;49m[32;49m
0x7fbdaad62b6c    48b88d5083aabd7f0000    mov rax, 0x7fbdaa83508d    	[32;49m< string : '[39;49m[39;49mgoedel8_5_assert[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fbdaad62b76    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad62b7a    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaad62b7d    49b92b7bd5aabd7f0000    mov r9, 0x7fbdaad57b2b                                 [39;49m[32;49m
0x7fbdaad62b87    49ffd1                  call r9                    	< System.[34;49m_assert1[39;49m : 0x00007fbdaad57b2b[32;49m >[39;49m[39;49m
[34;49m ..  p 10 "goedel8_5_assert" assert  } ix [39;49m[33;40mn[39;49m[34;49m @ 8 + dup p return tos  ; goedel8 9 "goedel8_6_assert" assert1 "\ngoedel8 output should read : \n'j .. [39;49m[32;49m
0x7fbdaad62b8a    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m .. 0 "goedel8_5_assert" assert  } ix n @ [39;49m[33;40m8[39;49m[34;49m + dup p return tos  ; goedel8 9 "goedel8_6_assert" assert1 "\ngoedel8 output should read : \n'junk' .. [39;49m[32;49m
0x7fbdaad62b8e    48c7c108000000          mov rcx, 0x8                                           [39;49m
[34;49m .. "goedel8_5_assert" assert  } ix n @ 8 [39;49m[33;40m+[39;49m[34;49m dup p return tos  ; goedel8 9 "goedel8_6_assert" assert1 "\ngoedel8 output should read : \n'junk' 2 .. [39;49m[32;49m
0x7fbdaad62b95    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fbdaad62b98    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fbdaad62b9c    498906                  mov [r14], rax                                         [39;49m
[34;49m .. oedel8_5_assert" assert  } ix n @ 8 + [39;49m[33;40mdup[39;49m[34;49m p return tos  ; goedel8 9 "goedel8_6_assert" assert1 "\ngoedel8 output should read : \n'junk' 2 ' .. [39;49m[32;49m
0x7fbdaad62b9f    498946f8                mov [r14-0x8], rax                                     [39;49m[32;49m
0x7fbdaad62ba3    49b94464d5aabd7f0000    mov r9, 0x7fbdaad56444                                 [39;49m[32;49m
0x7fbdaad62bad    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fbdaad56444[32;49m >[39;49m[39;49m[32;49m
0x7fbdaad62bb0    498b06                  mov rax, [r14]                                         [39;49m
[34;49m .. l8_5_assert" assert  } ix n @ 8 + dup [39;49m[33;40mp[39;49m[34;49m return tos  ; goedel8 9 "goedel8_6_assert" assert1 "\ngoedel8 output should read : \n'junk' 2 'junk .. [39;49m[32;49m
0x7fbdaad62bb3    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaad62bb7    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaad62bbb    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaad62bbf    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaad62bc2    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'goedel8' :: codeSize = 547
Word : 0x00007fbda95d14c0 :: Compiled at : 0x00007fbdaad6299f
 =============================
::> 'wdiss' was called at namespaces/test/lisp.csl 276.24 <::
[39;49m ( ( 1 2 ) )
[39;49m ( 1 2 )
[39;49m x
[39;49m a
[39;49m x1
[39;49m a1
[39;49m ( Its a beautiful day don't let it get away )
[39;49m ( Its "the" beautiful day don't "let" it get away )
[39;49m ( Its a beautiful day don't let it get away )
[39;49m ( Its a beautiful day don't x1 it get away )
[39;49m ( Its a beautiful day don't let it get away )
[39;49m ( Its a beautiful day don't x it get away )
 testing unquote above line should show : ( Its a beautiful day don't x it get away )
[39;49m ( Its a beautiful day don't x1 it get away )
 testing unquote above line should show : ( Its a beautiful day don't x1 it get away )
[39;49m ( Its "the" beautiful day don't "let" it get away )
[39;49m ( Its a beautiful day don't let it get away )
[34;49m 
ending lisp.csl
total 40
drwxr-xr-x 10 root root 4096 Jul 31 09:26 .
drwxr-xr-x 14 root root 4096 Jul 31 09:28 ..
drwxr-xr-x  2 root root 4096 Oct 26 11:21 bin
drwxr-xr-x  2 root root 4096 Oct 26 11:21 etc
drwxr-xr-x  2 root root 4096 Jul 31 09:26 games
drwxr-xr-x  3 root root 4096 Oct 26 11:08 include
drwxr-xr-x  5 root root 4096 Oct 30 07:08 lib
lrwxrwxrwx  1 root root    9 Oct 26 09:49 man -> share/man
drwxr-xr-x  2 root root 4096 Jul 31 09:26 sbin
drwxr-xr-x  8 root root 4096 Oct 26 11:08 share
drwxr-xr-x  2 root root 4096 Jul 31 09:26 src
[39;49m[39;49m[39;49m
typeChecking is on, optimize is on, inlining is on, infixMode is off, 
prefixMode is off, c_syntax is off, postfixMode is on
Debug is off. Verbosity = 1. Console = 0, NumberBase = 10.
DebugSourceCode on : BigNum off : Lisp off : jcc8 off
interpreting : at etc/script : 7.6
SignalExceptionsHandled = 0 ; SigSegvs = 0 ; Restarts = 0
StartedTimes = 0 ; RestartCondition = INITIAL_START ; LastRestartCondtion = INITIAL_START
InNamespace = Root.C
version 0.909.237
 7 7 7
version 0.909.237
[39;49m yfac
[39;49m 3628800

[39;49m yfacc
[39;49m 3628800

[39;49m 5040

[34;49m
Increase the verbosity setting to 2 or more for more info here. ( Eg. : verbosity 2 = )[39;49m
ContextSpace                                InUse =     29989 : Unused =       859 : ReAllocations =    1 : Largest =      768 : Smallest =       91
ContextSpace                                InUse =      8872 : Unused =      1368 : ReAllocations =    0 : Largest =     1368 : Smallest =     1368
StringSpace                                 InUse =     18101 : Unused =      2379 : ReAllocations =    0 : Largest =     2379 : Smallest =     2379
HistorySpace                                InUse =         0 : Unused =     10240 : ReAllocations =    0 : Largest =    10240 : Smallest =    10240
BufferSpace                                 InUse =     59098 : Unused =      1318 : ReAllocations =    0 : Largest =     1318 : Smallest =     1318
LispTempSpace                               InUse =    172072 : Unused =     35464 : ReAllocations =    4 : Largest =    34840 : Smallest =        0
DictionarySpace                             InUse =    696856 : Unused =    351720 : ReAllocations =    0 : Largest =   351720 : Smallest =   351720
SessionObjectsSpace                         InUse =     26758 : Unused =     24442 : ReAllocations =    0 : Largest =    24442 : Smallest =    24442
CodeSpace                                   InUse =     24374 : Unused =     78026 : ReAllocations =    0 : Largest =    78026 : Smallest =    78026
WordRecylingSpace                           InUse =    300728 : Unused =    137392 : ReAllocations =    2 : Largest =   136920 : Smallest =       40
CompilerTempObjectSpace                     InUse =    276776 : Unused =     32808 : ReAllocations =    3 : Largest =    32264 : Smallest =       40
TempObjectSpace                             InUse =      1066 : Unused =      9185 : ReAllocations =    1 : Largest =     9185 : Smallest =        0
LispSpace                                   InUse =    123072 : Unused =     85168 : ReAllocations =    4 : Largest =    84560 : Smallest =        0
InternalObjectSpace                         InUse =     69195 : Unused =      7605 : ReAllocations =    0 : Largest =     7605 : Smallest =     7605
CSLInternalSpace                            InUse =     79952 : Unused =      1968 : ReAllocations =    0 : Largest =     1968 : Smallest =     1968
OpenVmTilSpace                              InUse =      5376 : Unused =       768 : ReAllocations =    0 : Largest =      768 : Smallest =      768
Data Stack                                  InUse =         0 : Unused =     16384
Total Accounted Mem                         InUse =   1917381 : Unused =    780710
Mmap_RemainingMemoryAllocated                     =   2814971 : <=: ovt->Mmap_RemainingMemoryAllocated
Total Memory Allocated                            =   2698091
Total Memory leaks                                =         0
RecycledWordCount ::     4 x 440 bytes : Recycled =      1760
WrdInRecycling ::     0 x 440 bytes : InRecycling =         0[39;49m fibc
[39;49m 6765

 =============================
Int.[34;49mfac[39;49m <:> csl compiled word
SourceCode for Int.[34;49mfac[39;49m :> 
[34;49m: fac ( n | rec1 ) rec1 1 = { n @ 1 > } { n @ rec1 @ * rec1 store n -- } while return rec1 @ ; [39;49m
Source code file location of [34;49mfac[39;49m : "etc/script" : 27.2 :: we are now at : etc/script : 32.17
Compiled with : optimizeOn, inlineOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xae2b2032 -- code size = 89 bytes
TypeSignature : 
 -----------------------------
Word :: Int.[34;49mfac[39;49m : definition = 0x00007f22ae2b2032 : disassembly at etc/script : 32.17 :
[34;49m ..                                     : [39;49m[33;40mfac[39;49m[34;49m ( n | rec1 )  rec1 1 =  { n @ 1 > } { n @ rec1 @ * rec1 store n -- } while  return rec1 @ ;  .. [39;49m[32;49m
0x7f22ae2b2032    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7f22ae2b2036    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7f22ae2b203a    4981c610000000          add r14, 0x10                                          [39;49m
[34;49m ..                   : fac ( n | rec1 )  [39;49m[33;40mrec1[39;49m[34;49m 1 =  { n @ 1 > } { n @ rec1 @ * rec1 store n -- } while  return rec1 @ ;  .. [39;49m[32;49m
0x7f22ae2b2041    498d4708                lea rax, [r15+0x8]                                     [39;49m
[34;49m ..              : fac ( n | rec1 )  rec1 [39;49m[33;40m1[39;49m[34;49m =  { n @ 1 > } { n @ rec1 @ * rec1 store n -- } while  return rec1 @ ;  .. [39;49m[32;49m
0x7f22ae2b2045    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m ..            : fac ( n | rec1 )  rec1 1 [39;49m[33;40m=[39;49m[34;49m  { n @ 1 > } { n @ rec1 @ * rec1 store n -- } while  return rec1 @ ;  .. [39;49m[32;49m
0x7f22ae2b204c    488908                  mov [rax], rcx                                         [39;49m
[34;49m ..       : fac ( n | rec1 )  rec1 1 =  { [39;49m[33;40mn[39;49m[34;49m @ 1 > } { n @ rec1 @ * rec1 store n -- } while  return rec1 @ ;  .. [39;49m[32;49m
0x7f22ae2b204f    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. : fac ( n | rec1 )  rec1 1 =  { n @ 1 [39;49m[33;40m>[39;49m[34;49m } { n @ rec1 @ * rec1 store n -- } while  return rec1 @ ;  .. [39;49m[32;49m
0x7f22ae2b2053    4883f801                cmp rax, 0x1                                           [39;49m[32;49m
0x7f22ae2b2057    0f8e19000000            jle 0x7f22ae2b2076         	< Int.[34;49mfac[39;49m+68[32;49m >[39;49m[39;49m
[34;49m .. ( n | rec1 )  rec1 1 =  { n @ 1 > } { [39;49m[33;40mn[39;49m[34;49m @ rec1 @ * rec1 store n -- } while  return rec1 @ ; [39;49m[32;49m
0x7f22ae2b205d    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. | rec1 )  rec1 1 =  { n @ 1 > } { n @ [39;49m[33;40mrec1[39;49m[34;49m @ * rec1 store n -- } while  return rec1 @ ; [39;49m[32;49m
0x7f22ae2b2061    498b4f08                mov rcx, [r15+0x8]                                     [39;49m
[34;49m .. )  rec1 1 =  { n @ 1 > } { n @ rec1 @ [39;49m[33;40m*[39;49m[34;49m rec1 store n -- } while  return rec1 @ ; [39;49m[32;49m
0x7f22ae2b2065    480fafc1                imul rax, rcx                                          [39;49m
[34;49m ..  rec1 1 =  { n @ 1 > } { n @ rec1 @ * [39;49m[33;40mrec1[39;49m[34;49m store n -- } while  return rec1 @ ; [39;49m[32;49m
0x7f22ae2b2069    498d4f08                lea rcx, [r15+0x8]                                     [39;49m
[34;49m ..  1 =  { n @ 1 > } { n @ rec1 @ * rec1 [39;49m[33;40mstore[39;49m[34;49m n -- } while  return rec1 @ ; [39;49m[32;49m
0x7f22ae2b206d    488901                  mov [rcx], rax                                         [39;49m
[34;49m .. n @ 1 > } { n @ rec1 @ * rec1 store n [39;49m[33;40m--[39;49m[34;49m } while  return rec1 @ ; [39;49m[32;49m
0x7f22ae2b2070    49ff4ff8                dec qword [r15-0x8]                                    [39;49m
[34;49m ..  1 > } { n @ rec1 @ * rec1 store n -- [39;49m[33;40m}[39;49m[34;49m while  return rec1 @ ; [39;49m[32;49m
0x7f22ae2b2074    ebd9                    jmp 0x7f22ae2b204f         	< Int.[34;49mfac[39;49m+29[32;49m >[39;49m[39;49m[32;49m
0x7f22ae2b2076    498b4708                mov rax, [r15+0x8]                                     [39;49m[32;49m
0x7f22ae2b207a    e900000000              jmp 0x7f22ae2b207f         	< Int.[34;49mfac[39;49m+77[32;49m >[39;49m[39;49m
[34;49m .. ec1 store n -- } while  return rec1 @ [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7f22ae2b207f    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7f22ae2b2083    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m
[34;49m .. 1 @ * rec1 store n -- } while  return [39;49m[33;40mrec1[39;49m[34;49m @ ; [39;49m[32;49m
0x7f22ae2b2087    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7f22ae2b208a    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'fac' :: codeSize = 88
Word : 0x00007f22ae24c768 :: Compiled at : 0x00007f22ae2b2032
 =============================
::> 'wdiss' was called at etc/script 32.17 <::
 5040
bye
[39;49m[39;49m
typeChecking is on, optimize is on, inlining is on, infixMode is off, 
prefixMode is off, c_syntax is off, postfixMode is on
Debug is off. Verbosity = 1. Console = 0, NumberBase = 10.
DebugSourceCode on : BigNum off : Lisp off : jcc8 off
interpreting : at etc/lispScript : 4.6
SignalExceptionsHandled = 0 ; SigSegvs = 0 ; Restarts = 0
StartedTimes = 0 ; RestartCondition = INITIAL_START ; LastRestartCondtion = INITIAL_START
InNamespace = Root.C
version 0.909.237
[39;49m 7
[39;49m yfac
[39;49m 3628800

[39;49m yfacc
[39;49m 3628800

[39;49m 5040

[39;49m fibc
[39;49m 6765

 =============================
Int.[34;49mfac[39;49m <:> csl compiled word
SourceCode for Int.[34;49mfac[39;49m :> 
[34;49m: fac ( n | rec1 ) rec1 1 = { n @ 1 > } { n @ rec1 @ * rec1 store n -- } while return rec1 @ ; [39;49m
Source code file location of [34;49mfac[39;49m : "etc/lispScript" : 22.2 :: we are now at : etc/lispScript : 27.17
Compiled with : optimizeOn, inlineOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0x98eaafaf -- code size = 89 bytes
TypeSignature : 
 -----------------------------
Word :: Int.[34;49mfac[39;49m : definition = 0x00007fcf98eaafaf : disassembly at etc/lispScript : 27.17 :
[34;49m ..                                     : [39;49m[33;40mfac[39;49m[34;49m ( n | rec1 )  rec1 1 =  { n @ 1 > } { n @ rec1 @ * rec1 store n -- } while  return rec1 @ ;  .. [39;49m[32;49m
0x7fcf98eaafaf    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fcf98eaafb3    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fcf98eaafb7    4981c610000000          add r14, 0x10                                          [39;49m
[34;49m ..                   : fac ( n | rec1 )  [39;49m[33;40mrec1[39;49m[34;49m 1 =  { n @ 1 > } { n @ rec1 @ * rec1 store n -- } while  return rec1 @ ;  .. [39;49m[32;49m
0x7fcf98eaafbe    498d4708                lea rax, [r15+0x8]                                     [39;49m
[34;49m ..              : fac ( n | rec1 )  rec1 [39;49m[33;40m1[39;49m[34;49m =  { n @ 1 > } { n @ rec1 @ * rec1 store n -- } while  return rec1 @ ;  .. [39;49m[32;49m
0x7fcf98eaafc2    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m ..            : fac ( n | rec1 )  rec1 1 [39;49m[33;40m=[39;49m[34;49m  { n @ 1 > } { n @ rec1 @ * rec1 store n -- } while  return rec1 @ ;  .. [39;49m[32;49m
0x7fcf98eaafc9    488908                  mov [rax], rcx                                         [39;49m
[34;49m ..       : fac ( n | rec1 )  rec1 1 =  { [39;49m[33;40mn[39;49m[34;49m @ 1 > } { n @ rec1 @ * rec1 store n -- } while  return rec1 @ ;  .. [39;49m[32;49m
0x7fcf98eaafcc    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. : fac ( n | rec1 )  rec1 1 =  { n @ 1 [39;49m[33;40m>[39;49m[34;49m } { n @ rec1 @ * rec1 store n -- } while  return rec1 @ ;  .. [39;49m[32;49m
0x7fcf98eaafd0    4883f801                cmp rax, 0x1                                           [39;49m[32;49m
0x7fcf98eaafd4    0f8e19000000            jle 0x7fcf98eaaff3         	< Int.[34;49mfac[39;49m+68[32;49m >[39;49m[39;49m
[34;49m .. ( n | rec1 )  rec1 1 =  { n @ 1 > } { [39;49m[33;40mn[39;49m[34;49m @ rec1 @ * rec1 store n -- } while  return rec1 @ ; [39;49m[32;49m
0x7fcf98eaafda    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. | rec1 )  rec1 1 =  { n @ 1 > } { n @ [39;49m[33;40mrec1[39;49m[34;49m @ * rec1 store n -- } while  return rec1 @ ; [39;49m[32;49m
0x7fcf98eaafde    498b4f08                mov rcx, [r15+0x8]                                     [39;49m
[34;49m .. )  rec1 1 =  { n @ 1 > } { n @ rec1 @ [39;49m[33;40m*[39;49m[34;49m rec1 store n -- } while  return rec1 @ ; [39;49m[32;49m
0x7fcf98eaafe2    480fafc1                imul rax, rcx                                          [39;49m
[34;49m ..  rec1 1 =  { n @ 1 > } { n @ rec1 @ * [39;49m[33;40mrec1[39;49m[34;49m store n -- } while  return rec1 @ ; [39;49m[32;49m
0x7fcf98eaafe6    498d4f08                lea rcx, [r15+0x8]                                     [39;49m
[34;49m ..  1 =  { n @ 1 > } { n @ rec1 @ * rec1 [39;49m[33;40mstore[39;49m[34;49m n -- } while  return rec1 @ ; [39;49m[32;49m
0x7fcf98eaafea    488901                  mov [rcx], rax                                         [39;49m
[34;49m .. n @ 1 > } { n @ rec1 @ * rec1 store n [39;49m[33;40m--[39;49m[34;49m } while  return rec1 @ ; [39;49m[32;49m
0x7fcf98eaafed    49ff4ff8                dec qword [r15-0x8]                                    [39;49m
[34;49m ..  1 > } { n @ rec1 @ * rec1 store n -- [39;49m[33;40m}[39;49m[34;49m while  return rec1 @ ; [39;49m[32;49m
0x7fcf98eaaff1    ebd9                    jmp 0x7fcf98eaafcc         	< Int.[34;49mfac[39;49m+29[32;49m >[39;49m[39;49m[32;49m
0x7fcf98eaaff3    498b4708                mov rax, [r15+0x8]                                     [39;49m[32;49m
0x7fcf98eaaff7    e900000000              jmp 0x7fcf98eaaffc         	< Int.[34;49mfac[39;49m+77[32;49m >[39;49m[39;49m
[34;49m .. ec1 store n -- } while  return rec1 @ [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fcf98eaaffc    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fcf98eab000    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m
[34;49m .. 1 @ * rec1 store n -- } while  return [39;49m[33;40mrec1[39;49m[34;49m @ ; [39;49m[32;49m
0x7fcf98eab004    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fcf98eab007    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'fac' :: codeSize = 88
Word : 0x00007fcf98e447f0 :: Compiled at : 0x00007fcf98eaafaf
 =============================
::> 'wdiss' was called at etc/lispScript 27.17 <::
 5040
bye
 3
total 1356
drwxrwxr-x   8 dennisj dennisj   4096 Nov 18 11:48 .
drwxrwxrwx 143 dennisj dennisj  36864 Nov 17 22:07 ..
drwxrwxr-x   2 dennisj dennisj   4096 Nov 11 12:12 bin
-rw-rw-r--   1 dennisj dennisj 793979 Nov 18 11:48 csl.out
drwxrwxr-x   2 dennisj dennisj   4096 Sep 16 04:03 etc
drwxrwxr-x   8 dennisj dennisj   4096 Nov 17 14:32 .git
-rw-rw-r--   1 dennisj dennisj  15740 Sep 19 08:25 init.csl
-rw-rw-r--   1 dennisj dennisj    163 May 26 00:23 itestf
-rw-rw-r--   1 dennisj dennisj   1078 May 26 00:23 LICENSE
-rwxrwxr-x   1 dennisj dennisj    220 May 26 00:23 m
-rwxrwxr-x   1 dennisj dennisj    664 May 26 00:23 m0
-rw-rw-r--   1 dennisj dennisj   7059 Oct 26 11:20 Makefile
-rwxrwxr-x   1 dennisj dennisj    487 Oct 22 10:10 mir
-rwxrwxr-x   1 dennisj dennisj    549 May 26 00:23 mirAll
drwxrwxr-x   4 dennisj dennisj   4096 Sep 16 04:03 namespaces
drwxrwxr-x   3 dennisj dennisj   4096 May 26 00:23 nbproject
-rw-rw-r--   1 dennisj dennisj     40 May 26 00:23 nt.csl
-rwxrwxr-x   1 dennisj dennisj    124 May 26 00:23 r
-rw-rw-r--   1 dennisj dennisj  14186 Jul 17 21:49 README.txt
drwxrwxr-x   5 dennisj dennisj   4096 Sep 16 04:03 src
-rw-rw-r--   1 dennisj dennisj     90 May 26 00:23 test
-rw-rw-r--   1 dennisj dennisj     90 May 26 00:23 test.txt
-rw-rw-r--   1 dennisj dennisj 445085 Sep  1  2013 udis86-1.7.2.tar.gz

3
 namespaces/test/lisp.csl 316.9
 =============================
Infix.[34;49mhi[39;49m <:> csl compiled word
SourceCode for Infix.[34;49mhi[39;49m :> 
[34;49m: hi ( | x ) x = ( 2 + ( 3 * 4 ) ), x p return x [39;49m
Source code file location of [34;49mhi[39;49m : "namespaces/compiler/syntax.csl" : 6.2 :: we are now at : namespaces/compiler/syntax.csl : 7.16
Compiled with : optimizeOn, inlineOn, c_syntaxOn, infixOn, Jcc8 on
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xaabb424b -- code size = 108 bytes
TypeSignature : 
 -----------------------------
Word :: Infix.[34;49mhi[39;49m : definition = 0x00007fbdaabb424b : disassembly at namespaces/compiler/syntax.csl : 7.16 :
[34;49m ..                                     : [39;49m[33;40mhi[39;49m[34;49m ( | x ) x = ( 2 + ( 3 * 4 ) ), x p return x  .. [39;49m[32;49m
0x7fbdaabb424b    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fbdaabb424f    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaabb4253    4981c610000000          add r14, 0x10                                          [39;49m
[34;49m ..                    : hi ( | x ) x = ( [39;49m[33;40m2[39;49m[34;49m + ( 3 * 4 ) ), x p return x  .. [39;49m[32;49m
0x7fbdaabb425a    48c7c002000000          mov rax, 0x2                                           [39;49m[32;49m
0x7fbdaabb4261    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb4265    498906                  mov [r14], rax                                         [39;49m
[34;49m ..              : hi ( | x ) x = ( 2 + ( [39;49m[33;40m3[39;49m[34;49m * 4 ) ), x p return x  .. [39;49m[32;49m
0x7fbdaabb4268    48c7c00c000000          mov rax, 0xc                                           [39;49m[32;49m
0x7fbdaabb426f    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb4273    498906                  mov [r14], rax                                         [39;49m
[34;49m ..        : hi ( | x ) x = ( 2 + ( 3 * 4 [39;49m[33;40m)[39;49m[34;49m ), x p return x  .. [39;49m[32;49m
0x7fbdaabb4276    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fbdaabb4279    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fbdaabb427d    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m ..                  : hi ( | x ) x = ( 2 [39;49m[33;40m+[39;49m[34;49m ( 3 * 4 ) ), x p return x  .. [39;49m[32;49m
0x7fbdaabb4281    4803c1                  add rax, rcx                                           [39;49m
[34;49m ..                          : hi ( | x ) [39;49m[33;40mx[39;49m[34;49m = ( 2 + ( 3 * 4 ) ), x p return x  .. [39;49m[32;49m
0x7fbdaabb4284    498d4f08                lea rcx, [r15+0x8]                                     [39;49m
[34;49m ..                        : hi ( | x ) x [39;49m[33;40m=[39;49m[34;49m ( 2 + ( 3 * 4 ) ), x p return x  .. [39;49m[32;49m
0x7fbdaabb4288    488901                  mov [rcx], rax                                         [39;49m
[34;49m ..   : hi ( | x ) x = ( 2 + ( 3 * 4 ) ), [39;49m[33;40mx[39;49m[34;49m p return x  .. [39;49m[32;49m
0x7fbdaabb428b    498b4708                mov rax, [r15+0x8]                                     [39;49m[32;49m
0x7fbdaabb428f    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb4293    498906                  mov [r14], rax                                         [39;49m
[34;49m .. : hi ( | x ) x = ( 2 + ( 3 * 4 ) ), x [39;49m[33;40mp[39;49m[34;49m return x  .. [39;49m[32;49m
0x7fbdaabb4296    49b9d965d5aabd7f0000    mov r9, 0x7fbdaad565d9                                 [39;49m[32;49m
0x7fbdaabb42a0    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fbdaad565d9[32;49m >[39;49m[39;49m[32;49m
0x7fbdaabb42a3    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m .. ) x = ( 2 + ( 3 * 4 ) ), x p return x [39;49m[33;40m;[39;49m[34;49m[39;49m[32;49m
0x7fbdaabb42a7    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaabb42ab    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaabb42af    4983c608                add r14, 0x8                                           [39;49m
[34;49m .. x ) x = ( 2 + ( 3 * 4 ) ), x p return [39;49m[33;40mx[39;49m[34;49m [39;49m[32;49m
0x7fbdaabb42b3    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaabb42b6    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'hi' :: codeSize = 107
Word : 0x00007fbda95d9eb8 :: Compiled at : 0x00007fbdaabb424b
 =============================
::> 'wdiss' was called at namespaces/compiler/syntax.csl 7.16 <::
 14
DataStack at : [34;49mnamespaces/compiler/syntax.csl : 8.15[39;49m :
DataStack depth =   3 : Dsp (R14) = Top = 0x00007fbdab0efa58, InitialTos = 0x00007fbdab0efa40, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fbdab0efa58 > = 0x0000000000000005	
  DataStack   [  -1 ] < 0x00007fbdab0efa50 > = 0x0000000000000005	
  DataStack   [  -2 ] < 0x00007fbdab0efa48 > = 0x0000000000000005	

 =============================
Infix.[34;49mhi1[39;49m <:> csl compiled word
SourceCode for Infix.[34;49mhi1[39;49m :> 
[34;49m: hi1 ( a b | x ) x = 2 + ( ( a ) / ( b ) ) * ( 3 * 4 ), return x ; [39;49m
Source code file location of [34;49mhi1[39;49m : "namespaces/compiler/syntax.csl" : 11.2 :: we are now at : namespaces/compiler/syntax.csl : 12.17
Compiled with : optimizeOn, inlineOn, c_syntaxOn, infixOn, Jcc8 on
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xaabb42bc -- code size = 131 bytes
TypeSignature : 
 -----------------------------
Word :: Infix.[34;49mhi1[39;49m : definition = 0x00007fbdaabb42bc : disassembly at namespaces/compiler/syntax.csl : 12.17 :
[34;49m ..                                     : [39;49m[33;40mhi1[39;49m[34;49m ( a b | x ) x = 2 + ( ( a ) / ( b ) ) * ( 3 * 4 ), return x ;  .. [39;49m[32;49m
0x7fbdaabb42bc    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fbdaabb42c0    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaabb42c4    4981c610000000          add r14, 0x10                                          [39;49m
[34;49m ..                 : hi1 ( a b | x ) x = [39;49m[33;40m2[39;49m[34;49m + ( ( a ) / ( b ) ) * ( 3 * 4 ), return x ;  .. [39;49m[32;49m
0x7fbdaabb42cb    48c7c002000000          mov rax, 0x2                                           [39;49m[32;49m
0x7fbdaabb42d2    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb42d6    498906                  mov [r14], rax                                         [39;49m
[34;49m ..         : hi1 ( a b | x ) x = 2 + ( ( [39;49m[33;40ma[39;49m[34;49m ) / ( b ) ) * ( 3 * 4 ), return x ;  .. [39;49m[32;49m
0x7fbdaabb42d9    498b47f0                mov rax, [r15-0x10]                                    [39;49m
[34;49m .. : hi1 ( a b | x ) x = 2 + ( ( a ) / ( [39;49m[33;40mb[39;49m[34;49m ) ) * ( 3 * 4 ), return x ;  .. [39;49m[32;49m
0x7fbdaabb42dd    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m
[34;49m ..     : hi1 ( a b | x ) x = 2 + ( ( a ) [39;49m[33;40m/[39;49m[34;49m ( b ) ) * ( 3 * 4 ), return x ;  .. [39;49m[32;49m
0x7fbdaabb42e1    48c7c200000000          mov rdx, 0x0                                           [39;49m[32;49m
0x7fbdaabb42e8    48f7f9                  idiv rcx                                               [39;49m[32;49m
0x7fbdaabb42eb    4983c608                add r14, 0x8                                           [39;49m
[34;49m  : hi1 ( a b | x ) x = 2 + ( ( a ) / ( b [39;49m[33;40m)[39;49m[34;49m ) * ( 3 * 4 ), return x ;  .. [39;49m[32;49m
0x7fbdaabb42ef    498906                  mov [r14], rax                                         [39;49m
[34;49m: hi1 ( a b | x ) x = 2 + ( ( a ) / ( b ) [39;49m[33;40m)[39;49m[34;49m * ( 3 * 4 ), return x ;  .. [39;49m[32;49m
0x7fbdaabb42f2    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fbdaabb42f5    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fbdaabb42f9    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m ..               : hi1 ( a b | x ) x = 2 [39;49m[33;40m+[39;49m[34;49m ( ( a ) / ( b ) ) * ( 3 * 4 ), return x ;  .. [39;49m[32;49m
0x7fbdaabb42fd    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fbdaabb4300    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb4304    498906                  mov [r14], rax                                         [39;49m
[34;49m .. b | x ) x = 2 + ( ( a ) / ( b ) ) * ( [39;49m[33;40m3[39;49m[34;49m * 4 ), return x ; [39;49m[32;49m
0x7fbdaabb4307    48c7c00c000000          mov rax, 0xc                                           [39;49m[32;49m
0x7fbdaabb430e    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb4312    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ) x = 2 + ( ( a ) / ( b ) ) * ( 3 * 4 [39;49m[33;40m)[39;49m[34;49m, return x ; [39;49m[32;49m
0x7fbdaabb4315    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fbdaabb4318    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fbdaabb431c    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m .. | x ) x = 2 + ( ( a ) / ( b ) ) * ( 3 [39;49m[33;40m*[39;49m[34;49m 4 ), return x ; [39;49m[32;49m
0x7fbdaabb4320    480fafc1                imul rax, rcx                                          [39;49m
[34;49m ..                     : hi1 ( a b | x ) [39;49m[33;40mx[39;49m[34;49m = 2 + ( ( a ) / ( b ) ) * ( 3 * 4 ), return x ;  .. [39;49m[32;49m
0x7fbdaabb4324    498d4f08                lea rcx, [r15+0x8]                                     [39;49m
[34;49m ..                   : hi1 ( a b | x ) x [39;49m[33;40m=[39;49m[34;49m 2 + ( ( a ) / ( b ) ) * ( 3 * 4 ), return x ;  .. [39;49m[32;49m
0x7fbdaabb4328    488901                  mov [rcx], rax                                         [39;49m[32;49m
0x7fbdaabb432b    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m .. ( a ) / ( b ) ) * ( 3 * 4 ), return x [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fbdaabb432f    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaabb4333    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaabb4337    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m .. ( ( a ) / ( b ) ) * ( 3 * 4 ), return [39;49m[33;40mx[39;49m[34;49m ; [39;49m[32;49m
0x7fbdaabb433b    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaabb433e    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'hi1' :: codeSize = 130
Word : 0x00007fbda95dbe18 :: Compiled at : 0x00007fbdaabb42bc
 =============================
::> 'wdiss' was called at namespaces/compiler/syntax.csl 12.17 <::
 48
 =============================
Infix.[34;49mhi1[39;49m <:> csl compiled word
SourceCode for Infix.[34;49mhi1[39;49m :> 
[34;49m: hi1 ( a b | x ) x = ( 2 + ( a / b ) * ( 3 * 4 ) ), return x ; [39;49m
Source code file location of [34;49mhi1[39;49m : "namespaces/compiler/syntax.csl" : 14.2 :: we are now at : namespaces/compiler/syntax.csl : 15.17
Compiled with : optimizeOn, inlineOn, c_syntaxOn, infixOn, Jcc8 on
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xaabb4344 -- code size = 131 bytes
TypeSignature : 
 -----------------------------
Word :: Infix.[34;49mhi1[39;49m : definition = 0x00007fbdaabb4344 : disassembly at namespaces/compiler/syntax.csl : 15.17 :
[34;49m ..                                     : [39;49m[33;40mhi1[39;49m[34;49m ( a b | x ) x = ( 2 + ( a / b ) * ( 3 * 4 ) ), return x ;  .. [39;49m[32;49m
0x7fbdaabb4344    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fbdaabb4348    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaabb434c    4981c610000000          add r14, 0x10                                          [39;49m
[34;49m ..               : hi1 ( a b | x ) x = ( [39;49m[33;40m2[39;49m[34;49m + ( a / b ) * ( 3 * 4 ) ), return x ;  .. [39;49m[32;49m
0x7fbdaabb4353    48c7c002000000          mov rax, 0x2                                           [39;49m[32;49m
0x7fbdaabb435a    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb435e    498906                  mov [r14], rax                                         [39;49m
[34;49m ..         : hi1 ( a b | x ) x = ( 2 + ( [39;49m[33;40ma[39;49m[34;49m / b ) * ( 3 * 4 ) ), return x ;  .. [39;49m[32;49m
0x7fbdaabb4361    498b47f0                mov rax, [r15-0x10]                                    [39;49m
[34;49m ..     : hi1 ( a b | x ) x = ( 2 + ( a / [39;49m[33;40mb[39;49m[34;49m ) * ( 3 * 4 ) ), return x ;  .. [39;49m[32;49m
0x7fbdaabb4365    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m
[34;49m ..       : hi1 ( a b | x ) x = ( 2 + ( a [39;49m[33;40m/[39;49m[34;49m b ) * ( 3 * 4 ) ), return x ;  .. [39;49m[32;49m
0x7fbdaabb4369    48c7c200000000          mov rdx, 0x0                                           [39;49m[32;49m
0x7fbdaabb4370    48f7f9                  idiv rcx                                               [39;49m[32;49m
0x7fbdaabb4373    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb4377    498906                  mov [r14], rax                                         [39;49m
[34;49m ..   : hi1 ( a b | x ) x = ( 2 + ( a / b [39;49m[33;40m)[39;49m[34;49m * ( 3 * 4 ) ), return x ;  .. [39;49m[32;49m
0x7fbdaabb437a    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fbdaabb437d    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fbdaabb4381    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m ..             : hi1 ( a b | x ) x = ( 2 [39;49m[33;40m+[39;49m[34;49m ( a / b ) * ( 3 * 4 ) ), return x ;  .. [39;49m[32;49m
0x7fbdaabb4385    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fbdaabb4388    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb438c    498906                  mov [r14], rax                                         [39;49m
[34;49m: hi1 ( a b | x ) x = ( 2 + ( a / b ) * ( [39;49m[33;40m3[39;49m[34;49m * 4 ) ), return x ;  .. [39;49m[32;49m
0x7fbdaabb438f    48c7c00c000000          mov rax, 0xc                                           [39;49m[32;49m
0x7fbdaabb4396    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb439a    498906                  mov [r14], rax                                         [39;49m
[34;49m .. b | x ) x = ( 2 + ( a / b ) * ( 3 * 4 [39;49m[33;40m)[39;49m[34;49m ), return x ; [39;49m[32;49m
0x7fbdaabb439d    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fbdaabb43a0    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fbdaabb43a4    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m .. ( a b | x ) x = ( 2 + ( a / b ) * ( 3 [39;49m[33;40m*[39;49m[34;49m 4 ) ), return x ; [39;49m[32;49m
0x7fbdaabb43a8    480fafc1                imul rax, rcx                                          [39;49m
[34;49m ..                     : hi1 ( a b | x ) [39;49m[33;40mx[39;49m[34;49m = ( 2 + ( a / b ) * ( 3 * 4 ) ), return x ;  .. [39;49m[32;49m
0x7fbdaabb43ac    498d4f08                lea rcx, [r15+0x8]                                     [39;49m
[34;49m ..                   : hi1 ( a b | x ) x [39;49m[33;40m=[39;49m[34;49m ( 2 + ( a / b ) * ( 3 * 4 ) ), return x ;  .. [39;49m[32;49m
0x7fbdaabb43b0    488901                  mov [rcx], rax                                         [39;49m[32;49m
0x7fbdaabb43b3    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m .. 2 + ( a / b ) * ( 3 * 4 ) ), return x [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fbdaabb43b7    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaabb43bb    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaabb43bf    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m .. ( 2 + ( a / b ) * ( 3 * 4 ) ), return [39;49m[33;40mx[39;49m[34;49m ; [39;49m[32;49m
0x7fbdaabb43c3    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaabb43c6    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'hi1' :: codeSize = 130
Word : 0x00007fbda95de7c8 :: Compiled at : 0x00007fbdaabb4344
 =============================
::> 'wdiss' was called at namespaces/compiler/syntax.csl 15.17 <::
 48 48
DataStack at : [34;49mnamespaces/compiler/syntax.csl : 18.27[39;49m :
DataStack depth =   3 : Dsp (R14) = Top = 0x00007fbdab0efa58, InitialTos = 0x00007fbdab0efa40, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fbdab0efa58 > = 0x0000000000000005	
  DataStack   [  -1 ] < 0x00007fbdab0efa50 > = 0x0000000000000005	
  DataStack   [  -2 ] < 0x00007fbdab0efa48 > = 0x0000000000000005	

 =============================
Infix.[34;49mhi2[39;49m <:> csl compiled word
SourceCode for Infix.[34;49mhi2[39;49m :> 
[34;49m: hi2 ( a b | x ) ( x = ( ( ( ( 2 + ( a / b ) ) * ( ( 3 * 4 ) ) ) ) ) ), return x ; [39;49m
Source code file location of [34;49mhi2[39;49m : "namespaces/compiler/syntax.csl" : 19.2 :: we are now at : namespaces/compiler/syntax.csl : 20.17
Compiled with : optimizeOn, inlineOn, c_syntaxOn, infixOn, Jcc8 on
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xaabb43cc -- code size = 131 bytes
TypeSignature : 
 -----------------------------
Word :: Infix.[34;49mhi2[39;49m : definition = 0x00007fbdaabb43cc : disassembly at namespaces/compiler/syntax.csl : 20.17 :
[34;49m ..                                     : [39;49m[33;40mhi2[39;49m[34;49m ( a b | x ) ( x = ( ( ( ( 2 + ( a / b ) ) * ( ( 3 * 4 ) ) ) ) ) ), return x ;  .. [39;49m[32;49m
0x7fbdaabb43cc    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fbdaabb43d0    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaabb43d4    4981c610000000          add r14, 0x10                                          [39;49m
[34;49m ..       : hi2 ( a b | x ) ( x = ( ( ( ( [39;49m[33;40m2[39;49m[34;49m + ( a / b ) ) * ( ( 3 * 4 ) ) ) ) ) ), return x ;  .. [39;49m[32;49m
0x7fbdaabb43db    48c7c002000000          mov rax, 0x2                                           [39;49m[32;49m
0x7fbdaabb43e2    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb43e6    498906                  mov [r14], rax                                         [39;49m
[34;49m .. : hi2 ( a b | x ) ( x = ( ( ( ( 2 + ( [39;49m[33;40ma[39;49m[34;49m / b ) ) * ( ( 3 * 4 ) ) ) ) ) ), return x ;  .. [39;49m[32;49m
0x7fbdaabb43e9    498b47f0                mov rax, [r15-0x10]                                    [39;49m
[34;49m: hi2 ( a b | x ) ( x = ( ( ( ( 2 + ( a / [39;49m[33;40mb[39;49m[34;49m ) ) * ( ( 3 * 4 ) ) ) ) ) ), return x ;  .. [39;49m[32;49m
0x7fbdaabb43ed    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m
[34;49m  : hi2 ( a b | x ) ( x = ( ( ( ( 2 + ( a [39;49m[33;40m/[39;49m[34;49m b ) ) * ( ( 3 * 4 ) ) ) ) ) ), return x ;  .. [39;49m[32;49m
0x7fbdaabb43f1    48c7c200000000          mov rdx, 0x0                                           [39;49m[32;49m
0x7fbdaabb43f8    48f7f9                  idiv rcx                                               [39;49m[32;49m
0x7fbdaabb43fb    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb43ff    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ( a b | x ) ( x = ( ( ( ( 2 + ( a / b [39;49m[33;40m)[39;49m[34;49m ) * ( ( 3 * 4 ) ) ) ) ) ), return x ; [39;49m[32;49m
0x7fbdaabb4402    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fbdaabb4405    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fbdaabb4409    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m ..     : hi2 ( a b | x ) ( x = ( ( ( ( 2 [39;49m[33;40m+[39;49m[34;49m ( a / b ) ) * ( ( 3 * 4 ) ) ) ) ) ), return x ;  .. [39;49m[32;49m
0x7fbdaabb440d    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fbdaabb4410    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb4414    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ) ( x = ( ( ( ( 2 + ( a / b ) ) * ( ( [39;49m[33;40m3[39;49m[34;49m * 4 ) ) ) ) ) ), return x ; [39;49m[32;49m
0x7fbdaabb4417    48c7c00c000000          mov rax, 0xc                                           [39;49m[32;49m
0x7fbdaabb441e    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb4422    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ( ( ( ( 2 + ( a / b ) ) * ( ( 3 * 4 ) [39;49m[33;40m)[39;49m[34;49m ) ) ) ), return x ; [39;49m[32;49m
0x7fbdaabb4425    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fbdaabb4428    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fbdaabb442c    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m .. ( x = ( ( ( ( 2 + ( a / b ) ) * ( ( 3 [39;49m[33;40m*[39;49m[34;49m 4 ) ) ) ) ) ), return x ; [39;49m[32;49m
0x7fbdaabb4430    480fafc1                imul rax, rcx                                          [39;49m
[34;49m ..                   : hi2 ( a b | x ) ( [39;49m[33;40mx[39;49m[34;49m = ( ( ( ( 2 + ( a / b ) ) * ( ( 3 * 4 ) ) ) ) ) ), return x ;  .. [39;49m[32;49m
0x7fbdaabb4434    498d4f08                lea rcx, [r15+0x8]                                     [39;49m
[34;49m ..                 : hi2 ( a b | x ) ( x [39;49m[33;40m=[39;49m[34;49m ( ( ( ( 2 + ( a / b ) ) * ( ( 3 * 4 ) ) ) ) ) ), return x ;  .. [39;49m[32;49m
0x7fbdaabb4438    488901                  mov [rcx], rax                                         [39;49m[32;49m
0x7fbdaabb443b    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m .. ) ) * ( ( 3 * 4 ) ) ) ) ) ), return x [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fbdaabb443f    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaabb4443    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaabb4447    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m .. b ) ) * ( ( 3 * 4 ) ) ) ) ) ), return [39;49m[33;40mx[39;49m[34;49m ; [39;49m[32;49m
0x7fbdaabb444b    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaabb444e    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'hi2' :: codeSize = 130
Word : 0x00007fbda95e0e08 :: Compiled at : 0x00007fbdaabb43cc
 =============================
::> 'wdiss' was called at namespaces/compiler/syntax.csl 20.17 <::
 48
DataStack at : [34;49mnamespaces/compiler/syntax.csl : 21.26[39;49m :
DataStack depth =   3 : Dsp (R14) = Top = 0x00007fbdab0efa58, InitialTos = 0x00007fbdab0efa40, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fbdab0efa58 > = 0x0000000000000005	
  DataStack   [  -1 ] < 0x00007fbdab0efa50 > = 0x0000000000000005	
  DataStack   [  -2 ] < 0x00007fbdab0efa48 > = 0x0000000000000005	
 48
DataStack at : [34;49mnamespaces/compiler/syntax.csl : 23.27[39;49m :
DataStack depth =   3 : Dsp (R14) = Top = 0x00007fbdab0efa58, InitialTos = 0x00007fbdab0efa40, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fbdab0efa58 > = 0x0000000000000005	
  DataStack   [  -1 ] < 0x00007fbdab0efa50 > = 0x0000000000000005	
  DataStack   [  -2 ] < 0x00007fbdab0efa48 > = 0x0000000000000005	

 =============================
Infix.[34;49mh3[39;49m <:> csl compiled word
SourceCode for Infix.[34;49mh3[39;49m :> 
[34;49m: h3 ( a b | x ) ( x = ( ( ( ( 2 + ( ( 3 * 4 ) ) - ( (a) / (b) ) ) ) ) ) ), return x ; [39;49m
Source code file location of [34;49mh3[39;49m : "namespaces/compiler/syntax.csl" : 24.2 :: we are now at : namespaces/compiler/syntax.csl : 25.16
Compiled with : optimizeOn, inlineOn, c_syntaxOn, infixOn, Jcc8 on
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xaabb4454 -- code size = 130 bytes
TypeSignature : Any 
 -----------------------------
Word :: Infix.[34;49mh3[39;49m : definition = 0x00007fbdaabb4454 : disassembly at namespaces/compiler/syntax.csl : 25.16 :
[34;49m ..                                     : [39;49m[33;40mh3[39;49m[34;49m ( a b | x ) ( x = ( ( ( ( 2 + ( ( 3 * 4 ) ) - ( (a) / (b) ) ) ) ) ) ), return x ;  .. [39;49m[32;49m
0x7fbdaabb4454    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fbdaabb4458    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaabb445c    4981c610000000          add r14, 0x10                                          [39;49m
[34;49m ..        : h3 ( a b | x ) ( x = ( ( ( ( [39;49m[33;40m2[39;49m[34;49m + ( ( 3 * 4 ) ) - ( (a) / (b) ) ) ) ) ) ), return x ;  .. [39;49m[32;49m
0x7fbdaabb4463    48c7c002000000          mov rax, 0x2                                           [39;49m[32;49m
0x7fbdaabb446a    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb446e    498906                  mov [r14], rax                                         [39;49m
[34;49m   : h3 ( a b | x ) ( x = ( ( ( ( 2 + ( ( [39;49m[33;40m3[39;49m[34;49m * 4 ) ) - ( (a) / (b) ) ) ) ) ) ), return x ;  .. [39;49m[32;49m
0x7fbdaabb4471    48c7c00c000000          mov rax, 0xc                                           [39;49m[32;49m
0x7fbdaabb4478    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb447c    498906                  mov [r14], rax                                         [39;49m
[34;49m .. b | x ) ( x = ( ( ( ( 2 + ( ( 3 * 4 ) [39;49m[33;40m)[39;49m[34;49m - ( (a) / (b) ) ) ) ) ) ), return x ; [39;49m[32;49m
0x7fbdaabb447f    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fbdaabb4482    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fbdaabb4486    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m ..      : h3 ( a b | x ) ( x = ( ( ( ( 2 [39;49m[33;40m+[39;49m[34;49m ( ( 3 * 4 ) ) - ( (a) / (b) ) ) ) ) ) ), return x ;  .. [39;49m[32;49m
0x7fbdaabb448a    4803c1                  add rax, rcx                                           [39;49m
[34;49m : h3 ( a b | x ) ( x = ( ( ( ( 2 + ( ( 3 [39;49m[33;40m*[39;49m[34;49m 4 ) ) - ( (a) / (b) ) ) ) ) ) ), return x ;  .. [39;49m[32;49m
0x7fbdaabb448d    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb4491    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  ( x = ( ( ( ( 2 + ( ( 3 * 4 ) ) - ( ([39;49m[33;40ma[39;49m[34;49m) / (b) ) ) ) ) ) ), return x ; [39;49m[32;49m
0x7fbdaabb4494    498b47f0                mov rax, [r15-0x10]                                    [39;49m
[34;49m ..  ( ( ( ( 2 + ( ( 3 * 4 ) ) - ( (a) / ([39;49m[33;40mb[39;49m[34;49m) ) ) ) ) ) ), return x ; [39;49m[32;49m
0x7fbdaabb4498    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m
[34;49m .. x = ( ( ( ( 2 + ( ( 3 * 4 ) ) - ( (a) [39;49m[33;40m/[39;49m[34;49m (b) ) ) ) ) ) ), return x ; [39;49m[32;49m
0x7fbdaabb449c    48c7c200000000          mov rdx, 0x0                                           [39;49m[32;49m
0x7fbdaabb44a3    48f7f9                  idiv rcx                                               [39;49m[32;49m
0x7fbdaabb44a6    4983c608                add r14, 0x8                                           [39;49m
[34;49m .. ( ( ( ( 2 + ( ( 3 * 4 ) ) - ( (a) / (b[39;49m[33;40m)[39;49m[34;49m ) ) ) ) ) ), return x ; [39;49m[32;49m
0x7fbdaabb44aa    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ( ( ( 2 + ( ( 3 * 4 ) ) - ( (a) / (b) [39;49m[33;40m)[39;49m[34;49m ) ) ) ) ), return x ; [39;49m[32;49m
0x7fbdaabb44ad    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fbdaabb44b0    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fbdaabb44b4    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m .. | x ) ( x = ( ( ( ( 2 + ( ( 3 * 4 ) ) [39;49m[33;40m-[39;49m[34;49m ( (a) / (b) ) ) ) ) ) ), return x ; [39;49m[32;49m
0x7fbdaabb44b8    482bc1                  sub rax, rcx                                           [39;49m
[34;49m ..                    : h3 ( a b | x ) ( [39;49m[33;40mx[39;49m[34;49m = ( ( ( ( 2 + ( ( 3 * 4 ) ) - ( (a) / (b) ) ) ) ) ) ), return x ;  .. [39;49m[32;49m
0x7fbdaabb44bb    498d4f08                lea rcx, [r15+0x8]                                     [39;49m
[34;49m ..                  : h3 ( a b | x ) ( x [39;49m[33;40m=[39;49m[34;49m ( ( ( ( 2 + ( ( 3 * 4 ) ) - ( (a) / (b) ) ) ) ) ) ), return x ;  .. [39;49m[32;49m
0x7fbdaabb44bf    488901                  mov [rcx], rax                                         [39;49m[32;49m
0x7fbdaabb44c2    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m .. ) - ( (a) / (b) ) ) ) ) ) ), return x [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fbdaabb44c6    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaabb44ca    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaabb44ce    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m .. ) ) - ( (a) / (b) ) ) ) ) ) ), return [39;49m[33;40mx[39;49m[34;49m ; [39;49m[32;49m
0x7fbdaabb44d2    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaabb44d5    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'h3' :: codeSize = 129
Word : 0x00007fbda95e4578 :: Compiled at : 0x00007fbdaabb4454
 =============================
::> 'wdiss' was called at namespaces/compiler/syntax.csl 25.16 <::
 12 6 3 h3_assert1  : ok

 12
DataStack at : [34;49mnamespaces/compiler/syntax.csl : 27.26[39;49m :
DataStack depth =   3 : Dsp (R14) = Top = 0x00007fbdab0efa58, InitialTos = 0x00007fbdab0efa40, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fbdab0efa58 > = 0x0000000000000005	
  DataStack   [  -1 ] < 0x00007fbdab0efa50 > = 0x0000000000000005	
  DataStack   [  -2 ] < 0x00007fbdab0efa48 > = 0x0000000000000005	

 =============================
Infix.[34;49mh4[39;49m <:> csl compiled word
SourceCode for Infix.[34;49mh4[39;49m :> 
[34;49m: h4 ( a b | x ) x = ( 20 - ( 3 * 4 ) - ( a / b ) ), return x ; [39;49m
Source code file location of [34;49mh4[39;49m : "namespaces/compiler/syntax.csl" : 28.2 :: we are now at : namespaces/compiler/syntax.csl : 29.16
Compiled with : optimizeOn, inlineOn, c_syntaxOn, infixOn, Jcc8 on
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xaabb44db -- code size = 130 bytes
TypeSignature : Any 
 -----------------------------
Word :: Infix.[34;49mh4[39;49m : definition = 0x00007fbdaabb44db : disassembly at namespaces/compiler/syntax.csl : 29.16 :
[34;49m ..                                     : [39;49m[33;40mh4[39;49m[34;49m ( a b | x ) x = ( 20 - ( 3 * 4 ) - ( a / b ) ), return x ;  .. [39;49m[32;49m
0x7fbdaabb44db    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fbdaabb44df    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaabb44e3    4981c610000000          add r14, 0x10                                          [39;49m
[34;49m ..                : h4 ( a b | x ) x = ( [39;49m[33;40m20[39;49m[34;49m - ( 3 * 4 ) - ( a / b ) ), return x ;  .. [39;49m[32;49m
0x7fbdaabb44ea    48c7c014000000          mov rax, 0x14                                          [39;49m[32;49m
0x7fbdaabb44f1    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb44f5    498906                  mov [r14], rax                                         [39;49m
[34;49m ..         : h4 ( a b | x ) x = ( 20 - ( [39;49m[33;40m3[39;49m[34;49m * 4 ) - ( a / b ) ), return x ;  .. [39;49m[32;49m
0x7fbdaabb44f8    48c7c00c000000          mov rax, 0xc                                           [39;49m[32;49m
0x7fbdaabb44ff    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb4503    498906                  mov [r14], rax                                         [39;49m
[34;49m ..   : h4 ( a b | x ) x = ( 20 - ( 3 * 4 [39;49m[33;40m)[39;49m[34;49m - ( a / b ) ), return x ;  .. [39;49m[32;49m
0x7fbdaabb4506    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fbdaabb4509    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fbdaabb450d    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m ..             : h4 ( a b | x ) x = ( 20 [39;49m[33;40m-[39;49m[34;49m ( 3 * 4 ) - ( a / b ) ), return x ;  .. [39;49m[32;49m
0x7fbdaabb4511    482bc1                  sub rax, rcx                                           [39;49m
[34;49m ..       : h4 ( a b | x ) x = ( 20 - ( 3 [39;49m[33;40m*[39;49m[34;49m 4 ) - ( a / b ) ), return x ;  .. [39;49m[32;49m
0x7fbdaabb4514    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb4518    498906                  mov [r14], rax                                         [39;49m
[34;49m: h4 ( a b | x ) x = ( 20 - ( 3 * 4 ) - ( [39;49m[33;40ma[39;49m[34;49m / b ) ), return x ;  .. [39;49m[32;49m
0x7fbdaabb451b    498b47f0                mov rax, [r15-0x10]                                    [39;49m
[34;49m ..  b | x ) x = ( 20 - ( 3 * 4 ) - ( a / [39;49m[33;40mb[39;49m[34;49m ) ), return x ; [39;49m[32;49m
0x7fbdaabb451f    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m
[34;49m ..  a b | x ) x = ( 20 - ( 3 * 4 ) - ( a [39;49m[33;40m/[39;49m[34;49m b ) ), return x ; [39;49m[32;49m
0x7fbdaabb4523    48c7c200000000          mov rdx, 0x0                                           [39;49m[32;49m
0x7fbdaabb452a    48f7f9                  idiv rcx                                               [39;49m[32;49m
0x7fbdaabb452d    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb4531    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  | x ) x = ( 20 - ( 3 * 4 ) - ( a / b [39;49m[33;40m)[39;49m[34;49m ), return x ; [39;49m[32;49m
0x7fbdaabb4534    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fbdaabb4537    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fbdaabb453b    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m .. : h4 ( a b | x ) x = ( 20 - ( 3 * 4 ) [39;49m[33;40m-[39;49m[34;49m ( a / b ) ), return x ;  .. [39;49m[32;49m
0x7fbdaabb453f    482bc1                  sub rax, rcx                                           [39;49m
[34;49m ..                      : h4 ( a b | x ) [39;49m[33;40mx[39;49m[34;49m = ( 20 - ( 3 * 4 ) - ( a / b ) ), return x ;  .. [39;49m[32;49m
0x7fbdaabb4542    498d4f08                lea rcx, [r15+0x8]                                     [39;49m
[34;49m ..                    : h4 ( a b | x ) x [39;49m[33;40m=[39;49m[34;49m ( 20 - ( 3 * 4 ) - ( a / b ) ), return x ;  .. [39;49m[32;49m
0x7fbdaabb4546    488901                  mov [rcx], rax                                         [39;49m[32;49m
0x7fbdaabb4549    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m .. 0 - ( 3 * 4 ) - ( a / b ) ), return x [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fbdaabb454d    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaabb4551    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaabb4555    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m ..  20 - ( 3 * 4 ) - ( a / b ) ), return [39;49m[33;40mx[39;49m[34;49m ; [39;49m[32;49m
0x7fbdaabb4559    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaabb455c    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'h4' :: codeSize = 129
Word : 0x00007fbda95e83c8 :: Compiled at : 0x00007fbdaabb44db
 =============================
::> 'wdiss' was called at namespaces/compiler/syntax.csl 29.16 <::
 6
DataStack at : [34;49mnamespaces/compiler/syntax.csl : 30.24[39;49m :
DataStack depth =   3 : Dsp (R14) = Top = 0x00007fbdab0efa58, InitialTos = 0x00007fbdab0efa40, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fbdab0efa58 > = 0x0000000000000005	
  DataStack   [  -1 ] < 0x00007fbdab0efa50 > = 0x0000000000000005	
  DataStack   [  -2 ] < 0x00007fbdab0efa48 > = 0x0000000000000005	
 6
DataStack at : [34;49mnamespaces/compiler/syntax.csl : 31.25[39;49m :
DataStack depth =   3 : Dsp (R14) = Top = 0x00007fbdab0efa58, InitialTos = 0x00007fbdab0efa40, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fbdab0efa58 > = 0x0000000000000005	
  DataStack   [  -1 ] < 0x00007fbdab0efa50 > = 0x0000000000000005	
  DataStack   [  -2 ] < 0x00007fbdab0efa48 > = 0x0000000000000005	

DataStack at : [34;49mnamespaces/compiler/syntax.csl : 34.42[39;49m :
DataStack depth =   5 : Dsp (R14) = Top = 0x00007fbdab0efa68, InitialTos = 0x00007fbdab0efa40, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fbdab0efa68 > = 0x0000000000000000	
  DataStack   [  -1 ] < 0x00007fbdab0efa60 > = 0x0000000000000003	
  DataStack   [  -2 ] < 0x00007fbdab0efa58 > = 0x0000000000000005	
  DataStack   [  -3 ] < 0x00007fbdab0efa50 > = 0x0000000000000005	
  DataStack   [  -4 ] < 0x00007fbdab0efa48 > = 0x0000000000000005	
 3 
above line should read 3
 hi1 hi2 hi3 hi42 hi42
 hi2 hi3 hi42
 hi1 hi2 hi3 hi42
 hi42
 hi42
 hi42 ok ok
hello world! - parse this!?
1234		and this! 
	also this!
Hello world! = 0x000004d2


Hello world! = 42


hello world! - parse this!?
	 
	also this!
DataStack at : [34;49mnamespaces/test/system.csl : 32.18[39;49m :
DataStack depth =   8 : Dsp (R14) = Top = 0x00007fbdab0efa80, InitialTos = 0x00007fbdab0efa40, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fbdab0efa80 > = 0x00007fbdab0efa68	
  DataStack   [  -1 ] < 0x00007fbdab0efa78 > = 0x00007fbdaacdb800	< word : User.[34;49ms[39;49m : value = 0x000055bd1e3c36e0 >
  DataStack   [  -2 ] < 0x00007fbdab0efa70 > = 0x0000000000000000	
  DataStack   [  -3 ] < 0x00007fbdab0efa68 > = 0x0000000000000000	
  DataStack   [  -4 ] < 0x00007fbdab0efa60 > = 0x00007fbdaacdb800	< word : User.[34;49ms[39;49m : value = 0x000055bd1e3c36e0 >
  DataStack   [  -5 ] < 0x00007fbdab0efa58 > = 0x0000000000000005	
  DataStack   [  -6 ] < 0x00007fbdab0efa50 > = 0x0000000000000005	
  DataStack   [  -7 ] < 0x00007fbdab0efa48 > = 0x0000000000000005	

Hello world! = 0x000004d2


hello world!
parse this!


 
 and this!

hello world! - parse this!?
	 	 and this!
Hello world! = 0x000004d2


Hello world! = 0x000004d2


yes, Hello world! = 0x000004d2
yes, Hello world! = 0x000004d2 : and more yet
e
	eui 
line above should read... 
i	e
 =============================
Shell.[34;49mhio[39;49m <:> csl compiled word
SourceCode for Shell.[34;49mhio[39;49m :> 
[34;49m: hio if 1 p else 0 p endif ; [39;49m
Source code file location of [34;49mhio[39;49m : "namespaces/test/system.csl" : 63.2 :: we are now at : namespaces/test/system.csl : 64.17
Compiled with : optimizeOn, inlineOn, Jcc8 on
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xaabb5155 -- code size = 76 bytes
 -----------------------------
Word :: Shell.[34;49mhio[39;49m : definition = 0x00007fbdaabb5155 : disassembly at namespaces/test/system.csl : 64.17 :[32;49m
0x7fbdaabb5155    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fbdaabb5158    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m ..                                 : hio [39;49m[33;40mif[39;49m[34;49m 1 p else 0 p endif ;  .. [39;49m[32;49m
0x7fbdaabb515c    4885c0                  test rax, rax                                          [39;49m[32;49m
0x7fbdaabb515f    0f8420000000            jz 0x7fbdaabb5185          	< Shell.[34;49mhio[39;49m+48[32;49m >[39;49m[39;49m
[34;49m ..                              : hio if [39;49m[33;40m1[39;49m[34;49m p else 0 p endif ;  .. [39;49m[32;49m
0x7fbdaabb5165    48c7c001000000          mov rax, 0x1                                           [39;49m[32;49m
0x7fbdaabb516c    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb5170    498906                  mov [r14], rax                                         [39;49m
[34;49m ..                            : hio if 1 [39;49m[33;40mp[39;49m[34;49m else 0 p endif ;  .. [39;49m[32;49m
0x7fbdaabb5173    49b9d965d5aabd7f0000    mov r9, 0x7fbdaad565d9                                 [39;49m[32;49m
0x7fbdaabb517d    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fbdaad565d9[32;49m >[39;49m[39;49m
[34;49m ..                          : hio if 1 p [39;49m[33;40melse[39;49m[34;49m 0 p endif ;  .. [39;49m[32;49m
0x7fbdaabb5180    e91b000000              jmp 0x7fbdaabb51a0         	< Shell.[34;49mhio[39;49m+75[32;49m >[39;49m[39;49m
[34;49m ..                     : hio if 1 p else [39;49m[33;40m0[39;49m[34;49m p endif ;  .. [39;49m[32;49m
0x7fbdaabb5185    48c7c000000000          mov rax, 0x0                                           [39;49m[32;49m
0x7fbdaabb518c    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb5190    498906                  mov [r14], rax                                         [39;49m
[34;49m ..                   : hio if 1 p else 0 [39;49m[33;40mp[39;49m[34;49m endif ;  .. [39;49m[32;49m
0x7fbdaabb5193    49b9d965d5aabd7f0000    mov r9, 0x7fbdaad565d9                                 [39;49m[32;49m
0x7fbdaabb519d    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fbdaad565d9[32;49m >[39;49m[39;49m
[34;49m ..           : hio if 1 p else 0 p endif [39;49m[33;40m;[39;49m[34;49m  .. [39;49m[32;49m
0x7fbdaabb51a0    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'hio' :: codeSize = 75
Word : 0x00007fbda96051d0 :: Compiled at : 0x00007fbdaabb5155
 =============================
::> 'wdiss' was called at namespaces/test/system.csl 64.17 <::
 1 0
 876543

 =============================
C.[34;49m$$[39;49m <:> csl compiled word
SourceCode for C.[34;49m$$[39;49m :> 
[34;49m: $$ "" { token dup ";" strcmp } { { dup "." strcmp } { strcat " " strcat } { strcat } if3 } while drop location "$$" ps dup ps _sh return ; [39;49m
Source code file location of [34;49m$$[39;49m : "namespaces/test/system.csl" : 74.2 :: we are now at : namespaces/test/system.csl : 82.15
Compiled with : optimizeOn, inlineOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xaabb520f -- code size = 362 bytes
TypeSignature : 
 -----------------------------
Word :: C.[34;49m$$[39;49m : definition = 0x00007fbdaabb520f : disassembly at namespaces/test/system.csl : 82.15 :
[34;49m ..                                 : $$  [39;49m[33;40m"[39;49m[34;49m" { token dup ";" strcmp }  {  { dup "." strcmp } { strcat " " strcat } { strcat } if3 }  while drop .. [39;49m[32;49m
0x7fbdaabb520f    48b8a66d83aabd7f0000    mov rax, 0x7fbdaa836da6                                [39;49m[32;49m
0x7fbdaabb5219    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb521d    498906                  mov [r14], rax                                         [39;49m
[34;49m ..                            : $$  "" { [39;49m[33;40mtoken[39;49m[34;49m dup ";" strcmp }  {  { dup "." strcmp } { strcat " " strcat } { strcat } if3 }  while drop loca .. [39;49m[32;49m
0x7fbdaabb5220    49b8f0953e1ebd550000    mov r8, 0x55bd1e3e95f0                                 [39;49m[32;49m
0x7fbdaabb522a    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaabb5234    49ffd1                  call r9                    	< Compiler.[34;49mtoken[39;49m : 0x000055bd1e3e95f0[32;49m >[39;49m[39;49m
[34;49m ..                      : $$  "" { token [39;49m[33;40mdup[39;49m[34;49m ";" strcmp }  {  { dup "." strcmp } { strcat " " strcat } { strcat } if3 }  while drop location " .. [39;49m[32;49m
0x7fbdaabb5237    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fbdaabb523a    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb523e    498906                  mov [r14], rax                                         [39;49m
[34;49m ..                  : $$  "" { token dup [39;49m[33;40m"[39;49m[34;49m;" strcmp }  {  { dup "." strcmp } { strcat " " strcat } { strcat } if3 }  while drop location "$$"  .. [39;49m[32;49m
0x7fbdaabb5241    48b8ae6d83aabd7f0000    mov rax, 0x7fbdaa836dae    	[32;49m< string : '[39;49m[39;49m;[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fbdaabb524b    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb524f    498906                  mov [r14], rax                                         [39;49m
[34;49m ..              : $$  "" { token dup ";" [39;49m[33;40mstrcmp[39;49m[34;49m }  {  { dup "." strcmp } { strcat " " strcat } { strcat } if3 }  while drop location "$$" ps d .. [39;49m[32;49m
0x7fbdaabb5252    49b8307e3e1ebd550000    mov r8, 0x55bd1e3e7e30                                 [39;49m[32;49m
0x7fbdaabb525c    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaabb5266    49ffd1                  call r9                    	< String.[34;49mstrcmp[39;49m : 0x000055bd1e3e7e30[32;49m >[39;49m[39;49m
[34;49m ..       : $$  "" { token dup ";" strcmp [39;49m[33;40m}[39;49m[34;49m  {  { dup "." strcmp } { strcat " " strcat } { strcat } if3 }  while drop location "$$" ps dup ps _ .. [39;49m[32;49m
0x7fbdaabb5269    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fbdaabb526c    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m .. strcat " " strcat } { strcat } if3 }  [39;49m[33;40mwhile[39;49m[34;49m drop location "$$" ps dup ps _sh return ; [39;49m[32;49m
0x7fbdaabb5270    4885c0                  test rax, rax                                          [39;49m[32;49m
0x7fbdaabb5273    0f84a2000000            jz 0x7fbdaabb531b          	< C.[34;49m$$[39;49m+268[32;49m >[39;49m[39;49m
[34;49m  : $$  "" { token dup ";" strcmp }  {  { [39;49m[33;40mdup[39;49m[34;49m "." strcmp } { strcat " " strcat } { strcat } if3 }  while drop location "$$" ps dup ps _sh retur .. [39;49m[32;49m
0x7fbdaabb5279    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fbdaabb527c    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb5280    498906                  mov [r14], rax                                         [39;49m
[34;49m .. "" { token dup ";" strcmp }  {  { dup [39;49m[33;40m"[39;49m[34;49m." strcmp } { strcat " " strcat } { strcat } if3 }  while drop location "$$" ps dup ps _sh return ; [39;49m[32;49m
0x7fbdaabb5283    48b8b86d83aabd7f0000    mov rax, 0x7fbdaa836db8    	[32;49m< string : '[39;49m[39;49m.[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fbdaabb528d    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb5291    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  token dup ";" strcmp }  {  { dup "." [39;49m[33;40mstrcmp[39;49m[34;49m } { strcat " " strcat } { strcat } if3 }  while drop location "$$" ps dup ps _sh return ; [39;49m[32;49m
0x7fbdaabb5294    49b8307e3e1ebd550000    mov r8, 0x55bd1e3e7e30                                 [39;49m[32;49m
0x7fbdaabb529e    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaabb52a8    49ffd1                  call r9                    	< String.[34;49mstrcmp[39;49m : 0x000055bd1e3e7e30[32;49m >[39;49m[39;49m
[34;49m .. dup ";" strcmp }  {  { dup "." strcmp [39;49m[33;40m}[39;49m[34;49m { strcat " " strcat } { strcat } if3 }  while drop location "$$" ps dup ps _sh return ; [39;49m[32;49m
0x7fbdaabb52ab    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fbdaabb52ae    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m .. mp } { strcat " " strcat } { strcat } [39;49m[33;40mif3[39;49m[34;49m }  while drop location "$$" ps dup ps _sh return ; [39;49m[32;49m
0x7fbdaabb52b2    4885c0                  test rax, rax                                          [39;49m[32;49m
0x7fbdaabb52b5    0f8444000000            jz 0x7fbdaabb52ff          	< C.[34;49m$$[39;49m+240[32;49m >[39;49m[39;49m
[34;49m .. ";" strcmp }  {  { dup "." strcmp } { [39;49m[33;40mstrcat[39;49m[34;49m " " strcat } { strcat } if3 }  while drop location "$$" ps dup ps _sh return ; [39;49m[32;49m
0x7fbdaabb52bb    49b8907e3e1ebd550000    mov r8, 0x55bd1e3e7e90                                 [39;49m[32;49m
0x7fbdaabb52c5    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaabb52cf    49ffd1                  call r9                    	< String.[34;49mstrcat[39;49m : 0x000055bd1e3e7e90[32;49m >[39;49m[39;49m
[34;49m .. cmp }  {  { dup "." strcmp } { strcat [39;49m[33;40m"[39;49m[34;49m " strcat } { strcat } if3 }  while drop location "$$" ps dup ps _sh return ; [39;49m[32;49m
0x7fbdaabb52d2    48b8c26d83aabd7f0000    mov rax, 0x7fbdaa836dc2    	[32;49m< string : '[39;49m[39;49m [39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fbdaabb52dc    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb52e0    498906                  mov [r14], rax                                         [39;49m
[34;49m .. }  {  { dup "." strcmp } { strcat " " [39;49m[33;40mstrcat[39;49m[34;49m } { strcat } if3 }  while drop location "$$" ps dup ps _sh return ; [39;49m[32;49m
0x7fbdaabb52e3    49b8907e3e1ebd550000    mov r8, 0x55bd1e3e7e90                                 [39;49m[32;49m
0x7fbdaabb52ed    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaabb52f7    49ffd1                  call r9                    	< String.[34;49mstrcat[39;49m : 0x000055bd1e3e7e90[32;49m >[39;49m[39;49m
[34;49m ..  dup "." strcmp } { strcat " " strcat [39;49m[33;40m}[39;49m[34;49m { strcat } if3 }  while drop location "$$" ps dup ps _sh return ; [39;49m[32;49m
0x7fbdaabb52fa    e917000000              jmp 0x7fbdaabb5316         	< C.[34;49m$$[39;49m+263[32;49m >[39;49m[39;49m
[34;49m ..  "." strcmp } { strcat " " strcat } { [39;49m[33;40mstrcat[39;49m[34;49m } if3 }  while drop location "$$" ps dup ps _sh return ; [39;49m[32;49m
0x7fbdaabb52ff    49b8907e3e1ebd550000    mov r8, 0x55bd1e3e7e90                                 [39;49m[32;49m
0x7fbdaabb5309    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaabb5313    49ffd1                  call r9                    	< String.[34;49mstrcat[39;49m : 0x000055bd1e3e7e90[32;49m >[39;49m[39;49m
[34;49m ..  { strcat " " strcat } { strcat } if3 [39;49m[33;40m}[39;49m[34;49m  while drop location "$$" ps dup ps _sh return ; [39;49m[32;49m
0x7fbdaabb5316    e905ffffff              jmp 0x7fbdaabb5220         	< C.[34;49m$$[39;49m+17[32;49m >[39;49m[39;49m
[34;49m ..  " " strcat } { strcat } if3 }  while [39;49m[33;40mdrop[39;49m[34;49m location "$$" ps dup ps _sh return ; [39;49m[32;49m
0x7fbdaabb531b    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m .. strcat } { strcat } if3 }  while drop [39;49m[33;40mlocation[39;49m[34;49m "$$" ps dup ps _sh return ; [39;49m[32;49m
0x7fbdaabb531f    49b91f70d5aabd7f0000    mov r9, 0x7fbdaad5701f                                 [39;49m[32;49m
0x7fbdaabb5329    49ffd1                  call r9                    	< System.[34;49mlocation[39;49m : 0x00007fbdaad5701f[32;49m >[39;49m[39;49m
[34;49m .. { strcat } if3 }  while drop location [39;49m[33;40m"[39;49m[34;49m$$" ps dup ps _sh return ; [39;49m[32;49m
0x7fbdaabb532c    48b8cd6d83aabd7f0000    mov rax, 0x7fbdaa836dcd    	[32;49m< string : '[39;49m[39;49m$$[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fbdaabb5336    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb533a    498906                  mov [r14], rax                                         [39;49m
[34;49m .. cat } if3 }  while drop location "$$" [39;49m[33;40mps[39;49m[34;49m dup ps _sh return ; [39;49m[32;49m
0x7fbdaabb533d    49b97d63d5aabd7f0000    mov r9, 0x7fbdaad5637d                                 [39;49m[32;49m
0x7fbdaabb5347    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fbdaad5637d[32;49m >[39;49m[39;49m
[34;49m ..  } if3 }  while drop location "$$" ps [39;49m[33;40mdup[39;49m[34;49m ps _sh return ; [39;49m[32;49m
0x7fbdaabb534a    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fbdaabb534d    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb5351    498906                  mov [r14], rax                                         [39;49m
[34;49m .. f3 }  while drop location "$$" ps dup [39;49m[33;40mps[39;49m[34;49m _sh return ; [39;49m[32;49m
0x7fbdaabb5354    49b97d63d5aabd7f0000    mov r9, 0x7fbdaad5637d                                 [39;49m[32;49m
0x7fbdaabb535e    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fbdaad5637d[32;49m >[39;49m[39;49m
[34;49m .. }  while drop location "$$" ps dup ps [39;49m[33;40m_sh[39;49m[34;49m return ; [39;49m[32;49m
0x7fbdaabb5361    49b8b0ae3e1ebd550000    mov r8, 0x55bd1e3eaeb0                                 [39;49m[32;49m
0x7fbdaabb536b    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaabb5375    49ffd1                  call r9                    	< Shell.[34;49m_sh[39;49m : 0x000055bd1e3eaeb0[32;49m >[39;49m[39;49m
[34;49m .. op location "$$" ps dup ps _sh return [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fbdaabb5378    c3                      ret                                                    [39;49m
Word_Disassemble : word - '$$' :: codeSize = 361
Word : 0x00007fbda96076c8 :: Compiled at : 0x00007fbdaabb520f
 =============================
::> 'wdiss' was called at namespaces/test/system.csl 82.15 <::

 =============================
C_Syntax.[34;49mtestc1[39;49m <:> csl compiled word, prefix
SourceCode for C_Syntax.[34;49mtestc1[39;49m :> 
[34;49mvoid testc1 () { int tdbg = 1, tdbg2 = 2, tdbg3 = 3 ; int tdbg4 = 4, tdbg5 = 5, tdbg6 = 6 ; ps ( "\ntdbg =" ) ; p ( tdbg ) ; ps ( "\ntdbg2 =" ) ; p ( tdbg2 ) ; ps ( "\ntdbg3 =" ) ; p ( tdbg3 ) ; ps ( "\ntdbg4 =" ) ; p ( tdbg4 ) ; ps ( "\ntdbg5 =" ) ; p ( tdbg5 ) ; ps ( "\ntdbg6 =" ) ; p ( tdbg6 ) ; ps ( "\nxhii =" ) ; xhii () ; xhi0(); xhi1 () ; xhi( 4 ); xhi01 ; xhi1 ; xhi2(8) ; xhi2a ( "xhi2a =", 8 ) ; } [39;49m
Source code file location of [34;49mtestc1[39;49m : "namespaces/compiler/interpreter.csl" : 32.7 :: we are now at : namespaces/compiler/interpreter.csl : 44.19
Compiled with : optimizeOn, inlineOn, c_syntaxOn, infixOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xaabb570b -- code size = 1071 bytes
TypeSignature : 
 -----------------------------
Word :: C_Syntax.[34;49mtestc1[39;49m : definition = 0x00007fbdaabb570b : disassembly at namespaces/compiler/interpreter.csl : 44.19 :
[34;49m ..                                  void [39;49m[33;40mtestc1[39;49m[34;49m ()  { int tdbg = 1, tdbg2 = 2, tdbg3 = 3 ;  int tdbg4 = 4, tdbg5 = 5, tdbg6 = 6 ;  ps ( "\ntdb .. [39;49m[32;49m
0x7fbdaabb570b    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fbdaabb570f    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaabb5713    4981c638000000          add r14, 0x38                                          [39;49m
[34;49m ..          void testc1 ()  { int tdbg = [39;49m[33;40m1[39;49m[34;49m, tdbg2 = 2, tdbg3 = 3 ;  int tdbg4 = 4, tdbg5 = 5, tdbg6 = 6 ;  ps ( "\ntdbg =" ) ; p ( tdbg ) ;  p .. [39;49m[32;49m
0x7fbdaabb571a    48c7c001000000          mov rax, 0x1                                           [39;49m
[34;49m ..       void testc1 ()  { int tdbg = 1, [39;49m[33;40mtdbg[39;49m[34;49m2 = 2, tdbg3 = 3 ;  int tdbg4 = 4, tdbg5 = 5, tdbg6 = 6 ;  ps ( "\ntdbg =" ) ; p ( tdbg ) ;  ps ( .. [39;49m[32;49m
0x7fbdaabb5721    498d4f08                lea rcx, [r15+0x8]                                     [39;49m
[34;49m ..            void testc1 ()  { int tdbg [39;49m[33;40mstore[39;49m[34;49mtdbg2 = 2, tdbg3 = 3 ;  int tdbg4 = 4, tdbg5 = 5, tdbg6 = 6 ;  ps ( "\ntdbg =" ) ; p ( tdbg ) ;  .. [39;49m[32;49m
0x7fbdaabb5725    488901                  mov [rcx], rax                                         [39;49m
[34;49m  void testc1 ()  { int tdbg = 1, tdbg2 = [39;49m[33;40m2[39;49m[34;49m, tdbg3 = 3 ;  int tdbg4 = 4, tdbg5 = 5, tdbg6 = 6 ;  ps ( "\ntdbg =" ) ; p ( tdbg ) ;  ps ( "\ntdbg .. [39;49m[32;49m
0x7fbdaabb5728    48c7c002000000          mov rax, 0x2                                           [39;49m
[34;49m ..       void testc1 ()  { int tdbg = 1, [39;49m[33;40mtdbg2[39;49m[34;49m = 2, tdbg3 = 3 ;  int tdbg4 = 4, tdbg5 = 5, tdbg6 = 6 ;  ps ( "\ntdbg =" ) ; p ( tdbg ) ;  ps ( .. [39;49m[32;49m
0x7fbdaabb572f    498d4f10                lea rcx, [r15+0x10]                                    [39;49m
[34;49m .. void testc1 ()  { int tdbg = 1, tdbg2 [39;49m[33;40m=[39;49m[34;49m 2, tdbg3 = 3 ;  int tdbg4 = 4, tdbg5 = 5, tdbg6 = 6 ;  ps ( "\ntdbg =" ) ; p ( tdbg ) ;  ps ( "\ntd .. [39;49m[32;49m
0x7fbdaabb5733    488901                  mov [rcx], rax                                         [39;49m
[34;49m .. )  { int tdbg = 1, tdbg2 = 2, tdbg3 = [39;49m[33;40m3[39;49m[34;49m ;  int tdbg4 = 4, tdbg5 = 5, tdbg6 = 6 ;  ps ( "\ntdbg =" ) ; p ( tdbg ) ;  ps ( "\ntdbg2 =" ) ; p  .. [39;49m[32;49m
0x7fbdaabb5736    48c7c003000000          mov rax, 0x3                                           [39;49m
[34;49m .. testc1 ()  { int tdbg = 1, tdbg2 = 2, [39;49m[33;40mtdbg3[39;49m[34;49m = 3 ;  int tdbg4 = 4, tdbg5 = 5, tdbg6 = 6 ;  ps ( "\ntdbg =" ) ; p ( tdbg ) ;  ps ( "\ntdbg2 = .. [39;49m[32;49m
0x7fbdaabb573d    498d4f18                lea rcx, [r15+0x18]                                    [39;49m
[34;49m ..  ()  { int tdbg = 1, tdbg2 = 2, tdbg3 [39;49m[33;40m=[39;49m[34;49m 3 ;  int tdbg4 = 4, tdbg5 = 5, tdbg6 = 6 ;  ps ( "\ntdbg =" ) ; p ( tdbg ) ;  ps ( "\ntdbg2 =" ) ;  .. [39;49m[32;49m
0x7fbdaabb5741    488901                  mov [rcx], rax                                         [39;49m
[34;49m .. , tdbg2 = 2, tdbg3 = 3 ;  int tdbg4 = [39;49m[33;40m4[39;49m[34;49m, tdbg5 = 5, tdbg6 = 6 ;  ps ( "\ntdbg =" ) ; p ( tdbg ) ;  ps ( "\ntdbg2 =" ) ; p ( tdbg2 ) ;  ps ( .. [39;49m[32;49m
0x7fbdaabb5744    48c7c004000000          mov rax, 0x4                                           [39;49m
[34;49m .. tdbg = 1, tdbg2 = 2, tdbg3 = 3 ;  int [39;49m[33;40mtdbg4[39;49m[34;49m = 4, tdbg5 = 5, tdbg6 = 6 ;  ps ( "\ntdbg =" ) ; p ( tdbg ) ;  ps ( "\ntdbg2 =" ) ; p ( tdbg2 ) .. [39;49m[32;49m
0x7fbdaabb574b    498d4f20                lea rcx, [r15+0x20]                                    [39;49m
[34;49m ..  1, tdbg2 = 2, tdbg3 = 3 ;  int tdbg4 [39;49m[33;40m=[39;49m[34;49m 4, tdbg5 = 5, tdbg6 = 6 ;  ps ( "\ntdbg =" ) ; p ( tdbg ) ;  ps ( "\ntdbg2 =" ) ; p ( tdbg2 ) ;  ps .. [39;49m[32;49m
0x7fbdaabb574f    488901                  mov [rcx], rax                                         [39;49m
[34;49m .. , tdbg3 = 3 ;  int tdbg4 = 4, tdbg5 = [39;49m[33;40m5[39;49m[34;49m, tdbg6 = 6 ;  ps ( "\ntdbg =" ) ; p ( tdbg ) ;  ps ( "\ntdbg2 =" ) ; p ( tdbg2 ) ;  ps ( "\ntdbg3 = .. [39;49m[32;49m
0x7fbdaabb5752    48c7c005000000          mov rax, 0x5                                           [39;49m
[34;49m .. dbg2 = 2, tdbg3 = 3 ;  int tdbg4 = 4, [39;49m[33;40mtdbg5[39;49m[34;49m = 5, tdbg6 = 6 ;  ps ( "\ntdbg =" ) ; p ( tdbg ) ;  ps ( "\ntdbg2 =" ) ; p ( tdbg2 ) ;  ps ( "\ .. [39;49m[32;49m
0x7fbdaabb5759    498d4f28                lea rcx, [r15+0x28]                                    [39;49m
[34;49m ..  2, tdbg3 = 3 ;  int tdbg4 = 4, tdbg5 [39;49m[33;40m=[39;49m[34;49m 5, tdbg6 = 6 ;  ps ( "\ntdbg =" ) ; p ( tdbg ) ;  ps ( "\ntdbg2 =" ) ; p ( tdbg2 ) ;  ps ( "\ntdbg3 .. [39;49m[32;49m
0x7fbdaabb575d    488901                  mov [rcx], rax                                         [39;49m
[34;49m ..  ;  int tdbg4 = 4, tdbg5 = 5, tdbg6 = [39;49m[33;40m6[39;49m[34;49m ;  ps ( "\ntdbg =" ) ; p ( tdbg ) ;  ps ( "\ntdbg2 =" ) ; p ( tdbg2 ) ;  ps ( "\ntdbg3 =" ) ; p ( t .. [39;49m[32;49m
0x7fbdaabb5760    48c7c006000000          mov rax, 0x6                                           [39;49m
[34;49m .. dbg3 = 3 ;  int tdbg4 = 4, tdbg5 = 5, [39;49m[33;40mtdbg6[39;49m[34;49m = 6 ;  ps ( "\ntdbg =" ) ; p ( tdbg ) ;  ps ( "\ntdbg2 =" ) ; p ( tdbg2 ) ;  ps ( "\ntdbg3 =" ) .. [39;49m[32;49m
0x7fbdaabb5767    498d4f30                lea rcx, [r15+0x30]                                    [39;49m
[34;49m ..  3 ;  int tdbg4 = 4, tdbg5 = 5, tdbg6 [39;49m[33;40m=[39;49m[34;49m 6 ;  ps ( "\ntdbg =" ) ; p ( tdbg ) ;  ps ( "\ntdbg2 =" ) ; p ( tdbg2 ) ;  ps ( "\ntdbg3 =" ) ; p ( .. [39;49m[32;49m
0x7fbdaabb576b    488901                  mov [rcx], rax                                         [39;49m
[34;49m .. bg4 = 4, tdbg5 = 5, tdbg6 = 6 ;  ps ( [39;49m[33;40m"[39;49m[34;49m\ntdbg =" ) ; p ( tdbg ) ;  ps ( "\ntdbg2 =" ) ; p ( tdbg2 ) ;  ps ( "\ntdbg3 =" ) ; p ( tdbg3 ) ; p .. [39;49m[32;49m
0x7fbdaabb576e    48b8587183aabd7f0000    mov rax, 0x7fbdaa837158    	[32;49m< string : '[39;49m[39;49m\ntdbg =[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fbdaabb5778    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb577c    498906                  mov [r14], rax                                         [39;49m
[34;49m .. nt tdbg4 = 4, tdbg5 = 5, tdbg6 = 6 ;  [39;49m[33;40mps[39;49m[34;49m ( "\ntdbg =" ) ; p ( tdbg ) ;  ps ( "\ntdbg2 =" ) ; p ( tdbg2 ) ;  ps ( "\ntdbg3 =" ) ; p ( tdbg3  .. [39;49m[32;49m
0x7fbdaabb577f    49b97d63d5aabd7f0000    mov r9, 0x7fbdaad5637d                                 [39;49m[32;49m
0x7fbdaabb5789    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fbdaad5637d[32;49m >[39;49m[39;49m
[34;49m ..  tdbg6 = 6 ;  ps ( "\ntdbg =" ) ; p ( [39;49m[33;40mtdbg[39;49m[34;49m ) ;  ps ( "\ntdbg2 =" ) ; p ( tdbg2 ) ;  ps ( "\ntdbg3 =" ) ; p ( tdbg3 ) ; ps ( "\ntdbg4 =" ) ; .. [39;49m[32;49m
0x7fbdaabb578c    498b4708                mov rax, [r15+0x8]                                     [39;49m[32;49m
0x7fbdaabb5790    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb5794    498906                  mov [r14], rax                                         [39;49m
[34;49m .. = 5, tdbg6 = 6 ;  ps ( "\ntdbg =" ) ; [39;49m[33;40mp[39;49m[34;49m ( tdbg ) ;  ps ( "\ntdbg2 =" ) ; p ( tdbg2 ) ;  ps ( "\ntdbg3 =" ) ; p ( tdbg3 ) ; ps ( "\ntdbg4 =" .. [39;49m[32;49m
0x7fbdaabb5797    49b9d965d5aabd7f0000    mov r9, 0x7fbdaad565d9                                 [39;49m[32;49m
0x7fbdaabb57a1    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fbdaad565d9[32;49m >[39;49m[39;49m
[34;49m .. s ( "\ntdbg =" ) ; p ( tdbg ) ;  ps ( [39;49m[33;40m"[39;49m[34;49m\ntdbg2 =" ) ; p ( tdbg2 ) ;  ps ( "\ntdbg3 =" ) ; p ( tdbg3 ) ; ps ( "\ntdbg4 =" ) ; p ( tdbg4 ) ;  .. [39;49m[32;49m
0x7fbdaabb57a4    48b8757183aabd7f0000    mov rax, 0x7fbdaa837175    	[32;49m< string : '[39;49m[39;49m\ntdbg2 =[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fbdaabb57ae    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb57b2    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  ;  ps ( "\ntdbg =" ) ; p ( tdbg ) ;  [39;49m[33;40mps[39;49m[34;49m ( "\ntdbg2 =" ) ; p ( tdbg2 ) ;  ps ( "\ntdbg3 =" ) ; p ( tdbg3 ) ; ps ( "\ntdbg4 =" ) ; p ( tdbg4 .. [39;49m[32;49m
0x7fbdaabb57b5    49b97d63d5aabd7f0000    mov r9, 0x7fbdaad5637d                                 [39;49m[32;49m
0x7fbdaabb57bf    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fbdaad5637d[32;49m >[39;49m[39;49m
[34;49m ..  ( tdbg ) ;  ps ( "\ntdbg2 =" ) ; p ( [39;49m[33;40mtdbg2[39;49m[34;49m ) ;  ps ( "\ntdbg3 =" ) ; p ( tdbg3 ) ; ps ( "\ntdbg4 =" ) ; p ( tdbg4 ) ;  ps ( "\ntdbg5 =" )  .. [39;49m[32;49m
0x7fbdaabb57c2    498b4710                mov rax, [r15+0x10]                                    [39;49m[32;49m
0x7fbdaabb57c6    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb57ca    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  ; p ( tdbg ) ;  ps ( "\ntdbg2 =" ) ; [39;49m[33;40mp[39;49m[34;49m ( tdbg2 ) ;  ps ( "\ntdbg3 =" ) ; p ( tdbg3 ) ; ps ( "\ntdbg4 =" ) ; p ( tdbg4 ) ;  ps ( "\ntdbg5 = .. [39;49m[32;49m
0x7fbdaabb57cd    49b9d965d5aabd7f0000    mov r9, 0x7fbdaad565d9                                 [39;49m[32;49m
0x7fbdaabb57d7    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fbdaad565d9[32;49m >[39;49m[39;49m
[34;49m .. ( "\ntdbg2 =" ) ; p ( tdbg2 ) ;  ps ( [39;49m[33;40m"[39;49m[34;49m\ntdbg3 =" ) ; p ( tdbg3 ) ; ps ( "\ntdbg4 =" ) ; p ( tdbg4 ) ;  ps ( "\ntdbg5 =" ) ; p ( tdbg5 ) ;  .. [39;49m[32;49m
0x7fbdaabb57da    48b8947183aabd7f0000    mov rax, 0x7fbdaa837194    	[32;49m< string : '[39;49m[39;49m\ntdbg3 =[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fbdaabb57e4    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb57e8    498906                  mov [r14], rax                                         [39;49m
[34;49m ..   ps ( "\ntdbg2 =" ) ; p ( tdbg2 ) ;  [39;49m[33;40mps[39;49m[34;49m ( "\ntdbg3 =" ) ; p ( tdbg3 ) ; ps ( "\ntdbg4 =" ) ; p ( tdbg4 ) ;  ps ( "\ntdbg5 =" ) ; p ( tdbg5 .. [39;49m[32;49m
0x7fbdaabb57eb    49b97d63d5aabd7f0000    mov r9, 0x7fbdaad5637d                                 [39;49m[32;49m
0x7fbdaabb57f5    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fbdaad5637d[32;49m >[39;49m[39;49m
[34;49m .. ( tdbg2 ) ;  ps ( "\ntdbg3 =" ) ; p ( [39;49m[33;40mtdbg3[39;49m[34;49m ) ; ps ( "\ntdbg4 =" ) ; p ( tdbg4 ) ;  ps ( "\ntdbg5 =" ) ; p ( tdbg5 ) ;  ps ( "\ntdbg6 =" )  .. [39;49m[32;49m
0x7fbdaabb57f8    498b4718                mov rax, [r15+0x18]                                    [39;49m[32;49m
0x7fbdaabb57fc    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb5800    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ; p ( tdbg2 ) ;  ps ( "\ntdbg3 =" ) ; [39;49m[33;40mp[39;49m[34;49m ( tdbg3 ) ; ps ( "\ntdbg4 =" ) ; p ( tdbg4 ) ;  ps ( "\ntdbg5 =" ) ; p ( tdbg5 ) ;  ps ( "\ntdbg6 = .. [39;49m[32;49m
0x7fbdaabb5803    49b9d965d5aabd7f0000    mov r9, 0x7fbdaad565d9                                 [39;49m[32;49m
0x7fbdaabb580d    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fbdaad565d9[32;49m >[39;49m[39;49m
[34;49m ..  ( "\ntdbg3 =" ) ; p ( tdbg3 ) ; ps ( [39;49m[33;40m"[39;49m[34;49m\ntdbg4 =" ) ; p ( tdbg4 ) ;  ps ( "\ntdbg5 =" ) ; p ( tdbg5 ) ;  ps ( "\ntdbg6 =" ) ; p ( tdbg6 ) ; .. [39;49m[32;49m
0x7fbdaabb5810    48b8b37183aabd7f0000    mov rax, 0x7fbdaa8371b3    	[32;49m< string : '[39;49m[39;49m\ntdbg4 =[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fbdaabb581a    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb581e    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ;  ps ( "\ntdbg3 =" ) ; p ( tdbg3 ) ; [39;49m[33;40mps[39;49m[34;49m ( "\ntdbg4 =" ) ; p ( tdbg4 ) ;  ps ( "\ntdbg5 =" ) ; p ( tdbg5 ) ;  ps ( "\ntdbg6 =" ) ; p ( tdbg .. [39;49m[32;49m
0x7fbdaabb5821    49b97d63d5aabd7f0000    mov r9, 0x7fbdaad5637d                                 [39;49m[32;49m
0x7fbdaabb582b    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fbdaad5637d[32;49m >[39;49m[39;49m
[34;49m ..  ( tdbg3 ) ; ps ( "\ntdbg4 =" ) ; p ( [39;49m[33;40mtdbg4[39;49m[34;49m ) ;  ps ( "\ntdbg5 =" ) ; p ( tdbg5 ) ;  ps ( "\ntdbg6 =" ) ; p ( tdbg6 ) ; ps ( "\nxhii =" ) ; .. [39;49m[32;49m
0x7fbdaabb582e    498b4720                mov rax, [r15+0x20]                                    [39;49m[32;49m
0x7fbdaabb5832    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb5836    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  ; p ( tdbg3 ) ; ps ( "\ntdbg4 =" ) ; [39;49m[33;40mp[39;49m[34;49m ( tdbg4 ) ;  ps ( "\ntdbg5 =" ) ; p ( tdbg5 ) ;  ps ( "\ntdbg6 =" ) ; p ( tdbg6 ) ; ps ( "\nxhii =" .. [39;49m[32;49m
0x7fbdaabb5839    49b9d965d5aabd7f0000    mov r9, 0x7fbdaad565d9                                 [39;49m[32;49m
0x7fbdaabb5843    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fbdaad565d9[32;49m >[39;49m[39;49m
[34;49m .. ( "\ntdbg4 =" ) ; p ( tdbg4 ) ;  ps ( [39;49m[33;40m"[39;49m[34;49m\ntdbg5 =" ) ; p ( tdbg5 ) ;  ps ( "\ntdbg6 =" ) ; p ( tdbg6 ) ; ps ( "\nxhii =" ) ; xhii () ; xhi0( .. [39;49m[32;49m
0x7fbdaabb5846    48b8d27183aabd7f0000    mov rax, 0x7fbdaa8371d2    	[32;49m< string : '[39;49m[39;49m\ntdbg5 =[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fbdaabb5850    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb5854    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ; ps ( "\ntdbg4 =" ) ; p ( tdbg4 ) ;  [39;49m[33;40mps[39;49m[34;49m ( "\ntdbg5 =" ) ; p ( tdbg5 ) ;  ps ( "\ntdbg6 =" ) ; p ( tdbg6 ) ; ps ( "\nxhii =" ) ; xhii () ;  .. [39;49m[32;49m
0x7fbdaabb5857    49b97d63d5aabd7f0000    mov r9, 0x7fbdaad5637d                                 [39;49m[32;49m
0x7fbdaabb5861    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fbdaad5637d[32;49m >[39;49m[39;49m
[34;49m .. ( tdbg4 ) ;  ps ( "\ntdbg5 =" ) ; p ( [39;49m[33;40mtdbg5[39;49m[34;49m ) ;  ps ( "\ntdbg6 =" ) ; p ( tdbg6 ) ; ps ( "\nxhii =" ) ; xhii () ; xhi0(); xhi1 () ; xhi( 4  .. [39;49m[32;49m
0x7fbdaabb5864    498b4728                mov rax, [r15+0x28]                                    [39;49m[32;49m
0x7fbdaabb5868    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb586c    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ; p ( tdbg4 ) ;  ps ( "\ntdbg5 =" ) ; [39;49m[33;40mp[39;49m[34;49m ( tdbg5 ) ;  ps ( "\ntdbg6 =" ) ; p ( tdbg6 ) ; ps ( "\nxhii =" ) ; xhii () ; xhi0(); xhi1 () ; xhi .. [39;49m[32;49m
0x7fbdaabb586f    49b9d965d5aabd7f0000    mov r9, 0x7fbdaad565d9                                 [39;49m[32;49m
0x7fbdaabb5879    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fbdaad565d9[32;49m >[39;49m[39;49m
[34;49m .. ( "\ntdbg5 =" ) ; p ( tdbg5 ) ;  ps ( [39;49m[33;40m"[39;49m[34;49m\ntdbg6 =" ) ; p ( tdbg6 ) ; ps ( "\nxhii =" ) ; xhii () ; xhi0(); xhi1 () ; xhi( 4 ); xhi01 ; xhi1  .. [39;49m[32;49m
0x7fbdaabb587c    48b8f17183aabd7f0000    mov rax, 0x7fbdaa8371f1    	[32;49m< string : '[39;49m[39;49m\ntdbg6 =[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fbdaabb5886    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb588a    498906                  mov [r14], rax                                         [39;49m
[34;49m ..   ps ( "\ntdbg5 =" ) ; p ( tdbg5 ) ;  [39;49m[33;40mps[39;49m[34;49m ( "\ntdbg6 =" ) ; p ( tdbg6 ) ; ps ( "\nxhii =" ) ; xhii () ; xhi0(); xhi1 () ; xhi( 4 ); xhi01 ;  .. [39;49m[32;49m
0x7fbdaabb588d    49b97d63d5aabd7f0000    mov r9, 0x7fbdaad5637d                                 [39;49m[32;49m
0x7fbdaabb5897    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fbdaad5637d[32;49m >[39;49m[39;49m
[34;49m .. ( tdbg5 ) ;  ps ( "\ntdbg6 =" ) ; p ( [39;49m[33;40mtdbg6[39;49m[34;49m ) ; ps ( "\nxhii =" ) ; xhii () ; xhi0(); xhi1 () ; xhi( 4 ); xhi01 ; xhi1 ; xhi2(8) ; xhi2a (  .. [39;49m[32;49m
0x7fbdaabb589a    498b4730                mov rax, [r15+0x30]                                    [39;49m[32;49m
0x7fbdaabb589e    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb58a2    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ; p ( tdbg5 ) ;  ps ( "\ntdbg6 =" ) ; [39;49m[33;40mp[39;49m[34;49m ( tdbg6 ) ; ps ( "\nxhii =" ) ; xhii () ; xhi0(); xhi1 () ; xhi( 4 ); xhi01 ; xhi1 ; xhi2(8) ; xhi2 .. [39;49m[32;49m
0x7fbdaabb58a5    49b9d965d5aabd7f0000    mov r9, 0x7fbdaad565d9                                 [39;49m[32;49m
0x7fbdaabb58af    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fbdaad565d9[32;49m >[39;49m[39;49m
[34;49m ..  ( "\ntdbg6 =" ) ; p ( tdbg6 ) ; ps ( [39;49m[33;40m"[39;49m[34;49m\nxhii =" ) ; xhii () ; xhi0(); xhi1 () ; xhi( 4 ); xhi01 ; xhi1 ; xhi2(8) ; xhi2a ( "xhi2a =", 8 )  .. [39;49m[32;49m
0x7fbdaabb58b2    48b80f7283aabd7f0000    mov rax, 0x7fbdaa83720f    	[32;49m< string : '[39;49m[39;49m\nxhii =[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fbdaabb58bc    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb58c0    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ;  ps ( "\ntdbg6 =" ) ; p ( tdbg6 ) ; [39;49m[33;40mps[39;49m[34;49m ( "\nxhii =" ) ; xhii () ; xhi0(); xhi1 () ; xhi( 4 ); xhi01 ; xhi1 ; xhi2(8) ; xhi2a ( "xhi2a =", .. [39;49m[32;49m
0x7fbdaabb58c3    49b97d63d5aabd7f0000    mov r9, 0x7fbdaad5637d                                 [39;49m[32;49m
0x7fbdaabb58cd    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fbdaad5637d[32;49m >[39;49m[39;49m
[34;49m .. ) ; p ( tdbg6 ) ; ps ( "\nxhii =" ) ; [39;49m[33;40mxhii[39;49m[34;49m () ; xhi0(); xhi1 () ; xhi( 4 ); xhi01 ; xhi1 ; xhi2(8) ; xhi2a ( "xhi2a =", 8 ) ;  }  .. [39;49m[32;49m
0x7fbdaabb58d0    48c7c003000000          mov rax, 0x3                                           [39;49m[32;49m
0x7fbdaabb58d7    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb58db    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaabb58de    49b9d965d5aabd7f0000    mov r9, 0x7fbdaad565d9                                 [39;49m[32;49m
0x7fbdaabb58e8    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fbdaad565d9[32;49m >[39;49m[39;49m
[34;49m .. bg6 ) ; ps ( "\nxhii =" ) ; xhii () ; [39;49m[33;40mxhi0[39;49m[34;49m(); xhi1 () ; xhi( 4 ); xhi01 ; xhi1 ; xhi2(8) ; xhi2a ( "xhi2a =", 8 ) ;  }  .. [39;49m[32;49m
0x7fbdaabb58eb    48c7c003000000          mov rax, 0x3                                           [39;49m[32;49m
0x7fbdaabb58f2    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb58f6    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaabb58f9    49b9d965d5aabd7f0000    mov r9, 0x7fbdaad565d9                                 [39;49m[32;49m
0x7fbdaabb5903    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fbdaad565d9[32;49m >[39;49m[39;49m
[34;49m .. ps ( "\nxhii =" ) ; xhii () ; xhi0(); [39;49m[33;40mxhi1[39;49m[34;49m () ; xhi( 4 ); xhi01 ; xhi1 ; xhi2(8) ; xhi2a ( "xhi2a =", 8 ) ;  }  .. [39;49m[32;49m
0x7fbdaabb5906    48c7c003000000          mov rax, 0x3                                           [39;49m[32;49m
0x7fbdaabb590d    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb5911    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaabb5914    49b9d965d5aabd7f0000    mov r9, 0x7fbdaad565d9                                 [39;49m[32;49m
0x7fbdaabb591e    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fbdaad565d9[32;49m >[39;49m[39;49m
[34;49m ..  ) ; xhii () ; xhi0(); xhi1 () ; xhi( [39;49m[33;40m4[39;49m[34;49m ); xhi01 ; xhi1 ; xhi2(8) ; xhi2a ( "xhi2a =", 8 ) ;  }  .. [39;49m[32;49m
0x7fbdaabb5921    48c7c004000000          mov rax, 0x4                                           [39;49m[32;49m
0x7fbdaabb5928    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb592c    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ii =" ) ; xhii () ; xhi0(); xhi1 () ; [39;49m[33;40mxhi[39;49m[34;49m( 4 ); xhi01 ; xhi1 ; xhi2(8) ; xhi2a ( "xhi2a =", 8 ) ;  }  .. [39;49m[32;49m
0x7fbdaabb592f    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fbdaabb5933    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaabb5937    4981c608000000          add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb593e    48b8b97083aabd7f0000    mov rax, 0x7fbdaa8370b9    	[32;49m< string : '[39;49m[39;49m\nxhi = [39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fbdaabb5948    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb594c    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaabb594f    49b97d63d5aabd7f0000    mov r9, 0x7fbdaad5637d                                 [39;49m[32;49m
0x7fbdaabb5959    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fbdaad5637d[32;49m >[39;49m[39;49m[32;49m
0x7fbdaabb595c    48c7c003000000          mov rax, 0x3                                           [39;49m[32;49m
0x7fbdaabb5963    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaabb5967    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fbdaabb596a    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb596e    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaabb5971    49b9d965d5aabd7f0000    mov r9, 0x7fbdaad565d9                                 [39;49m[32;49m
0x7fbdaabb597b    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fbdaad565d9[32;49m >[39;49m[39;49m[32;49m
0x7fbdaabb597e    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaabb5982    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaabb5986    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m .. xhii () ; xhi0(); xhi1 () ; xhi( 4 ); [39;49m[33;40mxhi01[39;49m[34;49m ; xhi1 ; xhi2(8) ; xhi2a ( "xhi2a =", 8 ) ;  }  .. [39;49m[32;49m
0x7fbdaabb598a    48b81b6f83aabd7f0000    mov rax, 0x7fbdaa836f1b    	[32;49m< string : '[39;49m[39;49mxhi1 =[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fbdaabb5994    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb5998    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaabb599b    49b8e0903e1ebd550000    mov r8, 0x55bd1e3e90e0                                 [39;49m[32;49m
0x7fbdaabb59a5    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaabb59af    49ffd1                  call r9                    	< Io.[34;49mnewline[39;49m : 0x000055bd1e3e90e0[32;49m >[39;49m[39;49m[32;49m
0x7fbdaabb59b2    49b97d63d5aabd7f0000    mov r9, 0x7fbdaad5637d                                 [39;49m[32;49m
0x7fbdaabb59bc    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fbdaad5637d[32;49m >[39;49m[39;49m
[34;49m .. ; xhi0(); xhi1 () ; xhi( 4 ); xhi01 ; [39;49m[33;40mxhi1[39;49m[34;49m ; xhi2(8) ; xhi2a ( "xhi2a =", 8 ) ;  }  .. [39;49m[32;49m
0x7fbdaabb59bf    48c7c003000000          mov rax, 0x3                                           [39;49m[32;49m
0x7fbdaabb59c6    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb59ca    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaabb59cd    49b9d965d5aabd7f0000    mov r9, 0x7fbdaad565d9                                 [39;49m[32;49m
0x7fbdaabb59d7    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fbdaad565d9[32;49m >[39;49m[39;49m
[34;49m .. i1 () ; xhi( 4 ); xhi01 ; xhi1 ; xhi2([39;49m[33;40m8[39;49m[34;49m) ; xhi2a ( "xhi2a =", 8 ) ;  }  .. [39;49m[32;49m
0x7fbdaabb59da    48c7c008000000          mov rax, 0x8                                           [39;49m[32;49m
0x7fbdaabb59e1    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb59e5    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ); xhi1 () ; xhi( 4 ); xhi01 ; xhi1 ; [39;49m[33;40mxhi2[39;49m[34;49m(8) ; xhi2a ( "xhi2a =", 8 ) ;  }  .. [39;49m[32;49m
0x7fbdaabb59e8    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fbdaabb59ec    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaabb59f0    4981c608000000          add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb59f7    48b81b6f83aabd7f0000    mov rax, 0x7fbdaa836f1b    	[32;49m< string : '[39;49m[39;49mxhi1 =[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fbdaabb5a01    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb5a05    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaabb5a08    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fbdaabb5a0c    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaabb5a10    4981c608000000          add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb5a17    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaabb5a1b    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb5a1f    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaabb5a22    49b8e0903e1ebd550000    mov r8, 0x55bd1e3e90e0                                 [39;49m[32;49m
0x7fbdaabb5a2c    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaabb5a36    49ffd1                  call r9                    	< Io.[34;49mnewline[39;49m : 0x000055bd1e3e90e0[32;49m >[39;49m[39;49m[32;49m
0x7fbdaabb5a39    49b97d63d5aabd7f0000    mov r9, 0x7fbdaad5637d                                 [39;49m[32;49m
0x7fbdaabb5a43    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fbdaad5637d[32;49m >[39;49m[39;49m[32;49m
0x7fbdaabb5a46    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaabb5a4a    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaabb5a4e    4983ee08                sub r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb5a52    48c7c003000000          mov rax, 0x3                                           [39;49m[32;49m
0x7fbdaabb5a59    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaabb5a5d    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fbdaabb5a60    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb5a64    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaabb5a67    49b9d965d5aabd7f0000    mov r9, 0x7fbdaad565d9                                 [39;49m[32;49m
0x7fbdaabb5a71    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fbdaad565d9[32;49m >[39;49m[39;49m[32;49m
0x7fbdaabb5a74    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaabb5a78    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaabb5a7c    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m .. 4 ); xhi01 ; xhi1 ; xhi2(8) ; xhi2a ( [39;49m[33;40m"[39;49m[34;49mxhi2a =", 8 ) ;  }  .. [39;49m[32;49m
0x7fbdaabb5a80    48b82f7283aabd7f0000    mov rax, 0x7fbdaa83722f    	[32;49m< string : '[39;49m[39;49mxhi2a =[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fbdaabb5a8a    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb5a8e    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ; xhi1 ; xhi2(8) ; xhi2a ( "xhi2a =", [39;49m[33;40m8[39;49m[34;49m ) ;  }  .. [39;49m[32;49m
0x7fbdaabb5a91    48c7c008000000          mov rax, 0x8                                           [39;49m[32;49m
0x7fbdaabb5a98    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb5a9c    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  ; xhi( 4 ); xhi01 ; xhi1 ; xhi2(8) ; [39;49m[33;40mxhi2a[39;49m[34;49m ( "xhi2a =", 8 ) ;  }  .. [39;49m[32;49m
0x7fbdaabb5a9f    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fbdaabb5aa3    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaabb5aa7    4981c608000000          add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb5aae    498b47f0                mov rax, [r15-0x10]                                    [39;49m[32;49m
0x7fbdaabb5ab2    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb5ab6    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaabb5ab9    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fbdaabb5abd    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaabb5ac1    4981c608000000          add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb5ac8    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaabb5acc    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb5ad0    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaabb5ad3    49b8e0903e1ebd550000    mov r8, 0x55bd1e3e90e0                                 [39;49m[32;49m
0x7fbdaabb5add    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaabb5ae7    49ffd1                  call r9                    	< Io.[34;49mnewline[39;49m : 0x000055bd1e3e90e0[32;49m >[39;49m[39;49m[32;49m
0x7fbdaabb5aea    49b97d63d5aabd7f0000    mov r9, 0x7fbdaad5637d                                 [39;49m[32;49m
0x7fbdaabb5af4    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fbdaad5637d[32;49m >[39;49m[39;49m[32;49m
0x7fbdaabb5af7    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaabb5afb    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaabb5aff    4983ee08                sub r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb5b03    48c7c003000000          mov rax, 0x3                                           [39;49m[32;49m
0x7fbdaabb5b0a    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaabb5b0e    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fbdaabb5b11    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb5b15    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaabb5b18    49b9d965d5aabd7f0000    mov r9, 0x7fbdaad565d9                                 [39;49m[32;49m
0x7fbdaabb5b22    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fbdaad565d9[32;49m >[39;49m[39;49m[32;49m
0x7fbdaabb5b25    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaabb5b29    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaabb5b2d    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m .. ; xhi2(8) ; xhi2a ( "xhi2a =", 8 ) ;  [39;49m[33;40m}[39;49m[34;49m  .. [39;49m[32;49m
0x7fbdaabb5b31    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaabb5b35    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaabb5b39    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'testc1' :: codeSize = 1070
Word : 0x00007fbda9611860 :: Compiled at : 0x00007fbdaabb570b
 =============================
::> 'wdiss' was called at namespaces/compiler/interpreter.csl 44.19 <::
 
tdbg = 1 
tdbg2 = 2 
tdbg3 = 3 
tdbg4 = 4 
tdbg5 = 5 
tdbg6 = 6 
xhii = 3 3 3 
xhi =  7
 xhi1 = 3
 xhi1 = 11
 xhi2a = 11
 =============================
C_Syntax.[34;49minterpret2[39;49m <:> csl compiled word
SourceCode for C_Syntax.[34;49minterpret2[39;49m :> 
[34;49mvoid interpret2 ( | atoken aword ) { testc1 () ; nl tab () ; ps ( "interpret2 :> " ) ; nl while ( 1 ) { atoken = token () ; printf ( "\n\tinterpret2 : token = %s", atoken ) ; if ( ! ( strcmp ( atoken, "i2halt" ) ) ) { printf ( "\n\tinterpret2 exiting..." ) ; return } else { aword = tokenToWord ( atoken ) ; doWord ( aword ) ; } } } [39;49m
Source code file location of [34;49minterpret2[39;49m : "namespaces/compiler/interpreter.csl" : 76.11 :: we are now at : namespaces/compiler/interpreter.csl : 101.24
Compiled with : optimizeOn, inlineOn, c_syntaxOn, infixOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xaabb5b3f -- code size = 458 bytes
TypeSignature : 
 -----------------------------
Word :: C_Syntax.[34;49minterpret2[39;49m : definition = 0x00007fbdaabb5b3f : disassembly at namespaces/compiler/interpreter.csl : 101.24 :
[34;49m ..                                  void [39;49m[33;40minterpret2[39;49m[34;49m ( | atoken aword )  { testc1 () ; nl tab () ; ps ( "interpret2 :> " ) ; nl while ( 1 ) {   .. [39;49m[32;49m
0x7fbdaabb5b3f    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fbdaabb5b43    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaabb5b47    4981c618000000          add r14, 0x18                                          [39;49m
[34;49m .. void interpret2 ( | atoken aword )  { [39;49m[33;40mtestc1[39;49m[34;49m () ; nl tab () ; ps ( "interpret2 :> " ) ; nl while ( 1 ) {  atoken = token () ;  printf ( "\n .. [39;49m[32;49m
0x7fbdaabb5b4e    49b90b57bbaabd7f0000    mov r9, 0x7fbdaabb570b                                 [39;49m[32;49m
0x7fbdaabb5b58    49ffd1                  call r9                    	< C_Syntax.[34;49mtestc1[39;49m : 0x00007fbdaabb570b[32;49m >[39;49m[39;49m
[34;49m .. et2 ( | atoken aword )  { testc1 () ; [39;49m[33;40mnl[39;49m[34;49m tab () ; ps ( "interpret2 :> " ) ; nl while ( 1 ) {  atoken = token () ;  printf ( "\n\tinterpret2 .. [39;49m[32;49m
0x7fbdaabb5b5b    49b8e0903e1ebd550000    mov r8, 0x55bd1e3e90e0                                 [39;49m[32;49m
0x7fbdaabb5b65    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaabb5b6f    49ffd1                  call r9                    	< Io.[34;49mnewline[39;49m : 0x000055bd1e3e90e0[32;49m >[39;49m[39;49m
[34;49m ..  ( | atoken aword )  { testc1 () ; nl [39;49m[33;40mtab[39;49m[34;49m () ; ps ( "interpret2 :> " ) ; nl while ( 1 ) {  atoken = token () ;  printf ( "\n\tinterpret2 :  .. [39;49m[32;49m
0x7fbdaabb5b72    49b810913e1ebd550000    mov r8, 0x55bd1e3e9110                                 [39;49m[32;49m
0x7fbdaabb5b7c    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaabb5b86    49ffd1                  call r9                    	< Io.[34;49mtab[39;49m : 0x000055bd1e3e9110[32;49m >[39;49m[39;49m
[34;49m .. ord )  { testc1 () ; nl tab () ; ps ( [39;49m[33;40m"[39;49m[34;49minterpret2 :> " ) ; nl while ( 1 ) {  atoken = token () ;  printf ( "\n\tinterpret2 : token = %s", a .. [39;49m[32;49m
0x7fbdaabb5b89    48b81c7483aabd7f0000    mov rax, 0x7fbdaa83741c    	[32;49m< string : '[39;49m[39;49minterpret2 :> [39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fbdaabb5b93    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb5b97    498906                  mov [r14], rax                                         [39;49m
[34;49m .. en aword )  { testc1 () ; nl tab () ; [39;49m[33;40mps[39;49m[34;49m ( "interpret2 :> " ) ; nl while ( 1 ) {  atoken = token () ;  printf ( "\n\tinterpret2 : token = % .. [39;49m[32;49m
0x7fbdaabb5b9a    49b97d63d5aabd7f0000    mov r9, 0x7fbdaad5637d                                 [39;49m[32;49m
0x7fbdaabb5ba4    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fbdaad5637d[32;49m >[39;49m[39;49m
[34;49m .. nl tab () ; ps ( "interpret2 :> " ) ; [39;49m[33;40mnl[39;49m[34;49m while ( 1 ) {  atoken = token () ;  printf ( "\n\tinterpret2 : token = %s", atoken ) ;  if ( ! ( s .. [39;49m[32;49m
0x7fbdaabb5ba7    49b8e0903e1ebd550000    mov r8, 0x55bd1e3e90e0                                 [39;49m[32;49m
0x7fbdaabb5bb1    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaabb5bbb    49ffd1                  call r9                    	< Io.[34;49mnewline[39;49m : 0x000055bd1e3e90e0[32;49m >[39;49m[39;49m
[34;49m ..  ; ps ( "interpret2 :> " ) ; nl while [39;49m[33;40m([39;49m[34;49m 1 ) {  atoken = token () ;  printf ( "\n\tinterpret2 : token = %s", atoken ) ;  if ( ! ( strcmp ( a .. [39;49m[32;49m
0x7fbdaabb5bbe    48c7c001000000          mov rax, 0x1                                           [39;49m
[34;49m .. ord ( atoken ) ; doWord ( aword ) ; } [39;49m[33;40m}[39;49m[34;49m }  .. [39;49m[32;49m
0x7fbdaabb5bc5    4885c0                  test rax, rax                                          [39;49m[32;49m
0x7fbdaabb5bc8    0f8432010000            jz 0x7fbdaabb5d00          	< C_Syntax.[34;49minterpret2[39;49m+449[32;49m >[39;49m[39;49m
[34;49m .. 2 :> " ) ; nl while ( 1 ) {  atoken = [39;49m[33;40mtoken[39;49m[34;49m () ;  printf ( "\n\tinterpret2 : token = %s", atoken ) ;  if ( ! ( strcmp ( atoken, "i2halt" )  .. [39;49m[32;49m
0x7fbdaabb5bce    49b8f0953e1ebd550000    mov r8, 0x55bd1e3e95f0                                 [39;49m[32;49m
0x7fbdaabb5bd8    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaabb5be2    49ffd1                  call r9                    	< Compiler.[34;49mtoken[39;49m : 0x000055bd1e3e95f0[32;49m >[39;49m[39;49m
[34;49m .. interpret2 :> " ) ; nl while ( 1 ) {  [39;49m[33;40matoken[39;49m[34;49m = token () ;  printf ( "\n\tinterpret2 : token = %s", atoken ) ;  if ( ! ( strcmp ( atoken, "i .. [39;49m[32;49m
0x7fbdaabb5be5    498d4708                lea rax, [r15+0x8]                                     [39;49m[32;49m
0x7fbdaabb5be9    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fbdaabb5bec    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fbdaabb5bef    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m .. et2 :> " ) ; nl while ( 1 ) {  atoken [39;49m[33;40m=[39;49m[34;49m token () ;  printf ( "\n\tinterpret2 : token = %s", atoken ) ;  if ( ! ( strcmp ( atoken, "i2halt"  .. [39;49m[32;49m
0x7fbdaabb5bf3    488901                  mov [rcx], rax                                         [39;49m
[34;49m ..  1 ) {  atoken = token () ;  printf ( [39;49m[33;40m"\n\tinterpret2 : token = %s"[39;49m[34;49m, atoken ) ;  if ( ! ( strcmp ( atoken, "i2halt" ) ) )  {  printf ( "\n\ .. [39;49m[32;49m
0x7fbdaabb5bf6    48b888ad27a9bd7f0000    mov rax, 0x7fbda927ad88    	[32;49m< string : '[39;49m[39;49m\n\tinterpret2 : token = %s[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fbdaabb5c00    488bf8                  mov rdi, rax                                           [39;49m
[34;49m .. intf ( "\n\tinterpret2 : token = %s", [39;49m[33;40matoken[39;49m[34;49m ) ;  if ( ! ( strcmp ( atoken, "i2halt" ) ) )  {  printf ( "\n\tinterpret2 exiting..." ) ; ret .. [39;49m[32;49m
0x7fbdaabb5c03    498b4708                mov rax, [r15+0x8]                                     [39;49m[32;49m
0x7fbdaabb5c07    488bf0                  mov rsi, rax                                           [39;49m[32;49m
0x7fbdaabb5c0a    48c7c002000000          mov rax, 0x2                                           [39;49m
[34;49m .. l while ( 1 ) {  atoken = token () ;  [39;49m[33;40mprintf[39;49m[34;49m ( "\n\tinterpret2 : token = %s", atoken ) ;  if ( ! ( strcmp ( atoken, "i2halt" ) ) )  {  prin .. [39;49m[32;49m
0x7fbdaabb5c11    49b810a43a1ebd550000    mov r8, 0x55bd1e3aa410                                 [39;49m[32;49m
0x7fbdaabb5c1b    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaabb5c25    49ffd1                  call r9                    	< C.[34;49mprintf[39;49m : 0x000055bd1e3aa410[32;49m >[39;49m[39;49m
[34;49m ..  = %s", atoken ) ;  if ( ! ( strcmp ( [39;49m[33;40matoken[39;49m[34;49m, "i2halt" ) ) )  {  printf ( "\n\tinterpret2 exiting..." ) ; return } else { aword = tokenToWo .. [39;49m[32;49m
0x7fbdaabb5c28    498b4708                mov rax, [r15+0x8]                                     [39;49m[32;49m
0x7fbdaabb5c2c    488bf8                  mov rdi, rax                                           [39;49m
[34;49m .. atoken ) ;  if ( ! ( strcmp ( atoken, [39;49m[33;40m"i2halt"[39;49m[34;49m ) ) )  {  printf ( "\n\tinterpret2 exiting..." ) ; return } else { aword = tokenToWord ( ato .. [39;49m[32;49m
0x7fbdaabb5c2f    48b8a2ad27a9bd7f0000    mov rax, 0x7fbda927ada2    	[32;49m< string : '[39;49m[39;49mi2halt[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fbdaabb5c39    488bf0                  mov rsi, rax                                           [39;49m
[34;49m .. 2 : token = %s", atoken ) ;  if ( ! ( [39;49m[33;40mstrcmp[39;49m[34;49m ( atoken, "i2halt" ) ) )  {  printf ( "\n\tinterpret2 exiting..." ) ; return } else { aword =  .. [39;49m[32;49m
0x7fbdaabb5c3c    49b8604b04abbd7f0000    mov r8, 0x7fbdab044b60                                 [39;49m[32;49m
0x7fbdaabb5c46    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaabb5c50    49ffd1                  call r9                    	< libc.[34;49mstrcmp[39;49m : 0x00007fbdab044b60[32;49m >[39;49m[39;49m[32;49m
0x7fbdaabb5c53    4885c0                  test rax, rax                                          [39;49m[32;49m
0x7fbdaabb5c56    7409                    jz 0xaabb5c61                                          [39;49m[32;49m
0x7fbdaabb5c58    48c7c000000000          mov rax, 0x0                                           [39;49m[32;49m
0x7fbdaabb5c5f    eb07                    jmp 0x7fbdaabb5c68         	< C_Syntax.[34;49minterpret2[39;49m+297[32;49m >[39;49m[39;49m[32;49m
0x7fbdaabb5c61    48c7c001000000          mov rax, 0x1                                           [39;49m
[34;49m .. oWord ( atoken ) ; doWord ( aword ) ; [39;49m[33;40m}[39;49m[34;49m } }  .. [39;49m[32;49m
0x7fbdaabb5c68    4885c0                  test rax, rax                                          [39;49m[32;49m
0x7fbdaabb5c6b    0f8435000000            jz 0x7fbdaabb5ca6          	< C_Syntax.[34;49minterpret2[39;49m+359[32;49m >[39;49m[39;49m
[34;49m .. ( atoken, "i2halt" ) ) )  {  printf ( [39;49m[33;40m"\n\tinterpret2 exiting..."[39;49m[34;49m ) ; return } else { aword = tokenToWord ( atoken ) ; doWord ( aword ) ; } .. [39;49m[32;49m
0x7fbdaabb5c71    48b8a9ad27a9bd7f0000    mov rax, 0x7fbda927ada9    	[32;49m< string : '[39;49m[39;49m\n\tinterpret2 exiting...[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fbdaabb5c7b    488bf8                  mov rdi, rax                                           [39;49m
[34;49m ..  ! ( strcmp ( atoken, "i2halt" ) ) )  [39;49m[33;40m{[39;49m[34;49m  printf ( "\n\tinterpret2 exiting..." ) ; return } else { aword = tokenToWord ( atoken ) ; doWord ( .. [39;49m[32;49m
0x7fbdaabb5c7e    48c7c001000000          mov rax, 0x1                                           [39;49m[32;49m
0x7fbdaabb5c85    49b810a43a1ebd550000    mov r8, 0x55bd1e3aa410                                 [39;49m[32;49m
0x7fbdaabb5c8f    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaabb5c99    49ffd1                  call r9                    	< C.[34;49mprintf[39;49m : 0x000055bd1e3aa410[32;49m >[39;49m[39;49m
[34;49m .. ( strcmp ( atoken, "i2halt" ) ) )  {  [39;49m[33;40mprintf[39;49m[34;49m ( "\n\tinterpret2 exiting..." ) ; return } else { aword = tokenToWord ( atoken ) ; doWord ( aw .. [39;49m[32;49m
0x7fbdaabb5c9c    e95f000000              jmp 0x7fbdaabb5d00         	< C_Syntax.[34;49minterpret2[39;49m+449[32;49m >[39;49m[39;49m
[34;49m .. \n\tinterpret2 exiting..." ) ; return [39;49m[33;40m}[39;49m[34;49m else { aword = tokenToWord ( atoken ) ; doWord ( aword ) ; } } }  .. [39;49m[32;49m
0x7fbdaabb5ca1    e955000000              jmp 0x7fbdaabb5cfb         	< C_Syntax.[34;49minterpret2[39;49m+444[32;49m >[39;49m[39;49m
[34;49m .. return } else { aword = tokenToWord ( [39;49m[33;40matoken[39;49m[34;49m ) ; doWord ( aword ) ; } } }  .. [39;49m[32;49m
0x7fbdaabb5ca6    498b4708                mov rax, [r15+0x8]                                     [39;49m[32;49m
0x7fbdaabb5caa    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb5cae    498906                  mov [r14], rax                                         [39;49m
[34;49m .. iting..." ) ; return } else { aword = [39;49m[33;40mtokenToWord[39;49m[34;49m ( atoken ) ; doWord ( aword ) ; } } }  .. [39;49m[32;49m
0x7fbdaabb5cb1    49b8009f3e1ebd550000    mov r8, 0x55bd1e3e9f00                                 [39;49m[32;49m
0x7fbdaabb5cbb    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaabb5cc5    49ffd1                  call r9                    	< Interpreter.[34;49mtokenToWord[39;49m : 0x000055bd1e3e9f00[32;49m >[39;49m[39;49m
[34;49m .. pret2 exiting..." ) ; return } else { [39;49m[33;40maword[39;49m[34;49m = tokenToWord ( atoken ) ; doWord ( aword ) ; } } }  .. [39;49m[32;49m
0x7fbdaabb5cc8    498d4710                lea rax, [r15+0x10]                                    [39;49m[32;49m
0x7fbdaabb5ccc    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fbdaabb5ccf    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fbdaabb5cd2    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m .. exiting..." ) ; return } else { aword [39;49m[33;40m=[39;49m[34;49m tokenToWord ( atoken ) ; doWord ( aword ) ; } } }  .. [39;49m[32;49m
0x7fbdaabb5cd6    488901                  mov [rcx], rax                                         [39;49m
[34;49m .. d = tokenToWord ( atoken ) ; doWord ( [39;49m[33;40maword[39;49m[34;49m ) ; } } }  .. [39;49m[32;49m
0x7fbdaabb5cd9    498b4710                mov rax, [r15+0x10]                                    [39;49m[32;49m
0x7fbdaabb5cdd    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb5ce1    498906                  mov [r14], rax                                         [39;49m
[34;49m .. se { aword = tokenToWord ( atoken ) ; [39;49m[33;40mdoWord[39;49m[34;49m ( aword ) ; } } }  .. [39;49m[32;49m
0x7fbdaabb5ce4    49b8109b3e1ebd550000    mov r8, 0x55bd1e3e9b10                                 [39;49m[32;49m
0x7fbdaabb5cee    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaabb5cf8    49ffd1                  call r9                    	< Interpreter.[34;49mdoWord[39;49m : 0x000055bd1e3e9b10[32;49m >[39;49m[39;49m[32;49m
0x7fbdaabb5cfb    e9befeffff              jmp 0x7fbdaabb5bbe         	< C_Syntax.[34;49minterpret2[39;49m+127[32;49m >[39;49m[39;49m
[34;49m .. d ( atoken ) ; doWord ( aword ) ; } } [39;49m[33;40m}[39;49m[34;49m  .. [39;49m[32;49m
0x7fbdaabb5d00    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaabb5d04    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaabb5d08    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'interpret2' :: codeSize = 457
Word : 0x00007fbda961b080 :: Compiled at : 0x00007fbdaabb5b3f
 =============================
::> 'wdiss' was called at namespaces/compiler/interpreter.csl 101.24 <::
 
tdbg = 1 
tdbg2 = 2 
tdbg3 = 3 
tdbg4 = 4 
tdbg5 = 5 
tdbg6 = 6 
xhii = 3 3 3 
xhi =  7
 xhi1 = 3
 xhi1 = 11
 xhi2a = 11
	 interpret2 :> 

	interpret2 : token = using
Using Namespaces :> libc void C Root C_Syntax Infix PrefixCombinators Dlsym int Interpreter System Shell String Compiler User Int Debug x o1 DO_Experimental DObject a xxy Class Logic Control Bits Lexer Combinators testD DLLNodeAlloc DLLNode Buffer a112 int64 cta ct Ar9 Ar3 Ar2 Ar1 DLLNodeAlloc4 DLListClone DLList byte Integer Pointer OpenVmTil Word Namespace StartupMacros Io Compiling Reserved Compiler Macro PreProcessor List Stack Memory Colors File Asm Locals Forth Experimental 

	interpret2 : token = //
	interpret2 : token = c_syntaxOff
	interpret2 : token = sp
	interpret2 : token = User
	interpret2 : token = #
	interpret2 : token = :
	interpret2 : token = 1
	interpret2 : token = 2
	interpret2 : token = +
	interpret2 : token = p
	interpret2 : token = ;
	interpret2 : token = hi1 3
	interpret2 : token = :
	interpret2 : token = hi1
	interpret2 : token = hi1
	interpret2 : token = ;
	interpret2 : token = :
	interpret2 : token = hey1
	interpret2 : token = hey1
	interpret2 : token = hey1
	interpret2 : token = ;
	interpret2 : token = nl

	interpret2 : token = heey1 3 3 3 3 3 3
	interpret2 : token = #
	interpret2 : token = i2halt
	interpret2 exiting... hi
DataStack at : [34;49mnamespaces/test/stack.csl : 2.6[39;49m :
DataStack depth =   3 : Dsp (R14) = Top = 0x00007fbdab0efa58, InitialTos = 0x00007fbdab0efa40, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fbdab0efa58 > = 0x0000000000000005	
  DataStack   [  -1 ] < 0x00007fbdab0efa50 > = 0x0000000000000005	
  DataStack   [  -2 ] < 0x00007fbdab0efa48 > = 0x0000000000000005	

DataStack at : [34;49mnamespaces/test/stack.csl : 2.27[39;49m :
DataStack depth =   3 : Dsp (R14) = Top = 0x00007fbdab0efa58, InitialTos = 0x00007fbdab0efa40, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fbdab0efa58 > = 0x0000000000000005	
  DataStack   [  -1 ] < 0x00007fbdab0efa50 > = 0x0000000000000005	
  DataStack   [  -2 ] < 0x00007fbdab0efa48 > = 0x0000000000000005	

DataStack at : [34;49mnamespaces/test/stack.csl : 2.45[39;49m :
DataStack depth =   9 : Dsp (R14) = Top = 0x00007fbdab0efa88, InitialTos = 0x00007fbdab0efa40, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fbdab0efa88 > = 0x0000000000000000	
  DataStack   [  -1 ] < 0x00007fbdab0efa80 > = 0x0000000000000001	
  DataStack   [  -2 ] < 0x00007fbdab0efa78 > = 0x0000000000000002	
  DataStack   [  -3 ] < 0x00007fbdab0efa70 > = 0x0000000000000003	
  DataStack   [  -4 ] < 0x00007fbdab0efa68 > = 0x0000000000000004	
  DataStack   [  -5 ] < 0x00007fbdab0efa60 > = 0x0000000000000005	
  DataStack   [  -6 ] < 0x00007fbdab0efa58 > = 0x0000000000000005	
  DataStack   [  -7 ] < 0x00007fbdab0efa50 > = 0x0000000000000005	
  DataStack   [  -8 ] < 0x00007fbdab0efa48 > = 0x0000000000000005	

DataStack at : [34;49mnamespaces/test/stack.csl : 2.53[39;49m :
DataStack depth =  10 : Dsp (R14) = Top = 0x00007fbdab0efa90, InitialTos = 0x00007fbdab0efa40, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fbdab0efa90 > = 0x0000000000000003	
  DataStack   [  -1 ] < 0x00007fbdab0efa88 > = 0x0000000000000000	
  DataStack   [  -2 ] < 0x00007fbdab0efa80 > = 0x0000000000000001	
  DataStack   [  -3 ] < 0x00007fbdab0efa78 > = 0x0000000000000002	
  DataStack   [  -4 ] < 0x00007fbdab0efa70 > = 0x0000000000000003	
  DataStack   [  -5 ] < 0x00007fbdab0efa68 > = 0x0000000000000004	
  DataStack   [  -6 ] < 0x00007fbdab0efa60 > = 0x0000000000000005	
  DataStack   [  -7 ] < 0x00007fbdab0efa58 > = 0x0000000000000005	
  DataStack   [  -8 ] < 0x00007fbdab0efa50 > = 0x0000000000000005	
  DataStack   [  -9 ] < 0x00007fbdab0efa48 > = 0x0000000000000005	
3
DataStack at : [34;49mnamespaces/test/stack.csl : 2.81[39;49m :
DataStack depth =   3 : Dsp (R14) = Top = 0x00007fbdab0efa58, InitialTos = 0x00007fbdab0efa40, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fbdab0efa58 > = 0x0000000000000005	
  DataStack   [  -1 ] < 0x00007fbdab0efa50 > = 0x0000000000000005	
  DataStack   [  -2 ] < 0x00007fbdab0efa48 > = 0x0000000000000005	

DataStack at : [34;49mnamespaces/test/stack.csl : 3.59[39;49m :
DataStack depth =   3 : Dsp (R14) = Top = 0x00007fbdab0efa58, InitialTos = 0x00007fbdab0efa40, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fbdab0efa58 > = 0x0000000000000005	
  DataStack   [  -1 ] < 0x00007fbdab0efa50 > = 0x0000000000000005	
  DataStack   [  -2 ] < 0x00007fbdab0efa48 > = 0x0000000000000005	

 1
DataStack at : [34;49mnamespaces/test/stack.csl : 3.59[39;49m :
DataStack depth =   4 : Dsp (R14) = Top = 0x00007fbdab0efa60, InitialTos = 0x00007fbdab0efa40, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fbdab0efa60 > = 0x0000000000000001	
  DataStack   [  -1 ] < 0x00007fbdab0efa58 > = 0x0000000000000005	
  DataStack   [  -2 ] < 0x00007fbdab0efa50 > = 0x0000000000000005	
  DataStack   [  -3 ] < 0x00007fbdab0efa48 > = 0x0000000000000005	
 
testpick : above line should read 1
 namespaces/compiler/c_syntax.csl 10.9
hello 7
 CObj size = 104
Dump at : namespaces/compiler/c_syntax.csl : 46.24 :
Dump : Address = 0x00007fbda8131828 : Number = 104 :: (little endian dump)
0x00007fbda8131828 :  d2 04 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbda8131838 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbda8131848 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbda8131858 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbda8131868 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbda8131878 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbda8131888 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 

	chey.hi = 1234
Dump at : namespaces/compiler/c_syntax.csl : 51.24 :
Dump : Address = 0x00007fbda8131828 : Number = 104 :: (little endian dump)
0x00007fbda8131828 :  d2 04 00 00 00 00 00 00  00 00 ff 00 00 00 00 00  ........ ........ 
0x00007fbda8131838 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbda8131848 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbda8131858 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbda8131868 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbda8131878 :  00 00 00 00 00 00 00 00  ef cd ab 89 67 45 23 01  ........ ....gE#. 
0x00007fbda8131888 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 

	chey.heey = 123456789abcdef
Dump at : namespaces/compiler/c_syntax.csl : 54.24 :
Dump : Address = 0x00007fbda8131828 : Number = 104 :: (little endian dump)
0x00007fbda8131828 :  d2 04 00 00 00 00 00 00  00 00 ff 00 00 00 00 00  ........ ........ 
0x00007fbda8131838 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbda8131848 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbda8131858 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbda8131868 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbda8131878 :  00 00 00 00 00 00 00 00  ef cd ab 89 67 45 23 01  ........ ....gE#. 
0x00007fbda8131888 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 

Dump at : namespaces/compiler/c_syntax.csl : 62.24 :
Dump : Address = 0x00007fbda8131828 : Number = 104 :: (little endian dump)
0x00007fbda8131828 :  d2 04 00 00 00 00 00 00  00 00 ff 00 00 00 00 00  ........ ........ 
0x00007fbda8131838 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbda8131848 :  00 00 00 00 00 00 00 00  ef cd ab 89 67 45 23 01  ........ ....gE#. 
0x00007fbda8131858 :  ef cd ab 89 67 45 23 01  00 00 00 00 00 00 00 00  ....gE#. ........ 
0x00007fbda8131868 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbda8131878 :  00 00 00 00 00 00 00 00  ef cd ab 89 67 45 23 01  ........ ....gE#. 
0x00007fbda8131888 :  ef cd ab 89 67 45 23 01  00 00 00 00 00 00 00 00  ....gE#. ........ 

	chey.hey = 123456789abcdef
Dump at : namespaces/compiler/c_syntax.csl : 69.25 :
Dump : Address = 0x00007fbda8131828 : Number = 104 :: (little endian dump)
0x00007fbda8131828 :  d2 04 00 00 00 00 00 00  00 00 ff 00 00 00 00 00  ........ ........ 
0x00007fbda8131838 :  00 00 00 00 00 00 00 00  00 00 16 00 00 00 00 ff  ........ ........ 
0x00007fbda8131848 :  00 00 00 00 00 00 00 00  ef cd ab 89 67 45 23 01  ........ ....gE#. 
0x00007fbda8131858 :  ef cd ab 89 67 45 23 01  00 00 00 00 00 00 00 00  ....gE#. ........ 
0x00007fbda8131868 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbda8131878 :  00 00 00 00 00 00 00 00  ef cd ab 89 67 45 23 01  ........ ....gE#. 
0x00007fbda8131888 :  ef cd ab 89 67 45 23 01  00 00 00 00 00 00 00 00  ....gE#. ........ 

CObj.size = 104

chey = 4d2

chey.hey = 123456789abcdef

&chey.hey = 7fbda8131850 0x0123456789abcdef 0x00007fbda8131850
	hoot
Dump at : namespaces/compiler/c_syntax.csl : 86.24 :
Dump : Address = 0x00007fbda8131828 : Number = 104 :: (little endian dump)
0x00007fbda8131828 :  d2 04 00 00 00 00 00 00  77 65 6c 6c 00 00 00 00  ........ well.... 
0x00007fbda8131838 :  00 00 00 00 00 00 00 00  00 00 0a 09 68 6f 6f 74  ........ ....hoot 
0x00007fbda8131848 :  00 00 00 00 00 00 00 00  ef cd ab 89 67 45 23 01  ........ ....gE#. 
0x00007fbda8131858 :  ef cd ab 89 67 45 23 01  00 00 00 00 00 00 00 00  ....gE#. ........ 
0x00007fbda8131868 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbda8131878 :  00 00 00 00 00 00 00 00  ef cd ab 89 67 45 23 01  ........ ....gE#. 
0x00007fbda8131888 :  ef cd ab 89 67 45 23 01  00 00 00 00 00 00 00 00  ....gE#. ........ 

Dump at : namespaces/compiler/c_syntax.csl : 89.24 :
Dump : Address = 0x00007fbda8131828 : Number = 104 :: (little endian dump)
0x00007fbda8131828 :  d2 04 00 00 00 00 00 00  77 65 6c 6c 00 00 00 00  ........ well.... 
0x00007fbda8131838 :  00 00 00 00 00 00 00 00  00 00 0a 09 68 6f 6f 74  ........ ....hoot 
0x00007fbda8131848 :  64 6f 6e 27 74 00 00 00  ef cd ab 89 67 45 23 01  don't... ....gE#. 
0x00007fbda8131858 :  ef cd ab 89 67 45 23 01  00 00 00 00 00 00 00 00  ....gE#. ........ 
0x00007fbda8131868 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbda8131878 :  00 00 00 00 00 00 00 00  ef cd ab 89 67 45 23 01  ........ ....gE#. 
0x00007fbda8131888 :  ef cd ab 89 67 45 23 01  00 00 00 00 00 00 00 00  ....gE#. ........ 

Dump at : namespaces/compiler/c_syntax.csl : 91.24 :
Dump : Address = 0x00007fbda8131828 : Number = 104 :: (little endian dump)
0x00007fbda8131828 :  d2 04 00 00 00 00 00 00  68 6f 6f 74 00 00 00 00  ........ hoot.... 
0x00007fbda8131838 :  00 00 00 00 00 00 00 00  00 00 0a 09 68 6f 6f 74  ........ ....hoot 
0x00007fbda8131848 :  64 6f 6e 27 74 00 00 00  ef cd ab 89 67 45 23 01  don't... ....gE#. 
0x00007fbda8131858 :  ef cd ab 89 67 45 23 01  00 00 00 00 00 00 00 00  ....gE#. ........ 
0x00007fbda8131868 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbda8131878 :  00 00 00 00 00 00 00 00  ef cd ab 89 67 45 23 01  ........ ....gE#. 
0x00007fbda8131888 :  ef cd ab 89 67 45 23 01  00 00 00 00 00 00 00 00  ....gE#. ........ 

Dump at : namespaces/compiler/c_syntax.csl : 93.24 :
Dump : Address = 0x00007fbda8131828 : Number = 104 :: (little endian dump)
0x00007fbda8131828 :  d2 04 00 00 00 00 00 00  6f 6b 21 20 64 6f 6e 27  ........ ok! don' 
0x00007fbda8131838 :  74 20 68 6f 6f 74 00 00  00 00 0a 09 68 6f 6f 74  t hoot.. ....hoot 
0x00007fbda8131848 :  64 6f 6e 27 74 00 00 00  ef cd ab 89 67 45 23 01  don't... ....gE#. 
0x00007fbda8131858 :  ef cd ab 89 67 45 23 01  00 00 00 00 00 00 00 00  ....gE#. ........ 
0x00007fbda8131868 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbda8131878 :  00 00 00 00 00 00 00 00  ef cd ab 89 67 45 23 01  ........ ....gE#. 
0x00007fbda8131888 :  ef cd ab 89 67 45 23 01  00 00 00 00 00 00 00 00  ....gE#. ........ 

Dump at : namespaces/compiler/c_syntax.csl : 95.24 :
Dump : Address = 0x00007fbda8131828 : Number = 104 :: (little endian dump)
0x00007fbda8131828 :  d2 04 00 00 00 00 00 00  77 65 6c 6c 2c 20 64 6f  ........ well, do 
0x00007fbda8131838 :  20 6f 72 20 64 6f 6e 27  74 20 68 6f 6f 74 00 74   or don' t hoot.t 
0x00007fbda8131848 :  64 6f 6e 27 74 00 00 00  ef cd ab 89 67 45 23 01  don't... ....gE#. 
0x00007fbda8131858 :  ef cd ab 89 67 45 23 01  00 00 00 00 00 00 00 00  ....gE#. ........ 
0x00007fbda8131868 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbda8131878 :  00 00 00 00 00 00 00 00  ef cd ab 89 67 45 23 01  ........ ....gE#. 
0x00007fbda8131888 :  ef cd ab 89 67 45 23 01  00 00 00 00 00 00 00 00  ....gE#. ........ 

	don't

	hoot

Dump at : namespaces/compiler/c_syntax.csl : 99.24 :
Dump : Address = 0x00007fbda8131828 : Number = 104 :: (little endian dump)
0x00007fbda8131828 :  d2 04 00 00 00 00 00 00  77 65 6c 6c 2c 20 64 6f  ........ well, do 
0x00007fbda8131838 :  20 6f 72 20 64 6f 6e 27  74 20 68 6f 6f 74 00 74   or don' t hoot.t 
0x00007fbda8131848 :  64 6f 6e 27 74 00 00 00  ef cd ab 89 67 45 23 01  don't... ....gE#. 
0x00007fbda8131858 :  ef cd ab 89 67 45 23 01  00 00 00 00 00 00 00 00  ....gE#. ........ 
0x00007fbda8131868 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbda8131878 :  00 00 00 00 00 00 00 00  ef cd ab 89 67 45 23 01  ........ ....gE#. 
0x00007fbda8131888 :  ef cd ab 89 67 45 23 01  00 00 00 00 00 00 00 00  ....gE#. ........ 

 =============================
C_Syntax.[34;49mchi[39;49m <:> csl compiled word, prefix
SourceCode for C_Syntax.[34;49mchi[39;49m :> 
[34;49mvoid chi ( CObj chey0, d | a b c ) { c = 1 + 2 ; b = c + 2 ; a = b + c ; nl p ( c ) ; c 3 "c should be 3" assert p ( b ) ; b 5 "b should be 5" assert p ( a ) ; a 8 "a should be 8" assert dump ( &chey0, CObj.size ) ; d = CObj.chey0.hey ; hex p ( d ) ; printf ( "\n chi : d = %lx\n", d ) ; sprintf ( &CObj.chey0.chars, "\n\t\they = %lx", d ) ; printf ( "\n chi : d = %lx\n", d ) ; sprintf ( &CObj.chey0.chars2, "\n\t\they hey = %lx", CObj.chey0.hey ) ; printf ( "\n CObj.chey0.chars = %s\n", &CObj.chey0.chars ) ; printf ( "\n CObj.chey0.chars2 = %s\n", &CObj.chey0.chars2 ) ; printf ( "\n chi : d = %lx\n", d ) ; d = CObj.chey0.hey ; printf ( "\n%lx\n", d ) ; printf ( "\n chi : d = %lx\n", d ) ; _assert ( d #x0123456789abcdef ) ; printf ( "\n%x\n", CObj.chey0.hey ) ; sprintf ( &chey0.chars [ 24 ], "%s", "hoot" ) ; dump ( &chey0, CObj.size ) ; } [39;49m
Source code file location of [34;49mchi[39;49m : "namespaces/compiler/c_syntax.csl" : 105.4 :: we are now at : namespaces/compiler/c_syntax.csl : 132.8
Compiled with : optimizeOn, inlineOn, c_syntaxOn, infixOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xaabb6494 -- code size = 1267 bytes
TypeSignature : Object 
 -----------------------------
Word :: C_Syntax.[34;49mchi[39;49m : definition = 0x00007fbdaabb6494 : disassembly at namespaces/compiler/c_syntax.csl : 132.8 :
[34;49m ..                                  void [39;49m[33;40mchi[39;49m[34;49m ( CObj chey0, d | a b c ) { c = 1 + 2 ; b = c + 2 ; a = b + c ; nl p ( c ) ; c 3 "c should be 3"  .. [39;49m[32;49m
0x7fbdaabb6494    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fbdaabb6498    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaabb649c    4981c620000000          add r14, 0x20                                          [39;49m
[34;49m void chi ( CObj chey0, d | a b c ) { c = [39;49m[33;40m1[39;49m[34;49m + 2 ; b = c + 2 ; a = b + c ; nl p ( c ) ; c 3 "c should be 3" assert p ( b ) ; b 5 "b should be 5" .. [39;49m[32;49m
0x7fbdaabb64a3    48c7c003000000          mov rax, 0x3                                           [39;49m
[34;49m ..  void chi ( CObj chey0, d | a b c ) { [39;49m[33;40mc[39;49m[34;49m = 1 + 2 ; b = c + 2 ; a = b + c ; nl p ( c ) ; c 3 "c should be 3" assert p ( b ) ; b 5 "b should b .. [39;49m[32;49m
0x7fbdaabb64aa    498d4f18                lea rcx, [r15+0x18]                                    [39;49m
[34;49m   void chi ( CObj chey0, d | a b c ) { c [39;49m[33;40mstore[39;49m[34;49m 2 ; b = c + 2 ; a = b + c ; nl p ( c ) ; c 3 "c should be 3" assert p ( b ) ; b 5 "b should be  .. [39;49m[32;49m
0x7fbdaabb64ae    488901                  mov [rcx], rax                                         [39;49m
[34;49m ..  chey0, d | a b c ) { c = 1 + 2 ; b = [39;49m[33;40mc[39;49m[34;49m + 2 ; a = b + c ; nl p ( c ) ; c 3 "c should be 3" assert p ( b ) ; b 5 "b should be 5" assert p (  .. [39;49m[32;49m
0x7fbdaabb64b1    498b4718                mov rax, [r15+0x18]                                    [39;49m
[34;49m .. y0, d | a b c ) { c = 1 + 2 ; b = c + [39;49m[33;40m2[39;49m[34;49m ; a = b + c ; nl p ( c ) ; c 3 "c should be 3" assert p ( b ) ; b 5 "b should be 5" assert p ( a )  .. [39;49m[32;49m
0x7fbdaabb64b5    48c7c102000000          mov rcx, 0x2                                           [39;49m
[34;49m .. hey0, d | a b c ) { c = 1 + 2 ; b = c [39;49m[33;40m+[39;49m[34;49m 2 ; a = b + c ; nl p ( c ) ; c 3 "c should be 3" assert p ( b ) ; b 5 "b should be 5" assert p ( a  .. [39;49m[32;49m
0x7fbdaabb64bc    4803c1                  add rax, rcx                                           [39;49m
[34;49m .. CObj chey0, d | a b c ) { c = 1 + 2 ; [39;49m[33;40mb[39;49m[34;49m = c + 2 ; a = b + c ; nl p ( c ) ; c 3 "c should be 3" assert p ( b ) ; b 5 "b should be 5" assert  .. [39;49m[32;49m
0x7fbdaabb64bf    498d4f10                lea rcx, [r15+0x10]                                    [39;49m
[34;49m .. bj chey0, d | a b c ) { c = 1 + 2 ; b [39;49m[33;40m=[39;49m[34;49m c + 2 ; a = b + c ; nl p ( c ) ; c 3 "c should be 3" assert p ( b ) ; b 5 "b should be 5" assert p  .. [39;49m[32;49m
0x7fbdaabb64c3    488901                  mov [rcx], rax                                         [39;49m
[34;49m .. a b c ) { c = 1 + 2 ; b = c + 2 ; a = [39;49m[33;40mb[39;49m[34;49m + c ; nl p ( c ) ; c 3 "c should be 3" assert p ( b ) ; b 5 "b should be 5" assert p ( a ) ; a 8 "a .. [39;49m[32;49m
0x7fbdaabb64c6    498b4710                mov rax, [r15+0x10]                                    [39;49m
[34;49m .. c ) { c = 1 + 2 ; b = c + 2 ; a = b + [39;49m[33;40mc[39;49m[34;49m ; nl p ( c ) ; c 3 "c should be 3" assert p ( b ) ; b 5 "b should be 5" assert p ( a ) ; a 8 "a sho .. [39;49m[32;49m
0x7fbdaabb64ca    498b4f18                mov rcx, [r15+0x18]                                    [39;49m
[34;49m .. b c ) { c = 1 + 2 ; b = c + 2 ; a = b [39;49m[33;40m+[39;49m[34;49m c ; nl p ( c ) ; c 3 "c should be 3" assert p ( b ) ; b 5 "b should be 5" assert p ( a ) ; a 8 "a s .. [39;49m[32;49m
0x7fbdaabb64ce    4803c1                  add rax, rcx                                           [39;49m
[34;49m .. d | a b c ) { c = 1 + 2 ; b = c + 2 ; [39;49m[33;40ma[39;49m[34;49m = b + c ; nl p ( c ) ; c 3 "c should be 3" assert p ( b ) ; b 5 "b should be 5" assert p ( a ) ; a  .. [39;49m[32;49m
0x7fbdaabb64d1    498d4f08                lea rcx, [r15+0x8]                                     [39;49m
[34;49m .. | a b c ) { c = 1 + 2 ; b = c + 2 ; a [39;49m[33;40m=[39;49m[34;49m b + c ; nl p ( c ) ; c 3 "c should be 3" assert p ( b ) ; b 5 "b should be 5" assert p ( a ) ; a 8  .. [39;49m[32;49m
0x7fbdaabb64d5    488901                  mov [rcx], rax                                         [39;49m
[34;49m .. { c = 1 + 2 ; b = c + 2 ; a = b + c ; [39;49m[33;40mnl[39;49m[34;49m p ( c ) ; c 3 "c should be 3" assert p ( b ) ; b 5 "b should be 5" assert p ( a ) ; a 8 "a should  .. [39;49m[32;49m
0x7fbdaabb64d8    49b8e0903e1ebd550000    mov r8, 0x55bd1e3e90e0                                 [39;49m[32;49m
0x7fbdaabb64e2    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaabb64ec    49ffd1                  call r9                    	< Io.[34;49mnewline[39;49m : 0x000055bd1e3e90e0[32;49m >[39;49m[39;49m
[34;49m ..  + 2 ; b = c + 2 ; a = b + c ; nl p ( [39;49m[33;40mc[39;49m[34;49m ) ; c 3 "c should be 3" assert p ( b ) ; b 5 "b should be 5" assert p ( a ) ; a 8 "a should be 8" a .. [39;49m[32;49m
0x7fbdaabb64ef    498b4718                mov rax, [r15+0x18]                                    [39;49m[32;49m
0x7fbdaabb64f3    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb64f7    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  = 1 + 2 ; b = c + 2 ; a = b + c ; nl [39;49m[33;40mp[39;49m[34;49m ( c ) ; c 3 "c should be 3" assert p ( b ) ; b 5 "b should be 5" assert p ( a ) ; a 8 "a should be  .. [39;49m[32;49m
0x7fbdaabb64fa    49b9d965d5aabd7f0000    mov r9, 0x7fbdaad565d9                                 [39;49m[32;49m
0x7fbdaabb6504    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fbdaad565d9[32;49m >[39;49m[39;49m
[34;49m ..  b = c + 2 ; a = b + c ; nl p ( c ) ; [39;49m[33;40mc[39;49m[34;49m 3 "c should be 3" assert p ( b ) ; b 5 "b should be 5" assert p ( a ) ; a 8 "a should be 8" assert  .. [39;49m[32;49m
0x7fbdaabb6507    498b4718                mov rax, [r15+0x18]                                    [39;49m[32;49m
0x7fbdaabb650b    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb650f    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  = c + 2 ; a = b + c ; nl p ( c ) ; c [39;49m[33;40m3[39;49m[34;49m "c should be 3" assert p ( b ) ; b 5 "b should be 5" assert p ( a ) ; a 8 "a should be 8" assert du .. [39;49m[32;49m
0x7fbdaabb6512    48c7c003000000          mov rax, 0x3                                           [39;49m[32;49m
0x7fbdaabb6519    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb651d    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  c + 2 ; a = b + c ; nl p ( c ) ; c 3 [39;49m[33;40m"[39;49m[34;49mc should be 3" assert p ( b ) ; b 5 "b should be 5" assert p ( a ) ; a 8 "a should be 8" assert dump .. [39;49m[32;49m
0x7fbdaabb6520    48b85f7f83aabd7f0000    mov rax, 0x7fbdaa837f5f    	[32;49m< string : '[39;49m[39;49mc should be 3[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fbdaabb652a    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb652e    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaabb6531    49b92b7bd5aabd7f0000    mov r9, 0x7fbdaad57b2b                                 [39;49m[32;49m
0x7fbdaabb653b    49ffd1                  call r9                    	< System.[34;49m_assert1[39;49m : 0x00007fbdaad57b2b[32;49m >[39;49m[39;49m
[34;49m ..  c ) ; c 3 "c should be 3" assert p ( [39;49m[33;40mb[39;49m[34;49m ) ; b 5 "b should be 5" assert p ( a ) ; a 8 "a should be 8" assert dump ( &chey0, CObj.size ) ;  d .. [39;49m[32;49m
0x7fbdaabb653e    498b4710                mov rax, [r15+0x10]                                    [39;49m[32;49m
0x7fbdaabb6542    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb6546    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  p ( c ) ; c 3 "c should be 3" assert [39;49m[33;40mp[39;49m[34;49m ( b ) ; b 5 "b should be 5" assert p ( a ) ; a 8 "a should be 8" assert dump ( &chey0, CObj.size )  .. [39;49m[32;49m
0x7fbdaabb6549    49b9d965d5aabd7f0000    mov r9, 0x7fbdaad565d9                                 [39;49m[32;49m
0x7fbdaabb6553    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fbdaad565d9[32;49m >[39;49m[39;49m
[34;49m ..  c 3 "c should be 3" assert p ( b ) ; [39;49m[33;40mb[39;49m[34;49m 5 "b should be 5" assert p ( a ) ; a 8 "a should be 8" assert dump ( &chey0, CObj.size ) ;  d = COb .. [39;49m[32;49m
0x7fbdaabb6556    498b4710                mov rax, [r15+0x10]                                    [39;49m[32;49m
0x7fbdaabb655a    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb655e    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  3 "c should be 3" assert p ( b ) ; b [39;49m[33;40m5[39;49m[34;49m "b should be 5" assert p ( a ) ; a 8 "a should be 8" assert dump ( &chey0, CObj.size ) ;  d = CObj. .. [39;49m[32;49m
0x7fbdaabb6561    48c7c005000000          mov rax, 0x5                                           [39;49m[32;49m
0x7fbdaabb6568    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb656c    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  "c should be 3" assert p ( b ) ; b 5 [39;49m[33;40m"[39;49m[34;49mb should be 5" assert p ( a ) ; a 8 "a should be 8" assert dump ( &chey0, CObj.size ) ;  d = CObj.ch .. [39;49m[32;49m
0x7fbdaabb656f    48b88f7f83aabd7f0000    mov rax, 0x7fbdaa837f8f    	[32;49m< string : '[39;49m[39;49mb should be 5[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fbdaabb6579    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb657d    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaabb6580    49b92b7bd5aabd7f0000    mov r9, 0x7fbdaad57b2b                                 [39;49m[32;49m
0x7fbdaabb658a    49ffd1                  call r9                    	< System.[34;49m_assert1[39;49m : 0x00007fbdaad57b2b[32;49m >[39;49m[39;49m
[34;49m ..  b ) ; b 5 "b should be 5" assert p ( [39;49m[33;40ma[39;49m[34;49m ) ; a 8 "a should be 8" assert dump ( &chey0, CObj.size ) ;  d = CObj.chey0.hey ; hex p ( d ) ; pri .. [39;49m[32;49m
0x7fbdaabb658d    498b4708                mov rax, [r15+0x8]                                     [39;49m[32;49m
0x7fbdaabb6591    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb6595    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  p ( b ) ; b 5 "b should be 5" assert [39;49m[33;40mp[39;49m[34;49m ( a ) ; a 8 "a should be 8" assert dump ( &chey0, CObj.size ) ;  d = CObj.chey0.hey ; hex p ( d ) ; .. [39;49m[32;49m
0x7fbdaabb6598    49b9d965d5aabd7f0000    mov r9, 0x7fbdaad565d9                                 [39;49m[32;49m
0x7fbdaabb65a2    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fbdaad565d9[32;49m >[39;49m[39;49m
[34;49m ..  b 5 "b should be 5" assert p ( a ) ; [39;49m[33;40ma[39;49m[34;49m 8 "a should be 8" assert dump ( &chey0, CObj.size ) ;  d = CObj.chey0.hey ; hex p ( d ) ; printf (  .. [39;49m[32;49m
0x7fbdaabb65a5    498b4708                mov rax, [r15+0x8]                                     [39;49m[32;49m
0x7fbdaabb65a9    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb65ad    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  5 "b should be 5" assert p ( a ) ; a [39;49m[33;40m8[39;49m[34;49m "a should be 8" assert dump ( &chey0, CObj.size ) ;  d = CObj.chey0.hey ; hex p ( d ) ; printf ( "\ .. [39;49m[32;49m
0x7fbdaabb65b0    48c7c008000000          mov rax, 0x8                                           [39;49m[32;49m
0x7fbdaabb65b7    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb65bb    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  "b should be 5" assert p ( a ) ; a 8 [39;49m[33;40m"[39;49m[34;49ma should be 8" assert dump ( &chey0, CObj.size ) ;  d = CObj.chey0.hey ; hex p ( d ) ; printf ( "\n  .. [39;49m[32;49m
0x7fbdaabb65be    48b8bf7f83aabd7f0000    mov rax, 0x7fbdaa837fbf    	[32;49m< string : '[39;49m[39;49ma should be 8[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fbdaabb65c8    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb65cc    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaabb65cf    49b92b7bd5aabd7f0000    mov r9, 0x7fbdaad57b2b                                 [39;49m[32;49m
0x7fbdaabb65d9    49ffd1                  call r9                    	< System.[34;49m_assert1[39;49m : 0x00007fbdaad57b2b[32;49m >[39;49m[39;49m
[34;49m ..  ; a 8 "a should be 8" assert dump ( &[39;49m[33;40mchey0[39;49m[34;49m, CObj.size ) ;  d = CObj.chey0.hey ; hex p ( d ) ; printf ( "\n chi : d = %lx\n", d ) ; sprintf .. [39;49m[32;49m
0x7fbdaabb65dc    498b47f0                mov rax, [r15-0x10]                                    [39;49m[32;49m
0x7fbdaabb65e0    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fbdaabb65e7    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb65eb    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ould be 8" assert dump ( &chey0, CObj.[39;49m[33;40msize[39;49m[34;49m ) ;  d = CObj.chey0.hey ; hex p ( d ) ; printf ( "\n chi : d = %lx\n", d ) ; sprintf ( &CObj.che .. [39;49m[32;49m
0x7fbdaabb65ee    48b8902c62a9bd7f0000    mov rax, 0x7fbda9622c90    	[32;49m< string : '[39;49m[39;49mh[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fbdaabb65f8    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fbdaabb65fb    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb65ff    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  p ( a ) ; a 8 "a should be 8" assert [39;49m[33;40mdump[39;49m[34;49m ( &chey0, CObj.size ) ;  d = CObj.chey0.hey ; hex p ( d ) ; printf ( "\n chi : d = %lx\n", d ) ; .. [39;49m[32;49m
0x7fbdaabb6602    49b830b43e1ebd550000    mov r8, 0x55bd1e3eb430                                 [39;49m[32;49m
0x7fbdaabb660c    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaabb6616    49ffd1                  call r9                    	< Debug.[34;49mdump[39;49m : 0x000055bd1e3eb430[32;49m >[39;49m[39;49m
[34;49m .. ump ( &chey0, CObj.size ) ;  d = CObj.[39;49m[33;40mchey0[39;49m[34;49m.hey ; hex p ( d ) ; printf ( "\n chi : d = %lx\n", d ) ; sprintf ( &CObj.chey0.chars, "\n\t\the .. [39;49m[32;49m
0x7fbdaabb6619    498b47f0                mov rax, [r15-0x10]                                    [39;49m
[34;49m .. &chey0, CObj.size ) ;  d = CObj.chey0.[39;49m[33;40mhey[39;49m[34;49m ; hex p ( d ) ; printf ( "\n chi : d = %lx\n", d ) ; sprintf ( &CObj.chey0.chars, "\n\t\they = %l .. [39;49m[32;49m
0x7fbdaabb661d    4881c028000000          add rax, 0x28                                          [39;49m[32;49m
0x7fbdaabb6624    488b00                  mov rax, [rax]                                         [39;49m
[34;49m ..  assert dump ( &chey0, CObj.size ) ;  [39;49m[33;40md[39;49m[34;49m = CObj.chey0.hey ; hex p ( d ) ; printf ( "\n chi : d = %lx\n", d ) ; sprintf ( &CObj.chey0.chars,  .. [39;49m[32;49m
0x7fbdaabb6627    498d4ff8                lea rcx, [r15-0x8]                                     [39;49m
[34;49m .. ssert dump ( &chey0, CObj.size ) ;  d [39;49m[33;40m=[39;49m[34;49m CObj.chey0.hey ; hex p ( d ) ; printf ( "\n chi : d = %lx\n", d ) ; sprintf ( &CObj.chey0.chars, "\ .. [39;49m[32;49m
0x7fbdaabb662b    488901                  mov [rcx], rax                                         [39;49m
[34;49m .. , CObj.size ) ;  d = CObj.chey0.hey ; [39;49m[33;40mhex[39;49m[34;49m p ( d ) ; printf ( "\n chi : d = %lx\n", d ) ; sprintf ( &CObj.chey0.chars, "\n\t\they = %lx", d  .. [39;49m[32;49m
0x7fbdaabb662e    49b8d0b33e1ebd550000    mov r8, 0x55bd1e3eb3d0                                 [39;49m[32;49m
0x7fbdaabb6638    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaabb6642    49ffd1                  call r9                    	< System.[34;49mhex[39;49m : 0x000055bd1e3eb3d0[32;49m >[39;49m[39;49m
[34;49m .. ize ) ;  d = CObj.chey0.hey ; hex p ( [39;49m[33;40md[39;49m[34;49m ) ; printf ( "\n chi : d = %lx\n", d ) ; sprintf ( &CObj.chey0.chars, "\n\t\they = %lx", d ) ; prin .. [39;49m[32;49m
0x7fbdaabb6645    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaabb6649    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb664d    498906                  mov [r14], rax                                         [39;49m
[34;49m .. bj.size ) ;  d = CObj.chey0.hey ; hex [39;49m[33;40mp[39;49m[34;49m ( d ) ; printf ( "\n chi : d = %lx\n", d ) ; sprintf ( &CObj.chey0.chars, "\n\t\they = %lx", d ) ;  .. [39;49m[32;49m
0x7fbdaabb6650    49b9d965d5aabd7f0000    mov r9, 0x7fbdaad565d9                                 [39;49m[32;49m
0x7fbdaabb665a    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fbdaad565d9[32;49m >[39;49m[39;49m
[34;49m .. bj.chey0.hey ; hex p ( d ) ; printf ( [39;49m[33;40m"\n chi : d = %lx\n"[39;49m[34;49m, d ) ; sprintf ( &CObj.chey0.chars, "\n\t\they = %lx", d ) ; printf ( "\n chi :  .. [39;49m[32;49m
0x7fbdaabb665d    48b850ee27a9bd7f0000    mov rax, 0x7fbda927ee50    	[32;49m< string : '[39;49m[39;49m\n chi : d = %lx\n[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fbdaabb6667    488bf8                  mov rdi, rax                                           [39;49m
[34;49m ..  d ) ; printf ( "\n chi : d = %lx\n", [39;49m[33;40md[39;49m[34;49m ) ; sprintf ( &CObj.chey0.chars, "\n\t\they = %lx", d ) ; printf ( "\n chi : d = %lx\n", d ) ; spri .. [39;49m[32;49m
0x7fbdaabb666a    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaabb666e    488bf0                  mov rsi, rax                                           [39;49m[32;49m
0x7fbdaabb6671    48c7c002000000          mov rax, 0x2                                           [39;49m
[34;49m .. ;  d = CObj.chey0.hey ; hex p ( d ) ; [39;49m[33;40mprintf[39;49m[34;49m ( "\n chi : d = %lx\n", d ) ; sprintf ( &CObj.chey0.chars, "\n\t\they = %lx", d ) ; printf ( " .. [39;49m[32;49m
0x7fbdaabb6678    49b810a43a1ebd550000    mov r8, 0x55bd1e3aa410                                 [39;49m[32;49m
0x7fbdaabb6682    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaabb668c    49ffd1                  call r9                    	< C.[34;49mprintf[39;49m : 0x000055bd1e3aa410[32;49m >[39;49m[39;49m
[34;49m .. i : d = %lx\n", d ) ; sprintf ( &CObj.[39;49m[33;40mchey0[39;49m[34;49m.chars, "\n\t\they = %lx", d ) ; printf ( "\n chi : d = %lx\n", d ) ; sprintf ( &CObj.chey0.char .. [39;49m[32;49m
0x7fbdaabb668f    498b47f0                mov rax, [r15-0x10]                                    [39;49m
[34;49m .. = %lx\n", d ) ; sprintf ( &CObj.chey0.[39;49m[33;40mchars[39;49m[34;49m, "\n\t\they = %lx", d ) ; printf ( "\n chi : d = %lx\n", d ) ; sprintf ( &CObj.chey0.chars2, "\ .. [39;49m[32;49m
0x7fbdaabb6693    4881c008000000          add rax, 0x8                                           [39;49m[32;49m
0x7fbdaabb669a    488bf8                  mov rdi, rax                                           [39;49m
[34;49m .. ", d ) ; sprintf ( &CObj.chey0.chars, [39;49m[33;40m"\n\t\they = %lx"[39;49m[34;49m, d ) ; printf ( "\n chi : d = %lx\n", d ) ; sprintf ( &CObj.chey0.chars2, "\n\t\the .. [39;49m[32;49m
0x7fbdaabb669d    48b861ee27a9bd7f0000    mov rax, 0x7fbda927ee61    	[32;49m< string : '[39;49m[39;49m\n\t\they = %lx[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fbdaabb66a7    488bf0                  mov rsi, rax                                           [39;49m
[34;49m .. &CObj.chey0.chars, "\n\t\they = %lx", [39;49m[33;40md[39;49m[34;49m ) ; printf ( "\n chi : d = %lx\n", d ) ; sprintf ( &CObj.chey0.chars2, "\n\t\they hey = %lx", CObj. .. [39;49m[32;49m
0x7fbdaabb66aa    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaabb66ae    488bd0                  mov rdx, rax                                           [39;49m[32;49m
0x7fbdaabb66b1    48c7c003000000          mov rax, 0x3                                           [39;49m
[34;49m ..  printf ( "\n chi : d = %lx\n", d ) ; [39;49m[33;40msprintf[39;49m[34;49m ( &CObj.chey0.chars, "\n\t\they = %lx", d ) ; printf ( "\n chi : d = %lx\n", d ) ; sprintf (  .. [39;49m[32;49m
0x7fbdaabb66b8    49b8a02ff2aabd7f0000    mov r8, 0x7fbdaaf22fa0                                 [39;49m[32;49m
0x7fbdaabb66c2    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaabb66cc    49ffd1                  call r9                    	< C.[34;49msprintf[39;49m : 0x00007fbdaaf22fa0[32;49m >[39;49m[39;49m
[34;49m .. rs, "\n\t\they = %lx", d ) ; printf ( [39;49m[33;40m"\n chi : d = %lx\n"[39;49m[34;49m, d ) ; sprintf ( &CObj.chey0.chars2, "\n\t\they hey = %lx", CObj.chey0.hey ) ; p .. [39;49m[32;49m
0x7fbdaabb66cf    48b86eee27a9bd7f0000    mov rax, 0x7fbda927ee6e    	[32;49m< string : '[39;49m[39;49m\n chi : d = %lx\n[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fbdaabb66d9    488bf8                  mov rdi, rax                                           [39;49m
[34;49m ..  d ) ; printf ( "\n chi : d = %lx\n", [39;49m[33;40md[39;49m[34;49m ) ; sprintf ( &CObj.chey0.chars2, "\n\t\they hey = %lx", CObj.chey0.hey ) ; printf ( "\n CObj.chey0 .. [39;49m[32;49m
0x7fbdaabb66dc    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaabb66e0    488bf0                  mov rsi, rax                                           [39;49m[32;49m
0x7fbdaabb66e3    48c7c002000000          mov rax, 0x2                                           [39;49m
[34;49m .. chey0.chars, "\n\t\they = %lx", d ) ; [39;49m[33;40mprintf[39;49m[34;49m ( "\n chi : d = %lx\n", d ) ; sprintf ( &CObj.chey0.chars2, "\n\t\they hey = %lx", CObj.chey0. .. [39;49m[32;49m
0x7fbdaabb66ea    49b810a43a1ebd550000    mov r8, 0x55bd1e3aa410                                 [39;49m[32;49m
0x7fbdaabb66f4    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaabb66fe    49ffd1                  call r9                    	< C.[34;49mprintf[39;49m : 0x000055bd1e3aa410[32;49m >[39;49m[39;49m
[34;49m .. i : d = %lx\n", d ) ; sprintf ( &CObj.[39;49m[33;40mchey0[39;49m[34;49m.chars2, "\n\t\they hey = %lx", CObj.chey0.hey ) ; printf ( "\n CObj.chey0.chars = %s\n", &CObj. .. [39;49m[32;49m
0x7fbdaabb6701    498b47f0                mov rax, [r15-0x10]                                    [39;49m
[34;49m .. = %lx\n", d ) ; sprintf ( &CObj.chey0.[39;49m[33;40mchars2[39;49m[34;49m, "\n\t\they hey = %lx", CObj.chey0.hey ) ; printf ( "\n CObj.chey0.chars = %s\n", &CObj.chey0. .. [39;49m[32;49m
0x7fbdaabb6705    4881c038000000          add rax, 0x38                                          [39;49m[32;49m
0x7fbdaabb670c    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb6710    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaabb6713    488bf8                  mov rdi, rax                                           [39;49m
[34;49m .. , d ) ; sprintf ( &CObj.chey0.chars2, [39;49m[33;40m"\n\t\they hey = %lx"[39;49m[34;49m, CObj.chey0.hey ) ; printf ( "\n CObj.chey0.chars = %s\n", &CObj.chey0.chars )  .. [39;49m[32;49m
0x7fbdaabb6716    48b87fee27a9bd7f0000    mov rax, 0x7fbda927ee7f    	[32;49m< string : '[39;49m[39;49m\n\t\they hey = %lx[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fbdaabb6720    488bf0                  mov rsi, rax                                           [39;49m
[34;49m .. 0.chars2, "\n\t\they hey = %lx", CObj.[39;49m[33;40mchey0[39;49m[34;49m.hey ) ; printf ( "\n CObj.chey0.chars = %s\n", &CObj.chey0.chars ) ; printf ( "\n CObj.chey0.ch .. [39;49m[32;49m
0x7fbdaabb6723    498b47f0                mov rax, [r15-0x10]                                    [39;49m
[34;49m .. s2, "\n\t\they hey = %lx", CObj.chey0.[39;49m[33;40mhey[39;49m[34;49m ) ; printf ( "\n CObj.chey0.chars = %s\n", &CObj.chey0.chars ) ; printf ( "\n CObj.chey0.chars2 = .. [39;49m[32;49m
0x7fbdaabb6727    4881c028000000          add rax, 0x28                                          [39;49m[32;49m
0x7fbdaabb672e    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fbdaabb6731    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb6735    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaabb6738    488bd0                  mov rdx, rax                                           [39;49m[32;49m
0x7fbdaabb673b    48c7c003000000          mov rax, 0x3                                           [39;49m
[34;49m ..  printf ( "\n chi : d = %lx\n", d ) ; [39;49m[33;40msprintf[39;49m[34;49m ( &CObj.chey0.chars2, "\n\t\they hey = %lx", CObj.chey0.hey ) ; printf ( "\n CObj.chey0.chars .. [39;49m[32;49m
0x7fbdaabb6742    49b8a02ff2aabd7f0000    mov r8, 0x7fbdaaf22fa0                                 [39;49m[32;49m
0x7fbdaabb674c    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaabb6756    49ffd1                  call r9                    	< C.[34;49msprintf[39;49m : 0x00007fbdaaf22fa0[32;49m >[39;49m[39;49m
[34;49m .. y = %lx", CObj.chey0.hey ) ; printf ( [39;49m[33;40m"\n CObj.chey0.chars = %s\n"[39;49m[34;49m, &CObj.chey0.chars ) ; printf ( "\n CObj.chey0.chars2 = %s\n", &CObj.che .. [39;49m[32;49m
0x7fbdaabb6759    48b890ee27a9bd7f0000    mov rax, 0x7fbda927ee90    	[32;49m< string : '[39;49m[39;49m\n CObj.chey0.chars = %s\n[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fbdaabb6763    488bf8                  mov rdi, rax                                           [39;49m
[34;49m .. ( "\n CObj.chey0.chars = %s\n", &CObj.[39;49m[33;40mchey0[39;49m[34;49m.chars ) ; printf ( "\n CObj.chey0.chars2 = %s\n", &CObj.chey0.chars2 ) ; printf ( "\n chi : d = .. [39;49m[32;49m
0x7fbdaabb6766    498b47f0                mov rax, [r15-0x10]                                    [39;49m
[34;49m .. CObj.chey0.chars = %s\n", &CObj.chey0.[39;49m[33;40mchars[39;49m[34;49m ) ; printf ( "\n CObj.chey0.chars2 = %s\n", &CObj.chey0.chars2 ) ; printf ( "\n chi : d = %lx\n .. [39;49m[32;49m
0x7fbdaabb676a    4881c008000000          add rax, 0x8                                           [39;49m[32;49m
0x7fbdaabb6771    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb6775    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaabb6778    488bf0                  mov rsi, rax                                           [39;49m[32;49m
0x7fbdaabb677b    48c7c002000000          mov rax, 0x2                                           [39;49m
[34;49m .. t\they hey = %lx", CObj.chey0.hey ) ; [39;49m[33;40mprintf[39;49m[34;49m ( "\n CObj.chey0.chars = %s\n", &CObj.chey0.chars ) ; printf ( "\n CObj.chey0.chars2 = %s\n",  .. [39;49m[32;49m
0x7fbdaabb6782    49b810a43a1ebd550000    mov r8, 0x55bd1e3aa410                                 [39;49m[32;49m
0x7fbdaabb678c    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaabb6796    49ffd1                  call r9                    	< C.[34;49mprintf[39;49m : 0x000055bd1e3aa410[32;49m >[39;49m[39;49m
[34;49m .. %s\n", &CObj.chey0.chars ) ; printf ( [39;49m[33;40m"\n CObj.chey0.chars2 = %s\n"[39;49m[34;49m, &CObj.chey0.chars2 ) ; printf ( "\n chi : d = %lx\n", d ) ; d = CObj.c .. [39;49m[32;49m
0x7fbdaabb6799    48b8a9ee27a9bd7f0000    mov rax, 0x7fbda927eea9    	[32;49m< string : '[39;49m[39;49m\n CObj.chey0.chars2 = %s\n[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fbdaabb67a3    488bf8                  mov rdi, rax                                           [39;49m
[34;49m ..  "\n CObj.chey0.chars2 = %s\n", &CObj.[39;49m[33;40mchey0[39;49m[34;49m.chars2 ) ; printf ( "\n chi : d = %lx\n", d ) ; d = CObj.chey0.hey ; printf ( "\n%lx\n", d ) ;  .. [39;49m[32;49m
0x7fbdaabb67a6    498b47f0                mov rax, [r15-0x10]                                    [39;49m
[34;49m .. Obj.chey0.chars2 = %s\n", &CObj.chey0.[39;49m[33;40mchars2[39;49m[34;49m ) ; printf ( "\n chi : d = %lx\n", d ) ; d = CObj.chey0.hey ; printf ( "\n%lx\n", d ) ; printf .. [39;49m[32;49m
0x7fbdaabb67aa    4881c038000000          add rax, 0x38                                          [39;49m[32;49m
0x7fbdaabb67b1    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb67b5    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaabb67b8    488bf0                  mov rsi, rax                                           [39;49m[32;49m
0x7fbdaabb67bb    48c7c002000000          mov rax, 0x2                                           [39;49m
[34;49m .. .chars = %s\n", &CObj.chey0.chars ) ; [39;49m[33;40mprintf[39;49m[34;49m ( "\n CObj.chey0.chars2 = %s\n", &CObj.chey0.chars2 ) ; printf ( "\n chi : d = %lx\n", d ) ; d .. [39;49m[32;49m
0x7fbdaabb67c2    49b810a43a1ebd550000    mov r8, 0x55bd1e3aa410                                 [39;49m[32;49m
0x7fbdaabb67cc    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaabb67d6    49ffd1                  call r9                    	< C.[34;49mprintf[39;49m : 0x000055bd1e3aa410[32;49m >[39;49m[39;49m
[34;49m .. s\n", &CObj.chey0.chars2 ) ; printf ( [39;49m[33;40m"\n chi : d = %lx\n"[39;49m[34;49m, d ) ; d = CObj.chey0.hey ; printf ( "\n%lx\n", d ) ; printf ( "\n chi : d = %lx .. [39;49m[32;49m
0x7fbdaabb67d9    48b8c3ee27a9bd7f0000    mov rax, 0x7fbda927eec3    	[32;49m< string : '[39;49m[39;49m\n chi : d = %lx\n[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fbdaabb67e3    488bf8                  mov rdi, rax                                           [39;49m
[34;49m .. s2 ) ; printf ( "\n chi : d = %lx\n", [39;49m[33;40md[39;49m[34;49m ) ; d = CObj.chey0.hey ; printf ( "\n%lx\n", d ) ; printf ( "\n chi : d = %lx\n", d ) ; _assert ( d .. [39;49m[32;49m
0x7fbdaabb67e6    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaabb67ea    488bf0                  mov rsi, rax                                           [39;49m[32;49m
0x7fbdaabb67ed    48c7c002000000          mov rax, 0x2                                           [39;49m
[34;49m .. hars2 = %s\n", &CObj.chey0.chars2 ) ; [39;49m[33;40mprintf[39;49m[34;49m ( "\n chi : d = %lx\n", d ) ; d = CObj.chey0.hey ; printf ( "\n%lx\n", d ) ; printf ( "\n chi  .. [39;49m[32;49m
0x7fbdaabb67f4    49b810a43a1ebd550000    mov r8, 0x55bd1e3aa410                                 [39;49m[32;49m
0x7fbdaabb67fe    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaabb6808    49ffd1                  call r9                    	< C.[34;49mprintf[39;49m : 0x000055bd1e3aa410[32;49m >[39;49m[39;49m
[34;49m ..  "\n chi : d = %lx\n", d ) ; d = CObj.[39;49m[33;40mchey0[39;49m[34;49m.hey ; printf ( "\n%lx\n", d ) ; printf ( "\n chi : d = %lx\n", d ) ; _assert ( d #x0123456789ab .. [39;49m[32;49m
0x7fbdaabb680b    498b47f0                mov rax, [r15-0x10]                                    [39;49m
[34;49m .. hi : d = %lx\n", d ) ; d = CObj.chey0.[39;49m[33;40mhey[39;49m[34;49m ; printf ( "\n%lx\n", d ) ; printf ( "\n chi : d = %lx\n", d ) ; _assert ( d #x0123456789abcdef ) .. [39;49m[32;49m
0x7fbdaabb680f    4881c028000000          add rax, 0x28                                          [39;49m[32;49m
0x7fbdaabb6816    488b00                  mov rax, [rax]                                         [39;49m
[34;49m ..  printf ( "\n chi : d = %lx\n", d ) ; [39;49m[33;40md[39;49m[34;49m = CObj.chey0.hey ; printf ( "\n%lx\n", d ) ; printf ( "\n chi : d = %lx\n", d ) ; _assert ( d #x012 .. [39;49m[32;49m
0x7fbdaabb6819    498d4ff8                lea rcx, [r15-0x8]                                     [39;49m
[34;49m .. rintf ( "\n chi : d = %lx\n", d ) ; d [39;49m[33;40m=[39;49m[34;49m CObj.chey0.hey ; printf ( "\n%lx\n", d ) ; printf ( "\n chi : d = %lx\n", d ) ; _assert ( d #x01234 .. [39;49m[32;49m
0x7fbdaabb681d    488901                  mov [rcx], rax                                         [39;49m
[34;49m .. , d ) ; d = CObj.chey0.hey ; printf ( [39;49m[33;40m"\n%lx\n"[39;49m[34;49m, d ) ; printf ( "\n chi : d = %lx\n", d ) ; _assert ( d #x0123456789abcdef ) ;  printf ( "\ .. [39;49m[32;49m
0x7fbdaabb6820    48b8d4ee27a9bd7f0000    mov rax, 0x7fbda927eed4    	[32;49m< string : '[39;49m[39;49m\n%lx\n[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fbdaabb682a    488bf8                  mov rdi, rax                                           [39;49m
[34;49m ..  CObj.chey0.hey ; printf ( "\n%lx\n", [39;49m[33;40md[39;49m[34;49m ) ; printf ( "\n chi : d = %lx\n", d ) ; _assert ( d #x0123456789abcdef ) ;  printf ( "\n%x\n", COb .. [39;49m[32;49m
0x7fbdaabb682d    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaabb6831    488bf0                  mov rsi, rax                                           [39;49m[32;49m
0x7fbdaabb6834    48c7c002000000          mov rax, 0x2                                           [39;49m
[34;49m ..  = %lx\n", d ) ; d = CObj.chey0.hey ; [39;49m[33;40mprintf[39;49m[34;49m ( "\n%lx\n", d ) ; printf ( "\n chi : d = %lx\n", d ) ; _assert ( d #x0123456789abcdef ) ;  pr .. [39;49m[32;49m
0x7fbdaabb683b    49b810a43a1ebd550000    mov r8, 0x55bd1e3aa410                                 [39;49m[32;49m
0x7fbdaabb6845    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaabb684f    49ffd1                  call r9                    	< C.[34;49mprintf[39;49m : 0x000055bd1e3aa410[32;49m >[39;49m[39;49m
[34;49m ..  ; printf ( "\n%lx\n", d ) ; printf ( [39;49m[33;40m"\n chi : d = %lx\n"[39;49m[34;49m, d ) ; _assert ( d #x0123456789abcdef ) ;  printf ( "\n%x\n", CObj.chey0.hey ) ; .. [39;49m[32;49m
0x7fbdaabb6852    48b8daee27a9bd7f0000    mov rax, 0x7fbda927eeda    	[32;49m< string : '[39;49m[39;49m\n chi : d = %lx\n[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fbdaabb685c    488bf8                  mov rdi, rax                                           [39;49m
[34;49m ..  d ) ; printf ( "\n chi : d = %lx\n", [39;49m[33;40md[39;49m[34;49m ) ; _assert ( d #x0123456789abcdef ) ;  printf ( "\n%x\n", CObj.chey0.hey ) ; sprintf ( &chey0.char .. [39;49m[32;49m
0x7fbdaabb685f    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaabb6863    488bf0                  mov rsi, rax                                           [39;49m[32;49m
0x7fbdaabb6866    48c7c002000000          mov rax, 0x2                                           [39;49m
[34;49m .. chey0.hey ; printf ( "\n%lx\n", d ) ; [39;49m[33;40mprintf[39;49m[34;49m ( "\n chi : d = %lx\n", d ) ; _assert ( d #x0123456789abcdef ) ;  printf ( "\n%x\n", CObj.chey .. [39;49m[32;49m
0x7fbdaabb686d    49b810a43a1ebd550000    mov r8, 0x55bd1e3aa410                                 [39;49m[32;49m
0x7fbdaabb6877    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaabb6881    49ffd1                  call r9                    	< C.[34;49mprintf[39;49m : 0x000055bd1e3aa410[32;49m >[39;49m[39;49m
[34;49m .. "\n chi : d = %lx\n", d ) ; _assert ( [39;49m[33;40md[39;49m[34;49m #x0123456789abcdef ) ;  printf ( "\n%x\n", CObj.chey0.hey ) ; sprintf ( &chey0.chars [ 24 ], "%s",  .. [39;49m[32;49m
0x7fbdaabb6884    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaabb6888    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb688c    498906                  mov [r14], rax                                         [39;49m
[34;49m .. n chi : d = %lx\n", d ) ; _assert ( d [39;49m[33;40m#x0123456789abcdef[39;49m[34;49m ) ;  printf ( "\n%x\n", CObj.chey0.hey ) ; sprintf ( &chey0.chars [ 24 ], "%s", "h .. [39;49m[32;49m
0x7fbdaabb688f    48b8efcdab8967452301    mov rax, 0x123456789abcdef                              [39;49m[32;49m
0x7fbdaabb6899    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb689d    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaabb68a0    49b9df7cd5aabd7f0000    mov r9, 0x7fbdaad57cdf                                 [39;49m[32;49m
0x7fbdaabb68aa    49ffd1                  call r9                    	< System.[34;49m_assert0[39;49m : 0x00007fbdaad57cdf[32;49m >[39;49m[39;49m
[34;49m ..  ( d #x0123456789abcdef ) ;  printf ( [39;49m[33;40m"\n%x\n"[39;49m[34;49m, CObj.chey0.hey ) ; sprintf ( &chey0.chars [ 24 ], "%s", "hoot" ) ; dump ( &chey0, CObj.size .. [39;49m[32;49m
0x7fbdaabb68ad    48b8ebee27a9bd7f0000    mov rax, 0x7fbda927eeeb    	[32;49m< string : '[39;49m[39;49m\n%x\n[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fbdaabb68b7    488bf8                  mov rdi, rax                                           [39;49m
[34;49m .. 89abcdef ) ;  printf ( "\n%x\n", CObj.[39;49m[33;40mchey0[39;49m[34;49m.hey ) ; sprintf ( &chey0.chars [ 24 ], "%s", "hoot" ) ; dump ( &chey0, CObj.size ) ;  }  .. [39;49m[32;49m
0x7fbdaabb68ba    498b47f0                mov rax, [r15-0x10]                                    [39;49m
[34;49m .. ef ) ;  printf ( "\n%x\n", CObj.chey0.[39;49m[33;40mhey[39;49m[34;49m ) ; sprintf ( &chey0.chars [ 24 ], "%s", "hoot" ) ; dump ( &chey0, CObj.size ) ;  }  .. [39;49m[32;49m
0x7fbdaabb68be    4881c028000000          add rax, 0x28                                          [39;49m[32;49m
0x7fbdaabb68c5    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fbdaabb68c8    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb68cc    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaabb68cf    488bf0                  mov rsi, rax                                           [39;49m[32;49m
0x7fbdaabb68d2    48c7c002000000          mov rax, 0x2                                           [39;49m
[34;49m .. ; _assert ( d #x0123456789abcdef ) ;  [39;49m[33;40mprintf[39;49m[34;49m ( "\n%x\n", CObj.chey0.hey ) ; sprintf ( &chey0.chars [ 24 ], "%s", "hoot" ) ; dump ( &chey0,  .. [39;49m[32;49m
0x7fbdaabb68d9    49b810a43a1ebd550000    mov r8, 0x55bd1e3aa410                                 [39;49m[32;49m
0x7fbdaabb68e3    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaabb68ed    49ffd1                  call r9                    	< C.[34;49mprintf[39;49m : 0x000055bd1e3aa410[32;49m >[39;49m[39;49m
[34;49m .. hey0.hey ) ; sprintf ( &chey0.chars [ [39;49m[33;40m24[39;49m[34;49m ], "%s", "hoot" ) ; dump ( &chey0, CObj.size ) ;  }  .. [39;49m[32;49m
0x7fbdaabb68f0    498b47f0                mov rax, [r15-0x10]                                    [39;49m[32;49m
0x7fbdaabb68f4    4881c020000000          add rax, 0x20                                          [39;49m[32;49m
0x7fbdaabb68fb    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb68ff    498906                  mov [r14], rax                                         [39;49m
[34;49m .. , CObj.chey0.hey ) ; sprintf ( &chey0.[39;49m[33;40mchars[39;49m[34;49m [ 24 ], "%s", "hoot" ) ; dump ( &chey0, CObj.size ) ;  }  .. [39;49m[32;49m
0x7fbdaabb6902    488bf8                  mov rdi, rax                                           [39;49m
[34;49m .. ey ) ; sprintf ( &chey0.chars [ 24 ], [39;49m[33;40m"%s"[39;49m[34;49m, "hoot" ) ; dump ( &chey0, CObj.size ) ;  }  .. [39;49m[32;49m
0x7fbdaabb6905    48b8f0ee27a9bd7f0000    mov rax, 0x7fbda927eef0    	[32;49m< string : '[39;49m[39;49m%s[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fbdaabb690f    488bf0                  mov rsi, rax                                           [39;49m
[34;49m ..  sprintf ( &chey0.chars [ 24 ], "%s", [39;49m[33;40m"hoot"[39;49m[34;49m ) ; dump ( &chey0, CObj.size ) ;  }  .. [39;49m[32;49m
0x7fbdaabb6912    48b8f3ee27a9bd7f0000    mov rax, 0x7fbda927eef3    	[32;49m< string : '[39;49m[39;49mhoot[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fbdaabb691c    488bd0                  mov rdx, rax                                           [39;49m[32;49m
0x7fbdaabb691f    48c7c003000000          mov rax, 0x3                                           [39;49m
[34;49m .. printf ( "\n%x\n", CObj.chey0.hey ) ; [39;49m[33;40msprintf[39;49m[34;49m ( &chey0.chars [ 24 ], "%s", "hoot" ) ; dump ( &chey0, CObj.size ) ;  }  .. [39;49m[32;49m
0x7fbdaabb6926    49b8a02ff2aabd7f0000    mov r8, 0x7fbdaaf22fa0                                 [39;49m[32;49m
0x7fbdaabb6930    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaabb693a    49ffd1                  call r9                    	< C.[34;49msprintf[39;49m : 0x00007fbdaaf22fa0[32;49m >[39;49m[39;49m
[34;49m .. hars [ 24 ], "%s", "hoot" ) ; dump ( &[39;49m[33;40mchey0[39;49m[34;49m, CObj.size ) ;  }  .. [39;49m[32;49m
0x7fbdaabb693d    498b47f0                mov rax, [r15-0x10]                                    [39;49m[32;49m
0x7fbdaabb6941    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fbdaabb6948    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb694c    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  "%s", "hoot" ) ; dump ( &chey0, CObj.[39;49m[33;40msize[39;49m[34;49m ) ;  }  .. [39;49m[32;49m
0x7fbdaabb694f    48b8902c62a9bd7f0000    mov rax, 0x7fbda9622c90    	[32;49m< string : '[39;49m[39;49mh[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fbdaabb6959    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fbdaabb695c    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb6960    498906                  mov [r14], rax                                         [39;49m
[34;49m .. &chey0.chars [ 24 ], "%s", "hoot" ) ; [39;49m[33;40mdump[39;49m[34;49m ( &chey0, CObj.size ) ;  }  .. [39;49m[32;49m
0x7fbdaabb6963    49b830b43e1ebd550000    mov r8, 0x55bd1e3eb430                                 [39;49m[32;49m
0x7fbdaabb696d    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaabb6977    49ffd1                  call r9                    	< Debug.[34;49mdump[39;49m : 0x000055bd1e3eb430[32;49m >[39;49m[39;49m
[34;49m .. ot" ) ; dump ( &chey0, CObj.size ) ;  [39;49m[33;40m}[39;49m[34;49m  .. [39;49m[32;49m
0x7fbdaabb697a    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaabb697e    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaabb6982    4983ee10                sub r14, 0x10                                          [39;49m[32;49m
0x7fbdaabb6986    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'chi' :: codeSize = 1266
Word : 0x00007fbda96281b0 :: Compiled at : 0x00007fbdaabb6494
 =============================
::> 'wdiss' was called at namespaces/compiler/c_syntax.csl 132.8 <::

 3 c should be 3  : ok

 5 b should be 5  : ok

 8 a should be 8  : ok


Dump at : namespaces/compiler/c_syntax.csl : 133.15 :
Dump : Address = 0x00007fbda8131828 : Number = 104 :: (little endian dump)
0x00007fbda8131828 :  d2 04 00 00 00 00 00 00  77 65 6c 6c 2c 20 64 6f  ........ well, do 
0x00007fbda8131838 :  20 6f 72 20 64 6f 6e 27  74 20 68 6f 6f 74 00 74   or don' t hoot.t 
0x00007fbda8131848 :  64 6f 6e 27 74 00 00 00  ef cd ab 89 67 45 23 01  don't... ....gE#. 
0x00007fbda8131858 :  ef cd ab 89 67 45 23 01  00 00 00 00 00 00 00 00  ....gE#. ........ 
0x00007fbda8131868 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbda8131878 :  00 00 00 00 00 00 00 00  ef cd ab 89 67 45 23 01  ........ ....gE#. 
0x00007fbda8131888 :  ef cd ab 89 67 45 23 01  00 00 00 00 00 00 00 00  ....gE#. ........ 
 0x0123456789abcdef
 chi : d = 123456789abcdef

 chi : d = 123456789abcdef

 CObj.chey0.chars = 
		hey = 123456789abcdef

 CObj.chey0.chars2 = 
		hey hey = 123456789abcdef

 chi : d = 123456789abcdef

123456789abcdef

 chi : d = 123456789abcdef

89abcdef

Dump at : namespaces/compiler/c_syntax.csl : 133.15 :
Dump : Address = 0x00007fbda8131828 : Number = 0x0000000000000068 :: (little endian dump)
0x00007fbda8131828 :  d2 04 00 00 00 00 00 00  0a 09 09 68 65 79 20 3d  ........ ...hey = 
0x00007fbda8131838 :  20 31 32 33 34 35 36 37  38 39 61 62 63 64 65 66   1234567 89abcdef 
0x00007fbda8131848 :  68 6f 6f 74 00 00 00 00  ef cd ab 89 67 45 23 01  hoot.... ....gE#. 
0x00007fbda8131858 :  ef cd ab 89 67 45 23 01  0a 09 09 68 65 79 20 68  ....gE#. ...hey h 
0x00007fbda8131868 :  65 79 20 3d 20 31 32 33  34 35 36 37 38 39 61 62  ey = 123 456789ab 
0x00007fbda8131878 :  63 64 65 66 00 00 00 00  ef cd ab 89 67 45 23 01  cdef.... ....gE#. 
0x00007fbda8131888 :  ef cd ab 89 67 45 23 01  00 00 00 00 00 00 00 00  ....gE#. ........ 

 =============================
C_Syntax.[34;49minterpret2[39;49m <:> csl compiled word
SourceCode for C_Syntax.[34;49minterpret2[39;49m :> 
[34;49mvoid interpret2 ( | atoken aword ) { testc1 () ; nl tab () ; ps ( "interpret2 :> " ) ; nl while ( 1 ) { atoken = token () ; printf ( "\n\tinterpret2 : token = %s", atoken ) ; if ( ! ( strcmp ( atoken, "i2halt" ) ) ) { printf ( "\n\tinterpret2 exiting..." ) ; return } else { aword = tokenToWord ( atoken ) ; doWord ( aword ) ; } } } [39;49m
Source code file location of [34;49minterpret2[39;49m : "namespaces/compiler/c_syntax.csl" : 138.11 :: we are now at : namespaces/compiler/c_syntax.csl : 186.15
Compiled with : optimizeOn, inlineOn, c_syntaxOn, infixOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xaabb698c -- code size = 473 bytes
TypeSignature : 
 -----------------------------
Word :: C_Syntax.[34;49minterpret2[39;49m : definition = 0x00007fbdaabb698c : disassembly at namespaces/compiler/c_syntax.csl : 186.15 :
[34;49m ..                                  void [39;49m[33;40minterpret2[39;49m[34;49m ( | atoken aword )  { testc1 () ; nl tab () ; ps ( "interpret2 :> " ) ; nl while ( 1 ) {   .. [39;49m[32;49m
0x7fbdaabb698c    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fbdaabb6990    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaabb6994    4981c618000000          add r14, 0x18                                          [39;49m
[34;49m .. void interpret2 ( | atoken aword )  { [39;49m[33;40mtestc1[39;49m[34;49m () ; nl tab () ; ps ( "interpret2 :> " ) ; nl while ( 1 ) {  atoken = token () ;  printf ( "\n .. [39;49m[32;49m
0x7fbdaabb699b    49b90b57bbaabd7f0000    mov r9, 0x7fbdaabb570b                                 [39;49m[32;49m
0x7fbdaabb69a5    49ffd1                  call r9                    	< C_Syntax.[34;49mtestc1[39;49m : 0x00007fbdaabb570b[32;49m >[39;49m[39;49m
[34;49m .. et2 ( | atoken aword )  { testc1 () ; [39;49m[33;40mnl[39;49m[34;49m tab () ; ps ( "interpret2 :> " ) ; nl while ( 1 ) {  atoken = token () ;  printf ( "\n\tinterpret2 .. [39;49m[32;49m
0x7fbdaabb69a8    49b8e0903e1ebd550000    mov r8, 0x55bd1e3e90e0                                 [39;49m[32;49m
0x7fbdaabb69b2    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaabb69bc    49ffd1                  call r9                    	< Io.[34;49mnewline[39;49m : 0x000055bd1e3e90e0[32;49m >[39;49m[39;49m
[34;49m ..  ( | atoken aword )  { testc1 () ; nl [39;49m[33;40mtab[39;49m[34;49m () ; ps ( "interpret2 :> " ) ; nl while ( 1 ) {  atoken = token () ;  printf ( "\n\tinterpret2 :  .. [39;49m[32;49m
0x7fbdaabb69bf    49b810913e1ebd550000    mov r8, 0x55bd1e3e9110                                 [39;49m[32;49m
0x7fbdaabb69c9    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaabb69d3    49ffd1                  call r9                    	< Io.[34;49mtab[39;49m : 0x000055bd1e3e9110[32;49m >[39;49m[39;49m
[34;49m .. ord )  { testc1 () ; nl tab () ; ps ( [39;49m[33;40m"[39;49m[34;49minterpret2 :> " ) ; nl while ( 1 ) {  atoken = token () ;  printf ( "\n\tinterpret2 : token = %s", a .. [39;49m[32;49m
0x7fbdaabb69d6    48b81d8783aabd7f0000    mov rax, 0x7fbdaa83871d    	[32;49m< string : '[39;49m[39;49minterpret2 :> [39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fbdaabb69e0    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb69e4    498906                  mov [r14], rax                                         [39;49m
[34;49m .. en aword )  { testc1 () ; nl tab () ; [39;49m[33;40mps[39;49m[34;49m ( "interpret2 :> " ) ; nl while ( 1 ) {  atoken = token () ;  printf ( "\n\tinterpret2 : token = % .. [39;49m[32;49m
0x7fbdaabb69e7    49b97d63d5aabd7f0000    mov r9, 0x7fbdaad5637d                                 [39;49m[32;49m
0x7fbdaabb69f1    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fbdaad5637d[32;49m >[39;49m[39;49m
[34;49m .. nl tab () ; ps ( "interpret2 :> " ) ; [39;49m[33;40mnl[39;49m[34;49m while ( 1 ) {  atoken = token () ;  printf ( "\n\tinterpret2 : token = %s", atoken ) ;  if ( ! ( s .. [39;49m[32;49m
0x7fbdaabb69f4    49b8e0903e1ebd550000    mov r8, 0x55bd1e3e90e0                                 [39;49m[32;49m
0x7fbdaabb69fe    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaabb6a08    49ffd1                  call r9                    	< Io.[34;49mnewline[39;49m : 0x000055bd1e3e90e0[32;49m >[39;49m[39;49m
[34;49m ..  ; ps ( "interpret2 :> " ) ; nl while [39;49m[33;40m([39;49m[34;49m 1 ) {  atoken = token () ;  printf ( "\n\tinterpret2 : token = %s", atoken ) ;  if ( ! ( strcmp ( a .. [39;49m[32;49m
0x7fbdaabb6a0b    48c7c001000000          mov rax, 0x1                                           [39;49m
[34;49m .. ord ( atoken ) ; doWord ( aword ) ; } [39;49m[33;40m}[39;49m[34;49m }  .. [39;49m[32;49m
0x7fbdaabb6a12    4885c0                  test rax, rax                                          [39;49m[32;49m
0x7fbdaabb6a15    0f8441010000            jz 0x7fbdaabb6b5c          	< C_Syntax.[34;49minterpret2[39;49m+464[32;49m >[39;49m[39;49m[32;49m
0x7fbdaabb6a1b    49b8f0953e1ebd550000    mov r8, 0x55bd1e3e95f0                                 [39;49m[32;49m
0x7fbdaabb6a25    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaabb6a2f    49ffd1                  call r9                    	< Compiler.[34;49mtoken[39;49m : 0x000055bd1e3e95f0[32;49m >[39;49m[39;49m
[34;49m .. interpret2 :> " ) ; nl while ( 1 ) {  [39;49m[33;40matoken[39;49m[34;49m = token () ;  printf ( "\n\tinterpret2 : token = %s", atoken ) ;  if ( ! ( strcmp ( atoken, "i .. [39;49m[32;49m
0x7fbdaabb6a32    498d4708                lea rax, [r15+0x8]                                     [39;49m[32;49m
0x7fbdaabb6a36    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fbdaabb6a39    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fbdaabb6a3c    4983ee08                sub r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb6a40    488901                  mov [rcx], rax                                         [39;49m
[34;49m ..  1 ) {  atoken = token () ;  printf ( [39;49m[33;40m"\n\tinterpret2 : token = %s"[39;49m[34;49m, atoken ) ;  if ( ! ( strcmp ( atoken, "i2halt" ) ) )  {  printf ( "\n\ .. [39;49m[32;49m
0x7fbdaabb6a43    48b8109c28a9bd7f0000    mov rax, 0x7fbda9289c10    	[32;49m< string : '[39;49m[39;49m\n\tinterpret2 : token = %s[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fbdaabb6a4d    488bf8                  mov rdi, rax                                           [39;49m
[34;49m .. intf ( "\n\tinterpret2 : token = %s", [39;49m[33;40matoken[39;49m[34;49m ) ;  if ( ! ( strcmp ( atoken, "i2halt" ) ) )  {  printf ( "\n\tinterpret2 exiting..." ) ; ret .. [39;49m[32;49m
0x7fbdaabb6a50    498b4708                mov rax, [r15+0x8]                                     [39;49m[32;49m
0x7fbdaabb6a54    488bf0                  mov rsi, rax                                           [39;49m[32;49m
0x7fbdaabb6a57    48c7c002000000          mov rax, 0x2                                           [39;49m[32;49m
0x7fbdaabb6a5e    49b810a43a1ebd550000    mov r8, 0x55bd1e3aa410                                 [39;49m[32;49m
0x7fbdaabb6a68    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaabb6a72    49ffd1                  call r9                    	< C.[34;49mprintf[39;49m : 0x000055bd1e3aa410[32;49m >[39;49m[39;49m
[34;49m ..  = %s", atoken ) ;  if ( ! ( strcmp ( [39;49m[33;40matoken[39;49m[34;49m, "i2halt" ) ) )  {  printf ( "\n\tinterpret2 exiting..." ) ; return } else { aword = tokenToWo .. [39;49m[32;49m
0x7fbdaabb6a75    498b4708                mov rax, [r15+0x8]                                     [39;49m[32;49m
0x7fbdaabb6a79    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb6a7d    498906                  mov [r14], rax                                         [39;49m
[34;49m .. atoken ) ;  if ( ! ( strcmp ( atoken, [39;49m[33;40m"[39;49m[34;49mi2halt" ) ) )  {  printf ( "\n\tinterpret2 exiting..." ) ; return } else { aword = tokenToWord ( ato .. [39;49m[32;49m
0x7fbdaabb6a80    48b8c78783aabd7f0000    mov rax, 0x7fbdaa8387c7    	[32;49m< string : '[39;49m[39;49mi2halt[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fbdaabb6a8a    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb6a8e    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaabb6a91    49b8307e3e1ebd550000    mov r8, 0x55bd1e3e7e30                                 [39;49m[32;49m
0x7fbdaabb6a9b    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaabb6aa5    49ffd1                  call r9                    	< String.[34;49mstrcmp[39;49m : 0x000055bd1e3e7e30[32;49m >[39;49m[39;49m[32;49m
0x7fbdaabb6aa8    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fbdaabb6aab    4983ee08                sub r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb6aaf    4885c0                  test rax, rax                                          [39;49m[32;49m
0x7fbdaabb6ab2    7409                    jz 0xaabb6abd                                          [39;49m[32;49m
0x7fbdaabb6ab4    48c7c000000000          mov rax, 0x0                                           [39;49m[32;49m
0x7fbdaabb6abb    eb07                    jmp 0x7fbdaabb6ac4         	< C_Syntax.[34;49minterpret2[39;49m+312[32;49m >[39;49m[39;49m[32;49m
0x7fbdaabb6abd    48c7c001000000          mov rax, 0x1                                           [39;49m
[34;49m .. oWord ( atoken ) ; doWord ( aword ) ; [39;49m[33;40m}[39;49m[34;49m } }  .. [39;49m[32;49m
0x7fbdaabb6ac4    4885c0                  test rax, rax                                          [39;49m[32;49m
0x7fbdaabb6ac7    0f8435000000            jz 0x7fbdaabb6b02          	< C_Syntax.[34;49minterpret2[39;49m+374[32;49m >[39;49m[39;49m
[34;49m .. ( atoken, "i2halt" ) ) )  {  printf ( [39;49m[33;40m"\n\tinterpret2 exiting..."[39;49m[34;49m ) ; return } else { aword = tokenToWord ( atoken ) ; doWord ( aword ) ; } .. [39;49m[32;49m
0x7fbdaabb6acd    48b8319c28a9bd7f0000    mov rax, 0x7fbda9289c31    	[32;49m< string : '[39;49m[39;49m\n\tinterpret2 exiting...[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fbdaabb6ad7    488bf8                  mov rdi, rax                                           [39;49m
[34;49m ..  ! ( strcmp ( atoken, "i2halt" ) ) )  [39;49m[33;40m{[39;49m[34;49m  printf ( "\n\tinterpret2 exiting..." ) ; return } else { aword = tokenToWord ( atoken ) ; doWord ( .. [39;49m[32;49m
0x7fbdaabb6ada    48c7c001000000          mov rax, 0x1                                           [39;49m[32;49m
0x7fbdaabb6ae1    49b810a43a1ebd550000    mov r8, 0x55bd1e3aa410                                 [39;49m[32;49m
0x7fbdaabb6aeb    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaabb6af5    49ffd1                  call r9                    	< C.[34;49mprintf[39;49m : 0x000055bd1e3aa410[32;49m >[39;49m[39;49m
[34;49m .. ( strcmp ( atoken, "i2halt" ) ) )  {  [39;49m[33;40mprintf[39;49m[34;49m ( "\n\tinterpret2 exiting..." ) ; return } else { aword = tokenToWord ( atoken ) ; doWord ( aw .. [39;49m[32;49m
0x7fbdaabb6af8    e95f000000              jmp 0x7fbdaabb6b5c         	< C_Syntax.[34;49minterpret2[39;49m+464[32;49m >[39;49m[39;49m
[34;49m .. \n\tinterpret2 exiting..." ) ; return [39;49m[33;40m}[39;49m[34;49m else { aword = tokenToWord ( atoken ) ; doWord ( aword ) ; } } }  .. [39;49m[32;49m
0x7fbdaabb6afd    e955000000              jmp 0x7fbdaabb6b57         	< C_Syntax.[34;49minterpret2[39;49m+459[32;49m >[39;49m[39;49m
[34;49m .. return } else { aword = tokenToWord ( [39;49m[33;40matoken[39;49m[34;49m ) ; doWord ( aword ) ; } } }  .. [39;49m[32;49m
0x7fbdaabb6b02    498b4708                mov rax, [r15+0x8]                                     [39;49m[32;49m
0x7fbdaabb6b06    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb6b0a    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaabb6b0d    49b8009f3e1ebd550000    mov r8, 0x55bd1e3e9f00                                 [39;49m[32;49m
0x7fbdaabb6b17    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaabb6b21    49ffd1                  call r9                    	< Interpreter.[34;49mtokenToWord[39;49m : 0x000055bd1e3e9f00[32;49m >[39;49m[39;49m
[34;49m .. pret2 exiting..." ) ; return } else { [39;49m[33;40maword[39;49m[34;49m = tokenToWord ( atoken ) ; doWord ( aword ) ; } } }  .. [39;49m[32;49m
0x7fbdaabb6b24    498d4710                lea rax, [r15+0x10]                                    [39;49m[32;49m
0x7fbdaabb6b28    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fbdaabb6b2b    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fbdaabb6b2e    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m .. exiting..." ) ; return } else { aword [39;49m[33;40m=[39;49m[34;49m tokenToWord ( atoken ) ; doWord ( aword ) ; } } }  .. [39;49m[32;49m
0x7fbdaabb6b32    488901                  mov [rcx], rax                                         [39;49m
[34;49m .. d = tokenToWord ( atoken ) ; doWord ( [39;49m[33;40maword[39;49m[34;49m ) ; } } }  .. [39;49m[32;49m
0x7fbdaabb6b35    498b4710                mov rax, [r15+0x10]                                    [39;49m[32;49m
0x7fbdaabb6b39    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb6b3d    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaabb6b40    49b8109b3e1ebd550000    mov r8, 0x55bd1e3e9b10                                 [39;49m[32;49m
0x7fbdaabb6b4a    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaabb6b54    49ffd1                  call r9                    	< Interpreter.[34;49mdoWord[39;49m : 0x000055bd1e3e9b10[32;49m >[39;49m[39;49m[32;49m
0x7fbdaabb6b57    e9affeffff              jmp 0x7fbdaabb6a0b         	< C_Syntax.[34;49minterpret2[39;49m+127[32;49m >[39;49m[39;49m
[34;49m .. d ( atoken ) ; doWord ( aword ) ; } } [39;49m[33;40m}[39;49m[34;49m  .. [39;49m[32;49m
0x7fbdaabb6b5c    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaabb6b60    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaabb6b64    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'interpret2' :: codeSize = 472
Word : 0x00007fbda80197e8 :: Compiled at : 0x00007fbdaabb698c
 =============================
::> 'wdiss' was called at namespaces/compiler/c_syntax.csl 186.15 <::

 =============================
C_Syntax.[34;49minterpret3[39;49m <:> csl compiled word
SourceCode for C_Syntax.[34;49minterpret3[39;49m :> 
[34;49mvoid interpret3 ( | atoken aword ) { testc1 () ; ps ( "interpret3 :> " ) ; nl () ; while ( 1 ) { atoken = token () ; printf ( "\n\tinterpret3 : token = %s", atoken ) ; if ( ! ( strcmp ( atoken, "i3halt" ) ) ) { printf ( "\n\tinterpret3 exiting..." ) ; goto: done ; } else { aword = tokenToWord ( atoken ) ; doWord ( aword ) ; } } label: done ; } [39;49m
Source code file location of [34;49minterpret3[39;49m : "namespaces/compiler/c_syntax.csl" : 163.11 :: we are now at : namespaces/compiler/c_syntax.csl : 187.15
Compiled with : optimizeOn, inlineOn, c_syntaxOn, infixOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xaabb6b6a -- code size = 427 bytes
TypeSignature : 
 -----------------------------
Word :: C_Syntax.[34;49minterpret3[39;49m : definition = 0x00007fbdaabb6b6a : disassembly at namespaces/compiler/c_syntax.csl : 187.15 :
[34;49m ..                                  void [39;49m[33;40minterpret3[39;49m[34;49m ( | atoken aword )  { testc1 () ; ps ( "interpret3 :> " ) ; nl () ; while ( 1 ) {  atoken  .. [39;49m[32;49m
0x7fbdaabb6b6a    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fbdaabb6b6e    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaabb6b72    4981c618000000          add r14, 0x18                                          [39;49m
[34;49m .. void interpret3 ( | atoken aword )  { [39;49m[33;40mtestc1[39;49m[34;49m () ; ps ( "interpret3 :> " ) ; nl () ; while ( 1 ) {  atoken = token () ;  printf ( "\n\tinter .. [39;49m[32;49m
0x7fbdaabb6b79    49b90b57bbaabd7f0000    mov r9, 0x7fbdaabb570b                                 [39;49m[32;49m
0x7fbdaabb6b83    49ffd1                  call r9                    	< C_Syntax.[34;49mtestc1[39;49m : 0x00007fbdaabb570b[32;49m >[39;49m[39;49m
[34;49m ..  | atoken aword )  { testc1 () ; ps ( [39;49m[33;40m"[39;49m[34;49minterpret3 :> " ) ; nl () ; while ( 1 ) {  atoken = token () ;  printf ( "\n\tinterpret3 : token = % .. [39;49m[32;49m
0x7fbdaabb6b86    48b8c48983aabd7f0000    mov rax, 0x7fbdaa8389c4    	[32;49m< string : '[39;49m[39;49minterpret3 :> [39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fbdaabb6b90    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb6b94    498906                  mov [r14], rax                                         [39;49m
[34;49m .. et3 ( | atoken aword )  { testc1 () ; [39;49m[33;40mps[39;49m[34;49m ( "interpret3 :> " ) ; nl () ; while ( 1 ) {  atoken = token () ;  printf ( "\n\tinterpret3 : toke .. [39;49m[32;49m
0x7fbdaabb6b97    49b97d63d5aabd7f0000    mov r9, 0x7fbdaad5637d                                 [39;49m[32;49m
0x7fbdaabb6ba1    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fbdaad5637d[32;49m >[39;49m[39;49m
[34;49m .. testc1 () ; ps ( "interpret3 :> " ) ; [39;49m[33;40mnl[39;49m[34;49m () ; while ( 1 ) {  atoken = token () ;  printf ( "\n\tinterpret3 : token = %s", atoken ) ;  if (  .. [39;49m[32;49m
0x7fbdaabb6ba4    49b8e0903e1ebd550000    mov r8, 0x55bd1e3e90e0                                 [39;49m[32;49m
0x7fbdaabb6bae    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaabb6bb8    49ffd1                  call r9                    	< Io.[34;49mnewline[39;49m : 0x000055bd1e3e90e0[32;49m >[39;49m[39;49m
[34;49m ..  ( "interpret3 :> " ) ; nl () ; while [39;49m[33;40m([39;49m[34;49m 1 ) {  atoken = token () ;  printf ( "\n\tinterpret3 : token = %s", atoken ) ;  if ( ! ( strcmp ( a .. [39;49m[32;49m
0x7fbdaabb6bbb    48c7c001000000          mov rax, 0x1                                           [39;49m
[34;49m .. rd ( atoken ) ; doWord ( aword ) ; }  [39;49m[33;40m}[39;49m[34;49m label: done ; }  .. [39;49m[32;49m
0x7fbdaabb6bc2    4885c0                  test rax, rax                                          [39;49m[32;49m
0x7fbdaabb6bc5    0f8441010000            jz 0x7fbdaabb6d0c          	< C_Syntax.[34;49minterpret3[39;49m+418[32;49m >[39;49m[39;49m
[34;49m .. " ) ; nl () ; while ( 1 ) {  atoken = [39;49m[33;40mtoken[39;49m[34;49m () ;  printf ( "\n\tinterpret3 : token = %s", atoken ) ;  if ( ! ( strcmp ( atoken, "i3halt" )  .. [39;49m[32;49m
0x7fbdaabb6bcb    49b8f0953e1ebd550000    mov r8, 0x55bd1e3e95f0                                 [39;49m[32;49m
0x7fbdaabb6bd5    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaabb6bdf    49ffd1                  call r9                    	< Compiler.[34;49mtoken[39;49m : 0x000055bd1e3e95f0[32;49m >[39;49m[39;49m
[34;49m .. pret3 :> " ) ; nl () ; while ( 1 ) {  [39;49m[33;40matoken[39;49m[34;49m = token () ;  printf ( "\n\tinterpret3 : token = %s", atoken ) ;  if ( ! ( strcmp ( atoken, "i .. [39;49m[32;49m
0x7fbdaabb6be2    498d4708                lea rax, [r15+0x8]                                     [39;49m[32;49m
0x7fbdaabb6be6    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fbdaabb6be9    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fbdaabb6bec    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m .. > " ) ; nl () ; while ( 1 ) {  atoken [39;49m[33;40m=[39;49m[34;49m token () ;  printf ( "\n\tinterpret3 : token = %s", atoken ) ;  if ( ! ( strcmp ( atoken, "i3halt"  .. [39;49m[32;49m
0x7fbdaabb6bf0    488901                  mov [rcx], rax                                         [39;49m
[34;49m ..  1 ) {  atoken = token () ;  printf ( [39;49m[33;40m"\n\tinterpret3 : token = %s"[39;49m[34;49m, atoken ) ;  if ( ! ( strcmp ( atoken, "i3halt" ) ) )  {  printf ( "\n\ .. [39;49m[32;49m
0x7fbdaabb6bf3    48b8589c28a9bd7f0000    mov rax, 0x7fbda9289c58    	[32;49m< string : '[39;49m[39;49m\n\tinterpret3 : token = %s[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fbdaabb6bfd    488bf8                  mov rdi, rax                                           [39;49m
[34;49m .. intf ( "\n\tinterpret3 : token = %s", [39;49m[33;40matoken[39;49m[34;49m ) ;  if ( ! ( strcmp ( atoken, "i3halt" ) ) )  {  printf ( "\n\tinterpret3 exiting..." ) ; got .. [39;49m[32;49m
0x7fbdaabb6c00    498b4708                mov rax, [r15+0x8]                                     [39;49m[32;49m
0x7fbdaabb6c04    488bf0                  mov rsi, rax                                           [39;49m[32;49m
0x7fbdaabb6c07    48c7c002000000          mov rax, 0x2                                           [39;49m
[34;49m .. ; while ( 1 ) {  atoken = token () ;  [39;49m[33;40mprintf[39;49m[34;49m ( "\n\tinterpret3 : token = %s", atoken ) ;  if ( ! ( strcmp ( atoken, "i3halt" ) ) )  {  prin .. [39;49m[32;49m
0x7fbdaabb6c0e    49b810a43a1ebd550000    mov r8, 0x55bd1e3aa410                                 [39;49m[32;49m
0x7fbdaabb6c18    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaabb6c22    49ffd1                  call r9                    	< C.[34;49mprintf[39;49m : 0x000055bd1e3aa410[32;49m >[39;49m[39;49m
[34;49m ..  = %s", atoken ) ;  if ( ! ( strcmp ( [39;49m[33;40matoken[39;49m[34;49m, "i3halt" ) ) )  {  printf ( "\n\tinterpret3 exiting..." ) ; goto: done ;  } else  {  aword =  .. [39;49m[32;49m
0x7fbdaabb6c25    498b4708                mov rax, [r15+0x8]                                     [39;49m[32;49m
0x7fbdaabb6c29    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb6c2d    498906                  mov [r14], rax                                         [39;49m
[34;49m .. atoken ) ;  if ( ! ( strcmp ( atoken, [39;49m[33;40m"[39;49m[34;49mi3halt" ) ) )  {  printf ( "\n\tinterpret3 exiting..." ) ; goto: done ;  } else  {  aword = tokenToW .. [39;49m[32;49m
0x7fbdaabb6c30    48b86e8a83aabd7f0000    mov rax, 0x7fbdaa838a6e    	[32;49m< string : '[39;49m[39;49mi3halt[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fbdaabb6c3a    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb6c3e    498906                  mov [r14], rax                                         [39;49m
[34;49m .. 3 : token = %s", atoken ) ;  if ( ! ( [39;49m[33;40mstrcmp[39;49m[34;49m ( atoken, "i3halt" ) ) )  {  printf ( "\n\tinterpret3 exiting..." ) ; goto: done ;  } else  {  .. [39;49m[32;49m
0x7fbdaabb6c41    49b8307e3e1ebd550000    mov r8, 0x55bd1e3e7e30                                 [39;49m[32;49m
0x7fbdaabb6c4b    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaabb6c55    49ffd1                  call r9                    	< String.[34;49mstrcmp[39;49m : 0x000055bd1e3e7e30[32;49m >[39;49m[39;49m[32;49m
0x7fbdaabb6c58    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fbdaabb6c5b    4983ee08                sub r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb6c5f    4885c0                  test rax, rax                                          [39;49m[32;49m
0x7fbdaabb6c62    7409                    jz 0xaabb6c6d                                          [39;49m[32;49m
0x7fbdaabb6c64    48c7c000000000          mov rax, 0x0                                           [39;49m[32;49m
0x7fbdaabb6c6b    eb07                    jmp 0x7fbdaabb6c74         	< C_Syntax.[34;49minterpret3[39;49m+266[32;49m >[39;49m[39;49m[32;49m
0x7fbdaabb6c6d    48c7c001000000          mov rax, 0x1                                           [39;49m
[34;49m .. oWord ( atoken ) ; doWord ( aword ) ; [39;49m[33;40m}[39;49m[34;49m  } label: done ; }  .. [39;49m[32;49m
0x7fbdaabb6c74    4885c0                  test rax, rax                                          [39;49m[32;49m
0x7fbdaabb6c77    0f8435000000            jz 0x7fbdaabb6cb2          	< C_Syntax.[34;49minterpret3[39;49m+328[32;49m >[39;49m[39;49m
[34;49m .. ( atoken, "i3halt" ) ) )  {  printf ( [39;49m[33;40m"\n\tinterpret3 exiting..."[39;49m[34;49m ) ; goto: done ;  } else  {  aword = tokenToWord ( atoken ) ; doWord ( aw .. [39;49m[32;49m
0x7fbdaabb6c7d    48b8799c28a9bd7f0000    mov rax, 0x7fbda9289c79    	[32;49m< string : '[39;49m[39;49m\n\tinterpret3 exiting...[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fbdaabb6c87    488bf8                  mov rdi, rax                                           [39;49m
[34;49m ..  ! ( strcmp ( atoken, "i3halt" ) ) )  [39;49m[33;40m{[39;49m[34;49m  printf ( "\n\tinterpret3 exiting..." ) ; goto: done ;  } else  {  aword = tokenToWord ( atoken ) ; .. [39;49m[32;49m
0x7fbdaabb6c8a    48c7c001000000          mov rax, 0x1                                           [39;49m
[34;49m .. ( strcmp ( atoken, "i3halt" ) ) )  {  [39;49m[33;40mprintf[39;49m[34;49m ( "\n\tinterpret3 exiting..." ) ; goto: done ;  } else  {  aword = tokenToWord ( atoken ) ; do .. [39;49m[32;49m
0x7fbdaabb6c91    49b810a43a1ebd550000    mov r8, 0x55bd1e3aa410                                 [39;49m[32;49m
0x7fbdaabb6c9b    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaabb6ca5    49ffd1                  call r9                    	< C.[34;49mprintf[39;49m : 0x000055bd1e3aa410[32;49m >[39;49m[39;49m
[34;49m .. ntf ( "\n\tinterpret3 exiting..." ) ; [39;49m[33;40mgoto:[39;49m[34;49m done ;  } else  {  aword = tokenToWord ( atoken ) ; doWord ( aword ) ; }  } label: done ; }  .. [39;49m[32;49m
0x7fbdaabb6ca8    e95f000000              jmp 0x7fbdaabb6d0c         	< C_Syntax.[34;49minterpret3[39;49m+418[32;49m >[39;49m[39;49m
[34;49m .. erpret3 exiting..." ) ; goto: done ;  [39;49m[33;40m}[39;49m[34;49m else  {  aword = tokenToWord ( atoken ) ; doWord ( aword ) ; }  } label: done ; }  .. [39;49m[32;49m
0x7fbdaabb6cad    e955000000              jmp 0x7fbdaabb6d07         	< C_Syntax.[34;49minterpret3[39;49m+413[32;49m >[39;49m[39;49m
[34;49m .. e ;  } else  {  aword = tokenToWord ( [39;49m[33;40matoken[39;49m[34;49m ) ; doWord ( aword ) ; }  } label: done ; }  .. [39;49m[32;49m
0x7fbdaabb6cb2    498b4708                mov rax, [r15+0x8]                                     [39;49m[32;49m
0x7fbdaabb6cb6    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb6cba    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  ) ; goto: done ;  } else  {  aword = [39;49m[33;40mtokenToWord[39;49m[34;49m ( atoken ) ; doWord ( aword ) ; }  } label: done ; }  .. [39;49m[32;49m
0x7fbdaabb6cbd    49b8009f3e1ebd550000    mov r8, 0x55bd1e3e9f00                                 [39;49m[32;49m
0x7fbdaabb6cc7    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaabb6cd1    49ffd1                  call r9                    	< Interpreter.[34;49mtokenToWord[39;49m : 0x000055bd1e3e9f00[32;49m >[39;49m[39;49m
[34;49m .. ting..." ) ; goto: done ;  } else  {  [39;49m[33;40maword[39;49m[34;49m = tokenToWord ( atoken ) ; doWord ( aword ) ; }  } label: done ; }  .. [39;49m[32;49m
0x7fbdaabb6cd4    498d4710                lea rax, [r15+0x10]                                    [39;49m[32;49m
0x7fbdaabb6cd8    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fbdaabb6cdb    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fbdaabb6cde    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m .. ." ) ; goto: done ;  } else  {  aword [39;49m[33;40m=[39;49m[34;49m tokenToWord ( atoken ) ; doWord ( aword ) ; }  } label: done ; }  .. [39;49m[32;49m
0x7fbdaabb6ce2    488901                  mov [rcx], rax                                         [39;49m
[34;49m .. d = tokenToWord ( atoken ) ; doWord ( [39;49m[33;40maword[39;49m[34;49m ) ; }  } label: done ; }  .. [39;49m[32;49m
0x7fbdaabb6ce5    498b4710                mov rax, [r15+0x10]                                    [39;49m[32;49m
0x7fbdaabb6ce9    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb6ced    498906                  mov [r14], rax                                         [39;49m
[34;49m ..   {  aword = tokenToWord ( atoken ) ; [39;49m[33;40mdoWord[39;49m[34;49m ( aword ) ; }  } label: done ; }  .. [39;49m[32;49m
0x7fbdaabb6cf0    49b8109b3e1ebd550000    mov r8, 0x55bd1e3e9b10                                 [39;49m[32;49m
0x7fbdaabb6cfa    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaabb6d04    49ffd1                  call r9                    	< Interpreter.[34;49mdoWord[39;49m : 0x000055bd1e3e9b10[32;49m >[39;49m[39;49m[32;49m
0x7fbdaabb6d07    e9affeffff              jmp 0x7fbdaabb6bbb         	< C_Syntax.[34;49minterpret3[39;49m+81[32;49m >[39;49m[39;49m
[34;49m ..  ( atoken ) ; doWord ( aword ) ; }  } [39;49m[33;40mlabel:[39;49m[34;49m done ; }  .. [39;49m[32;49m
0x7fbdaabb6d0c    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaabb6d10    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaabb6d14    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'interpret3' :: codeSize = 426
Word : 0x00007fbda801d9a8 :: Compiled at : 0x00007fbdaabb6b6a
 =============================
::> 'wdiss' was called at namespaces/compiler/c_syntax.csl 187.15 <::
 
tdbg = 1 
tdbg2 = 2 
tdbg3 = 3 
tdbg4 = 4 
tdbg5 = 5 
tdbg6 = 6 
xhii = 3 3 3 
xhi =  7
 xhi1 = 3
 xhi1 = 11
 xhi2a = 11
	 interpret2 :> 

	interpret2 : token = using
Using Namespaces :> C Root libc void C_Syntax Infix PrefixCombinators CObj Dlsym String chey Class User Combinators Interpreter System libc Dlsym int Shell Compiler Int Debug x o1 DO_Experimental DObject a xxy Logic Control Bits Lexer testD DLLNodeAlloc DLLNode Buffer a112 int64 cta ct Ar9 Ar3 Ar2 Ar1 DLLNodeAlloc4 DLListClone DLList byte Integer Pointer OpenVmTil Word Namespace StartupMacros Io Compiling Reserved Compiler Macro PreProcessor List Stack Memory Colors File Asm Locals Forth Experimental 

	interpret2 : token = sp
	interpret2 : token = #
	interpret2 : token = int
	interpret2 : token = int
	interpret2 : token = ;
	interpret2 : token = #
	interpret2 : token = while
	interpret2 : token = #
	interpret2 : token = return
	interpret2 : token = ;
	interpret2 : token = }
	interpret2 : token = c_syntaxOff
	interpret2 : token = pwi
 =============================
C_Syntax.[34;49mfac4[39;49m <:> csl compiled word
SourceCode for C_Syntax.[34;49mfac4[39;49m :> 
[34;49mint fac4 ( n | facc ) { int facc = 1 ; while ( n > 1 ) facc = n -- * facc ; return facc ; } [39;49m
Source code file location of [34;49mfac4[39;49m : "namespaces/compiler/c_syntax.csl" : 197.5 :: we are now at : namespaces/compiler/c_syntax.csl : 208.9
Compiled with : optimizeOn, inlineOn, c_syntaxOn, infixOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xaabb6d1a -- code size = 84 bytes
TypeSignature : 
 -----------------------------
Word :: C_Syntax.[34;49mfac4[39;49m : definition = 0x00007fbdaabb6d1a : disassembly at namespaces/compiler/c_syntax.csl : 208.9 :
[34;49m ..                                   int [39;49m[33;40mfac4[39;49m[34;49m ( n | facc )  {  int facc = 1 ; while ( n > 1 ) facc = n -- * facc ; return facc ; }  .. [39;49m[32;49m
0x7fbdaabb6d1a    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fbdaabb6d1e    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaabb6d22    4981c618000000          add r14, 0x18                                          [39;49m
[34;49m ..  int fac4 ( n | facc )  {  int facc = [39;49m[33;40m1[39;49m[34;49m ; while ( n > 1 ) facc = n -- * facc ; return facc ; }  .. [39;49m[32;49m
0x7fbdaabb6d29    48c7c001000000          mov rax, 0x1                                           [39;49m
[34;49m ..         int fac4 ( n | facc )  {  int [39;49m[33;40mfacc[39;49m[34;49m = 1 ; while ( n > 1 ) facc = n -- * facc ; return facc ; }  .. [39;49m[32;49m
0x7fbdaabb6d30    498d4f10                lea rcx, [r15+0x10]                                    [39;49m
[34;49m ..    int fac4 ( n | facc )  {  int facc [39;49m[33;40m=[39;49m[34;49m 1 ; while ( n > 1 ) facc = n -- * facc ; return facc ; }  .. [39;49m[32;49m
0x7fbdaabb6d34    488901                  mov [rcx], rax                                         [39;49m
[34;49m .. n | facc )  {  int facc = 1 ; while ( [39;49m[33;40mn[39;49m[34;49m > 1 ) facc = n -- * facc ; return facc ; } [39;49m[32;49m
0x7fbdaabb6d37    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. | facc )  {  int facc = 1 ; while ( n [39;49m[33;40m>[39;49m[34;49m 1 ) facc = n -- * facc ; return facc ; } [39;49m[32;49m
0x7fbdaabb6d3b    4883f801                cmp rax, 0x1                                           [39;49m[32;49m
0x7fbdaabb6d3f    0f8e19000000            jle 0x7fbdaabb6d5e         	< C_Syntax.[34;49mfac4[39;49m+68[32;49m >[39;49m[39;49m
[34;49m .. int facc = 1 ; while ( n > 1 ) facc = [39;49m[33;40mn[39;49m[34;49m -- * facc ; return facc ; } [39;49m[32;49m
0x7fbdaabb6d45    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. c = 1 ; while ( n > 1 ) facc = n -- * [39;49m[33;40mfacc[39;49m[34;49m ; return facc ; } [39;49m[32;49m
0x7fbdaabb6d49    498b4f10                mov rcx, [r15+0x10]                                    [39;49m
[34;49m .. acc = 1 ; while ( n > 1 ) facc = n -- [39;49m[33;40m*[39;49m[34;49m facc ; return facc ; } [39;49m[32;49m
0x7fbdaabb6d4d    480fafc1                imul rax, rcx                                          [39;49m
[34;49m ..  )  {  int facc = 1 ; while ( n > 1 ) [39;49m[33;40mfacc[39;49m[34;49m = n -- * facc ; return facc ; } [39;49m[32;49m
0x7fbdaabb6d51    498d4f10                lea rcx, [r15+0x10]                                    [39;49m
[34;49m ..   int facc = 1 ; while ( n > 1 ) facc [39;49m[33;40m=[39;49m[34;49m n -- * facc ; return facc ; } [39;49m[32;49m
0x7fbdaabb6d55    488901                  mov [rcx], rax                                         [39;49m
[34;49m .. t facc = 1 ; while ( n > 1 ) facc = n [39;49m[33;40m--[39;49m[34;49m * facc ; return facc ; } [39;49m[32;49m
0x7fbdaabb6d58    49ff4ff8                dec qword [r15-0x8]                                    [39;49m
[34;49m ..  ; while ( n > 1 ) facc = n -- * facc [39;49m[33;40m;[39;49m[34;49m return facc ; } [39;49m[32;49m
0x7fbdaabb6d5c    ebd9                    jmp 0x7fbdaabb6d37         	< C_Syntax.[34;49mfac4[39;49m+29[32;49m >[39;49m[39;49m[32;49m
0x7fbdaabb6d5e    498b4710                mov rax, [r15+0x10]                                    [39;49m
[34;49m ..  ) facc = n -- * facc ; return facc ; [39;49m[33;40m}[39;49m[34;49m [39;49m[32;49m
0x7fbdaabb6d62    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaabb6d66    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m
[34;49m .. ( n > 1 ) facc = n -- * facc ; return [39;49m[33;40mfacc[39;49m[34;49m ; } [39;49m[32;49m
0x7fbdaabb6d6a    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaabb6d6d    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'fac4' :: codeSize = 83
Word : 0x00007fbda80222b8 :: Compiled at : 0x00007fbdaabb6d1a
 =============================
::> 'wdiss' was called at namespaces/compiler/c_syntax.csl 208.9 <::

	interpret2 : token = //
	interpret2 : token = 7
	interpret2 : token = fac4
	interpret2 : token = dup
	interpret2 : token = p 5040
	interpret2 : token = 5040
	interpret2 : token = _assert
	interpret2 : token = sp
	interpret2 : token = #
	interpret2 : token = //
	interpret2 : token = i2halt
	interpret2 exiting... 
tdbg = 1 
tdbg2 = 2 
tdbg3 = 3 
tdbg4 = 4 
tdbg5 = 5 
tdbg6 = 6 
xhii = 3 3 3 
xhi =  7
 xhi1 = 3
 xhi1 = 11
 xhi2a = 11 interpret3 :> 

	interpret3 : token = User
	interpret3 : token = words
Words :
 - <namespace> ':>' <word list>
 - User :> [32;49m heey1[39;49m[32;49m hey1[39;49m[32;49m hi1[39;49m[32;49m t3[39;49m[32;49m t1[39;49m[32;49m t0[39;49m[32;49m caseSwitchExample[39;49m[32;49m goedel7[39;49m[32;49m goedel6[39;49m[32;49m goedel5[39;49m[32;49m goedel4[39;49m[32;49m goedel2[39;49m[32;49m goedel[39;49m[32;49m localsT[39;49m[32;49m _localsT[39;49m[32;49m sp[39;49m[32;49m demo0[39;49m[32;49m sp[39;49m[32;49m def[39;49m[32;49m istring[39;49m[32;49m s[39;49m[32;49m opOn[39;49m[32;49m vck[39;49m[32;49m opOn1[39;49m[32;49m opOff[39;49m[32;49m pause[39;49m[32;49m _SMN_[39;49m[32;49m mp[39;49m[32;49m p[39;49m[32;49m s[39;49m[32;49m ts[39;49m[32;49m wdis[39;49m[32;49m _var[39;49m[32;49m var[39;49m[32;49m _const[39;49m[32;49m const[39;49m
 - Root :> [32;49m x1[39;49m[32;49m get[39;49m[32;49m set[39;49m[32;49m goedel8[39;49m[32;49m goedel6[39;49m[32;49m hio[39;49m[32;49m hioo[39;49m[32;49m mct[39;49m[32;49m _doDemo[39;49m[32;49m forStarters[39;49m[32;49m doScript2[39;49m[32;49m doScript[39;49m[32;49m doTX64[39;49m[32;49m doX64[39;49m[32;49m todo[39;49m[32;49m typesInclude[39;49m[32;49m mem2[39;49m[32;49m mrm[39;49m[32;49m TODO[39;49m[32;49m bx[39;49m[32;49m x64[39;49m[32;49m tc[39;49m[32;49m tCSL[39;49m[32;49m rtw[39;49m[32;49m ash[39;49m[32;49m license[39;49m[32;49m purgeAll[39;49m[32;49m purge[39;49m[32;49m ri[39;49m[32;49m fr[39;49m[32;49m _bassert[39;49m[32;49m bnOn[39;49m[32;49m bnOff[39;49m[32;49m bigNumOff[39;49m[32;49m Is_DebugOn[39;49m[32;49m dbgOff[39;49m[32;49m dbgOn[39;49m[32;49m dbOn[39;49m[32;49m dbgOnVar[39;49m[32;49m log[39;49m[32;49m cOff[39;49m[32;49m cOn[39;49m[32;49m C_Off[39;49m[32;49m C_On[39;49m[32;49m forth[39;49m[32;49m ndrop[39;49m[32;49m '[39;49m[32;49m tick[39;49m[32;49m findAny[39;49m[32;49m find[39;49m[32;49m include[39;49m
 - C :> [32;49m x7[39;49m[32;49m heey1[39;49m[32;49m heey[39;49m[32;49m chars2[39;49m[32;49m heey2[39;49m[32;49m hey[39;49m[32;49m chars[39;49m[32;49m hi[39;49m[32;49m sp[39;49m[32;49m sp[39;49m[32;49m sp[39;49m[32;49m $[39;49m[32;49m streol[39;49m[32;49m $$[39;49m[32;49m sp[39;49m[32;49m hip[39;49m[32;49m hi[39;49m[32;49m sp[39;49m[32;49m goedel3[39;49m[32;49m bexp44[39;49m[32;49m bexp43[39;49m[32;49m heeeey2[39;49m[32;49m heeey2[39;49m[32;49m heey2[39;49m[32;49m heey[39;49m[32;49m hey2[39;49m[32;49m hey1[39;49m[32;49m hey[39;49m[32;49m a1234[39;49m[32;49m a123[39;49m[32;49m heey[39;49m[32;49m hey[39;49m[32;49m hi[39;49m[32;49m hey[39;49m[32;49m hi[39;49m[32;49m a1234[39;49m[32;49m a123[39;49m[32;49m heey[39;49m[32;49m hey[39;49m[32;49m hi[39;49m[32;49m sp[39;49m[32;49m sp[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m test1[39;49m[32;49m t64bitSub3[39;49m[32;49m t64bitSub3[39;49m[32;49m t64bitSub2[39;49m[32;49m t64bitSub[39;49m[32;49m t64bitAdd2[39;49m[32;49m t64bitAdd[39;49m[32;49m moe3[39;49m[32;49m moe2[39;49m[32;49m moe[39;49m[32;49m moe[39;49m[32;49m moe[39;49m[32;49m moe[39;49m[32;49m hi[39;49m[32;49m hi[39;49m[32;49m hi[39;49m[32;49m hi[39;49m[32;49m t+[39;49m[32;49m t*[39;49m[32;49m t+[39;49m[32;49m t*[39;49m[32;49m sp[39;49m[32;49m sp[39;49m[32;49m factorial[39;49m[32;49m factorial[39;49m[32;49m doTest[39;49m[32;49m tcd[39;49m[32;49m tL2[39;49m[32;49m tL[39;49m[32;49m aTest[39;49m[32;49m aoTest[39;49m[32;49m test1[39;49m[32;49m test0[39;49m[32;49m tdemo[39;49m[32;49m demo[39;49m[32;49m odemo[39;49m[32;49m demo![39;49m[32;49m dtestAll[39;49m[32;49m testIt[39;49m[32;49m testAll[39;49m[32;49m testBasic[39;49m[32;49m _basicT[39;49m[32;49m basicT[39;49m[32;49m sp[39;49m[32;49m include1[39;49m[32;49m allot[39;49m[32;49m logAppend[39;49m[32;49m logWrite[39;49m[32;49m ;;[39;49m[32;49m wordStructPrint[39;49m[32;49m wordNameStructPrint[39;49m[32;49m ,[39;49m[32;49m rax_return[39;49m[32;49m void_return[39;49m[32;49m c_prefix[39;49m[32;49m c_rtl[39;49m[32;49m cfactorial3_O3[39;49m[32;49m cfactorial2_O3[39;49m[32;49m cfactorial_O3[39;49m[32;49m cfib2_O3[39;49m[32;49m cfib_O3[39;49m[32;49m ctct[39;49m[32;49m cfactorial3[39;49m[32;49m cfactorial2[39;49m[32;49m cfactorial[39;49m[32;49m cfib[39;49m[32;49m --[39;49m[32;49m ++[39;49m[32;49m ?<[39;49m[32;49m >:<[39;49m[32;49m >?[39;49m[32;49m switch[39;49m[32;49m }fi[39;49m[32;49m }else{[39;49m[32;49m if{[39;49m[32;49m (|[39;49m[32;49m ([39;49m[32;49m sprintf[39;49m[32;49m printf[39;49m[32;49m _Printf[39;49m
 - int :> [32;49m this[39;49m[32;49m size[39;49m
 - libc :> 
 - void :> [32;49m this[39;49m[32;49m size[39;49m
 - CObj :> [32;49m this[39;49m[32;49m size[39;49m
 - Dlsym :> 
 - String :> [32;49m hi[39;49m[32;49m hi[39;49m[32;49m stricmp[39;49m[32;49m strcpy[39;49m[32;49m strcat[39;49m[32;49m strcmp[39;49m[32;49m Strlen[39;49m
 - chey :> 
 - Class :> [32;49m hey[39;49m[32;49m hi[39;49m[32;49m tbb[39;49m[32;49m sp[39;49m[32;49m .[39;49m[32;49m [[39;49m[32;49m ][39;49m[32;49m clone[39;49m[32;49m new[39;49m[32;49m struct[39;49m[32;49m class[39;49m[32;49m :{[39;49m[32;49m +:{[39;49m[32;49m };[39;49m
 - Combinators :> [32;49m sp[39;49m[32;49m sp[39;49m[32;49m lT[39;49m[32;49m ppT[39;49m[32;49m cST[39;49m[32;49m oT[39;49m[32;49m cntT[39;49m[32;49m cT[39;49m[32;49m aT[39;49m[32;49m locT[39;49m[32;49m bT[39;49m[32;49m stT[39;49m[32;49m oldL[39;49m[32;49m lispTest[39;49m[32;49m sysT[39;49m[32;49m sT[39;49m[32;49m fT[39;49m[32;49m mT[39;49m[32;49m dT2[39;49m[32;49m dT[39;49m[32;49m loT[39;49m[32;49m dT3[39;49m[32;49m dT2[39;49m[32;49m dT0[39;49m[32;49m test[39;49m[32;49m preprocessorTest[39;49m[32;49m syntaxTest[39;49m[32;49m c_SyntaxTest[39;49m[32;49m objectTest[39;49m[32;49m controlTest[39;49m[32;49m stackTest[39;49m[32;49m bigNumTest[39;49m[32;49m localsTest[39;49m[32;49m arrayTest[39;49m[32;49m classTest[39;49m[32;49m itest[39;49m[32;49m interpT[39;49m[32;49m iinc[39;49m[32;49m _TestDone_[39;49m[32;49m sp[39;49m[32;49m startupMacros[39;49m[32;49m ifElse[39;49m[32;49m ifte[39;49m[32;49m qEval[39;49m[32;49m ix[39;49m[32;49m ?[39;49m[32;49m for[39;49m[32;49m loop[39;49m[32;49m _[39;49m[32;49m _run[39;49m[32;49m _call[39;49m[32;49m run[39;49m[32;49m call[39;49m[32;49m doWhileDo[39;49m[32;49m doWhile[39;49m[32;49m while[39;49m[32;49m if3[39;49m[32;49m if2[39;49m[32;49m if[39;49m[32;49m if1[39;49m[32;49m tf3[39;49m[32;49m tf2[39;49m
 - Interpreter :> [32;49m xhi1[39;49m[32;49m xhi01[39;49m[32;49m xhi2a[39;49m[32;49m xhi2[39;49m[32;49m xhe12[39;49m[32;49m xhe1[39;49m[32;49m xhe0[39;49m[32;49m thi42[39;49m[32;49m thi3[39;49m[32;49m thi2[39;49m[32;49m defined[39;49m[32;49m _defined[39;49m[32;49m :[39;49m[32;49m word[39;49m[32;49m ;[39;49m[32;49m semi[39;49m[32;49m _semi[39;49m[32;49m xt@[39;49m[32;49m }[39;49m[32;49m end[39;49m[32;49m {[39;49m[32;49m #[39;49m[32;49m _lx_[39;49m[32;49m l:[39;49m[32;49m interpretFile[39;49m[32;49m interpret[39;49m[32;49m interpreterDone[39;49m[32;49m interpreterIsDone[39;49m[32;49m interpreterStop[39;49m[32;49m interpreterInit[39;49m[32;49m interpreterRun[39;49m[32;49m interpretNextToken[39;49m[32;49m interpretString[39;49m[32;49m tokenToWord[39;49m[32;49m doWord[39;49m[32;49m eval[39;49m[32;49m /*[39;49m[32;49m */[39;49m[32;49m #![39;49m[32;49m //[39;49m[32;49m compileModeOff[39;49m[32;49m asmModeOff[39;49m[32;49m asmModeOn[39;49m[32;49m compileModeOn[39;49m[32;49m finishDebugInfo[39;49m[32;49m compileMode[39;49m
 - System :> [32;49m assertStkChk[39;49m[32;49m _assertStkChk[39;49m[32;49m _assert[39;49m[32;49m assert1[39;49m[32;49m assert1[39;49m[32;49m assert[39;49m[32;49m assert0[39;49m[32;49m assert1s[39;49m[32;49m _assert[39;49m[32;49m _assert0[39;49m[32;49m ctloc[39;49m[32;49m _assert1[39;49m[32;49m _assert1dbg[39;49m[32;49m debugTest[39;49m[32;49m debugTest1[39;49m[32;49m debugTest2[39;49m[32;49m debugTest3[39;49m[32;49m ddps[39;49m[32;49m adps[39;49m[32;49m ahOff[39;49m[32;49m ahOn[39;49m[32;49m sOn[39;49m[32;49m sOff[39;49m[32;49m vb0[39;49m[32;49m vb1[39;49m[32;49m vb2[39;49m[32;49m vb3[39;49m[32;49m vb4[39;49m[32;49m vb[39;49m[32;49m ahalt[39;49m[32;49m ti[39;49m[32;49m stk[39;49m[32;49m aw[39;49m[32;49m sys[39;49m[32;49m fload[39;49m[32;49m pwi[39;49m[32;49m pwdiss[39;49m[32;49m wi[39;49m[32;49m wdissl[39;49m[32;49m wdiss[39;49m[32;49m _wdiss[39;49m[32;49m _source[39;49m[32;49m pel[39;49m[32;49m pdl[39;49m[32;49m location[39;49m[32;49m F[39;49m[32;49m T[39;49m[32;49m false[39;49m[32;49m true[39;49m[32;49m Default[39;49m[32;49m White[39;49m[32;49m Cyan[39;49m[32;49m Magenta[39;49m[32;49m Blue[39;49m[32;49m Yellow[39;49m[32;49m Green[39;49m[32;49m Red[39;49m[32;49m Black[39;49m[32;49m wrun[39;49m[32;49m saveCpu2State[39;49m[32;49m restoreCpu2State[39;49m[32;49m saveCpuState[39;49m[32;49m restoreCpuState[39;49m[32;49m call_ToAddressThruR8_TestAlignRSP[39;49m[32;49m lcOff[39;49m[32;49m lcOn[39;49m[32;49m registers[39;49m[32;49m _pause[39;49m[32;49m pause[39;49m[32;49m location[39;49m[32;49m showTypeWordStack[39;49m[32;49m cpuStateShow[39;49m[32;49m console[39;49m[32;49m ok[39;49m[32;49m warmInit[39;49m[32;49m fr[39;49m[32;49m fullRestart[39;49m[32;49m ri[39;49m[32;49m restartInit[39;49m[32;49m restart[39;49m[32;49m exit[39;49m[32;49m systemBreak[39;49m[32;49m quit[39;49m[32;49m abort[39;49m[32;49m bye[39;49m[32;49m resetAll[39;49m[32;49m freeSessionMem[39;49m[32;49m allocateMem[39;49m[32;49m returnFromFile[39;49m[32;49m system3[39;49m[32;49m system2[39;49m[32;49m system1[39;49m[32;49m system0[39;49m[32;49m shell[39;49m[32;49m time[39;49m[32;49m timerInit[39;49m[32;49m timeInit[39;49m[32;49m echo[39;49m[32;49m jcc8_Off[39;49m[32;49m jcc8_On[39;49m[32;49m echoOff[39;49m[32;49m echoOn[39;49m[32;49m echoOff[39;49m[32;49m variables[39;49m[32;49m stateAll[39;49m[32;49m state[39;49m[32;49m binary[39;49m[32;49m hex[39;49m[32;49m decimal[39;49m[32;49m version[39;49m[32;49m charNumber[39;49m[32;49m lineNumber[39;49m[32;49m throw[39;49m[32;49m filename[39;49m[32;49m stackDepth[39;49m[32;49m stackInit[39;49m[32;49m reset[39;49m[32;49m _include[39;49m
 - libc :> [32;49m testpick[39;49m[32;49m x[39;49m[32;49m xc[39;49m[32;49m tprintf2[39;49m[32;49m tprintf1[39;49m[32;49m tprintf[39;49m[32;49m memset[39;49m[32;49m strcat[39;49m[32;49m sprintf[39;49m[32;49m strcmp[39;49m[32;49m printf[39;49m
 - Dlsym :> 
 - Shell :> [32;49m hio[39;49m[32;49m test[39;49m[32;49m sh[39;49m[32;49m $[39;49m[32;49m _sh[39;49m[32;49m endif[39;49m[32;49m else[39;49m[32;49m if[39;49m
 - Compiler :> [32;49m vckf1[39;49m[32;49m vckf[39;49m[32;49m >;[39;49m[32;49m mod[39;49m[32;49m nstrcat:[39;49m[32;49m Zenfone2[39;49m[32;49m x[39;49m[32;49m doLisp[39;49m[32;49m COMBINATOR_TOOKIT[39;49m[32;49m doLisp[39;49m[32;49m doTest[39;49m[32;49m doDemo[39;49m[32;49m doInit1[39;49m[32;49m streamLine[39;49m[32;49m classTestRead[39;49m[32;49m DebugFlag[39;49m[32;49m var:[39;49m[32;49m swap[39;49m[32;49m compileCall[39;49m[32;49m compileWord[39;49m[32;49m immediate[39;49m[32;49m '[39;49m[32;49m )[39;49m[32;49m sourceCodeOn[39;49m[32;49m sourceCodeInit[39;49m[32;49m getStringToEndOfLine[39;49m[32;49m ftoken[39;49m[32;49m tokenQID[39;49m[32;49m token[39;49m[32;49m _tick[39;49m[32;49m quote[39;49m[32;49m store[39;49m[32;49m set[39;49m[32;49m poke[39;49m[32;49m =[39;49m[32;49m ![39;49m[32;49m @=[39;49m[32;49m get[39;49m[32;49m peek[39;49m[32;49m load[39;49m[32;49m @[39;49m[32;49m debugWord[39;49m[32;49m prefixOff[39;49m[32;49m prefixOn[39;49m[32;49m infixOff[39;49m[32;49m infixOn[39;49m[32;49m nprefix[39;49m[32;49m prefix[39;49m[32;49m _prefix[39;49m[32;49m typeSignature[39;49m[32;49m inline[39;49m[32;49m ?immediate[39;49m[32;49m _immediate[39;49m[32;49m code[39;49m[32;49m Here[39;49m[32;49m begin[39;49m[32;49m _end[39;49m[32;49m _literal[39;49m[32;49m literal[39;49m[32;49m constant[39;49m[32;49m _constant[39;49m[32;49m variable[39;49m[32;49m _variable[39;49m[32;49m macro[39;49m[32;49m noop[39;49m[32;49m break[39;49m[32;49m return[39;49m[32;49m continue[39;49m[32;49m goto[39;49m[32;49m postfixOn[39;49m[32;49m c_syntaxOff[39;49m[32;49m c_syntaxOn[39;49m
 - Int :> [32;49m mt5[39;49m[32;49m mt5v[39;49m[32;49m mt4[39;49m[32;49m mt3[39;49m[32;49m mt2[39;49m[32;49m mt1a[39;49m[32;49m mta[39;49m[32;49m mt1[39;49m[32;49m mt[39;49m[32;49m _ClassTest_[39;49m[32;49m sp[39;49m[32;49m ppxe[39;49m[32;49m ppx[39;49m[32;49m apause[39;49m[32;49m _logAppend[39;49m[32;49m _logWrite[39;49m[32;49m nl[39;49m[32;49m print[39;49m[32;49m hp[39;49m[32;49m _hp[39;49m[32;49m p[39;49m[32;49m _p[39;49m[32;49m pn[39;49m[32;49m prints[39;49m[32;49m ps[39;49m[32;49m _ps[39;49m[32;49m hexIntPrint[39;49m[32;49m intPrint[39;49m[32;49m /=[39;49m[32;49m *=[39;49m[32;49m %[39;49m[32;49m modulo[39;49m[32;49m /[39;49m[32;49m ^[39;49m[32;49m pow_03[39;49m[32;49m pow[39;49m[32;49m **[39;49m[32;49m *[39;49m[32;49m -=[39;49m[32;49m +=[39;49m[32;49m -[39;49m[32;49m +[39;49m
 - Debug :> [32;49m rdi[39;49m[32;49m s[39;49m[32;49m _s[39;49m[32;49m dbiOff[39;49m[32;49m DbiOn[39;49m[32;49m dbiOn[39;49m[32;49m DebugFlag[39;49m[32;49m v1[39;49m[32;49m v4[39;49m[32;49m tcOnv[39;49m[32;49m scOff[39;49m[32;49m scOn[39;49m[32;49m dscOff[39;49m[32;49m dscOn[39;49m[32;49m nt[39;49m[32;49m tcOff[39;49m[32;49m tcOn[39;49m[32;49m ;t[39;49m[32;49m t:[39;49m[32;49m regs[39;49m[32;49m locals[39;49m[32;49m dbrk[39;49m[32;49m OptimizeOn[39;49m[32;49m d2:[39;49m[32;49m d1:[39;49m[32;49m d:[39;49m[32;49m _startDirectory_[39;49m[32;49m <dbg>[39;49m[32;49m saveCpuState[39;49m[32;49m restoreCpuState[39;49m[32;49m stop[39;49m[32;49m localsShow[39;49m[32;49m info[39;49m[32;49m _info[39;49m[32;49m xtDbg[39;49m[32;49m ;d[39;49m[32;49m _dbgOff[39;49m[32;49m _dbgOn[39;49m[32;49m scOn[39;49m[32;49m scOff[39;49m[32;49m dbgTypecheckOff[39;49m[32;49m dbgTypecheckOn[39;49m[32;49m dbgSourceCodeOff[39;49m[32;49m dbgSourceCodeOn[39;49m[32;49m ndstack[39;49m[32;49m dstack[39;49m[32;49m nrstack[39;49m[32;49m rstack[39;49m[32;49m stackDepthPrint[39;49m[32;49m stack[39;49m[32;49m setSourceCodeWord[39;49m[32;49m sourceDontAdd[39;49m[32;49m source[39;49m[32;49m sourceAdd[39;49m[32;49m wordDisassemble[39;49m[32;49m bdis[39;49m[32;49m dis[39;49m[32;49m dump[39;49m
 - x :> [32;49m ott3[39;49m[32;49m zzx[39;49m[32;49m ott2[39;49m[32;49m zzz[39;49m
 - o1 :> 
 - DO_Experimental :> [32;49m o12[39;49m
 - DObject :> [32;49m new[39;49m[32;49m clone[39;49m[32;49m dobject[39;49m
 - a :> 
 - xxy :> 
 - Logic :> [32;49m up[39;49m[32;49m nt[39;49m[32;49m >=[39;49m[32;49m <=[39;49m[32;49m !=[39;49m[32;49m equal[39;49m[32;49m ==[39;49m[32;49m >[39;49m[32;49m <[39;49m[32;49m &&[39;49m[32;49m and[39;49m[32;49m not[39;49m[32;49m ![39;49m[32;49m ^^[39;49m[32;49m xor[39;49m[32;49m or[39;49m[32;49m ||[39;49m
 - Control :> [32;49m maybePause[39;49m[32;49m hic2[39;49m[32;49m ct2[39;49m[32;49m ct1[39;49m[32;49m ct0[39;49m[32;49m ct00[39;49m[32;49m leaving[39;49m[32;49m abrk0[39;49m[32;49m abrkcon[39;49m[32;49m x[39;49m[32;49m sp[39;49m
 - Bits :> [32;49m tcmp[39;49m[32;49m tNotAnd[39;49m[32;49m tAnd[39;49m[32;49m tnot3[39;49m[32;49m tnot2[39;49m[32;49m tnot[39;49m[32;49m lt10[39;49m[32;49m lt9[39;49m[32;49m lt8[39;49m[32;49m lt7b[39;49m[32;49m lt7[39;49m[32;49m lnt5[39;49m[32;49m lnt5[39;49m[32;49m lnt5[39;49m[32;49m lnt5[39;49m[32;49m lnt5[39;49m[32;49m lnt2[39;49m[32;49m lnt[39;49m[32;49m lnt2[39;49m[32;49m lnt[39;49m[32;49m lnt4[39;49m[32;49m lnt3[39;49m[32;49m lnt2[39;49m[32;49m lnt[39;49m[32;49m lt2[39;49m[32;49m lt[39;49m[32;49m sp[39;49m[32;49m |=[39;49m[32;49m &=[39;49m[32;49m >>=[39;49m[32;49m <<=[39;49m[32;49m neg[39;49m[32;49m ~[39;49m[32;49m ^[39;49m[32;49m |[39;49m[32;49m &[39;49m[32;49m >>[39;49m[32;49m <<[39;49m
 - Lexer :> [32;49m sp[39;49m[32;49m heey[39;49m[32;49m hey[39;49m[32;49m hi[39;49m[32;49m ofile[39;49m[32;49m orpfile[39;49m[32;49m %[39;49m[32;49m "[39;49m
 - testD :> [32;49m testC[39;49m
 - DLLNodeAlloc :> [32;49m testB2[39;49m[32;49m testA2[39;49m[32;49m testB1[39;49m[32;49m testA1[39;49m[32;49m tna2x[39;49m[32;49m testnx[39;49m[32;49m tnax1[39;49m[32;49m testn5[39;49m[32;49m tna3[39;49m[32;49m testn4[39;49m[32;49m tnarr2a[39;49m[32;49m tnarr2[39;49m[32;49m tna[39;49m[32;49m testnarr2[39;49m[32;49m testna[39;49m[32;49m sp[39;49m[32;49m nodes[39;49m[32;49m this[39;49m[32;49m size[39;49m
 - DLLNode :> [32;49m sp[39;49m[32;49m testNode[39;49m[32;49m BeforeReference[39;49m[32;49m AfterReference[39;49m[32;49m BeforeReference[39;49m[32;49m someJunkForTesting[39;49m[32;49m AfterReference[39;49m[32;49m BeforeReference[39;49m[32;49m AfterReference[39;49m[32;49m this[39;49m[32;49m size[39;49m
 - Buffer :> [32;49m buf[39;49m[32;49m this[39;49m[32;49m size[39;49m
 - a112 :> [32;49m c1138[39;49m
 - int64 :> [32;49m this[39;49m[32;49m size[39;49m
 - cta :> [32;49m caba[39;49m[32;49m cadump[39;49m[32;49m tcta[39;49m[32;49m aba[39;49m[32;49m ar[39;49m[32;49m this[39;49m[32;49m size[39;49m
 - ct :> [32;49m ac[39;49m[32;49m tct[39;49m[32;49m ab[39;49m[32;49m ar[39;49m[32;49m this[39;49m[32;49m size[39;49m
 - Ar9 :> [32;49m arr9[39;49m[32;49m a9[39;49m[32;49m adump[39;49m[32;49m _adump[39;49m[32;49m ar[39;49m[32;49m this[39;49m[32;49m size[39;49m
 - Ar3 :> [32;49m a7[39;49m[32;49m a8[39;49m[32;49m a6x[39;49m[32;49m a6[39;49m[32;49m ar[39;49m[32;49m this[39;49m[32;49m size[39;49m
 - Ar2 :> [32;49m a5[39;49m[32;49m a4[39;49m[32;49m ar[39;49m[32;49m this[39;49m[32;49m size[39;49m
 - Ar1 :> [32;49m a3[39;49m[32;49m arr2[39;49m[32;49m arr1[39;49m[32;49m ar[39;49m[32;49m this[39;49m[32;49m size[39;49m
 - DLLNodeAlloc4 :> [32;49m testna5[39;49m[32;49m testna5[39;49m[32;49m testna4[39;49m[32;49m nodes[39;49m[32;49m this[39;49m[32;49m size[39;49m
 - DLListClone :> [32;49m testClone[39;49m[32;49m init[39;49m[32;49m Accum[39;49m[32;49m Four[39;49m[32;49m Three[39;49m[32;49m Twelve[39;49m[32;49m Sum[39;49m[32;49m Prototype[39;49m[32;49m Category[39;49m[32;49m this[39;49m[32;49m size[39;49m
 - DLList :> [32;49m hey[39;49m[32;49m hi[39;49m[32;49m hey[39;49m[32;49m hi[39;49m[32;49m testList[39;49m[32;49m init[39;49m[32;49m TailNode[39;49m[32;49m HeadNode[39;49m[32;49m this[39;49m[32;49m size[39;49m
 - byte :> [32;49m this[39;49m[32;49m size[39;49m
 - Integer :> 
 - Pointer :> [32;49m this[39;49m[32;49m size[39;49m
 - OpenVmTil :> [32;49m lispOn[39;49m[32;49m lispOff[39;49m[32;49m addToHistoryOff[39;49m[32;49m addToHistoryOn[39;49m[32;49m historyReset[39;49m[32;49m addToHistory[39;49m[32;49m historySize[39;49m[32;49m dataStackSize[39;49m[32;49m dictionarySize[39;49m[32;49m sessionObjectsSize[39;49m[32;49m compilerTempObjectsSize[39;49m[32;49m objectsSize[39;49m[32;49m codeSize[39;49m[32;49m dbi[39;49m[32;49m verbosity[39;49m[32;49m debugLevel[39;49m[32;49m debugOn[39;49m[32;49m debugOff[39;49m[32;49m inlineOn[39;49m[32;49m inlineOff[39;49m[32;49m stringMacrosOff[39;49m[32;49m stringMacrosOn[39;49m[32;49m optimizeOff[39;49m[32;49m optimizeOn[39;49m[32;49m t{[39;49m[32;49m }t[39;49m[32;49m typecheckOff[39;49m[32;49m typecheckOn[39;49m[32;49m inlining[39;49m[32;49m optimize[39;49m[32;49m autoVarOff[39;49m[32;49m autoVarOn[39;49m[32;49m autoVar[39;49m
 - Word :> [32;49m code[39;49m[32;49m word_SC_WordList_Show[39;49m[32;49m wordNsListPrint[39;49m[32;49m purgeWordIfContainsName[39;49m[32;49m purgeWordName[39;49m[32;49m addrToWord[39;49m[32;49m codeSize[39;49m[32;49m codeStart[39;49m[32;49m wordAdd[39;49m[32;49m wordFinish[39;49m[32;49m xt=[39;49m[32;49m xt[39;49m[32;49m value[39;49m[32;49m definition[39;49m[32;49m run[39;49m[32;49m wordRun[39;49m[32;49m wordEval[39;49m[32;49m wNamespace[39;49m[32;49m wordNew[39;49m[32;49m name[39;49m
 - Namespace :> [32;49m usingLast:[39;49m[32;49m notUsing:[39;49m[32;49m using:[39;49m[32;49m _findAny[39;49m[32;49m _findUsing[39;49m[32;49m namespace[39;49m[32;49m namespaceWords[39;49m[32;49m _namespaceWords[39;49m[32;49m allWords[39;49m[32;49m words[39;49m[32;49m namespaceTreeWithWords[39;49m[32;49m namespaceTree[39;49m[32;49m namespaces[39;49m[32;49m setStateUsing[39;49m[32;49m setStateNotUsing[39;49m[32;49m notUsing[39;49m[32;49m usingLast[39;49m[32;49m usingFirst[39;49m[32;49m usingWAddress[39;49m[32;49m using[39;49m[32;49m in[39;49m
 - StartupMacros :> [32;49m namespaces[39;49m[32;49m Delimiters[39;49m
 - Io :> [32;49m logOff[39;49m[32;49m logOn[39;49m[32;49m logWrite[39;49m[32;49m logAppend[39;49m[32;49m space[39;49m[32;49m tab[39;49m[32;49m cr[39;49m[32;49m newline[39;49m[32;49m kbhit[39;49m[32;49m key[39;49m[32;49m emit[39;49m[32;49m printString[39;49m
 - Compiling :> [32;49m pokeRegAtAddress[39;49m[32;49m pokeRegWithValue[39;49m[32;49m peekReg[39;49m[32;49m _compileWord[39;49m[32;49m _compileCall[39;49m[32;49m compileInt64[39;49m[32;49m compileInt32[39;49m[32;49m compileInt16[39;49m[32;49m compileByte[39;49m
 - Reserved :> [32;49m {|[39;49m[32;49m |}[39;49m[32;49m swap[39;49m[32;49m keyword[39;49m[32;49m dlsym:[39;49m[32;49m syntactic[39;49m[32;49m immediate[39;49m[32;49m end[39;49m[32;49m {[39;49m[32;49m }[39;49m[32;49m ;[39;49m[32;49m semi[39;49m[32;49m :[39;49m[32;49m word[39;49m
 - Compiler :> 
 - Macro :> [32;49m tm:[39;49m[32;49m findAlias[39;49m[32;49m alias[39;49m[32;49m sm:[39;49m
 - PreProcessor :> [32;49m define[39;49m[32;49m elif[39;49m[32;49m if[39;49m[32;49m else[39;49m[32;49m endif[39;49m[32;49m ![39;49m
 - List :> [32;49m lcRestoreStack[39;49m[32;49m dupList[39;49m[32;49m printList[39;49m[32;49m eval[39;49m[32;49m _([39;49m[32;49m lisp[39;49m
 - Stack :> [32;49m stackCheck[39;49m[32;49m dsp[39;49m[32;49m _swap[39;49m[32;49m pick[39;49m[32;49m _ndrop[39;49m[32;49m dropN[39;49m[32;49m drop[39;49m[32;49m ndup[39;49m[32;49m tos[39;49m[32;49m dup[39;49m[32;49m _dup[39;49m
 - Memory :> [32;49m recycleDebugInfo[39;49m[32;49m mem[39;49m[32;49m freeAllTempMem[39;49m[32;49m freeSessionMem[39;49m[32;49m freeLispTempMem[39;49m[32;49m freeCompilerTempMem[39;49m[32;49m freeTemporayMem[39;49m
 - Colors :> [32;49m alertColors[39;49m[32;49m userColors[39;49m[32;49m defaultColors[39;49m[32;49m noticeColors[39;49m[32;49m debugColors[39;49m[32;49m setNoticeColors[39;49m[32;49m setDebugColors[39;49m[32;49m setAlertColors[39;49m[32;49m setDefaultColors[39;49m[32;49m setUserColors[39;49m[32;49m setNoticeRGB[39;49m[32;49m setUserRGB[39;49m[32;49m setDebugRGB[39;49m[32;49m setAlertRGB[39;49m[32;49m setDefaultRGB[39;49m
 - File :> [32;49m freadToString[39;49m[32;49m fexists[39;49m[32;49m fsize[39;49m[32;49m ftell[39;49m[32;49m fseek[39;49m[32;49m fread[39;49m[32;49m fwrite[39;49m[32;49m fclose[39;49m[32;49m fopen[39;49m
 - Asm :> [32;49m jmp[39;49m[32;49m goto:[39;49m[32;49m label:[39;49m[32;49m goto[39;49m[32;49m label[39;49m[32;49m jcc[39;49m[32;49m Jcc[39;49m[32;49m jmpHere[39;49m[32;49m Jmp[39;49m[32;49m if_[39;49m[32;49m _else_[39;49m[32;49m _fi[39;49m
 - Locals :> [32;49m (|[39;49m[32;49m ([39;49m
 - Forth :> [32;49m n,[39;49m[32;49m 8,[39;49m[32;49m 4,[39;49m[32;49m ,[39;49m[32;49m 2,[39;49m[32;49m 1,[39;49m[32;49m '[39;49m
 - Experimental :> [32;49m <do[39;49m[32;49m does>[39;49m[32;49m do>[39;49m[32;49m locationPrint[39;49m[32;49m locationPush[39;49m
1090 words on the 'using' Namespaces List ::
	interpret3 : token = sp
	interpret3 : token = :
	interpret3 : token = 1
	interpret3 : token = 2
	interpret3 : token = +
	interpret3 : token = p
	interpret3 : token = ;
	interpret3 : token = :
	interpret3 : token = hi1
	interpret3 : token = hi1
	interpret3 : token = ;
	interpret3 : token = :
	interpret3 : token = hey1
	interpret3 : token = hey1
	interpret3 : token = hey1
	interpret3 : token = ;
	interpret3 : token = nl

	interpret3 : token = heey1 3 3 3 3 3 3
	interpret3 : token = #
	interpret3 : token = c_syntaxOn
	interpret3 : token = int
	interpret3 : token = for
	interpret3 : token = return
	interpret3 : token = ;
	interpret3 : token = }
	interpret3 : token = pwi
 =============================
C_Syntax.[34;49mfaccs2[39;49m <:> csl compiled word
SourceCode for C_Syntax.[34;49mfaccs2[39;49m :> 
[34;49mint faccs2 ( n | rec ) { for ( rec = 1 ; n > 1 ; n-- ) { rec = rec * n ; } return rec ; } [39;49m
Source code file location of [34;49mfaccs2[39;49m : "namespaces/compiler/c_syntax.csl" : 227.7 :: we are now at : namespaces/compiler/c_syntax.csl : 235.11
Compiled with : optimizeOn, inlineOn, c_syntaxOn, infixOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xaabb6e0e -- code size = 84 bytes
TypeSignature : 
 -----------------------------
Word :: C_Syntax.[34;49mfaccs2[39;49m : definition = 0x00007fbdaabb6e0e : disassembly at namespaces/compiler/c_syntax.csl : 235.11 :
[34;49m ..                                   int [39;49m[33;40mfaccs2[39;49m[34;49m ( n | rec )  { for ( rec = 1 ; n > 1 ; n-- ) {  rec = rec * n ;  }  return rec ; }  .. [39;49m[32;49m
0x7fbdaabb6e0e    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fbdaabb6e12    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaabb6e16    4981c610000000          add r14, 0x10                                          [39;49m
[34;49m .. int faccs2 ( n | rec )  { for ( rec = [39;49m[33;40m1[39;49m[34;49m ; n > 1 ; n-- ) {  rec = rec * n ;  }  return rec ; }  .. [39;49m[32;49m
0x7fbdaabb6e1d    48c7c001000000          mov rax, 0x1                                           [39;49m
[34;49m ..       int faccs2 ( n | rec )  { for ( [39;49m[33;40mrec[39;49m[34;49m = 1 ; n > 1 ; n-- ) {  rec = rec * n ;  }  return rec ; }  .. [39;49m[32;49m
0x7fbdaabb6e24    498d4f08                lea rcx, [r15+0x8]                                     [39;49m
[34;49m ..   int faccs2 ( n | rec )  { for ( rec [39;49m[33;40m=[39;49m[34;49m 1 ; n > 1 ; n-- ) {  rec = rec * n ;  }  return rec ; }  .. [39;49m[32;49m
0x7fbdaabb6e28    488901                  mov [rcx], rax                                         [39;49m
[34;49mint faccs2 ( n | rec )  { for ( rec = 1 ; [39;49m[33;40mn[39;49m[34;49m > 1 ; n-- ) {  rec = rec * n ;  }  return rec ; }  .. [39;49m[32;49m
0x7fbdaabb6e2b    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. ccs2 ( n | rec )  { for ( rec = 1 ; n [39;49m[33;40m>[39;49m[34;49m 1 ; n-- ) {  rec = rec * n ;  }  return rec ; } [39;49m[32;49m
0x7fbdaabb6e2f    4883f801                cmp rax, 0x1                                           [39;49m[32;49m
0x7fbdaabb6e33    0f8e19000000            jle 0x7fbdaabb6e52         	< C_Syntax.[34;49mfaccs2[39;49m+68[32;49m >[39;49m[39;49m
[34;49m .. or ( rec = 1 ; n > 1 ; n-- ) {  rec = [39;49m[33;40mrec[39;49m[34;49m * n ;  }  return rec ; } [39;49m[32;49m
0x7fbdaabb6e39    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m .. ec = 1 ; n > 1 ; n-- ) {  rec = rec * [39;49m[33;40mn[39;49m[34;49m ;  }  return rec ; } [39;49m[32;49m
0x7fbdaabb6e3d    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m
[34;49m ..  rec = 1 ; n > 1 ; n-- ) {  rec = rec [39;49m[33;40m*[39;49m[34;49m n ;  }  return rec ; } [39;49m[32;49m
0x7fbdaabb6e41    480fafc1                imul rax, rcx                                          [39;49m
[34;49m .. )  { for ( rec = 1 ; n > 1 ; n-- ) {  [39;49m[33;40mrec[39;49m[34;49m = rec * n ;  }  return rec ; } [39;49m[32;49m
0x7fbdaabb6e45    498d4f08                lea rcx, [r15+0x8]                                     [39;49m
[34;49m ..  for ( rec = 1 ; n > 1 ; n-- ) {  rec [39;49m[33;40m=[39;49m[34;49m rec * n ;  }  return rec ; } [39;49m[32;49m
0x7fbdaabb6e49    488901                  mov [rcx], rax                                         [39;49m
[34;49m .. n | rec )  { for ( rec = 1 ; n > 1 ; n[39;49m[33;40m--[39;49m[34;49m ) {  rec = rec * n ;  }  return rec ; } [39;49m[32;49m
0x7fbdaabb6e4c    49ff4ff8                dec qword [r15-0x8]                                    [39;49m
[34;49m ..  rec )  { for ( rec = 1 ; n > 1 ; n-- [39;49m[33;40m)[39;49m[34;49m {  rec = rec * n ;  }  return rec ; } [39;49m[32;49m
0x7fbdaabb6e50    ebd9                    jmp 0x7fbdaabb6e2b         	< C_Syntax.[34;49mfaccs2[39;49m+29[32;49m >[39;49m[39;49m[32;49m
0x7fbdaabb6e52    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m .. ) {  rec = rec * n ;  }  return rec ; [39;49m[33;40m}[39;49m[34;49m [39;49m[32;49m
0x7fbdaabb6e56    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaabb6e5a    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m
[34;49m .. ; n-- ) {  rec = rec * n ;  }  return [39;49m[33;40mrec[39;49m[34;49m ; } [39;49m[32;49m
0x7fbdaabb6e5e    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaabb6e61    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'faccs2' :: codeSize = 83
Word : 0x00007fbda8026bc8 :: Compiled at : 0x00007fbdaabb6e0e
 =============================
::> 'wdiss' was called at namespaces/compiler/c_syntax.csl 235.11 <::

	interpret3 : token = //
	interpret3 : token = 7
	interpret3 : token = faccs2
	interpret3 : token = dup
	interpret3 : token = p 5040
	interpret3 : token = 5040
	interpret3 : token = _assert0
	interpret3 : token = sp
	interpret3 : token = i3halt
	interpret3 exiting...
	interpret4 :> 
	interpret4 : token = C
	interpret4 : token = int
	interpret4 : token = for
	interpret4 : token = return
	interpret4 : token = ;
	interpret4 : token = }
	interpret4 : token = c_syntaxOff
	interpret4 : token = '
	interpret4 : token = find
	interpret4 : token = wdiss
 =============================
C_Syntax.[34;49mfaccs3[39;49m <:> csl compiled word
SourceCode for C_Syntax.[34;49mfaccs3[39;49m :> 
[34;49mint faccs3 ( n | rec ) { for ( rec = 1 ; n > 1 ; n-- ) { rec = rec * n ; } return rec ; } [39;49m
Source code file location of [34;49mfaccs3[39;49m : "namespaces/compiler/c_syntax.csl" : 265.7 :: we are now at : namespaces/compiler/c_syntax.csl : 274.20
Compiled with : optimizeOn, inlineOn, c_syntaxOn, infixOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xaabb703f -- code size = 84 bytes
TypeSignature : 
 -----------------------------
Word :: C_Syntax.[34;49mfaccs3[39;49m : definition = 0x00007fbdaabb703f : disassembly at namespaces/compiler/c_syntax.csl : 274.20 :
[34;49m ..                                   int [39;49m[33;40mfaccs3[39;49m[34;49m ( n | rec )  { for ( rec = 1 ; n > 1 ; n-- ) {  rec = rec * n ;  }  return rec ; }  .. [39;49m[32;49m
0x7fbdaabb703f    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fbdaabb7043    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaabb7047    4981c610000000          add r14, 0x10                                          [39;49m
[34;49m .. int faccs3 ( n | rec )  { for ( rec = [39;49m[33;40m1[39;49m[34;49m ; n > 1 ; n-- ) {  rec = rec * n ;  }  return rec ; }  .. [39;49m[32;49m
0x7fbdaabb704e    48c7c001000000          mov rax, 0x1                                           [39;49m
[34;49m ..       int faccs3 ( n | rec )  { for ( [39;49m[33;40mrec[39;49m[34;49m = 1 ; n > 1 ; n-- ) {  rec = rec * n ;  }  return rec ; }  .. [39;49m[32;49m
0x7fbdaabb7055    498d4f08                lea rcx, [r15+0x8]                                     [39;49m
[34;49m ..   int faccs3 ( n | rec )  { for ( rec [39;49m[33;40m=[39;49m[34;49m 1 ; n > 1 ; n-- ) {  rec = rec * n ;  }  return rec ; }  .. [39;49m[32;49m
0x7fbdaabb7059    488901                  mov [rcx], rax                                         [39;49m
[34;49mint faccs3 ( n | rec )  { for ( rec = 1 ; [39;49m[33;40mn[39;49m[34;49m > 1 ; n-- ) {  rec = rec * n ;  }  return rec ; }  .. [39;49m[32;49m
0x7fbdaabb705c    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. ccs3 ( n | rec )  { for ( rec = 1 ; n [39;49m[33;40m>[39;49m[34;49m 1 ; n-- ) {  rec = rec * n ;  }  return rec ; } [39;49m[32;49m
0x7fbdaabb7060    4883f801                cmp rax, 0x1                                           [39;49m[32;49m
0x7fbdaabb7064    0f8e19000000            jle 0x7fbdaabb7083         	< C_Syntax.[34;49mfaccs3[39;49m+68[32;49m >[39;49m[39;49m
[34;49m .. or ( rec = 1 ; n > 1 ; n-- ) {  rec = [39;49m[33;40mrec[39;49m[34;49m * n ;  }  return rec ; } [39;49m[32;49m
0x7fbdaabb706a    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m .. ec = 1 ; n > 1 ; n-- ) {  rec = rec * [39;49m[33;40mn[39;49m[34;49m ;  }  return rec ; } [39;49m[32;49m
0x7fbdaabb706e    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m
[34;49m ..  rec = 1 ; n > 1 ; n-- ) {  rec = rec [39;49m[33;40m*[39;49m[34;49m n ;  }  return rec ; } [39;49m[32;49m
0x7fbdaabb7072    480fafc1                imul rax, rcx                                          [39;49m
[34;49m .. )  { for ( rec = 1 ; n > 1 ; n-- ) {  [39;49m[33;40mrec[39;49m[34;49m = rec * n ;  }  return rec ; } [39;49m[32;49m
0x7fbdaabb7076    498d4f08                lea rcx, [r15+0x8]                                     [39;49m
[34;49m ..  for ( rec = 1 ; n > 1 ; n-- ) {  rec [39;49m[33;40m=[39;49m[34;49m rec * n ;  }  return rec ; } [39;49m[32;49m
0x7fbdaabb707a    488901                  mov [rcx], rax                                         [39;49m
[34;49m .. n | rec )  { for ( rec = 1 ; n > 1 ; n[39;49m[33;40m--[39;49m[34;49m ) {  rec = rec * n ;  }  return rec ; } [39;49m[32;49m
0x7fbdaabb707d    49ff4ff8                dec qword [r15-0x8]                                    [39;49m
[34;49m ..  rec )  { for ( rec = 1 ; n > 1 ; n-- [39;49m[33;40m)[39;49m[34;49m {  rec = rec * n ;  }  return rec ; } [39;49m[32;49m
0x7fbdaabb7081    ebd9                    jmp 0x7fbdaabb705c         	< C_Syntax.[34;49mfaccs3[39;49m+29[32;49m >[39;49m[39;49m[32;49m
0x7fbdaabb7083    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m .. ) {  rec = rec * n ;  }  return rec ; [39;49m[33;40m}[39;49m[34;49m [39;49m[32;49m
0x7fbdaabb7087    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaabb708b    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m
[34;49m .. ; n-- ) {  rec = rec * n ;  }  return [39;49m[33;40mrec[39;49m[34;49m ; } [39;49m[32;49m
0x7fbdaabb708f    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaabb7092    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'faccs3' :: codeSize = 83
Word : 0x00007fbda802e868 :: Compiled at : 0x00007fbdaabb703f
 =============================
::> 'wdiss' was called at namespaces/compiler/c_syntax.csl 274.20 <::

	interpret4 : token = 7
	interpret4 : token = faccs3
	interpret4 : token = dup
	interpret4 : token = p 5040
	interpret4 : token = 5040
	interpret4 : token = _assert0
	interpret4 : token = sp
	interpret4 : token = i4halt

	token = i4halt :: interpret4 exiting ...
 =============================
C.[34;49m$[39;49m <:> csl compiled word
SourceCode for C.[34;49m$[39;49m :> 
[34;49m: $ streol _sh ; [39;49m
Source code file location of [34;49m$[39;49m : "namespaces/test/system.csl" : 84.2 :: we are now at : namespaces/compiler/c_syntax.csl : 308.19
Compiled with : optimizeOn, inlineOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xaabb538d -- code size = 47 bytes
 -----------------------------
Word :: C.[34;49m$[39;49m : definition = 0x00007fbdaabb538d : disassembly at namespaces/compiler/c_syntax.csl : 308.19 :
[34;49m ..                                   : $ [39;49m[33;40mstreol[39;49m[34;49m _sh ;  .. [39;49m[32;49m
0x7fbdaabb538d    49b8407f3e1ebd550000    mov r8, 0x55bd1e3e7f40                                 [39;49m[32;49m
0x7fbdaabb5397    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaabb53a1    49ffd1                  call r9                    	< Compiler.[34;49mgetStringToEndOfLine[39;49m : 0x000055bd1e3e7f40[32;49m >[39;49m[39;49m
[34;49m ..                            : $ streol [39;49m[33;40m_sh[39;49m[34;49m ;  .. [39;49m[32;49m
0x7fbdaabb53a4    49b8b0ae3e1ebd550000    mov r8, 0x55bd1e3eaeb0                                 [39;49m[32;49m
0x7fbdaabb53ae    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaabb53b8    49ffd1                  call r9                    	< Shell.[34;49m_sh[39;49m : 0x000055bd1e3eaeb0[32;49m >[39;49m[39;49m
[34;49m ..                        : $ streol _sh [39;49m[33;40m;[39;49m[34;49m  .. [39;49m[32;49m
0x7fbdaabb53bb    c3                      ret                                                    [39;49m
Word_Disassemble : word - '$' :: codeSize = 46
Word : 0x00007fbda960a8a0 :: Compiled at : 0x00007fbdaabb538d
 =============================
::> 'wdiss' was called at namespaces/compiler/c_syntax.csl 308.19 <::
 

new $ test
total 1608
drwxrwxr-x   8 dennisj dennisj    4096 Nov 18 11:48 .
drwxrwxrwx 143 dennisj dennisj   36864 Nov 17 22:07 ..
drwxrwxr-x   2 dennisj dennisj    4096 Nov 11 12:12 bin
-rw-rw-r--   1 dennisj dennisj 1051100 Nov 18 11:48 csl.out
drwxrwxr-x   2 dennisj dennisj    4096 Sep 16 04:03 etc
drwxrwxr-x   8 dennisj dennisj    4096 Nov 17 14:32 .git
-rw-rw-r--   1 dennisj dennisj   15740 Sep 19 08:25 init.csl
-rw-rw-r--   1 dennisj dennisj     163 May 26 00:23 itestf
-rw-rw-r--   1 dennisj dennisj    1078 May 26 00:23 LICENSE
-rwxrwxr-x   1 dennisj dennisj     220 May 26 00:23 m
-rwxrwxr-x   1 dennisj dennisj     664 May 26 00:23 m0
-rw-rw-r--   1 dennisj dennisj    7059 Oct 26 11:20 Makefile
-rwxrwxr-x   1 dennisj dennisj     487 Oct 22 10:10 mir
-rwxrwxr-x   1 dennisj dennisj     549 May 26 00:23 mirAll
drwxrwxr-x   4 dennisj dennisj    4096 Sep 16 04:03 namespaces
drwxrwxr-x   3 dennisj dennisj    4096 May 26 00:23 nbproject
-rw-rw-r--   1 dennisj dennisj      40 May 26 00:23 nt.csl
-rwxrwxr-x   1 dennisj dennisj     124 May 26 00:23 r
-rw-rw-r--   1 dennisj dennisj   14186 Jul 17 21:49 README.txt
drwxrwxr-x   5 dennisj dennisj    4096 Sep 16 04:03 src
-rw-rw-r--   1 dennisj dennisj      90 May 26 00:23 test
-rw-rw-r--   1 dennisj dennisj      90 May 26 00:23 test.txt
-rw-rw-r--   1 dennisj dennisj  445085 Sep  1  2013 udis86-1.7.2.tar.gz
[39;49m[39;49m
typeChecking is on, optimize is on, inlining is on, infixMode is off, 
prefixMode is off, c_syntax is off, postfixMode is on
Debug is off. Verbosity = 1. Console = 0, NumberBase = 10.
DebugSourceCode on : BigNum off : Lisp off : jcc8 off
interpreting : at etc/script : 7.6
SignalExceptionsHandled = 0 ; SigSegvs = 0 ; Restarts = 0
StartedTimes = 0 ; RestartCondition = INITIAL_START ; LastRestartCondtion = INITIAL_START
InNamespace = Root.C
version 0.909.237
 7 7 7
version 0.909.237
[39;49m yfac
[39;49m 3628800

[39;49m yfacc
[39;49m 3628800

[39;49m 5040

[34;49m
Increase the verbosity setting to 2 or more for more info here. ( Eg. : verbosity 2 = )[39;49m
ContextSpace                                InUse =     29989 : Unused =       859 : ReAllocations =    1 : Largest =      768 : Smallest =       91
ContextSpace                                InUse =      8872 : Unused =      1368 : ReAllocations =    0 : Largest =     1368 : Smallest =     1368
StringSpace                                 InUse =     18101 : Unused =      2379 : ReAllocations =    0 : Largest =     2379 : Smallest =     2379
HistorySpace                                InUse =         0 : Unused =     10240 : ReAllocations =    0 : Largest =    10240 : Smallest =    10240
BufferSpace                                 InUse =     59098 : Unused =      1318 : ReAllocations =    0 : Largest =     1318 : Smallest =     1318
LispTempSpace                               InUse =    172072 : Unused =     35464 : ReAllocations =    4 : Largest =    34840 : Smallest =        0
DictionarySpace                             InUse =    696856 : Unused =    351720 : ReAllocations =    0 : Largest =   351720 : Smallest =   351720
SessionObjectsSpace                         InUse =     26758 : Unused =     24442 : ReAllocations =    0 : Largest =    24442 : Smallest =    24442
CodeSpace                                   InUse =     24374 : Unused =     78026 : ReAllocations =    0 : Largest =    78026 : Smallest =    78026
WordRecylingSpace                           InUse =    300728 : Unused =    137392 : ReAllocations =    2 : Largest =   136920 : Smallest =       40
CompilerTempObjectSpace                     InUse =    276776 : Unused =     32808 : ReAllocations =    3 : Largest =    32264 : Smallest =       40
TempObjectSpace                             InUse =      1066 : Unused =      9185 : ReAllocations =    1 : Largest =     9185 : Smallest =        0
LispSpace                                   InUse =    123072 : Unused =     85168 : ReAllocations =    4 : Largest =    84560 : Smallest =        0
InternalObjectSpace                         InUse =     69195 : Unused =      7605 : ReAllocations =    0 : Largest =     7605 : Smallest =     7605
CSLInternalSpace                            InUse =     79952 : Unused =      1968 : ReAllocations =    0 : Largest =     1968 : Smallest =     1968
OpenVmTilSpace                              InUse =      5376 : Unused =       768 : ReAllocations =    0 : Largest =      768 : Smallest =      768
Data Stack                                  InUse =         0 : Unused =     16384
Total Accounted Mem                         InUse =   1917381 : Unused =    780710
Mmap_RemainingMemoryAllocated                     =   2814971 : <=: ovt->Mmap_RemainingMemoryAllocated
Total Memory Allocated                            =   2698091
Total Memory leaks                                =         0
RecycledWordCount ::     4 x 440 bytes : Recycled =      1760
WrdInRecycling ::     0 x 440 bytes : InRecycling =         0[39;49m fibc
[39;49m 6765

 =============================
Int.[34;49mfac[39;49m <:> csl compiled word
SourceCode for Int.[34;49mfac[39;49m :> 
[34;49m: fac ( n | rec1 ) rec1 1 = { n @ 1 > } { n @ rec1 @ * rec1 store n -- } while return rec1 @ ; [39;49m
Source code file location of [34;49mfac[39;49m : "etc/script" : 27.2 :: we are now at : etc/script : 32.17
Compiled with : optimizeOn, inlineOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0x4caaa032 -- code size = 89 bytes
TypeSignature : 
 -----------------------------
Word :: Int.[34;49mfac[39;49m : definition = 0x00007ff54caaa032 : disassembly at etc/script : 32.17 :
[34;49m ..                                     : [39;49m[33;40mfac[39;49m[34;49m ( n | rec1 )  rec1 1 =  { n @ 1 > } { n @ rec1 @ * rec1 store n -- } while  return rec1 @ ;  .. [39;49m[32;49m
0x7ff54caaa032    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7ff54caaa036    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7ff54caaa03a    4981c610000000          add r14, 0x10                                          [39;49m
[34;49m ..                   : fac ( n | rec1 )  [39;49m[33;40mrec1[39;49m[34;49m 1 =  { n @ 1 > } { n @ rec1 @ * rec1 store n -- } while  return rec1 @ ;  .. [39;49m[32;49m
0x7ff54caaa041    498d4708                lea rax, [r15+0x8]                                     [39;49m
[34;49m ..              : fac ( n | rec1 )  rec1 [39;49m[33;40m1[39;49m[34;49m =  { n @ 1 > } { n @ rec1 @ * rec1 store n -- } while  return rec1 @ ;  .. [39;49m[32;49m
0x7ff54caaa045    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m ..            : fac ( n | rec1 )  rec1 1 [39;49m[33;40m=[39;49m[34;49m  { n @ 1 > } { n @ rec1 @ * rec1 store n -- } while  return rec1 @ ;  .. [39;49m[32;49m
0x7ff54caaa04c    488908                  mov [rax], rcx                                         [39;49m
[34;49m ..       : fac ( n | rec1 )  rec1 1 =  { [39;49m[33;40mn[39;49m[34;49m @ 1 > } { n @ rec1 @ * rec1 store n -- } while  return rec1 @ ;  .. [39;49m[32;49m
0x7ff54caaa04f    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. : fac ( n | rec1 )  rec1 1 =  { n @ 1 [39;49m[33;40m>[39;49m[34;49m } { n @ rec1 @ * rec1 store n -- } while  return rec1 @ ;  .. [39;49m[32;49m
0x7ff54caaa053    4883f801                cmp rax, 0x1                                           [39;49m[32;49m
0x7ff54caaa057    0f8e19000000            jle 0x7ff54caaa076         	< Int.[34;49mfac[39;49m+68[32;49m >[39;49m[39;49m
[34;49m .. ( n | rec1 )  rec1 1 =  { n @ 1 > } { [39;49m[33;40mn[39;49m[34;49m @ rec1 @ * rec1 store n -- } while  return rec1 @ ; [39;49m[32;49m
0x7ff54caaa05d    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. | rec1 )  rec1 1 =  { n @ 1 > } { n @ [39;49m[33;40mrec1[39;49m[34;49m @ * rec1 store n -- } while  return rec1 @ ; [39;49m[32;49m
0x7ff54caaa061    498b4f08                mov rcx, [r15+0x8]                                     [39;49m
[34;49m .. )  rec1 1 =  { n @ 1 > } { n @ rec1 @ [39;49m[33;40m*[39;49m[34;49m rec1 store n -- } while  return rec1 @ ; [39;49m[32;49m
0x7ff54caaa065    480fafc1                imul rax, rcx                                          [39;49m
[34;49m ..  rec1 1 =  { n @ 1 > } { n @ rec1 @ * [39;49m[33;40mrec1[39;49m[34;49m store n -- } while  return rec1 @ ; [39;49m[32;49m
0x7ff54caaa069    498d4f08                lea rcx, [r15+0x8]                                     [39;49m
[34;49m ..  1 =  { n @ 1 > } { n @ rec1 @ * rec1 [39;49m[33;40mstore[39;49m[34;49m n -- } while  return rec1 @ ; [39;49m[32;49m
0x7ff54caaa06d    488901                  mov [rcx], rax                                         [39;49m
[34;49m .. n @ 1 > } { n @ rec1 @ * rec1 store n [39;49m[33;40m--[39;49m[34;49m } while  return rec1 @ ; [39;49m[32;49m
0x7ff54caaa070    49ff4ff8                dec qword [r15-0x8]                                    [39;49m
[34;49m ..  1 > } { n @ rec1 @ * rec1 store n -- [39;49m[33;40m}[39;49m[34;49m while  return rec1 @ ; [39;49m[32;49m
0x7ff54caaa074    ebd9                    jmp 0x7ff54caaa04f         	< Int.[34;49mfac[39;49m+29[32;49m >[39;49m[39;49m[32;49m
0x7ff54caaa076    498b4708                mov rax, [r15+0x8]                                     [39;49m[32;49m
0x7ff54caaa07a    e900000000              jmp 0x7ff54caaa07f         	< Int.[34;49mfac[39;49m+77[32;49m >[39;49m[39;49m
[34;49m .. ec1 store n -- } while  return rec1 @ [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7ff54caaa07f    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7ff54caaa083    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m
[34;49m .. 1 @ * rec1 store n -- } while  return [39;49m[33;40mrec1[39;49m[34;49m @ ; [39;49m[32;49m
0x7ff54caaa087    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7ff54caaa08a    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'fac' :: codeSize = 88
Word : 0x00007ff54ca44768 :: Compiled at : 0x00007ff54caaa032
 =============================
::> 'wdiss' was called at etc/script 32.17 <::
 5040
bye
 namespaces/compiler/c_syntax.csl 316.20 $$ etc/lispScript [39;49m[39;49m
typeChecking is on, optimize is on, inlining is on, infixMode is off, 
prefixMode is off, c_syntax is off, postfixMode is on
Debug is off. Verbosity = 1. Console = 0, NumberBase = 10.
DebugSourceCode on : BigNum off : Lisp off : jcc8 off
interpreting : at etc/lispScript : 4.6
SignalExceptionsHandled = 0 ; SigSegvs = 0 ; Restarts = 0
StartedTimes = 0 ; RestartCondition = INITIAL_START ; LastRestartCondtion = INITIAL_START
InNamespace = Root.C
version 0.909.237
[39;49m 7
[39;49m yfac
[39;49m 3628800

[39;49m yfacc
[39;49m 3628800

[39;49m 5040

[39;49m fibc
[39;49m 6765

 =============================
Int.[34;49mfac[39;49m <:> csl compiled word
SourceCode for Int.[34;49mfac[39;49m :> 
[34;49m: fac ( n | rec1 ) rec1 1 = { n @ 1 > } { n @ rec1 @ * rec1 store n -- } while return rec1 @ ; [39;49m
Source code file location of [34;49mfac[39;49m : "etc/lispScript" : 22.2 :: we are now at : etc/lispScript : 27.17
Compiled with : optimizeOn, inlineOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xe131bfaf -- code size = 89 bytes
TypeSignature : 
 -----------------------------
Word :: Int.[34;49mfac[39;49m : definition = 0x00007f1ae131bfaf : disassembly at etc/lispScript : 27.17 :
[34;49m ..                                     : [39;49m[33;40mfac[39;49m[34;49m ( n | rec1 )  rec1 1 =  { n @ 1 > } { n @ rec1 @ * rec1 store n -- } while  return rec1 @ ;  .. [39;49m[32;49m
0x7f1ae131bfaf    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7f1ae131bfb3    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7f1ae131bfb7    4981c610000000          add r14, 0x10                                          [39;49m
[34;49m ..                   : fac ( n | rec1 )  [39;49m[33;40mrec1[39;49m[34;49m 1 =  { n @ 1 > } { n @ rec1 @ * rec1 store n -- } while  return rec1 @ ;  .. [39;49m[32;49m
0x7f1ae131bfbe    498d4708                lea rax, [r15+0x8]                                     [39;49m
[34;49m ..              : fac ( n | rec1 )  rec1 [39;49m[33;40m1[39;49m[34;49m =  { n @ 1 > } { n @ rec1 @ * rec1 store n -- } while  return rec1 @ ;  .. [39;49m[32;49m
0x7f1ae131bfc2    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m ..            : fac ( n | rec1 )  rec1 1 [39;49m[33;40m=[39;49m[34;49m  { n @ 1 > } { n @ rec1 @ * rec1 store n -- } while  return rec1 @ ;  .. [39;49m[32;49m
0x7f1ae131bfc9    488908                  mov [rax], rcx                                         [39;49m
[34;49m ..       : fac ( n | rec1 )  rec1 1 =  { [39;49m[33;40mn[39;49m[34;49m @ 1 > } { n @ rec1 @ * rec1 store n -- } while  return rec1 @ ;  .. [39;49m[32;49m
0x7f1ae131bfcc    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. : fac ( n | rec1 )  rec1 1 =  { n @ 1 [39;49m[33;40m>[39;49m[34;49m } { n @ rec1 @ * rec1 store n -- } while  return rec1 @ ;  .. [39;49m[32;49m
0x7f1ae131bfd0    4883f801                cmp rax, 0x1                                           [39;49m[32;49m
0x7f1ae131bfd4    0f8e19000000            jle 0x7f1ae131bff3         	< Int.[34;49mfac[39;49m+68[32;49m >[39;49m[39;49m
[34;49m .. ( n | rec1 )  rec1 1 =  { n @ 1 > } { [39;49m[33;40mn[39;49m[34;49m @ rec1 @ * rec1 store n -- } while  return rec1 @ ; [39;49m[32;49m
0x7f1ae131bfda    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. | rec1 )  rec1 1 =  { n @ 1 > } { n @ [39;49m[33;40mrec1[39;49m[34;49m @ * rec1 store n -- } while  return rec1 @ ; [39;49m[32;49m
0x7f1ae131bfde    498b4f08                mov rcx, [r15+0x8]                                     [39;49m
[34;49m .. )  rec1 1 =  { n @ 1 > } { n @ rec1 @ [39;49m[33;40m*[39;49m[34;49m rec1 store n -- } while  return rec1 @ ; [39;49m[32;49m
0x7f1ae131bfe2    480fafc1                imul rax, rcx                                          [39;49m
[34;49m ..  rec1 1 =  { n @ 1 > } { n @ rec1 @ * [39;49m[33;40mrec1[39;49m[34;49m store n -- } while  return rec1 @ ; [39;49m[32;49m
0x7f1ae131bfe6    498d4f08                lea rcx, [r15+0x8]                                     [39;49m
[34;49m ..  1 =  { n @ 1 > } { n @ rec1 @ * rec1 [39;49m[33;40mstore[39;49m[34;49m n -- } while  return rec1 @ ; [39;49m[32;49m
0x7f1ae131bfea    488901                  mov [rcx], rax                                         [39;49m
[34;49m .. n @ 1 > } { n @ rec1 @ * rec1 store n [39;49m[33;40m--[39;49m[34;49m } while  return rec1 @ ; [39;49m[32;49m
0x7f1ae131bfed    49ff4ff8                dec qword [r15-0x8]                                    [39;49m
[34;49m ..  1 > } { n @ rec1 @ * rec1 store n -- [39;49m[33;40m}[39;49m[34;49m while  return rec1 @ ; [39;49m[32;49m
0x7f1ae131bff1    ebd9                    jmp 0x7f1ae131bfcc         	< Int.[34;49mfac[39;49m+29[32;49m >[39;49m[39;49m[32;49m
0x7f1ae131bff3    498b4708                mov rax, [r15+0x8]                                     [39;49m[32;49m
0x7f1ae131bff7    e900000000              jmp 0x7f1ae131bffc         	< Int.[34;49mfac[39;49m+77[32;49m >[39;49m[39;49m
[34;49m .. ec1 store n -- } while  return rec1 @ [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7f1ae131bffc    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7f1ae131c000    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m
[34;49m .. 1 @ * rec1 store n -- } while  return [39;49m[33;40mrec1[39;49m[34;49m @ ; [39;49m[32;49m
0x7f1ae131c004    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7f1ae131c007    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'fac' :: codeSize = 88
Word : 0x00007f1ae12b57f0 :: Compiled at : 0x00007f1ae131bfaf
 =============================
::> 'wdiss' was called at etc/lispScript 27.17 <::
 5040
bye
 namespaces/compiler/c_syntax.csl 317.22 $$ ls -al /usr/local total 40
drwxr-xr-x 10 root root 4096 Jul 31 09:26 .
drwxr-xr-x 14 root root 4096 Jul 31 09:28 ..
drwxr-xr-x  2 root root 4096 Oct 26 11:21 bin
drwxr-xr-x  2 root root 4096 Oct 26 11:21 etc
drwxr-xr-x  2 root root 4096 Jul 31 09:26 games
drwxr-xr-x  3 root root 4096 Oct 26 11:08 include
drwxr-xr-x  5 root root 4096 Oct 30 07:08 lib
lrwxrwxrwx  1 root root    9 Oct 26 09:49 man -> share/man
drwxr-xr-x  2 root root 4096 Jul 31 09:26 sbin
drwxr-xr-x  8 root root 4096 Oct 26 11:08 share
drwxr-xr-x  2 root root 4096 Jul 31 09:26 src
 namespaces/compiler/c_syntax.csl 318.14 $$ ls -al .total 1624
drwxrwxr-x   8 dennisj dennisj    4096 Nov 18 11:48 .
drwxrwxrwx 143 dennisj dennisj   36864 Nov 17 22:07 ..
drwxrwxr-x   2 dennisj dennisj    4096 Nov 11 12:12 bin
-rw-rw-r--   1 dennisj dennisj 1068499 Nov 18 11:48 csl.out
drwxrwxr-x   2 dennisj dennisj    4096 Sep 16 04:03 etc
drwxrwxr-x   8 dennisj dennisj    4096 Nov 17 14:32 .git
-rw-rw-r--   1 dennisj dennisj   15740 Sep 19 08:25 init.csl
-rw-rw-r--   1 dennisj dennisj     163 May 26 00:23 itestf
-rw-rw-r--   1 dennisj dennisj    1078 May 26 00:23 LICENSE
-rwxrwxr-x   1 dennisj dennisj     220 May 26 00:23 m
-rwxrwxr-x   1 dennisj dennisj     664 May 26 00:23 m0
-rw-rw-r--   1 dennisj dennisj    7059 Oct 26 11:20 Makefile
-rwxrwxr-x   1 dennisj dennisj     487 Oct 22 10:10 mir
-rwxrwxr-x   1 dennisj dennisj     549 May 26 00:23 mirAll
drwxrwxr-x   4 dennisj dennisj    4096 Sep 16 04:03 namespaces
drwxrwxr-x   3 dennisj dennisj    4096 May 26 00:23 nbproject
-rw-rw-r--   1 dennisj dennisj      40 May 26 00:23 nt.csl
-rwxrwxr-x   1 dennisj dennisj     124 May 26 00:23 r
-rw-rw-r--   1 dennisj dennisj   14186 Jul 17 21:49 README.txt
drwxrwxr-x   5 dennisj dennisj    4096 Sep 16 04:03 src
-rw-rw-r--   1 dennisj dennisj      90 May 26 00:23 test
-rw-rw-r--   1 dennisj dennisj      90 May 26 00:23 test.txt
-rw-rw-r--   1 dennisj dennisj  445085 Sep  1  2013 udis86-1.7.2.tar.gz

typeChecking is on, optimize is on, inlining is on, infixMode is off, 
prefixMode is off, c_syntax is off, postfixMode is on
Debug is off. Verbosity = 1. Console = 0, NumberBase = 10.
DebugSourceCode on : BigNum off : Lisp off : jcc8 off
interpreting : at namespaces/compiler/c_syntax.csl : 324.7
SignalExceptionsHandled = 0 ; SigSegvs = 0 ; Restarts = 0
StartedTimes = 1 ; RestartCondition = INITIAL_START ; LastRestartCondtion = csl_RUN_INIT
InNamespace = Root.C
QualifyingNamespace = C.void
should read 3 : 3
 =============================
C_Syntax.[34;49mfac5[39;49m <:> csl compiled word
SourceCode for C_Syntax.[34;49mfac5[39;49m :> 
[34;49mint fac5 ( REG n | REG facc ) { facc = 1 ; while ( n > 1 ) { facc *= n -- ; } return facc ; } [39;49m
Source code file location of [34;49mfac5[39;49m : "namespaces/compiler/c_syntax.csl" : 330.5 :: we are now at : namespaces/compiler/c_syntax.csl : 340.9
Compiled with : optimizeOn, inlineOn, c_syntaxOn, infixOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xaabb7378 -- code size = 36 bytes
TypeSignature : 
 -----------------------------
Word :: C_Syntax.[34;49mfac5[39;49m : definition = 0x00007fbdaabb7378 : disassembly at namespaces/compiler/c_syntax.csl : 340.9 :
[34;49m ..                                   int [39;49m[33;40mfac5[39;49m[34;49m ( REG n | REG facc )  {  facc = 1 ; while ( n > 1 )  { facc *= n -- ; } return facc ; }  .. [39;49m[32;49m
0x7fbdaabb7378    498b3e                  mov rdi, [r14]                                         [39;49m
[34;49m int fac5 ( REG n | REG facc )  {  facc = [39;49m[33;40m1[39;49m[34;49m ; while ( n > 1 )  { facc *= n -- ; } return facc ; }  .. [39;49m[32;49m
0x7fbdaabb737b    48c7c601000000          mov rsi, 0x1                                           [39;49m
[34;49m .. | REG facc )  {  facc = 1 ; while ( n [39;49m[33;40m>[39;49m[34;49m 1 )  { facc *= n -- ; } return facc ; } [39;49m[32;49m
0x7fbdaabb7382    4883ff01                cmp rdi, 0x1                                           [39;49m[32;49m
0x7fbdaabb7386    0f8e0c000000            jle 0x7fbdaabb7398         	< C_Syntax.[34;49mfac5[39;49m+32[32;49m >[39;49m[39;49m
[34;49m .. c )  {  facc = 1 ; while ( n > 1 )  { [39;49m[33;40mfacc[39;49m[34;49m *= n -- ; } return facc ; } [39;49m[32;49m
0x7fbdaabb738c    488bde                  mov rbx, rsi                                           [39;49m
[34;49m .. {  facc = 1 ; while ( n > 1 )  { facc [39;49m[33;40m*=[39;49m[34;49m n -- ; } return facc ; } [39;49m[32;49m
0x7fbdaabb738f    480faff7                imul rsi, rdi                                          [39;49m
[34;49m .. cc = 1 ; while ( n > 1 )  { facc *= n [39;49m[33;40m--[39;49m[34;49m ; } return facc ; } [39;49m[32;49m
0x7fbdaabb7393    48ffcf                  dec rdi                                                [39;49m
[34;49m .. cc = 1 ; while ( n > 1 )  { facc *= n [39;49m[33;40m--[39;49m[34;49m ; } return facc ; } [39;49m[32;49m
0x7fbdaabb7396    ebea                    jmp 0x7fbdaabb7382         	< C_Syntax.[34;49mfac5[39;49m+10[32;49m >[39;49m[39;49m
[34;49m ..  ( n > 1 )  { facc *= n -- ; } return [39;49m[33;40mfacc[39;49m[34;49m ; } [39;49m[32;49m
0x7fbdaabb7398    498936                  mov [r14], rsi                                         [39;49m[32;49m
0x7fbdaabb739b    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'fac5' :: codeSize = 35
Word : 0x00007fbda8038d78 :: Compiled at : 0x00007fbdaabb7378
 =============================
::> 'wdiss' was called at namespaces/compiler/c_syntax.csl 340.9 <::
 5040[32;49m
0x7fbdaabb73a1    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fbdaabb73a5    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaabb73a9    4981c618000000          add r14, 0x18                                          [39;49m[32;49m
0x7fbdaabb73b0    498d4708                lea rax, [r15+0x8]                                     [39;49m[32;49m
0x7fbdaabb73b4    48c7c102000000          mov rcx, 0x2                                           [39;49m[32;49m
0x7fbdaabb73bb    488908                  mov [rax], rcx                                         [39;49m[32;49m
0x7fbdaabb73be    498d4710                lea rax, [r15+0x10]                                    [39;49m[32;49m
0x7fbdaabb73c2    48c7c104000000          mov rcx, 0x4                                           [39;49m[32;49m
0x7fbdaabb73c9    488908                  mov [rax], rcx                                         [39;49m[32;49m
0x7fbdaabb73cc    498b4708                mov rax, [r15+0x8]                                     [39;49m[32;49m
0x7fbdaabb73d0    498b4f10                mov rcx, [r15+0x10]                                    [39;49m[32;49m
0x7fbdaabb73d4    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fbdaabb73d7    48c7c102000000          mov rcx, 0x2                                           [39;49m[32;49m
0x7fbdaabb73de    48c7c200000000          mov rdx, 0x0                                           [39;49m[32;49m
0x7fbdaabb73e5    48f7f9                  idiv rcx                                               [39;49m[32;49m
0x7fbdaabb73e8    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fbdaabb73ec    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaabb73ef    498946f8                mov [r14-0x8], rax                                     [39;49m[32;49m
0x7fbdaabb73f3    49b94464d5aabd7f0000    mov r9, 0x7fbdaad56444                                 [39;49m[32;49m
0x7fbdaabb73fd    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fbdaad56444[32;49m >[39;49m[39;49m[32;49m
0x7fbdaabb7400    48c7c003000000          mov rax, 0x3                                           [39;49m[32;49m
0x7fbdaabb7407    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb740b    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaabb740e    49b9df7cd5aabd7f0000    mov r9, 0x7fbdaad57cdf                                 [39;49m[32;49m
0x7fbdaabb7418    49ffd1                  call r9                    	< System.[34;49m_assert0[39;49m : 0x00007fbdaad57cdf[32;49m >[39;49m[39;49m[32;49m
0x7fbdaabb741b    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaabb741f    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaabb7423    c3                      ret                                                    [39;49m
 3 3 
above line should show 3 3
 =============================
C_Syntax.[34;49myada[39;49m <:> csl compiled word
SourceCode for C_Syntax.[34;49myada[39;49m :> 
[34;49mvoid yada () { int a = 2, b = 12, x ; x = (( a + b ) / 2 ) ; return x ; } [39;49m
Source code file location of [34;49myada[39;49m : "namespaces/compiler/c_syntax.csl" : 360.10 :: we are now at : namespaces/compiler/c_syntax.csl : 360.83
Compiled with : optimizeOn, inlineOn, c_syntaxOn, infixOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xaabb7429 -- code size = 98 bytes
TypeSignature : 
 -----------------------------
Word :: C_Syntax.[34;49myada[39;49m : definition = 0x00007fbdaabb7429 : disassembly at namespaces/compiler/c_syntax.csl : 360.83 :
[34;49m ..                                  void [39;49m[33;40myada[39;49m[34;49m () { int a = 2, b = 12, x ; x = (( a + b ) / 2 ) ; return x ; }  .. [39;49m[32;49m
0x7fbdaabb7429    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fbdaabb742d    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaabb7431    4981c620000000          add r14, 0x20                                          [39;49m
[34;49m ..                void yada () { int a = [39;49m[33;40m2[39;49m[34;49m, b = 12, x ; x = (( a + b ) / 2 ) ; return x ; }  .. [39;49m[32;49m
0x7fbdaabb7438    48c7c002000000          mov rax, 0x2                                           [39;49m
[34;49m ..                    void yada () { int [39;49m[33;40ma[39;49m[34;49m = 2, b = 12, x ; x = (( a + b ) / 2 ) ; return x ; }  .. [39;49m[32;49m
0x7fbdaabb743f    498d4f08                lea rcx, [r15+0x8]                                     [39;49m
[34;49m ..                  void yada () { int a [39;49m[33;40m=[39;49m[34;49m 2, b = 12, x ; x = (( a + b ) / 2 ) ; return x ; }  .. [39;49m[32;49m
0x7fbdaabb7443    488901                  mov [rcx], rax                                         [39;49m
[34;49m ..         void yada () { int a = 2, b = [39;49m[33;40m12[39;49m[34;49m, x ; x = (( a + b ) / 2 ) ; return x ; }  .. [39;49m[32;49m
0x7fbdaabb7446    48c7c00c000000          mov rax, 0xc                                           [39;49m
[34;49m ..             void yada () { int a = 2, [39;49m[33;40mb[39;49m[34;49m = 12, x ; x = (( a + b ) / 2 ) ; return x ; }  .. [39;49m[32;49m
0x7fbdaabb744d    498d4f10                lea rcx, [r15+0x10]                                    [39;49m
[34;49m ..           void yada () { int a = 2, b [39;49m[33;40m=[39;49m[34;49m 12, x ; x = (( a + b ) / 2 ) ; return x ; }  .. [39;49m[32;49m
0x7fbdaabb7451    488901                  mov [rcx], rax                                         [39;49m
[34;49m .. da () { int a = 2, b = 12, x ; x = (( [39;49m[33;40ma[39;49m[34;49m + b ) / 2 ) ; return x ; } [39;49m[32;49m
0x7fbdaabb7454    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m .. ) { int a = 2, b = 12, x ; x = (( a + [39;49m[33;40mb[39;49m[34;49m ) / 2 ) ; return x ; } [39;49m[32;49m
0x7fbdaabb7458    498b4f10                mov rcx, [r15+0x10]                                    [39;49m
[34;49m ..  () { int a = 2, b = 12, x ; x = (( a [39;49m[33;40m+[39;49m[34;49m b ) / 2 ) ; return x ; } [39;49m[32;49m
0x7fbdaabb745c    4803c1                  add rax, rcx                                           [39;49m
[34;49m .. t a = 2, b = 12, x ; x = (( a + b ) / [39;49m[33;40m2[39;49m[34;49m ) ; return x ; } [39;49m[32;49m
0x7fbdaabb745f    48c7c102000000          mov rcx, 0x2                                           [39;49m
[34;49m .. int a = 2, b = 12, x ; x = (( a + b ) [39;49m[33;40m/[39;49m[34;49m 2 ) ; return x ; } [39;49m[32;49m
0x7fbdaabb7466    48c7c200000000          mov rdx, 0x0                                           [39;49m[32;49m
0x7fbdaabb746d    48f7f9                  idiv rcx                                               [39;49m
[34;49m .. void yada () { int a = 2, b = 12, x ; [39;49m[33;40mx[39;49m[34;49m = (( a + b ) / 2 ) ; return x ; }  .. [39;49m[32;49m
0x7fbdaabb7470    498d4f18                lea rcx, [r15+0x18]                                    [39;49m
[34;49m  void yada () { int a = 2, b = 12, x ; x [39;49m[33;40m=[39;49m[34;49m (( a + b ) / 2 ) ; return x ; }  .. [39;49m[32;49m
0x7fbdaabb7474    488901                  mov [rcx], rax                                         [39;49m[32;49m
0x7fbdaabb7477    498b4718                mov rax, [r15+0x18]                                    [39;49m
[34;49m .. x ; x = (( a + b ) / 2 ) ; return x ; [39;49m[33;40m}[39;49m[34;49m [39;49m[32;49m
0x7fbdaabb747b    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaabb747f    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaabb7483    4983c608                add r14, 0x8                                           [39;49m
[34;49m .. 12, x ; x = (( a + b ) / 2 ) ; return [39;49m[33;40mx[39;49m[34;49m ; } [39;49m[32;49m
0x7fbdaabb7487    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaabb748a    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'yada' :: codeSize = 97
Word : 0x00007fbda803d8b0 :: Compiled at : 0x00007fbdaabb7429
 =============================
::> 'wdiss' was called at namespaces/compiler/c_syntax.csl 360.83 <::

DataStack at : [34;49mnamespaces/compiler/c_syntax.csl : 360.97[39;49m :
DataStack depth =   5 : Dsp (R14) = Top = 0x00007fbdab0efa68, InitialTos = 0x00007fbdab0efa40, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fbdab0efa68 > = 0x0000000000000007	
  DataStack   [  -1 ] < 0x00007fbdab0efa60 > = 0x0000000000000007	
  DataStack   [  -2 ] < 0x00007fbdab0efa58 > = 0x0000000000000005	
  DataStack   [  -3 ] < 0x00007fbdab0efa50 > = 0x0000000000000005	
  DataStack   [  -4 ] < 0x00007fbdab0efa48 > = 0x0000000000000005	

DataStack at : [34;49mnamespaces/compiler/c_syntax.csl : 360.107[39;49m :
DataStack depth =   3 : Dsp (R14) = Top = 0x00007fbdab0efa58, InitialTos = 0x00007fbdab0efa40, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fbdab0efa58 > = 0x0000000000000005	
  DataStack   [  -1 ] < 0x00007fbdab0efa50 > = 0x0000000000000005	
  DataStack   [  -2 ] < 0x00007fbdab0efa48 > = 0x0000000000000005	

 =============================
C_Syntax.[34;49myadaYada[39;49m <:> csl compiled word
SourceCode for C_Syntax.[34;49myadaYada[39;49m :> 
[34;49mvoid yadaYada () { int a, b, x ; a = 2, b = 12 ; x = (( a + b ) / 2 ) ; return x ; } [39;49m
Source code file location of [34;49myadaYada[39;49m : "namespaces/compiler/c_syntax.csl" : 361.14 :: we are now at : namespaces/compiler/c_syntax.csl : 361.98
Compiled with : optimizeOn, inlineOn, c_syntaxOn, infixOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xaabb7490 -- code size = 98 bytes
TypeSignature : 
 -----------------------------
Word :: C_Syntax.[34;49myadaYada[39;49m : definition = 0x00007fbdaabb7490 : disassembly at namespaces/compiler/c_syntax.csl : 361.98 :
[34;49m ..                                  void [39;49m[33;40myadaYada[39;49m[34;49m () { int a, b, x ; a = 2, b = 12 ; x = (( a + b ) / 2 ) ; return x ; }  .. [39;49m[32;49m
0x7fbdaabb7490    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fbdaabb7494    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaabb7498    4981c620000000          add r14, 0x20                                          [39;49m
[34;49m ..  void yadaYada () { int a, b, x ; a = [39;49m[33;40m2[39;49m[34;49m, b = 12 ; x = (( a + b ) / 2 ) ; return x ; }  .. [39;49m[32;49m
0x7fbdaabb749f    48c7c002000000          mov rax, 0x2                                           [39;49m
[34;49m ..      void yadaYada () { int a, b, x ; [39;49m[33;40ma[39;49m[34;49m = 2, b = 12 ; x = (( a + b ) / 2 ) ; return x ; }  .. [39;49m[32;49m
0x7fbdaabb74a6    498d4f08                lea rcx, [r15+0x8]                                     [39;49m
[34;49m ..    void yadaYada () { int a, b, x ; a [39;49m[33;40m=[39;49m[34;49m 2, b = 12 ; x = (( a + b ) / 2 ) ; return x ; }  .. [39;49m[32;49m
0x7fbdaabb74aa    488901                  mov [rcx], rax                                         [39;49m
[34;49m .. adaYada () { int a, b, x ; a = 2, b = [39;49m[33;40m12[39;49m[34;49m ; x = (( a + b ) / 2 ) ; return x ; } [39;49m[32;49m
0x7fbdaabb74ad    48c7c00c000000          mov rax, 0xc                                           [39;49m
[34;49m  void yadaYada () { int a, b, x ; a = 2, [39;49m[33;40mb[39;49m[34;49m = 12 ; x = (( a + b ) / 2 ) ; return x ; }  .. [39;49m[32;49m
0x7fbdaabb74b4    498d4f10                lea rcx, [r15+0x10]                                    [39;49m
[34;49mvoid yadaYada () { int a, b, x ; a = 2, b [39;49m[33;40m=[39;49m[34;49m 12 ; x = (( a + b ) / 2 ) ; return x ; }  .. [39;49m[32;49m
0x7fbdaabb74b8    488901                  mov [rcx], rax                                         [39;49m
[34;49m ..  int a, b, x ; a = 2, b = 12 ; x = (( [39;49m[33;40ma[39;49m[34;49m + b ) / 2 ) ; return x ; } [39;49m[32;49m
0x7fbdaabb74bb    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m ..  a, b, x ; a = 2, b = 12 ; x = (( a + [39;49m[33;40mb[39;49m[34;49m ) / 2 ) ; return x ; } [39;49m[32;49m
0x7fbdaabb74bf    498b4f10                mov rcx, [r15+0x10]                                    [39;49m
[34;49m .. nt a, b, x ; a = 2, b = 12 ; x = (( a [39;49m[33;40m+[39;49m[34;49m b ) / 2 ) ; return x ; } [39;49m[32;49m
0x7fbdaabb74c3    4803c1                  add rax, rcx                                           [39;49m
[34;49m ..  x ; a = 2, b = 12 ; x = (( a + b ) / [39;49m[33;40m2[39;49m[34;49m ) ; return x ; } [39;49m[32;49m
0x7fbdaabb74c6    48c7c102000000          mov rcx, 0x2                                           [39;49m
[34;49m .. b, x ; a = 2, b = 12 ; x = (( a + b ) [39;49m[33;40m/[39;49m[34;49m 2 ) ; return x ; } [39;49m[32;49m
0x7fbdaabb74cd    48c7c200000000          mov rdx, 0x0                                           [39;49m[32;49m
0x7fbdaabb74d4    48f7f9                  idiv rcx                                               [39;49m
[34;49m .. da () { int a, b, x ; a = 2, b = 12 ; [39;49m[33;40mx[39;49m[34;49m = (( a + b ) / 2 ) ; return x ; } [39;49m[32;49m
0x7fbdaabb74d7    498d4f18                lea rcx, [r15+0x18]                                    [39;49m
[34;49m ..  () { int a, b, x ; a = 2, b = 12 ; x [39;49m[33;40m=[39;49m[34;49m (( a + b ) / 2 ) ; return x ; } [39;49m[32;49m
0x7fbdaabb74db    488901                  mov [rcx], rax                                         [39;49m[32;49m
0x7fbdaabb74de    498b4718                mov rax, [r15+0x18]                                    [39;49m
[34;49m .. 2 ; x = (( a + b ) / 2 ) ; return x ; [39;49m[33;40m}[39;49m[34;49m [39;49m[32;49m
0x7fbdaabb74e2    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaabb74e6    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaabb74ea    4983c608                add r14, 0x8                                           [39;49m
[34;49m ..  = 12 ; x = (( a + b ) / 2 ) ; return [39;49m[33;40mx[39;49m[34;49m ; } [39;49m[32;49m
0x7fbdaabb74ee    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaabb74f1    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'yadaYada' :: codeSize = 97
Word : 0x00007fbda8040788 :: Compiled at : 0x00007fbdaabb7490
 =============================
::> 'wdiss' was called at namespaces/compiler/c_syntax.csl 361.98 <::

DataStack at : [34;49mnamespaces/compiler/c_syntax.csl : 361.124[39;49m :
DataStack depth =   3 : Dsp (R14) = Top = 0x00007fbdab0efa58, InitialTos = 0x00007fbdab0efa40, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fbdab0efa58 > = 0x0000000000000005	
  DataStack   [  -1 ] < 0x00007fbdab0efa50 > = 0x0000000000000005	
  DataStack   [  -2 ] < 0x00007fbdab0efa48 > = 0x0000000000000005	

Dump at : namespaces/compiler/c_syntax.csl : 374.32 :
Dump : Address = 0x00007fbda8043b88 : Number = 240 :: (little endian dump)
0x00007fbda8043b88 :  d0 39 04 a8 bd 7f 00 00  f8 ba c9 aa bd 7f 00 00  .9...... ........ 
0x00007fbda8043b98 :  00 00 00 00 b8 01 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbda8043ba8 :  02 00 00 00 00 00 04 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbda8043bb8 :  00 00 00 00 00 00 00 00  40 00 00 00 00 00 00 00  ........ @....... 
0x00007fbda8043bc8 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbda8043bd8 :  00 00 00 00 00 00 00 00  1f 00 00 00 00 00 00 00  ........ ........ 
0x00007fbda8043be8 :  0b 97 83 aa bd 7f 00 00  30 00 04 04 00 00 00 00  ........ 0....... 
0x00007fbda8043bf8 :  06 75 bb aa bd 7f 00 00  00 00 00 00 00 00 00 00  .u...... ........ 
0x00007fbda8043c08 :  00 00 00 00 00 00 00 00  f8 3b 04 a8 bd 7f 00 00  ........ .;...... 
0x00007fbda8043c18 :  28 b9 c9 aa bd 7f 00 00  00 00 00 00 00 00 00 00  (....... ........ 
0x00007fbda8043c28 :  00 00 00 00 00 00 00 00  06 75 bb aa bd 7f 00 00  ........ .u...... 
0x00007fbda8043c38 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbda8043c48 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 
0x00007fbda8043c58 :  00 00 00 00 00 00 00 00  68 3c 04 a8 bd 7f 00 00  ........ h<...... 
0x00007fbda8043c68 :  00 00 00 00 00 00 00 00  00 00 00 00 00 00 00 00  ........ ........ 



	          DLNode : S_Node : size = 80 : at 00007fbda8043b88
0x00007fbda8043b88  dlnode           *   n_After                  = 0x00007fbda80439d0
0x00007fbda8043b90  dlnode           *   n_Before                 = 0x00007fbdaac9baf8
0x00007fbda8043b98  int32                n_Type                   = 0x00000000
0x00007fbda8043b9c  int16                n_Size                   = 0x01b8
0x00007fbda8043b9e  Boolean              n_Slots                  = ' ' : 0x00
0x00007fbda8043b9f  Boolean              n_InUseFlag              = ' ' : 0x00
0x00007fbda8043b90  node             *   n_CurrentNode            = 0x00007fbdaac9baf8
0x00007fbda8043b90  byte             *   n_unmap                  = 0x00007fbdaac9baf8
0x00007fbda8043ba0  dlnode           *   do_After                 = 0x0000000000000000
0x00007fbda8043ba8  dlnode           *   do_Before                = 0x0004000000000002
0x00007fbda8043b98  int32                do_Type                  = 0x00000000
0x00007fbda8043b9c  int16                do_Size                  = 0x01b8
0x00007fbda8043b9e  Boolean              do_Slots                 = ' ' : 0x00
0x00007fbda8043b9f  Boolean              do_InUseFlag             = ' ' : 0x00
0x00007fbda8043b90  byte             *   do_bData                 = 0x00007fbdaac9baf8
0x00007fbda8043b90  int64            *   do_iData                 = 0x00007fbdaac9baf8

	         _DLNode : n_DLNode : size = 24 : at 00007fbda8043ba0
0x00007fbda8043b88  dlnode           *   n_After                  = 0x00007fbda80439d0
0x00007fbda8043b90  dlnode           *   n_Before                 = 0x00007fbdaac9baf8
0x00007fbda8043b98  node             *   n_CurrentNode            = 0x000001b800000000
0x00007fbda8043b98  int32                n_Type                   = 0x00000000
0x00007fbda8043b9c  int16                n_Size                   = 0x01b8
0x00007fbda8043b9e  Boolean              n_Slots                  = ' ' : 0x00
0x00007fbda8043b9f  Boolean              n_InUseFlag              = ' ' : 0x00
0x00007fbda8043b90  byte             *   n_unmap                  = 0x00007fbdaac9baf8

	         dobject : n_dobject : size = 32 : at 00007fbda8043ba0
0x00007fbda8043b88  dlnode           *   do_After                 = 0x00007fbda80439d0
0x00007fbda8043b90  dlnode           *   do_Before                = 0x00007fbdaac9baf8
0x00007fbda8043b98  int32                do_Type                  = 0x00000000
0x00007fbda8043b9c  int16                do_Size                  = 0x01b8
0x00007fbda8043b9e  int8                 do_Slots                 = ' ' : 0x00
0x00007fbda8043b9f  int8                 do_InUseFlag             = ' ' : 0x00
0x00007fbda8043ba0  byte             *   do_bData                 = 0x0000000000000000
0x00007fbda8043ba0  int64            *   do_iData                 = 0x0000000000000000

	   AttributeInfo : n_Attributes : size = 48 : at 00007fbda8043ba8
0x00007fbda8043b88  uint64               T_MorphismAttributes     = 0x00007fbda80439d0
0x00007fbda8043b90  uint64               T_ObjectAttributes       = 0x00007fbdaac9baf8
0x00007fbda8043b98  uint64               T_LispAttributes         = 0x000001b800000000
0x00007fbda8043ba0  uint64               T_WAllocationType        = 0x0000000000000000
0x00007fbda8043ba8  uint32               T_WordAttributes         = 0x00000002
0x00007fbda8043bac  uint16               T_NumberOfPrefixedArgs   = 0x0000
0x00007fbda8043bae  uint16               T_Unused                 = 0x0004
0x00007fbda8043bb0  uint64               T_NumberOfSlots          = 0x0000000000000000
0x00007fbda8043bb0  uint64               T_NumberOfBytes          = 0x0000000000000000
0x00007fbda8043bb0  uint64               T_Size                   = 0x0000000000000000
0x00007fbda8043bb0  uint64               T_ChunkSize              = 0x0000000000000000
0x00007fbda8043bd8  int64                Slots                    = 0x0000000000000000
0x00007fbda8043be0  int64                CodeSize                 = 0x000000000000001f
0x00007fbda8043be8  byte             *   S_Name                   = 0x00007fbdaa83970b
0x00007fbda8043bf0  uint64               State                    = 0x0000000004040030
0x00007fbda8043bf8  uint64               S_Value                  = 0x00007fbdaabb7506
0x00007fbda8043bf8  byte             *   S_BytePtr                = 0x00007fbdaabb7506
0x00007fbda8043bf8  byte             *   S_Object                 = 0x00007fbdaabb7506
0x00007fbda8043c00  dllist           *   S_SymbolList             = 0x0000000000000000
0x00007fbda8043c08  uint64               S_DObjectValue           = 0x0000000000000000
0x00007fbda8043c10  uint64           *   S_PtrToValue             = 0x00007fbda8043bf8
0x00007fbda8043c18  _Identifier      *   S_ContainingNamespace    = 0x00007fbdaac9b928
0x00007fbda8043c18  _Identifier      *   S_ContainingList         = 0x00007fbdaac9b928
0x00007fbda8043c18  _Identifier      *   S_Prototype              = 0x00007fbdaac9b928
0x00007fbda8043c20  uint64               S_Value2                 = 0x0000000000000000
0x00007fbda8043c20  dlnode           *   S_Node2                  = 0x0000000000000000
0x00007fbda8043c20  byte             *   S_pb_Data2               = 0x0000000000000000
0x00007fbda8043c28  uint64               S_Value3                 = 0x0000000000000000
0x00007fbda8043c28  dlnode           *   S_Node3                  = 0x0000000000000000
0x00007fbda8043c28  byte             *   S_pb_Data3               = 0x0000000000000000
0x00007fbda8043c30  block                Definition               = 0x00007fbdaabb7506
0x00007fbda8043c38  dllist           *   DebugWordList            = 0x0000000000000000
0x00007fbda8043c40  int64                StartCharRlIndex         = 0x0000000000000000
0x00007fbda8043c48  int64                SC_WordIndex             = 0x0000000000000000
0x00007fbda8043c50  int64                SC_FileIndex_Start       = 0x0000000000000000
0x00007fbda8043c58  int64                SC_FileIndex_End         = 0x0000000000000000
0x00007fbda8043c60  _Identifier      *   CSLWord                  = 0x00007fbda8043c68
0x00007fbda8043c68  _Identifier      *   BaseObject               = 0x0000000000000000
0x00007fbda8043c70  _WordData        *   W_WordData               = 0x0000000000000000
 =============================
Experimental.[34;49mbyteTest[39;49m <:> structure : size = 28, [34;49mbyteTest[39;49m alias for [34;49m_byteTest[39;49m, immediate
SourceCode for Experimental.[34;49m_byteTest[39;49m :> 
[34;49mtypedef struct _byteTest { byte a8_123 ; int64 a64_123 ; byte b8_123 ; byte c8_123 ; union { int64 u64_123 ; int32 u32_123 ; int8 u8_123 ; } ; int32 a32_123 ; byte d8_123 ; int16 a16_123 ; } byteTest, abyteTest ; [39;49m
Source code file location of [34;49mbyteTest[39;49m : "namespaces/compiler/c_syntax.csl" : 397.2 :: we are now at : namespaces/compiler/c_syntax.csl : 399.13
Compiled with : optimizeOn, inlineOn, c_syntaxOn, infixOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xa94040a6 -- code size = 34 bytes
 -----------------------------
Word :: Experimental.[34;49mbyteTest[39;49m : definition = 0x00007fbda94040a6 : disassembly at namespaces/compiler/c_syntax.csl : 399.13 :[32;49m
0x7fbda94040a6    48bf408405a8bd7f0000    mov rdi, 0x7fbda8058440                                [39;49m[32;49m
0x7fbda94040b0    49b8103b3a1ebd550000    mov r8, 0x55bd1e3a3b10                                 [39;49m[32;49m
0x7fbda94040ba    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbda94040c4    49ffd1                  call r9                    	< C compiler code >        [39;49m[32;49m
0x7fbda94040c7    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'byteTest' :: codeSize = 33
Word : 0x00007fbda8059ad0 :: Compiled at : 0x00007fbda94040a6
 =============================
::> 'wdiss' was called at namespaces/compiler/c_syntax.csl 399.13 <::
 
bt.size = 28
 =============================
C_Syntax.[34;49mbttt[39;49m <:> csl compiled word
SourceCode for C_Syntax.[34;49mbttt[39;49m :> 
[34;49mvoid bttt ( byteTest xbt | btt ) { printf ( "\nbtt" ) ; xbt.a8_123 = ' ; btt = xbt.a8_123 ; printf ( "\nbtt = %c", btt ) ; xbt.b8_123 = ' ; xbt.c8_123 = ' ; xbt.a16_123 = 0x1234 ; xbt.a32_123 = 0x12345678 ; xbt.a64_123 = 0x123456789abcdef0 ; xbt.u32_123 = 0x1234567 ; btt = 0xfedcba0987654321 ; printf ( "\nbt.a16_123 = 0x%x ", xbt.a16_123 ) ; printf ( "\nbt.a32_123 = 0x%x ", xbt.a32_123 ) ; printf ( "\nbt.a64_123 = 0x%lx ", xbt.a64_123 ) ; printf ( "\nbt.u32_123 = 0x%lx ", xbt.u32_123 ) ; printf ( "\nbt.a8_123 = %c ", xbt.a8_123 ) ; printf ( "\nbt.b8_123 = %c ", xbt.b8_123 ) ; printf ( "\nbt.c8_123 = %c ", xbt.c8_123 ) ; printf ( "\nbtt = %c", btt ) ; dump ( &xbt, xbt.size ) ; hp ( xbt.a8_123 ) ; } [39;49m
Source code file location of [34;49mbttt[39;49m : "namespaces/compiler/c_syntax.csl" : 401.10 :: we are now at : namespaces/compiler/c_syntax.csl : 422.9
Compiled with : optimizeOn, inlineOn, c_syntaxOn, infixOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xaabb752a -- code size = 844 bytes
TypeSignature : Object 
 -----------------------------
Word :: C_Syntax.[34;49mbttt[39;49m : definition = 0x00007fbdaabb752a : disassembly at namespaces/compiler/c_syntax.csl : 422.9 :
[34;49m ..                                  void [39;49m[33;40mbttt[39;49m[34;49m ( byteTest xbt | btt )  {  printf ( "\nbtt" ) ; xbt.a8_123 = ' ;  btt = xbt.a8_123 ;  printf ( " .. [39;49m[32;49m
0x7fbdaabb752a    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fbdaabb752e    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaabb7532    4981c610000000          add r14, 0x10                                          [39;49m
[34;49m .. t ( byteTest xbt | btt )  {  printf ( [39;49m[33;40m"\nbtt"[39;49m[34;49m ) ; xbt.a8_123 = ' ;  btt = xbt.a8_123 ;  printf ( "\nbtt = %c", btt ) ;  xbt.b8_123 = ' ; xb .. [39;49m[32;49m
0x7fbdaabb7539    48b8c7da29a9bd7f0000    mov rax, 0x7fbda929dac7    	[32;49m< string : '[39;49m[39;49m\nbtt[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fbdaabb7543    488bf8                  mov rdi, rax                                           [39;49m[32;49m
0x7fbdaabb7546    48c7c001000000          mov rax, 0x1                                           [39;49m
[34;49m ..  void bttt ( byteTest xbt | btt )  {  [39;49m[33;40mprintf[39;49m[34;49m ( "\nbtt" ) ; xbt.a8_123 = ' ;  btt = xbt.a8_123 ;  printf ( "\nbtt = %c", btt ) ;  xbt.b8_123 .. [39;49m[32;49m
0x7fbdaabb754d    49b810a43a1ebd550000    mov r8, 0x55bd1e3aa410                                 [39;49m[32;49m
0x7fbdaabb7557    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaabb7561    49ffd1                  call r9                    	< C.[34;49mprintf[39;49m : 0x000055bd1e3aa410[32;49m >[39;49m[39;49m
[34;49m ..  xbt | btt )  {  printf ( "\nbtt" ) ; [39;49m[33;40mxbt[39;49m[34;49m.a8_123 = ' ;  btt = xbt.a8_123 ;  printf ( "\nbtt = %c", btt ) ;  xbt.b8_123 = ' ; xbt.c8_123 = ' .. [39;49m[32;49m
0x7fbdaabb7564    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaabb7568    4881c000000000          add rax, 0x0                                           [39;49m
[34;49m ..  {  printf ( "\nbtt" ) ; xbt.a8_123 = [39;49m[33;40m'a'[39;49m[34;49m  btt = xbt.a8_123 ;  printf ( "\nbtt = %c", btt ) ;  xbt.b8_123 = ' ; xbt.c8_123 = ' ; xbt.a16_12 .. [39;49m[32;49m
0x7fbdaabb756f    b161                    mov cl, 0x61                                           [39;49m
[34;49m .. )  {  printf ( "\nbtt" ) ; xbt.a8_123 [39;49m[33;40m=[39;49m[34;49m ' ;  btt = xbt.a8_123 ;  printf ( "\nbtt = %c", btt ) ;  xbt.b8_123 = ' ; xbt.c8_123 = ' ; xbt.a16_ .. [39;49m[32;49m
0x7fbdaabb7571    8808                    mov [rax], cl                                          [39;49m
[34;49m .. ( "\nbtt" ) ; xbt.a8_123 = ' ;  btt = [39;49m[33;40mxbt[39;49m[34;49m.a8_123 ;  printf ( "\nbtt = %c", btt ) ;  xbt.b8_123 = ' ; xbt.c8_123 = ' ; xbt.a16_123 = 0x1234  .. [39;49m[32;49m
0x7fbdaabb7573    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaabb7577    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fbdaabb757e    488b00                  mov rax, [rax]                                         [39;49m
[34;49m .. rintf ( "\nbtt" ) ; xbt.a8_123 = ' ;  [39;49m[33;40mbtt[39;49m[34;49m = xbt.a8_123 ;  printf ( "\nbtt = %c", btt ) ;  xbt.b8_123 = ' ; xbt.c8_123 = ' ; xbt.a16_123 = 0 .. [39;49m[32;49m
0x7fbdaabb7581    498d4f08                lea rcx, [r15+0x8]                                     [39;49m
[34;49m .. f ( "\nbtt" ) ; xbt.a8_123 = ' ;  btt [39;49m[33;40m=[39;49m[34;49m xbt.a8_123 ;  printf ( "\nbtt = %c", btt ) ;  xbt.b8_123 = ' ; xbt.c8_123 = ' ; xbt.a16_123 = 0x123 .. [39;49m[32;49m
0x7fbdaabb7585    488901                  mov [rcx], rax                                         [39;49m
[34;49m .. 3 = ' ;  btt = xbt.a8_123 ;  printf ( [39;49m[33;40m"\nbtt = %c"[39;49m[34;49m, btt ) ;  xbt.b8_123 = ' ; xbt.c8_123 = ' ; xbt.a16_123 = 0x1234 ;  xbt.a32_123 = 0x1234 .. [39;49m[32;49m
0x7fbdaabb7588    48b8ccda29a9bd7f0000    mov rax, 0x7fbda929dacc    	[32;49m< string : '[39;49m[39;49m\nbtt = %c[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fbdaabb7592    488bf8                  mov rdi, rax                                           [39;49m
[34;49m ..  xbt.a8_123 ;  printf ( "\nbtt = %c", [39;49m[33;40mbtt[39;49m[34;49m ) ;  xbt.b8_123 = ' ; xbt.c8_123 = ' ; xbt.a16_123 = 0x1234 ;  xbt.a32_123 = 0x12345678 ; xbt.a64 .. [39;49m[32;49m
0x7fbdaabb7595    498b4708                mov rax, [r15+0x8]                                     [39;49m[32;49m
0x7fbdaabb7599    488bf0                  mov rsi, rax                                           [39;49m[32;49m
0x7fbdaabb759c    48c7c002000000          mov rax, 0x2                                           [39;49m
[34;49m .. xbt.a8_123 = ' ;  btt = xbt.a8_123 ;  [39;49m[33;40mprintf[39;49m[34;49m ( "\nbtt = %c", btt ) ;  xbt.b8_123 = ' ; xbt.c8_123 = ' ; xbt.a16_123 = 0x1234 ;  xbt.a32_123 .. [39;49m[32;49m
0x7fbdaabb75a3    49b810a43a1ebd550000    mov r8, 0x55bd1e3aa410                                 [39;49m[32;49m
0x7fbdaabb75ad    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaabb75b7    49ffd1                  call r9                    	< C.[34;49mprintf[39;49m : 0x000055bd1e3aa410[32;49m >[39;49m[39;49m
[34;49m .. 23 ;  printf ( "\nbtt = %c", btt ) ;  [39;49m[33;40mxbt[39;49m[34;49m.b8_123 = ' ; xbt.c8_123 = ' ; xbt.a16_123 = 0x1234 ;  xbt.a32_123 = 0x12345678 ; xbt.a64_123 = 0x .. [39;49m[32;49m
0x7fbdaabb75ba    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m ..   printf ( "\nbtt = %c", btt ) ;  xbt.[39;49m[33;40mb8_123[39;49m[34;49m = ' ; xbt.c8_123 = ' ; xbt.a16_123 = 0x1234 ;  xbt.a32_123 = 0x12345678 ; xbt.a64_123 = 0x1234 .. [39;49m[32;49m
0x7fbdaabb75be    4881c009000000          add rax, 0x9                                           [39;49m
[34;49m .. ( "\nbtt = %c", btt ) ;  xbt.b8_123 = [39;49m[33;40m'b'[39;49m[34;49m xbt.c8_123 = ' ; xbt.a16_123 = 0x1234 ;  xbt.a32_123 = 0x12345678 ; xbt.a64_123 = 0x123456789abcd .. [39;49m[32;49m
0x7fbdaabb75c5    b162                    mov cl, 0x62                                           [39;49m
[34;49m .. f ( "\nbtt = %c", btt ) ;  xbt.b8_123 [39;49m[33;40m=[39;49m[34;49m ' ; xbt.c8_123 = ' ; xbt.a16_123 = 0x1234 ;  xbt.a32_123 = 0x12345678 ; xbt.a64_123 = 0x123456789ab .. [39;49m[32;49m
0x7fbdaabb75c7    8808                    mov [rax], cl                                          [39;49m
[34;49m .. nbtt = %c", btt ) ;  xbt.b8_123 = ' ; [39;49m[33;40mxbt[39;49m[34;49m.c8_123 = ' ; xbt.a16_123 = 0x1234 ;  xbt.a32_123 = 0x12345678 ; xbt.a64_123 = 0x123456789abcdef0  .. [39;49m[32;49m
0x7fbdaabb75c9    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m ..  = %c", btt ) ;  xbt.b8_123 = ' ; xbt.[39;49m[33;40mc8_123[39;49m[34;49m = ' ; xbt.a16_123 = 0x1234 ;  xbt.a32_123 = 0x12345678 ; xbt.a64_123 = 0x123456789abcdef0 ; xb .. [39;49m[32;49m
0x7fbdaabb75cd    4881c00a000000          add rax, 0xa                                           [39;49m
[34;49m .. tt ) ;  xbt.b8_123 = ' ; xbt.c8_123 = [39;49m[33;40m'c'[39;49m[34;49m xbt.a16_123 = 0x1234 ;  xbt.a32_123 = 0x12345678 ; xbt.a64_123 = 0x123456789abcdef0 ; xbt.u32_123 .. [39;49m[32;49m
0x7fbdaabb75d4    b163                    mov cl, 0x63                                           [39;49m
[34;49m ..  btt ) ;  xbt.b8_123 = ' ; xbt.c8_123 [39;49m[33;40m=[39;49m[34;49m ' ; xbt.a16_123 = 0x1234 ;  xbt.a32_123 = 0x12345678 ; xbt.a64_123 = 0x123456789abcdef0 ; xbt.u32_1 .. [39;49m[32;49m
0x7fbdaabb75d6    8808                    mov [rax], cl                                          [39;49m
[34;49m ..  ;  xbt.b8_123 = ' ; xbt.c8_123 = ' ; [39;49m[33;40mxbt[39;49m[34;49m.a16_123 = 0x1234 ;  xbt.a32_123 = 0x12345678 ; xbt.a64_123 = 0x123456789abcdef0 ; xbt.u32_123 = 0 .. [39;49m[32;49m
0x7fbdaabb75d8    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. xbt.b8_123 = ' ; xbt.c8_123 = ' ; xbt.[39;49m[33;40ma16_123[39;49m[34;49m = 0x1234 ;  xbt.a32_123 = 0x12345678 ; xbt.a64_123 = 0x123456789abcdef0 ; xbt.u32_123 = 0x123 .. [39;49m[32;49m
0x7fbdaabb75dc    4881c018000000          add rax, 0x18                                          [39;49m
[34;49m ..  = ' ; xbt.c8_123 = ' ; xbt.a16_123 = [39;49m[33;40m0x1234[39;49m[34;49m ;  xbt.a32_123 = 0x12345678 ; xbt.a64_123 = 0x123456789abcdef0 ; xbt.u32_123 = 0x1234567 ; btt .. [39;49m[32;49m
0x7fbdaabb75e3    66b93412                mov cx, 0x1234                                         [39;49m
[34;49m .. 23 = ' ; xbt.c8_123 = ' ; xbt.a16_123 [39;49m[33;40m=[39;49m[34;49m 0x1234 ;  xbt.a32_123 = 0x12345678 ; xbt.a64_123 = 0x123456789abcdef0 ; xbt.u32_123 = 0x1234567 ; b .. [39;49m[32;49m
0x7fbdaabb75e7    668908                  mov [rax], cx                                          [39;49m
[34;49m .. .c8_123 = ' ; xbt.a16_123 = 0x1234 ;  [39;49m[33;40mxbt[39;49m[34;49m.a32_123 = 0x12345678 ; xbt.a64_123 = 0x123456789abcdef0 ; xbt.u32_123 = 0x1234567 ; btt = 0xfedcb .. [39;49m[32;49m
0x7fbdaabb75ea    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. 123 = ' ; xbt.a16_123 = 0x1234 ;  xbt.[39;49m[33;40ma32_123[39;49m[34;49m = 0x12345678 ; xbt.a64_123 = 0x123456789abcdef0 ; xbt.u32_123 = 0x1234567 ; btt = 0xfedcba098 .. [39;49m[32;49m
0x7fbdaabb75ee    4881c013000000          add rax, 0x13                                          [39;49m
[34;49m .. xbt.a16_123 = 0x1234 ;  xbt.a32_123 = [39;49m[33;40m0x12345678[39;49m[34;49m ; xbt.a64_123 = 0x123456789abcdef0 ; xbt.u32_123 = 0x1234567 ; btt = 0xfedcba0987654321 ;  .. [39;49m[32;49m
0x7fbdaabb75f5    b978563412              mov ecx, 0x12345678                                    [39;49m
[34;49m .. ; xbt.a16_123 = 0x1234 ;  xbt.a32_123 [39;49m[33;40m=[39;49m[34;49m 0x12345678 ; xbt.a64_123 = 0x123456789abcdef0 ; xbt.u32_123 = 0x1234567 ; btt = 0xfedcba0987654321  .. [39;49m[32;49m
0x7fbdaabb75fa    8908                    mov [rax], ecx                                         [39;49m
[34;49m ..  0x1234 ;  xbt.a32_123 = 0x12345678 ; [39;49m[33;40mxbt[39;49m[34;49m.a64_123 = 0x123456789abcdef0 ; xbt.u32_123 = 0x1234567 ; btt = 0xfedcba0987654321 ; printf ( "\nb .. [39;49m[32;49m
0x7fbdaabb75fc    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. 234 ;  xbt.a32_123 = 0x12345678 ; xbt.[39;49m[33;40ma64_123[39;49m[34;49m = 0x123456789abcdef0 ; xbt.u32_123 = 0x1234567 ; btt = 0xfedcba0987654321 ; printf ( "\nbt.a1 .. [39;49m[32;49m
0x7fbdaabb7600    4881c001000000          add rax, 0x1                                           [39;49m
[34;49m .. .a32_123 = 0x12345678 ; xbt.a64_123 = [39;49m[33;40m0x123456789abcdef0[39;49m[34;49m ; xbt.u32_123 = 0x1234567 ; btt = 0xfedcba0987654321 ; printf ( "\nbt.a16_123 = 0x .. [39;49m[32;49m
0x7fbdaabb7607    48b9f0debc9a78563412    mov rcx, 0x123456789abcdef0                              [39;49m
[34;49m .. bt.a32_123 = 0x12345678 ; xbt.a64_123 [39;49m[33;40m=[39;49m[34;49m 0x123456789abcdef0 ; xbt.u32_123 = 0x1234567 ; btt = 0xfedcba0987654321 ; printf ( "\nbt.a16_123 =  .. [39;49m[32;49m
0x7fbdaabb7611    488908                  mov [rax], rcx                                         [39;49m
[34;49m ..  ; xbt.a64_123 = 0x123456789abcdef0 ; [39;49m[33;40mxbt[39;49m[34;49m.u32_123 = 0x1234567 ; btt = 0xfedcba0987654321 ; printf ( "\nbt.a16_123 = 0x%x ", xbt.a16_123 ) ; .. [39;49m[32;49m
0x7fbdaabb7614    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. bt.a64_123 = 0x123456789abcdef0 ; xbt.[39;49m[33;40mu32_123[39;49m[34;49m = 0x1234567 ; btt = 0xfedcba0987654321 ; printf ( "\nbt.a16_123 = 0x%x ", xbt.a16_123 ) ;  pr .. [39;49m[32;49m
0x7fbdaabb7618    4881c00b000000          add rax, 0xb                                           [39;49m
[34;49m ..  = 0x123456789abcdef0 ; xbt.u32_123 = [39;49m[33;40m0x1234567[39;49m[34;49m ; btt = 0xfedcba0987654321 ; printf ( "\nbt.a16_123 = 0x%x ", xbt.a16_123 ) ;  printf ( "\n .. [39;49m[32;49m
0x7fbdaabb761f    b967452301              mov ecx, 0x1234567                                     [39;49m
[34;49m .. 23 = 0x123456789abcdef0 ; xbt.u32_123 [39;49m[33;40m=[39;49m[34;49m 0x1234567 ; btt = 0xfedcba0987654321 ; printf ( "\nbt.a16_123 = 0x%x ", xbt.a16_123 ) ;  printf ( " .. [39;49m[32;49m
0x7fbdaabb7624    8908                    mov [rax], ecx                                         [39;49m
[34;49m .. ef0 ; xbt.u32_123 = 0x1234567 ; btt = [39;49m[33;40m0xfedcba0987654321[39;49m[34;49m ; printf ( "\nbt.a16_123 = 0x%x ", xbt.a16_123 ) ;  printf ( "\nbt.a32_123 = 0x%x  .. [39;49m[32;49m
0x7fbdaabb7626    48c7c021436587          mov rax, 0xffffffff87654321                              [39;49m
[34;49m .. 89abcdef0 ; xbt.u32_123 = 0x1234567 ; [39;49m[33;40mbtt[39;49m[34;49m = 0xfedcba0987654321 ; printf ( "\nbt.a16_123 = 0x%x ", xbt.a16_123 ) ;  printf ( "\nbt.a32_123 = .. [39;49m[32;49m
0x7fbdaabb762d    498d4f08                lea rcx, [r15+0x8]                                     [39;49m
[34;49m .. cdef0 ; xbt.u32_123 = 0x1234567 ; btt [39;49m[33;40m=[39;49m[34;49m 0xfedcba0987654321 ; printf ( "\nbt.a16_123 = 0x%x ", xbt.a16_123 ) ;  printf ( "\nbt.a32_123 = 0x% .. [39;49m[32;49m
0x7fbdaabb7631    488901                  mov [rcx], rax                                         [39;49m
[34;49m .. ; btt = 0xfedcba0987654321 ; printf ( [39;49m[33;40m"\nbt.a16_123 = 0x%x "[39;49m[34;49m, xbt.a16_123 ) ;  printf ( "\nbt.a32_123 = 0x%x ", xbt.a32_123 ) ;  printf ( " .. [39;49m[32;49m
0x7fbdaabb7634    48b8d6da29a9bd7f0000    mov rax, 0x7fbda929dad6    	[32;49m< string : '[39;49m[39;49m\nbt.a16_123 = 0x%x [39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fbdaabb763e    488bf8                  mov rdi, rax                                           [39;49m
[34;49m .. 21 ; printf ( "\nbt.a16_123 = 0x%x ", [39;49m[33;40mxbt[39;49m[34;49m.a16_123 ) ;  printf ( "\nbt.a32_123 = 0x%x ", xbt.a32_123 ) ;  printf ( "\nbt.a64_123 = 0x%lx ",  .. [39;49m[32;49m
0x7fbdaabb7641    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m ..  printf ( "\nbt.a16_123 = 0x%x ", xbt.[39;49m[33;40ma16_123[39;49m[34;49m ) ;  printf ( "\nbt.a32_123 = 0x%x ", xbt.a32_123 ) ;  printf ( "\nbt.a64_123 = 0x%lx ", xbt. .. [39;49m[32;49m
0x7fbdaabb7645    4881c018000000          add rax, 0x18                                          [39;49m[32;49m
0x7fbdaabb764c    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fbdaabb764f    488bf0                  mov rsi, rax                                           [39;49m[32;49m
0x7fbdaabb7652    48c7c002000000          mov rax, 0x2                                           [39;49m
[34;49m .. x1234567 ; btt = 0xfedcba0987654321 ; [39;49m[33;40mprintf[39;49m[34;49m ( "\nbt.a16_123 = 0x%x ", xbt.a16_123 ) ;  printf ( "\nbt.a32_123 = 0x%x ", xbt.a32_123 ) ;  p .. [39;49m[32;49m
0x7fbdaabb7659    49b810a43a1ebd550000    mov r8, 0x55bd1e3aa410                                 [39;49m[32;49m
0x7fbdaabb7663    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaabb766d    49ffd1                  call r9                    	< C.[34;49mprintf[39;49m : 0x000055bd1e3aa410[32;49m >[39;49m[39;49m
[34;49m .. 3 = 0x%x ", xbt.a16_123 ) ;  printf ( [39;49m[33;40m"\nbt.a32_123 = 0x%x "[39;49m[34;49m, xbt.a32_123 ) ;  printf ( "\nbt.a64_123 = 0x%lx ", xbt.a64_123 ) ;  printf (  .. [39;49m[32;49m
0x7fbdaabb7670    48b8eada29a9bd7f0000    mov rax, 0x7fbda929daea    	[32;49m< string : '[39;49m[39;49m\nbt.a32_123 = 0x%x [39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fbdaabb767a    488bf8                  mov rdi, rax                                           [39;49m
[34;49m .. ) ;  printf ( "\nbt.a32_123 = 0x%x ", [39;49m[33;40mxbt[39;49m[34;49m.a32_123 ) ;  printf ( "\nbt.a64_123 = 0x%lx ", xbt.a64_123 ) ;  printf ( "\nbt.u32_123 = 0x%lx ", .. [39;49m[32;49m
0x7fbdaabb767d    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m ..  printf ( "\nbt.a32_123 = 0x%x ", xbt.[39;49m[33;40ma32_123[39;49m[34;49m ) ;  printf ( "\nbt.a64_123 = 0x%lx ", xbt.a64_123 ) ;  printf ( "\nbt.u32_123 = 0x%lx ", xbt .. [39;49m[32;49m
0x7fbdaabb7681    4881c013000000          add rax, 0x13                                          [39;49m[32;49m
0x7fbdaabb7688    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fbdaabb768b    488bf0                  mov rsi, rax                                           [39;49m[32;49m
0x7fbdaabb768e    48c7c002000000          mov rax, 0x2                                           [39;49m
[34;49m .. bt.a16_123 = 0x%x ", xbt.a16_123 ) ;  [39;49m[33;40mprintf[39;49m[34;49m ( "\nbt.a32_123 = 0x%x ", xbt.a32_123 ) ;  printf ( "\nbt.a64_123 = 0x%lx ", xbt.a64_123 ) ;   .. [39;49m[32;49m
0x7fbdaabb7695    49b810a43a1ebd550000    mov r8, 0x55bd1e3aa410                                 [39;49m[32;49m
0x7fbdaabb769f    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaabb76a9    49ffd1                  call r9                    	< C.[34;49mprintf[39;49m : 0x000055bd1e3aa410[32;49m >[39;49m[39;49m
[34;49m .. 3 = 0x%x ", xbt.a32_123 ) ;  printf ( [39;49m[33;40m"\nbt.a64_123 = 0x%lx "[39;49m[34;49m, xbt.a64_123 ) ;  printf ( "\nbt.u32_123 = 0x%lx ", xbt.u32_123 ) ;  printf ( .. [39;49m[32;49m
0x7fbdaabb76ac    48b8feda29a9bd7f0000    mov rax, 0x7fbda929dafe    	[32;49m< string : '[39;49m[39;49m\nbt.a64_123 = 0x%lx [39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fbdaabb76b6    488bf8                  mov rdi, rax                                           [39;49m
[34;49m ..  ;  printf ( "\nbt.a64_123 = 0x%lx ", [39;49m[33;40mxbt[39;49m[34;49m.a64_123 ) ;  printf ( "\nbt.u32_123 = 0x%lx ", xbt.u32_123 ) ;  printf ( "\nbt.a8_123 = %c ", xbt .. [39;49m[32;49m
0x7fbdaabb76b9    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. printf ( "\nbt.a64_123 = 0x%lx ", xbt.[39;49m[33;40ma64_123[39;49m[34;49m ) ;  printf ( "\nbt.u32_123 = 0x%lx ", xbt.u32_123 ) ;  printf ( "\nbt.a8_123 = %c ", xbt.a8_ .. [39;49m[32;49m
0x7fbdaabb76bd    4881c001000000          add rax, 0x1                                           [39;49m[32;49m
0x7fbdaabb76c4    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fbdaabb76c7    488bf0                  mov rsi, rax                                           [39;49m[32;49m
0x7fbdaabb76ca    48c7c002000000          mov rax, 0x2                                           [39;49m
[34;49m .. bt.a32_123 = 0x%x ", xbt.a32_123 ) ;  [39;49m[33;40mprintf[39;49m[34;49m ( "\nbt.a64_123 = 0x%lx ", xbt.a64_123 ) ;  printf ( "\nbt.u32_123 = 0x%lx ", xbt.u32_123 ) ;  .. [39;49m[32;49m
0x7fbdaabb76d1    49b810a43a1ebd550000    mov r8, 0x55bd1e3aa410                                 [39;49m[32;49m
0x7fbdaabb76db    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaabb76e5    49ffd1                  call r9                    	< C.[34;49mprintf[39;49m : 0x000055bd1e3aa410[32;49m >[39;49m[39;49m
[34;49m ..  = 0x%lx ", xbt.a64_123 ) ;  printf ( [39;49m[33;40m"\nbt.u32_123 = 0x%lx "[39;49m[34;49m, xbt.u32_123 ) ;  printf ( "\nbt.a8_123 = %c ", xbt.a8_123 ) ;  printf ( "\nb .. [39;49m[32;49m
0x7fbdaabb76e8    48b813db29a9bd7f0000    mov rax, 0x7fbda929db13    	[32;49m< string : '[39;49m[39;49m\nbt.u32_123 = 0x%lx [39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fbdaabb76f2    488bf8                  mov rdi, rax                                           [39;49m
[34;49m ..  ;  printf ( "\nbt.u32_123 = 0x%lx ", [39;49m[33;40mxbt[39;49m[34;49m.u32_123 ) ;  printf ( "\nbt.a8_123 = %c ", xbt.a8_123 ) ;  printf ( "\nbt.b8_123 = %c ", xbt.b8_1 .. [39;49m[32;49m
0x7fbdaabb76f5    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. printf ( "\nbt.u32_123 = 0x%lx ", xbt.[39;49m[33;40mu32_123[39;49m[34;49m ) ;  printf ( "\nbt.a8_123 = %c ", xbt.a8_123 ) ;  printf ( "\nbt.b8_123 = %c ", xbt.b8_123 ) .. [39;49m[32;49m
0x7fbdaabb76f9    4881c00b000000          add rax, 0xb                                           [39;49m[32;49m
0x7fbdaabb7700    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fbdaabb7703    488bf0                  mov rsi, rax                                           [39;49m[32;49m
0x7fbdaabb7706    48c7c002000000          mov rax, 0x2                                           [39;49m
[34;49m .. t.a64_123 = 0x%lx ", xbt.a64_123 ) ;  [39;49m[33;40mprintf[39;49m[34;49m ( "\nbt.u32_123 = 0x%lx ", xbt.u32_123 ) ;  printf ( "\nbt.a8_123 = %c ", xbt.a8_123 ) ;  prin .. [39;49m[32;49m
0x7fbdaabb770d    49b810a43a1ebd550000    mov r8, 0x55bd1e3aa410                                 [39;49m[32;49m
0x7fbdaabb7717    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaabb7721    49ffd1                  call r9                    	< C.[34;49mprintf[39;49m : 0x000055bd1e3aa410[32;49m >[39;49m[39;49m
[34;49m ..  = 0x%lx ", xbt.u32_123 ) ;  printf ( [39;49m[33;40m"\nbt.a8_123 = %c "[39;49m[34;49m, xbt.a8_123 ) ;  printf ( "\nbt.b8_123 = %c ", xbt.b8_123 ) ;  printf ( "\nbt.c8_ .. [39;49m[32;49m
0x7fbdaabb7724    48b828db29a9bd7f0000    mov rax, 0x7fbda929db28    	[32;49m< string : '[39;49m[39;49m\nbt.a8_123 = %c [39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fbdaabb772e    488bf8                  mov rdi, rax                                           [39;49m
[34;49m .. 23 ) ;  printf ( "\nbt.a8_123 = %c ", [39;49m[33;40mxbt[39;49m[34;49m.a8_123 ) ;  printf ( "\nbt.b8_123 = %c ", xbt.b8_123 ) ;  printf ( "\nbt.c8_123 = %c ", xbt.c8_12 .. [39;49m[32;49m
0x7fbdaabb7731    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaabb7735    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fbdaabb773c    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fbdaabb773f    488bf0                  mov rsi, rax                                           [39;49m[32;49m
0x7fbdaabb7742    48c7c002000000          mov rax, 0x2                                           [39;49m
[34;49m .. t.u32_123 = 0x%lx ", xbt.u32_123 ) ;  [39;49m[33;40mprintf[39;49m[34;49m ( "\nbt.a8_123 = %c ", xbt.a8_123 ) ;  printf ( "\nbt.b8_123 = %c ", xbt.b8_123 ) ;  printf (  .. [39;49m[32;49m
0x7fbdaabb7749    49b810a43a1ebd550000    mov r8, 0x55bd1e3aa410                                 [39;49m[32;49m
0x7fbdaabb7753    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaabb775d    49ffd1                  call r9                    	< C.[34;49mprintf[39;49m : 0x000055bd1e3aa410[32;49m >[39;49m[39;49m
[34;49m .. _123 = %c ", xbt.a8_123 ) ;  printf ( [39;49m[33;40m"\nbt.b8_123 = %c "[39;49m[34;49m, xbt.b8_123 ) ;  printf ( "\nbt.c8_123 = %c ", xbt.c8_123 ) ;  printf ( "\nbtt =  .. [39;49m[32;49m
0x7fbdaabb7760    48b839db29a9bd7f0000    mov rax, 0x7fbda929db39    	[32;49m< string : '[39;49m[39;49m\nbt.b8_123 = %c [39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fbdaabb776a    488bf8                  mov rdi, rax                                           [39;49m
[34;49m .. 23 ) ;  printf ( "\nbt.b8_123 = %c ", [39;49m[33;40mxbt[39;49m[34;49m.b8_123 ) ;  printf ( "\nbt.c8_123 = %c ", xbt.c8_123 ) ;  printf ( "\nbtt = %c", btt ) ;  dump (  .. [39;49m[32;49m
0x7fbdaabb776d    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m ..  ;  printf ( "\nbt.b8_123 = %c ", xbt.[39;49m[33;40mb8_123[39;49m[34;49m ) ;  printf ( "\nbt.c8_123 = %c ", xbt.c8_123 ) ;  printf ( "\nbtt = %c", btt ) ;  dump ( &xbt .. [39;49m[32;49m
0x7fbdaabb7771    4881c009000000          add rax, 0x9                                           [39;49m[32;49m
0x7fbdaabb7778    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fbdaabb777b    488bf0                  mov rsi, rax                                           [39;49m[32;49m
0x7fbdaabb777e    48c7c002000000          mov rax, 0x2                                           [39;49m
[34;49m ..  "\nbt.a8_123 = %c ", xbt.a8_123 ) ;  [39;49m[33;40mprintf[39;49m[34;49m ( "\nbt.b8_123 = %c ", xbt.b8_123 ) ;  printf ( "\nbt.c8_123 = %c ", xbt.c8_123 ) ;  printf (  .. [39;49m[32;49m
0x7fbdaabb7785    49b810a43a1ebd550000    mov r8, 0x55bd1e3aa410                                 [39;49m[32;49m
0x7fbdaabb778f    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaabb7799    49ffd1                  call r9                    	< C.[34;49mprintf[39;49m : 0x000055bd1e3aa410[32;49m >[39;49m[39;49m
[34;49m .. _123 = %c ", xbt.b8_123 ) ;  printf ( [39;49m[33;40m"\nbt.c8_123 = %c "[39;49m[34;49m, xbt.c8_123 ) ;  printf ( "\nbtt = %c", btt ) ;  dump ( &xbt, xbt.size ) ;  hp (  .. [39;49m[32;49m
0x7fbdaabb779c    48b84adb29a9bd7f0000    mov rax, 0x7fbda929db4a    	[32;49m< string : '[39;49m[39;49m\nbt.c8_123 = %c [39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fbdaabb77a6    488bf8                  mov rdi, rax                                           [39;49m
[34;49m .. 23 ) ;  printf ( "\nbt.c8_123 = %c ", [39;49m[33;40mxbt[39;49m[34;49m.c8_123 ) ;  printf ( "\nbtt = %c", btt ) ;  dump ( &xbt, xbt.size ) ;  hp ( xbt.a8_123 ) ; }  .. [39;49m[32;49m
0x7fbdaabb77a9    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m ..  ;  printf ( "\nbt.c8_123 = %c ", xbt.[39;49m[33;40mc8_123[39;49m[34;49m ) ;  printf ( "\nbtt = %c", btt ) ;  dump ( &xbt, xbt.size ) ;  hp ( xbt.a8_123 ) ; }  .. [39;49m[32;49m
0x7fbdaabb77ad    4881c00a000000          add rax, 0xa                                           [39;49m[32;49m
0x7fbdaabb77b4    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fbdaabb77b7    488bf0                  mov rsi, rax                                           [39;49m[32;49m
0x7fbdaabb77ba    48c7c002000000          mov rax, 0x2                                           [39;49m
[34;49m ..  "\nbt.b8_123 = %c ", xbt.b8_123 ) ;  [39;49m[33;40mprintf[39;49m[34;49m ( "\nbt.c8_123 = %c ", xbt.c8_123 ) ;  printf ( "\nbtt = %c", btt ) ;  dump ( &xbt, xbt.size ) .. [39;49m[32;49m
0x7fbdaabb77c1    49b810a43a1ebd550000    mov r8, 0x55bd1e3aa410                                 [39;49m[32;49m
0x7fbdaabb77cb    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaabb77d5    49ffd1                  call r9                    	< C.[34;49mprintf[39;49m : 0x000055bd1e3aa410[32;49m >[39;49m[39;49m
[34;49m .. _123 = %c ", xbt.c8_123 ) ;  printf ( [39;49m[33;40m"\nbtt = %c"[39;49m[34;49m, btt ) ;  dump ( &xbt, xbt.size ) ;  hp ( xbt.a8_123 ) ; }  .. [39;49m[32;49m
0x7fbdaabb77d8    48b85bdb29a9bd7f0000    mov rax, 0x7fbda929db5b    	[32;49m< string : '[39;49m[39;49m\nbtt = %c[39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fbdaabb77e2    488bf8                  mov rdi, rax                                           [39;49m
[34;49m .. bt.c8_123 ) ;  printf ( "\nbtt = %c", [39;49m[33;40mbtt[39;49m[34;49m ) ;  dump ( &xbt, xbt.size ) ;  hp ( xbt.a8_123 ) ; }  .. [39;49m[32;49m
0x7fbdaabb77e5    498b4708                mov rax, [r15+0x8]                                     [39;49m[32;49m
0x7fbdaabb77e9    488bf0                  mov rsi, rax                                           [39;49m[32;49m
0x7fbdaabb77ec    48c7c002000000          mov rax, 0x2                                           [39;49m
[34;49m ..  "\nbt.c8_123 = %c ", xbt.c8_123 ) ;  [39;49m[33;40mprintf[39;49m[34;49m ( "\nbtt = %c", btt ) ;  dump ( &xbt, xbt.size ) ;  hp ( xbt.a8_123 ) ; }  .. [39;49m[32;49m
0x7fbdaabb77f3    49b810a43a1ebd550000    mov r8, 0x55bd1e3aa410                                 [39;49m[32;49m
0x7fbdaabb77fd    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaabb7807    49ffd1                  call r9                    	< C.[34;49mprintf[39;49m : 0x000055bd1e3aa410[32;49m >[39;49m[39;49m
[34;49m .. intf ( "\nbtt = %c", btt ) ;  dump ( &[39;49m[33;40mxbt[39;49m[34;49m, xbt.size ) ;  hp ( xbt.a8_123 ) ; }  .. [39;49m[32;49m
0x7fbdaabb780a    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaabb780e    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fbdaabb7815    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb7819    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ( "\nbtt = %c", btt ) ;  dump ( &xbt, [39;49m[33;40mxbt[39;49m[34;49m.size ) ;  hp ( xbt.a8_123 ) ; }  .. [39;49m[32;49m
0x7fbdaabb781c    48b8a08605a8bd7f0000    mov rax, 0x7fbda80586a0                                [39;49m[32;49m
0x7fbdaabb7826    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fbdaabb7829    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb782d    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  ) ;  printf ( "\nbtt = %c", btt ) ;  [39;49m[33;40mdump[39;49m[34;49m ( &xbt, xbt.size ) ;  hp ( xbt.a8_123 ) ; }  .. [39;49m[32;49m
0x7fbdaabb7830    49b830b43e1ebd550000    mov r8, 0x55bd1e3eb430                                 [39;49m[32;49m
0x7fbdaabb783a    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaabb7844    49ffd1                  call r9                    	< Debug.[34;49mdump[39;49m : 0x000055bd1e3eb430[32;49m >[39;49m[39;49m
[34;49m ..  ) ;  dump ( &xbt, xbt.size ) ;  hp ( [39;49m[33;40mxbt[39;49m[34;49m.a8_123 ) ; }  .. [39;49m[32;49m
0x7fbdaabb7847    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaabb784b    4881c000000000          add rax, 0x0                                           [39;49m[32;49m
0x7fbdaabb7852    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fbdaabb7855    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb7859    498906                  mov [r14], rax                                         [39;49m
[34;49m .. , btt ) ;  dump ( &xbt, xbt.size ) ;  [39;49m[33;40mhp[39;49m[34;49m ( xbt.a8_123 ) ; }  .. [39;49m[32;49m
0x7fbdaabb785c    49b98764d5aabd7f0000    mov r9, 0x7fbdaad56487                                 [39;49m[32;49m
0x7fbdaabb7866    49ffd1                  call r9                    	< Int.[34;49mhp[39;49m : 0x00007fbdaad56487[32;49m >[39;49m[39;49m
[34;49m .. bt, xbt.size ) ;  hp ( xbt.a8_123 ) ; [39;49m[33;40m}[39;49m[34;49m  .. [39;49m[32;49m
0x7fbdaabb7869    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaabb786d    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaabb7871    4983ee08                sub r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb7875    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'bttt' :: codeSize = 843
Word : 0x00007fbda805a0a0 :: Compiled at : 0x00007fbdaabb752a
 =============================
::> 'wdiss' was called at namespaces/compiler/c_syntax.csl 422.9 <::

btt
btt = a
bt.a16_123 = 0x1234 
bt.a32_123 = 0x12345678 
bt.a64_123 = 0x123456789abcdef0 
bt.u32_123 = 0x1234567 
bt.a8_123 = a 
bt.b8_123 = b 
bt.c8_123 = c 
btt = !
Dump at : namespaces/compiler/c_syntax.csl : 423.11 :
Dump : Address = 0x00007fbda813cedc : Number = 28 :: (little endian dump)
0x00007fbda813cedc :  61 f0 de bc 9a 78 56 34  12 62 63 67 45 23 01 00  a....xV4 .bcgE#.. 
0x00007fbda813ceec :  00 00 00 78 56 34 12 00  34 12 00 00 00 00 00 00  ...xV4.. 4....... 
 0x3456789abcdef061

0x00007fbda813cedc  byte                 a8_123                   = 'a' : 0x61
0x00007fbda813cedd  int64                a64_123                  = 0x123456789abcdef0
0x00007fbda813cee5  byte                 b8_123                   = 'b' : 0x62
0x00007fbda813cee6  byte                 c8_123                   = 'c' : 0x63
0x00007fbda813cee7  int64                u64_123                  = 0x0000000001234567
0x00007fbda813cee7  int32                u32_123                  = 0x01234567
0x00007fbda813cee7  int8                 u8_123                   = 'g' : 0x67
0x00007fbda813ceef  int32                a32_123                  = 0x12345678
0x00007fbda813cef3  byte                 d8_123                   = ' ' : 0x00
0x00007fbda813cef4  int16                a16_123                  = 0x1234
typeChecking is on, optimize is on, inlining is on, infixMode is off, 
prefixMode is off, c_syntax is off, postfixMode is on
Debug is off. Verbosity = 1. Console = 0, NumberBase = 10.
DebugSourceCode on : BigNum off : Lisp off : jcc8 off
interpreting : at namespaces/compiler/c_syntax.csl : 430.9
SignalExceptionsHandled = 0 ; SigSegvs = 0 ; Restarts = 0
StartedTimes = 1 ; RestartCondition = INITIAL_START ; LastRestartCondtion = csl_RUN_INIT
InNamespace = C.Experimental
dlnode size : 16 bytes, dllist size : 24 bytes, dobject size : 32 bytes, DLNode size : 88 bytes, AttributeInfo size : 56 bytes, 
Object size : 64 bytes, Symbol size : 224 bytes, Word size : 224 bytes, ListObject size : 224 bytes, WordData size : 216 bytes, 
Context size : 536 bytes, System size : 176 bytes, Debugger size : 872 bytes, MemorySpace size : 448 bytes, 
ReadLiner size : 2304 bytes, Lexer size : 280 bytes, Interpreter size : 96 bytes, Finder size : 24 bytes, Compiler size : 440 bytes, 
ByteArray size : 504 bytes, NamedByteArray size : 592 bytes, MemChunk size : 224 bytesCSL size : 3600 bytes, OpenVimTil size : 1080 bytes
_CSL_SystemState_Print :: DObjectCreateCount = 6157 : WordCreateCount = 7279 : WordsAdded = 3034 : FindWordCount = 92 : FindWordMaxCount = 109
RecycledWordCount : 4
WordsInRecycling : 0
MPFR library: 4.0.2       
MPFR header:  4.0.2 (based on 4.0.2)
BigNum Internal Bit Precision = 16
BigNum :: Width = 0 : Precision = 0 
Word size =  240 
WordData size =  344 
DLNode size =  80 
dobject size =  32 
AttributeInfo size =  48
 =============================
Experimental.[34;49mWord[39;49m <:> structure : size = 240, [34;49mWord[39;49m alias for [34;49m_Identifier[39;49m, immediate
SourceCode for Experimental.[34;49m_Identifier[39;49m :> 
[34;49mtypedef struct _Identifier { DLNode S_Node ; int64 Slots ; int64 CodeSize ; byte * S_Name ; uint64 State ; union { uint64 S_Value ; byte * S_BytePtr ; byte * S_Object ; } ; dllist * S_SymbolList ; uint64 S_DObjectValue ; uint64 * S_PtrToValue ; union { struct _Identifier * S_ContainingNamespace ; struct _Identifier * S_ContainingList ; struct _Identifier * S_Prototype ; } ; union { uint64 S_Value2 ; dlnode * S_Node2 ; byte * S_pb_Data2 ; } ; union { uint64 S_Value3 ; dlnode * S_Node3 ; byte * S_pb_Data3 ; } ; block Definition ; dllist * DebugWordList ; int64 StartCharRlIndex ; int64 SC_WordIndex, SC_FileIndex_Start, SC_FileIndex_End ; struct _Identifier * CSLWord, * BaseObject ; struct _WordData * W_WordData ; } Identifier, ID, Word, Namespace, Vocabulary, Class, DynamicObject, DObject, ListObject, Symbol, MemChunk, HistoryStringNode, Buffer ; [39;49m
Source code file location of [34;49mWord[39;49m : "namespaces/wordTypeDef.csl" : 235.18 :: we are now at : namespaces/compiler/c_syntax.csl : 436.9
Compiled with : optimizeOn, inlineOn, c_syntaxOn, infixOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xa9403c00 -- code size = 34 bytes
 -----------------------------
Word :: Experimental.[34;49mWord[39;49m : definition = 0x00007fbda9403c00 : disassembly at namespaces/compiler/c_syntax.csl : 436.9 :[32;49m
0x7fbda9403c00    48bfd83305a8bd7f0000    mov rdi, 0x7fbda80533d8                                [39;49m[32;49m
0x7fbda9403c0a    49b8103b3a1ebd550000    mov r8, 0x55bd1e3a3b10                                 [39;49m[32;49m
0x7fbda9403c14    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbda9403c1e    49ffd1                  call r9                    	< C compiler code >        [39;49m[32;49m
0x7fbda9403c21    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'Word' :: codeSize = 33
Word : 0x00007fbda8056ef0 :: Compiled at : 0x00007fbda9403c00
 =============================
::> 'wdiss' was called at namespaces/compiler/c_syntax.csl 436.9 <::

typeChecking is on, optimize is on, inlining is on, infixMode is off, 
prefixMode is off, c_syntax is off, postfixMode is on
Debug is off. Verbosity = 1. Console = 0, NumberBase = 10.
DebugSourceCode on : BigNum off : Lisp off : jcc8 off
interpreting : at namespaces/test/dev0.csl : 14.7
SignalExceptionsHandled = 0 ; SigSegvs = 0 ; Restarts = 0
StartedTimes = 1 ; RestartCondition = INITIAL_START ; LastRestartCondtion = csl_RUN_INIT
InNamespace = Root.User
 =============================
Logic.[34;49mtx1[39;49m <:> csl compiled word
SourceCode for Logic.[34;49mtx1[39;49m :> 
[34;49m: tx1 0 ! ! 8 2 / 2 / 3 & 4 | 1 + + ; [39;49m
Source code file location of [34;49mtx1[39;49m : "namespaces/test/dev0.csl" : 25.2 :: we are now at : namespaces/test/dev0.csl : 26.17
Compiled with : optimizeOn, inlineOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xaabb78f6 -- code size = 131 bytes
TypeSignature : 
 -----------------------------
Word :: Logic.[34;49mtx1[39;49m : definition = 0x00007fbdaabb78f6 : disassembly at namespaces/test/dev0.csl : 26.17 :
[34;49m ..                                 : tx1 [39;49m[33;40m0[39;49m[34;49m ! ! 8 2 / 2 / 3 & 4 | 1 + + ;  .. [39;49m[32;49m
0x7fbdaabb78f6    48c7c000000000          mov rax, 0x0                                           [39;49m
[34;49m ..                               : tx1 0 [39;49m[33;40m![39;49m[34;49m ! 8 2 / 2 / 3 & 4 | 1 + + ;  .. [39;49m[32;49m
0x7fbdaabb78fd    4885c0                  test rax, rax                                          [39;49m[32;49m
0x7fbdaabb7900    7409                    jz 0xaabb790b                                          [39;49m[32;49m
0x7fbdaabb7902    48c7c000000000          mov rax, 0x0                                           [39;49m[32;49m
0x7fbdaabb7909    eb07                    jmp 0x7fbdaabb7912         	< Logic.[34;49mtx1[39;49m+28[32;49m >[39;49m[39;49m[32;49m
0x7fbdaabb790b    48c7c001000000          mov rax, 0x1                                           [39;49m
[34;49m ..                             : tx1 0 ! [39;49m[33;40m![39;49m[34;49m 8 2 / 2 / 3 & 4 | 1 + + ;  .. [39;49m[32;49m
0x7fbdaabb7912    4885c0                  test rax, rax                                          [39;49m[32;49m
0x7fbdaabb7915    7409                    jz 0xaabb7920                                          [39;49m[32;49m
0x7fbdaabb7917    48c7c000000000          mov rax, 0x0                                           [39;49m[32;49m
0x7fbdaabb791e    eb07                    jmp 0x7fbdaabb7927         	< Logic.[34;49mtx1[39;49m+49[32;49m >[39;49m[39;49m[32;49m
0x7fbdaabb7920    48c7c001000000          mov rax, 0x1                                           [39;49m[32;49m
0x7fbdaabb7927    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb792b    498906                  mov [r14], rax                                         [39;49m
[34;49m ..                           : tx1 0 ! ! [39;49m[33;40m8[39;49m[34;49m 2 / 2 / 3 & 4 | 1 + + ;  .. [39;49m[32;49m
0x7fbdaabb792e    48c7c004000000          mov rax, 0x4                                           [39;49m
[34;49m ..                     : tx1 0 ! ! 8 2 / [39;49m[33;40m2[39;49m[34;49m / 3 & 4 | 1 + + ;  .. [39;49m[32;49m
0x7fbdaabb7935    48c7c102000000          mov rcx, 0x2                                           [39;49m
[34;49m ..                   : tx1 0 ! ! 8 2 / 2 [39;49m[33;40m/[39;49m[34;49m 3 & 4 | 1 + + ;  .. [39;49m[32;49m
0x7fbdaabb793c    48c7c200000000          mov rdx, 0x0                                           [39;49m[32;49m
0x7fbdaabb7943    48f7f9                  idiv rcx                                               [39;49m
[34;49m ..                 : tx1 0 ! ! 8 2 / 2 / [39;49m[33;40m3[39;49m[34;49m & 4 | 1 + + ;  .. [39;49m[32;49m
0x7fbdaabb7946    48c7c103000000          mov rcx, 0x3                                           [39;49m
[34;49m ..               : tx1 0 ! ! 8 2 / 2 / 3 [39;49m[33;40m&[39;49m[34;49m 4 | 1 + + ;  .. [39;49m[32;49m
0x7fbdaabb794d    4823c1                  and rax, rcx                                           [39;49m
[34;49m ..             : tx1 0 ! ! 8 2 / 2 / 3 & [39;49m[33;40m4[39;49m[34;49m | 1 + + ;  .. [39;49m[32;49m
0x7fbdaabb7950    48c7c104000000          mov rcx, 0x4                                           [39;49m
[34;49m ..           : tx1 0 ! ! 8 2 / 2 / 3 & 4 [39;49m[33;40m|[39;49m[34;49m 1 + + ;  .. [39;49m[32;49m
0x7fbdaabb7957    480bc1                  or rax, rcx                                            [39;49m
[34;49m ..         : tx1 0 ! ! 8 2 / 2 / 3 & 4 | [39;49m[33;40m1[39;49m[34;49m + + ;  .. [39;49m[32;49m
0x7fbdaabb795a    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m ..       : tx1 0 ! ! 8 2 / 2 / 3 & 4 | 1 [39;49m[33;40m+[39;49m[34;49m + ;  .. [39;49m[32;49m
0x7fbdaabb7961    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fbdaabb7964    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fbdaabb7967    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fbdaabb796a    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m ..     : tx1 0 ! ! 8 2 / 2 / 3 & 4 | 1 + [39;49m[33;40m+[39;49m[34;49m ;  .. [39;49m[32;49m
0x7fbdaabb796e    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fbdaabb7971    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb7975    498906                  mov [r14], rax                                         [39;49m
[34;49m ..   : tx1 0 ! ! 8 2 / 2 / 3 & 4 | 1 + + [39;49m[33;40m;[39;49m[34;49m  .. [39;49m[32;49m
0x7fbdaabb7978    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'tx1' :: codeSize = 130
Word : 0x00007fbda80663c0 :: Compiled at : 0x00007fbdaabb78f6
 =============================
::> 'wdiss' was called at namespaces/test/dev0.csl 26.17 <::

 =============================
C_Syntax.[34;49mfactoriali[39;49m <:> csl compiled word, prefix
SourceCode for C_Syntax.[34;49mfactoriali[39;49m :> 
[34;49mint factoriali ( REG n | REG res ) { res = 1; while ( n >= 2 ) { res = res * n-- ; } return res; } [39;49m
Source code file location of [34;49mfactoriali[39;49m : "namespaces/test/dev0.csl" : 34.15 :: we are now at : namespaces/test/dev0.csl : 51.27
Compiled with : optimizeOn, inlineOn, c_syntaxOn, infixOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xaabb798d -- code size = 33 bytes
TypeSignature : 
 -----------------------------
Word :: C_Syntax.[34;49mfactoriali[39;49m : definition = 0x00007fbdaabb798d : disassembly at namespaces/test/dev0.csl : 51.27 :
[34;49m ..                                   int [39;49m[33;40mfactoriali[39;49m[34;49m ( REG n | REG res ) { res = 1; while ( n >= 2 ) { res = res * n-- ;  } return res; }  .. [39;49m[32;49m
0x7fbdaabb798d    498b3e                  mov rdi, [r14]                                         [39;49m
[34;49m .. actoriali ( REG n | REG res ) { res = [39;49m[33;40m1[39;49m[34;49m; while ( n >= 2 ) { res = res * n-- ;  } return res; } [39;49m[32;49m
0x7fbdaabb7990    48c7c601000000          mov rsi, 0x1                                           [39;49m
[34;49m .. EG n | REG res ) { res = 1; while ( n [39;49m[33;40m>=[39;49m[34;49m 2 ) { res = res * n-- ;  } return res; } [39;49m[32;49m
0x7fbdaabb7997    4883ff02                cmp rdi, 0x2                                           [39;49m[32;49m
0x7fbdaabb799b    0f8c09000000            jl 0x7fbdaabb79aa          	< C_Syntax.[34;49mfactoriali[39;49m+29[32;49m >[39;49m[39;49m
[34;49m .. res = 1; while ( n >= 2 ) { res = res [39;49m[33;40m*[39;49m[34;49m n-- ;  } return res; } [39;49m[32;49m
0x7fbdaabb79a1    480faff7                imul rsi, rdi                                          [39;49m
[34;49m ..  = 1; while ( n >= 2 ) { res = res * n[39;49m[33;40m--[39;49m[34;49m ;  } return res; } [39;49m[32;49m
0x7fbdaabb79a5    48ffcf                  dec rdi                                                [39;49m
[34;49m int factoriali ( REG n | REG res ) { res [39;49m[33;40mstore[39;49m[34;49mwhile ( n >= 2 ) { res = res * n-- ;  } return res; }  .. [39;49m[32;49m
0x7fbdaabb79a8    ebed                    jmp 0x7fbdaabb7997         	< C_Syntax.[34;49mfactoriali[39;49m+10[32;49m >[39;49m[39;49m
[34;49m ..  >= 2 ) { res = res * n-- ;  } return [39;49m[33;40mres[39;49m[34;49m; } [39;49m[32;49m
0x7fbdaabb79aa    498936                  mov [r14], rsi                                         [39;49m[32;49m
0x7fbdaabb79ad    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'factoriali' :: codeSize = 32
Word : 0x00007fbda80674f0 :: Compiled at : 0x00007fbdaabb798d
 =============================
::> 'wdiss' was called at namespaces/test/dev0.csl 51.27 <::
 5040
 =============================
C.[34;49mfactorial[39;49m <:> csl compiled word
SourceCode for C.[34;49mfactorial[39;49m :> 
[34;49m: factorial ( REG n | REG rec ) rec 1 = { n @ 1 > } { rec @ n @ * rec store n -- } while return ( rec @ ) ; [39;49m
Source code file location of [34;49mfactorial[39;49m : "namespaces/test/bigNum.csl" : 12.2 :: we are now at : namespaces/test/dev0.csl : 62.14
Compiled with : optimizeOn, inlineOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xaad59cf9 -- code size = 33 bytes
TypeSignature : 
 -----------------------------
Word :: C.[34;49mfactorial[39;49m : definition = 0x00007fbdaad59cf9 : disassembly at namespaces/test/dev0.csl : 62.14 :
[34;49m ..                           : factorial [39;49m[33;40m([39;49m[34;49m REG n | REG rec ) rec 1 = { n @ 1 > } { rec @ n @ * rec store n -- } while return ( rec @ ) ;  .. [39;49m[32;49m
0x7fbdaad59cf9    498b3e                  mov rdi, [r14]                                         [39;49m
[34;49m ..   : factorial ( REG n | REG rec ) rec [39;49m[33;40m1[39;49m[34;49m = { n @ 1 > } { rec @ n @ * rec store n -- } while return ( rec @ ) ;  .. [39;49m[32;49m
0x7fbdaad59cfc    48c7c601000000          mov rsi, 0x1                                           [39;49m
[34;49m .. l ( REG n | REG rec ) rec 1 = { n @ 1 [39;49m[33;40m>[39;49m[34;49m } { rec @ n @ * rec store n -- } while return ( rec @ ) ; [39;49m[32;49m
0x7fbdaad59d03    4883ff01                cmp rdi, 0x1                                           [39;49m[32;49m
0x7fbdaad59d07    0f8e09000000            jle 0x7fbdaad59d16         	< C.[34;49mfactorial[39;49m+29[32;49m >[39;49m[39;49m
[34;49m .. rec ) rec 1 = { n @ 1 > } { rec @ n @ [39;49m[33;40m*[39;49m[34;49m rec store n -- } while return ( rec @ ) ; [39;49m[32;49m
0x7fbdaad59d0d    480faff7                imul rsi, rdi                                          [39;49m
[34;49m .. { n @ 1 > } { rec @ n @ * rec store n [39;49m[33;40m--[39;49m[34;49m } while return ( rec @ ) ; [39;49m[32;49m
0x7fbdaad59d11    48ffcf                  dec rdi                                                [39;49m
[34;49m .. : factorial ( REG n | REG rec ) rec 1 [39;49m[33;40m=[39;49m[34;49m { n @ 1 > } { rec @ n @ * rec store n -- } while return ( rec @ ) ;  .. [39;49m[32;49m
0x7fbdaad59d14    ebed                    jmp 0x7fbdaad59d03         	< C.[34;49mfactorial[39;49m+10[32;49m >[39;49m[39;49m
[34;49m .. c store n -- } while return ( rec @ ) [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fbdaad59d16    498936                  mov [r14], rsi                                         [39;49m[32;49m
0x7fbdaad59d19    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'factorial' :: codeSize = 32
Word : 0x00007fbdaad0bdf8 :: Compiled at : 0x00007fbdaad59cf9
 =============================
::> 'wdiss' was called at namespaces/test/dev0.csl 62.14 <::
 5040
 =============================
C.[34;49mfac[39;49m <:> csl compiled word
SourceCode for C.[34;49mfac[39;49m :> 
[34;49m: fac ( n | rec ) rec 1 = { n @ 1 > } { n @ rec @ * rec store n -- } while return rec @ ; [39;49m
Source code file location of [34;49mfac[39;49m : "namespaces/test/dev0.csl" : 65.2 :: we are now at : namespaces/test/dev0.csl : 70.17
Compiled with : optimizeOn, inlineOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xaabb79eb -- code size = 84 bytes
TypeSignature : 
 -----------------------------
Word :: C.[34;49mfac[39;49m : definition = 0x00007fbdaabb79eb : disassembly at namespaces/test/dev0.csl : 70.17 :
[34;49m ..                                     : [39;49m[33;40mfac[39;49m[34;49m ( n | rec )  rec 1 =  { n @ 1 > } { n @ rec @ * rec store n -- } while  return rec @ ;  .. [39;49m[32;49m
0x7fbdaabb79eb    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fbdaabb79ef    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaabb79f3    4981c610000000          add r14, 0x10                                          [39;49m
[34;49m ..                    : fac ( n | rec )  [39;49m[33;40mrec[39;49m[34;49m 1 =  { n @ 1 > } { n @ rec @ * rec store n -- } while  return rec @ ;  .. [39;49m[32;49m
0x7fbdaabb79fa    498d4708                lea rax, [r15+0x8]                                     [39;49m
[34;49m ..                : fac ( n | rec )  rec [39;49m[33;40m1[39;49m[34;49m =  { n @ 1 > } { n @ rec @ * rec store n -- } while  return rec @ ;  .. [39;49m[32;49m
0x7fbdaabb79fe    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m ..              : fac ( n | rec )  rec 1 [39;49m[33;40m=[39;49m[34;49m  { n @ 1 > } { n @ rec @ * rec store n -- } while  return rec @ ;  .. [39;49m[32;49m
0x7fbdaabb7a05    488908                  mov [rax], rcx                                         [39;49m
[34;49m ..         : fac ( n | rec )  rec 1 =  { [39;49m[33;40mn[39;49m[34;49m @ 1 > } { n @ rec @ * rec store n -- } while  return rec @ ;  .. [39;49m[32;49m
0x7fbdaabb7a08    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m ..   : fac ( n | rec )  rec 1 =  { n @ 1 [39;49m[33;40m>[39;49m[34;49m } { n @ rec @ * rec store n -- } while  return rec @ ;  .. [39;49m[32;49m
0x7fbdaabb7a0c    4883f801                cmp rax, 0x1                                           [39;49m[32;49m
0x7fbdaabb7a10    0f8e19000000            jle 0x7fbdaabb7a2f         	< C.[34;49mfac[39;49m+68[32;49m >[39;49m[39;49m
[34;49m: fac ( n | rec )  rec 1 =  { n @ 1 > } { [39;49m[33;40mn[39;49m[34;49m @ rec @ * rec store n -- } while  return rec @ ;  .. [39;49m[32;49m
0x7fbdaabb7a16    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. n | rec )  rec 1 =  { n @ 1 > } { n @ [39;49m[33;40mrec[39;49m[34;49m @ * rec store n -- } while  return rec @ ; [39;49m[32;49m
0x7fbdaabb7a1a    498b4f08                mov rcx, [r15+0x8]                                     [39;49m
[34;49m .. c )  rec 1 =  { n @ 1 > } { n @ rec @ [39;49m[33;40m*[39;49m[34;49m rec store n -- } while  return rec @ ; [39;49m[32;49m
0x7fbdaabb7a1e    480fafc1                imul rax, rcx                                          [39;49m
[34;49m .. )  rec 1 =  { n @ 1 > } { n @ rec @ * [39;49m[33;40mrec[39;49m[34;49m store n -- } while  return rec @ ; [39;49m[32;49m
0x7fbdaabb7a22    498d4f08                lea rcx, [r15+0x8]                                     [39;49m
[34;49m .. ec 1 =  { n @ 1 > } { n @ rec @ * rec [39;49m[33;40mstore[39;49m[34;49m n -- } while  return rec @ ; [39;49m[32;49m
0x7fbdaabb7a26    488901                  mov [rcx], rax                                         [39;49m
[34;49m .. { n @ 1 > } { n @ rec @ * rec store n [39;49m[33;40m--[39;49m[34;49m } while  return rec @ ; [39;49m[32;49m
0x7fbdaabb7a29    49ff4ff8                dec qword [r15-0x8]                                    [39;49m
[34;49m ..  @ 1 > } { n @ rec @ * rec store n -- [39;49m[33;40m}[39;49m[34;49m while  return rec @ ; [39;49m[32;49m
0x7fbdaabb7a2d    ebd9                    jmp 0x7fbdaabb7a08         	< C.[34;49mfac[39;49m+29[32;49m >[39;49m[39;49m[32;49m
0x7fbdaabb7a2f    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m ..  rec store n -- } while  return rec @ [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fbdaabb7a33    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaabb7a37    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m
[34;49m .. ec @ * rec store n -- } while  return [39;49m[33;40mrec[39;49m[34;49m @ ; [39;49m[32;49m
0x7fbdaabb7a3b    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaabb7a3e    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'fac' :: codeSize = 83
Word : 0x00007fbda806cf30 :: Compiled at : 0x00007fbdaabb79eb
 =============================
::> 'wdiss' was called at namespaces/test/dev0.csl 70.17 <::
 5040
 =============================
C.[34;49mfactorial[39;49m <:> csl compiled word
SourceCode for C.[34;49mfactorial[39;49m :> 
[34;49m: factorial ( REG n | REG rec ) rec 1 = { n @ 1 > } { rec @ n @ * rec store n -- } while return rec ; [39;49m
Source code file location of [34;49mfactorial[39;49m : "namespaces/test/dev0.csl" : 73.2 :: we are now at : namespaces/test/dev0.csl : 74.22
Compiled with : optimizeOn, inlineOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xaabb7a53 -- code size = 33 bytes
TypeSignature : 
 -----------------------------
Word :: C.[34;49mfactorial[39;49m : definition = 0x00007fbdaabb7a53 : disassembly at namespaces/test/dev0.csl : 74.22 :
[34;49m ..                           : factorial [39;49m[33;40m([39;49m[34;49m REG n | REG rec ) rec 1 = { n @ 1 > } { rec @ n @ * rec store n -- } while return rec ;  .. [39;49m[32;49m
0x7fbdaabb7a53    498b3e                  mov rdi, [r14]                                         [39;49m
[34;49m ..   : factorial ( REG n | REG rec ) rec [39;49m[33;40m1[39;49m[34;49m = { n @ 1 > } { rec @ n @ * rec store n -- } while return rec ;  .. [39;49m[32;49m
0x7fbdaabb7a56    48c7c601000000          mov rsi, 0x1                                           [39;49m
[34;49m .. l ( REG n | REG rec ) rec 1 = { n @ 1 [39;49m[33;40m>[39;49m[34;49m } { rec @ n @ * rec store n -- } while return rec ; [39;49m[32;49m
0x7fbdaabb7a5d    4883ff01                cmp rdi, 0x1                                           [39;49m[32;49m
0x7fbdaabb7a61    0f8e09000000            jle 0x7fbdaabb7a70         	< C.[34;49mfactorial[39;49m+29[32;49m >[39;49m[39;49m
[34;49m .. rec ) rec 1 = { n @ 1 > } { rec @ n @ [39;49m[33;40m*[39;49m[34;49m rec store n -- } while return rec ; [39;49m[32;49m
0x7fbdaabb7a67    480faff7                imul rsi, rdi                                          [39;49m
[34;49m .. { n @ 1 > } { rec @ n @ * rec store n [39;49m[33;40m--[39;49m[34;49m } while return rec ; [39;49m[32;49m
0x7fbdaabb7a6b    48ffcf                  dec rdi                                                [39;49m
[34;49m .. : factorial ( REG n | REG rec ) rec 1 [39;49m[33;40m=[39;49m[34;49m { n @ 1 > } { rec @ n @ * rec store n -- } while return rec ;  .. [39;49m[32;49m
0x7fbdaabb7a6e    ebed                    jmp 0x7fbdaabb7a5d         	< C.[34;49mfactorial[39;49m+10[32;49m >[39;49m[39;49m
[34;49m .. @ * rec store n -- } while return rec [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fbdaabb7a70    498936                  mov [r14], rsi                                         [39;49m[32;49m
0x7fbdaabb7a73    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'factorial' :: codeSize = 32
Word : 0x00007fbda806f728 :: Compiled at : 0x00007fbdaabb7a53
 =============================
::> 'wdiss' was called at namespaces/test/dev0.csl 74.22 <::
 5040 factorial  : ok


 namespaces/test/dev0.csl 76.12[34;49m 
starting Lisp
 stack is ...[39;49m
DataStack at : [34;49mnamespaces/test/dev0.csl : 76.52[39;49m :
DataStack depth =   3 : Dsp (R14) = Top = 0x00007fbdab0efa58, InitialTos = 0x00007fbdab0efa40, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fbdab0efa58 > = 0x0000000000000005	
  DataStack   [  -1 ] < 0x00007fbdab0efa50 > = 0x0000000000000005	
  DataStack   [  -2 ] < 0x00007fbdab0efa48 > = 0x0000000000000005	
[39;49m g23
[39;49m 7
[39;49m 7
[39;49m q1x0
[39;49m 7
[39;49m h01
[39;49m 7
[39;49m 7
[39;49m average

 =============================
LispDefines.[34;49maverage[39;49m <:> variable[34;49maverage[39;49m <:> lambdaCalculus compiled word
SourceCode for LispDefines.[34;49maverage[39;49m :> 
[34;49m(define average (/\ ( n0 n1 )(/ ( + n0 n1 ) 2 )))[39;49m
Source code file location of [34;49maverage[39;49m : "namespaces/test/dev0.csl" : 89.48 :: we are now at : namespaces/test/dev0.csl : 90.24
Compiled with : optimizeOn, inlineOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp on : Word Source Code on
starting at address : 0xaabb7a79 -- code size = 66 bytes
 -----------------------------
Word :: LispDefines.[34;49maverage[39;49m : definition = 0x00007fbdaabb7a79 : disassembly at namespaces/test/dev0.csl : 90.24 :[32;49m
0x7fbdaabb7a79    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fbdaabb7a7d    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaabb7a81    4981c608000000          add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb7a88    498b47f0                mov rax, [r15-0x10]                                    [39;49m[32;49m
0x7fbdaabb7a8c    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaabb7a90    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fbdaabb7a93    48c7c102000000          mov rcx, 0x2                                           [39;49m[32;49m
0x7fbdaabb7a9a    48c7c200000000          mov rdx, 0x0                                           [39;49m[32;49m
0x7fbdaabb7aa1    48f7f9                  idiv rcx                                               [39;49m[32;49m
0x7fbdaabb7aa4    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb7aa8    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaabb7aab    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaabb7aaf    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaabb7ab3    4983ee08                sub r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb7ab7    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaabb7aba    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'average' :: codeSize = 65
Word : 0x00007fbda92118c0 :: Compiled at : 0x00007fbdaabb7a79
 =============================
::> 'wdiss' was called at namespaces/test/dev0.csl 90.24 <::
[39;49m 77
  : should show 77[39;49m 7
[39;49m fib

 =============================
LispDefines.[34;49mfib[39;49m <:> variable[34;49mfib[39;49m <:> lambdaCalculus compiled word
SourceCode for LispDefines.[34;49mfib[39;49m :> 
[34;49m(define fib (lambda (n) ( ifElse (< n 2) n (+ (fib (- n 1)) (fib (- n 2))))))[39;49m
Source code file location of [34;49mfib[39;49m : "namespaces/test/dev0.csl" : 94.76 :: we are now at : namespaces/test/dev0.csl : 95.20
Compiled with : optimizeOn, inlineOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp on : Word Source Code on
starting at address : 0xaabb7ac0 -- code size = 130 bytes
 -----------------------------
Word :: LispDefines.[34;49mfib[39;49m : definition = 0x00007fbdaabb7ac0 : disassembly at namespaces/test/dev0.csl : 95.20 :[32;49m
0x7fbdaabb7ac0    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fbdaabb7ac4    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaabb7ac8    4981c608000000          add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb7acf    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaabb7ad3    4883f802                cmp rax, 0x2                                           [39;49m[32;49m
0x7fbdaabb7ad7    0f8d10000000            jge 0x7fbdaabb7aed         	< LispDefines.[34;49mfib[39;49m+45[32;49m >[39;49m[39;49m[32;49m
0x7fbdaabb7add    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaabb7ae1    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb7ae5    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaabb7ae8    e949000000              jmp 0x7fbdaabb7b36         	< LispDefines.[34;49mfib[39;49m+118[32;49m >[39;49m[39;49m[32;49m
0x7fbdaabb7aed    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaabb7af1    48c7c101000000          mov rcx, 0x1                                           [39;49m[32;49m
0x7fbdaabb7af8    482bc1                  sub rax, rcx                                           [39;49m[32;49m
0x7fbdaabb7afb    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb7aff    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaabb7b02    e8b9ffffff              call 0x7fbdaabb7ac0        	< LispDefines.[34;49mfib[39;49m : 0x00007fbdaabb7ac0[32;49m >[39;49m[39;49m[32;49m
0x7fbdaabb7b07    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaabb7b0b    48c7c102000000          mov rcx, 0x2                                           [39;49m[32;49m
0x7fbdaabb7b12    482bc1                  sub rax, rcx                                           [39;49m[32;49m
0x7fbdaabb7b15    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb7b19    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaabb7b1c    e89fffffff              call 0x7fbdaabb7ac0        	< LispDefines.[34;49mfib[39;49m : 0x00007fbdaabb7ac0[32;49m >[39;49m[39;49m[32;49m
0x7fbdaabb7b21    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fbdaabb7b24    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fbdaabb7b28    4983ee10                sub r14, 0x10                                          [39;49m[32;49m
0x7fbdaabb7b2c    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fbdaabb7b2f    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb7b33    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaabb7b36    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaabb7b3a    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaabb7b3e    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaabb7b41    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'fib' :: codeSize = 129
Word : 0x00007fbda92167d0 :: Compiled at : 0x00007fbdaabb7ac0
 =============================
::> 'wdiss' was called at namespaces/test/dev0.csl 95.20 <::
[39;49m 6765
[39;49m fib2
[39;49m 6765
[39;49m 7
[39;49m 7
[39;49m 7
[39;49m g
[39;49m h
[39;49m g1
[39;49m g2
[39;49m 7
[39;49m 7
[39;49m j
[39;49m h
[39;49m k

[39;49m 77
[39;49m 777
[39;49m 77
[39;49m 77
[39;49m 777
[34;49m 
before fib[39;49m 6765
typeChecking is on, optimize is on, inlining is on, infixMode is off, 
prefixMode is off, c_syntax is off, postfixMode is on
Debug is off. Verbosity = 1. Console = 0, NumberBase = 10.
DebugSourceCode on : BigNum off : Lisp on : jcc8 off
interpreting : at namespaces/test/dev0.csl : 129.6
SignalExceptionsHandled = 0 ; SigSegvs = 0 ; Restarts = 0
StartedTimes = 1 ; RestartCondition = INITIAL_START ; LastRestartCondtion = csl_RUN_INIT
InNamespace = Root.Lisp[39;49m fibbc

 =============================
LispDefines.[34;49mfibbc[39;49m <:> variable[34;49mfibbc[39;49m <:> lambdaCalculus compiled word
SourceCode for LispDefines.[34;49mfibbc[39;49m :> 
[34;49m(define fibbc (lambda ( n ) (ifElse (< n 2) n (+ (fibbc (- n 1)) (fibbc (- n 2))))))[39;49m
Source code file location of [34;49mfibbc[39;49m : "namespaces/test/dev0.csl" : 130.83 :: we are now at : namespaces/test/dev0.csl : 131.22
Compiled with : optimizeOn, inlineOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp on : Word Source Code on
starting at address : 0xaabb7cfe -- code size = 130 bytes
 -----------------------------
Word :: LispDefines.[34;49mfibbc[39;49m : definition = 0x00007fbdaabb7cfe : disassembly at namespaces/test/dev0.csl : 131.22 :[32;49m
0x7fbdaabb7cfe    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fbdaabb7d02    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaabb7d06    4981c608000000          add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb7d0d    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaabb7d11    4883f802                cmp rax, 0x2                                           [39;49m[32;49m
0x7fbdaabb7d15    0f8d10000000            jge 0x7fbdaabb7d2b         	< LispDefines.[34;49mfibbc[39;49m+45[32;49m >[39;49m[39;49m[32;49m
0x7fbdaabb7d1b    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaabb7d1f    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb7d23    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaabb7d26    e949000000              jmp 0x7fbdaabb7d74         	< LispDefines.[34;49mfibbc[39;49m+118[32;49m >[39;49m[39;49m[32;49m
0x7fbdaabb7d2b    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaabb7d2f    48c7c101000000          mov rcx, 0x1                                           [39;49m[32;49m
0x7fbdaabb7d36    482bc1                  sub rax, rcx                                           [39;49m[32;49m
0x7fbdaabb7d39    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb7d3d    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaabb7d40    e8b9ffffff              call 0x7fbdaabb7cfe        	< LispDefines.[34;49mfibbc[39;49m : 0x00007fbdaabb7cfe[32;49m >[39;49m[39;49m[32;49m
0x7fbdaabb7d45    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaabb7d49    48c7c102000000          mov rcx, 0x2                                           [39;49m[32;49m
0x7fbdaabb7d50    482bc1                  sub rax, rcx                                           [39;49m[32;49m
0x7fbdaabb7d53    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb7d57    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaabb7d5a    e89fffffff              call 0x7fbdaabb7cfe        	< LispDefines.[34;49mfibbc[39;49m : 0x00007fbdaabb7cfe[32;49m >[39;49m[39;49m[32;49m
0x7fbdaabb7d5f    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fbdaabb7d62    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fbdaabb7d66    4983ee10                sub r14, 0x10                                          [39;49m[32;49m
0x7fbdaabb7d6a    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fbdaabb7d6d    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb7d71    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaabb7d74    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaabb7d78    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaabb7d7c    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaabb7d7f    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'fibbc' :: codeSize = 129
Word : 0x00007fbda9242f68 :: Compiled at : 0x00007fbdaabb7cfe
 =============================
::> 'wdiss' was called at namespaces/test/dev0.csl 131.22 <::
[39;49m 6765
[39;49m fibcc

 =============================
LispDefines.[34;49mfibcc[39;49m <:> variable[34;49mfibcc[39;49m <:> lambdaCalculus compiled word
SourceCode for LispDefines.[34;49mfibcc[39;49m :> 
[34;49m(define fibcc (lambda ( n ) (ifElse (< n 2) n (+ (fibcc (- n 1)) (fibcc (- n 2))))))[39;49m
Source code file location of [34;49mfibcc[39;49m : "namespaces/test/dev0.csl" : 134.83 :: we are now at : namespaces/test/dev0.csl : 135.22
Compiled with : optimizeOn, inlineOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp on : Word Source Code on
starting at address : 0xaabb7d85 -- code size = 130 bytes
 -----------------------------
Word :: LispDefines.[34;49mfibcc[39;49m : definition = 0x00007fbdaabb7d85 : disassembly at namespaces/test/dev0.csl : 135.22 :[32;49m
0x7fbdaabb7d85    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fbdaabb7d89    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaabb7d8d    4981c608000000          add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb7d94    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaabb7d98    4883f802                cmp rax, 0x2                                           [39;49m[32;49m
0x7fbdaabb7d9c    0f8d10000000            jge 0x7fbdaabb7db2         	< LispDefines.[34;49mfibcc[39;49m+45[32;49m >[39;49m[39;49m[32;49m
0x7fbdaabb7da2    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaabb7da6    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb7daa    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaabb7dad    e949000000              jmp 0x7fbdaabb7dfb         	< LispDefines.[34;49mfibcc[39;49m+118[32;49m >[39;49m[39;49m[32;49m
0x7fbdaabb7db2    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaabb7db6    48c7c101000000          mov rcx, 0x1                                           [39;49m[32;49m
0x7fbdaabb7dbd    482bc1                  sub rax, rcx                                           [39;49m[32;49m
0x7fbdaabb7dc0    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb7dc4    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaabb7dc7    e8b9ffffff              call 0x7fbdaabb7d85        	< LispDefines.[34;49mfibcc[39;49m : 0x00007fbdaabb7d85[32;49m >[39;49m[39;49m[32;49m
0x7fbdaabb7dcc    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaabb7dd0    48c7c102000000          mov rcx, 0x2                                           [39;49m[32;49m
0x7fbdaabb7dd7    482bc1                  sub rax, rcx                                           [39;49m[32;49m
0x7fbdaabb7dda    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb7dde    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaabb7de1    e89fffffff              call 0x7fbdaabb7d85        	< LispDefines.[34;49mfibcc[39;49m : 0x00007fbdaabb7d85[32;49m >[39;49m[39;49m[32;49m
0x7fbdaabb7de6    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fbdaabb7de9    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fbdaabb7ded    4983ee10                sub r14, 0x10                                          [39;49m[32;49m
0x7fbdaabb7df1    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fbdaabb7df4    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb7df8    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaabb7dfb    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaabb7dff    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaabb7e03    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaabb7e06    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'fibcc' :: codeSize = 129
Word : 0x00007fbda9247b08 :: Compiled at : 0x00007fbdaabb7d85
 =============================
::> 'wdiss' was called at namespaces/test/dev0.csl 135.22 <::
[39;49m 6765
[34;49m 
after fib[39;49m

 =============================
C.[34;49m_fib2[39;49m <:> csl compiled word
SourceCode for C.[34;49m_fib2[39;49m :> 
[34;49m: _fib2 dup 2 < ? : dup -- _fib2 swap 2 - _fib2 + ; [39;49m
Source code file location of [34;49m_fib2[39;49m : "namespaces/test/dev0.csl" : 142.2 :: we are now at : namespaces/test/dev0.csl : 143.19
Compiled with : optimizeOn, inlineOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xaabb7e1b -- code size = 151 bytes
TypeSignature : 
 -----------------------------
Word :: C.[34;49m_fib2[39;49m : definition = 0x00007fbdaabb7e1b : disassembly at namespaces/test/dev0.csl : 143.19 :
[34;49m ..                               : _fib2 [39;49m[33;40mdup[39;49m[34;49m 2 < ? : dup -- _fib2 swap 2 - _fib2 + ;  .. [39;49m[32;49m
0x7fbdaabb7e1b    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fbdaabb7e1e    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb7e22    498906                  mov [r14], rax                                         [39;49m
[34;49m ..                           : _fib2 dup [39;49m[33;40m2[39;49m[34;49m < ? : dup -- _fib2 swap 2 - _fib2 + ;  .. [39;49m[32;49m
0x7fbdaabb7e25    48c7c002000000          mov rax, 0x2                                           [39;49m[32;49m
0x7fbdaabb7e2c    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fbdaabb7e2f    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fbdaabb7e32    4983ee08                sub r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb7e36    483bc1                  cmp rax, rcx                                           [39;49m[32;49m
0x7fbdaabb7e39    0f9cc0                  setl al                                                [39;49m[32;49m
0x7fbdaabb7e3c    480fb6c0                movzx rax, al                                          [39;49m[32;49m
0x7fbdaabb7e40    4885c0                  test rax, rax                                          [39;49m[32;49m
0x7fbdaabb7e43    0f8405000000            jz 0x7fbdaabb7e4e          	< C.[34;49m_fib2[39;49m+51[32;49m >[39;49m[39;49m[32;49m
0x7fbdaabb7e49    e963000000              jmp 0x7fbdaabb7eb1         	< C.[34;49m_fib2[39;49m+150[32;49m >[39;49m[39;49m
[34;49m ..                   : _fib2 dup 2 < ? : [39;49m[33;40mdup[39;49m[34;49m -- _fib2 swap 2 - _fib2 + ;  .. [39;49m[32;49m
0x7fbdaabb7e4e    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fbdaabb7e51    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb7e55    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaabb7e58    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fbdaabb7e5b    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m ..               : _fib2 dup 2 < ? : dup [39;49m[33;40m--[39;49m[34;49m _fib2 swap 2 - _fib2 + ;  .. [39;49m[32;49m
0x7fbdaabb7e5f    48ffc8                  dec rax                                                [39;49m[32;49m
0x7fbdaabb7e62    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb7e66    498906                  mov [r14], rax                                         [39;49m
[34;49m ..            : _fib2 dup 2 < ? : dup -- [39;49m[33;40m_fib2[39;49m[34;49m swap 2 - _fib2 + ;  .. [39;49m[32;49m
0x7fbdaabb7e69    e8adffffff              call 0x7fbdaabb7e1b        	< C.[34;49m_fib2[39;49m : 0x00007fbdaabb7e1b[32;49m >[39;49m[39;49m
[34;49m ..      : _fib2 dup 2 < ? : dup -- _fib2 [39;49m[33;40mswap[39;49m[34;49m 2 - _fib2 + ;  .. [39;49m[32;49m
0x7fbdaabb7e6e    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fbdaabb7e71    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fbdaabb7e75    49894ef8                mov [r14-0x8], rcx                                     [39;49m[32;49m
0x7fbdaabb7e79    498906                  mov [r14], rax                                         [39;49m
[34;49m .. : _fib2 dup 2 < ? : dup -- _fib2 swap [39;49m[33;40m2[39;49m[34;49m - _fib2 + ;  .. [39;49m[32;49m
0x7fbdaabb7e7c    48c7c002000000          mov rax, 0x2                                           [39;49m[32;49m
0x7fbdaabb7e83    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fbdaabb7e86    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fbdaabb7e89    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m  : _fib2 dup 2 < ? : dup -- _fib2 swap 2 [39;49m[33;40m-[39;49m[34;49m _fib2 + ;  .. [39;49m[32;49m
0x7fbdaabb7e8d    482bc1                  sub rax, rcx                                           [39;49m[32;49m
0x7fbdaabb7e90    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb7e94    498906                  mov [r14], rax                                         [39;49m
[34;49m: _fib2 dup 2 < ? : dup -- _fib2 swap 2 - [39;49m[33;40m_fib2[39;49m[34;49m + ;  .. [39;49m[32;49m
0x7fbdaabb7e97    e87fffffff              call 0x7fbdaabb7e1b        	< C.[34;49m_fib2[39;49m : 0x00007fbdaabb7e1b[32;49m >[39;49m[39;49m[32;49m
0x7fbdaabb7e9c    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fbdaabb7e9f    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fbdaabb7ea3    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m .. p 2 < ? : dup -- _fib2 swap 2 - _fib2 [39;49m[33;40m+[39;49m[34;49m ; [39;49m[32;49m
0x7fbdaabb7ea7    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fbdaabb7eaa    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb7eae    498906                  mov [r14], rax                                         [39;49m
[34;49m .. 2 < ? : dup -- _fib2 swap 2 - _fib2 + [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fbdaabb7eb1    c3                      ret                                                    [39;49m
Word_Disassemble : word - '_fib2' :: codeSize = 150
Word : 0x00007fbda807e868 :: Compiled at : 0x00007fbdaabb7e1b
 =============================
::> 'wdiss' was called at namespaces/test/dev0.csl 143.19 <::

 6765 6765 6765
 =============================
C.[34;49mfibPTC?[39;49m <:> csl compiled word
SourceCode for C.[34;49mfibPTC?[39;49m :> 
[34;49m: fibPTC? ( n | fn fn1 fn2 ) { fn 0 = fn1 0 = fn2 1 = } { n @ } { n n @ 1 - = } { fn1 fn2 @ = fn2 fn @ = fn fn1 @ fn2 @ + = } for return fn @ ; [39;49m
Source code file location of [34;49mfibPTC?[39;49m : "namespaces/test/dev0.csl" : 152.2 :: we are now at : namespaces/test/dev0.csl : 162.21
Compiled with : optimizeOn, inlineOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xaabb7fbe -- code size = 183 bytes
TypeSignature : 
 -----------------------------
Word :: C.[34;49mfibPTC?[39;49m : definition = 0x00007fbdaabb7fbe : disassembly at namespaces/test/dev0.csl : 162.21 :
[34;49m ..                                     : [39;49m[33;40mfibPTC?[39;49m[34;49m ( n | fn fn1 fn2 )  { fn 0 = fn1 0 = fn2 1 = } { n @ } { n n @ 1 - = }  {  fn1 fn2 @ =  fn2 f .. [39;49m[32;49m
0x7fbdaabb7fbe    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fbdaabb7fc2    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaabb7fc6    4981c620000000          add r14, 0x20                                          [39;49m
[34;49m ..       : fibPTC? ( n | fn fn1 fn2 )  { [39;49m[33;40mfn[39;49m[34;49m 0 = fn1 0 = fn2 1 = } { n @ } { n n @ 1 - = }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } f .. [39;49m[32;49m
0x7fbdaabb7fcd    498d4708                lea rax, [r15+0x8]                                     [39;49m
[34;49m ..    : fibPTC? ( n | fn fn1 fn2 )  { fn [39;49m[33;40m0[39;49m[34;49m = fn1 0 = fn2 1 = } { n @ } { n n @ 1 - = }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for  .. [39;49m[32;49m
0x7fbdaabb7fd1    48c7c100000000          mov rcx, 0x0                                           [39;49m
[34;49m ..  : fibPTC? ( n | fn fn1 fn2 )  { fn 0 [39;49m[33;40m=[39;49m[34;49m fn1 0 = fn2 1 = } { n @ } { n n @ 1 - = }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for re .. [39;49m[32;49m
0x7fbdaabb7fd8    488908                  mov [rax], rcx                                         [39;49m
[34;49m   : fibPTC? ( n | fn fn1 fn2 )  { fn 0 = [39;49m[33;40mfn1[39;49m[34;49m 0 = fn2 1 = } { n @ } { n n @ 1 - = }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for retu .. [39;49m[32;49m
0x7fbdaabb7fdb    498d4710                lea rax, [r15+0x10]                                    [39;49m
[34;49m .. PTC? ( n | fn fn1 fn2 )  { fn 0 = fn1 [39;49m[33;40m0[39;49m[34;49m = fn2 1 = } { n @ } { n n @ 1 - = }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ [39;49m[32;49m
0x7fbdaabb7fdf    48c7c100000000          mov rcx, 0x0                                           [39;49m
[34;49m .. C? ( n | fn fn1 fn2 )  { fn 0 = fn1 0 [39;49m[33;40m=[39;49m[34;49m fn2 1 = } { n @ } { n n @ 1 - = }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fbdaabb7fe6    488908                  mov [rax], rcx                                         [39;49m
[34;49m ..  ( n | fn fn1 fn2 )  { fn 0 = fn1 0 = [39;49m[33;40mfn2[39;49m[34;49m 1 = } { n @ } { n n @ 1 - = }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fbdaabb7fe9    498d4718                lea rax, [r15+0x18]                                    [39;49m
[34;49m ..  | fn fn1 fn2 )  { fn 0 = fn1 0 = fn2 [39;49m[33;40m1[39;49m[34;49m = } { n @ } { n n @ 1 - = }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fbdaabb7fed    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m ..  fn fn1 fn2 )  { fn 0 = fn1 0 = fn2 1 [39;49m[33;40m=[39;49m[34;49m } { n @ } { n n @ 1 - = }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fbdaabb7ff4    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. 1 fn2 )  { fn 0 = fn1 0 = fn2 1 = } { [39;49m[33;40mn[39;49m[34;49m @ } { n n @ 1 - = }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fbdaabb7ff7    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m ..  =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } [39;49m[33;40mfor[39;49m[34;49m return fn @ ; [39;49m[32;49m
0x7fbdaabb7ffb    4885c0                  test rax, rax                                          [39;49m[32;49m
0x7fbdaabb7ffe    0f8461000000            jz 0x7fbdaabb8065          	< C.[34;49mfibPTC?[39;49m+167[32;49m >[39;49m[39;49m
[34;49m .. fn2 1 = } { n @ } { n n @ 1 - = }  {  [39;49m[33;40mfn1[39;49m[34;49m fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fbdaabb8004    498d4710                lea rax, [r15+0x10]                                    [39;49m
[34;49m .. 1 = } { n @ } { n n @ 1 - = }  {  fn1 [39;49m[33;40mfn2[39;49m[34;49m @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fbdaabb8008    498b4f18                mov rcx, [r15+0x18]                                    [39;49m
[34;49m .. { n @ } { n n @ 1 - = }  {  fn1 fn2 @ [39;49m[33;40m=[39;49m[34;49m  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fbdaabb800c    488908                  mov [rax], rcx                                         [39;49m
[34;49m ..  @ } { n n @ 1 - = }  {  fn1 fn2 @ =  [39;49m[33;40mfn2[39;49m[34;49m fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fbdaabb800f    498d4718                lea rax, [r15+0x18]                                    [39;49m
[34;49m ..  { n n @ 1 - = }  {  fn1 fn2 @ =  fn2 [39;49m[33;40mfn[39;49m[34;49m @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fbdaabb8013    498b4f08                mov rcx, [r15+0x8]                                     [39;49m
[34;49m .. n @ 1 - = }  {  fn1 fn2 @ =  fn2 fn @ [39;49m[33;40m=[39;49m[34;49m  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fbdaabb8017    488908                  mov [rax], rcx                                         [39;49m
[34;49m ..  1 - = }  {  fn1 fn2 @ =  fn2 fn @ =  [39;49m[33;40mfn[39;49m[34;49m fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fbdaabb801a    498d4708                lea rax, [r15+0x8]                                     [39;49m[32;49m
0x7fbdaabb801e    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb8022    498906                  mov [r14], rax                                         [39;49m
[34;49m .. - = }  {  fn1 fn2 @ =  fn2 fn @ =  fn [39;49m[33;40mfn1[39;49m[34;49m @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fbdaabb8025    498b4710                mov rax, [r15+0x10]                                    [39;49m
[34;49m ..  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ [39;49m[33;40mfn2[39;49m[34;49m @ + =  } for return fn @ ; [39;49m[32;49m
0x7fbdaabb8029    498b4f18                mov rcx, [r15+0x18]                                    [39;49m
[34;49m .. 1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ [39;49m[33;40m+[39;49m[34;49m =  } for return fn @ ; [39;49m[32;49m
0x7fbdaabb802d    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fbdaabb8030    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fbdaabb8033    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fbdaabb8036    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m .. fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + [39;49m[33;40m=[39;49m[34;49m  } for return fn @ ; [39;49m[32;49m
0x7fbdaabb803a    488908                  mov [rax], rcx                                         [39;49m
[34;49m ..  { fn 0 = fn1 0 = fn2 1 = } { n @ } { [39;49m[33;40mn[39;49m[34;49m n @ 1 - = }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fbdaabb803d    498d47f8                lea rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaabb8041    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb8045    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  fn 0 = fn1 0 = fn2 1 = } { n @ } { n [39;49m[33;40mn[39;49m[34;49m @ 1 - = }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fbdaabb8048    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. 0 = fn1 0 = fn2 1 = } { n @ } { n n @ [39;49m[33;40m1[39;49m[34;49m - = }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fbdaabb804c    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m .. = fn1 0 = fn2 1 = } { n @ } { n n @ 1 [39;49m[33;40m-[39;49m[34;49m = }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fbdaabb8053    482bc1                  sub rax, rcx                                           [39;49m[32;49m
0x7fbdaabb8056    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fbdaabb8059    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fbdaabb805c    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m .. fn1 0 = fn2 1 = } { n @ } { n n @ 1 - [39;49m[33;40m=[39;49m[34;49m }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fbdaabb8060    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. 1 0 = fn2 1 = } { n @ } { n n @ 1 - = [39;49m[33;40m}[39;49m[34;49m  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fbdaabb8063    eb92                    jmp 0x7fbdaabb7ff7         	< C.[34;49mfibPTC?[39;49m+57[32;49m >[39;49m[39;49m[32;49m
0x7fbdaabb8065    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m .. fn fn1 @ fn2 @ + =  } for return fn @ [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fbdaabb8069    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaabb806d    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m
[34;49m .. @ =  fn fn1 @ fn2 @ + =  } for return [39;49m[33;40mfn[39;49m[34;49m @ ; [39;49m[32;49m
0x7fbdaabb8071    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaabb8074    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'fibPTC?' :: codeSize = 182
Word : 0x00007fbda80847d0 :: Compiled at : 0x00007fbdaabb7fbe
 =============================
::> 'wdiss' was called at namespaces/test/dev0.csl 162.21 <::
 6765
 =============================
C_Syntax.[34;49mfibPTC2?[39;49m <:> csl compiled word
SourceCode for C_Syntax.[34;49mfibPTC2?[39;49m :> 
[34;49mint fibPTC2? ( n ) { int fn, fn1, fn2 ; for ( fn = 0, fn1 = 0, fn2 = 1 ; n ; n -- ) { fn1 = fn2 ; fn2 = fn ; fn = fn1 + fn2 ; } return fn ; } [39;49m
Source code file location of [34;49mfibPTC2?[39;49m : "namespaces/test/dev0.csl" : 181.9 :: we are now at : namespaces/test/dev0.csl : 192.22
Compiled with : optimizeOn, inlineOn, c_syntaxOn, infixOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xaabb81aa -- code size = 132 bytes
TypeSignature : 
 -----------------------------
Word :: C_Syntax.[34;49mfibPTC2?[39;49m : definition = 0x00007fbdaabb81aa : disassembly at namespaces/test/dev0.csl : 192.22 :
[34;49m ..                                   int [39;49m[33;40mfibPTC2?[39;49m[34;49m ( n ) { int fn, fn1, fn2 ; for ( fn = 0, fn1 = 0, fn2 = 1 ; n ; n -- )  {  fn1 = fn2 ; fn2 = .. [39;49m[32;49m
0x7fbdaabb81aa    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fbdaabb81ae    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaabb81b2    4981c620000000          add r14, 0x20                                          [39;49m
[34;49m .. ( n ) { int fn, fn1, fn2 ; for ( fn = [39;49m[33;40m0[39;49m[34;49m, fn1 = 0, fn2 = 1 ; n ; n -- )  {  fn1 = fn2 ; fn2 = fn ; fn = fn1 + fn2 ;  } return fn ; } [39;49m[32;49m
0x7fbdaabb81b9    48c7c000000000          mov rax, 0x0                                           [39;49m
[34;49m .. TC2? ( n ) { int fn, fn1, fn2 ; for ( [39;49m[33;40mfn[39;49m[34;49m = 0, fn1 = 0, fn2 = 1 ; n ; n -- )  {  fn1 = fn2 ; fn2 = fn ; fn = fn1 + fn2 ;  } return fn ; } [39;49m[32;49m
0x7fbdaabb81c0    498d4f08                lea rcx, [r15+0x8]                                     [39;49m
[34;49m .. ? ( n ) { int fn, fn1, fn2 ; for ( fn [39;49m[33;40m=[39;49m[34;49m 0, fn1 = 0, fn2 = 1 ; n ; n -- )  {  fn1 = fn2 ; fn2 = fn ; fn = fn1 + fn2 ;  } return fn ; } [39;49m[32;49m
0x7fbdaabb81c4    488901                  mov [rcx], rax                                         [39;49m
[34;49m .. nt fn, fn1, fn2 ; for ( fn = 0, fn1 = [39;49m[33;40m0[39;49m[34;49m, fn2 = 1 ; n ; n -- )  {  fn1 = fn2 ; fn2 = fn ; fn = fn1 + fn2 ;  } return fn ; } [39;49m[32;49m
0x7fbdaabb81c7    48c7c000000000          mov rax, 0x0                                           [39;49m
[34;49m ..  ) { int fn, fn1, fn2 ; for ( fn = 0, [39;49m[33;40mfn1[39;49m[34;49m = 0, fn2 = 1 ; n ; n -- )  {  fn1 = fn2 ; fn2 = fn ; fn = fn1 + fn2 ;  } return fn ; } [39;49m[32;49m
0x7fbdaabb81ce    498d4f10                lea rcx, [r15+0x10]                                    [39;49m
[34;49m ..  int fn, fn1, fn2 ; for ( fn = 0, fn1 [39;49m[33;40m=[39;49m[34;49m 0, fn2 = 1 ; n ; n -- )  {  fn1 = fn2 ; fn2 = fn ; fn = fn1 + fn2 ;  } return fn ; } [39;49m[32;49m
0x7fbdaabb81d2    488901                  mov [rcx], rax                                         [39;49m
[34;49m .. 1, fn2 ; for ( fn = 0, fn1 = 0, fn2 = [39;49m[33;40m1[39;49m[34;49m ; n ; n -- )  {  fn1 = fn2 ; fn2 = fn ; fn = fn1 + fn2 ;  } return fn ; } [39;49m[32;49m
0x7fbdaabb81d5    48c7c001000000          mov rax, 0x1                                           [39;49m
[34;49m .. fn, fn1, fn2 ; for ( fn = 0, fn1 = 0, [39;49m[33;40mfn2[39;49m[34;49m = 1 ; n ; n -- )  {  fn1 = fn2 ; fn2 = fn ; fn = fn1 + fn2 ;  } return fn ; } [39;49m[32;49m
0x7fbdaabb81dc    498d4f18                lea rcx, [r15+0x18]                                    [39;49m
[34;49m .. fn1, fn2 ; for ( fn = 0, fn1 = 0, fn2 [39;49m[33;40m=[39;49m[34;49m 1 ; n ; n -- )  {  fn1 = fn2 ; fn2 = fn ; fn = fn1 + fn2 ;  } return fn ; } [39;49m[32;49m
0x7fbdaabb81e0    488901                  mov [rcx], rax                                         [39;49m
[34;49m ..  fn2 ; for ( fn = 0, fn1 = 0, fn2 = 1 [39;49m[33;40m;[39;49m[34;49m n ; n -- )  {  fn1 = fn2 ; fn2 = fn ; fn = fn1 + fn2 ;  } return fn ; } [39;49m[32;49m
0x7fbdaabb81e3    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m ..  = fn2 ; fn2 = fn ; fn = fn1 + fn2 ;  [39;49m[33;40m}[39;49m[34;49m return fn ; } [39;49m[32;49m
0x7fbdaabb81e7    4885c0                  test rax, rax                                          [39;49m[32;49m
0x7fbdaabb81ea    0f842e000000            jz 0x7fbdaabb821e          	< C_Syntax.[34;49mfibPTC2?[39;49m+116[32;49m >[39;49m[39;49m
[34;49m .. 1 = 0, fn2 = 1 ; n ; n -- )  {  fn1 = [39;49m[33;40mfn2[39;49m[34;49m ; fn2 = fn ; fn = fn1 + fn2 ;  } return fn ; } [39;49m[32;49m
0x7fbdaabb81f0    498b4718                mov rax, [r15+0x18]                                    [39;49m
[34;49m ..  0, fn1 = 0, fn2 = 1 ; n ; n -- )  {  [39;49m[33;40mfn1[39;49m[34;49m = fn2 ; fn2 = fn ; fn = fn1 + fn2 ;  } return fn ; } [39;49m[32;49m
0x7fbdaabb81f4    498d4f10                lea rcx, [r15+0x10]                                    [39;49m
[34;49m .. fn1 = 0, fn2 = 1 ; n ; n -- )  {  fn1 [39;49m[33;40m=[39;49m[34;49m fn2 ; fn2 = fn ; fn = fn1 + fn2 ;  } return fn ; } [39;49m[32;49m
0x7fbdaabb81f8    488901                  mov [rcx], rax                                         [39;49m
[34;49m ..  1 ; n ; n -- )  {  fn1 = fn2 ; fn2 = [39;49m[33;40mfn[39;49m[34;49m ; fn = fn1 + fn2 ;  } return fn ; } [39;49m[32;49m
0x7fbdaabb81fb    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m ..  fn2 = 1 ; n ; n -- )  {  fn1 = fn2 ; [39;49m[33;40mfn2[39;49m[34;49m = fn ; fn = fn1 + fn2 ;  } return fn ; } [39;49m[32;49m
0x7fbdaabb81ff    498d4f18                lea rcx, [r15+0x18]                                    [39;49m
[34;49m ..  = 1 ; n ; n -- )  {  fn1 = fn2 ; fn2 [39;49m[33;40m=[39;49m[34;49m fn ; fn = fn1 + fn2 ;  } return fn ; } [39;49m[32;49m
0x7fbdaabb8203    488901                  mov [rcx], rax                                         [39;49m
[34;49m ..  -- )  {  fn1 = fn2 ; fn2 = fn ; fn = [39;49m[33;40mfn1[39;49m[34;49m + fn2 ;  } return fn ; } [39;49m[32;49m
0x7fbdaabb8206    498b4710                mov rax, [r15+0x10]                                    [39;49m
[34;49m ..  {  fn1 = fn2 ; fn2 = fn ; fn = fn1 + [39;49m[33;40mfn2[39;49m[34;49m ;  } return fn ; } [39;49m[32;49m
0x7fbdaabb820a    498b4f18                mov rcx, [r15+0x18]                                    [39;49m
[34;49m .. )  {  fn1 = fn2 ; fn2 = fn ; fn = fn1 [39;49m[33;40m+[39;49m[34;49m fn2 ;  } return fn ; } [39;49m[32;49m
0x7fbdaabb820e    4803c1                  add rax, rcx                                           [39;49m
[34;49m .. n ; n -- )  {  fn1 = fn2 ; fn2 = fn ; [39;49m[33;40mfn[39;49m[34;49m = fn1 + fn2 ;  } return fn ; } [39;49m[32;49m
0x7fbdaabb8211    498d4f08                lea rcx, [r15+0x8]                                     [39;49m
[34;49m ..  n -- )  {  fn1 = fn2 ; fn2 = fn ; fn [39;49m[33;40m=[39;49m[34;49m fn1 + fn2 ;  } return fn ; } [39;49m[32;49m
0x7fbdaabb8215    488901                  mov [rcx], rax                                         [39;49m
[34;49m .. or ( fn = 0, fn1 = 0, fn2 = 1 ; n ; n [39;49m[33;40m--[39;49m[34;49m )  {  fn1 = fn2 ; fn2 = fn ; fn = fn1 + fn2 ;  } return fn ; } [39;49m[32;49m
0x7fbdaabb8218    49ff4ff8                dec qword [r15-0x8]                                    [39;49m
[34;49m .. ( fn = 0, fn1 = 0, fn2 = 1 ; n ; n -- [39;49m[33;40m)[39;49m[34;49m  {  fn1 = fn2 ; fn2 = fn ; fn = fn1 + fn2 ;  } return fn ; } [39;49m[32;49m
0x7fbdaabb821c    ebc5                    jmp 0x7fbdaabb81e3         	< C_Syntax.[34;49mfibPTC2?[39;49m+57[32;49m >[39;49m[39;49m[32;49m
0x7fbdaabb821e    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m ..  fn ; fn = fn1 + fn2 ;  } return fn ; [39;49m[33;40m}[39;49m[34;49m [39;49m[32;49m
0x7fbdaabb8222    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaabb8226    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m
[34;49m .. fn2 = fn ; fn = fn1 + fn2 ;  } return [39;49m[33;40mfn[39;49m[34;49m ; } [39;49m[32;49m
0x7fbdaabb822a    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaabb822d    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'fibPTC2?' :: codeSize = 131
Word : 0x00007fbda808ebf8 :: Compiled at : 0x00007fbdaabb81aa
 =============================
::> 'wdiss' was called at namespaces/test/dev0.csl 192.22 <::
 6765 9.0000000000000000  : should be 9
 
fib 200.0000000000000000 = 280594712998212601106502055196939618615296.0000000000000000

 locals fibBN :  1.0000000000000000 :  1.0000000000000000, 2.0000000000000000 :  1.0000000000000000, 3.0000000000000000 :  2.0000000000000000, 4.0000000000000000 :  3.0000000000000000, 5.0000000000000000 :  5.0000000000000000, 6.0000000000000000 :  8.0000000000000000, 7.0000000000000000 :  13.0000000000000000, 8.0000000000000000 :  21.0000000000000000, 9.0000000000000000 :  34.0000000000000000, 10.0000000000000000 :  55.0000000000000000, 11.0000000000000000 :  89.0000000000000000, 12.0000000000000000 :  144.0000000000000000, 13.0000000000000000 :  233.0000000000000000, 14.0000000000000000 :  377.0000000000000000, 15.0000000000000000 :  610.0000000000000000, 16.0000000000000000 :  987.0000000000000000, 17.0000000000000000 :  1597.0000000000000000, 18.0000000000000000 :  2584.0000000000000000, 19.0000000000000000 :  4181.0000000000000000, 20.0000000000000000 :  6765.0000000000000000, 21.0000000000000000 :  10946.0000000000000000, 22.0000000000000000 :  17711.0000000000000000, 23.0000000000000000 :  28657.0000000000000000, 24.0000000000000000 :  46368.0000000000000000, 25.0000000000000000 :  75024.0000000000000000, 26.0000000000000000 :  121392.0000000000000000, 27.0000000000000000 :  196416.0000000000000000, 28.0000000000000000 :  317808.0000000000000000, 29.0000000000000000 :  514224.0000000000000000, 30.0000000000000000 :  832032.0000000000000000, 31.0000000000000000 :  1346240.0000000000000000, 32.0000000000000000 :  2178304.0000000000000000, 33.0000000000000000 :  3524544.0000000000000000, 34.0000000000000000 :  5702912.0000000000000000, 35.0000000000000000 :  9227520.0000000000000000, 36.0000000000000000 :  14930432.0000000000000000, 37.0000000000000000 :  24158208.0000000000000000, 38.0000000000000000 :  39088128.0000000000000000, 39.0000000000000000 :  63246336.0000000000000000, 40.0000000000000000 :  102334464.0000000000000000, 41.0000000000000000 :  165580800.0000000000000000, 42.0000000000000000 :  267915264.0000000000000000, 43.0000000000000000 :  433496064.0000000000000000, 44.0000000000000000 :  701415424.0000000000000000, 45.0000000000000000 :  1134919680.0000000000000000, 46.0000000000000000 :  1836318720.0000000000000000, 47.0000000000000000 :  2971271168.0000000000000000, 48.0000000000000000 :  4807589888.0000000000000000, 49.0000000000000000 :  7778861056.0000000000000000, 50.0000000000000000 :  12586582016.0000000000000000, 51.0000000000000000 :  20365443072.0000000000000000, 52.0000000000000000 :  32952025088.0000000000000000, 53.0000000000000000 :  53317992448.0000000000000000, 54.0000000000000000 :  86270541824.0000000000000000, 55.0000000000000000 :  139586437120.0000000000000000, 56.0000000000000000 :  225854881792.0000000000000000, 57.0000000000000000 :  365441318912.0000000000000000, 58.0000000000000000 :  591296200704.0000000000000000, 59.0000000000000000 :  956737519616.0000000000000000, 60.0000000000000000 :  1548033720320.0000000000000000, 61.0000000000000000 :  2504771239936.0000000000000000, 62.0000000000000000 :  4052838514688.0000000000000000, 63.0000000000000000 :  6557609754624.0000000000000000, 64.0000000000000000 :  10610448269312.0000000000000000, 65.0000000000000000 :  17168058023936.0000000000000000, 66.0000000000000000 :  27778774728704.0000000000000000, 67.0000000000000000 :  44946832752640.0000000000000000, 68.0000000000000000 :  72726681223168.0000000000000000, 69.0000000000000000 :  117673513975808.0000000000000000, 70.0000000000000000 :  190400195198976.0000000000000000, 71.0000000000000000 :  308069414207488.0000000000000000, 72.0000000000000000 :  498473904373760.0000000000000000, 73.0000000000000000 :  806543318581248.0000000000000000, 74.0000000000000000 :  1305017222955008.0000000000000000, 75.0000000000000000 :  2111543361667072.0000000000000000, 76.0000000000000000 :  3416594944360448.0000000000000000, 77.0000000000000000 :  5528069586550784.0000000000000000, 78.0000000000000000 :  8944664530911232.0000000000000000, 79.0000000000000000 :  14472871556415488.0000000000000000, 80.0000000000000000 :  23417398648373248.0000000000000000, 81.0000000000000000 :  37890270204788736.0000000000000000, 82.0000000000000000 :  61307668853161984.0000000000000000, 83.0000000000000000 :  99197939057950720.0000000000000000, 84.0000000000000000 :  160506707422740480.0000000000000000, 85.0000000000000000 :  259704646480691200.0000000000000000, 86.0000000000000000 :  420206955856920576.0000000000000000, 87.0000000000000000 :  679902806244589568.0000000000000000, 88.0000000000000000 :  1100109762101510144.0000000000000000, 89.0000000000000000 :  1780012568346099712.0000000000000000, 90.0000000000000000 :  2880122330447609856.0000000000000000, 91.0000000000000000 :  4660099714421620736.0000000000000000, 92.0000000000000000 :  7540151676125052928.0000000000000000

 locals fibBN :  1.0000000000000000 :  1.0000000000000000, 2.0000000000000000 :  1.0000000000000000, 3.0000000000000000 :  2.0000000000000000, 4.0000000000000000 :  3.0000000000000000, 5.0000000000000000 :  5.0000000000000000, 6.0000000000000000 :  8.0000000000000000, 7.0000000000000000 :  13.0000000000000000, 8.0000000000000000 :  21.0000000000000000, 9.0000000000000000 :  34.0000000000000000, 10.0000000000000000 :  55.0000000000000000, 11.0000000000000000 :  89.0000000000000000, 12.0000000000000000 :  144.0000000000000000, 13.0000000000000000 :  233.0000000000000000, 14.0000000000000000 :  377.0000000000000000, 15.0000000000000000 :  610.0000000000000000, 16.0000000000000000 :  987.0000000000000000, 17.0000000000000000 :  1597.0000000000000000, 18.0000000000000000 :  2584.0000000000000000, 19.0000000000000000 :  4181.0000000000000000, 20.0000000000000000 :  6765.0000000000000000, 21.0000000000000000 :  10946.0000000000000000, 22.0000000000000000 :  17711.0000000000000000, 23.0000000000000000 :  28657.0000000000000000, 24.0000000000000000 :  46368.0000000000000000, 25.0000000000000000 :  75024.0000000000000000, 26.0000000000000000 :  121392.0000000000000000, 27.0000000000000000 :  196416.0000000000000000, 28.0000000000000000 :  317808.0000000000000000, 29.0000000000000000 :  514224.0000000000000000, 30.0000000000000000 :  832032.0000000000000000, 31.0000000000000000 :  1346240.0000000000000000, 32.0000000000000000 :  2178304.0000000000000000, 33.0000000000000000 :  3524544.0000000000000000, 34.0000000000000000 :  5702912.0000000000000000, 35.0000000000000000 :  9227520.0000000000000000, 36.0000000000000000 :  14930432.0000000000000000, 37.0000000000000000 :  24158208.0000000000000000, 38.0000000000000000 :  39088128.0000000000000000, 39.0000000000000000 :  63246336.0000000000000000, 40.0000000000000000 :  102334464.0000000000000000, 41.0000000000000000 :  165580800.0000000000000000, 42.0000000000000000 :  267915264.0000000000000000, 43.0000000000000000 :  433496064.0000000000000000, 44.0000000000000000 :  701415424.0000000000000000, 45.0000000000000000 :  1134919680.0000000000000000, 46.0000000000000000 :  1836318720.0000000000000000, 47.0000000000000000 :  2971271168.0000000000000000, 48.0000000000000000 :  4807589888.0000000000000000, 49.0000000000000000 :  7778861056.0000000000000000, 50.0000000000000000 :  12586582016.0000000000000000, 51.0000000000000000 :  20365443072.0000000000000000, 52.0000000000000000 :  32952025088.0000000000000000, 53.0000000000000000 :  53317992448.0000000000000000, 54.0000000000000000 :  86270541824.0000000000000000, 55.0000000000000000 :  139586437120.0000000000000000, 56.0000000000000000 :  225854881792.0000000000000000, 57.0000000000000000 :  365441318912.0000000000000000, 58.0000000000000000 :  591296200704.0000000000000000, 59.0000000000000000 :  956737519616.0000000000000000, 60.0000000000000000 :  1548033720320.0000000000000000, 61.0000000000000000 :  2504771239936.0000000000000000, 62.0000000000000000 :  4052838514688.0000000000000000, 63.0000000000000000 :  6557609754624.0000000000000000, 64.0000000000000000 :  10610448269312.0000000000000000, 65.0000000000000000 :  17168058023936.0000000000000000, 66.0000000000000000 :  27778774728704.0000000000000000, 67.0000000000000000 :  44946832752640.0000000000000000, 68.0000000000000000 :  72726681223168.0000000000000000, 69.0000000000000000 :  117673513975808.0000000000000000, 70.0000000000000000 :  190400195198976.0000000000000000, 71.0000000000000000 :  308069414207488.0000000000000000, 72.0000000000000000 :  498473904373760.0000000000000000, 73.0000000000000000 :  806543318581248.0000000000000000, 74.0000000000000000 :  1305017222955008.0000000000000000, 75.0000000000000000 :  2111543361667072.0000000000000000, 76.0000000000000000 :  3416594944360448.0000000000000000, 77.0000000000000000 :  5528069586550784.0000000000000000, 78.0000000000000000 :  8944664530911232.0000000000000000, 79.0000000000000000 :  14472871556415488.0000000000000000, 80.0000000000000000 :  23417398648373248.0000000000000000, 81.0000000000000000 :  37890270204788736.0000000000000000, 82.0000000000000000 :  61307668853161984.0000000000000000, 83.0000000000000000 :  99197939057950720.0000000000000000, 84.0000000000000000 :  160506707422740480.0000000000000000, 85.0000000000000000 :  259704646480691200.0000000000000000, 86.0000000000000000 :  420206955856920576.0000000000000000, 87.0000000000000000 :  679902806244589568.0000000000000000, 88.0000000000000000 :  1100109762101510144.0000000000000000, 89.0000000000000000 :  1780012568346099712.0000000000000000, 90.0000000000000000 :  2880122330447609856.0000000000000000, 91.0000000000000000 :  4660099714421620736.0000000000000000, 92.0000000000000000 :  7540151676125052928.0000000000000000[39;49m fibc2
[39;49m 6765
[39;49m fibbc
[39;49m 6765
[39;49m x7

[39;49m ( 1 2 3 x7 )

[39;49m ( 1 2 3 ( 7 8 9 45 ) )

[39;49m ( 1 2 3 ( 7 8 9 45 ) )

[39;49m ( 1 2 3 7 8 9 45 )

[39;49m ( 1 2 3 7 8 9 45 )

[39;49m 77
[39;49m 77
[39;49m 77
[39;49m alist
[39;49m ( 1 2 3 7 8 9 45 )
[39;49m yfac
[39;49m3628800.0000000000000000

[39;49m yfacc
[39;49m3628800.0000000000000000

[39;49m2432928961198555136.0000000000000000

[39;49m yfac
[39;49m3628800.0000000000000000

[39;49m yfacc
[39;49m3628800.0000000000000000

[39;49m2432928961198555136.0000000000000000

[39;49m yfac
[39;49m2432928961198555136.0000000000000000

[39;49m yfacc
[39;49m3628800.0000000000000000

[39;49m5040.0000000000000000

[39;49m yfac
[39;49m2432928961198555136.0000000000000000

[39;49m yfacc
[39;49m3628800.0000000000000000

[39;49m5040.0000000000000000

[39;49m yfac

 =============================
LispDefines.[34;49myfac[39;49m <:> variable[34;49myfac[39;49m <:> lambdaCalculus defined word
SourceCode for LispDefines.[34;49myfac[39;49m :> 
[34;49m(define yfac (lambda (yy n) (if* (< n 2) 1 (* n (yy yy (- n 1))))))[39;49m
Source code file location of [34;49myfac[39;49m : "namespaces/test/dev0.csl" : 285.66 :: we are now at : namespaces/test/dev0.csl : 286.21
Lambda Calculus word : interpreted not compiled
 -----------------------------
Word :: LispDefines.[34;49myfac[39;49m : definition = 0x0000000000000000 : disassembly at namespaces/test/dev0.csl : 286.21 :
Word : 0x00007fbda7e1b298 :: Compiled at : 0x0000000000000000
 =============================
::> 'wdiss' was called at namespaces/test/dev0.csl 286.21 <::
[39;49m 2432902008176640000

[39;49m yfacc
[39;49m 3628800

[39;49m 5040

[39;49m yfac
[39;49m 2432902008176640000

[39;49m yfacc
[39;49m 3628800

[39;49m 5040

[39;49m x
[39;49m a
[39;49m x1
[39;49m a1
[39;49m ( Its a beautiful day don't let it get away )
[39;49m ( Its a beautiful day don't let it get away )
[39;49m ( Its a beautiful day don't x1 it get away )
[39;49m ( Its a beautiful day don't let it get away )
[39;49m ( Its a beautiful day don't x it get away )
[39;49m ( Its a beautiful day don't x1 it get away )
[39;49m ( Its a beautiful day don't "let" it get away )
[39;49m ( Its a beautiful day don't let it get away )
[39;49m ff
[39;49m 7
[39;49m 7
[39;49m 7
[39;49m h36
[39;49m ( n09 my6 n09 my6 n09 n09 my6 my6 )
 
 should show : ( n09 my6 n09 my6 n09 n09 my6 my6 )
[39;49m n09
[39;49m my6
[39;49m ( kl0 op9 kl0 op9 kl0 kl0 op9 op9 )
 
 should show : ( kl0 op9 kl0 op9 kl0 kl0 op9 op9 )
[39;49m id
[39;49m ( "the" "the" b b )
[39;49m id1
[39;49m ( 7 7 11 11 7 7 )
[39;49m swch
[39;49m ( 11 7 )
[39;49m swch2
[39;49m ( ( 7 11 ) ( 7 11 ) )
[39;49m id2
[39;49m ( ( ( 11 7 ) ( 11 7 ) ) ( ( 11 7 ) ( 11 7 ) ) )
[39;49m id3
[39;49m ( 7 7 11 7 11 11 7 7 )
[39;49m swch3
[39;49m id4
[39;49m ( 7 7 ( ( ( 11 7 ) ( 11 7 ) ) ( ( 11 7 ) ( 11 7 ) ) ) 11 11 7 7 )
[39;49m x
[39;49m ( ( 3 4 ) ( 3 4 ) )
[39;49m x
[39;49m 7
[39;49m x
[39;49m 11
[39;49m 7
[39;49m 7
[39;49m 7
[39;49m 7
 7 ( ( lambda ( a b ) ( + a b ) ) 3 4 )
DataStack at : [34;49mnamespaces/test/dev0.csl : 353.67[39;49m :
DataStack depth =   3 : Dsp (R14) = Top = 0x00007fbdab0efa58, InitialTos = 0x00007fbdab0efa40, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fbdab0efa58 > = 0x0000000000000005	
  DataStack   [  -1 ] < 0x00007fbdab0efa50 > = 0x0000000000000005	
  DataStack   [  -2 ] < 0x00007fbdab0efa48 > = 0x0000000000000005	

 =============================
Root.[34;49mbexp3[39;49m <:> csl compiled word
SourceCode for Root.[34;49mbexp3[39;49m :> 
[34;49m: bexp3 ( n ) { n @ 1 > } { n @ n @ -- bexp3 * } { 1 } ifElse ; [39;49m
Source code file location of [34;49mbexp3[39;49m : "namespaces/test/dev0.csl" : 354.2 :: we are now at : namespaces/test/dev0.csl : 355.18
Compiled with : optimizeOn, inlineOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xaabb8715 -- code size = 112 bytes
TypeSignature : 
 -----------------------------
Word :: Root.[34;49mbexp3[39;49m : definition = 0x00007fbdaabb8715 : disassembly at namespaces/test/dev0.csl : 355.18 :
[34;49m ..                                     : [39;49m[33;40mbexp3[39;49m[34;49m ( n ) { n @ 1 > } { n @ n @ -- bexp3 * } { 1 } ifElse ;  .. [39;49m[32;49m
0x7fbdaabb8715    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fbdaabb8719    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaabb871d    4981c608000000          add r14, 0x8                                           [39;49m
[34;49m ..                       : bexp3 ( n ) { [39;49m[33;40mn[39;49m[34;49m @ 1 > } { n @ n @ -- bexp3 * } { 1 } ifElse ;  .. [39;49m[32;49m
0x7fbdaabb8724    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m ..                 : bexp3 ( n ) { n @ 1 [39;49m[33;40m>[39;49m[34;49m } { n @ n @ -- bexp3 * } { 1 } ifElse ;  .. [39;49m[32;49m
0x7fbdaabb8728    4883f801                cmp rax, 0x1                                           [39;49m[32;49m
0x7fbdaabb872c    0f8e39000000            jle 0x7fbdaabb876b         	< Root.[34;49mbexp3[39;49m+86[32;49m >[39;49m[39;49m
[34;49m ..           : bexp3 ( n ) { n @ 1 > } { [39;49m[33;40mn[39;49m[34;49m @ n @ -- bexp3 * } { 1 } ifElse ;  .. [39;49m[32;49m
0x7fbdaabb8732    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaabb8736    4983c608                add r14, 0x8                                           [39;49m
[34;49m ..               : bexp3 ( n ) { n @ 1 > [39;49m[33;40m}[39;49m[34;49m { n @ n @ -- bexp3 * } { 1 } ifElse ;  .. [39;49m[32;49m
0x7fbdaabb873a    498906                  mov [r14], rax                                         [39;49m
[34;49m ..       : bexp3 ( n ) { n @ 1 > } { n @ [39;49m[33;40mn[39;49m[34;49m @ -- bexp3 * } { 1 } ifElse ;  .. [39;49m[32;49m
0x7fbdaabb873d    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m ..   : bexp3 ( n ) { n @ 1 > } { n @ n @ [39;49m[33;40m--[39;49m[34;49m bexp3 * } { 1 } ifElse ;  .. [39;49m[32;49m
0x7fbdaabb8741    48ffc8                  dec rax                                                [39;49m[32;49m
0x7fbdaabb8744    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb8748    498906                  mov [r14], rax                                         [39;49m
[34;49m   : bexp3 ( n ) { n @ 1 > } { n @ n @ -- [39;49m[33;40mbexp3[39;49m[34;49m * } { 1 } ifElse ;  .. [39;49m[32;49m
0x7fbdaabb874b    e8c5ffffff              call 0x7fbdaabb8715        	< Root.[34;49mbexp3[39;49m : 0x00007fbdaabb8715[32;49m >[39;49m[39;49m[32;49m
0x7fbdaabb8750    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fbdaabb8753    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fbdaabb8757    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m ..  ( n ) { n @ 1 > } { n @ n @ -- bexp3 [39;49m[33;40m*[39;49m[34;49m } { 1 } ifElse ; [39;49m[32;49m
0x7fbdaabb875b    480fafc1                imul rax, rcx                                          [39;49m[32;49m
0x7fbdaabb875f    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb8763    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  n ) { n @ 1 > } { n @ n @ -- bexp3 * [39;49m[33;40m}[39;49m[34;49m { 1 } ifElse ; [39;49m[32;49m
0x7fbdaabb8766    e90e000000              jmp 0x7fbdaabb8779         	< Root.[34;49mbexp3[39;49m+100[32;49m >[39;49m[39;49m
[34;49m ..  { n @ 1 > } { n @ n @ -- bexp3 * } { [39;49m[33;40m1[39;49m[34;49m } ifElse ; [39;49m[32;49m
0x7fbdaabb876b    48c7c001000000          mov rax, 0x1                                           [39;49m[32;49m
0x7fbdaabb8772    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb8776    498906                  mov [r14], rax                                         [39;49m
[34;49m .. } { n @ n @ -- bexp3 * } { 1 } ifElse [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fbdaabb8779    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaabb877d    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaabb8781    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaabb8784    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'bexp3' :: codeSize = 111
Word : 0x00007fbda80ab890 :: Compiled at : 0x00007fbdaabb8715
 =============================
::> 'wdiss' was called at namespaces/test/dev0.csl 355.18 <::
 5040
 =============================
C_Syntax.[34;49mfac5[39;49m <:> csl compiled word, prefix
SourceCode for C_Syntax.[34;49mfac5[39;49m :> 
[34;49mint fac5 ( REG n | REG facc ) { facc = 1 ; while ( n > 1 ) { facc = facc * (n --) ; } return facc ; } [39;49m
Source code file location of [34;49mfac5[39;49m : "namespaces/test/dev0.csl" : 358.5 :: we are now at : namespaces/test/dev0.csl : 371.21
Compiled with : optimizeOn, inlineOn, c_syntaxOn, infixOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xaabb8799 -- code size = 33 bytes
TypeSignature : 
 -----------------------------
Word :: C_Syntax.[34;49mfac5[39;49m : definition = 0x00007fbdaabb8799 : disassembly at namespaces/test/dev0.csl : 371.21 :
[34;49m ..                                   int [39;49m[33;40mfac5[39;49m[34;49m ( REG n | REG facc )  {  facc = 1 ; while ( n > 1 )  { facc = facc * (n --) ; } return facc ; }  .. [39;49m[32;49m
0x7fbdaabb8799    498b3e                  mov rdi, [r14]                                         [39;49m
[34;49m int fac5 ( REG n | REG facc )  {  facc = [39;49m[33;40m1[39;49m[34;49m ; while ( n > 1 )  { facc = facc * (n --) ; } return facc ; }  .. [39;49m[32;49m
0x7fbdaabb879c    48c7c601000000          mov rsi, 0x1                                           [39;49m
[34;49m .. | REG facc )  {  facc = 1 ; while ( n [39;49m[33;40m>[39;49m[34;49m 1 )  { facc = facc * (n --) ; } return facc ; } [39;49m[32;49m
0x7fbdaabb87a3    4883ff01                cmp rdi, 0x1                                           [39;49m[32;49m
0x7fbdaabb87a7    0f8e09000000            jle 0x7fbdaabb87b6         	< C_Syntax.[34;49mfac5[39;49m+29[32;49m >[39;49m[39;49m
[34;49m ..  = 1 ; while ( n > 1 )  { facc = facc [39;49m[33;40m*[39;49m[34;49m (n --) ; } return facc ; } [39;49m[32;49m
0x7fbdaabb87ad    480faff7                imul rsi, rdi                                          [39;49m
[34;49m .. ; while ( n > 1 )  { facc = facc * (n [39;49m[33;40m--[39;49m[34;49m) ; } return facc ; } [39;49m[32;49m
0x7fbdaabb87b1    48ffcf                  dec rdi                                                [39;49m
[34;49m   int fac5 ( REG n | REG facc )  {  facc [39;49m[33;40mstore[39;49m[34;49m while ( n > 1 )  { facc = facc * (n --) ; } return facc ; }  .. [39;49m[32;49m
0x7fbdaabb87b4    ebed                    jmp 0x7fbdaabb87a3         	< C_Syntax.[34;49mfac5[39;49m+10[32;49m >[39;49m[39;49m
[34;49m ..  )  { facc = facc * (n --) ; } return [39;49m[33;40mfacc[39;49m[34;49m ; } [39;49m[32;49m
0x7fbdaabb87b6    498936                  mov [r14], rsi                                         [39;49m[32;49m
0x7fbdaabb87b9    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'fac5' :: codeSize = 32
Word : 0x00007fbda80ad9a8 :: Compiled at : 0x00007fbdaabb8799
 =============================
::> 'wdiss' was called at namespaces/test/dev0.csl 371.21 <::
 5040
 =============================
C_Syntax.[34;49mcpow[39;49m <:> csl compiled word
SourceCode for C_Syntax.[34;49mcpow[39;49m :> 
[34;49mint cpow ( base power | out ) { for ( out = 1 ; power ; (power -= 1) ) { out *= base ; } return out ; } [39;49m
Source code file location of [34;49mcpow[39;49m : "namespaces/test/dev0.csl" : 378.9 :: we are now at : namespaces/test/dev0.csl : 379.17
Compiled with : optimizeOn, inlineOn, c_syntaxOn, infixOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xaabb87bf -- code size = 104 bytes
TypeSignature : 
 -----------------------------
Word :: C_Syntax.[34;49mcpow[39;49m : definition = 0x00007fbdaabb87bf : disassembly at namespaces/test/dev0.csl : 379.17 :
[34;49m ..                                   int [39;49m[33;40mcpow[39;49m[34;49m ( base power | out ) { for ( out = 1 ; power ; (power -= 1) ) { out *= base ; } return out ; }  .. [39;49m[32;49m
0x7fbdaabb87bf    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fbdaabb87c3    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaabb87c7    4981c610000000          add r14, 0x10                                          [39;49m
[34;49m .. ow ( base power | out ) { for ( out = [39;49m[33;40m1[39;49m[34;49m ; power ; (power -= 1) ) { out *= base ; } return out ; } [39;49m[32;49m
0x7fbdaabb87ce    48c7c001000000          mov rax, 0x1                                           [39;49m
[34;49m .. int cpow ( base power | out ) { for ( [39;49m[33;40mout[39;49m[34;49m = 1 ; power ; (power -= 1) ) { out *= base ; } return out ; }  .. [39;49m[32;49m
0x7fbdaabb87d5    498d4f08                lea rcx, [r15+0x8]                                     [39;49m
[34;49mint cpow ( base power | out ) { for ( out [39;49m[33;40m=[39;49m[34;49m 1 ; power ; (power -= 1) ) { out *= base ; } return out ; }  .. [39;49m[32;49m
0x7fbdaabb87d9    488901                  mov [rcx], rax                                         [39;49m
[34;49m ..  ( base power | out ) { for ( out = 1 [39;49m[33;40m;[39;49m[34;49m power ; (power -= 1) ) { out *= base ; } return out ; } [39;49m[32;49m
0x7fbdaabb87dc    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. ower ; (power -= 1) ) { out *= base ; [39;49m[33;40m}[39;49m[34;49m return out ; } [39;49m[32;49m
0x7fbdaabb87e0    4885c0                  test rax, rax                                          [39;49m[32;49m
0x7fbdaabb87e3    0f842a000000            jz 0x7fbdaabb8813          	< C_Syntax.[34;49mcpow[39;49m+84[32;49m >[39;49m[39;49m[32;49m
0x7fbdaabb87e9    498d5f08                lea rbx, [r15+0x8]                                     [39;49m
[34;49m ..  ( out = 1 ; power ; (power -= 1) ) { [39;49m[33;40mout[39;49m[34;49m *= base ; } return out ; } [39;49m[32;49m
0x7fbdaabb87ed    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m .. = 1 ; power ; (power -= 1) ) { out *= [39;49m[33;40mbase[39;49m[34;49m ; } return out ; } [39;49m[32;49m
0x7fbdaabb87f1    498b4ff0                mov rcx, [r15-0x10]                                    [39;49m[32;49m
0x7fbdaabb87f5    480fafc1                imul rax, rcx                                          [39;49m
[34;49m .. ut = 1 ; power ; (power -= 1) ) { out [39;49m[33;40m*=[39;49m[34;49m base ; } return out ; } [39;49m[32;49m
0x7fbdaabb87f9    488903                  mov [rbx], rax                                         [39;49m[32;49m
0x7fbdaabb87fc    498d5ff8                lea rbx, [r15-0x8]                                     [39;49m
[34;49m .. er | out ) { for ( out = 1 ; power ; ([39;49m[33;40mpower[39;49m[34;49m -= 1) ) { out *= base ; } return out ; } [39;49m[32;49m
0x7fbdaabb8800    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. ) { for ( out = 1 ; power ; (power -= [39;49m[33;40m1[39;49m[34;49m) ) { out *= base ; } return out ; } [39;49m[32;49m
0x7fbdaabb8804    48c7c101000000          mov rcx, 0x1                                           [39;49m[32;49m
0x7fbdaabb880b    482bc1                  sub rax, rcx                                           [39;49m
[34;49m .. ut ) { for ( out = 1 ; power ; (power [39;49m[33;40m-=[39;49m[34;49m 1) ) { out *= base ; } return out ; } [39;49m[32;49m
0x7fbdaabb880e    488903                  mov [rbx], rax                                         [39;49m
[34;49m ..  for ( out = 1 ; power ; (power -= 1) [39;49m[33;40m)[39;49m[34;49m { out *= base ; } return out ; } [39;49m[32;49m
0x7fbdaabb8811    ebc9                    jmp 0x7fbdaabb87dc         	< C_Syntax.[34;49mcpow[39;49m+29[32;49m >[39;49m[39;49m[32;49m
0x7fbdaabb8813    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m .. = 1) ) { out *= base ; } return out ; [39;49m[33;40m}[39;49m[34;49m [39;49m[32;49m
0x7fbdaabb8817    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaabb881b    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaabb881f    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m .. ower -= 1) ) { out *= base ; } return [39;49m[33;40mout[39;49m[34;49m ; } [39;49m[32;49m
0x7fbdaabb8823    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaabb8826    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'cpow' :: codeSize = 103
Word : 0x00007fbda80b0bf0 :: Compiled at : 0x00007fbdaabb87bf
 =============================
::> 'wdiss' was called at namespaces/test/dev0.csl 379.17 <::
 2 ^ 30 :  1073741824 1073741824 1073741824[39;49m yfac
 
yfac : 50 factorial = [39;49m30412909425645649954907174559648843415335213860333137200913842176.0000000000000000
[39;49m yfacc
[39;49m 3628800

[39;49m 5040

[39;49m yfac
[39;49m2432928961198555136.0000000000000000
[39;49m yfacc
[39;49m 3628800

[39;49m 5040

[39;49m fib
[39;49m fib2
[39;49m 6765
[39;49m 6765
[39;49m x
[39;49m a
[39;49m x1
[39;49m a1
[39;49m ( Its a beautiful day don't let it get away )
[39;49m ( Its "the" beautiful day don't "let" it get away )
[39;49m ( Its a beautiful day don't let it get away )
[39;49m ( Its a beautiful day don't x1 it get away )
[39;49m ( Its a beautiful day don't let it get away )
[39;49m ( Its a beautiful day don't x it get away )
 testing unquote above line should show : ( Its a beautiful day don't x it get away )
[39;49m ( Its a beautiful day don't x1 it get away )
 testing unquote above line should show : ( Its a beautiful day don't x1 it get away )
[39;49m ( Its "the" beautiful day don't "let" it get away )
[39;49m ( Its a beautiful day don't let it get away )

 =============================
Root.[34;49mfib01[39;49m <:> csl compiled word
SourceCode for Root.[34;49mfib01[39;49m :> 
[34;49m: fib01 ( n | fn fn1 fn2 ) { fn 0 = fn1 0 = fn2 1 = } { n @ 0 > } { n 1 -= } { fn1 fn2 @ = fn2 fn @ = fn fn1 @ fn2 @ + = } for return fn @ ; [39;49m
Source code file location of [34;49mfib01[39;49m : "namespaces/test/dev0.csl" : 434.2 :: we are now at : namespaces/test/dev0.csl : 445.10
Compiled with : optimizeOn, inlineOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xaabb8a49 -- code size = 167 bytes
TypeSignature : 
 -----------------------------
Word :: Root.[34;49mfib01[39;49m : definition = 0x00007fbdaabb8a49 : disassembly at namespaces/test/dev0.csl : 445.10 :
[34;49m ..                                     : [39;49m[33;40mfib01[39;49m[34;49m ( n | fn fn1 fn2 )  { fn 0 = fn1 0 = fn2 1 = } { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ .. [39;49m[32;49m
0x7fbdaabb8a49    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fbdaabb8a4d    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaabb8a51    4981c620000000          add r14, 0x20                                          [39;49m
[34;49m ..         : fib01 ( n | fn fn1 fn2 )  { [39;49m[33;40mfn[39;49m[34;49m 0 = fn1 0 = fn2 1 = } { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } fo .. [39;49m[32;49m
0x7fbdaabb8a58    498d4708                lea rax, [r15+0x8]                                     [39;49m
[34;49m ..      : fib01 ( n | fn fn1 fn2 )  { fn [39;49m[33;40m0[39;49m[34;49m = fn1 0 = fn2 1 = } { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for r .. [39;49m[32;49m
0x7fbdaabb8a5c    48c7c100000000          mov rcx, 0x0                                           [39;49m
[34;49m ..    : fib01 ( n | fn fn1 fn2 )  { fn 0 [39;49m[33;40m=[39;49m[34;49m fn1 0 = fn2 1 = } { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for ret .. [39;49m[32;49m
0x7fbdaabb8a63    488908                  mov [rax], rcx                                         [39;49m
[34;49m ..  : fib01 ( n | fn fn1 fn2 )  { fn 0 = [39;49m[33;40mfn1[39;49m[34;49m 0 = fn2 1 = } { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for retur .. [39;49m[32;49m
0x7fbdaabb8a66    498d4710                lea rax, [r15+0x10]                                    [39;49m
[34;49m : fib01 ( n | fn fn1 fn2 )  { fn 0 = fn1 [39;49m[33;40m0[39;49m[34;49m = fn2 1 = } { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn .. [39;49m[32;49m
0x7fbdaabb8a6a    48c7c100000000          mov rcx, 0x0                                           [39;49m
[34;49m .. 01 ( n | fn fn1 fn2 )  { fn 0 = fn1 0 [39;49m[33;40m=[39;49m[34;49m fn2 1 = } { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fbdaabb8a71    488908                  mov [rax], rcx                                         [39;49m
[34;49m ..  ( n | fn fn1 fn2 )  { fn 0 = fn1 0 = [39;49m[33;40mfn2[39;49m[34;49m 1 = } { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fbdaabb8a74    498d4718                lea rax, [r15+0x18]                                    [39;49m
[34;49m ..  | fn fn1 fn2 )  { fn 0 = fn1 0 = fn2 [39;49m[33;40m1[39;49m[34;49m = } { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fbdaabb8a78    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m ..  fn fn1 fn2 )  { fn 0 = fn1 0 = fn2 1 [39;49m[33;40m=[39;49m[34;49m } { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fbdaabb8a7f    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. 1 fn2 )  { fn 0 = fn1 0 = fn2 1 = } { [39;49m[33;40mn[39;49m[34;49m @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fbdaabb8a82    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. )  { fn 0 = fn1 0 = fn2 1 = } { n @ 0 [39;49m[33;40m>[39;49m[34;49m } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fbdaabb8a86    4883f800                cmp rax, 0x0                                           [39;49m[32;49m
0x7fbdaabb8a8a    0f8e50000000            jle 0x7fbdaabb8ae0         	< Root.[34;49mfib01[39;49m+151[32;49m >[39;49m[39;49m
[34;49m ..  fn2 1 = } { n @ 0 > } { n 1 -= }  {  [39;49m[33;40mfn1[39;49m[34;49m fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fbdaabb8a90    498d4710                lea rax, [r15+0x10]                                    [39;49m
[34;49m ..  1 = } { n @ 0 > } { n 1 -= }  {  fn1 [39;49m[33;40mfn2[39;49m[34;49m @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fbdaabb8a94    498b4f18                mov rcx, [r15+0x18]                                    [39;49m
[34;49m ..  { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ [39;49m[33;40m=[39;49m[34;49m  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fbdaabb8a98    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. n @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  [39;49m[33;40mfn2[39;49m[34;49m fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fbdaabb8a9b    498d4718                lea rax, [r15+0x18]                                    [39;49m
[34;49m .. 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 [39;49m[33;40mfn[39;49m[34;49m @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fbdaabb8a9f    498b4f08                mov rcx, [r15+0x8]                                     [39;49m
[34;49m ..  { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ [39;49m[33;40m=[39;49m[34;49m  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fbdaabb8aa3    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  [39;49m[33;40mfn[39;49m[34;49m fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fbdaabb8aa6    498d4708                lea rax, [r15+0x8]                                     [39;49m[32;49m
0x7fbdaabb8aaa    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb8aae    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn [39;49m[33;40mfn1[39;49m[34;49m @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fbdaabb8ab1    498b4710                mov rax, [r15+0x10]                                    [39;49m
[34;49m ..  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ [39;49m[33;40mfn2[39;49m[34;49m @ + =  } for return fn @ ; [39;49m[32;49m
0x7fbdaabb8ab5    498b4f18                mov rcx, [r15+0x18]                                    [39;49m
[34;49m .. 1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ [39;49m[33;40m+[39;49m[34;49m =  } for return fn @ ; [39;49m[32;49m
0x7fbdaabb8ab9    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fbdaabb8abc    488bc8                  mov rcx, rax                                           [39;49m
[34;49m .. 0 = fn2 1 = } { n @ 0 > } { n 1 -= }  [39;49m[33;40m{[39;49m[34;49m  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fbdaabb8abf    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fbdaabb8ac2    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m .. fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + [39;49m[33;40m=[39;49m[34;49m  } for return fn @ ; [39;49m[32;49m
0x7fbdaabb8ac6    488908                  mov [rax], rcx                                         [39;49m
[34;49m ..  @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  [39;49m[33;40m}[39;49m[34;49m for return fn @ ; [39;49m[32;49m
0x7fbdaabb8ac9    498d5ff8                lea rbx, [r15-0x8]                                     [39;49m
[34;49m .. n 0 = fn1 0 = fn2 1 = } { n @ 0 > } { [39;49m[33;40mn[39;49m[34;49m 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fbdaabb8acd    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. 0 = fn1 0 = fn2 1 = } { n @ 0 > } { n [39;49m[33;40m1[39;49m[34;49m -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fbdaabb8ad1    48c7c101000000          mov rcx, 0x1                                           [39;49m[32;49m
0x7fbdaabb8ad8    482bc1                  sub rax, rcx                                           [39;49m
[34;49m .. = fn1 0 = fn2 1 = } { n @ 0 > } { n 1 [39;49m[33;40m-=[39;49m[34;49m }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fbdaabb8adb    488903                  mov [rbx], rax                                         [39;49m
[34;49m .. n1 0 = fn2 1 = } { n @ 0 > } { n 1 -= [39;49m[33;40m}[39;49m[34;49m  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fbdaabb8ade    eba2                    jmp 0x7fbdaabb8a82         	< Root.[34;49mfib01[39;49m+57[32;49m >[39;49m[39;49m[32;49m
0x7fbdaabb8ae0    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m .. fn fn1 @ fn2 @ + =  } for return fn @ [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fbdaabb8ae4    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaabb8ae8    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m
[34;49m .. @ =  fn fn1 @ fn2 @ + =  } for return [39;49m[33;40mfn[39;49m[34;49m @ ; [39;49m[32;49m
0x7fbdaabb8aec    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaabb8aef    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'fib01' :: codeSize = 166
Word : 0x00007fbda80bf4e8 :: Compiled at : 0x00007fbdaabb8a49
 =============================
::> 'wdiss' was called at namespaces/test/dev0.csl 445.10 <::
 6765
 =============================
Root.[34;49mfib01[39;49m <:> csl compiled word
SourceCode for Root.[34;49mfib01[39;49m :> 
[34;49m: fib01 ( n | fn REG fn1 fn2 ) { fn 0 = fn1 0 = fn2 1 = } { n @ 0 > } { n 1 -= } { fn1 fn2 @ = fn2 fn @ = fn fn1 @ fn2 @ + = } for return fn @ ; [39;49m
Source code file location of [34;49mfib01[39;49m : "namespaces/test/dev0.csl" : 447.2 :: we are now at : namespaces/test/dev0.csl : 458.10
Compiled with : optimizeOn, inlineOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xaabb8af5 -- code size = 152 bytes
TypeSignature : 
 -----------------------------
Word :: Root.[34;49mfib01[39;49m : definition = 0x00007fbdaabb8af5 : disassembly at namespaces/test/dev0.csl : 458.10 :
[34;49m ..                                     : [39;49m[33;40mfib01[39;49m[34;49m ( n | fn REG fn1 fn2 )  { fn 0 = fn1 0 = fn2 1 = } { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2  .. [39;49m[32;49m
0x7fbdaabb8af5    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fbdaabb8af9    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaabb8afd    4981c618000000          add r14, 0x18                                          [39;49m
[34;49m ..     : fib01 ( n | fn REG fn1 fn2 )  { [39;49m[33;40mfn[39;49m[34;49m 0 = fn1 0 = fn2 1 = } { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } fo .. [39;49m[32;49m
0x7fbdaabb8b04    498d4708                lea rax, [r15+0x8]                                     [39;49m
[34;49m ..  : fib01 ( n | fn REG fn1 fn2 )  { fn [39;49m[33;40m0[39;49m[34;49m = fn1 0 = fn2 1 = } { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for r .. [39;49m[32;49m
0x7fbdaabb8b08    48c7c100000000          mov rcx, 0x0                                           [39;49m
[34;49m   : fib01 ( n | fn REG fn1 fn2 )  { fn 0 [39;49m[33;40m=[39;49m[34;49m fn1 0 = fn2 1 = } { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for ret .. [39;49m[32;49m
0x7fbdaabb8b0f    488908                  mov [rax], rcx                                         [39;49m
[34;49m ..  ( n | fn REG fn1 fn2 )  { fn 0 = fn1 [39;49m[33;40m0[39;49m[34;49m = fn2 1 = } { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ;[39;49m[32;49m
0x7fbdaabb8b12    48c7c700000000          mov rdi, 0x0                                           [39;49m
[34;49m ..  | fn REG fn1 fn2 )  { fn 0 = fn1 0 = [39;49m[33;40mfn2[39;49m[34;49m 1 = } { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fbdaabb8b19    498d4710                lea rax, [r15+0x10]                                    [39;49m
[34;49m .. n REG fn1 fn2 )  { fn 0 = fn1 0 = fn2 [39;49m[33;40m1[39;49m[34;49m = } { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fbdaabb8b1d    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m .. REG fn1 fn2 )  { fn 0 = fn1 0 = fn2 1 [39;49m[33;40m=[39;49m[34;49m } { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fbdaabb8b24    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. 1 fn2 )  { fn 0 = fn1 0 = fn2 1 = } { [39;49m[33;40mn[39;49m[34;49m @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fbdaabb8b27    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. )  { fn 0 = fn1 0 = fn2 1 = } { n @ 0 [39;49m[33;40m>[39;49m[34;49m } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fbdaabb8b2b    4883f800                cmp rax, 0x0                                           [39;49m
[34;49m ..  n | fn REG fn1 fn2 )  { fn 0 = fn1 0 [39;49m[33;40m=[39;49m[34;49m fn2 1 = } { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fbdaabb8b2f    0f8e48000000            jle 0x7fbdaabb8b7d         	< Root.[34;49mfib01[39;49m+136[32;49m >[39;49m[39;49m
[34;49m ..  1 = } { n @ 0 > } { n 1 -= }  {  fn1 [39;49m[33;40mfn2[39;49m[34;49m @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fbdaabb8b35    498b4f10                mov rcx, [r15+0x10]                                    [39;49m
[34;49m ..  { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ [39;49m[33;40m=[39;49m[34;49m  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fbdaabb8b39    488bf9                  mov rdi, rcx                                           [39;49m
[34;49m .. n @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  [39;49m[33;40mfn2[39;49m[34;49m fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fbdaabb8b3c    498d4710                lea rax, [r15+0x10]                                    [39;49m
[34;49m .. 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 [39;49m[33;40mfn[39;49m[34;49m @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fbdaabb8b40    498b4f08                mov rcx, [r15+0x8]                                     [39;49m
[34;49m ..  { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ [39;49m[33;40m=[39;49m[34;49m  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fbdaabb8b44    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  [39;49m[33;40mfn[39;49m[34;49m fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fbdaabb8b47    498d4708                lea rax, [r15+0x8]                                     [39;49m[32;49m
0x7fbdaabb8b4b    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb8b4f    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ [39;49m[33;40mfn2[39;49m[34;49m @ + =  } for return fn @ ; [39;49m[32;49m
0x7fbdaabb8b52    498b4f10                mov rcx, [r15+0x10]                                    [39;49m
[34;49m .. 1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ [39;49m[33;40m+[39;49m[34;49m =  } for return fn @ ; [39;49m[32;49m
0x7fbdaabb8b56    4803f9                  add rdi, rcx                                           [39;49m[32;49m
0x7fbdaabb8b59    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fbdaabb8b5c    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fbdaabb8b5f    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m .. fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + [39;49m[33;40m=[39;49m[34;49m  } for return fn @ ; [39;49m[32;49m
0x7fbdaabb8b63    488938                  mov [rax], rdi                                         [39;49m
[34;49m ..  @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  [39;49m[33;40m}[39;49m[34;49m for return fn @ ; [39;49m[32;49m
0x7fbdaabb8b66    498d5ff8                lea rbx, [r15-0x8]                                     [39;49m
[34;49m .. n 0 = fn1 0 = fn2 1 = } { n @ 0 > } { [39;49m[33;40mn[39;49m[34;49m 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fbdaabb8b6a    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. 0 = fn1 0 = fn2 1 = } { n @ 0 > } { n [39;49m[33;40m1[39;49m[34;49m -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fbdaabb8b6e    48c7c101000000          mov rcx, 0x1                                           [39;49m[32;49m
0x7fbdaabb8b75    482bc1                  sub rax, rcx                                           [39;49m
[34;49m .. = fn1 0 = fn2 1 = } { n @ 0 > } { n 1 [39;49m[33;40m-=[39;49m[34;49m }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fbdaabb8b78    488903                  mov [rbx], rax                                         [39;49m
[34;49m .. n1 0 = fn2 1 = } { n @ 0 > } { n 1 -= [39;49m[33;40m}[39;49m[34;49m  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fbdaabb8b7b    ebaa                    jmp 0x7fbdaabb8b27         	< Root.[34;49mfib01[39;49m+50[32;49m >[39;49m[39;49m[32;49m
0x7fbdaabb8b7d    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m .. fn fn1 @ fn2 @ + =  } for return fn @ [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fbdaabb8b81    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaabb8b85    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m
[34;49m .. @ =  fn fn1 @ fn2 @ + =  } for return [39;49m[33;40mfn[39;49m[34;49m @ ; [39;49m[32;49m
0x7fbdaabb8b89    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaabb8b8c    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'fib01' :: codeSize = 151
Word : 0x00007fbda80c3a18 :: Compiled at : 0x00007fbdaabb8af5
 =============================
::> 'wdiss' was called at namespaces/test/dev0.csl 458.10 <::
 6765
 =============================
Root.[34;49mfib01[39;49m <:> csl compiled word
SourceCode for Root.[34;49mfib01[39;49m :> 
[34;49m: fib01 ( n | fn, REG fn1, REG fn2 ) { fn 0 = fn1 0 = fn2 1 = } { n @ 0 > } { n 1 -= } { fn1 fn2 @ = fn2 fn @ = fn fn1 @ fn2 @ + = } for return fn @ ; [39;49m
Source code file location of [34;49mfib01[39;49m : "namespaces/test/dev0.csl" : 460.2 :: we are now at : namespaces/test/dev0.csl : 471.10
Compiled with : optimizeOn, inlineOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xaabb8b92 -- code size = 133 bytes
TypeSignature : 
 -----------------------------
Word :: Root.[34;49mfib01[39;49m : definition = 0x00007fbdaabb8b92 : disassembly at namespaces/test/dev0.csl : 471.10 :
[34;49m ..                                     : [39;49m[33;40mfib01[39;49m[34;49m ( n | fn, REG fn1, REG fn2 )  { fn 0 = fn1 0 = fn2 1 = } { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ = .. [39;49m[32;49m
0x7fbdaabb8b92    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fbdaabb8b96    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaabb8b9a    4981c610000000          add r14, 0x10                                          [39;49m
[34;49m  : fib01 ( n | fn, REG fn1, REG fn2 )  { [39;49m[33;40mfn[39;49m[34;49m 0 = fn1 0 = fn2 1 = } { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } fo .. [39;49m[32;49m
0x7fbdaabb8ba1    498d4708                lea rax, [r15+0x8]                                     [39;49m
[34;49m .. 01 ( n | fn, REG fn1, REG fn2 )  { fn [39;49m[33;40m0[39;49m[34;49m = fn1 0 = fn2 1 = } { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for r .. [39;49m[32;49m
0x7fbdaabb8ba5    48c7c100000000          mov rcx, 0x0                                           [39;49m
[34;49m ..  ( n | fn, REG fn1, REG fn2 )  { fn 0 [39;49m[33;40m=[39;49m[34;49m fn1 0 = fn2 1 = } { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for ret .. [39;49m[32;49m
0x7fbdaabb8bac    488908                  mov [rax], rcx                                         [39;49m
[34;49m ..  fn, REG fn1, REG fn2 )  { fn 0 = fn1 [39;49m[33;40m0[39;49m[34;49m = fn2 1 = } { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn .. [39;49m[32;49m
0x7fbdaabb8baf    48c7c700000000          mov rdi, 0x0                                           [39;49m
[34;49m ..  fn1, REG fn2 )  { fn 0 = fn1 0 = fn2 [39;49m[33;40m1[39;49m[34;49m = } { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ;  .. [39;49m[32;49m
0x7fbdaabb8bb6    48c7c601000000          mov rsi, 0x1                                           [39;49m
[34;49m .. G fn2 )  { fn 0 = fn1 0 = fn2 1 = } { [39;49m[33;40mn[39;49m[34;49m @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ;  .. [39;49m[32;49m
0x7fbdaabb8bbd    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. )  { fn 0 = fn1 0 = fn2 1 = } { n @ 0 [39;49m[33;40m>[39;49m[34;49m } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ;  .. [39;49m[32;49m
0x7fbdaabb8bc1    4883f800                cmp rax, 0x0                                           [39;49m[32;49m
0x7fbdaabb8bc5    0f8e3c000000            jle 0x7fbdaabb8c07         	< Root.[34;49mfib01[39;49m+117[32;49m >[39;49m[39;49m
[34;49m ..  { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ [39;49m[33;40m=[39;49m[34;49m  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ;  .. [39;49m[32;49m
0x7fbdaabb8bcb    488bfe                  mov rdi, rsi                                           [39;49m
[34;49m .. 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 [39;49m[33;40mfn[39;49m[34;49m @ =  fn fn1 @ fn2 @ + =  } for return fn @ ;  .. [39;49m[32;49m
0x7fbdaabb8bce    498b4f08                mov rcx, [r15+0x8]                                     [39;49m
[34;49m ..  { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ [39;49m[33;40m=[39;49m[34;49m  fn fn1 @ fn2 @ + =  } for return fn @ ;  .. [39;49m[32;49m
0x7fbdaabb8bd2    488bf1                  mov rsi, rcx                                           [39;49m
[34;49m .. n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  [39;49m[33;40mfn[39;49m[34;49m fn1 @ fn2 @ + =  } for return fn @ ;  .. [39;49m[32;49m
0x7fbdaabb8bd5    498d4708                lea rax, [r15+0x8]                                     [39;49m[32;49m
0x7fbdaabb8bd9    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb8bdd    498906                  mov [r14], rax                                         [39;49m
[34;49m .. 1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ [39;49m[33;40m+[39;49m[34;49m =  } for return fn @ ;  .. [39;49m[32;49m
0x7fbdaabb8be0    4803fe                  add rdi, rsi                                           [39;49m[32;49m
0x7fbdaabb8be3    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fbdaabb8be6    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fbdaabb8be9    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m .. fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + [39;49m[33;40m=[39;49m[34;49m  } for return fn @ ;  .. [39;49m[32;49m
0x7fbdaabb8bed    488938                  mov [rax], rdi                                         [39;49m
[34;49m ..  @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  [39;49m[33;40m}[39;49m[34;49m for return fn @ ;  .. [39;49m[32;49m
0x7fbdaabb8bf0    498d5ff8                lea rbx, [r15-0x8]                                     [39;49m
[34;49m .. n 0 = fn1 0 = fn2 1 = } { n @ 0 > } { [39;49m[33;40mn[39;49m[34;49m 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ;  .. [39;49m[32;49m
0x7fbdaabb8bf4    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. 0 = fn1 0 = fn2 1 = } { n @ 0 > } { n [39;49m[33;40m1[39;49m[34;49m -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ;  .. [39;49m[32;49m
0x7fbdaabb8bf8    48c7c101000000          mov rcx, 0x1                                           [39;49m[32;49m
0x7fbdaabb8bff    482bc1                  sub rax, rcx                                           [39;49m
[34;49m .. = fn1 0 = fn2 1 = } { n @ 0 > } { n 1 [39;49m[33;40m-=[39;49m[34;49m }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ;  .. [39;49m[32;49m
0x7fbdaabb8c02    488903                  mov [rbx], rax                                         [39;49m
[34;49m .. n1 0 = fn2 1 = } { n @ 0 > } { n 1 -= [39;49m[33;40m}[39;49m[34;49m  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ;  .. [39;49m[32;49m
0x7fbdaabb8c05    ebb6                    jmp 0x7fbdaabb8bbd         	< Root.[34;49mfib01[39;49m+43[32;49m >[39;49m[39;49m[32;49m
0x7fbdaabb8c07    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m .. fn fn1 @ fn2 @ + =  } for return fn @ [39;49m[33;40m;[39;49m[34;49m  .. [39;49m[32;49m
0x7fbdaabb8c0b    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaabb8c0f    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m
[34;49m .. @ =  fn fn1 @ fn2 @ + =  } for return [39;49m[33;40mfn[39;49m[34;49m @ ;  .. [39;49m[32;49m
0x7fbdaabb8c13    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaabb8c16    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'fib01' :: codeSize = 132
Word : 0x00007fbda80c7f48 :: Compiled at : 0x00007fbdaabb8b92
 =============================
::> 'wdiss' was called at namespaces/test/dev0.csl 471.10 <::
 6765
 =============================
Root.[34;49mfib01[39;49m <:> csl compiled word
SourceCode for Root.[34;49mfib01[39;49m :> 
[34;49m: fib01 ( n | REG fn REG fn1 REG fn2 ) { fn 0 = fn1 0 = fn2 1 = } { n @ 0 > } { n 1 -= } { fn1 fn2 @ = fn2 fn @ = fn fn1 @ fn2 @ + = } for return fn @ ; [39;49m
Source code file location of [34;49mfib01[39;49m : "namespaces/test/dev0.csl" : 474.2 :: we are now at : namespaces/test/dev0.csl : 485.10
Compiled with : optimizeOn, inlineOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xaabb8c1c -- code size = 100 bytes
TypeSignature : 
 -----------------------------
Word :: Root.[34;49mfib01[39;49m : definition = 0x00007fbdaabb8c1c : disassembly at namespaces/test/dev0.csl : 485.10 :
[34;49m ..                                     : [39;49m[33;40mfib01[39;49m[34;49m ( n | REG fn REG fn1 REG fn2 )  { fn 0 = fn1 0 = fn2 1 = } { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ .. [39;49m[32;49m
0x7fbdaabb8c1c    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fbdaabb8c20    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaabb8c24    4981c608000000          add r14, 0x8                                           [39;49m
[34;49m ..  ( n | REG fn REG fn1 REG fn2 )  { fn [39;49m[33;40m0[39;49m[34;49m = fn1 0 = fn2 1 = } { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for r .. [39;49m[32;49m
0x7fbdaabb8c2b    48c7c700000000          mov rdi, 0x0                                           [39;49m
[34;49m .. EG fn REG fn1 REG fn2 )  { fn 0 = fn1 [39;49m[33;40m0[39;49m[34;49m = fn2 1 = } { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn .. [39;49m[32;49m
0x7fbdaabb8c32    48c7c600000000          mov rsi, 0x0                                           [39;49m
[34;49m .. G fn1 REG fn2 )  { fn 0 = fn1 0 = fn2 [39;49m[33;40m1[39;49m[34;49m = } { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ;  .. [39;49m[32;49m
0x7fbdaabb8c39    48c7c201000000          mov rdx, 0x1                                           [39;49m
[34;49m .. G fn2 )  { fn 0 = fn1 0 = fn2 1 = } { [39;49m[33;40mn[39;49m[34;49m @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ;  .. [39;49m[32;49m
0x7fbdaabb8c40    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. )  { fn 0 = fn1 0 = fn2 1 = } { n @ 0 [39;49m[33;40m>[39;49m[34;49m } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ;  .. [39;49m[32;49m
0x7fbdaabb8c44    4883f800                cmp rax, 0x0                                           [39;49m
[34;49m ..  n | REG fn REG fn1 REG fn2 )  { fn 0 [39;49m[33;40m=[39;49m[34;49m fn1 0 = fn2 1 = } { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for ret .. [39;49m[32;49m
0x7fbdaabb8c48    0f8e26000000            jle 0x7fbdaabb8c74         	< Root.[34;49mfib01[39;49m+88[32;49m >[39;49m[39;49m
[34;49m ..  { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ [39;49m[33;40m=[39;49m[34;49m  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ;  .. [39;49m[32;49m
0x7fbdaabb8c4e    488bf2                  mov rsi, rdx                                           [39;49m
[34;49m ..  { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ [39;49m[33;40m=[39;49m[34;49m  fn fn1 @ fn2 @ + =  } for return fn @ ;  .. [39;49m[32;49m
0x7fbdaabb8c51    488bd7                  mov rdx, rdi                                           [39;49m
[34;49m .. n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  [39;49m[33;40mfn[39;49m[34;49m fn1 @ fn2 @ + =  } for return fn @ ;  .. [39;49m[32;49m
0x7fbdaabb8c54    488bc7                  mov rax, rdi                                           [39;49m
[34;49m .. 1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ [39;49m[33;40m+[39;49m[34;49m =  } for return fn @ ;  .. [39;49m[32;49m
0x7fbdaabb8c57    4803f2                  add rsi, rdx                                           [39;49m
[34;49m .. fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + [39;49m[33;40m=[39;49m[34;49m  } for return fn @ ;  .. [39;49m[32;49m
0x7fbdaabb8c5a    488bfe                  mov rdi, rsi                                           [39;49m
[34;49m ..  @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  [39;49m[33;40m}[39;49m[34;49m for return fn @ ;  .. [39;49m[32;49m
0x7fbdaabb8c5d    498d5ff8                lea rbx, [r15-0x8]                                     [39;49m
[34;49m .. n 0 = fn1 0 = fn2 1 = } { n @ 0 > } { [39;49m[33;40mn[39;49m[34;49m 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ;  .. [39;49m[32;49m
0x7fbdaabb8c61    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. 0 = fn1 0 = fn2 1 = } { n @ 0 > } { n [39;49m[33;40m1[39;49m[34;49m -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ;  .. [39;49m[32;49m
0x7fbdaabb8c65    48c7c101000000          mov rcx, 0x1                                           [39;49m[32;49m
0x7fbdaabb8c6c    482bc1                  sub rax, rcx                                           [39;49m
[34;49m .. = fn1 0 = fn2 1 = } { n @ 0 > } { n 1 [39;49m[33;40m-=[39;49m[34;49m }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ;  .. [39;49m[32;49m
0x7fbdaabb8c6f    488903                  mov [rbx], rax                                         [39;49m
[34;49m .. n1 0 = fn2 1 = } { n @ 0 > } { n 1 -= [39;49m[33;40m}[39;49m[34;49m  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ;  .. [39;49m[32;49m
0x7fbdaabb8c72    ebcc                    jmp 0x7fbdaabb8c40         	< Root.[34;49mfib01[39;49m+36[32;49m >[39;49m[39;49m
[34;49m .. fn fn1 @ fn2 @ + =  } for return fn @ [39;49m[33;40m;[39;49m[34;49m  .. [39;49m[32;49m
0x7fbdaabb8c74    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaabb8c78    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m
[34;49m .. @ =  fn fn1 @ fn2 @ + =  } for return [39;49m[33;40mfn[39;49m[34;49m @ ;  .. [39;49m[32;49m
0x7fbdaabb8c7c    49893e                  mov [r14], rdi                                         [39;49m[32;49m
0x7fbdaabb8c7f    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'fib01' :: codeSize = 99
Word : 0x00007fbda80cc478 :: Compiled at : 0x00007fbdaabb8c1c
 =============================
::> 'wdiss' was called at namespaces/test/dev0.csl 485.10 <::
 6765
 =============================
Root.[34;49mfib01[39;49m <:> csl compiled word
SourceCode for Root.[34;49mfib01[39;49m :> 
[34;49m: fib01 ( REG n | fn fn1 REG fn2 ) { fn 0 = fn1 0 = fn2 1 = } { n @ 0 > } { n 1 -= } { fn1 fn2 @ = fn2 fn @ = fn fn1 @ fn2 @ + = } for return fn @ ; [39;49m
Source code file location of [34;49mfib01[39;49m : "namespaces/test/dev0.csl" : 488.2 :: we are now at : namespaces/test/dev0.csl : 499.10
Compiled with : optimizeOn, inlineOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xaabb8c85 -- code size = 140 bytes
TypeSignature : 
 -----------------------------
Word :: Root.[34;49mfib01[39;49m : definition = 0x00007fbdaabb8c85 : disassembly at namespaces/test/dev0.csl : 499.10 :
[34;49m ..                                     : [39;49m[33;40mfib01[39;49m[34;49m ( REG n | fn fn1 REG fn2 )  { fn 0 = fn1 0 = fn2 1 = } { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 [39;49m[32;49m
0x7fbdaabb8c85    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fbdaabb8c89    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaabb8c8d    4981c618000000          add r14, 0x18                                          [39;49m
[34;49m ..                               : fib01 [39;49m[33;40m([39;49m[34;49m REG n | fn fn1 REG fn2 )  { fn 0 = fn1 0 = fn2 1 = } { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =[39;49m[32;49m
0x7fbdaabb8c94    498b7ff8                mov rdi, [r15-0x8]                                     [39;49m
[34;49m .. : fib01 ( REG n | fn fn1 REG fn2 )  { [39;49m[33;40mfn[39;49m[34;49m 0 = fn1 0 = fn2 1 = } { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for re[39;49m[32;49m
0x7fbdaabb8c98    498d4708                lea rax, [r15+0x8]                                     [39;49m
[34;49m : fib01 ( REG n | fn fn1 REG fn2 )  { fn [39;49m[33;40m0[39;49m[34;49m = fn1 0 = fn2 1 = } { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn[39;49m[32;49m
0x7fbdaabb8c9c    48c7c100000000          mov rcx, 0x0                                           [39;49m
[34;49m .. 01 ( REG n | fn fn1 REG fn2 )  { fn 0 [39;49m[33;40m=[39;49m[34;49m fn1 0 = fn2 1 = } { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return [39;49m[32;49m
0x7fbdaabb8ca3    488908                  mov [rax], rcx                                         [39;49m
[34;49m ..  ( REG n | fn fn1 REG fn2 )  { fn 0 = [39;49m[33;40mfn1[39;49m[34;49m 0 = fn2 1 = } { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn[39;49m[32;49m
0x7fbdaabb8ca6    498d4710                lea rax, [r15+0x10]                                    [39;49m
[34;49m .. EG n | fn fn1 REG fn2 )  { fn 0 = fn1 [39;49m[33;40m0[39;49m[34;49m = fn2 1 = } { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ;[39;49m[32;49m
0x7fbdaabb8caa    48c7c100000000          mov rcx, 0x0                                           [39;49m
[34;49m ..  n | fn fn1 REG fn2 )  { fn 0 = fn1 0 [39;49m[33;40m=[39;49m[34;49m fn2 1 = } { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fbdaabb8cb1    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. n fn1 REG fn2 )  { fn 0 = fn1 0 = fn2 [39;49m[33;40m1[39;49m[34;49m = } { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fbdaabb8cb4    48c7c601000000          mov rsi, 0x1                                           [39;49m
[34;49m .. )  { fn 0 = fn1 0 = fn2 1 = } { n @ 0 [39;49m[33;40m>[39;49m[34;49m } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fbdaabb8cbb    4883ff00                cmp rdi, 0x0                                           [39;49m[32;49m
0x7fbdaabb8cbf    0f8e3c000000            jle 0x7fbdaabb8d01         	< Root.[34;49mfib01[39;49m+124[32;49m >[39;49m[39;49m
[34;49m ..  fn2 1 = } { n @ 0 > } { n 1 -= }  {  [39;49m[33;40mfn1[39;49m[34;49m fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fbdaabb8cc5    498d4710                lea rax, [r15+0x10]                                    [39;49m
[34;49m ..  { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ [39;49m[33;40m=[39;49m[34;49m  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fbdaabb8cc9    488930                  mov [rax], rsi                                         [39;49m
[34;49m .. 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 [39;49m[33;40mfn[39;49m[34;49m @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fbdaabb8ccc    498b4f08                mov rcx, [r15+0x8]                                     [39;49m
[34;49m ..  { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ [39;49m[33;40m=[39;49m[34;49m  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fbdaabb8cd0    488bf1                  mov rsi, rcx                                           [39;49m
[34;49m .. n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  [39;49m[33;40mfn[39;49m[34;49m fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fbdaabb8cd3    498d4708                lea rax, [r15+0x8]                                     [39;49m[32;49m
0x7fbdaabb8cd7    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb8cdb    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn [39;49m[33;40mfn1[39;49m[34;49m @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fbdaabb8cde    498b4710                mov rax, [r15+0x10]                                    [39;49m
[34;49m .. 1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ [39;49m[33;40m+[39;49m[34;49m =  } for return fn @ ; [39;49m[32;49m
0x7fbdaabb8ce2    4803c6                  add rax, rsi                                           [39;49m[32;49m
0x7fbdaabb8ce5    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fbdaabb8ce8    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fbdaabb8ceb    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m .. fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + [39;49m[33;40m=[39;49m[34;49m  } for return fn @ ; [39;49m[32;49m
0x7fbdaabb8cef    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. n 0 = fn1 0 = fn2 1 = } { n @ 0 > } { [39;49m[33;40mn[39;49m[34;49m 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fbdaabb8cf2    488bdf                  mov rbx, rdi                                           [39;49m
[34;49m .. 0 = fn1 0 = fn2 1 = } { n @ 0 > } { n [39;49m[33;40m1[39;49m[34;49m -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fbdaabb8cf5    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m .. = fn1 0 = fn2 1 = } { n @ 0 > } { n 1 [39;49m[33;40m-=[39;49m[34;49m }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fbdaabb8cfc    482bf9                  sub rdi, rcx                                           [39;49m
[34;49m .. n1 0 = fn2 1 = } { n @ 0 > } { n 1 -= [39;49m[33;40m}[39;49m[34;49m  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fbdaabb8cff    ebba                    jmp 0x7fbdaabb8cbb         	< Root.[34;49mfib01[39;49m+54[32;49m >[39;49m[39;49m[32;49m
0x7fbdaabb8d01    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m .. fn fn1 @ fn2 @ + =  } for return fn @ [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fbdaabb8d05    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaabb8d09    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m
[34;49m .. @ =  fn fn1 @ fn2 @ + =  } for return [39;49m[33;40mfn[39;49m[34;49m @ ; [39;49m[32;49m
0x7fbdaabb8d0d    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaabb8d10    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'fib01' :: codeSize = 139
Word : 0x00007fbda80d09a8 :: Compiled at : 0x00007fbdaabb8c85
 =============================
::> 'wdiss' was called at namespaces/test/dev0.csl 499.10 <::
 6765
 =============================
Root.[34;49mfib01[39;49m <:> csl compiled word
SourceCode for Root.[34;49mfib01[39;49m :> 
[34;49m: fib01 ( REG n | fn REG fn1 REG fn2 ) { fn 0 = fn1 0 = fn2 1 = } { n @ 0 > } { n 1 -= } { fn1 fn2 @ = fn2 fn @ = fn fn1 @ fn2 @ + = } for return fn @ ; [39;49m
Source code file location of [34;49mfib01[39;49m : "namespaces/test/dev0.csl" : 501.2 :: we are now at : namespaces/test/dev0.csl : 512.10
Compiled with : optimizeOn, inlineOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xaabb8d16 -- code size = 125 bytes
TypeSignature : 
 -----------------------------
Word :: Root.[34;49mfib01[39;49m : definition = 0x00007fbdaabb8d16 : disassembly at namespaces/test/dev0.csl : 512.10 :
[34;49m ..                                     : [39;49m[33;40mfib01[39;49m[34;49m ( REG n | fn REG fn1 REG fn2 )  { fn 0 = fn1 0 = fn2 1 = } { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ .. [39;49m[32;49m
0x7fbdaabb8d16    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fbdaabb8d1a    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaabb8d1e    4981c610000000          add r14, 0x10                                          [39;49m
[34;49m ..                               : fib01 [39;49m[33;40m([39;49m[34;49m REG n | fn REG fn1 REG fn2 )  { fn 0 = fn1 0 = fn2 1 = } { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn .. [39;49m[32;49m
0x7fbdaabb8d25    498b7ff8                mov rdi, [r15-0x8]                                     [39;49m
[34;49m: fib01 ( REG n | fn REG fn1 REG fn2 )  { [39;49m[33;40mfn[39;49m[34;49m 0 = fn1 0 = fn2 1 = } { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } fo .. [39;49m[32;49m
0x7fbdaabb8d29    498d4708                lea rax, [r15+0x8]                                     [39;49m
[34;49m ..  ( REG n | fn REG fn1 REG fn2 )  { fn [39;49m[33;40m0[39;49m[34;49m = fn1 0 = fn2 1 = } { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for r .. [39;49m[32;49m
0x7fbdaabb8d2d    48c7c100000000          mov rcx, 0x0                                           [39;49m
[34;49m ..  REG n | fn REG fn1 REG fn2 )  { fn 0 [39;49m[33;40m=[39;49m[34;49m fn1 0 = fn2 1 = } { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for ret .. [39;49m[32;49m
0x7fbdaabb8d34    488908                  mov [rax], rcx                                         [39;49m
[34;49m ..  | fn REG fn1 REG fn2 )  { fn 0 = fn1 [39;49m[33;40m0[39;49m[34;49m = fn2 1 = } { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn .. [39;49m[32;49m
0x7fbdaabb8d37    48c7c600000000          mov rsi, 0x0                                           [39;49m
[34;49m .. G fn1 REG fn2 )  { fn 0 = fn1 0 = fn2 [39;49m[33;40m1[39;49m[34;49m = } { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ;  .. [39;49m[32;49m
0x7fbdaabb8d3e    48c7c201000000          mov rdx, 0x1                                           [39;49m
[34;49m .. )  { fn 0 = fn1 0 = fn2 1 = } { n @ 0 [39;49m[33;40m>[39;49m[34;49m } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ;  .. [39;49m[32;49m
0x7fbdaabb8d45    4883ff00                cmp rdi, 0x0                                           [39;49m
[34;49m ..  fn REG fn1 REG fn2 )  { fn 0 = fn1 0 [39;49m[33;40m=[39;49m[34;49m fn2 1 = } { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ .. [39;49m[32;49m
0x7fbdaabb8d49    0f8e34000000            jle 0x7fbdaabb8d83         	< Root.[34;49mfib01[39;49m+109[32;49m >[39;49m[39;49m
[34;49m ..  { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ [39;49m[33;40m=[39;49m[34;49m  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ;  .. [39;49m[32;49m
0x7fbdaabb8d4f    488bf2                  mov rsi, rdx                                           [39;49m
[34;49m .. 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 [39;49m[33;40mfn[39;49m[34;49m @ =  fn fn1 @ fn2 @ + =  } for return fn @ ;  .. [39;49m[32;49m
0x7fbdaabb8d52    498b4f08                mov rcx, [r15+0x8]                                     [39;49m
[34;49m ..  { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ [39;49m[33;40m=[39;49m[34;49m  fn fn1 @ fn2 @ + =  } for return fn @ ;  .. [39;49m[32;49m
0x7fbdaabb8d56    488bd1                  mov rdx, rcx                                           [39;49m
[34;49m .. n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  [39;49m[33;40mfn[39;49m[34;49m fn1 @ fn2 @ + =  } for return fn @ ;  .. [39;49m[32;49m
0x7fbdaabb8d59    498d4708                lea rax, [r15+0x8]                                     [39;49m[32;49m
0x7fbdaabb8d5d    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb8d61    498906                  mov [r14], rax                                         [39;49m
[34;49m .. 1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ [39;49m[33;40m+[39;49m[34;49m =  } for return fn @ ;  .. [39;49m[32;49m
0x7fbdaabb8d64    4803f2                  add rsi, rdx                                           [39;49m[32;49m
0x7fbdaabb8d67    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fbdaabb8d6a    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fbdaabb8d6d    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m .. fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + [39;49m[33;40m=[39;49m[34;49m  } for return fn @ ;  .. [39;49m[32;49m
0x7fbdaabb8d71    488930                  mov [rax], rsi                                         [39;49m
[34;49m .. n 0 = fn1 0 = fn2 1 = } { n @ 0 > } { [39;49m[33;40mn[39;49m[34;49m 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ;  .. [39;49m[32;49m
0x7fbdaabb8d74    488bdf                  mov rbx, rdi                                           [39;49m
[34;49m .. 0 = fn1 0 = fn2 1 = } { n @ 0 > } { n [39;49m[33;40m1[39;49m[34;49m -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ;  .. [39;49m[32;49m
0x7fbdaabb8d77    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m .. = fn1 0 = fn2 1 = } { n @ 0 > } { n 1 [39;49m[33;40m-=[39;49m[34;49m }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ;  .. [39;49m[32;49m
0x7fbdaabb8d7e    482bf9                  sub rdi, rcx                                           [39;49m
[34;49m .. n1 0 = fn2 1 = } { n @ 0 > } { n 1 -= [39;49m[33;40m}[39;49m[34;49m  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ;  .. [39;49m[32;49m
0x7fbdaabb8d81    ebc2                    jmp 0x7fbdaabb8d45         	< Root.[34;49mfib01[39;49m+47[32;49m >[39;49m[39;49m[32;49m
0x7fbdaabb8d83    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m .. fn fn1 @ fn2 @ + =  } for return fn @ [39;49m[33;40m;[39;49m[34;49m  .. [39;49m[32;49m
0x7fbdaabb8d87    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaabb8d8b    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m
[34;49m .. @ =  fn fn1 @ fn2 @ + =  } for return [39;49m[33;40mfn[39;49m[34;49m @ ;  .. [39;49m[32;49m
0x7fbdaabb8d8f    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaabb8d92    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'fib01' :: codeSize = 124
Word : 0x00007fbda80d4ed8 :: Compiled at : 0x00007fbdaabb8d16
 =============================
::> 'wdiss' was called at namespaces/test/dev0.csl 512.10 <::
 6765
 =============================
Root.[34;49mfib01[39;49m <:> csl compiled word
SourceCode for Root.[34;49mfib01[39;49m :> 
[34;49m: fib01 ( REG n | fn fn1 REG fn2 ) { fn 0 = fn1 0 = fn2 1 = } { n @ 0 > } { n 1 -= } { fn1 fn2 @ = fn2 fn @ = fn fn1 @ fn2 @ + = } for return fn @ ; [39;49m
Source code file location of [34;49mfib01[39;49m : "namespaces/test/dev0.csl" : 514.2 :: we are now at : namespaces/test/dev0.csl : 525.10
Compiled with : optimizeOn, inlineOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xaabb8d98 -- code size = 145 bytes
TypeSignature : 
 -----------------------------
Word :: Root.[34;49mfib01[39;49m : definition = 0x00007fbdaabb8d98 : disassembly at namespaces/test/dev0.csl : 525.10 :
[34;49m ..                                     : [39;49m[33;40mfib01[39;49m[34;49m ( REG n | fn fn1 REG fn2 )  { fn 0 = fn1 0 = fn2 1 = } { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 [39;49m[32;49m
0x7fbdaabb8d98    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fbdaabb8d9c    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaabb8da0    4981c618000000          add r14, 0x18                                          [39;49m
[34;49m ..                               : fib01 [39;49m[33;40m([39;49m[34;49m REG n | fn fn1 REG fn2 )  { fn 0 = fn1 0 = fn2 1 = } { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =[39;49m[32;49m
0x7fbdaabb8da7    498b7ff8                mov rdi, [r15-0x8]                                     [39;49m
[34;49m .. : fib01 ( REG n | fn fn1 REG fn2 )  { [39;49m[33;40mfn[39;49m[34;49m 0 = fn1 0 = fn2 1 = } { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for re[39;49m[32;49m
0x7fbdaabb8dab    498d4708                lea rax, [r15+0x8]                                     [39;49m
[34;49m : fib01 ( REG n | fn fn1 REG fn2 )  { fn [39;49m[33;40m0[39;49m[34;49m = fn1 0 = fn2 1 = } { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn[39;49m[32;49m
0x7fbdaabb8daf    48c7c100000000          mov rcx, 0x0                                           [39;49m
[34;49m .. 01 ( REG n | fn fn1 REG fn2 )  { fn 0 [39;49m[33;40m=[39;49m[34;49m fn1 0 = fn2 1 = } { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return [39;49m[32;49m
0x7fbdaabb8db6    488908                  mov [rax], rcx                                         [39;49m
[34;49m ..  ( REG n | fn fn1 REG fn2 )  { fn 0 = [39;49m[33;40mfn1[39;49m[34;49m 0 = fn2 1 = } { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn[39;49m[32;49m
0x7fbdaabb8db9    498d4710                lea rax, [r15+0x10]                                    [39;49m
[34;49m .. EG n | fn fn1 REG fn2 )  { fn 0 = fn1 [39;49m[33;40m0[39;49m[34;49m = fn2 1 = } { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ;[39;49m[32;49m
0x7fbdaabb8dbd    48c7c100000000          mov rcx, 0x0                                           [39;49m
[34;49m ..  n | fn fn1 REG fn2 )  { fn 0 = fn1 0 [39;49m[33;40m=[39;49m[34;49m fn2 1 = } { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fbdaabb8dc4    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. n fn1 REG fn2 )  { fn 0 = fn1 0 = fn2 [39;49m[33;40m1[39;49m[34;49m = } { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fbdaabb8dc7    48c7c601000000          mov rsi, 0x1                                           [39;49m
[34;49m .. )  { fn 0 = fn1 0 = fn2 1 = } { n @ 0 [39;49m[33;40m>[39;49m[34;49m } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fbdaabb8dce    4883ff00                cmp rdi, 0x0                                           [39;49m[32;49m
0x7fbdaabb8dd2    0f8e3c000000            jle 0x7fbdaabb8e14         	< Root.[34;49mfib01[39;49m+124[32;49m >[39;49m[39;49m
[34;49m ..  fn2 1 = } { n @ 0 > } { n 1 -= }  {  [39;49m[33;40mfn1[39;49m[34;49m fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fbdaabb8dd8    498d4710                lea rax, [r15+0x10]                                    [39;49m
[34;49m ..  { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ [39;49m[33;40m=[39;49m[34;49m  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fbdaabb8ddc    488930                  mov [rax], rsi                                         [39;49m
[34;49m .. 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 [39;49m[33;40mfn[39;49m[34;49m @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fbdaabb8ddf    498b4f08                mov rcx, [r15+0x8]                                     [39;49m
[34;49m ..  { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ [39;49m[33;40m=[39;49m[34;49m  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fbdaabb8de3    488bf1                  mov rsi, rcx                                           [39;49m
[34;49m .. n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  [39;49m[33;40mfn[39;49m[34;49m fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fbdaabb8de6    498d4708                lea rax, [r15+0x8]                                     [39;49m[32;49m
0x7fbdaabb8dea    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb8dee    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn [39;49m[33;40mfn1[39;49m[34;49m @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fbdaabb8df1    498b4710                mov rax, [r15+0x10]                                    [39;49m
[34;49m .. 1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ [39;49m[33;40m+[39;49m[34;49m =  } for return fn @ ; [39;49m[32;49m
0x7fbdaabb8df5    4803c6                  add rax, rsi                                           [39;49m[32;49m
0x7fbdaabb8df8    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fbdaabb8dfb    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fbdaabb8dfe    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m .. fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + [39;49m[33;40m=[39;49m[34;49m  } for return fn @ ; [39;49m[32;49m
0x7fbdaabb8e02    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. n 0 = fn1 0 = fn2 1 = } { n @ 0 > } { [39;49m[33;40mn[39;49m[34;49m 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fbdaabb8e05    488bdf                  mov rbx, rdi                                           [39;49m
[34;49m .. 0 = fn1 0 = fn2 1 = } { n @ 0 > } { n [39;49m[33;40m1[39;49m[34;49m -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fbdaabb8e08    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m .. = fn1 0 = fn2 1 = } { n @ 0 > } { n 1 [39;49m[33;40m-=[39;49m[34;49m }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fbdaabb8e0f    482bf9                  sub rdi, rcx                                           [39;49m
[34;49m .. n1 0 = fn2 1 = } { n @ 0 > } { n 1 -= [39;49m[33;40m}[39;49m[34;49m  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fbdaabb8e12    ebba                    jmp 0x7fbdaabb8dce         	< Root.[34;49mfib01[39;49m+54[32;49m >[39;49m[39;49m[32;49m
0x7fbdaabb8e14    498b4708                mov rax, [r15+0x8]                                     [39;49m[32;49m
0x7fbdaabb8e18    e900000000              jmp 0x7fbdaabb8e1d         	< Root.[34;49mfib01[39;49m+133[32;49m >[39;49m[39;49m
[34;49m .. fn fn1 @ fn2 @ + =  } for return fn @ [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fbdaabb8e1d    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaabb8e21    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m
[34;49m .. @ =  fn fn1 @ fn2 @ + =  } for return [39;49m[33;40mfn[39;49m[34;49m @ ; [39;49m[32;49m
0x7fbdaabb8e25    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaabb8e28    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'fib01' :: codeSize = 144
Word : 0x00007fbda80d9408 :: Compiled at : 0x00007fbdaabb8d98
 =============================
::> 'wdiss' was called at namespaces/test/dev0.csl 525.10 <::
 6765
 namespaces/test/dev0.csl 531.12 
ending Lisp

DataStack at : [34;49mnamespaces/test/dev0.csl : 531.35[39;49m :
DataStack depth =   2 : Dsp (R14) = Top = 0x00007fbdab0efa50, InitialTos = 0x00007fbdab0efa40, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fbdab0efa50 > = 0x0000000000000005	
  DataStack   [  -1 ] < 0x00007fbdab0efa48 > = 0x0000000000000005	

 =============================
C_Syntax.[34;49m_Compile_X_Group1_Immediate[39;49m <:> csl compiled word, prefix
SourceCode for C_Syntax.[34;49m_Compile_X_Group1_Immediate[39;49m :> 
[34;49mvoid _Compile_X_Group1_Immediate ( uint8 code, uint8 mod, uint8 rm, int64 disp, uint64 imm, uint8 iSize ) { int64 opCode = 0x80 ; if ( ( ( iSize > 4 ) || ( imm >= 0x100000000 ) ) ) { if ( rm != DSP ) { Compile_MoveImm_To_Reg ( THRU_REG, imm, iSize ) ; _Compile_X_Group1_Reg_To_Reg ( code, rm, THRU_REG ) ; } else { Compile_MoveImm_To_Reg ( ACC, imm, iSize ) ; _Compile_X_Group1 ( code, REG, MEM, ACC, rm, 0, disp, CELL ) ; } return ; } else if ( ( iSize > BYTE ) || (abs ( imm ) >= 0x7f ) ) { opCode |= 1 ; } else if ( ( iSize <= BYTE ) || (abs ( imm ) < 0x100 ) ) opCode |= 3 ; Compile_CalculateWrite_Instruction_X64 ( 0, opCode, mod, code, rm, REX_W | MODRM_B | IMM_B | DISP_B, 0, disp, 0, imm, iSize ) ; } [39;49m
Source code file location of [34;49m_Compile_X_Group1_Immediate[39;49m : "namespaces/compiler/x64.csl" : 628.28 :: we are now at : namespaces/compiler/x64.csl : 668.32
Compiled with : optimizeOn, inlineOn, c_syntaxOn, infixOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xaabbb0aa -- code size = 833 bytes
TypeSignature : 
 -----------------------------
Word :: C_Syntax.[34;49m_Compile_X_Group1_Immediate[39;49m : definition = 0x00007fbdaabbb0aa : disassembly at namespaces/compiler/x64.csl : 668.32 :
[34;49m ..                                  void [39;49m[33;40m_Compile_X_Group1_Immediate[39;49m[34;49m ( uint8 code, uint8 mod, uint8 rm, int64 disp, uint64 imm, uint8 iSize )  .. [39;49m[32;49m
0x7fbdaabbb0aa    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fbdaabbb0ae    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaabbb0b2    4981c610000000          add r14, 0x10                                          [39;49m
[34;49m .. 4 imm, uint8 iSize ) { int64 opCode = [39;49m[33;40m0x80[39;49m[34;49m ; if ( ( ( iSize > 4 ) || ( imm >= 0x100000000 ) ) ) { if ( rm != DSP ) { Compile_MoveImm_To_Reg .. [39;49m[32;49m
0x7fbdaabbb0b9    48c7c080000000          mov rax, 0x80                                          [39;49m
[34;49m .. sp, uint64 imm, uint8 iSize ) { int64 [39;49m[33;40mopCode[39;49m[34;49m = 0x80 ; if ( ( ( iSize > 4 ) || ( imm >= 0x100000000 ) ) ) { if ( rm != DSP ) { Compile_MoveI .. [39;49m[32;49m
0x7fbdaabbb0c0    498d4f08                lea rcx, [r15+0x8]                                     [39;49m
[34;49m .. t64 imm, uint8 iSize ) { int64 opCode [39;49m[33;40mstore[39;49m[34;49m0 ; if ( ( ( iSize > 4 ) || ( imm >= 0x100000000 ) ) ) { if ( rm != DSP ) { Compile_MoveImm_To_R .. [39;49m[32;49m
0x7fbdaabbb0c4    488901                  mov [rcx], rax                                         [39;49m
[34;49m .. ze ) { int64 opCode = 0x80 ; if ( ( ( [39;49m[33;40miSize[39;49m[34;49m > 4 ) || ( imm >= 0x100000000 ) ) ) { if ( rm != DSP ) { Compile_MoveImm_To_Reg ( THRU_REG, imm .. [39;49m[32;49m
0x7fbdaabbb0c7    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m ..  int64 opCode = 0x80 ; if ( ( ( iSize [39;49m[33;40m>[39;49m[34;49m 4 ) || ( imm >= 0x100000000 ) ) ) { if ( rm != DSP ) { Compile_MoveImm_To_Reg ( THRU_REG, imm, iSiz .. [39;49m[32;49m
0x7fbdaabbb0cb    4883f804                cmp rax, 0x4                                           [39;49m[32;49m
0x7fbdaabbb0cf    0f9fc0                  setg al                                                [39;49m
[34;49m .. nt64 opCode = 0x80 ; if ( ( ( iSize > [39;49m[33;40m4[39;49m[34;49m ) || ( imm >= 0x100000000 ) ) ) { if ( rm != DSP ) { Compile_MoveImm_To_Reg ( THRU_REG, imm, iSize  .. [39;49m[32;49m
0x7fbdaabbb0d2    480fb6c0                movzx rax, al                                          [39;49m[32;49m
0x7fbdaabbb0d6    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabbb0da    498906                  mov [r14], rax                                         [39;49m
[34;49m .. de = 0x80 ; if ( ( ( iSize > 4 ) || ( [39;49m[33;40mimm[39;49m[34;49m >= 0x100000000 ) ) ) { if ( rm != DSP ) { Compile_MoveImm_To_Reg ( THRU_REG, imm, iSize ) ; _Comp .. [39;49m[32;49m
0x7fbdaabbb0dd    498b47f0                mov rax, [r15-0x10]                                    [39;49m
[34;49m ..  0x80 ; if ( ( ( iSize > 4 ) || ( imm [39;49m[33;40m>=[39;49m[34;49m 0x100000000 ) ) ) { if ( rm != DSP ) { Compile_MoveImm_To_Reg ( THRU_REG, imm, iSize ) ; _Compile_ .. [39;49m[32;49m
0x7fbdaabbb0e1    49b90000000001000000    mov r9, 0x100000000                                    [39;49m[32;49m
0x7fbdaabbb0eb    4c3bc8                  cmp r9, rax                                            [39;49m[32;49m
0x7fbdaabbb0ee    0f9cc0                  setl al                                                [39;49m[32;49m
0x7fbdaabbb0f1    480fb6c0                movzx rax, al                                          [39;49m[32;49m
0x7fbdaabbb0f5    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabbb0f9    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ( iSize > 4 ) || ( imm >= 0x100000000 [39;49m[33;40m)[39;49m[34;49m ) ) { if ( rm != DSP ) { Compile_MoveImm_To_Reg ( THRU_REG, imm, iSize ) ; _Compile_X_Group1_Reg_To .. [39;49m[32;49m
0x7fbdaabbb0fc    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fbdaabbb0ff    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fbdaabbb103    4983ee10                sub r14, 0x10                                          [39;49m[32;49m
0x7fbdaabbb107    480bc1                  or rax, rcx                                            [39;49m
[34;49m ..  opCode = 0x80 ; if ( ( ( iSize > 4 ) [39;49m[33;40m||[39;49m[34;49m ( imm >= 0x100000000 ) ) ) { if ( rm != DSP ) { Compile_MoveImm_To_Reg ( THRU_REG, imm, iSize ) ;  .. [39;49m[32;49m
0x7fbdaabbb10a    4885c0                  test rax, rax                                          [39;49m
[34;49m .. abs ( imm ) < 0x100 ) ) opCode |= 3 ; [39;49m[33;40m}[39;49m[34;49mompile_CalculateWrite_Instruction_X64 ( 0, opCode, mod, code, rm, REX_W | MODRM_B | IMM_B | DISP_B,  .. [39;49m[32;49m
0x7fbdaabbb10d    4885c0                  test rax, rax                                          [39;49m[32;49m
0x7fbdaabbb110    0f841f010000            jz 0x7fbdaabbb235          	< C_Syntax.[34;49m_Compile_X_Group1_Immediate[39;49m+395[32;49m >[39;49m[39;49m
[34;49m ..  || ( imm >= 0x100000000 ) ) ) { if ( [39;49m[33;40mrm[39;49m[34;49m != DSP ) { Compile_MoveImm_To_Reg ( THRU_REG, imm, iSize ) ; _Compile_X_Group1_Reg_To_Reg ( code,  .. [39;49m[32;49m
0x7fbdaabbb116    498b47e0                mov rax, [r15-0x20]                                    [39;49m
[34;49m ..  ( imm >= 0x100000000 ) ) ) { if ( rm [39;49m[33;40m!=[39;49m[34;49m DSP ) { Compile_MoveImm_To_Reg ( THRU_REG, imm, iSize ) ; _Compile_X_Group1_Reg_To_Reg ( code, rm, .. [39;49m[32;49m
0x7fbdaabbb11a    4883f80e                cmp rax, 0xe                                           [39;49m[32;49m
0x7fbdaabbb11e    0f8467000000            jz 0x7fbdaabbb18b          	< C_Syntax.[34;49m_Compile_X_Group1_Immediate[39;49m+225[32;49m >[39;49m[39;49m
[34;49m .. m != DSP ) { Compile_MoveImm_To_Reg ( [39;49m[33;40mTHRU_REG[39;49m[34;49m, imm, iSize ) ; _Compile_X_Group1_Reg_To_Reg ( code, rm, THRU_REG ) ; } else { Compile_MoveI .. [39;49m[32;49m
0x7fbdaabbb124    48c7c009000000          mov rax, 0x9                                           [39;49m[32;49m
0x7fbdaabbb12b    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabbb12f    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  { Compile_MoveImm_To_Reg ( THRU_REG, [39;49m[33;40mimm[39;49m[34;49m, iSize ) ; _Compile_X_Group1_Reg_To_Reg ( code, rm, THRU_REG ) ; } else { Compile_MoveImm_To_Reg  .. [39;49m[32;49m
0x7fbdaabbb132    498b47f0                mov rax, [r15-0x10]                                    [39;49m[32;49m
0x7fbdaabbb136    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabbb13a    498906                  mov [r14], rax                                         [39;49m
[34;49m .. mpile_MoveImm_To_Reg ( THRU_REG, imm, [39;49m[33;40miSize[39;49m[34;49m ) ; _Compile_X_Group1_Reg_To_Reg ( code, rm, THRU_REG ) ; } else { Compile_MoveImm_To_Reg ( ACC .. [39;49m[32;49m
0x7fbdaabbb13d    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaabbb141    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabbb145    498906                  mov [r14], rax                                         [39;49m
[34;49m .. x100000000 ) ) ) { if ( rm != DSP ) { [39;49m[33;40mCompile_MoveImm_To_Reg[39;49m[34;49m ( THRU_REG, imm, iSize ) ; _Compile_X_Group1_Reg_To_Reg ( code, rm, THRU_REG ) .. [39;49m[32;49m
0x7fbdaabbb148    49b969a4bbaabd7f0000    mov r9, 0x7fbdaabba469                                 [39;49m[32;49m
0x7fbdaabbb152    49ffd1                  call r9                    	< C_Syntax.[34;49mCompile_MoveImm_To_Reg[39;49m : 0x00007fbdaabba469[32;49m >[39;49m[39;49m
[34;49m .. ze ) ; _Compile_X_Group1_Reg_To_Reg ( [39;49m[33;40mcode[39;49m[34;49m, rm, THRU_REG ) ; } else { Compile_MoveImm_To_Reg ( ACC, imm, iSize ) ; _Compile_X_Group1 ( code .. [39;49m[32;49m
0x7fbdaabbb155    498b47d0                mov rax, [r15-0x30]                                    [39;49m[32;49m
0x7fbdaabbb159    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabbb15d    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  _Compile_X_Group1_Reg_To_Reg ( code, [39;49m[33;40mrm[39;49m[34;49m, THRU_REG ) ; } else { Compile_MoveImm_To_Reg ( ACC, imm, iSize ) ; _Compile_X_Group1 ( code, REG, .. [39;49m[32;49m
0x7fbdaabbb160    498b47e0                mov rax, [r15-0x20]                                    [39;49m[32;49m
0x7fbdaabbb164    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabbb168    498906                  mov [r14], rax                                         [39;49m
[34;49m .. mpile_X_Group1_Reg_To_Reg ( code, rm, [39;49m[33;40mTHRU_REG[39;49m[34;49m ) ; } else { Compile_MoveImm_To_Reg ( ACC, imm, iSize ) ; _Compile_X_Group1 ( code, REG, MEM .. [39;49m[32;49m
0x7fbdaabbb16b    48c7c009000000          mov rax, 0x9                                           [39;49m[32;49m
0x7fbdaabbb172    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabbb176    498906                  mov [r14], rax                                         [39;49m
[34;49m .. Imm_To_Reg ( THRU_REG, imm, iSize ) ; [39;49m[33;40m_Compile_X_Group1_Reg_To_Reg[39;49m[34;49m ( code, rm, THRU_REG ) ; } else { Compile_MoveImm_To_Reg ( ACC, imm, iSi .. [39;49m[32;49m
0x7fbdaabbb179    49b915b0bbaabd7f0000    mov r9, 0x7fbdaabbb015                                 [39;49m[32;49m
0x7fbdaabbb183    49ffd1                  call r9                    	< C_Syntax.[34;49m_Compile_X_Group1_Reg_To_Reg[39;49m : 0x00007fbdaabbb015[32;49m >[39;49m[39;49m
[34;49m .. 1_Reg_To_Reg ( code, rm, THRU_REG ) ; [39;49m[33;40m}[39;49m[34;49m else { Compile_MoveImm_To_Reg ( ACC, imm, iSize ) ; _Compile_X_Group1 ( code, REG, MEM, ACC, rm, 0, .. [39;49m[32;49m
0x7fbdaabbb186    e9a5000000              jmp 0x7fbdaabbb230         	< C_Syntax.[34;49m_Compile_X_Group1_Immediate[39;49m+390[32;49m >[39;49m[39;49m
[34;49m .. ) ; } else { Compile_MoveImm_To_Reg ( [39;49m[33;40mACC[39;49m[34;49m, imm, iSize ) ; _Compile_X_Group1 ( code, REG, MEM, ACC, rm, 0, disp, CELL ) ; } return ; } else  .. [39;49m[32;49m
0x7fbdaabbb18b    48c7c000000000          mov rax, 0x0                                           [39;49m[32;49m
0x7fbdaabbb192    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabbb196    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  else { Compile_MoveImm_To_Reg ( ACC, [39;49m[33;40mimm[39;49m[34;49m, iSize ) ; _Compile_X_Group1 ( code, REG, MEM, ACC, rm, 0, disp, CELL ) ; } return ; } else if (  .. [39;49m[32;49m
0x7fbdaabbb199    498b47f0                mov rax, [r15-0x10]                                    [39;49m[32;49m
0x7fbdaabbb19d    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabbb1a1    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  { Compile_MoveImm_To_Reg ( ACC, imm, [39;49m[33;40miSize[39;49m[34;49m ) ; _Compile_X_Group1 ( code, REG, MEM, ACC, rm, 0, disp, CELL ) ; } return ; } else if ( ( iSi .. [39;49m[32;49m
0x7fbdaabbb1a4    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaabbb1a8    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabbb1ac    498906                  mov [r14], rax                                         [39;49m
[34;49m .. Reg ( code, rm, THRU_REG ) ; } else { [39;49m[33;40mCompile_MoveImm_To_Reg[39;49m[34;49m ( ACC, imm, iSize ) ; _Compile_X_Group1 ( code, REG, MEM, ACC, rm, 0, disp, CE .. [39;49m[32;49m
0x7fbdaabbb1af    49b969a4bbaabd7f0000    mov r9, 0x7fbdaabba469                                 [39;49m[32;49m
0x7fbdaabbb1b9    49ffd1                  call r9                    	< C_Syntax.[34;49mCompile_MoveImm_To_Reg[39;49m : 0x00007fbdaabba469[32;49m >[39;49m[39;49m
[34;49m .. C, imm, iSize ) ; _Compile_X_Group1 ( [39;49m[33;40mcode[39;49m[34;49m, REG, MEM, ACC, rm, 0, disp, CELL ) ; } return ; } else if ( ( iSize > BYTE ) || (abs ( imm ) >= .. [39;49m[32;49m
0x7fbdaabbb1bc    498b47d0                mov rax, [r15-0x30]                                    [39;49m[32;49m
0x7fbdaabbb1c0    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabbb1c4    498906                  mov [r14], rax                                         [39;49m
[34;49m .. , iSize ) ; _Compile_X_Group1 ( code, [39;49m[33;40mREG[39;49m[34;49m, MEM, ACC, rm, 0, disp, CELL ) ; } return ; } else if ( ( iSize > BYTE ) || (abs ( imm ) >= 0x7f  .. [39;49m[32;49m
0x7fbdaabbb1c7    48c7c003000000          mov rax, 0x3                                           [39;49m[32;49m
0x7fbdaabbb1ce    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabbb1d2    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ze ) ; _Compile_X_Group1 ( code, REG, [39;49m[33;40mMEM[39;49m[34;49m, ACC, rm, 0, disp, CELL ) ; } return ; } else if ( ( iSize > BYTE ) || (abs ( imm ) >= 0x7f ) ) { .. [39;49m[32;49m
0x7fbdaabbb1d5    48c7c000000000          mov rax, 0x0                                           [39;49m[32;49m
0x7fbdaabbb1dc    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabbb1e0    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ; _Compile_X_Group1 ( code, REG, MEM, [39;49m[33;40mACC[39;49m[34;49m, rm, 0, disp, CELL ) ; } return ; } else if ( ( iSize > BYTE ) || (abs ( imm ) >= 0x7f ) ) { opCo .. [39;49m[32;49m
0x7fbdaabbb1e3    48c7c000000000          mov rax, 0x0                                           [39;49m[32;49m
0x7fbdaabbb1ea    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabbb1ee    498906                  mov [r14], rax                                         [39;49m
[34;49m .. mpile_X_Group1 ( code, REG, MEM, ACC, [39;49m[33;40mrm[39;49m[34;49m, 0, disp, CELL ) ; } return ; } else if ( ( iSize > BYTE ) || (abs ( imm ) >= 0x7f ) ) { opCode |= .. [39;49m[32;49m
0x7fbdaabbb1f1    498b47e0                mov rax, [r15-0x20]                                    [39;49m[32;49m
0x7fbdaabbb1f5    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabbb1f9    498906                  mov [r14], rax                                         [39;49m
[34;49m .. e_X_Group1 ( code, REG, MEM, ACC, rm, [39;49m[33;40m0[39;49m[34;49m, disp, CELL ) ; } return ; } else if ( ( iSize > BYTE ) || (abs ( imm ) >= 0x7f ) ) { opCode |= 1 ; .. [39;49m[32;49m
0x7fbdaabbb1fc    48c7c000000000          mov rax, 0x0                                           [39;49m[32;49m
0x7fbdaabbb203    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabbb207    498906                  mov [r14], rax                                         [39;49m
[34;49m .. _Group1 ( code, REG, MEM, ACC, rm, 0, [39;49m[33;40mdisp[39;49m[34;49m, CELL ) ; } return ; } else if ( ( iSize > BYTE ) || (abs ( imm ) >= 0x7f ) ) { opCode |= 1 ; }  .. [39;49m[32;49m
0x7fbdaabbb20a    498b47e8                mov rax, [r15-0x18]                                    [39;49m[32;49m
0x7fbdaabbb20e    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabbb212    498906                  mov [r14], rax                                         [39;49m
[34;49m .. 1 ( code, REG, MEM, ACC, rm, 0, disp, [39;49m[33;40mCELL[39;49m[34;49m ) ; } return ; } else if ( ( iSize > BYTE ) || (abs ( imm ) >= 0x7f ) ) { opCode |= 1 ; } else i .. [39;49m[32;49m
0x7fbdaabbb215    48c7c008000000          mov rax, 0x8                                           [39;49m[32;49m
0x7fbdaabbb21c    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabbb220    498906                  mov [r14], rax                                         [39;49m
[34;49m .. _MoveImm_To_Reg ( ACC, imm, iSize ) ; [39;49m[33;40m_Compile_X_Group1[39;49m[34;49m ( code, REG, MEM, ACC, rm, 0, disp, CELL ) ; } return ; } else if ( ( iSize > BYTE  .. [39;49m[32;49m
0x7fbdaabbb223    49b9e5adbbaabd7f0000    mov r9, 0x7fbdaabbade5                                 [39;49m[32;49m
0x7fbdaabbb22d    49ffd1                  call r9                    	< C_Syntax.[34;49m_Compile_X_Group1[39;49m : 0x00007fbdaabbade5[32;49m >[39;49m[39;49m
[34;49m .. ACC, rm, 0, disp, CELL ) ; } return ; [39;49m[33;40m}[39;49m[34;49m else if ( ( iSize > BYTE ) || (abs ( imm ) >= 0x7f ) ) { opCode |= 1 ; } else if ( ( iSize <= BYTE  .. [39;49m[32;49m
0x7fbdaabbb230    e903010000              jmp 0x7fbdaabbb338         	< C_Syntax.[34;49m_Compile_X_Group1_Immediate[39;49m+654[32;49m >[39;49m[39;49m
[34;49m .. sp, CELL ) ; } return ; } else if ( ( [39;49m[33;40miSize[39;49m[34;49m > BYTE ) || (abs ( imm ) >= 0x7f ) ) { opCode |= 1 ; } else if ( ( iSize <= BYTE ) || (abs ( im .. [39;49m[32;49m
0x7fbdaabbb235    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. LL ) ; } return ; } else if ( ( iSize [39;49m[33;40m>[39;49m[34;49m BYTE ) || (abs ( imm ) >= 0x7f ) ) { opCode |= 1 ; } else if ( ( iSize <= BYTE ) || (abs ( imm ) <  .. [39;49m[32;49m
0x7fbdaabbb239    4883f801                cmp rax, 0x1                                           [39;49m[32;49m
0x7fbdaabbb23d    0f9fc0                  setg al                                                [39;49m
[34;49m ..  ) ; } return ; } else if ( ( iSize > [39;49m[33;40mBYTE[39;49m[34;49m ) || (abs ( imm ) >= 0x7f ) ) { opCode |= 1 ; } else if ( ( iSize <= BYTE ) || (abs ( imm ) < 0x .. [39;49m[32;49m
0x7fbdaabbb240    480fb6c0                movzx rax, al                                          [39;49m[32;49m
0x7fbdaabbb244    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabbb248    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  else if ( ( iSize > BYTE ) || (abs ( [39;49m[33;40mimm[39;49m[34;49m ) >= 0x7f ) ) { opCode |= 1 ; } else if ( ( iSize <= BYTE ) || (abs ( imm ) < 0x100 ) ) opCode |= .. [39;49m[32;49m
0x7fbdaabbb24b    498b47f0                mov rax, [r15-0x10]                                    [39;49m
[34;49m .. imm >= 0x100000000 ) ) ) { if ( rm != [39;49m[33;40mDSP[39;49m[34;49m ) { Compile_MoveImm_To_Reg ( THRU_REG, imm, iSize ) ; _Compile_X_Group1_Reg_To_Reg ( code, rm, TH .. [39;49m[32;49m
0x7fbdaabbb24f    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabbb253    498906                  mov [r14], rax                                         [39;49m
[34;49m .. rn ; } else if ( ( iSize > BYTE ) || ([39;49m[33;40mabs[39;49m[34;49m ( imm ) >= 0x7f ) ) { opCode |= 1 ; } else if ( ( iSize <= BYTE ) || (abs ( imm ) < 0x100 ) ) opC .. [39;49m[32;49m
0x7fbdaabbb256    49b91590bbaabd7f0000    mov r9, 0x7fbdaabb9015                                 [39;49m[32;49m
0x7fbdaabbb260    49ffd1                  call r9                    	< C_Syntax.[34;49mabs[39;49m : 0x00007fbdaabb9015[32;49m >[39;49m[39;49m
[34;49m .. ( ( iSize > BYTE ) || (abs ( imm ) >= [39;49m[33;40m0x7f[39;49m[34;49m ) ) { opCode |= 1 ; } else if ( ( iSize <= BYTE ) || (abs ( imm ) < 0x100 ) ) opCode |= 3 ; Comp .. [39;49m[32;49m
0x7fbdaabbb263    48c7c07f000000          mov rax, 0x7f                                          [39;49m[32;49m
0x7fbdaabbb26a    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fbdaabbb26d    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fbdaabbb270    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m .. if ( ( iSize > BYTE ) || (abs ( imm ) [39;49m[33;40m>=[39;49m[34;49m 0x7f ) ) { opCode |= 1 ; } else if ( ( iSize <= BYTE ) || (abs ( imm ) < 0x100 ) ) opCode |= 3 ; C .. [39;49m[32;49m
0x7fbdaabbb274    483bc1                  cmp rax, rcx                                           [39;49m[32;49m
0x7fbdaabbb277    0f9dc0                  setge al                                               [39;49m[32;49m
0x7fbdaabbb27a    480fb6c0                movzx rax, al                                          [39;49m[32;49m
0x7fbdaabbb27e    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabbb282    498906                  mov [r14], rax                                         [39;49m
[34;49m .. Size > BYTE ) || (abs ( imm ) >= 0x7f [39;49m[33;40m)[39;49m[34;49m ) { opCode |= 1 ; } else if ( ( iSize <= BYTE ) || (abs ( imm ) < 0x100 ) ) opCode |= 3 ; Compile_C .. [39;49m[32;49m
0x7fbdaabbb285    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fbdaabbb288    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fbdaabbb28c    4983ee10                sub r14, 0x10                                          [39;49m[32;49m
0x7fbdaabbb290    480bc1                  or rax, rcx                                            [39;49m[32;49m
0x7fbdaabbb293    4885c0                  test rax, rax                                          [39;49m
[34;49m .. abs ( imm ) < 0x100 ) ) opCode |= 3 ; [39;49m[33;40m}[39;49m[34;49mompile_CalculateWrite_Instruction_X64 ( 0, opCode, mod, code, rm, REX_W | MODRM_B | IMM_B | DISP_B,  .. [39;49m[32;49m
0x7fbdaabbb296    4885c0                  test rax, rax                                          [39;49m[32;49m
0x7fbdaabbb299    0f841a000000            jz 0x7fbdaabbb2b9          	< C_Syntax.[34;49m_Compile_X_Group1_Immediate[39;49m+527[32;49m >[39;49m[39;49m[32;49m
0x7fbdaabbb29f    498d5f08                lea rbx, [r15+0x8]                                     [39;49m
[34;49m ..  BYTE ) || (abs ( imm ) >= 0x7f ) ) { [39;49m[33;40mopCode[39;49m[34;49m |= 1 ; } else if ( ( iSize <= BYTE ) || (abs ( imm ) < 0x100 ) ) opCode |= 3 ; Compile_Calcula .. [39;49m[32;49m
0x7fbdaabbb2a3    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m ..  (abs ( imm ) >= 0x7f ) ) { opCode |= [39;49m[33;40m1[39;49m[34;49m ; } else if ( ( iSize <= BYTE ) || (abs ( imm ) < 0x100 ) ) opCode |= 3 ; Compile_CalculateWrite_In .. [39;49m[32;49m
0x7fbdaabbb2a7    48c7c101000000          mov rcx, 0x1                                           [39;49m[32;49m
0x7fbdaabbb2ae    480bc1                  or rax, rcx                                            [39;49m
[34;49m ..  || (abs ( imm ) >= 0x7f ) ) { opCode [39;49m[33;40m|=[39;49m[34;49m 1 ; } else if ( ( iSize <= BYTE ) || (abs ( imm ) < 0x100 ) ) opCode |= 3 ; Compile_CalculateWrite .. [39;49m[32;49m
0x7fbdaabbb2b1    488903                  mov [rbx], rax                                         [39;49m
[34;49m .. s ( imm ) >= 0x7f ) ) { opCode |= 1 ; [39;49m[33;40m}[39;49m[34;49m else if ( ( iSize <= BYTE ) || (abs ( imm ) < 0x100 ) ) opCode |= 3 ; Compile_CalculateWrite_Instru .. [39;49m[32;49m
0x7fbdaabbb2b4    e97f000000              jmp 0x7fbdaabbb338         	< C_Syntax.[34;49m_Compile_X_Group1_Immediate[39;49m+654[32;49m >[39;49m[39;49m
[34;49m .. x7f ) ) { opCode |= 1 ; } else if ( ( [39;49m[33;40miSize[39;49m[34;49m <= BYTE ) || (abs ( imm ) < 0x100 ) ) opCode |= 3 ; Compile_CalculateWrite_Instruction_X64 ( 0, .. [39;49m[32;49m
0x7fbdaabbb2b9    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. ) { opCode |= 1 ; } else if ( ( iSize [39;49m[33;40m<=[39;49m[34;49m BYTE ) || (abs ( imm ) < 0x100 ) ) opCode |= 3 ; Compile_CalculateWrite_Instruction_X64 ( 0, opCod .. [39;49m[32;49m
0x7fbdaabbb2bd    4883f801                cmp rax, 0x1                                           [39;49m[32;49m
0x7fbdaabbb2c1    0f9ec0                  setle al                                               [39;49m
[34;49m ..  opCode |= 1 ; } else if ( ( iSize <= [39;49m[33;40mBYTE[39;49m[34;49m ) || (abs ( imm ) < 0x100 ) ) opCode |= 3 ; Compile_CalculateWrite_Instruction_X64 ( 0, opCode,  .. [39;49m[32;49m
0x7fbdaabbb2c4    480fb6c0                movzx rax, al                                          [39;49m
[34;49m ..  ) >= 0x7f ) ) { opCode |= 1 ; } else [39;49m[33;40m{[39;49m[34;49mf ( ( iSize <= BYTE ) || (abs ( imm ) < 0x100 ) ) opCode |= 3 ; Compile_CalculateWrite_Instruction_X .. [39;49m[32;49m
0x7fbdaabbb2c8    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabbb2cc    498906                  mov [r14], rax                                         [39;49m
[34;49m .. else if ( ( iSize <= BYTE ) || (abs ( [39;49m[33;40mimm[39;49m[34;49m ) < 0x100 ) ) opCode |= 3 ; Compile_CalculateWrite_Instruction_X64 ( 0, opCode, mod, code, rm, RE .. [39;49m[32;49m
0x7fbdaabbb2cf    498b47f0                mov rax, [r15-0x10]                                    [39;49m[32;49m
0x7fbdaabbb2d3    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabbb2d7    498906                  mov [r14], rax                                         [39;49m
[34;49m .. 1 ; } else if ( ( iSize <= BYTE ) || ([39;49m[33;40mabs[39;49m[34;49m ( imm ) < 0x100 ) ) opCode |= 3 ; Compile_CalculateWrite_Instruction_X64 ( 0, opCode, mod, code,  .. [39;49m[32;49m
0x7fbdaabbb2da    49b91590bbaabd7f0000    mov r9, 0x7fbdaabb9015                                 [39;49m[32;49m
0x7fbdaabbb2e4    49ffd1                  call r9                    	< C_Syntax.[34;49mabs[39;49m : 0x00007fbdaabb9015[32;49m >[39;49m[39;49m
[34;49m .. ( ( iSize <= BYTE ) || (abs ( imm ) < [39;49m[33;40m0x100[39;49m[34;49m ) ) opCode |= 3 ; Compile_CalculateWrite_Instruction_X64 ( 0, opCode, mod, code, rm, REX_W | MO .. [39;49m[32;49m
0x7fbdaabbb2e7    48c7c000010000          mov rax, 0x100                                         [39;49m[32;49m
0x7fbdaabbb2ee    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fbdaabbb2f1    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fbdaabbb2f4    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m .. f ( ( iSize <= BYTE ) || (abs ( imm ) [39;49m[33;40m<[39;49m[34;49m 0x100 ) ) opCode |= 3 ; Compile_CalculateWrite_Instruction_X64 ( 0, opCode, mod, code, rm, REX_W |  .. [39;49m[32;49m
0x7fbdaabbb2f8    483bc1                  cmp rax, rcx                                           [39;49m[32;49m
0x7fbdaabbb2fb    0f9cc0                  setl al                                                [39;49m[32;49m
0x7fbdaabbb2fe    480fb6c0                movzx rax, al                                          [39;49m[32;49m
0x7fbdaabbb302    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabbb306    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ize <= BYTE ) || (abs ( imm ) < 0x100 [39;49m[33;40m)[39;49m[34;49m ) opCode |= 3 ; Compile_CalculateWrite_Instruction_X64 ( 0, opCode, mod, code, rm, REX_W | MODRM_B  .. [39;49m[32;49m
0x7fbdaabbb309    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fbdaabbb30c    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fbdaabbb310    4983ee10                sub r14, 0x10                                          [39;49m[32;49m
0x7fbdaabbb314    480bc1                  or rax, rcx                                            [39;49m[32;49m
0x7fbdaabbb317    4885c0                  test rax, rax                                          [39;49m
[34;49m ..  (abs ( imm ) < 0x100 ) ) opCode |= 3 [39;49m[33;40m;[39;49m[34;49m Compile_CalculateWrite_Instruction_X64 ( 0, opCode, mod, code, rm, REX_W | MODRM_B | IMM_B | DISP_B .. [39;49m[32;49m
0x7fbdaabbb31a    4885c0                  test rax, rax                                          [39;49m[32;49m
0x7fbdaabbb31d    0f8415000000            jz 0x7fbdaabbb338          	< C_Syntax.[34;49m_Compile_X_Group1_Immediate[39;49m+654[32;49m >[39;49m[39;49m[32;49m
0x7fbdaabbb323    498d5f08                lea rbx, [r15+0x8]                                     [39;49m
[34;49m .. <= BYTE ) || (abs ( imm ) < 0x100 ) ) [39;49m[33;40mopCode[39;49m[34;49m |= 3 ; Compile_CalculateWrite_Instruction_X64 ( 0, opCode, mod, code, rm, REX_W | MODRM_B | IM .. [39;49m[32;49m
0x7fbdaabbb327    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m .. || (abs ( imm ) < 0x100 ) ) opCode |= [39;49m[33;40m3[39;49m[34;49m ; Compile_CalculateWrite_Instruction_X64 ( 0, opCode, mod, code, rm, REX_W | MODRM_B | IMM_B | DISP .. [39;49m[32;49m
0x7fbdaabbb32b    48c7c103000000          mov rcx, 0x3                                           [39;49m[32;49m
0x7fbdaabbb332    480bc1                  or rax, rcx                                            [39;49m
[34;49m ..  ) || (abs ( imm ) < 0x100 ) ) opCode [39;49m[33;40m|=[39;49m[34;49m 3 ; Compile_CalculateWrite_Instruction_X64 ( 0, opCode, mod, code, rm, REX_W | MODRM_B | IMM_B | D .. [39;49m[32;49m
0x7fbdaabbb335    488903                  mov [rbx], rax                                         [39;49m
[34;49m .. pile_CalculateWrite_Instruction_X64 ( [39;49m[33;40m0[39;49m[34;49m, opCode, mod, code, rm, REX_W | MODRM_B | IMM_B | DISP_B, 0, disp, 0, imm, iSize ) ; }  .. [39;49m[32;49m
0x7fbdaabbb338    48c7c000000000          mov rax, 0x0                                           [39;49m[32;49m
0x7fbdaabbb33f    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabbb343    498906                  mov [r14], rax                                         [39;49m
[34;49m .. e_CalculateWrite_Instruction_X64 ( 0, [39;49m[33;40mopCode[39;49m[34;49m, mod, code, rm, REX_W | MODRM_B | IMM_B | DISP_B, 0, disp, 0, imm, iSize ) ; }  .. [39;49m[32;49m
0x7fbdaabbb346    498b4708                mov rax, [r15+0x8]                                     [39;49m[32;49m
0x7fbdaabbb34a    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabbb34e    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ateWrite_Instruction_X64 ( 0, opCode, [39;49m[33;40mmod[39;49m[34;49m, code, rm, REX_W | MODRM_B | IMM_B | DISP_B, 0, disp, 0, imm, iSize ) ; }  .. [39;49m[32;49m
0x7fbdaabbb351    498b47d8                mov rax, [r15-0x28]                                    [39;49m[32;49m
0x7fbdaabbb355    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabbb359    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ite_Instruction_X64 ( 0, opCode, mod, [39;49m[33;40mcode[39;49m[34;49m, rm, REX_W | MODRM_B | IMM_B | DISP_B, 0, disp, 0, imm, iSize ) ; }  .. [39;49m[32;49m
0x7fbdaabbb35c    498b47d0                mov rax, [r15-0x30]                                    [39;49m[32;49m
0x7fbdaabbb360    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabbb364    498906                  mov [r14], rax                                         [39;49m
[34;49m .. struction_X64 ( 0, opCode, mod, code, [39;49m[33;40mrm[39;49m[34;49m, REX_W | MODRM_B | IMM_B | DISP_B, 0, disp, 0, imm, iSize ) ; }  .. [39;49m[32;49m
0x7fbdaabbb367    498b47e0                mov rax, [r15-0x20]                                    [39;49m[32;49m
0x7fbdaabbb36b    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabbb36f    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ction_X64 ( 0, opCode, mod, code, rm, [39;49m[33;40mREX_W[39;49m[34;49m | MODRM_B | IMM_B | DISP_B, 0, disp, 0, imm, iSize ) ; }  .. [39;49m[32;49m
0x7fbdaabbb372    48c7c022000000          mov rax, 0x22                                          [39;49m
[34;49m .. ode, mod, code, rm, REX_W | MODRM_B | [39;49m[33;40mIMM_B[39;49m[34;49m | DISP_B, 0, disp, 0, imm, iSize ) ; }  .. [39;49m[32;49m
0x7fbdaabbb379    48c7c110000000          mov rcx, 0x10                                          [39;49m
[34;49m .. pCode, mod, code, rm, REX_W | MODRM_B [39;49m[33;40m|[39;49m[34;49m IMM_B | DISP_B, 0, disp, 0, imm, iSize ) ; }  .. [39;49m[32;49m
0x7fbdaabbb380    480bc1                  or rax, rcx                                            [39;49m
[34;49m .. , code, rm, REX_W | MODRM_B | IMM_B | [39;49m[33;40mDISP_B[39;49m[34;49m, 0, disp, 0, imm, iSize ) ; }  .. [39;49m[32;49m
0x7fbdaabbb383    48c7c108000000          mov rcx, 0x8                                           [39;49m
[34;49m .. od, code, rm, REX_W | MODRM_B | IMM_B [39;49m[33;40m|[39;49m[34;49m DISP_B, 0, disp, 0, imm, iSize ) ; }  .. [39;49m[32;49m
0x7fbdaabbb38a    480bc1                  or rax, rcx                                            [39;49m[32;49m
0x7fbdaabbb38d    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabbb391    498906                  mov [r14], rax                                         [39;49m
[34;49m .. rm, REX_W | MODRM_B | IMM_B | DISP_B, [39;49m[33;40m0[39;49m[34;49m, disp, 0, imm, iSize ) ; }  .. [39;49m[32;49m
0x7fbdaabbb394    48c7c000000000          mov rax, 0x0                                           [39;49m[32;49m
0x7fbdaabbb39b    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabbb39f    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  REX_W | MODRM_B | IMM_B | DISP_B, 0, [39;49m[33;40mdisp[39;49m[34;49m, 0, imm, iSize ) ; }  .. [39;49m[32;49m
0x7fbdaabbb3a2    498b47e8                mov rax, [r15-0x18]                                    [39;49m[32;49m
0x7fbdaabbb3a6    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabbb3aa    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  | MODRM_B | IMM_B | DISP_B, 0, disp, [39;49m[33;40m0[39;49m[34;49m, imm, iSize ) ; }  .. [39;49m[32;49m
0x7fbdaabbb3ad    48c7c000000000          mov rax, 0x0                                           [39;49m[32;49m
0x7fbdaabbb3b4    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabbb3b8    498906                  mov [r14], rax                                         [39;49m
[34;49m .. MODRM_B | IMM_B | DISP_B, 0, disp, 0, [39;49m[33;40mimm[39;49m[34;49m, iSize ) ; }  .. [39;49m[32;49m
0x7fbdaabbb3bb    498b47f0                mov rax, [r15-0x10]                                    [39;49m[32;49m
0x7fbdaabbb3bf    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabbb3c3    498906                  mov [r14], rax                                         [39;49m
[34;49m .. _B | IMM_B | DISP_B, 0, disp, 0, imm, [39;49m[33;40miSize[39;49m[34;49m ) ; }  .. [39;49m[32;49m
0x7fbdaabbb3c6    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaabbb3ca    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabbb3ce    498906                  mov [r14], rax                                         [39;49m
[34;49m .. abs ( imm ) < 0x100 ) ) opCode |= 3 ; [39;49m[33;40mCompile_CalculateWrite_Instruction_X64[39;49m[34;49m ( 0, opCode, mod, code, rm, REX_W | MODRM_B | IMM_B | DISP_B,  .. [39;49m[32;49m
0x7fbdaabbb3d1    49b95d99bbaabd7f0000    mov r9, 0x7fbdaabb995d                                 [39;49m[32;49m
0x7fbdaabbb3db    49ffd1                  call r9                    	< C_Syntax.[34;49mCompile_CalculateWrite_Instruction_X64[39;49m : 0x00007fbdaabb995d[32;49m >[39;49m[39;49m
[34;49m ..  | DISP_B, 0, disp, 0, imm, iSize ) ; [39;49m[33;40m}[39;49m[34;49m  .. [39;49m[32;49m
0x7fbdaabbb3de    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaabbb3e2    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaabbb3e6    4983ee30                sub r14, 0x30                                          [39;49m[32;49m
0x7fbdaabbb3ea    c3                      ret                                                    [39;49m
Word_Disassemble : word - '_Compile_X_Group1_Immediate' :: codeSize = 832
Word : 0x00007fbda7b7ca80 :: Compiled at : 0x00007fbdaabbb0aa
 =============================
::> 'wdiss' was called at namespaces/compiler/x64.csl 668.32 <::

 =============================
C_Syntax.[34;49m_Compile_Stack_PopToReg[39;49m <:> csl compiled word, prefix
SourceCode for C_Syntax.[34;49m_Compile_Stack_PopToReg[39;49m :> 
[34;49m: _Compile_Stack_PopToReg ( reg ) _Compile_Move_DataStackN_ToReg ( reg, 0 ) _Compile_SUBI_DSP ( CELL ) ;; [39;49m
Source code file location of [34;49m_Compile_Stack_PopToReg[39;49m : "namespaces/compiler/x64.csl" : 731.2 :: we are now at : namespaces/compiler/x64.csl : 738.36
Compiled with : optimizeOn, inlineOn, infixOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xaabbb9ef -- code size = 93 bytes
TypeSignature : 
 -----------------------------
Word :: C_Syntax.[34;49m_Compile_Stack_PopToReg[39;49m : definition = 0x00007fbdaabbb9ef : disassembly at namespaces/compiler/x64.csl : 738.36 :
[34;49m ..                                     : [39;49m[33;40m_Compile_Stack_PopToReg[39;49m[34;49m ( reg )  _Compile_Move_DataStackN_ToReg ( reg, 0 ) _Compile_SUBI_DSP ( CELL ) .. [39;49m[32;49m
0x7fbdaabbb9ef    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fbdaabbb9f3    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaabbb9f7    4981c608000000          add r14, 0x8                                           [39;49m
[34;49m .. g )  _Compile_Move_DataStackN_ToReg ( [39;49m[33;40mreg[39;49m[34;49m, 0 ) _Compile_SUBI_DSP ( CELL ) ;; [39;49m[32;49m
0x7fbdaabbb9fe    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaabbba02    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabbba06    498906                  mov [r14], rax                                         [39;49m
[34;49m .. _Compile_Move_DataStackN_ToReg ( reg, [39;49m[33;40m0[39;49m[34;49m ) _Compile_SUBI_DSP ( CELL ) ;; [39;49m[32;49m
0x7fbdaabbba09    48c7c000000000          mov rax, 0x0                                           [39;49m[32;49m
0x7fbdaabbba10    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabbba14    498906                  mov [r14], rax                                         [39;49m
[34;49m ..    : _Compile_Stack_PopToReg ( reg )  [39;49m[33;40m_Compile_Move_DataStackN_ToReg[39;49m[34;49m ( reg, 0 ) _Compile_SUBI_DSP ( CELL ) ;;  .. [39;49m[32;49m
0x7fbdaabbba17    49b930b9bbaabd7f0000    mov r9, 0x7fbdaabbb930                                 [39;49m[32;49m
0x7fbdaabbba21    49ffd1                  call r9                    	< C_Syntax.[34;49m_Compile_Move_DataStackN_ToReg[39;49m : 0x00007fbdaabbb930[32;49m >[39;49m[39;49m
[34;49m .. _ToReg ( reg, 0 ) _Compile_SUBI_DSP ( [39;49m[33;40mCELL[39;49m[34;49m ) ;; [39;49m[32;49m
0x7fbdaabbba24    48c7c008000000          mov rax, 0x8                                           [39;49m[32;49m
0x7fbdaabbba2b    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabbba2f    498906                  mov [r14], rax                                         [39;49m
[34;49m .. pile_Move_DataStackN_ToReg ( reg, 0 ) [39;49m[33;40m_Compile_SUBI_DSP[39;49m[34;49m ( CELL ) ;; [39;49m[32;49m
0x7fbdaabbba32    49b924b6bbaabd7f0000    mov r9, 0x7fbdaabbb624                                 [39;49m[32;49m
0x7fbdaabbba3c    49ffd1                  call r9                    	< C_Syntax.[34;49m_Compile_SUBI_DSP[39;49m : 0x00007fbdaabbb624[32;49m >[39;49m[39;49m
[34;49m .. ( reg, 0 ) _Compile_SUBI_DSP ( CELL ) [39;49m[33;40m;;[39;49m[34;49m [39;49m[32;49m
0x7fbdaabbba3f    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaabbba43    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaabbba47    4983ee08                sub r14, 0x8                                           [39;49m[32;49m
0x7fbdaabbba4b    c3                      ret                                                    [39;49m
Word_Disassemble : word - '_Compile_Stack_PopToReg' :: codeSize = 92
Word : 0x00007fbda7b912e0 :: Compiled at : 0x00007fbdaabbb9ef
 =============================
::> 'wdiss' was called at namespaces/compiler/x64.csl 738.36 <::

 =============================
Combinators.[34;49miax[39;49m <:> csl compiled word
SourceCode for Combinators.[34;49miax[39;49m :> 
[34;49masm: iax _Compile_Stack_PopToReg ( R8D ) _Compile_CallThruReg ( R8D ) ;asm [39;49m
Source code file location of [34;49miax[39;49m : "namespaces/compiler/x64.csl" : 746.5 :: we are now at : namespaces/compiler/x64.csl : 753.17
Compiled with : optimizeOn, inlineOn, infixOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xaabbba60 -- code size = 11 bytes
 -----------------------------
Word :: Combinators.[34;49miax[39;49m : definition = 0x00007fbdaabbba60 : disassembly at namespaces/compiler/x64.csl : 753.17 :
[34;49m ..                              asm: iax [39;49m[33;40m_Compile_Stack_PopToReg[39;49m[34;49m ( R8D ) _Compile_CallThruReg ( R8D ) ;asm  .. [39;49m[32;49m
0x7fbdaabbba60    4d8b06                  mov r8, [r14]                                          [39;49m[32;49m
0x7fbdaabbba63    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m asm: iax _Compile_Stack_PopToReg ( R8D ) [39;49m[33;40m_Compile_CallThruReg[39;49m[34;49m ( R8D ) ;asm  .. [39;49m[32;49m
0x7fbdaabbba67    41ffd0                  call r8                                                [39;49m
[34;49m ..  ( R8D ) _Compile_CallThruReg ( R8D ) [39;49m[33;40m;asm[39;49m[34;49m [39;49m[32;49m
0x7fbdaabbba6a    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'iax' :: codeSize = 10
Word : 0x00007fbda7b91f58 :: Compiled at : 0x00007fbdaabbba60
 =============================
::> 'wdiss' was called at namespaces/compiler/x64.csl 753.17 <::

 =============================
User.[34;49mqeval[39;49m <:> csl compiled word
SourceCode for User.[34;49mqeval[39;49m :> 
[34;49m: qeval stk iax ; [39;49m
Source code file location of [34;49mqeval[39;49m : "namespaces/compiler/x64.csl" : 776.2 :: we are now at : namespaces/compiler/x64.csl : 779.19
Compiled with : optimizeOn, inlineOn, infixOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xaabbbd46 -- code size = 27 bytes
 -----------------------------
Word :: User.[34;49mqeval[39;49m : definition = 0x00007fbdaabbbd46 : disassembly at namespaces/compiler/x64.csl : 779.19 :
[34;49m ..                               : qeval [39;49m[33;40mstk[39;49m[34;49m iax ;  .. [39;49m[32;49m
0x7fbdaabbbd46    49b92276d5aabd7f0000    mov r9, 0x7fbdaad57622                                 [39;49m[32;49m
0x7fbdaabbbd50    49ffd1                  call r9                    	< System.[34;49mstk[39;49m : 0x00007fbdaad57622[32;49m >[39;49m[39;49m
[34;49m ..                           : qeval stk [39;49m[33;40miax[39;49m[34;49m ;  .. [39;49m[32;49m
0x7fbdaabbbd53    49b960babbaabd7f0000    mov r9, 0x7fbdaabbba60                                 [39;49m[32;49m
0x7fbdaabbbd5d    49ffd1                  call r9                    	< Combinators.[34;49miax[39;49m : 0x00007fbdaabbba60[32;49m >[39;49m[39;49m
[34;49m ..                       : qeval stk iax [39;49m[33;40m;[39;49m[34;49m  .. [39;49m[32;49m
0x7fbdaabbbd60    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'qeval' :: codeSize = 26
Word : 0x00007fbda7b978c0 :: Compiled at : 0x00007fbdaabbbd46
 =============================
::> 'wdiss' was called at namespaces/compiler/x64.csl 779.19 <::

 =============================
User.[34;49mstest[39;49m <:> csl compiled word
SourceCode for User.[34;49mstest[39;49m :> 
[34;49masm: stest _Compile_MoveTOS_To_R8D ( ) _Compile_Move_DataStackN_ToReg ( R8D, 0 ) Compile_Stack_Push_R8D ( ) _Compile_SUBI_DSP ( CELL ) ;asm [39;49m
Source code file location of [34;49mstest[39;49m : "namespaces/compiler/x64.csl" : 782.5 :: we are now at : namespaces/compiler/x64.csl : 789.19
Compiled with : optimizeOn, inlineOn, infixOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xaabbbd75 -- code size = 18 bytes
 -----------------------------
Word :: User.[34;49mstest[39;49m : definition = 0x00007fbdaabbbd75 : disassembly at namespaces/compiler/x64.csl : 789.19 :
[34;49m ..                            asm: stest [39;49m[33;40m_Compile_MoveTOS_To_R8D[39;49m[34;49m ( )  _Compile_Move_DataStackN_ToReg ( R8D, 0 )  Compile_Stack_Push_R8D ( )  _ .. [39;49m[32;49m
0x7fbdaabbbd75    4d8b06                  mov r8, [r14]                                          [39;49m
[34;49m  asm: stest _Compile_MoveTOS_To_R8D ( )  [39;49m[33;40m_Compile_Move_DataStackN_ToReg[39;49m[34;49m ( R8D, 0 )  Compile_Stack_Push_R8D ( )  _Compile_SUBI_DSP ( CELL )  ;a .. [39;49m[32;49m
0x7fbdaabbbd78    4d8b06                  mov r8, [r14]                                          [39;49m
[34;49m .. ile_Move_DataStackN_ToReg ( R8D, 0 )  [39;49m[33;40mCompile_Stack_Push_R8D[39;49m[34;49m ( )  _Compile_SUBI_DSP ( CELL )  ;asm [39;49m[32;49m
0x7fbdaabbbd7b    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabbbd7f    4d8906                  mov [r14], r8                                          [39;49m
[34;49m .. R8D, 0 )  Compile_Stack_Push_R8D ( )  [39;49m[33;40m_Compile_SUBI_DSP[39;49m[34;49m ( CELL )  ;asm [39;49m[32;49m
0x7fbdaabbbd82    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m .. _R8D ( )  _Compile_SUBI_DSP ( CELL )  [39;49m[33;40m;asm[39;49m[34;49m [39;49m[32;49m
0x7fbdaabbbd86    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'stest' :: codeSize = 17
Word : 0x00007fbda7b97fa0 :: Compiled at : 0x00007fbdaabbbd75
 =============================
::> 'wdiss' was called at namespaces/compiler/x64.csl 789.19 <::
 
this is some purposefully funky code for testing

DataStack at : [34;49mnamespaces/compiler/x64.csl : 793.2[39;49m :
DataStack depth =   3 : Dsp (R14) = Top = 0x00007fbdab0efa58, InitialTos = 0x00007fbdab0efa40, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fbdab0efa58 > = 0x0000000000000005	
  DataStack   [  -1 ] < 0x00007fbdab0efa50 > = 0x0000000000000005	
  DataStack   [  -2 ] < 0x00007fbdab0efa48 > = 0x0000000000000005	

 x64 test ok
 =============================
Stack.[34;49mndup[39;49m <:> csl compiled word
SourceCode for Stack.[34;49mndup[39;49m :> 
[34;49masm: ndup _Compile_MoveTOS_To_R8D ( ) _Compile_SUBI_DSP ( CELL ) _Compile_Move_DataStackN_ToReg ( R9D, 0 ) "start" label _Compile_TESTreg_Toreg ( R8D, R8D ) "end" 0 EQ jcc _Compile_ADDI_DSP ( CELL ) _Compile_MoveReg_To_StackN ( DSP, 0, R9D ) _Compile_IncDecreg ( DEC, R8D ) "start" goto "end" label ;asm [39;49m
Source code file location of [34;49mndup[39;49m : "namespaces/compiler/x64.csl" : 798.5 :: we are now at : namespaces/compiler/x64.csl : 812.18
Compiled with : optimizeOn, inlineOn, infixOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xaabbbd9b -- code size = 35 bytes
 -----------------------------
Word :: Stack.[34;49mndup[39;49m : definition = 0x00007fbdaabbbd9b : disassembly at namespaces/compiler/x64.csl : 812.18 :
[34;49m ..                             asm: ndup [39;49m[33;40m_Compile_MoveTOS_To_R8D[39;49m[34;49m ( ) _Compile_SUBI_DSP ( CELL )  _Compile_Move_DataStackN_ToReg ( R9D, 0 ) "st .. [39;49m[32;49m
0x7fbdaabbbd9b    4d8b06                  mov r8, [r14]                                          [39;49m
[34;49m .. asm: ndup _Compile_MoveTOS_To_R8D ( ) [39;49m[33;40m_Compile_SUBI_DSP[39;49m[34;49m ( CELL )  _Compile_Move_DataStackN_ToReg ( R9D, 0 ) "start" label  _Compile_TESTreg .. [39;49m[32;49m
0x7fbdaabbbd9e    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m .. o_R8D ( ) _Compile_SUBI_DSP ( CELL )  [39;49m[33;40m_Compile_Move_DataStackN_ToReg[39;49m[34;49m ( R9D, 0 ) "start" label  _Compile_TESTreg_Toreg ( R8D, R8D ) "end" 0  .. [39;49m[32;49m
0x7fbdaabbbda2    4d8b0e                  mov r9, [r14]                                          [39;49m
[34;49m .. tackN_ToReg ( R9D, 0 ) "start" label  [39;49m[33;40m_Compile_TESTreg_Toreg[39;49m[34;49m ( R8D, R8D ) "end" 0 EQ jcc _Compile_ADDI_DSP ( CELL )  _Compile_MoveReg_To_St .. [39;49m[32;49m
0x7fbdaabbbda5    4585c0                  test r8d, r8d                                          [39;49m
[34;49m .. TESTreg_Toreg ( R8D, R8D ) "end" 0 EQ [39;49m[33;40mjcc[39;49m[34;49m _Compile_ADDI_DSP ( CELL )  _Compile_MoveReg_To_StackN ( DSP, 0, R9D )  _Compile_IncDecreg ( DEC, .. [39;49m[32;49m
0x7fbdaabbbda8    0f840f000000            jz 0x7fbdaabbbdbd          	< Stack.[34;49mndup[39;49m+34[32;49m >[39;49m[39;49m
[34;49m .. reg_Toreg ( R8D, R8D ) "end" 0 EQ jcc [39;49m[33;40m_Compile_ADDI_DSP[39;49m[34;49m ( CELL )  _Compile_MoveReg_To_StackN ( DSP, 0, R9D )  _Compile_IncDecreg ( DEC, R8D .. [39;49m[32;49m
0x7fbdaabbbdae    4983c608                add r14, 0x8                                           [39;49m
[34;49m ..  0 EQ jcc _Compile_ADDI_DSP ( CELL )  [39;49m[33;40m_Compile_MoveReg_To_StackN[39;49m[34;49m ( DSP, 0, R9D )  _Compile_IncDecreg ( DEC, R8D )  "start" goto "end" label .. [39;49m[32;49m
0x7fbdaabbbdb2    4d890e                  mov [r14], r9                                          [39;49m
[34;49m .. le_MoveReg_To_StackN ( DSP, 0, R9D )  [39;49m[33;40m_Compile_IncDecreg[39;49m[34;49m ( DEC, R8D )  "start" goto "end" label ;asm  .. [39;49m[32;49m
0x7fbdaabbbdb5    41ffc8                  dec r8d                                                [39;49m
[34;49m .. mpile_IncDecreg ( DEC, R8D )  "start" [39;49m[33;40mgoto[39;49m[34;49m "end" label ;asm  .. [39;49m[32;49m
0x7fbdaabbbdb8    e9e8ffffff              jmp 0x7fbdaabbbda5         	< Stack.[34;49mndup[39;49m+10[32;49m >[39;49m[39;49m
[34;49m ..  DEC, R8D )  "start" goto "end" label [39;49m[33;40m;asm[39;49m[34;49m  .. [39;49m[32;49m
0x7fbdaabbbdbd    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'ndup' :: codeSize = 34
Word : 0x00007fbda7b989f0 :: Compiled at : 0x00007fbdaabbbd9b
 =============================
::> 'wdiss' was called at namespaces/compiler/x64.csl 812.18 <::

DataStack at : [34;49mnamespaces/compiler/x64.csl : 813.2[39;49m :
DataStack depth =   3 : Dsp (R14) = Top = 0x00007fbdab0efa58, InitialTos = 0x00007fbdab0efa40, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fbdab0efa58 > = 0x0000000000000005	
  DataStack   [  -1 ] < 0x00007fbdab0efa50 > = 0x0000000000000005	
  DataStack   [  -2 ] < 0x00007fbdab0efa48 > = 0x0000000000000005	

DataStack at : [34;49mnamespaces/compiler/x64.csl : 813.13[39;49m :
DataStack depth =  11 : Dsp (R14) = Top = 0x00007fbdab0efa98, InitialTos = 0x00007fbdab0efa40, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fbdab0efa98 > = 0x0000000000000007	
  DataStack   [  -1 ] < 0x00007fbdab0efa90 > = 0x0000000000000007	
  DataStack   [  -2 ] < 0x00007fbdab0efa88 > = 0x0000000000000007	
  DataStack   [  -3 ] < 0x00007fbdab0efa80 > = 0x0000000000000007	
  DataStack   [  -4 ] < 0x00007fbdab0efa78 > = 0x0000000000000007	
  DataStack   [  -5 ] < 0x00007fbdab0efa70 > = 0x0000000000000007	
  DataStack   [  -6 ] < 0x00007fbdab0efa68 > = 0x0000000000000007	
  DataStack   [  -7 ] < 0x00007fbdab0efa60 > = 0x0000000000000007	
  DataStack   [  -8 ] < 0x00007fbdab0efa58 > = 0x0000000000000005	
  DataStack   [  -9 ] < 0x00007fbdab0efa50 > = 0x0000000000000005	
  DataStack   [ -10 ] < 0x00007fbdab0efa48 > = 0x0000000000000005	

DataStack at : [34;49mnamespaces/compiler/x64.csl : 813.23[39;49m :
DataStack depth =   3 : Dsp (R14) = Top = 0x00007fbdab0efa58, InitialTos = 0x00007fbdab0efa40, Size = 0x0000000000002000
  DataStack   [   0 ] < 0x00007fbdab0efa58 > = 0x0000000000000005	
  DataStack   [  -1 ] < 0x00007fbdab0efa50 > = 0x0000000000000005	
  DataStack   [  -2 ] < 0x00007fbdab0efa48 > = 0x0000000000000005	

 =============================
Asm.[34;49mtestAsm[39;49m <:> csl compiled word
SourceCode for Asm.[34;49mtestAsm[39;49m :> 
[34;49masm: testAsm MOVrr RDX RAX MOVrr RAX RBX MOVrr RBX RAX MOVrr RAX RDX ;asm [39;49m
Source code file location of [34;49mtestAsm[39;49m : "namespaces/compiler/x64.csl" : 858.5 :: we are now at : namespaces/compiler/x64.csl : 864.12
Compiled with : optimizeOn, inlineOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xaabbc02c -- code size = 13 bytes
 -----------------------------
Word :: Asm.[34;49mtestAsm[39;49m : definition = 0x00007fbdaabbc02c : disassembly at namespaces/compiler/x64.csl : 864.12 :
[34;49m ..                          asm: testAsm [39;49m[33;40mMOVrr[39;49m[34;49m RDX RAX  MOVrr RAX RBX  MOVrr RBX RAX  MOVrr RAX RDX  ;asm  .. [39;49m[32;49m
0x7fbdaabbc02c    488bd0                  mov rdx, rax                                           [39;49m
[34;49m ..           asm: testAsm MOVrr RDX RAX  [39;49m[33;40mMOVrr[39;49m[34;49m RAX RBX  MOVrr RBX RAX  MOVrr RAX RDX  ;asm  .. [39;49m[32;49m
0x7fbdaabbc02f    488bc3                  mov rax, rbx                                           [39;49m
[34;49m .. testAsm MOVrr RDX RAX  MOVrr RAX RBX  [39;49m[33;40mMOVrr[39;49m[34;49m RBX RAX  MOVrr RAX RDX  ;asm [39;49m[32;49m
0x7fbdaabbc032    488bd8                  mov rbx, rax                                           [39;49m
[34;49m .. DX RAX  MOVrr RAX RBX  MOVrr RBX RAX  [39;49m[33;40mMOVrr[39;49m[34;49m RAX RDX  ;asm [39;49m[32;49m
0x7fbdaabbc035    488bc2                  mov rax, rdx                                           [39;49m
[34;49m .. AX RBX  MOVrr RBX RAX  MOVrr RAX RDX  [39;49m[33;40m;asm[39;49m[34;49m [39;49m[32;49m
0x7fbdaabbc038    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'testAsm' :: codeSize = 12
Word : 0x00007fbda7b9fa90 :: Compiled at : 0x00007fbdaabbc02c
 =============================
::> 'wdiss' was called at namespaces/compiler/x64.csl 864.12 <::

 _TestDone_ = 1
 5040
 =============================
C_Syntax.[34;49mfactoriali[39;49m <:> csl compiled word, prefix
SourceCode for C_Syntax.[34;49mfactoriali[39;49m :> 
[34;49mint factoriali ( byte REG n | REG res ) { res = 1; while ( n >= 2 ) { res = res * (n--) ; } return res; } [39;49m
Source code file location of [34;49mfactoriali[39;49m : "namespaces/test/dev.csl" : 21.15 :: we are now at : namespaces/test/dev.csl : 39.23
Compiled with : optimizeOn, inlineOn, c_syntaxOn, infixOn, Jcc8 on
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xaabbc0d7 -- code size = 29 bytes
TypeSignature : 
 -----------------------------
Word :: C_Syntax.[34;49mfactoriali[39;49m : definition = 0x00007fbdaabbc0d7 : disassembly at namespaces/test/dev.csl : 39.23 :
[34;49m ..                                   int [39;49m[33;40mfactoriali[39;49m[34;49m ( byte REG n | REG res ) { res = 1; while ( n >= 2 ) { res = res * (n--) ; } return res; } .. [39;49m[32;49m
0x7fbdaabbc0d7    498b3e                  mov rdi, [r14]                                         [39;49m
[34;49m .. iali ( byte REG n | REG res ) { res = [39;49m[33;40m1[39;49m[34;49m; while ( n >= 2 ) { res = res * (n--) ; } return res; } [39;49m[32;49m
0x7fbdaabbc0da    48c7c601000000          mov rsi, 0x1                                           [39;49m
[34;49m .. EG n | REG res ) { res = 1; while ( n [39;49m[33;40m>=[39;49m[34;49m 2 ) { res = res * (n--) ; } return res; } [39;49m[32;49m
0x7fbdaabbc0e1    4883ff02                cmp rdi, 0x2                                           [39;49m[32;49m
0x7fbdaabbc0e5    7c09                    jl 0xaabbc0f0                                          [39;49m
[34;49m .. res = 1; while ( n >= 2 ) { res = res [39;49m[33;40m*[39;49m[34;49m (n--) ; } return res; } [39;49m[32;49m
0x7fbdaabbc0e7    480faff7                imul rsi, rdi                                          [39;49m
[34;49m .. = 1; while ( n >= 2 ) { res = res * (n[39;49m[33;40m--[39;49m[34;49m) ; } return res; } [39;49m[32;49m
0x7fbdaabbc0eb    48ffcf                  dec rdi                                                [39;49m
[34;49m .. hile ( n >= 2 ) { res = res * (n--) ; [39;49m[33;40m}[39;49m[34;49m return res; } [39;49m[32;49m
0x7fbdaabbc0ee    ebf1                    jmp 0x7fbdaabbc0e1         	< C_Syntax.[34;49mfactoriali[39;49m+10[32;49m >[39;49m[39;49m
[34;49m .. >= 2 ) { res = res * (n--) ; } return [39;49m[33;40mres[39;49m[34;49m; } [39;49m[32;49m
0x7fbdaabbc0f0    498936                  mov [r14], rsi                                         [39;49m[32;49m
0x7fbdaabbc0f3    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'factoriali' :: codeSize = 28
Word : 0x00007fbdaacff400 :: Compiled at : 0x00007fbdaabbc0d7
 =============================
::> 'wdiss' was called at namespaces/test/dev.csl 39.23 <::
 5040 5040 5040
 =============================
User.[34;49mqexp[39;49m <:> csl compiled word
SourceCode for User.[34;49mqexp[39;49m :> 
[34;49m: qexp dup 1 <= if{ }else{ dup -- qexp * }fi ; [39;49m
Source code file location of [34;49mqexp[39;49m : "namespaces/test/dev.csl" : 48.2 :: we are now at : namespaces/test/dev.csl : 48.90
Compiled with : optimizeOn, inlineOn, Jcc8 on
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xaabbc15d -- code size = 92 bytes
TypeSignature : 
 -----------------------------
Word :: User.[34;49mqexp[39;49m : definition = 0x00007fbdaabbc15d : disassembly at namespaces/test/dev.csl : 48.90 :
[34;49m ..                                : qexp [39;49m[33;40mdup[39;49m[34;49m 1 <= if{ }else{ dup -- qexp * }fi ;  .. [39;49m[32;49m
0x7fbdaabbc15d    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fbdaabbc160    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabbc164    498906                  mov [r14], rax                                         [39;49m
[34;49m ..                            : qexp dup [39;49m[33;40m1[39;49m[34;49m <= if{ }else{ dup -- qexp * }fi ;  .. [39;49m[32;49m
0x7fbdaabbc167    48c7c001000000          mov rax, 0x1                                           [39;49m[32;49m
0x7fbdaabbc16e    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fbdaabbc171    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fbdaabbc174    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m ..                          : qexp dup 1 [39;49m[33;40m<=[39;49m[34;49m if{ }else{ dup -- qexp * }fi ;  .. [39;49m[32;49m
0x7fbdaabbc178    483bc1                  cmp rax, rcx                                           [39;49m[32;49m
0x7fbdaabbc17b    7f05                    jg 0xaabbc182                                          [39;49m
[34;49m ..                   : qexp dup 1 <= if{ [39;49m[33;40m}else{[39;49m[34;49m dup -- qexp * }fi ;  .. [39;49m[32;49m
0x7fbdaabbc17d    e936000000              jmp 0x7fbdaabbc1b8         	< User.[34;49mqexp[39;49m+91[32;49m >[39;49m[39;49m
[34;49m ..            : qexp dup 1 <= if{ }else{ [39;49m[33;40mdup[39;49m[34;49m -- qexp * }fi ;  .. [39;49m[32;49m
0x7fbdaabbc182    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fbdaabbc185    4983c608                add r14, 0x8                                           [39;49m
[34;49m ..                       : qexp dup 1 <= [39;49m[33;40mif{[39;49m[34;49m }else{ dup -- qexp * }fi ;  .. [39;49m[32;49m
0x7fbdaabbc189    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaabbc18c    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fbdaabbc18f    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m ..        : qexp dup 1 <= if{ }else{ dup [39;49m[33;40m--[39;49m[34;49m qexp * }fi ;  .. [39;49m[32;49m
0x7fbdaabbc193    48ffc8                  dec rax                                                [39;49m[32;49m
0x7fbdaabbc196    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabbc19a    498906                  mov [r14], rax                                         [39;49m
[34;49m ..     : qexp dup 1 <= if{ }else{ dup -- [39;49m[33;40mqexp[39;49m[34;49m * }fi ;  .. [39;49m[32;49m
0x7fbdaabbc19d    e8bbffffff              call 0x7fbdaabbc15d        	< User.[34;49mqexp[39;49m : 0x00007fbdaabbc15d[32;49m >[39;49m[39;49m[32;49m
0x7fbdaabbc1a2    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fbdaabbc1a5    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fbdaabbc1a9    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m   : qexp dup 1 <= if{ }else{ dup -- qexp [39;49m[33;40m*[39;49m[34;49m }fi ;  .. [39;49m[32;49m
0x7fbdaabbc1ad    480fafc1                imul rax, rcx                                          [39;49m[32;49m
0x7fbdaabbc1b1    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabbc1b5    498906                  mov [r14], rax                                         [39;49m
[34;49m .. dup 1 <= if{ }else{ dup -- qexp * }fi [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fbdaabbc1b8    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'qexp' :: codeSize = 91
Word : 0x00007fbda95330c0 :: Compiled at : 0x00007fbdaabbc15d
 =============================
::> 'wdiss' was called at namespaces/test/dev.csl 48.90 <::
 5040 5040 5040
 5040
 =============================
User.[34;49mbexp3[39;49m <:> csl compiled word
SourceCode for User.[34;49mbexp3[39;49m :> 
[34;49m: bexp3 ( n ) { n @ 1 > } { n @ n @ -- bexp3 * } { 1 } ifElse ; [39;49m
Source code file location of [34;49mbexp3[39;49m : "namespaces/test/dev.csl" : 52.2 :: we are now at : namespaces/test/dev.csl : 54.10
Compiled with : optimizeOn, inlineOn, Jcc8 on
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xaabbc31e -- code size = 108 bytes
TypeSignature : 
 -----------------------------
Word :: User.[34;49mbexp3[39;49m : definition = 0x00007fbdaabbc31e : disassembly at namespaces/test/dev.csl : 54.10 :
[34;49m ..                                     : [39;49m[33;40mbexp3[39;49m[34;49m ( n ) { n @ 1 > } { n @ n @ -- bexp3 * } { 1 } ifElse ;  .. [39;49m[32;49m
0x7fbdaabbc31e    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fbdaabbc322    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaabbc326    4981c608000000          add r14, 0x8                                           [39;49m
[34;49m ..                       : bexp3 ( n ) { [39;49m[33;40mn[39;49m[34;49m @ 1 > } { n @ n @ -- bexp3 * } { 1 } ifElse ;  .. [39;49m[32;49m
0x7fbdaabbc32d    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m ..                 : bexp3 ( n ) { n @ 1 [39;49m[33;40m>[39;49m[34;49m } { n @ n @ -- bexp3 * } { 1 } ifElse ;  .. [39;49m[32;49m
0x7fbdaabbc331    4883f801                cmp rax, 0x1                                           [39;49m[32;49m
0x7fbdaabbc335    7e39                    jle 0xaabbc370                                         [39;49m
[34;49m ..           : bexp3 ( n ) { n @ 1 > } { [39;49m[33;40mn[39;49m[34;49m @ n @ -- bexp3 * } { 1 } ifElse ;  .. [39;49m[32;49m
0x7fbdaabbc337    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaabbc33b    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabbc33f    498906                  mov [r14], rax                                         [39;49m
[34;49m ..       : bexp3 ( n ) { n @ 1 > } { n @ [39;49m[33;40mn[39;49m[34;49m @ -- bexp3 * } { 1 } ifElse ;  .. [39;49m[32;49m
0x7fbdaabbc342    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m ..   : bexp3 ( n ) { n @ 1 > } { n @ n @ [39;49m[33;40m--[39;49m[34;49m bexp3 * } { 1 } ifElse ;  .. [39;49m[32;49m
0x7fbdaabbc346    48ffc8                  dec rax                                                [39;49m
[34;49m ..             : bexp3 ( n ) { n @ 1 > } [39;49m[33;40m{[39;49m[34;49m n @ n @ -- bexp3 * } { 1 } ifElse ;  .. [39;49m[32;49m
0x7fbdaabbc349    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabbc34d    498906                  mov [r14], rax                                         [39;49m
[34;49m   : bexp3 ( n ) { n @ 1 > } { n @ n @ -- [39;49m[33;40mbexp3[39;49m[34;49m * } { 1 } ifElse ;  .. [39;49m[32;49m
0x7fbdaabbc350    e8c9ffffff              call 0x7fbdaabbc31e        	< User.[34;49mbexp3[39;49m : 0x00007fbdaabbc31e[32;49m >[39;49m[39;49m[32;49m
0x7fbdaabbc355    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fbdaabbc358    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fbdaabbc35c    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m ..  ( n ) { n @ 1 > } { n @ n @ -- bexp3 [39;49m[33;40m*[39;49m[34;49m } { 1 } ifElse ; [39;49m[32;49m
0x7fbdaabbc360    480fafc1                imul rax, rcx                                          [39;49m[32;49m
0x7fbdaabbc364    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabbc368    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  n ) { n @ 1 > } { n @ n @ -- bexp3 * [39;49m[33;40m}[39;49m[34;49m { 1 } ifElse ; [39;49m[32;49m
0x7fbdaabbc36b    e90e000000              jmp 0x7fbdaabbc37e         	< User.[34;49mbexp3[39;49m+96[32;49m >[39;49m[39;49m
[34;49m ..  { n @ 1 > } { n @ n @ -- bexp3 * } { [39;49m[33;40m1[39;49m[34;49m } ifElse ; [39;49m[32;49m
0x7fbdaabbc370    48c7c001000000          mov rax, 0x1                                           [39;49m[32;49m
0x7fbdaabbc377    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabbc37b    498906                  mov [r14], rax                                         [39;49m
[34;49m .. } { n @ n @ -- bexp3 * } { 1 } ifElse [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fbdaabbc37e    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaabbc382    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaabbc386    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaabbc389    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'bexp3' :: codeSize = 107
Word : 0x00007fbda7ba3878 :: Compiled at : 0x00007fbdaabbc31e
 =============================
::> 'wdiss' was called at namespaces/test/dev.csl 54.10 <::

 =============================
C_Syntax.[34;49mfaccs3[39;49m <:> csl compiled word
SourceCode for C_Syntax.[34;49mfaccs3[39;49m :> 
[34;49mint faccs3 ( n | rec ) { for ( rec = 1 ; n > 1 ; n-- ) { rec = rec * n ; } return rec ; } [39;49m
Source code file location of [34;49mfaccs3[39;49m : "namespaces/test/dev.csl" : 58.7 :: we are now at : namespaces/test/dev.csl : 66.20
Compiled with : optimizeOn, inlineOn, c_syntaxOn, infixOn, Jcc8 on
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xaabbc38f -- code size = 80 bytes
TypeSignature : 
 -----------------------------
Word :: C_Syntax.[34;49mfaccs3[39;49m : definition = 0x00007fbdaabbc38f : disassembly at namespaces/test/dev.csl : 66.20 :
[34;49m ..                                   int [39;49m[33;40mfaccs3[39;49m[34;49m ( n | rec )  { for ( rec = 1 ; n > 1 ; n-- ) {  rec = rec * n ;  }  return rec ; }  .. [39;49m[32;49m
0x7fbdaabbc38f    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fbdaabbc393    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaabbc397    4981c610000000          add r14, 0x10                                          [39;49m
[34;49m .. int faccs3 ( n | rec )  { for ( rec = [39;49m[33;40m1[39;49m[34;49m ; n > 1 ; n-- ) {  rec = rec * n ;  }  return rec ; }  .. [39;49m[32;49m
0x7fbdaabbc39e    48c7c001000000          mov rax, 0x1                                           [39;49m
[34;49m ..       int faccs3 ( n | rec )  { for ( [39;49m[33;40mrec[39;49m[34;49m = 1 ; n > 1 ; n-- ) {  rec = rec * n ;  }  return rec ; }  .. [39;49m[32;49m
0x7fbdaabbc3a5    498d4f08                lea rcx, [r15+0x8]                                     [39;49m
[34;49m ..   int faccs3 ( n | rec )  { for ( rec [39;49m[33;40m=[39;49m[34;49m 1 ; n > 1 ; n-- ) {  rec = rec * n ;  }  return rec ; }  .. [39;49m[32;49m
0x7fbdaabbc3a9    488901                  mov [rcx], rax                                         [39;49m
[34;49mint faccs3 ( n | rec )  { for ( rec = 1 ; [39;49m[33;40mn[39;49m[34;49m > 1 ; n-- ) {  rec = rec * n ;  }  return rec ; }  .. [39;49m[32;49m
0x7fbdaabbc3ac    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. ccs3 ( n | rec )  { for ( rec = 1 ; n [39;49m[33;40m>[39;49m[34;49m 1 ; n-- ) {  rec = rec * n ;  }  return rec ; } [39;49m[32;49m
0x7fbdaabbc3b0    4883f801                cmp rax, 0x1                                           [39;49m[32;49m
0x7fbdaabbc3b4    7e19                    jle 0xaabbc3cf                                         [39;49m
[34;49m .. or ( rec = 1 ; n > 1 ; n-- ) {  rec = [39;49m[33;40mrec[39;49m[34;49m * n ;  }  return rec ; } [39;49m[32;49m
0x7fbdaabbc3b6    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m .. ec = 1 ; n > 1 ; n-- ) {  rec = rec * [39;49m[33;40mn[39;49m[34;49m ;  }  return rec ; } [39;49m[32;49m
0x7fbdaabbc3ba    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m
[34;49m ..  rec = 1 ; n > 1 ; n-- ) {  rec = rec [39;49m[33;40m*[39;49m[34;49m n ;  }  return rec ; } [39;49m[32;49m
0x7fbdaabbc3be    480fafc1                imul rax, rcx                                          [39;49m
[34;49m .. )  { for ( rec = 1 ; n > 1 ; n-- ) {  [39;49m[33;40mrec[39;49m[34;49m = rec * n ;  }  return rec ; } [39;49m[32;49m
0x7fbdaabbc3c2    498d4f08                lea rcx, [r15+0x8]                                     [39;49m
[34;49m ..  for ( rec = 1 ; n > 1 ; n-- ) {  rec [39;49m[33;40m=[39;49m[34;49m rec * n ;  }  return rec ; } [39;49m[32;49m
0x7fbdaabbc3c6    488901                  mov [rcx], rax                                         [39;49m
[34;49m .. n | rec )  { for ( rec = 1 ; n > 1 ; n[39;49m[33;40m--[39;49m[34;49m ) {  rec = rec * n ;  }  return rec ; } [39;49m[32;49m
0x7fbdaabbc3c9    49ff4ff8                dec qword [r15-0x8]                                    [39;49m
[34;49m ..  rec )  { for ( rec = 1 ; n > 1 ; n-- [39;49m[33;40m)[39;49m[34;49m {  rec = rec * n ;  }  return rec ; } [39;49m[32;49m
0x7fbdaabbc3cd    ebdd                    jmp 0x7fbdaabbc3ac         	< C_Syntax.[34;49mfaccs3[39;49m+29[32;49m >[39;49m[39;49m[32;49m
0x7fbdaabbc3cf    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m .. ) {  rec = rec * n ;  }  return rec ; [39;49m[33;40m}[39;49m[34;49m [39;49m[32;49m
0x7fbdaabbc3d3    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaabbc3d7    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m
[34;49m .. ; n-- ) {  rec = rec * n ;  }  return [39;49m[33;40mrec[39;49m[34;49m ; } [39;49m[32;49m
0x7fbdaabbc3db    498906                  mov [r14], rax                                         [39;49m
[34;49m .. n | rec )  { for ( rec = 1 ; n > 1 ; n[39;49m[33;40m--[39;49m[34;49m ) {  rec = rec * n ;  }  return rec ; } [39;49m[32;49m
0x7fbdaabbc3de    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'faccs3' :: codeSize = 79
Word : 0x00007fbda7ba5990 :: Compiled at : 0x00007fbdaabbc38f
 =============================
::> 'wdiss' was called at namespaces/test/dev.csl 66.20 <::
 5040
 =============================
C_Syntax.[34;49mfac5[39;49m <:> csl compiled word
SourceCode for C_Syntax.[34;49mfac5[39;49m :> 
[34;49mint fac5 ( REG n | REG facc ) { facc = 1 ; while ( n > 1 ) { facc = facc * ( n -- ) ; } return facc ; } [39;49m
Source code file location of [34;49mfac5[39;49m : "namespaces/test/dev.csl" : 72.5 :: we are now at : namespaces/test/dev.csl : 82.21
Compiled with : optimizeOn, inlineOn, c_syntaxOn, infixOn, Jcc8 on
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xaabbc3f3 -- code size = 29 bytes
TypeSignature : 
 -----------------------------
Word :: C_Syntax.[34;49mfac5[39;49m : definition = 0x00007fbdaabbc3f3 : disassembly at namespaces/test/dev.csl : 82.21 :
[34;49m ..                                   int [39;49m[33;40mfac5[39;49m[34;49m ( REG n | REG facc )  {  facc = 1 ; while ( n > 1 )  { facc = facc * ( n -- ) ; } return facc ;  .. [39;49m[32;49m
0x7fbdaabbc3f3    498b3e                  mov rdi, [r14]                                         [39;49m
[34;49m int fac5 ( REG n | REG facc )  {  facc = [39;49m[33;40m1[39;49m[34;49m ; while ( n > 1 )  { facc = facc * ( n -- ) ; } return facc ; }  .. [39;49m[32;49m
0x7fbdaabbc3f6    48c7c601000000          mov rsi, 0x1                                           [39;49m
[34;49m .. | REG facc )  {  facc = 1 ; while ( n [39;49m[33;40m>[39;49m[34;49m 1 )  { facc = facc * ( n -- ) ; } return facc ; } [39;49m[32;49m
0x7fbdaabbc3fd    4883ff01                cmp rdi, 0x1                                           [39;49m[32;49m
0x7fbdaabbc401    7e09                    jle 0xaabbc40c                                         [39;49m
[34;49m ..  = 1 ; while ( n > 1 )  { facc = facc [39;49m[33;40m*[39;49m[34;49m ( n -- ) ; } return facc ; } [39;49m[32;49m
0x7fbdaabbc403    480faff7                imul rsi, rdi                                          [39;49m
[34;49m ..  while ( n > 1 )  { facc = facc * ( n [39;49m[33;40m--[39;49m[34;49m ) ; } return facc ; } [39;49m[32;49m
0x7fbdaabbc407    48ffcf                  dec rdi                                                [39;49m
[34;49m .. ( n > 1 )  { facc = facc * ( n -- ) ; [39;49m[33;40m}[39;49m[34;49m return facc ; } [39;49m[32;49m
0x7fbdaabbc40a    ebf1                    jmp 0x7fbdaabbc3fd         	< C_Syntax.[34;49mfac5[39;49m+10[32;49m >[39;49m[39;49m
[34;49m ..   { facc = facc * ( n -- ) ; } return [39;49m[33;40mfacc[39;49m[34;49m ; } [39;49m[32;49m
0x7fbdaabbc40c    498936                  mov [r14], rsi                                         [39;49m[32;49m
0x7fbdaabbc40f    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'fac5' :: codeSize = 28
Word : 0x00007fbda7ba8f48 :: Compiled at : 0x00007fbdaabbc3f3
 =============================
::> 'wdiss' was called at namespaces/test/dev.csl 82.21 <::
 5040
 =============================
C_Syntax.[34;49mfaccs[39;49m <:> csl compiled word
SourceCode for C_Syntax.[34;49mfaccs[39;49m :> 
[34;49mint faccs ( REG n | REG rec ) { rec = 1 ; while ( n > 1 ) { rec = rec * n ; n-- ; } return rec ; } [39;49m
Source code file location of [34;49mfaccs[39;49m : "namespaces/test/dev.csl" : 86.6 :: we are now at : namespaces/test/dev.csl : 95.19
Compiled with : optimizeOn, inlineOn, c_syntaxOn, infixOn, Jcc8 on
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xaabbc424 -- code size = 29 bytes
TypeSignature : 
 -----------------------------
Word :: C_Syntax.[34;49mfaccs[39;49m : definition = 0x00007fbdaabbc424 : disassembly at namespaces/test/dev.csl : 95.19 :
[34;49m ..                                   int [39;49m[33;40mfaccs[39;49m[34;49m ( REG n | REG rec )  { rec = 1 ;  while ( n > 1 ) {  rec = rec * n ; n-- ;  }  return rec ; }  .. [39;49m[32;49m
0x7fbdaabbc424    498b3e                  mov rdi, [r14]                                         [39;49m
[34;49m   int faccs ( REG n | REG rec )  { rec = [39;49m[33;40m1[39;49m[34;49m ;  while ( n > 1 ) {  rec = rec * n ; n-- ;  }  return rec ; }  .. [39;49m[32;49m
0x7fbdaabbc427    48c7c601000000          mov rsi, 0x1                                           [39;49m
[34;49m .. n | REG rec )  { rec = 1 ;  while ( n [39;49m[33;40m>[39;49m[34;49m 1 ) {  rec = rec * n ; n-- ;  }  return rec ; } [39;49m[32;49m
0x7fbdaabbc42e    4883ff01                cmp rdi, 0x1                                           [39;49m[32;49m
0x7fbdaabbc432    7e09                    jle 0xaabbc43d                                         [39;49m
[34;49m ..   while ( n > 1 ) {  rec = rec * n ; n[39;49m[33;40m--[39;49m[34;49m ;  }  return rec ; } [39;49m[32;49m
0x7fbdaabbc434    480faff7                imul rsi, rdi                                          [39;49m
[34;49m ..   while ( n > 1 ) {  rec = rec * n ; n[39;49m[33;40m--[39;49m[34;49m ;  }  return rec ; } [39;49m[32;49m
0x7fbdaabbc438    48ffcf                  dec rdi                                                [39;49m
[34;49m .. e ( n > 1 ) {  rec = rec * n ; n-- ;  [39;49m[33;40m}[39;49m[34;49m  return rec ; } [39;49m[32;49m
0x7fbdaabbc43b    ebf1                    jmp 0x7fbdaabbc42e         	< C_Syntax.[34;49mfaccs[39;49m+10[32;49m >[39;49m[39;49m
[34;49m .. ) {  rec = rec * n ; n-- ;  }  return [39;49m[33;40mrec[39;49m[34;49m ; } [39;49m[32;49m
0x7fbdaabbc43d    498936                  mov [r14], rsi                                         [39;49m[32;49m
0x7fbdaabbc440    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'faccs' :: codeSize = 28
Word : 0x00007fbda7bac190 :: Compiled at : 0x00007fbdaabbc424
 =============================
::> 'wdiss' was called at namespaces/test/dev.csl 95.19 <::
 5040 5040
 =============================
C_Syntax.[34;49mfaccs2[39;49m <:> csl compiled word
SourceCode for C_Syntax.[34;49mfaccs2[39;49m :> 
[34;49mint faccs2 ( REG n | REG rec ) { for ( rec = 1 ; n > 1 ; n-- ) { rec = rec * n ; } return rec ; } [39;49m
Source code file location of [34;49mfaccs2[39;49m : "namespaces/test/dev.csl" : 113.7 :: we are now at : namespaces/test/dev.csl : 121.20
Compiled with : optimizeOn, inlineOn, c_syntaxOn, infixOn, Jcc8 on
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xaabbc486 -- code size = 29 bytes
TypeSignature : 
 -----------------------------
Word :: C_Syntax.[34;49mfaccs2[39;49m : definition = 0x00007fbdaabbc486 : disassembly at namespaces/test/dev.csl : 121.20 :
[34;49m ..                                   int [39;49m[33;40mfaccs2[39;49m[34;49m ( REG n | REG rec )  { for ( rec = 1 ; n > 1 ; n-- ) {  rec = rec * n ;  }  return rec ; }  .. [39;49m[32;49m
0x7fbdaabbc486    498b3e                  mov rdi, [r14]                                         [39;49m
[34;49m .. s2 ( REG n | REG rec )  { for ( rec = [39;49m[33;40m1[39;49m[34;49m ; n > 1 ; n-- ) {  rec = rec * n ;  }  return rec ; } [39;49m[32;49m
0x7fbdaabbc489    48c7c601000000          mov rsi, 0x1                                           [39;49m
[34;49m .. EG n | REG rec )  { for ( rec = 1 ; n [39;49m[33;40m>[39;49m[34;49m 1 ; n-- ) {  rec = rec * n ;  }  return rec ; } [39;49m[32;49m
0x7fbdaabbc490    4883ff01                cmp rdi, 0x1                                           [39;49m[32;49m
0x7fbdaabbc494    7e09                    jle 0xaabbc49f                                         [39;49m
[34;49m ..  rec = 1 ; n > 1 ; n-- ) {  rec = rec [39;49m[33;40m*[39;49m[34;49m n ;  }  return rec ; } [39;49m[32;49m
0x7fbdaabbc496    480faff7                imul rsi, rdi                                          [39;49m
[34;49m .. REG rec )  { for ( rec = 1 ; n > 1 ; n[39;49m[33;40m--[39;49m[34;49m ) {  rec = rec * n ;  }  return rec ; } [39;49m[32;49m
0x7fbdaabbc49a    48ffcf                  dec rdi                                                [39;49m
[34;49m ..  rec )  { for ( rec = 1 ; n > 1 ; n-- [39;49m[33;40m)[39;49m[34;49m {  rec = rec * n ;  }  return rec ; } [39;49m[32;49m
0x7fbdaabbc49d    ebf1                    jmp 0x7fbdaabbc490         	< C_Syntax.[34;49mfaccs2[39;49m+10[32;49m >[39;49m[39;49m
[34;49m .. ; n-- ) {  rec = rec * n ;  }  return [39;49m[33;40mrec[39;49m[34;49m ; } [39;49m[32;49m
0x7fbdaabbc49f    498936                  mov [r14], rsi                                         [39;49m[32;49m
0x7fbdaabbc4a2    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'faccs2' :: codeSize = 28
Word : 0x00007fbda7bb2468 :: Compiled at : 0x00007fbdaabbc486
 =============================
::> 'wdiss' was called at namespaces/test/dev.csl 121.20 <::
 5040 5040
 =============================
User.[34;49miFactorialX[39;49m <:> csl compiled word
SourceCode for User.[34;49miFactorialX[39;49m :> 
[34;49m: iFactorialX ( n w | k ) { k 1 = } { k @ n @ <= } { k ++ } { w @ _ifx } for ; [39;49m
Source code file location of [34;49miFactorialX[39;49m : "namespaces/test/dev.csl" : 163.2 :: we are now at : namespaces/test/dev.csl : 167.24
Compiled with : optimizeOn, inlineOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xaabbc7bb -- code size = 89 bytes
TypeSignature : 
 -----------------------------
Word :: User.[34;49miFactorialX[39;49m : definition = 0x00007fbdaabbc7bb : disassembly at namespaces/test/dev.csl : 167.24 :
[34;49m ..                                     : [39;49m[33;40miFactorialX[39;49m[34;49m ( n w | k )  { k 1 = } { k @ n @ <= } { k ++ }  { w @ _ifx } for  ;  .. [39;49m[32;49m
0x7fbdaabbc7bb    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fbdaabbc7bf    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaabbc7c3    4981c610000000          add r14, 0x10                                          [39;49m
[34;49m ..          : iFactorialX ( n w | k )  { [39;49m[33;40mk[39;49m[34;49m 1 = } { k @ n @ <= } { k ++ }  { w @ _ifx } for  ;  .. [39;49m[32;49m
0x7fbdaabbc7ca    498d4708                lea rax, [r15+0x8]                                     [39;49m
[34;49m ..        : iFactorialX ( n w | k )  { k [39;49m[33;40m1[39;49m[34;49m = } { k @ n @ <= } { k ++ }  { w @ _ifx } for  ;  .. [39;49m[32;49m
0x7fbdaabbc7ce    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m ..      : iFactorialX ( n w | k )  { k 1 [39;49m[33;40m=[39;49m[34;49m } { k @ n @ <= } { k ++ }  { w @ _ifx } for  ;  .. [39;49m[32;49m
0x7fbdaabbc7d5    488908                  mov [rax], rcx                                         [39;49m
[34;49m   : iFactorialX ( n w | k )  { k 1 = } { [39;49m[33;40mk[39;49m[34;49m @ n @ <= } { k ++ }  { w @ _ifx } for  ;  .. [39;49m[32;49m
0x7fbdaabbc7d8    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m .. ctorialX ( n w | k )  { k 1 = } { k @ [39;49m[33;40mn[39;49m[34;49m @ <= } { k ++ }  { w @ _ifx } for  ; [39;49m[32;49m
0x7fbdaabbc7dc    498b4ff0                mov rcx, [r15-0x10]                                    [39;49m
[34;49m .. ialX ( n w | k )  { k 1 = } { k @ n @ [39;49m[33;40m<=[39;49m[34;49m } { k ++ }  { w @ _ifx } for  ; [39;49m[32;49m
0x7fbdaabbc7e0    483bc1                  cmp rax, rcx                                           [39;49m[32;49m
0x7fbdaabbc7e3    0f8f1e000000            jg 0x7fbdaabbc807          	< User.[34;49miFactorialX[39;49m+76[32;49m >[39;49m[39;49m
[34;49m ..  { k 1 = } { k @ n @ <= } { k ++ }  { [39;49m[33;40mw[39;49m[34;49m @ _ifx } for  ; [39;49m[32;49m
0x7fbdaabbc7e9    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaabbc7ed    4983c608                add r14, 0x8                                           [39;49m
[34;49m .. X ( n w | k )  { k 1 = } { k @ n @ <= [39;49m[33;40m}[39;49m[34;49m { k ++ }  { w @ _ifx } for  ; [39;49m[32;49m
0x7fbdaabbc7f1    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  1 = } { k @ n @ <= } { k ++ }  { w @ [39;49m[33;40m_ifx[39;49m[34;49m } for  ; [39;49m[32;49m
0x7fbdaabbc7f4    49b9aec6bbaabd7f0000    mov r9, 0x7fbdaabbc6ae                                 [39;49m[32;49m
0x7fbdaabbc7fe    49ffd1                  call r9                    	< User.[34;49m_ifx[39;49m : 0x00007fbdaabbc6ae[32;49m >[39;49m[39;49m
[34;49m .. w | k )  { k 1 = } { k @ n @ <= } { k [39;49m[33;40m++[39;49m[34;49m }  { w @ _ifx } for  ; [39;49m[32;49m
0x7fbdaabbc801    49ff4708                inc qword [r15+0x8]                                    [39;49m
[34;49m ..  k )  { k 1 = } { k @ n @ <= } { k ++ [39;49m[33;40m}[39;49m[34;49m  { w @ _ifx } for  ; [39;49m[32;49m
0x7fbdaabbc805    ebd1                    jmp 0x7fbdaabbc7d8         	< User.[34;49miFactorialX[39;49m+29[32;49m >[39;49m[39;49m
[34;49m ..  n @ <= } { k ++ }  { w @ _ifx } for  [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fbdaabbc807    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaabbc80b    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaabbc80f    4983ee10                sub r14, 0x10                                          [39;49m[32;49m
0x7fbdaabbc813    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'iFactorialX' :: codeSize = 88
Word : 0x00007fbda7bc3d78 :: Compiled at : 0x00007fbdaabbc7bb
 =============================
::> 'wdiss' was called at namespaces/test/dev.csl 167.24 <::

 =============================
User.[34;49m_ffx[39;49m <:> csl compiled word
SourceCode for User.[34;49m_ffx[39;49m :> 
[34;49m: _ffx ( n w | t ) nl 7 w @ wordRun decimal p nl { t 0 = } { t @ n @ < } { t ++ } { reps @ w @ iFactorialX } for ; [39;49m
Source code file location of [34;49m_ffx[39;49m : "namespaces/test/dev.csl" : 170.2 :: we are now at : namespaces/test/dev.csl : 175.17
Compiled with : optimizeOn, inlineOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xaabbc877 -- code size = 239 bytes
TypeSignature : 
 -----------------------------
Word :: User.[34;49m_ffx[39;49m : definition = 0x00007fbdaabbc877 : disassembly at namespaces/test/dev.csl : 175.17 :
[34;49m ..                                     : [39;49m[33;40m_ffx[39;49m[34;49m ( n w | t )  nl 7 w @ wordRun decimal p nl  { t 0 = } { t @ n @ < } { t ++ }  { reps @ w @ iFact .. [39;49m[32;49m
0x7fbdaabbc877    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fbdaabbc87b    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaabbc87f    4981c610000000          add r14, 0x10                                          [39;49m
[34;49m ..                   : _ffx ( n w | t )  [39;49m[33;40mnl[39;49m[34;49m 7 w @ wordRun decimal p nl  { t 0 = } { t @ n @ < } { t ++ }  { reps @ w @ iFactorialX } for  ;  .. [39;49m[32;49m
0x7fbdaabbc886    49b8e0903e1ebd550000    mov r8, 0x55bd1e3e90e0                                 [39;49m[32;49m
0x7fbdaabbc890    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaabbc89a    49ffd1                  call r9                    	< Io.[34;49mnewline[39;49m : 0x000055bd1e3e90e0[32;49m >[39;49m[39;49m
[34;49m ..                : _ffx ( n w | t )  nl [39;49m[33;40m7[39;49m[34;49m w @ wordRun decimal p nl  { t 0 = } { t @ n @ < } { t ++ }  { reps @ w @ iFactorialX } for  ;  .. [39;49m[32;49m
0x7fbdaabbc89d    48c7c007000000          mov rax, 0x7                                           [39;49m[32;49m
0x7fbdaabbc8a4    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabbc8a8    498906                  mov [r14], rax                                         [39;49m
[34;49m ..              : _ffx ( n w | t )  nl 7 [39;49m[33;40mw[39;49m[34;49m @ wordRun decimal p nl  { t 0 = } { t @ n @ < } { t ++ }  { reps @ w @ iFactorialX } for  ;  .. [39;49m[32;49m
0x7fbdaabbc8ab    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaabbc8af    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabbc8b3    498906                  mov [r14], rax                                         [39;49m
[34;49m ..          : _ffx ( n w | t )  nl 7 w @ [39;49m[33;40mwordRun[39;49m[34;49m decimal p nl  { t 0 = } { t @ n @ < } { t ++ }  { reps @ w @ iFactorialX } for  ;  .. [39;49m[32;49m
0x7fbdaabbc8b6    49b8a0c53e1ebd550000    mov r8, 0x55bd1e3ec5a0                                 [39;49m[32;49m
0x7fbdaabbc8c0    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaabbc8ca    49ffd1                  call r9                    	< Word.[34;49mwordRun[39;49m : 0x000055bd1e3ec5a0[32;49m >[39;49m[39;49m
[34;49m ..  : _ffx ( n w | t )  nl 7 w @ wordRun [39;49m[33;40mdecimal[39;49m[34;49m p nl  { t 0 = } { t @ n @ < } { t ++ }  { reps @ w @ iFactorialX } for  ;  .. [39;49m[32;49m
0x7fbdaabbc8cd    49b810b43e1ebd550000    mov r8, 0x55bd1e3eb410                                 [39;49m[32;49m
0x7fbdaabbc8d7    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaabbc8e1    49ffd1                  call r9                    	< System.[34;49mdecimal[39;49m : 0x000055bd1e3eb410[32;49m >[39;49m[39;49m
[34;49m .. ( n w | t )  nl 7 w @ wordRun decimal [39;49m[33;40mp[39;49m[34;49m nl  { t 0 = } { t @ n @ < } { t ++ }  { reps @ w @ iFactorialX } for  ; [39;49m[32;49m
0x7fbdaabbc8e4    49b9d965d5aabd7f0000    mov r9, 0x7fbdaad565d9                                 [39;49m[32;49m
0x7fbdaabbc8ee    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fbdaad565d9[32;49m >[39;49m[39;49m
[34;49m .. n w | t )  nl 7 w @ wordRun decimal p [39;49m[33;40mnl[39;49m[34;49m  { t 0 = } { t @ n @ < } { t ++ }  { reps @ w @ iFactorialX } for  ; [39;49m[32;49m
0x7fbdaabbc8f1    49b8e0903e1ebd550000    mov r8, 0x55bd1e3e90e0                                 [39;49m[32;49m
0x7fbdaabbc8fb    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaabbc905    49ffd1                  call r9                    	< Io.[34;49mnewline[39;49m : 0x000055bd1e3e90e0[32;49m >[39;49m[39;49m
[34;49m .. t )  nl 7 w @ wordRun decimal p nl  { [39;49m[33;40mt[39;49m[34;49m 0 = } { t @ n @ < } { t ++ }  { reps @ w @ iFactorialX } for  ; [39;49m[32;49m
0x7fbdaabbc908    498d4708                lea rax, [r15+0x8]                                     [39;49m
[34;49m .. )  nl 7 w @ wordRun decimal p nl  { t [39;49m[33;40m0[39;49m[34;49m = } { t @ n @ < } { t ++ }  { reps @ w @ iFactorialX } for  ; [39;49m[32;49m
0x7fbdaabbc90c    48c7c100000000          mov rcx, 0x0                                           [39;49m
[34;49m ..  nl 7 w @ wordRun decimal p nl  { t 0 [39;49m[33;40m=[39;49m[34;49m } { t @ n @ < } { t ++ }  { reps @ w @ iFactorialX } for  ; [39;49m[32;49m
0x7fbdaabbc913    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. w @ wordRun decimal p nl  { t 0 = } { [39;49m[33;40mt[39;49m[34;49m @ n @ < } { t ++ }  { reps @ w @ iFactorialX } for  ; [39;49m[32;49m
0x7fbdaabbc916    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m .. wordRun decimal p nl  { t 0 = } { t @ [39;49m[33;40mn[39;49m[34;49m @ < } { t ++ }  { reps @ w @ iFactorialX } for  ; [39;49m[32;49m
0x7fbdaabbc91a    498b4ff0                mov rcx, [r15-0x10]                                    [39;49m
[34;49m .. Run decimal p nl  { t 0 = } { t @ n @ [39;49m[33;40m<[39;49m[34;49m } { t ++ }  { reps @ w @ iFactorialX } for  ; [39;49m[32;49m
0x7fbdaabbc91e    483bc1                  cmp rax, rcx                                           [39;49m[32;49m
0x7fbdaabbc921    0f8d32000000            jge 0x7fbdaabbc959         	< User.[34;49m_ffx[39;49m+226[32;49m >[39;49m[39;49m
[34;49m ..   { t 0 = } { t @ n @ < } { t ++ }  { [39;49m[33;40mreps[39;49m[34;49m @ w @ iFactorialX } for  ; [39;49m[32;49m
0x7fbdaabbc927    48b8d88dbca7bd7f0000    mov rax, 0x7fbda7bc8dd8                                [39;49m[32;49m
0x7fbdaabbc931    488b00                  mov rax, [rax]                                         [39;49m[32;49m
0x7fbdaabbc934    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabbc938    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  = } { t @ n @ < } { t ++ }  { reps @ [39;49m[33;40mw[39;49m[34;49m @ iFactorialX } for  ; [39;49m[32;49m
0x7fbdaabbc93b    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaabbc93f    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabbc943    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  { t @ n @ < } { t ++ }  { reps @ w @ [39;49m[33;40miFactorialX[39;49m[34;49m } for  ; [39;49m[32;49m
0x7fbdaabbc946    49b9bbc7bbaabd7f0000    mov r9, 0x7fbdaabbc7bb                                 [39;49m[32;49m
0x7fbdaabbc950    49ffd1                  call r9                    	< User.[34;49miFactorialX[39;49m : 0x00007fbdaabbc7bb[32;49m >[39;49m[39;49m
[34;49m .. mal p nl  { t 0 = } { t @ n @ < } { t [39;49m[33;40m++[39;49m[34;49m }  { reps @ w @ iFactorialX } for  ; [39;49m[32;49m
0x7fbdaabbc953    49ff4708                inc qword [r15+0x8]                                    [39;49m
[34;49m ..  p nl  { t 0 = } { t @ n @ < } { t ++ [39;49m[33;40m}[39;49m[34;49m  { reps @ w @ iFactorialX } for  ; [39;49m[32;49m
0x7fbdaabbc957    ebbd                    jmp 0x7fbdaabbc916         	< User.[34;49m_ffx[39;49m+159[32;49m >[39;49m[39;49m
[34;49m .. ++ }  { reps @ w @ iFactorialX } for  [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fbdaabbc959    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaabbc95d    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaabbc961    4983ee10                sub r14, 0x10                                          [39;49m[32;49m
0x7fbdaabbc965    c3                      ret                                                    [39;49m
Word_Disassemble : word - '_ffx' :: codeSize = 238
Word : 0x00007fbda7bc8f20 :: Compiled at : 0x00007fbdaabbc877
 =============================
::> 'wdiss' was called at namespaces/test/dev.csl 175.17 <::

 ffx ... 

 =============================
User.[34;49mfactorial[39;49m <:> csl compiled word
SourceCode for User.[34;49mfactorial[39;49m :> 
[34;49m: factorial ( REG n | REG rec ) rec 1 = { n @ 1 > } { rec @ n @ * rec store n -- } while return rec ; [39;49m
Source code file location of [34;49mfactorial[39;49m : "namespaces/test/dev.csl" : 140.2 :: we are now at : namespaces/test/dev.csl : 206.16
Compiled with : optimizeOn, inlineOn, Jcc8 on
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xaabbc68c -- code size = 29 bytes
TypeSignature : 
 -----------------------------
Word :: User.[34;49mfactorial[39;49m : definition = 0x00007fbdaabbc68c : disassembly at namespaces/test/dev.csl : 206.16 :
[34;49m ..                           : factorial [39;49m[33;40m([39;49m[34;49m REG n | REG rec ) rec 1 = { n @ 1 > } { rec @ n @ * rec store n -- } while return rec ;  .. [39;49m[32;49m
0x7fbdaabbc68c    498b3e                  mov rdi, [r14]                                         [39;49m
[34;49m ..   : factorial ( REG n | REG rec ) rec [39;49m[33;40m1[39;49m[34;49m = { n @ 1 > } { rec @ n @ * rec store n -- } while return rec ;  .. [39;49m[32;49m
0x7fbdaabbc68f    48c7c601000000          mov rsi, 0x1                                           [39;49m
[34;49m .. l ( REG n | REG rec ) rec 1 = { n @ 1 [39;49m[33;40m>[39;49m[34;49m } { rec @ n @ * rec store n -- } while return rec ; [39;49m[32;49m
0x7fbdaabbc696    4883ff01                cmp rdi, 0x1                                           [39;49m[32;49m
0x7fbdaabbc69a    7e09                    jle 0xaabbc6a5                                         [39;49m
[34;49m .. rec ) rec 1 = { n @ 1 > } { rec @ n @ [39;49m[33;40m*[39;49m[34;49m rec store n -- } while return rec ; [39;49m[32;49m
0x7fbdaabbc69c    480faff7                imul rsi, rdi                                          [39;49m
[34;49m .. { n @ 1 > } { rec @ n @ * rec store n [39;49m[33;40m--[39;49m[34;49m } while return rec ; [39;49m[32;49m
0x7fbdaabbc6a0    48ffcf                  dec rdi                                                [39;49m
[34;49m ..  @ 1 > } { rec @ n @ * rec store n -- [39;49m[33;40m}[39;49m[34;49m while return rec ; [39;49m[32;49m
0x7fbdaabbc6a3    ebf1                    jmp 0x7fbdaabbc696         	< User.[34;49mfactorial[39;49m+10[32;49m >[39;49m[39;49m
[34;49m .. @ * rec store n -- } while return rec [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fbdaabbc6a5    498936                  mov [r14], rsi                                         [39;49m[32;49m
0x7fbdaabbc6a8    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'factorial' :: codeSize = 28
Word : 0x00007fbda7bbb988 :: Compiled at : 0x00007fbdaabbc68c
 =============================
::> 'wdiss' was called at namespaces/test/dev.csl 206.16 <::

 5040

 factorial :
Timer [ 1 ] : elapsed time = 0.004703082 seconds :: function : factorial : called on args : 1 - 23 : 10000 reps

 =============================
C.[34;49mcfactorial[39;49m <:> C compiled primitive
SourceCode for C.[34;49mcfactorial[39;49m :> 
C Primitive
 -----------------------------
Word :: C.[34;49mcfactorial[39;49m : definition = 0x000055bd1e3ef960 : disassembly at namespaces/test/dev.csl : 207.17 :[32;49m
0x55bd1e3ef964    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x55bd1e3ef967    4883f801                cmp rax, 0x1                                           [39;49m[32;49m
0x55bd1e3ef96b    7f0b                    jg 0x1e3ef978                                          [39;49m[32;49m
0x55bd1e3ef96d    49c70601000000          mov qword [r14], 0x1                                   [39;49m[32;49m
0x55bd1e3ef974    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'cfactorial' :: codeSize = 17
Word : 0x00007fbdaac4f7c0 :: Compiled at : 0x000055bd1e3ef960
 =============================
::> 'wdiss' was called at namespaces/test/dev.csl 207.17 <::

 5040

 cfactorial :
Timer [ 1 ] : elapsed time = 0.007348838 seconds :: function : cfactorial : called on args : 1 - 23 : 10000 reps

 =============================
C.[34;49mcfactorial2[39;49m <:> C compiled primitive
SourceCode for C.[34;49mcfactorial2[39;49m :> 
C Primitive
 -----------------------------
Word :: C.[34;49mcfactorial2[39;49m : definition = 0x000055bd1e3efa40 : disassembly at namespaces/test/dev.csl : 208.18 :[32;49m
0x55bd1e3efa44    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x55bd1e3efa47    4c89f6                  mov rsi, r14                                           [39;49m[32;49m
0x55bd1e3efa4a    ba01000000              mov edx, 0x1                                           [39;49m[32;49m
0x55bd1e3efa4f    4883f801                cmp rax, 0x1                                           [39;49m[32;49m
0x55bd1e3efa53    7e14                    jle 0x1e3efa69                                         [39;49m[32;49m
0x55bd1e3efa55    0f1f00                  nop [rax]                                              [39;49m[32;49m
0x55bd1e3efa58    4889c1                  mov rcx, rax                                           [39;49m[32;49m
0x55bd1e3efa5b    4883e801                sub rax, 0x1                                           [39;49m[32;49m
0x55bd1e3efa5f    480fafd1                imul rdx, rcx                                          [39;49m[32;49m
0x55bd1e3efa63    4883f801                cmp rax, 0x1                                           [39;49m[32;49m
0x55bd1e3efa67    75ef                    jnz 0x1e3efa58                                         [39;49m[32;49m
0x55bd1e3efa69    488916                  mov [rsi], rdx                                         [39;49m[32;49m
0x55bd1e3efa6c    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'cfactorial2' :: codeSize = 41
Word : 0x00007fbdaac4f978 :: Compiled at : 0x000055bd1e3efa40
 =============================
::> 'wdiss' was called at namespaces/test/dev.csl 208.18 <::

 5040

 cfactorial2 :
Timer [ 1 ] : elapsed time = 0.003927466 seconds :: function : cfactorial2 : called on args : 1 - 23 : 10000 reps

 =============================
C.[34;49mcfactorial3[39;49m <:> C compiled primitive
SourceCode for C.[34;49mcfactorial3[39;49m :> 
C Primitive
 -----------------------------
Word :: C.[34;49mcfactorial3[39;49m : definition = 0x000055bd1e3efa70 : disassembly at namespaces/test/dev.csl : 209.18 :[32;49m
0x55bd1e3efa74    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x55bd1e3efa77    4c89f6                  mov rsi, r14                                           [39;49m[32;49m
0x55bd1e3efa7a    ba01000000              mov edx, 0x1                                           [39;49m[32;49m
0x55bd1e3efa7f    4883f801                cmp rax, 0x1                                           [39;49m[32;49m
0x55bd1e3efa83    7e14                    jle 0x1e3efa99                                         [39;49m[32;49m
0x55bd1e3efa85    0f1f00                  nop [rax]                                              [39;49m[32;49m
0x55bd1e3efa88    4889c1                  mov rcx, rax                                           [39;49m[32;49m
0x55bd1e3efa8b    4883e801                sub rax, 0x1                                           [39;49m[32;49m
0x55bd1e3efa8f    480fafd1                imul rdx, rcx                                          [39;49m[32;49m
0x55bd1e3efa93    4883f801                cmp rax, 0x1                                           [39;49m[32;49m
0x55bd1e3efa97    75ef                    jnz 0x1e3efa88                                         [39;49m[32;49m
0x55bd1e3efa99    488916                  mov [rsi], rdx                                         [39;49m[32;49m
0x55bd1e3efa9c    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'cfactorial3' :: codeSize = 41
Word : 0x00007fbdaac4fb30 :: Compiled at : 0x000055bd1e3efa70
 =============================
::> 'wdiss' was called at namespaces/test/dev.csl 209.18 <::

 5040

 cfactorial3 :
Timer [ 1 ] : elapsed time = 0.005507303 seconds :: function : cfactorial3 : called on args : 1 - 23 : 10000 reps

 =============================
User.[34;49mqexp[39;49m <:> csl compiled word
SourceCode for User.[34;49mqexp[39;49m :> 
[34;49m: qexp dup 1 <= if{ }else{ dup -- qexp * }fi ; [39;49m
Source code file location of [34;49mqexp[39;49m : "namespaces/test/dev.csl" : 48.2 :: we are now at : namespaces/test/dev.csl : 210.16
Compiled with : optimizeOn, inlineOn, Jcc8 on
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xaabbc15d -- code size = 92 bytes
TypeSignature : 
 -----------------------------
Word :: User.[34;49mqexp[39;49m : definition = 0x00007fbdaabbc15d : disassembly at namespaces/test/dev.csl : 210.16 :
[34;49m ..                                : qexp [39;49m[33;40mdup[39;49m[34;49m 1 <= if{ }else{ dup -- qexp * }fi ;  .. [39;49m[32;49m
0x7fbdaabbc15d    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fbdaabbc160    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabbc164    498906                  mov [r14], rax                                         [39;49m
[34;49m ..                            : qexp dup [39;49m[33;40m1[39;49m[34;49m <= if{ }else{ dup -- qexp * }fi ;  .. [39;49m[32;49m
0x7fbdaabbc167    48c7c001000000          mov rax, 0x1                                           [39;49m[32;49m
0x7fbdaabbc16e    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fbdaabbc171    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fbdaabbc174    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m ..                          : qexp dup 1 [39;49m[33;40m<=[39;49m[34;49m if{ }else{ dup -- qexp * }fi ;  .. [39;49m[32;49m
0x7fbdaabbc178    483bc1                  cmp rax, rcx                                           [39;49m[32;49m
0x7fbdaabbc17b    7f05                    jg 0xaabbc182                                          [39;49m[32;49m
0x7fbdaabbc17d    e936000000              jmp 0x7fbdaabbc1b8         	< User.[34;49mqexp[39;49m+91[32;49m >[39;49m[39;49m
[34;49m ..            : qexp dup 1 <= if{ }else{ [39;49m[33;40mdup[39;49m[34;49m -- qexp * }fi ;  .. [39;49m[32;49m
0x7fbdaabbc182    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fbdaabbc185    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabbc189    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaabbc18c    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fbdaabbc18f    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m ..        : qexp dup 1 <= if{ }else{ dup [39;49m[33;40m--[39;49m[34;49m qexp * }fi ;  .. [39;49m[32;49m
0x7fbdaabbc193    48ffc8                  dec rax                                                [39;49m[32;49m
0x7fbdaabbc196    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabbc19a    498906                  mov [r14], rax                                         [39;49m
[34;49m ..     : qexp dup 1 <= if{ }else{ dup -- [39;49m[33;40mqexp[39;49m[34;49m * }fi ;  .. [39;49m[32;49m
0x7fbdaabbc19d    e8bbffffff              call 0x7fbdaabbc15d        	< User.[34;49mqexp[39;49m : 0x00007fbdaabbc15d[32;49m >[39;49m[39;49m[32;49m
0x7fbdaabbc1a2    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fbdaabbc1a5    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fbdaabbc1a9    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m   : qexp dup 1 <= if{ }else{ dup -- qexp [39;49m[33;40m*[39;49m[34;49m }fi ;  .. [39;49m[32;49m
0x7fbdaabbc1ad    480fafc1                imul rax, rcx                                          [39;49m[32;49m
0x7fbdaabbc1b1    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabbc1b5    498906                  mov [r14], rax                                         [39;49m
[34;49m .. dup 1 <= if{ }else{ dup -- qexp * }fi [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fbdaabbc1b8    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'qexp' :: codeSize = 91
Word : 0x00007fbda95330c0 :: Compiled at : 0x00007fbdaabbc15d
 =============================
::> 'wdiss' was called at namespaces/test/dev.csl 210.16 <::

 5040

 qexp :
Timer [ 1 ] : elapsed time = 0.030298704 seconds :: function : qexp : called on args : 1 - 23 : 10000 reps

 =============================
User.[34;49mbexp[39;49m <:> csl compiled word
SourceCode for User.[34;49mbexp[39;49m :> 
[34;49m: bexp ( n ) n @ 1 > if{ n @ dup -- bexp * }else{ 1 }fi ; [39;49m
Source code file location of [34;49mbexp[39;49m : "namespaces/test/dev.csl" : 50.2 :: we are now at : namespaces/test/dev.csl : 211.13
Compiled with : optimizeOn, inlineOn, Jcc8 on
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xaabbc22e -- code size = 115 bytes
TypeSignature : 
 -----------------------------
Word :: User.[34;49mbexp[39;49m : definition = 0x00007fbdaabbc22e : disassembly at namespaces/test/dev.csl : 211.13 :
[34;49m ..                                     : [39;49m[33;40mbexp[39;49m[34;49m ( n ) n @ 1 > if{ n @ dup -- bexp * }else{ 1 }fi ;  .. [39;49m[32;49m
0x7fbdaabbc22e    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fbdaabbc232    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaabbc236    4981c608000000          add r14, 0x8                                           [39;49m
[34;49m ..                          : bexp ( n ) [39;49m[33;40mn[39;49m[34;49m @ 1 > if{ n @ dup -- bexp * }else{ 1 }fi ;  .. [39;49m[32;49m
0x7fbdaabbc23d    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m ..                    : bexp ( n ) n @ 1 [39;49m[33;40m>[39;49m[34;49m if{ n @ dup -- bexp * }else{ 1 }fi ;  .. [39;49m[32;49m
0x7fbdaabbc241    4883f801                cmp rax, 0x1                                           [39;49m[32;49m
0x7fbdaabbc245    7e40                    jle 0xaabbc287                                         [39;49m
[34;49m ..              : bexp ( n ) n @ 1 > if{ [39;49m[33;40mn[39;49m[34;49m @ dup -- bexp * }else{ 1 }fi ;  .. [39;49m[32;49m
0x7fbdaabbc247    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaabbc24b    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fbdaabbc24f    498906                  mov [r14], rax                                         [39;49m
[34;49m ..          : bexp ( n ) n @ 1 > if{ n @ [39;49m[33;40mdup[39;49m[34;49m -- bexp * }else{ 1 }fi ;  .. [39;49m[32;49m
0x7fbdaabbc252    498946f8                mov [r14-0x8], rax                                     [39;49m[32;49m
0x7fbdaabbc256    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fbdaabbc259    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m ..      : bexp ( n ) n @ 1 > if{ n @ dup [39;49m[33;40m--[39;49m[34;49m bexp * }else{ 1 }fi ;  .. [39;49m[32;49m
0x7fbdaabbc25d    48ffc8                  dec rax                                                [39;49m[32;49m
0x7fbdaabbc260    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabbc264    498906                  mov [r14], rax                                         [39;49m
[34;49m ..   : bexp ( n ) n @ 1 > if{ n @ dup -- [39;49m[33;40mbexp[39;49m[34;49m * }else{ 1 }fi ;  .. [39;49m[32;49m
0x7fbdaabbc267    e8c2ffffff              call 0x7fbdaabbc22e        	< User.[34;49mbexp[39;49m : 0x00007fbdaabbc22e[32;49m >[39;49m[39;49m[32;49m
0x7fbdaabbc26c    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fbdaabbc26f    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fbdaabbc273    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m : bexp ( n ) n @ 1 > if{ n @ dup -- bexp [39;49m[33;40m*[39;49m[34;49m }else{ 1 }fi ;  .. [39;49m[32;49m
0x7fbdaabbc277    480fafc1                imul rax, rcx                                          [39;49m[32;49m
0x7fbdaabbc27b    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabbc27f    498906                  mov [r14], rax                                         [39;49m
[34;49m .. p ( n ) n @ 1 > if{ n @ dup -- bexp * [39;49m[33;40m}else{[39;49m[34;49m 1 }fi ; [39;49m[32;49m
0x7fbdaabbc282    e90e000000              jmp 0x7fbdaabbc295         	< User.[34;49mbexp[39;49m+103[32;49m >[39;49m[39;49m
[34;49m ..  n @ 1 > if{ n @ dup -- bexp * }else{ [39;49m[33;40m1[39;49m[34;49m }fi ; [39;49m[32;49m
0x7fbdaabbc287    48c7c001000000          mov rax, 0x1                                           [39;49m[32;49m
0x7fbdaabbc28e    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabbc292    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  > if{ n @ dup -- bexp * }else{ 1 }fi [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fbdaabbc295    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaabbc299    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaabbc29d    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaabbc2a0    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'bexp' :: codeSize = 114
Word : 0x00007fbdaa9214f0 :: Compiled at : 0x00007fbdaabbc22e
 =============================
::> 'wdiss' was called at namespaces/test/dev.csl 211.13 <::

 5040

 bexp :
Timer [ 1 ] : elapsed time = 0.035527207 seconds :: function : bexp : called on args : 1 - 23 : 10000 reps

 =============================
User.[34;49mbexp2[39;49m <:> csl compiled word
SourceCode for User.[34;49mbexp2[39;49m :> 
[34;49m: bexp2 ( n ) { n @ 1 > } { n @ dup -- bexp2 * } { 1 } ifElse ; [39;49m
Source code file location of [34;49mbexp2[39;49m : "namespaces/test/dev.csl" : 51.2 :: we are now at : namespaces/test/dev.csl : 212.12
Compiled with : optimizeOn, inlineOn, Jcc8 on
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xaabbc2a6 -- code size = 115 bytes
TypeSignature : 
 -----------------------------
Word :: User.[34;49mbexp2[39;49m : definition = 0x00007fbdaabbc2a6 : disassembly at namespaces/test/dev.csl : 212.12 :
[34;49m ..                                     : [39;49m[33;40mbexp2[39;49m[34;49m ( n ) { n @ 1 > } { n @ dup -- bexp2 * } { 1 } ifElse ;  .. [39;49m[32;49m
0x7fbdaabbc2a6    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fbdaabbc2aa    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaabbc2ae    4981c608000000          add r14, 0x8                                           [39;49m
[34;49m ..                       : bexp2 ( n ) { [39;49m[33;40mn[39;49m[34;49m @ 1 > } { n @ dup -- bexp2 * } { 1 } ifElse ;  .. [39;49m[32;49m
0x7fbdaabbc2b5    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m ..                 : bexp2 ( n ) { n @ 1 [39;49m[33;40m>[39;49m[34;49m } { n @ dup -- bexp2 * } { 1 } ifElse ;  .. [39;49m[32;49m
0x7fbdaabbc2b9    4883f801                cmp rax, 0x1                                           [39;49m[32;49m
0x7fbdaabbc2bd    7e40                    jle 0xaabbc2ff                                         [39;49m
[34;49m ..           : bexp2 ( n ) { n @ 1 > } { [39;49m[33;40mn[39;49m[34;49m @ dup -- bexp2 * } { 1 } ifElse ;  .. [39;49m[32;49m
0x7fbdaabbc2bf    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaabbc2c3    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fbdaabbc2c7    498906                  mov [r14], rax                                         [39;49m
[34;49m ..       : bexp2 ( n ) { n @ 1 > } { n @ [39;49m[33;40mdup[39;49m[34;49m -- bexp2 * } { 1 } ifElse ;  .. [39;49m[32;49m
0x7fbdaabbc2ca    498946f8                mov [r14-0x8], rax                                     [39;49m[32;49m
0x7fbdaabbc2ce    498b06                  mov rax, [r14]                                         [39;49m
[34;49m ..             : bexp2 ( n ) { n @ 1 > } [39;49m[33;40m{[39;49m[34;49m n @ dup -- bexp2 * } { 1 } ifElse ;  .. [39;49m[32;49m
0x7fbdaabbc2d1    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m ..   : bexp2 ( n ) { n @ 1 > } { n @ dup [39;49m[33;40m--[39;49m[34;49m bexp2 * } { 1 } ifElse ;  .. [39;49m[32;49m
0x7fbdaabbc2d5    48ffc8                  dec rax                                                [39;49m[32;49m
0x7fbdaabbc2d8    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabbc2dc    498906                  mov [r14], rax                                         [39;49m
[34;49m   : bexp2 ( n ) { n @ 1 > } { n @ dup -- [39;49m[33;40mbexp2[39;49m[34;49m * } { 1 } ifElse ;  .. [39;49m[32;49m
0x7fbdaabbc2df    e8c2ffffff              call 0x7fbdaabbc2a6        	< User.[34;49mbexp2[39;49m : 0x00007fbdaabbc2a6[32;49m >[39;49m[39;49m[32;49m
0x7fbdaabbc2e4    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fbdaabbc2e7    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fbdaabbc2eb    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m ..  ( n ) { n @ 1 > } { n @ dup -- bexp2 [39;49m[33;40m*[39;49m[34;49m } { 1 } ifElse ; [39;49m[32;49m
0x7fbdaabbc2ef    480fafc1                imul rax, rcx                                          [39;49m[32;49m
0x7fbdaabbc2f3    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabbc2f7    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  n ) { n @ 1 > } { n @ dup -- bexp2 * [39;49m[33;40m}[39;49m[34;49m { 1 } ifElse ; [39;49m[32;49m
0x7fbdaabbc2fa    e90e000000              jmp 0x7fbdaabbc30d         	< User.[34;49mbexp2[39;49m+103[32;49m >[39;49m[39;49m
[34;49m ..  { n @ 1 > } { n @ dup -- bexp2 * } { [39;49m[33;40m1[39;49m[34;49m } ifElse ; [39;49m[32;49m
0x7fbdaabbc2ff    48c7c001000000          mov rax, 0x1                                           [39;49m[32;49m
0x7fbdaabbc306    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabbc30a    498906                  mov [r14], rax                                         [39;49m
[34;49m .. } { n @ dup -- bexp2 * } { 1 } ifElse [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fbdaabbc30d    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaabbc311    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaabbc315    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaabbc318    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'bexp2' :: codeSize = 114
Word : 0x00007fbdaa8e5cd8 :: Compiled at : 0x00007fbdaabbc2a6
 =============================
::> 'wdiss' was called at namespaces/test/dev.csl 212.12 <::

 5040

 bexp2 :
Timer [ 1 ] : elapsed time = 0.035560500 seconds :: function : bexp2 : called on args : 1 - 23 : 10000 reps

 =============================
C_Syntax.[34;49mfactoriali[39;49m <:> csl compiled word, prefix
SourceCode for C_Syntax.[34;49mfactoriali[39;49m :> 
[34;49mint factoriali ( byte REG n | REG res ) { res = 1; while ( n >= 2 ) { res = res * (n--) ; } return res; } [39;49m
Source code file location of [34;49mfactoriali[39;49m : "namespaces/test/dev.csl" : 21.15 :: we are now at : namespaces/test/dev.csl : 213.17
Compiled with : optimizeOn, inlineOn, c_syntaxOn, infixOn, Jcc8 on
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xaabbc0d7 -- code size = 29 bytes
TypeSignature : 
 -----------------------------
Word :: C_Syntax.[34;49mfactoriali[39;49m : definition = 0x00007fbdaabbc0d7 : disassembly at namespaces/test/dev.csl : 213.17 :
[34;49m ..                                   int [39;49m[33;40mfactoriali[39;49m[34;49m ( byte REG n | REG res ) { res = 1; while ( n >= 2 ) { res = res * (n--) ; } return res; } .. [39;49m[32;49m
0x7fbdaabbc0d7    498b3e                  mov rdi, [r14]                                         [39;49m
[34;49m .. iali ( byte REG n | REG res ) { res = [39;49m[33;40m1[39;49m[34;49m; while ( n >= 2 ) { res = res * (n--) ; } return res; } [39;49m[32;49m
0x7fbdaabbc0da    48c7c601000000          mov rsi, 0x1                                           [39;49m
[34;49m .. EG n | REG res ) { res = 1; while ( n [39;49m[33;40m>=[39;49m[34;49m 2 ) { res = res * (n--) ; } return res; } [39;49m[32;49m
0x7fbdaabbc0e1    4883ff02                cmp rdi, 0x2                                           [39;49m[32;49m
0x7fbdaabbc0e5    7c09                    jl 0xaabbc0f0                                          [39;49m
[34;49m .. res = 1; while ( n >= 2 ) { res = res [39;49m[33;40m*[39;49m[34;49m (n--) ; } return res; } [39;49m[32;49m
0x7fbdaabbc0e7    480faff7                imul rsi, rdi                                          [39;49m
[34;49m .. = 1; while ( n >= 2 ) { res = res * (n[39;49m[33;40m--[39;49m[34;49m) ; } return res; } [39;49m[32;49m
0x7fbdaabbc0eb    48ffcf                  dec rdi                                                [39;49m
[34;49m .. hile ( n >= 2 ) { res = res * (n--) ; [39;49m[33;40m}[39;49m[34;49m return res; } [39;49m[32;49m
0x7fbdaabbc0ee    ebf1                    jmp 0x7fbdaabbc0e1         	< C_Syntax.[34;49mfactoriali[39;49m+10[32;49m >[39;49m[39;49m
[34;49m .. >= 2 ) { res = res * (n--) ; } return [39;49m[33;40mres[39;49m[34;49m; } [39;49m[32;49m
0x7fbdaabbc0f0    498936                  mov [r14], rsi                                         [39;49m[32;49m
0x7fbdaabbc0f3    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'factoriali' :: codeSize = 28
Word : 0x00007fbdaacff400 :: Compiled at : 0x00007fbdaabbc0d7
 =============================
::> 'wdiss' was called at namespaces/test/dev.csl 213.17 <::

 5040

 factoriali :
Timer [ 1 ] : elapsed time = 0.004932491 seconds :: function : factoriali : called on args : 1 - 23 : 10000 reps

 =============================
User.[34;49mqexp[39;49m <:> csl compiled word
SourceCode for User.[34;49mqexp[39;49m :> 
[34;49m: qexp dup 1 <= if{ }else{ dup -- qexp * }fi ; [39;49m
Source code file location of [34;49mqexp[39;49m : "namespaces/test/dev.csl" : 48.2 :: we are now at : namespaces/test/dev.csl : 214.13
Compiled with : optimizeOn, inlineOn, Jcc8 on
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xaabbc15d -- code size = 92 bytes
TypeSignature : 
 -----------------------------
Word :: User.[34;49mqexp[39;49m : definition = 0x00007fbdaabbc15d : disassembly at namespaces/test/dev.csl : 214.13 :
[34;49m ..                                : qexp [39;49m[33;40mdup[39;49m[34;49m 1 <= if{ }else{ dup -- qexp * }fi ;  .. [39;49m[32;49m
0x7fbdaabbc15d    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fbdaabbc160    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabbc164    498906                  mov [r14], rax                                         [39;49m
[34;49m ..                            : qexp dup [39;49m[33;40m1[39;49m[34;49m <= if{ }else{ dup -- qexp * }fi ;  .. [39;49m[32;49m
0x7fbdaabbc167    48c7c001000000          mov rax, 0x1                                           [39;49m[32;49m
0x7fbdaabbc16e    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fbdaabbc171    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fbdaabbc174    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m ..                          : qexp dup 1 [39;49m[33;40m<=[39;49m[34;49m if{ }else{ dup -- qexp * }fi ;  .. [39;49m[32;49m
0x7fbdaabbc178    483bc1                  cmp rax, rcx                                           [39;49m[32;49m
0x7fbdaabbc17b    7f05                    jg 0xaabbc182                                          [39;49m[32;49m
0x7fbdaabbc17d    e936000000              jmp 0x7fbdaabbc1b8         	< User.[34;49mqexp[39;49m+91[32;49m >[39;49m[39;49m
[34;49m ..            : qexp dup 1 <= if{ }else{ [39;49m[33;40mdup[39;49m[34;49m -- qexp * }fi ;  .. [39;49m[32;49m
0x7fbdaabbc182    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fbdaabbc185    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabbc189    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaabbc18c    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fbdaabbc18f    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m ..        : qexp dup 1 <= if{ }else{ dup [39;49m[33;40m--[39;49m[34;49m qexp * }fi ;  .. [39;49m[32;49m
0x7fbdaabbc193    48ffc8                  dec rax                                                [39;49m[32;49m
0x7fbdaabbc196    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabbc19a    498906                  mov [r14], rax                                         [39;49m
[34;49m ..     : qexp dup 1 <= if{ }else{ dup -- [39;49m[33;40mqexp[39;49m[34;49m * }fi ;  .. [39;49m[32;49m
0x7fbdaabbc19d    e8bbffffff              call 0x7fbdaabbc15d        	< User.[34;49mqexp[39;49m : 0x00007fbdaabbc15d[32;49m >[39;49m[39;49m[32;49m
0x7fbdaabbc1a2    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fbdaabbc1a5    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fbdaabbc1a9    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m   : qexp dup 1 <= if{ }else{ dup -- qexp [39;49m[33;40m*[39;49m[34;49m }fi ;  .. [39;49m[32;49m
0x7fbdaabbc1ad    480fafc1                imul rax, rcx                                          [39;49m[32;49m
0x7fbdaabbc1b1    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabbc1b5    498906                  mov [r14], rax                                         [39;49m
[34;49m .. dup 1 <= if{ }else{ dup -- qexp * }fi [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fbdaabbc1b8    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'qexp' :: codeSize = 91
Word : 0x00007fbda95330c0 :: Compiled at : 0x00007fbdaabbc15d
 =============================
::> 'wdiss' was called at namespaces/test/dev.csl 214.13 <::

 5040

 qexp :
Timer [ 1 ] : elapsed time = 0.031318487 seconds :: function : qexp : called on args : 1 - 23 : 10000 reps

 =============================
User.[34;49mqexp2[39;49m <:> csl compiled word
SourceCode for User.[34;49mqexp2[39;49m :> 
[34;49m: qexp2 dup 1 <= ?< >:< dup -- qexp2 * >? ; [39;49m
Source code file location of [34;49mqexp2[39;49m : "namespaces/test/dev.csl" : 49.2 :: we are now at : namespaces/test/dev.csl : 215.14
Compiled with : optimizeOn, inlineOn, Jcc8 on
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xaabbc1cd -- code size = 92 bytes
TypeSignature : 
 -----------------------------
Word :: User.[34;49mqexp2[39;49m : definition = 0x00007fbdaabbc1cd : disassembly at namespaces/test/dev.csl : 215.14 :
[34;49m ..                               : qexp2 [39;49m[33;40mdup[39;49m[34;49m 1 <= ?< >:< dup -- qexp2 * >? ;  .. [39;49m[32;49m
0x7fbdaabbc1cd    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fbdaabbc1d0    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabbc1d4    498906                  mov [r14], rax                                         [39;49m
[34;49m ..                           : qexp2 dup [39;49m[33;40m1[39;49m[34;49m <= ?< >:< dup -- qexp2 * >? ;  .. [39;49m[32;49m
0x7fbdaabbc1d7    48c7c001000000          mov rax, 0x1                                           [39;49m[32;49m
0x7fbdaabbc1de    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fbdaabbc1e1    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fbdaabbc1e4    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m ..                         : qexp2 dup 1 [39;49m[33;40m<=[39;49m[34;49m ?< >:< dup -- qexp2 * >? ;  .. [39;49m[32;49m
0x7fbdaabbc1e8    483bc1                  cmp rax, rcx                                           [39;49m[32;49m
0x7fbdaabbc1eb    7f05                    jg 0xaabbc1f2                                          [39;49m
[34;49m ..                   : qexp2 dup 1 <= ?< [39;49m[33;40m>:<[39;49m[34;49m dup -- qexp2 * >? ;  .. [39;49m[32;49m
0x7fbdaabbc1ed    e936000000              jmp 0x7fbdaabbc228         	< User.[34;49mqexp2[39;49m+91[32;49m >[39;49m[39;49m
[34;49m ..               : qexp2 dup 1 <= ?< >:< [39;49m[33;40mdup[39;49m[34;49m -- qexp2 * >? ;  .. [39;49m[32;49m
0x7fbdaabbc1f2    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fbdaabbc1f5    4983c608                add r14, 0x8                                           [39;49m
[34;49m ..                      : qexp2 dup 1 <= [39;49m[33;40m?<[39;49m[34;49m >:< dup -- qexp2 * >? ;  .. [39;49m[32;49m
0x7fbdaabbc1f9    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaabbc1fc    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fbdaabbc1ff    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m ..           : qexp2 dup 1 <= ?< >:< dup [39;49m[33;40m--[39;49m[34;49m qexp2 * >? ;  .. [39;49m[32;49m
0x7fbdaabbc203    48ffc8                  dec rax                                                [39;49m[32;49m
0x7fbdaabbc206    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabbc20a    498906                  mov [r14], rax                                         [39;49m
[34;49m ..        : qexp2 dup 1 <= ?< >:< dup -- [39;49m[33;40mqexp2[39;49m[34;49m * >? ;  .. [39;49m[32;49m
0x7fbdaabbc20d    e8bbffffff              call 0x7fbdaabbc1cd        	< User.[34;49mqexp2[39;49m : 0x00007fbdaabbc1cd[32;49m >[39;49m[39;49m[32;49m
0x7fbdaabbc212    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fbdaabbc215    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fbdaabbc219    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m ..  : qexp2 dup 1 <= ?< >:< dup -- qexp2 [39;49m[33;40m*[39;49m[34;49m >? ;  .. [39;49m[32;49m
0x7fbdaabbc21d    480fafc1                imul rax, rcx                                          [39;49m[32;49m
0x7fbdaabbc221    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabbc225    498906                  mov [r14], rax                                         [39;49m
[34;49m: qexp2 dup 1 <= ?< >:< dup -- qexp2 * >? [39;49m[33;40m;[39;49m[34;49m  .. [39;49m[32;49m
0x7fbdaabbc228    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'qexp2' :: codeSize = 91
Word : 0x00007fbdaa93e078 :: Compiled at : 0x00007fbdaabbc1cd
 =============================
::> 'wdiss' was called at namespaces/test/dev.csl 215.14 <::

 5040

 qexp2 :
Timer [ 1 ] : elapsed time = 0.030482096 seconds :: function : qexp2 : called on args : 1 - 23 : 10000 reps

 =============================
User.[34;49mbexp[39;49m <:> csl compiled word
SourceCode for User.[34;49mbexp[39;49m :> 
[34;49m: bexp ( n ) n @ 1 > if{ n @ dup -- bexp * }else{ 1 }fi ; [39;49m
Source code file location of [34;49mbexp[39;49m : "namespaces/test/dev.csl" : 50.2 :: we are now at : namespaces/test/dev.csl : 216.11
Compiled with : optimizeOn, inlineOn, Jcc8 on
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xaabbc22e -- code size = 115 bytes
TypeSignature : 
 -----------------------------
Word :: User.[34;49mbexp[39;49m : definition = 0x00007fbdaabbc22e : disassembly at namespaces/test/dev.csl : 216.11 :
[34;49m ..                                     : [39;49m[33;40mbexp[39;49m[34;49m ( n ) n @ 1 > if{ n @ dup -- bexp * }else{ 1 }fi ;  .. [39;49m[32;49m
0x7fbdaabbc22e    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fbdaabbc232    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaabbc236    4981c608000000          add r14, 0x8                                           [39;49m
[34;49m ..                          : bexp ( n ) [39;49m[33;40mn[39;49m[34;49m @ 1 > if{ n @ dup -- bexp * }else{ 1 }fi ;  .. [39;49m[32;49m
0x7fbdaabbc23d    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m ..                    : bexp ( n ) n @ 1 [39;49m[33;40m>[39;49m[34;49m if{ n @ dup -- bexp * }else{ 1 }fi ;  .. [39;49m[32;49m
0x7fbdaabbc241    4883f801                cmp rax, 0x1                                           [39;49m[32;49m
0x7fbdaabbc245    7e40                    jle 0xaabbc287                                         [39;49m
[34;49m ..              : bexp ( n ) n @ 1 > if{ [39;49m[33;40mn[39;49m[34;49m @ dup -- bexp * }else{ 1 }fi ;  .. [39;49m[32;49m
0x7fbdaabbc247    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaabbc24b    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fbdaabbc24f    498906                  mov [r14], rax                                         [39;49m
[34;49m ..          : bexp ( n ) n @ 1 > if{ n @ [39;49m[33;40mdup[39;49m[34;49m -- bexp * }else{ 1 }fi ;  .. [39;49m[32;49m
0x7fbdaabbc252    498946f8                mov [r14-0x8], rax                                     [39;49m[32;49m
0x7fbdaabbc256    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fbdaabbc259    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m ..      : bexp ( n ) n @ 1 > if{ n @ dup [39;49m[33;40m--[39;49m[34;49m bexp * }else{ 1 }fi ;  .. [39;49m[32;49m
0x7fbdaabbc25d    48ffc8                  dec rax                                                [39;49m[32;49m
0x7fbdaabbc260    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabbc264    498906                  mov [r14], rax                                         [39;49m
[34;49m ..   : bexp ( n ) n @ 1 > if{ n @ dup -- [39;49m[33;40mbexp[39;49m[34;49m * }else{ 1 }fi ;  .. [39;49m[32;49m
0x7fbdaabbc267    e8c2ffffff              call 0x7fbdaabbc22e        	< User.[34;49mbexp[39;49m : 0x00007fbdaabbc22e[32;49m >[39;49m[39;49m[32;49m
0x7fbdaabbc26c    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fbdaabbc26f    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fbdaabbc273    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m : bexp ( n ) n @ 1 > if{ n @ dup -- bexp [39;49m[33;40m*[39;49m[34;49m }else{ 1 }fi ;  .. [39;49m[32;49m
0x7fbdaabbc277    480fafc1                imul rax, rcx                                          [39;49m[32;49m
0x7fbdaabbc27b    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabbc27f    498906                  mov [r14], rax                                         [39;49m
[34;49m .. p ( n ) n @ 1 > if{ n @ dup -- bexp * [39;49m[33;40m}else{[39;49m[34;49m 1 }fi ; [39;49m[32;49m
0x7fbdaabbc282    e90e000000              jmp 0x7fbdaabbc295         	< User.[34;49mbexp[39;49m+103[32;49m >[39;49m[39;49m
[34;49m ..  n @ 1 > if{ n @ dup -- bexp * }else{ [39;49m[33;40m1[39;49m[34;49m }fi ; [39;49m[32;49m
0x7fbdaabbc287    48c7c001000000          mov rax, 0x1                                           [39;49m[32;49m
0x7fbdaabbc28e    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabbc292    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  > if{ n @ dup -- bexp * }else{ 1 }fi [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fbdaabbc295    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaabbc299    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaabbc29d    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaabbc2a0    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'bexp' :: codeSize = 114
Word : 0x00007fbdaa9214f0 :: Compiled at : 0x00007fbdaabbc22e
 =============================
::> 'wdiss' was called at namespaces/test/dev.csl 216.11 <::

 5040

 bexp :
Timer [ 1 ] : elapsed time = 0.035504584 seconds :: function : bexp : called on args : 1 - 23 : 10000 reps

 =============================
User.[34;49mbexp2[39;49m <:> csl compiled word
SourceCode for User.[34;49mbexp2[39;49m :> 
[34;49m: bexp2 ( n ) { n @ 1 > } { n @ dup -- bexp2 * } { 1 } ifElse ; [39;49m
Source code file location of [34;49mbexp2[39;49m : "namespaces/test/dev.csl" : 51.2 :: we are now at : namespaces/test/dev.csl : 217.12
Compiled with : optimizeOn, inlineOn, Jcc8 on
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xaabbc2a6 -- code size = 115 bytes
TypeSignature : 
 -----------------------------
Word :: User.[34;49mbexp2[39;49m : definition = 0x00007fbdaabbc2a6 : disassembly at namespaces/test/dev.csl : 217.12 :
[34;49m ..                                     : [39;49m[33;40mbexp2[39;49m[34;49m ( n ) { n @ 1 > } { n @ dup -- bexp2 * } { 1 } ifElse ;  .. [39;49m[32;49m
0x7fbdaabbc2a6    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fbdaabbc2aa    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaabbc2ae    4981c608000000          add r14, 0x8                                           [39;49m
[34;49m ..                       : bexp2 ( n ) { [39;49m[33;40mn[39;49m[34;49m @ 1 > } { n @ dup -- bexp2 * } { 1 } ifElse ;  .. [39;49m[32;49m
0x7fbdaabbc2b5    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m ..                 : bexp2 ( n ) { n @ 1 [39;49m[33;40m>[39;49m[34;49m } { n @ dup -- bexp2 * } { 1 } ifElse ;  .. [39;49m[32;49m
0x7fbdaabbc2b9    4883f801                cmp rax, 0x1                                           [39;49m[32;49m
0x7fbdaabbc2bd    7e40                    jle 0xaabbc2ff                                         [39;49m
[34;49m ..           : bexp2 ( n ) { n @ 1 > } { [39;49m[33;40mn[39;49m[34;49m @ dup -- bexp2 * } { 1 } ifElse ;  .. [39;49m[32;49m
0x7fbdaabbc2bf    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaabbc2c3    4983c610                add r14, 0x10                                          [39;49m[32;49m
0x7fbdaabbc2c7    498906                  mov [r14], rax                                         [39;49m
[34;49m ..       : bexp2 ( n ) { n @ 1 > } { n @ [39;49m[33;40mdup[39;49m[34;49m -- bexp2 * } { 1 } ifElse ;  .. [39;49m[32;49m
0x7fbdaabbc2ca    498946f8                mov [r14-0x8], rax                                     [39;49m[32;49m
0x7fbdaabbc2ce    498b06                  mov rax, [r14]                                         [39;49m
[34;49m ..             : bexp2 ( n ) { n @ 1 > } [39;49m[33;40m{[39;49m[34;49m n @ dup -- bexp2 * } { 1 } ifElse ;  .. [39;49m[32;49m
0x7fbdaabbc2d1    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m ..   : bexp2 ( n ) { n @ 1 > } { n @ dup [39;49m[33;40m--[39;49m[34;49m bexp2 * } { 1 } ifElse ;  .. [39;49m[32;49m
0x7fbdaabbc2d5    48ffc8                  dec rax                                                [39;49m[32;49m
0x7fbdaabbc2d8    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabbc2dc    498906                  mov [r14], rax                                         [39;49m
[34;49m   : bexp2 ( n ) { n @ 1 > } { n @ dup -- [39;49m[33;40mbexp2[39;49m[34;49m * } { 1 } ifElse ;  .. [39;49m[32;49m
0x7fbdaabbc2df    e8c2ffffff              call 0x7fbdaabbc2a6        	< User.[34;49mbexp2[39;49m : 0x00007fbdaabbc2a6[32;49m >[39;49m[39;49m[32;49m
0x7fbdaabbc2e4    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fbdaabbc2e7    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fbdaabbc2eb    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m ..  ( n ) { n @ 1 > } { n @ dup -- bexp2 [39;49m[33;40m*[39;49m[34;49m } { 1 } ifElse ; [39;49m[32;49m
0x7fbdaabbc2ef    480fafc1                imul rax, rcx                                          [39;49m[32;49m
0x7fbdaabbc2f3    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabbc2f7    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  n ) { n @ 1 > } { n @ dup -- bexp2 * [39;49m[33;40m}[39;49m[34;49m { 1 } ifElse ; [39;49m[32;49m
0x7fbdaabbc2fa    e90e000000              jmp 0x7fbdaabbc30d         	< User.[34;49mbexp2[39;49m+103[32;49m >[39;49m[39;49m
[34;49m ..  { n @ 1 > } { n @ dup -- bexp2 * } { [39;49m[33;40m1[39;49m[34;49m } ifElse ; [39;49m[32;49m
0x7fbdaabbc2ff    48c7c001000000          mov rax, 0x1                                           [39;49m[32;49m
0x7fbdaabbc306    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabbc30a    498906                  mov [r14], rax                                         [39;49m
[34;49m .. } { n @ dup -- bexp2 * } { 1 } ifElse [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fbdaabbc30d    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaabbc311    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaabbc315    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaabbc318    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'bexp2' :: codeSize = 114
Word : 0x00007fbdaa8e5cd8 :: Compiled at : 0x00007fbdaabbc2a6
 =============================
::> 'wdiss' was called at namespaces/test/dev.csl 217.12 <::

 5040

 bexp2 :
Timer [ 1 ] : elapsed time = 0.035471733 seconds :: function : bexp2 : called on args : 1 - 23 : 10000 reps

 =============================
Root.[34;49mbexp3[39;49m <:> csl compiled word
SourceCode for Root.[34;49mbexp3[39;49m :> 
[34;49m: bexp3 ( n ) { n @ 1 > } { n @ n @ -- bexp3 * } { 1 } ifElse ; [39;49m
Source code file location of [34;49mbexp3[39;49m : "namespaces/test/dev0.csl" : 354.2 :: we are now at : namespaces/test/dev.csl : 218.12
Compiled with : optimizeOn, inlineOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xaabb8715 -- code size = 112 bytes
TypeSignature : 
 -----------------------------
Word :: Root.[34;49mbexp3[39;49m : definition = 0x00007fbdaabb8715 : disassembly at namespaces/test/dev.csl : 218.12 :
[34;49m ..                                     : [39;49m[33;40mbexp3[39;49m[34;49m ( n ) { n @ 1 > } { n @ n @ -- bexp3 * } { 1 } ifElse ;  .. [39;49m[32;49m
0x7fbdaabb8715    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fbdaabb8719    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaabb871d    4981c608000000          add r14, 0x8                                           [39;49m
[34;49m ..                       : bexp3 ( n ) { [39;49m[33;40mn[39;49m[34;49m @ 1 > } { n @ n @ -- bexp3 * } { 1 } ifElse ;  .. [39;49m[32;49m
0x7fbdaabb8724    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m ..                 : bexp3 ( n ) { n @ 1 [39;49m[33;40m>[39;49m[34;49m } { n @ n @ -- bexp3 * } { 1 } ifElse ;  .. [39;49m[32;49m
0x7fbdaabb8728    4883f801                cmp rax, 0x1                                           [39;49m[32;49m
0x7fbdaabb872c    0f8e39000000            jle 0x7fbdaabb876b         	< Root.[34;49mbexp3[39;49m+86[32;49m >[39;49m[39;49m
[34;49m ..           : bexp3 ( n ) { n @ 1 > } { [39;49m[33;40mn[39;49m[34;49m @ n @ -- bexp3 * } { 1 } ifElse ;  .. [39;49m[32;49m
0x7fbdaabb8732    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaabb8736    4983c608                add r14, 0x8                                           [39;49m
[34;49m ..               : bexp3 ( n ) { n @ 1 > [39;49m[33;40m}[39;49m[34;49m { n @ n @ -- bexp3 * } { 1 } ifElse ;  .. [39;49m[32;49m
0x7fbdaabb873a    498906                  mov [r14], rax                                         [39;49m
[34;49m ..       : bexp3 ( n ) { n @ 1 > } { n @ [39;49m[33;40mn[39;49m[34;49m @ -- bexp3 * } { 1 } ifElse ;  .. [39;49m[32;49m
0x7fbdaabb873d    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m ..   : bexp3 ( n ) { n @ 1 > } { n @ n @ [39;49m[33;40m--[39;49m[34;49m bexp3 * } { 1 } ifElse ;  .. [39;49m[32;49m
0x7fbdaabb8741    48ffc8                  dec rax                                                [39;49m[32;49m
0x7fbdaabb8744    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb8748    498906                  mov [r14], rax                                         [39;49m
[34;49m   : bexp3 ( n ) { n @ 1 > } { n @ n @ -- [39;49m[33;40mbexp3[39;49m[34;49m * } { 1 } ifElse ;  .. [39;49m[32;49m
0x7fbdaabb874b    e8c5ffffff              call 0x7fbdaabb8715        	< Root.[34;49mbexp3[39;49m : 0x00007fbdaabb8715[32;49m >[39;49m[39;49m[32;49m
0x7fbdaabb8750    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fbdaabb8753    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fbdaabb8757    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m ..  ( n ) { n @ 1 > } { n @ n @ -- bexp3 [39;49m[33;40m*[39;49m[34;49m } { 1 } ifElse ; [39;49m[32;49m
0x7fbdaabb875b    480fafc1                imul rax, rcx                                          [39;49m[32;49m
0x7fbdaabb875f    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb8763    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  n ) { n @ 1 > } { n @ n @ -- bexp3 * [39;49m[33;40m}[39;49m[34;49m { 1 } ifElse ; [39;49m[32;49m
0x7fbdaabb8766    e90e000000              jmp 0x7fbdaabb8779         	< Root.[34;49mbexp3[39;49m+100[32;49m >[39;49m[39;49m
[34;49m ..  { n @ 1 > } { n @ n @ -- bexp3 * } { [39;49m[33;40m1[39;49m[34;49m } ifElse ; [39;49m[32;49m
0x7fbdaabb876b    48c7c001000000          mov rax, 0x1                                           [39;49m[32;49m
0x7fbdaabb8772    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb8776    498906                  mov [r14], rax                                         [39;49m
[34;49m .. } { n @ n @ -- bexp3 * } { 1 } ifElse [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fbdaabb8779    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaabb877d    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaabb8781    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaabb8784    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'bexp3' :: codeSize = 111
Word : 0x00007fbda80ab890 :: Compiled at : 0x00007fbdaabb8715
 =============================
::> 'wdiss' was called at namespaces/test/dev.csl 218.12 <::

 5040

 bexp3 :
Timer [ 1 ] : elapsed time = 0.026967693 seconds :: function : bexp3 : called on args : 1 - 23 : 10000 reps

 =============================
C.[34;49mfac[39;49m <:> csl compiled word
SourceCode for C.[34;49mfac[39;49m :> 
[34;49m: fac ( n | rec ) rec 1 = { n @ 1 > } { n @ rec @ * rec store n -- } while return rec @ ; [39;49m
Source code file location of [34;49mfac[39;49m : "namespaces/test/dev0.csl" : 65.2 :: we are now at : namespaces/test/dev.csl : 219.10
Compiled with : optimizeOn, inlineOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xaabb79eb -- code size = 84 bytes
TypeSignature : 
 -----------------------------
Word :: C.[34;49mfac[39;49m : definition = 0x00007fbdaabb79eb : disassembly at namespaces/test/dev.csl : 219.10 :
[34;49m ..                                     : [39;49m[33;40mfac[39;49m[34;49m ( n | rec )  rec 1 =  { n @ 1 > } { n @ rec @ * rec store n -- } while  return rec @ ;  .. [39;49m[32;49m
0x7fbdaabb79eb    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fbdaabb79ef    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaabb79f3    4981c610000000          add r14, 0x10                                          [39;49m
[34;49m ..                    : fac ( n | rec )  [39;49m[33;40mrec[39;49m[34;49m 1 =  { n @ 1 > } { n @ rec @ * rec store n -- } while  return rec @ ;  .. [39;49m[32;49m
0x7fbdaabb79fa    498d4708                lea rax, [r15+0x8]                                     [39;49m
[34;49m ..                : fac ( n | rec )  rec [39;49m[33;40m1[39;49m[34;49m =  { n @ 1 > } { n @ rec @ * rec store n -- } while  return rec @ ;  .. [39;49m[32;49m
0x7fbdaabb79fe    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m ..              : fac ( n | rec )  rec 1 [39;49m[33;40m=[39;49m[34;49m  { n @ 1 > } { n @ rec @ * rec store n -- } while  return rec @ ;  .. [39;49m[32;49m
0x7fbdaabb7a05    488908                  mov [rax], rcx                                         [39;49m
[34;49m ..         : fac ( n | rec )  rec 1 =  { [39;49m[33;40mn[39;49m[34;49m @ 1 > } { n @ rec @ * rec store n -- } while  return rec @ ;  .. [39;49m[32;49m
0x7fbdaabb7a08    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m ..   : fac ( n | rec )  rec 1 =  { n @ 1 [39;49m[33;40m>[39;49m[34;49m } { n @ rec @ * rec store n -- } while  return rec @ ;  .. [39;49m[32;49m
0x7fbdaabb7a0c    4883f801                cmp rax, 0x1                                           [39;49m[32;49m
0x7fbdaabb7a10    0f8e19000000            jle 0x7fbdaabb7a2f         	< C.[34;49mfac[39;49m+68[32;49m >[39;49m[39;49m
[34;49m: fac ( n | rec )  rec 1 =  { n @ 1 > } { [39;49m[33;40mn[39;49m[34;49m @ rec @ * rec store n -- } while  return rec @ ;  .. [39;49m[32;49m
0x7fbdaabb7a16    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. n | rec )  rec 1 =  { n @ 1 > } { n @ [39;49m[33;40mrec[39;49m[34;49m @ * rec store n -- } while  return rec @ ; [39;49m[32;49m
0x7fbdaabb7a1a    498b4f08                mov rcx, [r15+0x8]                                     [39;49m
[34;49m .. c )  rec 1 =  { n @ 1 > } { n @ rec @ [39;49m[33;40m*[39;49m[34;49m rec store n -- } while  return rec @ ; [39;49m[32;49m
0x7fbdaabb7a1e    480fafc1                imul rax, rcx                                          [39;49m
[34;49m .. )  rec 1 =  { n @ 1 > } { n @ rec @ * [39;49m[33;40mrec[39;49m[34;49m store n -- } while  return rec @ ; [39;49m[32;49m
0x7fbdaabb7a22    498d4f08                lea rcx, [r15+0x8]                                     [39;49m[32;49m
0x7fbdaabb7a26    488901                  mov [rcx], rax                                         [39;49m
[34;49m .. { n @ 1 > } { n @ rec @ * rec store n [39;49m[33;40m--[39;49m[34;49m } while  return rec @ ; [39;49m[32;49m
0x7fbdaabb7a29    49ff4ff8                dec qword [r15-0x8]                                    [39;49m
[34;49m ..  @ 1 > } { n @ rec @ * rec store n -- [39;49m[33;40m}[39;49m[34;49m while  return rec @ ; [39;49m[32;49m
0x7fbdaabb7a2d    ebd9                    jmp 0x7fbdaabb7a08         	< C.[34;49mfac[39;49m+29[32;49m >[39;49m[39;49m[32;49m
0x7fbdaabb7a2f    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m ..  rec store n -- } while  return rec @ [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fbdaabb7a33    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaabb7a37    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m
[34;49m .. ec @ * rec store n -- } while  return [39;49m[33;40mrec[39;49m[34;49m @ ; [39;49m[32;49m
0x7fbdaabb7a3b    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaabb7a3e    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'fac' :: codeSize = 83
Word : 0x00007fbda806cf30 :: Compiled at : 0x00007fbdaabb79eb
 =============================
::> 'wdiss' was called at namespaces/test/dev.csl 219.10 <::

 5040

 fac :
Timer [ 1 ] : elapsed time = 0.011943387 seconds :: function : fac : called on args : 1 - 23 : 10000 reps

 =============================
C_Syntax.[34;49mfac5[39;49m <:> csl compiled word
SourceCode for C_Syntax.[34;49mfac5[39;49m :> 
[34;49mint fac5 ( REG n | REG facc ) { facc = 1 ; while ( n > 1 ) { facc = facc * (n --) ; } return facc ; } [39;49m
Source code file location of [34;49mfac5[39;49m : "namespaces/test/dev.csl" : 100.5 :: we are now at : namespaces/test/dev.csl : 220.11
Compiled with : optimizeOn, inlineOn, c_syntaxOn, infixOn, Jcc8 on
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xaabbc455 -- code size = 29 bytes
TypeSignature : 
 -----------------------------
Word :: C_Syntax.[34;49mfac5[39;49m : definition = 0x00007fbdaabbc455 : disassembly at namespaces/test/dev.csl : 220.11 :
[34;49m ..                                   int [39;49m[33;40mfac5[39;49m[34;49m ( REG n | REG facc )  {  facc = 1 ; while ( n > 1 )  { facc = facc * (n --) ; } return facc ; }  .. [39;49m[32;49m
0x7fbdaabbc455    498b3e                  mov rdi, [r14]                                         [39;49m
[34;49m int fac5 ( REG n | REG facc )  {  facc = [39;49m[33;40m1[39;49m[34;49m ; while ( n > 1 )  { facc = facc * (n --) ; } return facc ; }  .. [39;49m[32;49m
0x7fbdaabbc458    48c7c601000000          mov rsi, 0x1                                           [39;49m
[34;49m .. | REG facc )  {  facc = 1 ; while ( n [39;49m[33;40m>[39;49m[34;49m 1 )  { facc = facc * (n --) ; } return facc ; } [39;49m[32;49m
0x7fbdaabbc45f    4883ff01                cmp rdi, 0x1                                           [39;49m[32;49m
0x7fbdaabbc463    7e09                    jle 0xaabbc46e                                         [39;49m
[34;49m ..  = 1 ; while ( n > 1 )  { facc = facc [39;49m[33;40m*[39;49m[34;49m (n --) ; } return facc ; } [39;49m[32;49m
0x7fbdaabbc465    480faff7                imul rsi, rdi                                          [39;49m
[34;49m .. ; while ( n > 1 )  { facc = facc * (n [39;49m[33;40m--[39;49m[34;49m) ; } return facc ; } [39;49m[32;49m
0x7fbdaabbc469    48ffcf                  dec rdi                                                [39;49m
[34;49m .. e ( n > 1 )  { facc = facc * (n --) ; [39;49m[33;40m}[39;49m[34;49m return facc ; } [39;49m[32;49m
0x7fbdaabbc46c    ebf1                    jmp 0x7fbdaabbc45f         	< C_Syntax.[34;49mfac5[39;49m+10[32;49m >[39;49m[39;49m
[34;49m ..  )  { facc = facc * (n --) ; } return [39;49m[33;40mfacc[39;49m[34;49m ; } [39;49m[32;49m
0x7fbdaabbc46e    498936                  mov [r14], rsi                                         [39;49m[32;49m
0x7fbdaabbc471    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'fac5' :: codeSize = 28
Word : 0x00007fbda7baf220 :: Compiled at : 0x00007fbdaabbc455
 =============================
::> 'wdiss' was called at namespaces/test/dev.csl 220.11 <::

 5040

 fac5 :
Timer [ 1 ] : elapsed time = 0.004355574 seconds :: function : fac5 : called on args : 1 - 23 : 10000 reps

 =============================
User.[34;49mfactorial[39;49m <:> csl compiled word
SourceCode for User.[34;49mfactorial[39;49m :> 
[34;49m: factorial ( REG n | REG rec ) rec 1 = { n @ 1 > } { rec @ n @ * rec store n -- } while return rec ; [39;49m
Source code file location of [34;49mfactorial[39;49m : "namespaces/test/dev.csl" : 140.2 :: we are now at : namespaces/test/dev.csl : 222.16
Compiled with : optimizeOn, inlineOn, Jcc8 on
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xaabbc68c -- code size = 29 bytes
TypeSignature : 
 -----------------------------
Word :: User.[34;49mfactorial[39;49m : definition = 0x00007fbdaabbc68c : disassembly at namespaces/test/dev.csl : 222.16 :
[34;49m ..                           : factorial [39;49m[33;40m([39;49m[34;49m REG n | REG rec ) rec 1 = { n @ 1 > } { rec @ n @ * rec store n -- } while return rec ;  .. [39;49m[32;49m
0x7fbdaabbc68c    498b3e                  mov rdi, [r14]                                         [39;49m
[34;49m ..   : factorial ( REG n | REG rec ) rec [39;49m[33;40m1[39;49m[34;49m = { n @ 1 > } { rec @ n @ * rec store n -- } while return rec ;  .. [39;49m[32;49m
0x7fbdaabbc68f    48c7c601000000          mov rsi, 0x1                                           [39;49m
[34;49m .. l ( REG n | REG rec ) rec 1 = { n @ 1 [39;49m[33;40m>[39;49m[34;49m } { rec @ n @ * rec store n -- } while return rec ; [39;49m[32;49m
0x7fbdaabbc696    4883ff01                cmp rdi, 0x1                                           [39;49m[32;49m
0x7fbdaabbc69a    7e09                    jle 0xaabbc6a5                                         [39;49m
[34;49m .. rec ) rec 1 = { n @ 1 > } { rec @ n @ [39;49m[33;40m*[39;49m[34;49m rec store n -- } while return rec ; [39;49m[32;49m
0x7fbdaabbc69c    480faff7                imul rsi, rdi                                          [39;49m
[34;49m .. { n @ 1 > } { rec @ n @ * rec store n [39;49m[33;40m--[39;49m[34;49m } while return rec ; [39;49m[32;49m
0x7fbdaabbc6a0    48ffcf                  dec rdi                                                [39;49m
[34;49m ..  @ 1 > } { rec @ n @ * rec store n -- [39;49m[33;40m}[39;49m[34;49m while return rec ; [39;49m[32;49m
0x7fbdaabbc6a3    ebf1                    jmp 0x7fbdaabbc696         	< User.[34;49mfactorial[39;49m+10[32;49m >[39;49m[39;49m
[34;49m .. @ * rec store n -- } while return rec [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fbdaabbc6a5    498936                  mov [r14], rsi                                         [39;49m[32;49m
0x7fbdaabbc6a8    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'factorial' :: codeSize = 28
Word : 0x00007fbda7bbb988 :: Compiled at : 0x00007fbdaabbc68c
 =============================
::> 'wdiss' was called at namespaces/test/dev.csl 222.16 <::

 5040

 factorial :
Timer [ 1 ] : elapsed time = 0.004600971 seconds :: function : factorial : called on args : 1 - 23 : 10000 reps

 =============================
C.[34;49mcfactorial3[39;49m <:> C compiled primitive
SourceCode for C.[34;49mcfactorial3[39;49m :> 
C Primitive
starting at address : 0x1e3efa70 -- code size = 41 bytes
 -----------------------------
Word :: C.[34;49mcfactorial3[39;49m : definition = 0x000055bd1e3efa70 : disassembly at namespaces/test/dev.csl : 223.18 :[32;49m
0x55bd1e3efa74    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x55bd1e3efa77    4c89f6                  mov rsi, r14                                           [39;49m[32;49m
0x55bd1e3efa7a    ba01000000              mov edx, 0x1                                           [39;49m[32;49m
0x55bd1e3efa7f    4883f801                cmp rax, 0x1                                           [39;49m[32;49m
0x55bd1e3efa83    7e14                    jle 0x1e3efa99                                         [39;49m[32;49m
0x55bd1e3efa85    0f1f00                  nop [rax]                                              [39;49m[32;49m
0x55bd1e3efa88    4889c1                  mov rcx, rax                                           [39;49m[32;49m
0x55bd1e3efa8b    4883e801                sub rax, 0x1                                           [39;49m[32;49m
0x55bd1e3efa8f    480fafd1                imul rdx, rcx                                          [39;49m[32;49m
0x55bd1e3efa93    4883f801                cmp rax, 0x1                                           [39;49m[32;49m
0x55bd1e3efa97    75ef                    jnz 0x1e3efa88                                         [39;49m[32;49m
0x55bd1e3efa99    488916                  mov [rsi], rdx                                         [39;49m[32;49m
0x55bd1e3efa9c    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'cfactorial3' :: codeSize = 41
Word : 0x00007fbdaac4fb30 :: Compiled at : 0x000055bd1e3efa70
 =============================
::> 'wdiss' was called at namespaces/test/dev.csl 223.18 <::

 5040

 cfactorial3 :
Timer [ 1 ] : elapsed time = 0.005062643 seconds :: function : cfactorial3 : called on args : 1 - 23 : 10000 reps

 =============================
C.[34;49mcfactorial[39;49m <:> C compiled primitive
SourceCode for C.[34;49mcfactorial[39;49m :> 
C Primitive
starting at address : 0x1e3ef960 -- code size = 17 bytes
 -----------------------------
Word :: C.[34;49mcfactorial[39;49m : definition = 0x000055bd1e3ef960 : disassembly at namespaces/test/dev.csl : 224.17 :[32;49m
0x55bd1e3ef964    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x55bd1e3ef967    4883f801                cmp rax, 0x1                                           [39;49m[32;49m
0x55bd1e3ef96b    7f0b                    jg 0x1e3ef978                                          [39;49m[32;49m
0x55bd1e3ef96d    49c70601000000          mov qword [r14], 0x1                                   [39;49m[32;49m
0x55bd1e3ef974    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'cfactorial' :: codeSize = 17
Word : 0x00007fbdaac4f7c0 :: Compiled at : 0x000055bd1e3ef960
 =============================
::> 'wdiss' was called at namespaces/test/dev.csl 224.17 <::

 5040

 cfactorial :
Timer [ 1 ] : elapsed time = 0.008622773 seconds :: function : cfactorial : called on args : 1 - 23 : 10000 reps

 =============================
C.[34;49mcfactorial2[39;49m <:> C compiled primitive
SourceCode for C.[34;49mcfactorial2[39;49m :> 
C Primitive
starting at address : 0x1e3efa40 -- code size = 41 bytes
 -----------------------------
Word :: C.[34;49mcfactorial2[39;49m : definition = 0x000055bd1e3efa40 : disassembly at namespaces/test/dev.csl : 225.18 :[32;49m
0x55bd1e3efa44    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x55bd1e3efa47    4c89f6                  mov rsi, r14                                           [39;49m[32;49m
0x55bd1e3efa4a    ba01000000              mov edx, 0x1                                           [39;49m[32;49m
0x55bd1e3efa4f    4883f801                cmp rax, 0x1                                           [39;49m[32;49m
0x55bd1e3efa53    7e14                    jle 0x1e3efa69                                         [39;49m[32;49m
0x55bd1e3efa55    0f1f00                  nop [rax]                                              [39;49m[32;49m
0x55bd1e3efa58    4889c1                  mov rcx, rax                                           [39;49m[32;49m
0x55bd1e3efa5b    4883e801                sub rax, 0x1                                           [39;49m[32;49m
0x55bd1e3efa5f    480fafd1                imul rdx, rcx                                          [39;49m[32;49m
0x55bd1e3efa63    4883f801                cmp rax, 0x1                                           [39;49m[32;49m
0x55bd1e3efa67    75ef                    jnz 0x1e3efa58                                         [39;49m[32;49m
0x55bd1e3efa69    488916                  mov [rsi], rdx                                         [39;49m[32;49m
0x55bd1e3efa6c    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'cfactorial2' :: codeSize = 41
Word : 0x00007fbdaac4f978 :: Compiled at : 0x000055bd1e3efa40
 =============================
::> 'wdiss' was called at namespaces/test/dev.csl 225.18 <::

 5040

 cfactorial2 :
Timer [ 1 ] : elapsed time = 0.003999199 seconds :: function : cfactorial2 : called on args : 1 - 23 : 10000 reps

 =============================
C.[34;49mcfactorial3[39;49m <:> C compiled primitive
SourceCode for C.[34;49mcfactorial3[39;49m :> 
C Primitive
starting at address : 0x1e3efa70 -- code size = 41 bytes
 -----------------------------
Word :: C.[34;49mcfactorial3[39;49m : definition = 0x000055bd1e3efa70 : disassembly at namespaces/test/dev.csl : 226.18 :[32;49m
0x55bd1e3efa74    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x55bd1e3efa77    4c89f6                  mov rsi, r14                                           [39;49m[32;49m
0x55bd1e3efa7a    ba01000000              mov edx, 0x1                                           [39;49m[32;49m
0x55bd1e3efa7f    4883f801                cmp rax, 0x1                                           [39;49m[32;49m
0x55bd1e3efa83    7e14                    jle 0x1e3efa99                                         [39;49m[32;49m
0x55bd1e3efa85    0f1f00                  nop [rax]                                              [39;49m[32;49m
0x55bd1e3efa88    4889c1                  mov rcx, rax                                           [39;49m[32;49m
0x55bd1e3efa8b    4883e801                sub rax, 0x1                                           [39;49m[32;49m
0x55bd1e3efa8f    480fafd1                imul rdx, rcx                                          [39;49m[32;49m
0x55bd1e3efa93    4883f801                cmp rax, 0x1                                           [39;49m[32;49m
0x55bd1e3efa97    75ef                    jnz 0x1e3efa88                                         [39;49m[32;49m
0x55bd1e3efa99    488916                  mov [rsi], rdx                                         [39;49m[32;49m
0x55bd1e3efa9c    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'cfactorial3' :: codeSize = 41
Word : 0x00007fbdaac4fb30 :: Compiled at : 0x000055bd1e3efa70
 =============================
::> 'wdiss' was called at namespaces/test/dev.csl 226.18 <::

 5040

 cfactorial3 :
Timer [ 1 ] : elapsed time = 0.005571822 seconds :: function : cfactorial3 : called on args : 1 - 23 : 10000 reps

 =============================
C.[34;49mcfactorial_O3[39;49m <:> C compiled primitive
SourceCode for C.[34;49mcfactorial_O3[39;49m :> 
C Primitive
 -----------------------------
Word :: C.[34;49mcfactorial_O3[39;49m : definition = 0x000055bd1e3ef710 : disassembly at namespaces/test/dev.csl : 227.20 :[32;49m
0x55bd1e3ef714    4154                    push r12                                               [39;49m[32;49m
0x55bd1e3ef716    55                      push rbp                                               [39;49m[32;49m
0x55bd1e3ef717    53                      push rbx                                               [39;49m[32;49m
0x55bd1e3ef718    498b1e                  mov rbx, [r14]                                         [39;49m[32;49m
0x55bd1e3ef71b    4883fb01                cmp rbx, 0x1                                           [39;49m[32;49m
0x55bd1e3ef71f    7f0f                    jg 0x1e3ef730                                          [39;49m[32;49m
0x55bd1e3ef721    49c70601000000          mov qword [r14], 0x1                                   [39;49m[32;49m
0x55bd1e3ef728    5b                      pop rbx                                                [39;49m[32;49m
0x55bd1e3ef729    5d                      pop rbp                                                [39;49m[32;49m
0x55bd1e3ef72a    415c                    pop r12                                                [39;49m[32;49m
0x55bd1e3ef72c    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'cfactorial_O3' :: codeSize = 25
Word : 0x00007fbdaac50210 :: Compiled at : 0x000055bd1e3ef710
 =============================
::> 'wdiss' was called at namespaces/test/dev.csl 227.20 <::

 5040

 cfactorial_O3 :
Timer [ 1 ] : elapsed time = 0.008366516 seconds :: function : cfactorial_O3 : called on args : 1 - 23 : 10000 reps

 =============================
C.[34;49mcfactorial2_O3[39;49m <:> C compiled primitive
SourceCode for C.[34;49mcfactorial2_O3[39;49m :> 
C Primitive
 -----------------------------
Word :: C.[34;49mcfactorial2_O3[39;49m : definition = 0x000055bd1e3ef7c0 : disassembly at namespaces/test/dev.csl : 228.21 :[32;49m
0x55bd1e3ef7c4    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x55bd1e3ef7c7    4c89f6                  mov rsi, r14                                           [39;49m[32;49m
0x55bd1e3ef7ca    ba01000000              mov edx, 0x1                                           [39;49m[32;49m
0x55bd1e3ef7cf    4883f801                cmp rax, 0x1                                           [39;49m[32;49m
0x55bd1e3ef7d3    7e14                    jle 0x1e3ef7e9                                         [39;49m[32;49m
0x55bd1e3ef7d5    0f1f00                  nop [rax]                                              [39;49m[32;49m
0x55bd1e3ef7d8    4889c1                  mov rcx, rax                                           [39;49m[32;49m
0x55bd1e3ef7db    4883e801                sub rax, 0x1                                           [39;49m[32;49m
0x55bd1e3ef7df    480fafd1                imul rdx, rcx                                          [39;49m[32;49m
0x55bd1e3ef7e3    4883f801                cmp rax, 0x1                                           [39;49m[32;49m
0x55bd1e3ef7e7    75ef                    jnz 0x1e3ef7d8                                         [39;49m[32;49m
0x55bd1e3ef7e9    488916                  mov [rsi], rdx                                         [39;49m[32;49m
0x55bd1e3ef7ec    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'cfactorial2_O3' :: codeSize = 41
Word : 0x00007fbdaac503c8 :: Compiled at : 0x000055bd1e3ef7c0
 =============================
::> 'wdiss' was called at namespaces/test/dev.csl 228.21 <::

 5040

 cfactorial2_O3 :
Timer [ 1 ] : elapsed time = 0.004363599 seconds :: function : cfactorial2_O3 : called on args : 1 - 23 : 10000 reps

 =============================
C.[34;49mcfactorial3_O3[39;49m <:> C compiled primitive
SourceCode for C.[34;49mcfactorial3_O3[39;49m :> 
C Primitive
 -----------------------------
Word :: C.[34;49mcfactorial3_O3[39;49m : definition = 0x000055bd1e3ef7f0 : disassembly at namespaces/test/dev.csl : 229.21 :[32;49m
0x55bd1e3ef7f4    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x55bd1e3ef7f7    4c89f6                  mov rsi, r14                                           [39;49m[32;49m
0x55bd1e3ef7fa    ba01000000              mov edx, 0x1                                           [39;49m[32;49m
0x55bd1e3ef7ff    4883f801                cmp rax, 0x1                                           [39;49m[32;49m
0x55bd1e3ef803    7e14                    jle 0x1e3ef819                                         [39;49m[32;49m
0x55bd1e3ef805    0f1f00                  nop [rax]                                              [39;49m[32;49m
0x55bd1e3ef808    4889c1                  mov rcx, rax                                           [39;49m[32;49m
0x55bd1e3ef80b    4883e801                sub rax, 0x1                                           [39;49m[32;49m
0x55bd1e3ef80f    480fafd1                imul rdx, rcx                                          [39;49m[32;49m
0x55bd1e3ef813    4883f801                cmp rax, 0x1                                           [39;49m[32;49m
0x55bd1e3ef817    75ef                    jnz 0x1e3ef808                                         [39;49m[32;49m
0x55bd1e3ef819    488916                  mov [rsi], rdx                                         [39;49m[32;49m
0x55bd1e3ef81c    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'cfactorial3_O3' :: codeSize = 41
Word : 0x00007fbdaac50580 :: Compiled at : 0x000055bd1e3ef7f0
 =============================
::> 'wdiss' was called at namespaces/test/dev.csl 229.21 <::

 5040

 cfactorial3_O3 :
Timer [ 1 ] : elapsed time = 0.004175348 seconds :: function : cfactorial3_O3 : called on args : 1 - 23 : 10000 reps

Using Namespaces :> User Root C int Locals Int Logic Compiler Interpreter Stack Asm void Combinators X64 int64 uint16 uint8 byte Integer Pointer Class uint64 Bits Compiling a xxy x o1 DO_Experimental DObject List Experimental byteTest Experimental libc CBuffer Dlsym String CObj chey System libc Dlsym Shell Debug Control Lexer DLLNodeAlloc DLLNode Buffer a112 cta ct Ar9 Ar3 Ar2 Ar1 DLLNodeAlloc4 DLListClone DLList OpenVmTil Word Namespace StartupMacros Io Reserved Compiler Macro PreProcessor Memory Colors File Forth 

 =============================
User.[34;49mfactorial[39;49m <:> csl compiled word
SourceCode for User.[34;49mfactorial[39;49m :> 
[34;49m: factorial ( REG n | REG rec ) rec 1 = { n @ 1 > } { rec @ n @ * rec store n -- } while return rec ; [39;49m
Source code file location of [34;49mfactorial[39;49m : "namespaces/test/dev.csl" : 140.2 :: we are now at : namespaces/test/dev.csl : 231.16
Compiled with : optimizeOn, inlineOn, Jcc8 on
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xaabbc68c -- code size = 29 bytes
TypeSignature : 
 -----------------------------
Word :: User.[34;49mfactorial[39;49m : definition = 0x00007fbdaabbc68c : disassembly at namespaces/test/dev.csl : 231.16 :
[34;49m ..                           : factorial [39;49m[33;40m([39;49m[34;49m REG n | REG rec ) rec 1 = { n @ 1 > } { rec @ n @ * rec store n -- } while return rec ;  .. [39;49m[32;49m
0x7fbdaabbc68c    498b3e                  mov rdi, [r14]                                         [39;49m
[34;49m ..   : factorial ( REG n | REG rec ) rec [39;49m[33;40m1[39;49m[34;49m = { n @ 1 > } { rec @ n @ * rec store n -- } while return rec ;  .. [39;49m[32;49m
0x7fbdaabbc68f    48c7c601000000          mov rsi, 0x1                                           [39;49m
[34;49m .. l ( REG n | REG rec ) rec 1 = { n @ 1 [39;49m[33;40m>[39;49m[34;49m } { rec @ n @ * rec store n -- } while return rec ; [39;49m[32;49m
0x7fbdaabbc696    4883ff01                cmp rdi, 0x1                                           [39;49m[32;49m
0x7fbdaabbc69a    7e09                    jle 0xaabbc6a5                                         [39;49m
[34;49m .. rec ) rec 1 = { n @ 1 > } { rec @ n @ [39;49m[33;40m*[39;49m[34;49m rec store n -- } while return rec ; [39;49m[32;49m
0x7fbdaabbc69c    480faff7                imul rsi, rdi                                          [39;49m
[34;49m .. { n @ 1 > } { rec @ n @ * rec store n [39;49m[33;40m--[39;49m[34;49m } while return rec ; [39;49m[32;49m
0x7fbdaabbc6a0    48ffcf                  dec rdi                                                [39;49m
[34;49m ..  @ 1 > } { rec @ n @ * rec store n -- [39;49m[33;40m}[39;49m[34;49m while return rec ; [39;49m[32;49m
0x7fbdaabbc6a3    ebf1                    jmp 0x7fbdaabbc696         	< User.[34;49mfactorial[39;49m+10[32;49m >[39;49m[39;49m
[34;49m .. @ * rec store n -- } while return rec [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fbdaabbc6a5    498936                  mov [r14], rsi                                         [39;49m[32;49m
0x7fbdaabbc6a8    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'factorial' :: codeSize = 28
Word : 0x00007fbda7bbb988 :: Compiled at : 0x00007fbdaabbc68c
 =============================
::> 'wdiss' was called at namespaces/test/dev.csl 231.16 <::

 5040

 factorial :
Timer [ 1 ] : elapsed time = 0.004916541 seconds :: function : factorial : called on args : 1 - 23 : 10000 reps

 =============================
C_Syntax.[34;49mfaccs[39;49m <:> csl compiled word
SourceCode for C_Syntax.[34;49mfaccs[39;49m :> 
[34;49mint faccs ( REG n | REG rec ) { rec = 1 ; while ( n > 1 ) { rec = rec * n ; n-- ; } return rec ; } [39;49m
Source code file location of [34;49mfaccs[39;49m : "namespaces/test/dev.csl" : 86.6 :: we are now at : namespaces/test/dev.csl : 232.12
Compiled with : optimizeOn, inlineOn, c_syntaxOn, infixOn, Jcc8 on
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xaabbc424 -- code size = 29 bytes
TypeSignature : 
 -----------------------------
Word :: C_Syntax.[34;49mfaccs[39;49m : definition = 0x00007fbdaabbc424 : disassembly at namespaces/test/dev.csl : 232.12 :
[34;49m ..                                   int [39;49m[33;40mfaccs[39;49m[34;49m ( REG n | REG rec )  { rec = 1 ;  while ( n > 1 ) {  rec = rec * n ; n-- ;  }  return rec ; }  .. [39;49m[32;49m
0x7fbdaabbc424    498b3e                  mov rdi, [r14]                                         [39;49m
[34;49m   int faccs ( REG n | REG rec )  { rec = [39;49m[33;40m1[39;49m[34;49m ;  while ( n > 1 ) {  rec = rec * n ; n-- ;  }  return rec ; }  .. [39;49m[32;49m
0x7fbdaabbc427    48c7c601000000          mov rsi, 0x1                                           [39;49m
[34;49m .. n | REG rec )  { rec = 1 ;  while ( n [39;49m[33;40m>[39;49m[34;49m 1 ) {  rec = rec * n ; n-- ;  }  return rec ; } [39;49m[32;49m
0x7fbdaabbc42e    4883ff01                cmp rdi, 0x1                                           [39;49m[32;49m
0x7fbdaabbc432    7e09                    jle 0xaabbc43d                                         [39;49m
[34;49m ..   while ( n > 1 ) {  rec = rec * n ; n[39;49m[33;40m--[39;49m[34;49m ;  }  return rec ; } [39;49m[32;49m
0x7fbdaabbc434    480faff7                imul rsi, rdi                                          [39;49m
[34;49m ..   while ( n > 1 ) {  rec = rec * n ; n[39;49m[33;40m--[39;49m[34;49m ;  }  return rec ; } [39;49m[32;49m
0x7fbdaabbc438    48ffcf                  dec rdi                                                [39;49m
[34;49m .. e ( n > 1 ) {  rec = rec * n ; n-- ;  [39;49m[33;40m}[39;49m[34;49m  return rec ; } [39;49m[32;49m
0x7fbdaabbc43b    ebf1                    jmp 0x7fbdaabbc42e         	< C_Syntax.[34;49mfaccs[39;49m+10[32;49m >[39;49m[39;49m
[34;49m .. ) {  rec = rec * n ; n-- ;  }  return [39;49m[33;40mrec[39;49m[34;49m ; } [39;49m[32;49m
0x7fbdaabbc43d    498936                  mov [r14], rsi                                         [39;49m[32;49m
0x7fbdaabbc440    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'faccs' :: codeSize = 28
Word : 0x00007fbda7bac190 :: Compiled at : 0x00007fbdaabbc424
 =============================
::> 'wdiss' was called at namespaces/test/dev.csl 232.12 <::

 5040

 faccs :
Timer [ 1 ] : elapsed time = 0.005242799 seconds :: function : faccs : called on args : 1 - 23 : 10000 reps

 =============================
C_Syntax.[34;49mfac5[39;49m <:> csl compiled word
SourceCode for C_Syntax.[34;49mfac5[39;49m :> 
[34;49mint fac5 ( REG n | REG facc ) { facc = 1 ; while ( n > 1 ) { facc = facc * (n --) ; } return facc ; } [39;49m
Source code file location of [34;49mfac5[39;49m : "namespaces/test/dev.csl" : 100.5 :: we are now at : namespaces/test/dev.csl : 233.11
Compiled with : optimizeOn, inlineOn, c_syntaxOn, infixOn, Jcc8 on
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xaabbc455 -- code size = 29 bytes
TypeSignature : 
 -----------------------------
Word :: C_Syntax.[34;49mfac5[39;49m : definition = 0x00007fbdaabbc455 : disassembly at namespaces/test/dev.csl : 233.11 :
[34;49m ..                                   int [39;49m[33;40mfac5[39;49m[34;49m ( REG n | REG facc )  {  facc = 1 ; while ( n > 1 )  { facc = facc * (n --) ; } return facc ; }  .. [39;49m[32;49m
0x7fbdaabbc455    498b3e                  mov rdi, [r14]                                         [39;49m
[34;49m int fac5 ( REG n | REG facc )  {  facc = [39;49m[33;40m1[39;49m[34;49m ; while ( n > 1 )  { facc = facc * (n --) ; } return facc ; }  .. [39;49m[32;49m
0x7fbdaabbc458    48c7c601000000          mov rsi, 0x1                                           [39;49m
[34;49m .. | REG facc )  {  facc = 1 ; while ( n [39;49m[33;40m>[39;49m[34;49m 1 )  { facc = facc * (n --) ; } return facc ; } [39;49m[32;49m
0x7fbdaabbc45f    4883ff01                cmp rdi, 0x1                                           [39;49m[32;49m
0x7fbdaabbc463    7e09                    jle 0xaabbc46e                                         [39;49m
[34;49m ..  = 1 ; while ( n > 1 )  { facc = facc [39;49m[33;40m*[39;49m[34;49m (n --) ; } return facc ; } [39;49m[32;49m
0x7fbdaabbc465    480faff7                imul rsi, rdi                                          [39;49m
[34;49m .. ; while ( n > 1 )  { facc = facc * (n [39;49m[33;40m--[39;49m[34;49m) ; } return facc ; } [39;49m[32;49m
0x7fbdaabbc469    48ffcf                  dec rdi                                                [39;49m
[34;49m .. e ( n > 1 )  { facc = facc * (n --) ; [39;49m[33;40m}[39;49m[34;49m return facc ; } [39;49m[32;49m
0x7fbdaabbc46c    ebf1                    jmp 0x7fbdaabbc45f         	< C_Syntax.[34;49mfac5[39;49m+10[32;49m >[39;49m[39;49m
[34;49m ..  )  { facc = facc * (n --) ; } return [39;49m[33;40mfacc[39;49m[34;49m ; } [39;49m[32;49m
0x7fbdaabbc46e    498936                  mov [r14], rsi                                         [39;49m[32;49m
0x7fbdaabbc471    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'fac5' :: codeSize = 28
Word : 0x00007fbda7baf220 :: Compiled at : 0x00007fbdaabbc455
 =============================
::> 'wdiss' was called at namespaces/test/dev.csl 233.11 <::

 5040

 fac5 :
Timer [ 1 ] : elapsed time = 0.004692492 seconds :: function : fac5 : called on args : 1 - 23 : 10000 reps

 =============================
C_Syntax.[34;49mfac4[39;49m <:> csl compiled word
SourceCode for C_Syntax.[34;49mfac4[39;49m :> 
[34;49mint fac4 ( n | facc ) { int facc = 1 ; while ( n > 1 ) facc = n -- * facc ; return facc ; } [39;49m
Source code file location of [34;49mfac4[39;49m : "namespaces/compiler/c_syntax.csl" : 197.5 :: we are now at : namespaces/test/dev.csl : 234.11
Compiled with : optimizeOn, inlineOn, c_syntaxOn, infixOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xaabb6d1a -- code size = 84 bytes
TypeSignature : 
 -----------------------------
Word :: C_Syntax.[34;49mfac4[39;49m : definition = 0x00007fbdaabb6d1a : disassembly at namespaces/test/dev.csl : 234.11 :
[34;49m ..                                   int [39;49m[33;40mfac4[39;49m[34;49m ( n | facc )  {  int facc = 1 ; while ( n > 1 ) facc = n -- * facc ; return facc ; }  .. [39;49m[32;49m
0x7fbdaabb6d1a    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fbdaabb6d1e    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaabb6d22    4981c618000000          add r14, 0x18                                          [39;49m
[34;49m ..  int fac4 ( n | facc )  {  int facc = [39;49m[33;40m1[39;49m[34;49m ; while ( n > 1 ) facc = n -- * facc ; return facc ; }  .. [39;49m[32;49m
0x7fbdaabb6d29    48c7c001000000          mov rax, 0x1                                           [39;49m
[34;49m ..         int fac4 ( n | facc )  {  int [39;49m[33;40mfacc[39;49m[34;49m = 1 ; while ( n > 1 ) facc = n -- * facc ; return facc ; }  .. [39;49m[32;49m
0x7fbdaabb6d30    498d4f10                lea rcx, [r15+0x10]                                    [39;49m[32;49m
0x7fbdaabb6d34    488901                  mov [rcx], rax                                         [39;49m
[34;49m .. n | facc )  {  int facc = 1 ; while ( [39;49m[33;40mn[39;49m[34;49m > 1 ) facc = n -- * facc ; return facc ; } [39;49m[32;49m
0x7fbdaabb6d37    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. | facc )  {  int facc = 1 ; while ( n [39;49m[33;40m>[39;49m[34;49m 1 ) facc = n -- * facc ; return facc ; } [39;49m[32;49m
0x7fbdaabb6d3b    4883f801                cmp rax, 0x1                                           [39;49m[32;49m
0x7fbdaabb6d3f    0f8e19000000            jle 0x7fbdaabb6d5e         	< C_Syntax.[34;49mfac4[39;49m+68[32;49m >[39;49m[39;49m
[34;49m .. int facc = 1 ; while ( n > 1 ) facc = [39;49m[33;40mn[39;49m[34;49m -- * facc ; return facc ; } [39;49m[32;49m
0x7fbdaabb6d45    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. c = 1 ; while ( n > 1 ) facc = n -- * [39;49m[33;40mfacc[39;49m[34;49m ; return facc ; } [39;49m[32;49m
0x7fbdaabb6d49    498b4f10                mov rcx, [r15+0x10]                                    [39;49m
[34;49m .. acc = 1 ; while ( n > 1 ) facc = n -- [39;49m[33;40m*[39;49m[34;49m facc ; return facc ; } [39;49m[32;49m
0x7fbdaabb6d4d    480fafc1                imul rax, rcx                                          [39;49m
[34;49m ..  )  {  int facc = 1 ; while ( n > 1 ) [39;49m[33;40mfacc[39;49m[34;49m = n -- * facc ; return facc ; } [39;49m[32;49m
0x7fbdaabb6d51    498d4f10                lea rcx, [r15+0x10]                                    [39;49m
[34;49m ..   int facc = 1 ; while ( n > 1 ) facc [39;49m[33;40m=[39;49m[34;49m n -- * facc ; return facc ; } [39;49m[32;49m
0x7fbdaabb6d55    488901                  mov [rcx], rax                                         [39;49m
[34;49m .. t facc = 1 ; while ( n > 1 ) facc = n [39;49m[33;40m--[39;49m[34;49m * facc ; return facc ; } [39;49m[32;49m
0x7fbdaabb6d58    49ff4ff8                dec qword [r15-0x8]                                    [39;49m
[34;49m ..  ; while ( n > 1 ) facc = n -- * facc [39;49m[33;40m;[39;49m[34;49m return facc ; } [39;49m[32;49m
0x7fbdaabb6d5c    ebd9                    jmp 0x7fbdaabb6d37         	< C_Syntax.[34;49mfac4[39;49m+29[32;49m >[39;49m[39;49m[32;49m
0x7fbdaabb6d5e    498b4710                mov rax, [r15+0x10]                                    [39;49m
[34;49m ..  ) facc = n -- * facc ; return facc ; [39;49m[33;40m}[39;49m[34;49m [39;49m[32;49m
0x7fbdaabb6d62    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaabb6d66    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m
[34;49m .. ( n > 1 ) facc = n -- * facc ; return [39;49m[33;40mfacc[39;49m[34;49m ; } [39;49m[32;49m
0x7fbdaabb6d6a    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaabb6d6d    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'fac4' :: codeSize = 83
Word : 0x00007fbda80222b8 :: Compiled at : 0x00007fbdaabb6d1a
 =============================
::> 'wdiss' was called at namespaces/test/dev.csl 234.11 <::

 5040

 fac4 :
Timer [ 1 ] : elapsed time = 0.012231525 seconds :: function : fac4 : called on args : 1 - 23 : 10000 reps

 =============================
C_Syntax.[34;49mcpow[39;49m <:> csl compiled word
SourceCode for C_Syntax.[34;49mcpow[39;49m :> 
[34;49mint cpow ( base power | out ) { for ( out = 1 ; power ; power -= 1 ) { out = out * base ; } return out ; } [39;49m
Source code file location of [34;49mcpow[39;49m : "namespaces/test/dev.csl" : 244.9 :: we are now at : namespaces/test/dev.csl : 246.17
Compiled with : optimizeOn, inlineOn, c_syntaxOn, infixOn, Jcc8 on
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xaabbcdf0 -- code size = 100 bytes
TypeSignature : 
 -----------------------------
Word :: C_Syntax.[34;49mcpow[39;49m : definition = 0x00007fbdaabbcdf0 : disassembly at namespaces/test/dev.csl : 246.17 :
[34;49m ..                                   int [39;49m[33;40mcpow[39;49m[34;49m ( base power | out ) { for ( out = 1 ; power ; power -= 1 ) { out = out * base ; } return out ;  .. [39;49m[32;49m
0x7fbdaabbcdf0    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fbdaabbcdf4    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaabbcdf8    4981c610000000          add r14, 0x10                                          [39;49m
[34;49m .. ow ( base power | out ) { for ( out = [39;49m[33;40m1[39;49m[34;49m ; power ; power -= 1 ) { out = out * base ; } return out ; } [39;49m[32;49m
0x7fbdaabbcdff    48c7c001000000          mov rax, 0x1                                           [39;49m
[34;49m .. int cpow ( base power | out ) { for ( [39;49m[33;40mout[39;49m[34;49m = 1 ; power ; power -= 1 ) { out = out * base ; } return out ; }  .. [39;49m[32;49m
0x7fbdaabbce06    498d4f08                lea rcx, [r15+0x8]                                     [39;49m
[34;49mint cpow ( base power | out ) { for ( out [39;49m[33;40m=[39;49m[34;49m 1 ; power ; power -= 1 ) { out = out * base ; } return out ; }  .. [39;49m[32;49m
0x7fbdaabbce0a    488901                  mov [rcx], rax                                         [39;49m
[34;49m ..  ( base power | out ) { for ( out = 1 [39;49m[33;40m;[39;49m[34;49m power ; power -= 1 ) { out = out * base ; } return out ; } [39;49m[32;49m
0x7fbdaabbce0d    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. r ; power -= 1 ) { out = out * base ; [39;49m[33;40m}[39;49m[34;49m return out ; } [39;49m[32;49m
0x7fbdaabbce11    4885c0                  test rax, rax                                          [39;49m[32;49m
0x7fbdaabbce14    742a                    jz 0xaabbce40                                          [39;49m
[34;49m .. ut = 1 ; power ; power -= 1 ) { out = [39;49m[33;40mout[39;49m[34;49m * base ; } return out ; } [39;49m[32;49m
0x7fbdaabbce16    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m ..  ; power ; power -= 1 ) { out = out * [39;49m[33;40mbase[39;49m[34;49m ; } return out ; } [39;49m[32;49m
0x7fbdaabbce1a    498b4ff0                mov rcx, [r15-0x10]                                    [39;49m
[34;49m ..  1 ; power ; power -= 1 ) { out = out [39;49m[33;40m*[39;49m[34;49m base ; } return out ; } [39;49m[32;49m
0x7fbdaabbce1e    480fafc1                imul rax, rcx                                          [39;49m
[34;49m .. or ( out = 1 ; power ; power -= 1 ) { [39;49m[33;40mout[39;49m[34;49m = out * base ; } return out ; } [39;49m[32;49m
0x7fbdaabbce22    498d4f08                lea rcx, [r15+0x8]                                     [39;49m
[34;49m ..  out = 1 ; power ; power -= 1 ) { out [39;49m[33;40m=[39;49m[34;49m out * base ; } return out ; } [39;49m[32;49m
0x7fbdaabbce26    488901                  mov [rcx], rax                                         [39;49m[32;49m
0x7fbdaabbce29    498d5ff8                lea rbx, [r15-0x8]                                     [39;49m
[34;49m .. wer | out ) { for ( out = 1 ; power ; [39;49m[33;40mpower[39;49m[34;49m -= 1 ) { out = out * base ; } return out ; } [39;49m[32;49m
0x7fbdaabbce2d    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m ..  ) { for ( out = 1 ; power ; power -= [39;49m[33;40m1[39;49m[34;49m ) { out = out * base ; } return out ; } [39;49m[32;49m
0x7fbdaabbce31    48c7c101000000          mov rcx, 0x1                                           [39;49m[32;49m
0x7fbdaabbce38    482bc1                  sub rax, rcx                                           [39;49m
[34;49m .. out ) { for ( out = 1 ; power ; power [39;49m[33;40m-=[39;49m[34;49m 1 ) { out = out * base ; } return out ; } [39;49m[32;49m
0x7fbdaabbce3b    488903                  mov [rbx], rax                                         [39;49m
[34;49m ..  { for ( out = 1 ; power ; power -= 1 [39;49m[33;40m)[39;49m[34;49m { out = out * base ; } return out ; } [39;49m[32;49m
0x7fbdaabbce3e    ebcd                    jmp 0x7fbdaabbce0d         	< C_Syntax.[34;49mcpow[39;49m+29[32;49m >[39;49m[39;49m[32;49m
0x7fbdaabbce40    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m .. ) { out = out * base ; } return out ; [39;49m[33;40m}[39;49m[34;49m [39;49m[32;49m
0x7fbdaabbce44    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaabbce48    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaabbce4c    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m ..  -= 1 ) { out = out * base ; } return [39;49m[33;40mout[39;49m[34;49m ; } [39;49m[32;49m
0x7fbdaabbce50    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaabbce53    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'cpow' :: codeSize = 99
Word : 0x00007fbda7bdad58 :: Compiled at : 0x00007fbdaabbcdf0
 =============================
::> 'wdiss' was called at namespaces/test/dev.csl 246.17 <::
 1073741824 1073741824
 =============================
Root.[34;49mpow[39;49m <:> csl compiled word
SourceCode for Root.[34;49mpow[39;49m :> 
[34;49m: pow ( base power | out -t II.I ) { out 1 = } { power @ 0 > } { power power @ 1 - = } { out out @ base @ * = } for return out @ ; [39;49m
Source code file location of [34;49mpow[39;49m : "namespaces/test/dev.csl" : 251.2 :: we are now at : namespaces/test/dev.csl : 254.11
Compiled with : optimizeOn, inlineOn, Jcc8 on
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xaabbce6e -- code size = 135 bytes
TypeSignature : Integer . Integer -> Integer 
 -----------------------------
Word :: Root.[34;49mpow[39;49m : definition = 0x00007fbdaabbce6e : disassembly at namespaces/test/dev.csl : 254.11 :
[34;49m ..                                     : [39;49m[33;40mpow[39;49m[34;49m ( base power | out -t II.I ) { out 1 = } { power @ 0 > } { power power @ 1 - = } { out out @ base .. [39;49m[32;49m
0x7fbdaabbce6e    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fbdaabbce72    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaabbce76    4981c610000000          add r14, 0x10                                          [39;49m
[34;49m ..  : pow ( base power | out -t II.I ) { [39;49m[33;40mout[39;49m[34;49m 1 = } { power @ 0 > } { power power @ 1 - = } { out out @ base @ * = } for return out @ ;  .. [39;49m[32;49m
0x7fbdaabbce7d    498d4708                lea rax, [r15+0x8]                                     [39;49m
[34;49m : pow ( base power | out -t II.I ) { out [39;49m[33;40m1[39;49m[34;49m = } { power @ 0 > } { power power @ 1 - = } { out out @ base @ * = } for return out @ ;  .. [39;49m[32;49m
0x7fbdaabbce81    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m ..  ( base power | out -t II.I ) { out 1 [39;49m[33;40m=[39;49m[34;49m } { power @ 0 > } { power power @ 1 - = } { out out @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fbdaabbce88    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. e power | out -t II.I ) { out 1 = } { [39;49m[33;40mpower[39;49m[34;49m @ 0 > } { power power @ 1 - = } { out out @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fbdaabbce8b    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. out -t II.I ) { out 1 = } { power @ 0 [39;49m[33;40m>[39;49m[34;49m } { power power @ 1 - = } { out out @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fbdaabbce8f    4883f800                cmp rax, 0x0                                           [39;49m[32;49m
0x7fbdaabbce93    7e4c                    jle 0xaabbcee1                                         [39;49m
[34;49m .. wer @ 0 > } { power power @ 1 - = } { [39;49m[33;40mout[39;49m[34;49m out @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fbdaabbce95    498d4708                lea rax, [r15+0x8]                                     [39;49m[32;49m
0x7fbdaabbce99    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabbce9d    498906                  mov [r14], rax                                         [39;49m
[34;49m .. @ 0 > } { power power @ 1 - = } { out [39;49m[33;40mout[39;49m[34;49m @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fbdaabbcea0    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m .. } { power power @ 1 - = } { out out @ [39;49m[33;40mbase[39;49m[34;49m @ * = } for return out @ ; [39;49m[32;49m
0x7fbdaabbcea4    498b4ff0                mov rcx, [r15-0x10]                                    [39;49m
[34;49m .. er power @ 1 - = } { out out @ base @ [39;49m[33;40m*[39;49m[34;49m = } for return out @ ; [39;49m[32;49m
0x7fbdaabbcea8    480fafc1                imul rax, rcx                                          [39;49m[32;49m
0x7fbdaabbceac    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fbdaabbceaf    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fbdaabbceb2    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m ..  power @ 1 - = } { out out @ base @ * [39;49m[33;40m=[39;49m[34;49m } for return out @ ; [39;49m[32;49m
0x7fbdaabbceb6    488908                  mov [rax], rcx                                         [39;49m
[34;49m ..  II.I ) { out 1 = } { power @ 0 > } { [39;49m[33;40mpower[39;49m[34;49m power @ 1 - = } { out out @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fbdaabbceb9    498d47f8                lea rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaabbcebd    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabbcec1    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ) { out 1 = } { power @ 0 > } { power [39;49m[33;40mpower[39;49m[34;49m @ 1 - = } { out out @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fbdaabbcec4    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. 1 = } { power @ 0 > } { power power @ [39;49m[33;40m1[39;49m[34;49m - = } { out out @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fbdaabbcec8    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m .. = } { power @ 0 > } { power power @ 1 [39;49m[33;40m-[39;49m[34;49m = } { out out @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fbdaabbcecf    482bc1                  sub rax, rcx                                           [39;49m[32;49m
0x7fbdaabbced2    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fbdaabbced5    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fbdaabbced8    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m .. } { power @ 0 > } { power power @ 1 - [39;49m[33;40m=[39;49m[34;49m } { out out @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fbdaabbcedc    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. { power @ 0 > } { power power @ 1 - = [39;49m[33;40m}[39;49m[34;49m { out out @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fbdaabbcedf    ebaa                    jmp 0x7fbdaabbce8b         	< Root.[34;49mpow[39;49m+29[32;49m >[39;49m[39;49m[32;49m
0x7fbdaabbcee1    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m .. t out @ base @ * = } for return out @ [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fbdaabbcee5    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaabbcee9    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaabbceed    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m .. } { out out @ base @ * = } for return [39;49m[33;40mout[39;49m[34;49m @ ; [39;49m[32;49m
0x7fbdaabbcef1    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaabbcef4    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'pow' :: codeSize = 134
Word : 0x00007fbda7bde158 :: Compiled at : 0x00007fbdaabbce6e
 =============================
::> 'wdiss' was called at namespaces/test/dev.csl 254.11 <::

 65536

Timer [ 1 ] : elapsed time = 0.007590207 seconds
 1073741824
 =============================
Root.[34;49mpowReg[39;49m <:> csl compiled word
SourceCode for Root.[34;49mpowReg[39;49m :> 
[34;49m: powReg ( REG base REG power | REG out -t II.I ) { out 1 = } { power @ 0 > } { power power @ 1 - = } { out out @ base @ * = } for return out @ ; [39;49m
Source code file location of [34;49mpowReg[39;49m : "namespaces/test/dev.csl" : 255.2 :: we are now at : namespaces/test/dev.csl : 257.14
Compiled with : optimizeOn, inlineOn, Jcc8 on
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xaabbcf09 -- code size = 50 bytes
TypeSignature : Integer . Integer -> Integer 
 -----------------------------
Word :: Root.[34;49mpowReg[39;49m : definition = 0x00007fbdaabbcf09 : disassembly at namespaces/test/dev.csl : 257.14 :
[34;49m ..                              : powReg [39;49m[33;40m([39;49m[34;49m REG base REG power | REG out -t II.I ) { out 1 = } { power @ 0 > } { power power @ 1 - = } { out ou .. [39;49m[32;49m
0x7fbdaabbcf09    498b36                  mov rsi, [r14]                                         [39;49m[32;49m
0x7fbdaabbcf0c    498b7ef8                mov rdi, [r14-0x8]                                     [39;49m
[34;49m .. e REG power | REG out -t II.I ) { out [39;49m[33;40m1[39;49m[34;49m = } { power @ 0 > } { power power @ 1 - = } { out out @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fbdaabbcf10    48c7c201000000          mov rdx, 0x1                                           [39;49m
[34;49m .. out -t II.I ) { out 1 = } { power @ 0 [39;49m[33;40m>[39;49m[34;49m } { power power @ 1 - = } { out out @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fbdaabbcf17    4883fe00                cmp rsi, 0x0                                           [39;49m[32;49m
0x7fbdaabbcf1b    7e16                    jle 0xaabbcf33                                         [39;49m
[34;49m .. wer @ 0 > } { power power @ 1 - = } { [39;49m[33;40mout[39;49m[34;49m out @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fbdaabbcf1d    488bc2                  mov rax, rdx                                           [39;49m
[34;49m .. er power @ 1 - = } { out out @ base @ [39;49m[33;40m*[39;49m[34;49m = } for return out @ ; [39;49m[32;49m
0x7fbdaabbcf20    480fafd7                imul rdx, rdi                                          [39;49m
[34;49m ..  II.I ) { out 1 = } { power @ 0 > } { [39;49m[33;40mpower[39;49m[34;49m power @ 1 - = } { out out @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fbdaabbcf24    488bc6                  mov rax, rsi                                           [39;49m
[34;49m .. 1 = } { power @ 0 > } { power power @ [39;49m[33;40m1[39;49m[34;49m - = } { out out @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fbdaabbcf27    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m .. = } { power @ 0 > } { power power @ 1 [39;49m[33;40m-[39;49m[34;49m = } { out out @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fbdaabbcf2e    482bf1                  sub rsi, rcx                                           [39;49m
[34;49m .. { power @ 0 > } { power power @ 1 - = [39;49m[33;40m}[39;49m[34;49m { out out @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fbdaabbcf31    ebe4                    jmp 0x7fbdaabbcf17         	< Root.[34;49mpowReg[39;49m+14[32;49m >[39;49m[39;49m
[34;49m .. t out @ base @ * = } for return out @ [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fbdaabbcf33    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m .. } { out out @ base @ * = } for return [39;49m[33;40mout[39;49m[34;49m @ ; [39;49m[32;49m
0x7fbdaabbcf37    498916                  mov [r14], rdx                                         [39;49m[32;49m
0x7fbdaabbcf3a    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'powReg' :: codeSize = 49
Word : 0x00007fbda7be1710 :: Compiled at : 0x00007fbdaabbcf09
 =============================
::> 'wdiss' was called at namespaces/test/dev.csl 257.14 <::

 65536

Timer [ 1 ] : elapsed time = 0.007454164 seconds
 1073741824
 =============================
Root.[34;49mpowReg2[39;49m <:> csl compiled word
SourceCode for Root.[34;49mpowReg2[39;49m :> 
[34;49m: powReg2 ( base REG power | REG out -t II.I ) { out 1 = } { power @ 0 > } { power power @ 1 - = } { out out @ base @ * = } for return out @ ; [39;49m
Source code file location of [34;49mpowReg2[39;49m : "namespaces/test/dev.csl" : 258.2 :: we are now at : namespaces/test/dev.csl : 260.15
Compiled with : optimizeOn, inlineOn, Jcc8 on
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xaabbcf40 -- code size = 74 bytes
TypeSignature : Integer . Integer -> Integer 
 -----------------------------
Word :: Root.[34;49mpowReg2[39;49m : definition = 0x00007fbdaabbcf40 : disassembly at namespaces/test/dev.csl : 260.15 :
[34;49m ..                                     : [39;49m[33;40mpowReg2[39;49m[34;49m ( base REG power | REG out -t II.I ) { out 1 = } { power @ 0 > } { power power @ 1 - = } { ou .. [39;49m[32;49m
0x7fbdaabbcf40    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fbdaabbcf44    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaabbcf48    4981c608000000          add r14, 0x8                                           [39;49m
[34;49m ..                             : powReg2 [39;49m[33;40m([39;49m[34;49m base REG power | REG out -t II.I ) { out 1 = } { power @ 0 > } { power power @ 1 - = } { out out @  .. [39;49m[32;49m
0x7fbdaabbcf4f    498b7ff8                mov rdi, [r15-0x8]                                     [39;49m
[34;49m .. e REG power | REG out -t II.I ) { out [39;49m[33;40m1[39;49m[34;49m = } { power @ 0 > } { power power @ 1 - = } { out out @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fbdaabbcf53    48c7c601000000          mov rsi, 0x1                                           [39;49m
[34;49m .. out -t II.I ) { out 1 = } { power @ 0 [39;49m[33;40m>[39;49m[34;49m } { power power @ 1 - = } { out out @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fbdaabbcf5a    4883ff00                cmp rdi, 0x0                                           [39;49m[32;49m
0x7fbdaabbcf5e    7e1a                    jle 0xaabbcf7a                                         [39;49m
[34;49m .. wer @ 0 > } { power power @ 1 - = } { [39;49m[33;40mout[39;49m[34;49m out @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fbdaabbcf60    488bc6                  mov rax, rsi                                           [39;49m
[34;49m .. } { power power @ 1 - = } { out out @ [39;49m[33;40mbase[39;49m[34;49m @ * = } for return out @ ; [39;49m[32;49m
0x7fbdaabbcf63    498b4ff0                mov rcx, [r15-0x10]                                    [39;49m
[34;49m .. er power @ 1 - = } { out out @ base @ [39;49m[33;40m*[39;49m[34;49m = } for return out @ ; [39;49m[32;49m
0x7fbdaabbcf67    480faff1                imul rsi, rcx                                          [39;49m
[34;49m ..  II.I ) { out 1 = } { power @ 0 > } { [39;49m[33;40mpower[39;49m[34;49m power @ 1 - = } { out out @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fbdaabbcf6b    488bc7                  mov rax, rdi                                           [39;49m
[34;49m .. 1 = } { power @ 0 > } { power power @ [39;49m[33;40m1[39;49m[34;49m - = } { out out @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fbdaabbcf6e    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m .. = } { power @ 0 > } { power power @ 1 [39;49m[33;40m-[39;49m[34;49m = } { out out @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fbdaabbcf75    482bf9                  sub rdi, rcx                                           [39;49m
[34;49m .. { power @ 0 > } { power power @ 1 - = [39;49m[33;40m}[39;49m[34;49m { out out @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fbdaabbcf78    ebe0                    jmp 0x7fbdaabbcf5a         	< Root.[34;49mpowReg2[39;49m+26[32;49m >[39;49m[39;49m
[34;49m .. t out @ base @ * = } for return out @ [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fbdaabbcf7a    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaabbcf7e    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaabbcf82    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m .. } { out out @ base @ * = } for return [39;49m[33;40mout[39;49m[34;49m @ ; [39;49m[32;49m
0x7fbdaabbcf86    498936                  mov [r14], rsi                                         [39;49m[32;49m
0x7fbdaabbcf89    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'powReg2' :: codeSize = 73
Word : 0x00007fbda7be4cc8 :: Compiled at : 0x00007fbdaabbcf40
 =============================
::> 'wdiss' was called at namespaces/test/dev.csl 260.15 <::

 65536

Timer [ 1 ] : elapsed time = 0.009873877 seconds
 1073741824
 =============================
Root.[34;49mpowReg3[39;49m <:> csl compiled word
SourceCode for Root.[34;49mpowReg3[39;49m :> 
[34;49m: powReg3 ( REG base power | REG out -t II.I ) { out 1 = } { power @ 0 > } { power power @ 1 - = } { out out @ base @ * = } for return out @ ; [39;49m
Source code file location of [34;49mpowReg3[39;49m : "namespaces/test/dev.csl" : 261.2 :: we are now at : namespaces/test/dev.csl : 264.15
Compiled with : optimizeOn, inlineOn, Jcc8 on
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xaabbcf8f -- code size = 99 bytes
TypeSignature : Integer . Integer -> Integer 
 -----------------------------
Word :: Root.[34;49mpowReg3[39;49m : definition = 0x00007fbdaabbcf8f : disassembly at namespaces/test/dev.csl : 264.15 :
[34;49m ..                                     : [39;49m[33;40mpowReg3[39;49m[34;49m ( REG base power | REG out -t II.I ) { out 1 = } { power @ 0 > } { power power @ 1 - = } { ou .. [39;49m[32;49m
0x7fbdaabbcf8f    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fbdaabbcf93    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaabbcf97    4981c608000000          add r14, 0x8                                           [39;49m
[34;49m ..                             : powReg3 [39;49m[33;40m([39;49m[34;49m REG base power | REG out -t II.I ) { out 1 = } { power @ 0 > } { power power @ 1 - = } { out out @  .. [39;49m[32;49m
0x7fbdaabbcf9e    498b7ff0                mov rdi, [r15-0x10]                                    [39;49m
[34;49m ..  base power | REG out -t II.I ) { out [39;49m[33;40m1[39;49m[34;49m = } { power @ 0 > } { power power @ 1 - = } { out out @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fbdaabbcfa2    48c7c601000000          mov rsi, 0x1                                           [39;49m
[34;49m .. wer | REG out -t II.I ) { out 1 = } { [39;49m[33;40mpower[39;49m[34;49m @ 0 > } { power power @ 1 - = } { out out @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fbdaabbcfa9    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. out -t II.I ) { out 1 = } { power @ 0 [39;49m[33;40m>[39;49m[34;49m } { power power @ 1 - = } { out out @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fbdaabbcfad    4883f800                cmp rax, 0x0                                           [39;49m[32;49m
0x7fbdaabbcfb1    7e2f                    jle 0xaabbcfe2                                         [39;49m
[34;49m .. wer @ 0 > } { power power @ 1 - = } { [39;49m[33;40mout[39;49m[34;49m out @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fbdaabbcfb3    488bc6                  mov rax, rsi                                           [39;49m
[34;49m .. er power @ 1 - = } { out out @ base @ [39;49m[33;40m*[39;49m[34;49m = } for return out @ ; [39;49m[32;49m
0x7fbdaabbcfb6    480faff7                imul rsi, rdi                                          [39;49m
[34;49m ..  II.I ) { out 1 = } { power @ 0 > } { [39;49m[33;40mpower[39;49m[34;49m power @ 1 - = } { out out @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fbdaabbcfba    498d47f8                lea rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaabbcfbe    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabbcfc2    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ) { out 1 = } { power @ 0 > } { power [39;49m[33;40mpower[39;49m[34;49m @ 1 - = } { out out @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fbdaabbcfc5    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. 1 = } { power @ 0 > } { power power @ [39;49m[33;40m1[39;49m[34;49m - = } { out out @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fbdaabbcfc9    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m .. = } { power @ 0 > } { power power @ 1 [39;49m[33;40m-[39;49m[34;49m = } { out out @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fbdaabbcfd0    482bc1                  sub rax, rcx                                           [39;49m[32;49m
0x7fbdaabbcfd3    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fbdaabbcfd6    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fbdaabbcfd9    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m .. } { power @ 0 > } { power power @ 1 - [39;49m[33;40m=[39;49m[34;49m } { out out @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fbdaabbcfdd    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. { power @ 0 > } { power power @ 1 - = [39;49m[33;40m}[39;49m[34;49m { out out @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fbdaabbcfe0    ebc7                    jmp 0x7fbdaabbcfa9         	< Root.[34;49mpowReg3[39;49m+26[32;49m >[39;49m[39;49m
[34;49m .. t out @ base @ * = } for return out @ [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fbdaabbcfe2    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaabbcfe6    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaabbcfea    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m .. } { out out @ base @ * = } for return [39;49m[33;40mout[39;49m[34;49m @ ; [39;49m[32;49m
0x7fbdaabbcfee    498936                  mov [r14], rsi                                         [39;49m[32;49m
0x7fbdaabbcff1    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'powReg3' :: codeSize = 98
Word : 0x00007fbda7be8280 :: Compiled at : 0x00007fbdaabbcf8f
 =============================
::> 'wdiss' was called at namespaces/test/dev.csl 264.15 <::

 65536

Timer [ 1 ] : elapsed time = 0.007303475 seconds
 1073741824
 =============================
Root.[34;49mpowReg4[39;49m <:> csl compiled word
SourceCode for Root.[34;49mpowReg4[39;49m :> 
[34;49m: powReg4 ( REG base REG power | out -t II.I ) { out 1 = } { power @ 0 > } { power power @ 1 - = } { out out @ base @ * = } for return out @ ; [39;49m
Source code file location of [34;49mpowReg4[39;49m : "namespaces/test/dev.csl" : 265.2 :: we are now at : namespaces/test/dev.csl : 268.15
Compiled with : optimizeOn, inlineOn, Jcc8 on
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xaabbcff7 -- code size = 110 bytes
TypeSignature : Integer . Integer -> Integer 
 -----------------------------
Word :: Root.[34;49mpowReg4[39;49m : definition = 0x00007fbdaabbcff7 : disassembly at namespaces/test/dev.csl : 268.15 :
[34;49m ..                                     : [39;49m[33;40mpowReg4[39;49m[34;49m ( REG base REG power | out -t II.I ) { out 1 = } { power @ 0 > } { power power @ 1 - = } { ou .. [39;49m[32;49m
0x7fbdaabbcff7    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fbdaabbcffb    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaabbcfff    4981c610000000          add r14, 0x10                                          [39;49m
[34;49m ..                             : powReg4 [39;49m[33;40m([39;49m[34;49m REG base REG power | out -t II.I ) { out 1 = } { power @ 0 > } { power power @ 1 - = } { out out @  .. [39;49m[32;49m
0x7fbdaabbd006    498b77f8                mov rsi, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaabbd00a    498b7ff0                mov rdi, [r15-0x10]                                    [39;49m
[34;49m ..  REG base REG power | out -t II.I ) { [39;49m[33;40mout[39;49m[34;49m 1 = } { power @ 0 > } { power power @ 1 - = } { out out @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fbdaabbd00e    498d4708                lea rax, [r15+0x8]                                     [39;49m
[34;49m ..  base REG power | out -t II.I ) { out [39;49m[33;40m1[39;49m[34;49m = } { power @ 0 > } { power power @ 1 - = } { out out @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fbdaabbd012    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m .. ase REG power | out -t II.I ) { out 1 [39;49m[33;40m=[39;49m[34;49m } { power @ 0 > } { power power @ 1 - = } { out out @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fbdaabbd019    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. out -t II.I ) { out 1 = } { power @ 0 [39;49m[33;40m>[39;49m[34;49m } { power power @ 1 - = } { out out @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fbdaabbd01c    4883fe00                cmp rsi, 0x0                                           [39;49m[32;49m
0x7fbdaabbd020    7e2f                    jle 0xaabbd051                                         [39;49m
[34;49m .. wer @ 0 > } { power power @ 1 - = } { [39;49m[33;40mout[39;49m[34;49m out @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fbdaabbd022    498d4708                lea rax, [r15+0x8]                                     [39;49m[32;49m
0x7fbdaabbd026    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabbd02a    498906                  mov [r14], rax                                         [39;49m
[34;49m .. @ 0 > } { power power @ 1 - = } { out [39;49m[33;40mout[39;49m[34;49m @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fbdaabbd02d    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m .. er power @ 1 - = } { out out @ base @ [39;49m[33;40m*[39;49m[34;49m = } for return out @ ; [39;49m[32;49m
0x7fbdaabbd031    480fafc7                imul rax, rdi                                          [39;49m[32;49m
0x7fbdaabbd035    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fbdaabbd038    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fbdaabbd03b    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m ..  power @ 1 - = } { out out @ base @ * [39;49m[33;40m=[39;49m[34;49m } for return out @ ; [39;49m[32;49m
0x7fbdaabbd03f    488908                  mov [rax], rcx                                         [39;49m
[34;49m ..  II.I ) { out 1 = } { power @ 0 > } { [39;49m[33;40mpower[39;49m[34;49m power @ 1 - = } { out out @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fbdaabbd042    488bc6                  mov rax, rsi                                           [39;49m
[34;49m .. 1 = } { power @ 0 > } { power power @ [39;49m[33;40m1[39;49m[34;49m - = } { out out @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fbdaabbd045    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m .. = } { power @ 0 > } { power power @ 1 [39;49m[33;40m-[39;49m[34;49m = } { out out @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fbdaabbd04c    482bf1                  sub rsi, rcx                                           [39;49m
[34;49m .. { power @ 0 > } { power power @ 1 - = [39;49m[33;40m}[39;49m[34;49m { out out @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fbdaabbd04f    ebcb                    jmp 0x7fbdaabbd01c         	< Root.[34;49mpowReg4[39;49m+37[32;49m >[39;49m[39;49m[32;49m
0x7fbdaabbd051    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m .. t out @ base @ * = } for return out @ [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fbdaabbd055    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaabbd059    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaabbd05d    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m .. } { out out @ base @ * = } for return [39;49m[33;40mout[39;49m[34;49m @ ; [39;49m[32;49m
0x7fbdaabbd061    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaabbd064    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'powReg4' :: codeSize = 109
Word : 0x00007fbda7beb838 :: Compiled at : 0x00007fbdaabbcff7
 =============================
::> 'wdiss' was called at namespaces/test/dev.csl 268.15 <::

 65536

Timer [ 1 ] : elapsed time = 0.008141867 seconds
 1073741824
 =============================
Root.[34;49mpowReg5[39;49m <:> csl compiled word
SourceCode for Root.[34;49mpowReg5[39;49m :> 
[34;49m: powReg5 ( base REG power | out -t II.I ) { out 1 = } { power @ 0 > } { power power @ 1 - = } { out out @ base @ * = } for return out @ ; [39;49m
Source code file location of [34;49mpowReg5[39;49m : "namespaces/test/dev.csl" : 269.2 :: we are now at : namespaces/test/dev.csl : 272.15
Compiled with : optimizeOn, inlineOn, Jcc8 on
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xaabbd06a -- code size = 110 bytes
TypeSignature : Integer . Integer -> Integer 
 -----------------------------
Word :: Root.[34;49mpowReg5[39;49m : definition = 0x00007fbdaabbd06a : disassembly at namespaces/test/dev.csl : 272.15 :
[34;49m ..                                     : [39;49m[33;40mpowReg5[39;49m[34;49m ( base REG power | out -t II.I ) { out 1 = } { power @ 0 > } { power power @ 1 - = } { out ou .. [39;49m[32;49m
0x7fbdaabbd06a    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fbdaabbd06e    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaabbd072    4981c610000000          add r14, 0x10                                          [39;49m
[34;49m ..                             : powReg5 [39;49m[33;40m([39;49m[34;49m base REG power | out -t II.I ) { out 1 = } { power @ 0 > } { power power @ 1 - = } { out out @ base .. [39;49m[32;49m
0x7fbdaabbd079    498b7ff8                mov rdi, [r15-0x8]                                     [39;49m
[34;49m .. g5 ( base REG power | out -t II.I ) { [39;49m[33;40mout[39;49m[34;49m 1 = } { power @ 0 > } { power power @ 1 - = } { out out @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fbdaabbd07d    498d4708                lea rax, [r15+0x8]                                     [39;49m
[34;49m ..  base REG power | out -t II.I ) { out [39;49m[33;40m1[39;49m[34;49m = } { power @ 0 > } { power power @ 1 - = } { out out @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fbdaabbd081    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m .. ase REG power | out -t II.I ) { out 1 [39;49m[33;40m=[39;49m[34;49m } { power @ 0 > } { power power @ 1 - = } { out out @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fbdaabbd088    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. out -t II.I ) { out 1 = } { power @ 0 [39;49m[33;40m>[39;49m[34;49m } { power power @ 1 - = } { out out @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fbdaabbd08b    4883ff00                cmp rdi, 0x0                                           [39;49m[32;49m
0x7fbdaabbd08f    7e33                    jle 0xaabbd0c4                                         [39;49m
[34;49m .. wer @ 0 > } { power power @ 1 - = } { [39;49m[33;40mout[39;49m[34;49m out @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fbdaabbd091    498d4708                lea rax, [r15+0x8]                                     [39;49m[32;49m
0x7fbdaabbd095    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabbd099    498906                  mov [r14], rax                                         [39;49m
[34;49m .. @ 0 > } { power power @ 1 - = } { out [39;49m[33;40mout[39;49m[34;49m @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fbdaabbd09c    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m .. } { power power @ 1 - = } { out out @ [39;49m[33;40mbase[39;49m[34;49m @ * = } for return out @ ; [39;49m[32;49m
0x7fbdaabbd0a0    498b4ff0                mov rcx, [r15-0x10]                                    [39;49m
[34;49m .. er power @ 1 - = } { out out @ base @ [39;49m[33;40m*[39;49m[34;49m = } for return out @ ; [39;49m[32;49m
0x7fbdaabbd0a4    480fafc1                imul rax, rcx                                          [39;49m[32;49m
0x7fbdaabbd0a8    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fbdaabbd0ab    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fbdaabbd0ae    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m ..  power @ 1 - = } { out out @ base @ * [39;49m[33;40m=[39;49m[34;49m } for return out @ ; [39;49m[32;49m
0x7fbdaabbd0b2    488908                  mov [rax], rcx                                         [39;49m
[34;49m ..  II.I ) { out 1 = } { power @ 0 > } { [39;49m[33;40mpower[39;49m[34;49m power @ 1 - = } { out out @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fbdaabbd0b5    488bc7                  mov rax, rdi                                           [39;49m
[34;49m .. 1 = } { power @ 0 > } { power power @ [39;49m[33;40m1[39;49m[34;49m - = } { out out @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fbdaabbd0b8    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m .. = } { power @ 0 > } { power power @ 1 [39;49m[33;40m-[39;49m[34;49m = } { out out @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fbdaabbd0bf    482bf9                  sub rdi, rcx                                           [39;49m
[34;49m .. } { power @ 0 > } { power power @ 1 - [39;49m[33;40m=[39;49m[34;49m } { out out @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fbdaabbd0c2    ebc7                    jmp 0x7fbdaabbd08b         	< Root.[34;49mpowReg5[39;49m+33[32;49m >[39;49m[39;49m[32;49m
0x7fbdaabbd0c4    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m .. t out @ base @ * = } for return out @ [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fbdaabbd0c8    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaabbd0cc    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaabbd0d0    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m .. } { out out @ base @ * = } for return [39;49m[33;40mout[39;49m[34;49m @ ; [39;49m[32;49m
0x7fbdaabbd0d4    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaabbd0d7    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'powReg5' :: codeSize = 109
Word : 0x00007fbda7beedf0 :: Compiled at : 0x00007fbdaabbd06a
 =============================
::> 'wdiss' was called at namespaces/test/dev.csl 272.15 <::

 65536

Timer [ 1 ] : elapsed time = 0.007889015 seconds
 1073741824
 =============================
Root.[34;49mpowReg6[39;49m <:> csl compiled word
SourceCode for Root.[34;49mpowReg6[39;49m :> 
[34;49m: powReg6 ( REG base power | out -t II.I ) { out 1 = } { power @ 0 > } { power power @ 1 - = } { out out @ base @ * = } for return out @ ; [39;49m
Source code file location of [34;49mpowReg6[39;49m : "namespaces/test/dev.csl" : 273.2 :: we are now at : namespaces/test/dev.csl : 275.15
Compiled with : optimizeOn, inlineOn, Jcc8 on
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xaabbd0dd -- code size = 135 bytes
TypeSignature : Integer . Integer -> Integer 
 -----------------------------
Word :: Root.[34;49mpowReg6[39;49m : definition = 0x00007fbdaabbd0dd : disassembly at namespaces/test/dev.csl : 275.15 :
[34;49m ..                                     : [39;49m[33;40mpowReg6[39;49m[34;49m ( REG base power | out -t II.I ) { out 1 = } { power @ 0 > } { power power @ 1 - = } { out ou .. [39;49m[32;49m
0x7fbdaabbd0dd    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fbdaabbd0e1    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaabbd0e5    4981c610000000          add r14, 0x10                                          [39;49m
[34;49m ..                             : powReg6 [39;49m[33;40m([39;49m[34;49m REG base power | out -t II.I ) { out 1 = } { power @ 0 > } { power power @ 1 - = } { out out @ base .. [39;49m[32;49m
0x7fbdaabbd0ec    498b7ff0                mov rdi, [r15-0x10]                                    [39;49m
[34;49m .. g6 ( REG base power | out -t II.I ) { [39;49m[33;40mout[39;49m[34;49m 1 = } { power @ 0 > } { power power @ 1 - = } { out out @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fbdaabbd0f0    498d4708                lea rax, [r15+0x8]                                     [39;49m
[34;49m ..  REG base power | out -t II.I ) { out [39;49m[33;40m1[39;49m[34;49m = } { power @ 0 > } { power power @ 1 - = } { out out @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fbdaabbd0f4    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m .. EG base power | out -t II.I ) { out 1 [39;49m[33;40m=[39;49m[34;49m } { power @ 0 > } { power power @ 1 - = } { out out @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fbdaabbd0fb    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. e power | out -t II.I ) { out 1 = } { [39;49m[33;40mpower[39;49m[34;49m @ 0 > } { power power @ 1 - = } { out out @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fbdaabbd0fe    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. out -t II.I ) { out 1 = } { power @ 0 [39;49m[33;40m>[39;49m[34;49m } { power power @ 1 - = } { out out @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fbdaabbd102    4883f800                cmp rax, 0x0                                           [39;49m[32;49m
0x7fbdaabbd106    7e48                    jle 0xaabbd150                                         [39;49m
[34;49m .. wer @ 0 > } { power power @ 1 - = } { [39;49m[33;40mout[39;49m[34;49m out @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fbdaabbd108    498d4708                lea rax, [r15+0x8]                                     [39;49m[32;49m
0x7fbdaabbd10c    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabbd110    498906                  mov [r14], rax                                         [39;49m
[34;49m .. @ 0 > } { power power @ 1 - = } { out [39;49m[33;40mout[39;49m[34;49m @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fbdaabbd113    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m .. er power @ 1 - = } { out out @ base @ [39;49m[33;40m*[39;49m[34;49m = } for return out @ ; [39;49m[32;49m
0x7fbdaabbd117    480fafc7                imul rax, rdi                                          [39;49m[32;49m
0x7fbdaabbd11b    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fbdaabbd11e    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fbdaabbd121    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m ..  power @ 1 - = } { out out @ base @ * [39;49m[33;40m=[39;49m[34;49m } for return out @ ; [39;49m[32;49m
0x7fbdaabbd125    488908                  mov [rax], rcx                                         [39;49m
[34;49m ..  II.I ) { out 1 = } { power @ 0 > } { [39;49m[33;40mpower[39;49m[34;49m power @ 1 - = } { out out @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fbdaabbd128    498d47f8                lea rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaabbd12c    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabbd130    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ) { out 1 = } { power @ 0 > } { power [39;49m[33;40mpower[39;49m[34;49m @ 1 - = } { out out @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fbdaabbd133    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. 1 = } { power @ 0 > } { power power @ [39;49m[33;40m1[39;49m[34;49m - = } { out out @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fbdaabbd137    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m .. = } { power @ 0 > } { power power @ 1 [39;49m[33;40m-[39;49m[34;49m = } { out out @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fbdaabbd13e    482bc1                  sub rax, rcx                                           [39;49m[32;49m
0x7fbdaabbd141    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fbdaabbd144    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fbdaabbd147    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m .. } { power @ 0 > } { power power @ 1 - [39;49m[33;40m=[39;49m[34;49m } { out out @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fbdaabbd14b    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. { power @ 0 > } { power power @ 1 - = [39;49m[33;40m}[39;49m[34;49m { out out @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fbdaabbd14e    ebae                    jmp 0x7fbdaabbd0fe         	< Root.[34;49mpowReg6[39;49m+33[32;49m >[39;49m[39;49m[32;49m
0x7fbdaabbd150    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m .. t out @ base @ * = } for return out @ [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fbdaabbd154    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaabbd158    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaabbd15c    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m .. } { out out @ base @ * = } for return [39;49m[33;40mout[39;49m[34;49m @ ; [39;49m[32;49m
0x7fbdaabbd160    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaabbd163    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'powReg6' :: codeSize = 134
Word : 0x00007fbda7bf23a8 :: Compiled at : 0x00007fbdaabbd0dd
 =============================
::> 'wdiss' was called at namespaces/test/dev.csl 275.15 <::

 65536

Timer [ 1 ] : elapsed time = 0.008287899 seconds
 1073741824
 =============================
Root.[34;49mpowReg7[39;49m <:> csl compiled word
SourceCode for Root.[34;49mpowReg7[39;49m :> 
[34;49m: powReg7 ( base power | REG out -t II.I ) { out 1 = } { power @ 0 > } { power power @ 1 - = } { out out @ base @ * = } for return out @ ; [39;49m
Source code file location of [34;49mpowReg7[39;49m : "namespaces/test/dev.csl" : 276.2 :: we are now at : namespaces/test/dev.csl : 279.15
Compiled with : optimizeOn, inlineOn, Jcc8 on
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xaabbd169 -- code size = 99 bytes
TypeSignature : Integer . Integer -> Integer 
 -----------------------------
Word :: Root.[34;49mpowReg7[39;49m : definition = 0x00007fbdaabbd169 : disassembly at namespaces/test/dev.csl : 279.15 :
[34;49m ..                                     : [39;49m[33;40mpowReg7[39;49m[34;49m ( base power | REG out -t II.I ) { out 1 = } { power @ 0 > } { power power @ 1 - = } { out ou .. [39;49m[32;49m
0x7fbdaabbd169    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fbdaabbd16d    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaabbd171    4981c608000000          add r14, 0x8                                           [39;49m
[34;49m ..  base power | REG out -t II.I ) { out [39;49m[33;40m1[39;49m[34;49m = } { power @ 0 > } { power power @ 1 - = } { out out @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fbdaabbd178    48c7c701000000          mov rdi, 0x1                                           [39;49m
[34;49m .. wer | REG out -t II.I ) { out 1 = } { [39;49m[33;40mpower[39;49m[34;49m @ 0 > } { power power @ 1 - = } { out out @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fbdaabbd17f    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. out -t II.I ) { out 1 = } { power @ 0 [39;49m[33;40m>[39;49m[34;49m } { power power @ 1 - = } { out out @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fbdaabbd183    4883f800                cmp rax, 0x0                                           [39;49m[32;49m
0x7fbdaabbd187    7e33                    jle 0xaabbd1bc                                         [39;49m
[34;49m .. wer @ 0 > } { power power @ 1 - = } { [39;49m[33;40mout[39;49m[34;49m out @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fbdaabbd189    488bc7                  mov rax, rdi                                           [39;49m
[34;49m .. } { power power @ 1 - = } { out out @ [39;49m[33;40mbase[39;49m[34;49m @ * = } for return out @ ; [39;49m[32;49m
0x7fbdaabbd18c    498b4ff0                mov rcx, [r15-0x10]                                    [39;49m
[34;49m .. er power @ 1 - = } { out out @ base @ [39;49m[33;40m*[39;49m[34;49m = } for return out @ ; [39;49m[32;49m
0x7fbdaabbd190    480faff9                imul rdi, rcx                                          [39;49m
[34;49m ..  II.I ) { out 1 = } { power @ 0 > } { [39;49m[33;40mpower[39;49m[34;49m power @ 1 - = } { out out @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fbdaabbd194    498d47f8                lea rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaabbd198    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabbd19c    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ) { out 1 = } { power @ 0 > } { power [39;49m[33;40mpower[39;49m[34;49m @ 1 - = } { out out @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fbdaabbd19f    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. 1 = } { power @ 0 > } { power power @ [39;49m[33;40m1[39;49m[34;49m - = } { out out @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fbdaabbd1a3    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m .. = } { power @ 0 > } { power power @ 1 [39;49m[33;40m-[39;49m[34;49m = } { out out @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fbdaabbd1aa    482bc1                  sub rax, rcx                                           [39;49m[32;49m
0x7fbdaabbd1ad    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fbdaabbd1b0    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fbdaabbd1b3    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m .. } { power @ 0 > } { power power @ 1 - [39;49m[33;40m=[39;49m[34;49m } { out out @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fbdaabbd1b7    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. { power @ 0 > } { power power @ 1 - = [39;49m[33;40m}[39;49m[34;49m { out out @ base @ * = } for return out @ ; [39;49m[32;49m
0x7fbdaabbd1ba    ebc3                    jmp 0x7fbdaabbd17f         	< Root.[34;49mpowReg7[39;49m+22[32;49m >[39;49m[39;49m
[34;49m .. t out @ base @ * = } for return out @ [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fbdaabbd1bc    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaabbd1c0    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaabbd1c4    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m .. } { out out @ base @ * = } for return [39;49m[33;40mout[39;49m[34;49m @ ; [39;49m[32;49m
0x7fbdaabbd1c8    49893e                  mov [r14], rdi                                         [39;49m[32;49m
0x7fbdaabbd1cb    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'powReg7' :: codeSize = 98
Word : 0x00007fbda7bf5960 :: Compiled at : 0x00007fbdaabbd169
 =============================
::> 'wdiss' was called at namespaces/test/dev.csl 279.15 <::

 65536

Timer [ 1 ] : elapsed time = 0.007700663 seconds

 =============================
Int.[34;49m**[39;49m <:> C compiled primitive, infixable
SourceCode for Int.[34;49m**[39;49m :> 
C Primitive
TypeSignature : Integer . Integer -> Integer 
 -----------------------------
Word :: Int.[34;49m**[39;49m : definition = 0x000055bd1e3ef920 : disassembly at namespaces/test/dev.csl : 281.10 :[32;49m
0x55bd1e3ef924    498b4ef8                mov rcx, [r14-0x8]                                     [39;49m[32;49m
0x55bd1e3ef928    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x55bd1e3ef92b    4c89f6                  mov rsi, r14                                           [39;49m[32;49m
0x55bd1e3ef92e    4889ca                  mov rdx, rcx                                           [39;49m[32;49m
0x55bd1e3ef931    4883e801                sub rax, 0x1                                           [39;49m[32;49m
0x55bd1e3ef935    7413                    jz 0x1e3ef94a                                          [39;49m[32;49m
0x55bd1e3ef937    660f1f840000000000      o16 nop [rax+rax]                                      [39;49m[32;49m
0x55bd1e3ef940    480fafd1                imul rdx, rcx                                          [39;49m[32;49m
0x55bd1e3ef944    4883e801                sub rax, 0x1                                           [39;49m[32;49m
0x55bd1e3ef948    75f6                    jnz 0x1e3ef940                                         [39;49m[32;49m
0x55bd1e3ef94a    488956f8                mov [rsi-0x8], rdx                                     [39;49m[32;49m
0x55bd1e3ef94e    e98d3cfdff              jmp 0x55bd1e3c35e0         	< C compiler code >        [39;49m[32;49m
0x55bd1e3ef953    66662e0f1f840000000000  o16 nop [cs:rax+rax]                                   [39;49m[32;49m
0x55bd1e3ef95e    6690                    nop                                                    [39;49m[32;49m
0x55bd1e3ef960    f30f1efa                invalid                                                [39;49m
Word_Disassemble : word - '**' :: codeSize = 60
Word : 0x00007fbdaac5e798 :: Compiled at : 0x000055bd1e3ef920
 =============================
::> 'wdiss' was called at namespaces/test/dev.csl 281.10 <::

 65536

Timer [ 1 ] : elapsed time = 0.008609088 seconds

 =============================
Int.[34;49mpow_03[39;49m <:> C compiled primitive, infixable
SourceCode for Int.[34;49mpow_03[39;49m :> 
C Primitive
TypeSignature : Integer . Integer -> Integer 
 -----------------------------
Word :: Int.[34;49mpow_03[39;49m : definition = 0x000055bd1e3ef1f0 : disassembly at namespaces/test/dev.csl : 282.14 :[32;49m
0x55bd1e3ef1f4    498b4ef8                mov rcx, [r14-0x8]                                     [39;49m[32;49m
0x55bd1e3ef1f8    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x55bd1e3ef1fb    4c89f6                  mov rsi, r14                                           [39;49m[32;49m
0x55bd1e3ef1fe    4889ca                  mov rdx, rcx                                           [39;49m[32;49m
0x55bd1e3ef201    4883e801                sub rax, 0x1                                           [39;49m[32;49m
0x55bd1e3ef205    7413                    jz 0x1e3ef21a                                          [39;49m[32;49m
0x55bd1e3ef207    660f1f840000000000      o16 nop [rax+rax]                                      [39;49m[32;49m
0x55bd1e3ef210    480fafd1                imul rdx, rcx                                          [39;49m[32;49m
0x55bd1e3ef214    4883e801                sub rax, 0x1                                           [39;49m[32;49m
0x55bd1e3ef218    75f6                    jnz 0x1e3ef210                                         [39;49m[32;49m
0x55bd1e3ef21a    488956f8                mov [rsi-0x8], rdx                                     [39;49m[32;49m
0x55bd1e3ef21e    e9bd43fdff              jmp 0x55bd1e3c35e0         	< C compiler code >        [39;49m[32;49m
0x55bd1e3ef223    66662e0f1f840000000000  o16 nop [cs:rax+rax]                                   [39;49m[32;49m
0x55bd1e3ef22e    6690                    nop                                                    [39;49m[32;49m
0x55bd1e3ef230    f30f1efa                invalid                                                [39;49m
Word_Disassemble : word - 'pow_03' :: codeSize = 60
Word : 0x00007fbdaac5eb08 :: Compiled at : 0x000055bd1e3ef1f0
 =============================
::> 'wdiss' was called at namespaces/test/dev.csl 282.14 <::

 65536

Timer [ 1 ] : elapsed time = 0.008574994 seconds


Word :: C.[34;49mtt[39;49m : definition = 0x00007fbdaabbd1e6 : disassembly at namespaces/test/dev.csl : 288.22 :
[34;49m ..                                     : [39;49m[33;40mtt[39;49m[34;49m ( | t ) t 6 = t ++ t @ p ;  .. [39;49m[32;49m
0x7fbdaabbd1e6    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fbdaabbd1ea    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaabbd1ee    4981c610000000          add r14, 0x10                                          [39;49m
[34;49m ..                          : tt ( | t ) [39;49m[33;40mt[39;49m[34;49m 6 = t ++ t @ p ;  .. [39;49m[32;49m
0x7fbdaabbd1f5    498d4708                lea rax, [r15+0x8]                                     [39;49m
[34;49m ..                        : tt ( | t ) t [39;49m[33;40m6[39;49m[34;49m = t ++ t @ p ;  .. [39;49m[32;49m
0x7fbdaabbd1f9    48c7c106000000          mov rcx, 0x6                                           [39;49m
[34;49m ..                      : tt ( | t ) t 6 [39;49m[33;40m=[39;49m[34;49m t ++ t @ p ;  .. [39;49m[32;49m
0x7fbdaabbd200    488908                  mov [rax], rcx                                         [39;49m
[34;49m ..                  : tt ( | t ) t 6 = t [39;49m[33;40m++[39;49m[34;49m t @ p ;  .. [39;49m[32;49m
0x7fbdaabbd203    49ff4708                inc qword [r15+0x8]                                    [39;49m
[34;49m ..               : tt ( | t ) t 6 = t ++ [39;49m[33;40mt[39;49m[34;49m @ p ;  .. [39;49m[32;49m
0x7fbdaabbd207    498b4708                mov rax, [r15+0x8]                                     [39;49m[32;49m
0x7fbdaabbd20b    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabbd20f    498906                  mov [r14], rax                                         [39;49m
[34;49m ..           : tt ( | t ) t 6 = t ++ t @ [39;49m[33;40mp[39;49m[34;49m ;  .. [39;49m[32;49m
0x7fbdaabbd212    49b94464d5aabd7f0000    mov r9, 0x7fbdaad56444                                 [39;49m[32;49m
0x7fbdaabbd21c    49ffd1                  call r9                    	< Int.[34;49mp[39;49m : 0x00007fbdaad56444[32;49m >[39;49m[39;49m
[34;49m ..         : tt ( | t ) t 6 = t ++ t @ p [39;49m[33;40m;[39;49m[34;49m  .. [39;49m[32;49m
0x7fbdaabbd21f    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaabbd223    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaabbd227    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'tt' :: codeSize = 65 7 
should show 7
 =============================
C.[34;49mfibPTC?[39;49m <:> csl compiled word
SourceCode for C.[34;49mfibPTC?[39;49m :> 
[34;49m: fibPTC? ( n | fn fn1 fn2 ) { fn 0 = fn1 0 = fn2 1 = } { n @ } { n n @ 1 - = } { fn1 fn2 @ = fn2 fn @ = fn fn1 @ fn2 @ + = } for return fn @ ; [39;49m
Source code file location of [34;49mfibPTC?[39;49m : "namespaces/test/dev0.csl" : 152.2 :: we are now at : namespaces/test/dev.csl : 315.21
Compiled with : optimizeOn, inlineOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xaabb7fbe -- code size = 183 bytes
TypeSignature : 
 -----------------------------
Word :: C.[34;49mfibPTC?[39;49m : definition = 0x00007fbdaabb7fbe : disassembly at namespaces/test/dev.csl : 315.21 :
[34;49m ..                                     : [39;49m[33;40mfibPTC?[39;49m[34;49m ( n | fn fn1 fn2 )  { fn 0 = fn1 0 = fn2 1 = } { n @ } { n n @ 1 - = }  {  fn1 fn2 @ =  fn2 f .. [39;49m[32;49m
0x7fbdaabb7fbe    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fbdaabb7fc2    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaabb7fc6    4981c620000000          add r14, 0x20                                          [39;49m
[34;49m ..       : fibPTC? ( n | fn fn1 fn2 )  { [39;49m[33;40mfn[39;49m[34;49m 0 = fn1 0 = fn2 1 = } { n @ } { n n @ 1 - = }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } f .. [39;49m[32;49m
0x7fbdaabb7fcd    498d4708                lea rax, [r15+0x8]                                     [39;49m
[34;49m ..    : fibPTC? ( n | fn fn1 fn2 )  { fn [39;49m[33;40m0[39;49m[34;49m = fn1 0 = fn2 1 = } { n @ } { n n @ 1 - = }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for  .. [39;49m[32;49m
0x7fbdaabb7fd1    48c7c100000000          mov rcx, 0x0                                           [39;49m
[34;49m ..  : fibPTC? ( n | fn fn1 fn2 )  { fn 0 [39;49m[33;40m=[39;49m[34;49m fn1 0 = fn2 1 = } { n @ } { n n @ 1 - = }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for re .. [39;49m[32;49m
0x7fbdaabb7fd8    488908                  mov [rax], rcx                                         [39;49m
[34;49m   : fibPTC? ( n | fn fn1 fn2 )  { fn 0 = [39;49m[33;40mfn1[39;49m[34;49m 0 = fn2 1 = } { n @ } { n n @ 1 - = }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for retu .. [39;49m[32;49m
0x7fbdaabb7fdb    498d4710                lea rax, [r15+0x10]                                    [39;49m
[34;49m .. PTC? ( n | fn fn1 fn2 )  { fn 0 = fn1 [39;49m[33;40m0[39;49m[34;49m = fn2 1 = } { n @ } { n n @ 1 - = }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ [39;49m[32;49m
0x7fbdaabb7fdf    48c7c100000000          mov rcx, 0x0                                           [39;49m
[34;49m .. C? ( n | fn fn1 fn2 )  { fn 0 = fn1 0 [39;49m[33;40m=[39;49m[34;49m fn2 1 = } { n @ } { n n @ 1 - = }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fbdaabb7fe6    488908                  mov [rax], rcx                                         [39;49m
[34;49m ..  ( n | fn fn1 fn2 )  { fn 0 = fn1 0 = [39;49m[33;40mfn2[39;49m[34;49m 1 = } { n @ } { n n @ 1 - = }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fbdaabb7fe9    498d4718                lea rax, [r15+0x18]                                    [39;49m
[34;49m ..  | fn fn1 fn2 )  { fn 0 = fn1 0 = fn2 [39;49m[33;40m1[39;49m[34;49m = } { n @ } { n n @ 1 - = }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fbdaabb7fed    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m ..  fn fn1 fn2 )  { fn 0 = fn1 0 = fn2 1 [39;49m[33;40m=[39;49m[34;49m } { n @ } { n n @ 1 - = }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fbdaabb7ff4    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. 1 fn2 )  { fn 0 = fn1 0 = fn2 1 = } { [39;49m[33;40mn[39;49m[34;49m @ } { n n @ 1 - = }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fbdaabb7ff7    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaabb7ffb    4885c0                  test rax, rax                                          [39;49m[32;49m
0x7fbdaabb7ffe    0f8461000000            jz 0x7fbdaabb8065          	< C.[34;49mfibPTC?[39;49m+167[32;49m >[39;49m[39;49m
[34;49m .. fn2 1 = } { n @ } { n n @ 1 - = }  {  [39;49m[33;40mfn1[39;49m[34;49m fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fbdaabb8004    498d4710                lea rax, [r15+0x10]                                    [39;49m
[34;49m .. 1 = } { n @ } { n n @ 1 - = }  {  fn1 [39;49m[33;40mfn2[39;49m[34;49m @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fbdaabb8008    498b4f18                mov rcx, [r15+0x18]                                    [39;49m
[34;49m .. { n @ } { n n @ 1 - = }  {  fn1 fn2 @ [39;49m[33;40m=[39;49m[34;49m  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fbdaabb800c    488908                  mov [rax], rcx                                         [39;49m
[34;49m ..  @ } { n n @ 1 - = }  {  fn1 fn2 @ =  [39;49m[33;40mfn2[39;49m[34;49m fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fbdaabb800f    498d4718                lea rax, [r15+0x18]                                    [39;49m
[34;49m ..  { n n @ 1 - = }  {  fn1 fn2 @ =  fn2 [39;49m[33;40mfn[39;49m[34;49m @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fbdaabb8013    498b4f08                mov rcx, [r15+0x8]                                     [39;49m
[34;49m .. n @ 1 - = }  {  fn1 fn2 @ =  fn2 fn @ [39;49m[33;40m=[39;49m[34;49m  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fbdaabb8017    488908                  mov [rax], rcx                                         [39;49m
[34;49m ..  1 - = }  {  fn1 fn2 @ =  fn2 fn @ =  [39;49m[33;40mfn[39;49m[34;49m fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fbdaabb801a    498d4708                lea rax, [r15+0x8]                                     [39;49m[32;49m
0x7fbdaabb801e    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb8022    498906                  mov [r14], rax                                         [39;49m
[34;49m .. - = }  {  fn1 fn2 @ =  fn2 fn @ =  fn [39;49m[33;40mfn1[39;49m[34;49m @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fbdaabb8025    498b4710                mov rax, [r15+0x10]                                    [39;49m
[34;49m ..  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ [39;49m[33;40mfn2[39;49m[34;49m @ + =  } for return fn @ ; [39;49m[32;49m
0x7fbdaabb8029    498b4f18                mov rcx, [r15+0x18]                                    [39;49m
[34;49m .. 1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ [39;49m[33;40m+[39;49m[34;49m =  } for return fn @ ; [39;49m[32;49m
0x7fbdaabb802d    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fbdaabb8030    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fbdaabb8033    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fbdaabb8036    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m .. fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + [39;49m[33;40m=[39;49m[34;49m  } for return fn @ ; [39;49m[32;49m
0x7fbdaabb803a    488908                  mov [rax], rcx                                         [39;49m
[34;49m ..  { fn 0 = fn1 0 = fn2 1 = } { n @ } { [39;49m[33;40mn[39;49m[34;49m n @ 1 - = }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fbdaabb803d    498d47f8                lea rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaabb8041    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb8045    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  fn 0 = fn1 0 = fn2 1 = } { n @ } { n [39;49m[33;40mn[39;49m[34;49m @ 1 - = }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fbdaabb8048    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. 0 = fn1 0 = fn2 1 = } { n @ } { n n @ [39;49m[33;40m1[39;49m[34;49m - = }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fbdaabb804c    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m .. = fn1 0 = fn2 1 = } { n @ } { n n @ 1 [39;49m[33;40m-[39;49m[34;49m = }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fbdaabb8053    482bc1                  sub rax, rcx                                           [39;49m[32;49m
0x7fbdaabb8056    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fbdaabb8059    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fbdaabb805c    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m .. fn1 0 = fn2 1 = } { n @ } { n n @ 1 - [39;49m[33;40m=[39;49m[34;49m }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fbdaabb8060    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. 1 0 = fn2 1 = } { n @ } { n n @ 1 - = [39;49m[33;40m}[39;49m[34;49m  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fbdaabb8063    eb92                    jmp 0x7fbdaabb7ff7         	< C.[34;49mfibPTC?[39;49m+57[32;49m >[39;49m[39;49m[32;49m
0x7fbdaabb8065    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m .. fn fn1 @ fn2 @ + =  } for return fn @ [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fbdaabb8069    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaabb806d    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m
[34;49m .. @ =  fn fn1 @ fn2 @ + =  } for return [39;49m[33;40mfn[39;49m[34;49m @ ; [39;49m[32;49m
0x7fbdaabb8071    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaabb8074    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'fibPTC?' :: codeSize = 182
Word : 0x00007fbda80847d0 :: Compiled at : 0x00007fbdaabb7fbe
 =============================
::> 'wdiss' was called at namespaces/test/dev.csl 315.21 <::
 6765
 =============================
C_Syntax.[34;49mfibPTC2?[39;49m <:> csl compiled word
SourceCode for C_Syntax.[34;49mfibPTC2?[39;49m :> 
[34;49mint fibPTC2? ( REG n | REG fn, REG fn1, REG fn2 ) { for ( fn = 0, fn1 = 0, fn2 = 1 ; n ; n -- ) { fn1 = fn2 ; fn2 = fn ; fn = fn1 + fn2 ; } return fn ; } [39;49m
Source code file location of [34;49mfibPTC2?[39;49m : "namespaces/test/dev.csl" : 319.9 :: we are now at : namespaces/test/dev.csl : 329.13
Compiled with : optimizeOn, inlineOn, c_syntaxOn, infixOn, Jcc8 on
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xaabbd343 -- code size = 53 bytes
TypeSignature : 
 -----------------------------
Word :: C_Syntax.[34;49mfibPTC2?[39;49m : definition = 0x00007fbdaabbd343 : disassembly at namespaces/test/dev.csl : 329.13 :
[34;49m ..                                   int [39;49m[33;40mfibPTC2?[39;49m[34;49m ( REG n | REG fn, REG fn1, REG fn2 ) { for ( fn = 0, fn1 = 0, fn2 = 1 ; n ; n -- )  {  fn1 = .. [39;49m[32;49m
0x7fbdaabbd343    498b3e                  mov rdi, [r14]                                         [39;49m
[34;49m .. G fn, REG fn1, REG fn2 ) { for ( fn = [39;49m[33;40m0[39;49m[34;49m, fn1 = 0, fn2 = 1 ; n ; n -- )  {  fn1 = fn2 ; fn2 = fn ; fn = fn1 + fn2 ;  } return fn ; }  .. [39;49m[32;49m
0x7fbdaabbd346    48c7c600000000          mov rsi, 0x0                                           [39;49m
[34;49m ..  fn1, REG fn2 ) { for ( fn = 0, fn1 = [39;49m[33;40m0[39;49m[34;49m, fn2 = 1 ; n ; n -- )  {  fn1 = fn2 ; fn2 = fn ; fn = fn1 + fn2 ;  } return fn ; }  .. [39;49m[32;49m
0x7fbdaabbd34d    48c7c200000000          mov rdx, 0x0                                           [39;49m
[34;49m ..  fn2 ) { for ( fn = 0, fn1 = 0, fn2 = [39;49m[33;40m1[39;49m[34;49m ; n ; n -- )  {  fn1 = fn2 ; fn2 = fn ; fn = fn1 + fn2 ;  } return fn ; }  .. [39;49m[32;49m
0x7fbdaabbd354    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m .. n2 ) { for ( fn = 0, fn1 = 0, fn2 = 1 [39;49m[33;40m;[39;49m[34;49m n ; n -- )  {  fn1 = fn2 ; fn2 = fn ; fn = fn1 + fn2 ;  } return fn ; }  .. [39;49m[32;49m
0x7fbdaabbd35b    488bc7                  mov rax, rdi                                           [39;49m
[34;49m ..  = fn2 ; fn2 = fn ; fn = fn1 + fn2 ;  [39;49m[33;40m}[39;49m[34;49m return fn ; }  .. [39;49m[32;49m
0x7fbdaabbd35e    4885ff                  test rdi, rdi                                          [39;49m
[34;49m .. n2 ) { for ( fn = 0, fn1 = 0, fn2 = 1 [39;49m[33;40m{[39;49m[34;49m n ; n -- )  {  fn1 = fn2 ; fn2 = fn ; fn = fn1 + fn2 ;  } return fn ; }  .. [39;49m[32;49m
0x7fbdaabbd361    7411                    jz 0xaabbd374                                          [39;49m
[34;49m .. fn1 = 0, fn2 = 1 ; n ; n -- )  {  fn1 [39;49m[33;40m=[39;49m[34;49m fn2 ; fn2 = fn ; fn = fn1 + fn2 ;  } return fn ; }  .. [39;49m[32;49m
0x7fbdaabbd363    488bd1                  mov rdx, rcx                                           [39;49m
[34;49m ..  = 1 ; n ; n -- )  {  fn1 = fn2 ; fn2 [39;49m[33;40m=[39;49m[34;49m fn ; fn = fn1 + fn2 ;  } return fn ; }  .. [39;49m[32;49m
0x7fbdaabbd366    488bce                  mov rcx, rsi                                           [39;49m
[34;49m .. )  {  fn1 = fn2 ; fn2 = fn ; fn = fn1 [39;49m[33;40m+[39;49m[34;49m fn2 ;  } return fn ; }  .. [39;49m[32;49m
0x7fbdaabbd369    4803d1                  add rdx, rcx                                           [39;49m
[34;49m ..  n -- )  {  fn1 = fn2 ; fn2 = fn ; fn [39;49m[33;40m=[39;49m[34;49m fn1 + fn2 ;  } return fn ; }  .. [39;49m[32;49m
0x7fbdaabbd36c    488bf2                  mov rsi, rdx                                           [39;49m
[34;49m .. or ( fn = 0, fn1 = 0, fn2 = 1 ; n ; n [39;49m[33;40m--[39;49m[34;49m )  {  fn1 = fn2 ; fn2 = fn ; fn = fn1 + fn2 ;  } return fn ; }  .. [39;49m[32;49m
0x7fbdaabbd36f    48ffcf                  dec rdi                                                [39;49m
[34;49m .. ( fn = 0, fn1 = 0, fn2 = 1 ; n ; n -- [39;49m[33;40m)[39;49m[34;49m  {  fn1 = fn2 ; fn2 = fn ; fn = fn1 + fn2 ;  } return fn ; }  .. [39;49m[32;49m
0x7fbdaabbd372    ebe7                    jmp 0x7fbdaabbd35b         	< C_Syntax.[34;49mfibPTC2?[39;49m+24[32;49m >[39;49m[39;49m
[34;49m .. fn2 = fn ; fn = fn1 + fn2 ;  } return [39;49m[33;40mfn[39;49m[34;49m ; }  .. [39;49m[32;49m
0x7fbdaabbd374    498936                  mov [r14], rsi                                         [39;49m[32;49m
0x7fbdaabbd377    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'fibPTC2?' :: codeSize = 52
Word : 0x00007fbda7c030b0 :: Compiled at : 0x00007fbdaabbd343
 =============================
::> 'wdiss' was called at namespaces/test/dev.csl 329.13 <::
 6765
 =============================
C.[34;49mfibPTC?[39;49m <:> csl compiled word
SourceCode for C.[34;49mfibPTC?[39;49m :> 
[34;49m: fibPTC? ( n | fn fn1 fn2 ) { fn 0 = fn1 0 = fn2 1 = } { n @ } { n n @ 1 - = } { fn1 fn2 @ = fn2 fn @ = fn fn1 @ fn2 @ + = } for return fn @ ; [39;49m
Source code file location of [34;49mfibPTC?[39;49m : "namespaces/test/dev0.csl" : 152.2 :: we are now at : namespaces/test/dev.csl : 331.14
Compiled with : optimizeOn, inlineOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xaabb7fbe -- code size = 183 bytes
TypeSignature : 
 -----------------------------
Word :: C.[34;49mfibPTC?[39;49m : definition = 0x00007fbdaabb7fbe : disassembly at namespaces/test/dev.csl : 331.14 :
[34;49m ..                                     : [39;49m[33;40mfibPTC?[39;49m[34;49m ( n | fn fn1 fn2 )  { fn 0 = fn1 0 = fn2 1 = } { n @ } { n n @ 1 - = }  {  fn1 fn2 @ =  fn2 f .. [39;49m[32;49m
0x7fbdaabb7fbe    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fbdaabb7fc2    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaabb7fc6    4981c620000000          add r14, 0x20                                          [39;49m
[34;49m ..       : fibPTC? ( n | fn fn1 fn2 )  { [39;49m[33;40mfn[39;49m[34;49m 0 = fn1 0 = fn2 1 = } { n @ } { n n @ 1 - = }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } f .. [39;49m[32;49m
0x7fbdaabb7fcd    498d4708                lea rax, [r15+0x8]                                     [39;49m
[34;49m ..    : fibPTC? ( n | fn fn1 fn2 )  { fn [39;49m[33;40m0[39;49m[34;49m = fn1 0 = fn2 1 = } { n @ } { n n @ 1 - = }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for  .. [39;49m[32;49m
0x7fbdaabb7fd1    48c7c100000000          mov rcx, 0x0                                           [39;49m
[34;49m ..  : fibPTC? ( n | fn fn1 fn2 )  { fn 0 [39;49m[33;40m=[39;49m[34;49m fn1 0 = fn2 1 = } { n @ } { n n @ 1 - = }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for re .. [39;49m[32;49m
0x7fbdaabb7fd8    488908                  mov [rax], rcx                                         [39;49m
[34;49m   : fibPTC? ( n | fn fn1 fn2 )  { fn 0 = [39;49m[33;40mfn1[39;49m[34;49m 0 = fn2 1 = } { n @ } { n n @ 1 - = }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for retu .. [39;49m[32;49m
0x7fbdaabb7fdb    498d4710                lea rax, [r15+0x10]                                    [39;49m
[34;49m .. PTC? ( n | fn fn1 fn2 )  { fn 0 = fn1 [39;49m[33;40m0[39;49m[34;49m = fn2 1 = } { n @ } { n n @ 1 - = }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ [39;49m[32;49m
0x7fbdaabb7fdf    48c7c100000000          mov rcx, 0x0                                           [39;49m
[34;49m .. C? ( n | fn fn1 fn2 )  { fn 0 = fn1 0 [39;49m[33;40m=[39;49m[34;49m fn2 1 = } { n @ } { n n @ 1 - = }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fbdaabb7fe6    488908                  mov [rax], rcx                                         [39;49m
[34;49m ..  ( n | fn fn1 fn2 )  { fn 0 = fn1 0 = [39;49m[33;40mfn2[39;49m[34;49m 1 = } { n @ } { n n @ 1 - = }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fbdaabb7fe9    498d4718                lea rax, [r15+0x18]                                    [39;49m
[34;49m ..  | fn fn1 fn2 )  { fn 0 = fn1 0 = fn2 [39;49m[33;40m1[39;49m[34;49m = } { n @ } { n n @ 1 - = }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fbdaabb7fed    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m ..  fn fn1 fn2 )  { fn 0 = fn1 0 = fn2 1 [39;49m[33;40m=[39;49m[34;49m } { n @ } { n n @ 1 - = }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fbdaabb7ff4    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. 1 fn2 )  { fn 0 = fn1 0 = fn2 1 = } { [39;49m[33;40mn[39;49m[34;49m @ } { n n @ 1 - = }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fbdaabb7ff7    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaabb7ffb    4885c0                  test rax, rax                                          [39;49m[32;49m
0x7fbdaabb7ffe    0f8461000000            jz 0x7fbdaabb8065          	< C.[34;49mfibPTC?[39;49m+167[32;49m >[39;49m[39;49m
[34;49m .. fn2 1 = } { n @ } { n n @ 1 - = }  {  [39;49m[33;40mfn1[39;49m[34;49m fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fbdaabb8004    498d4710                lea rax, [r15+0x10]                                    [39;49m
[34;49m .. 1 = } { n @ } { n n @ 1 - = }  {  fn1 [39;49m[33;40mfn2[39;49m[34;49m @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fbdaabb8008    498b4f18                mov rcx, [r15+0x18]                                    [39;49m
[34;49m .. { n @ } { n n @ 1 - = }  {  fn1 fn2 @ [39;49m[33;40m=[39;49m[34;49m  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fbdaabb800c    488908                  mov [rax], rcx                                         [39;49m
[34;49m ..  @ } { n n @ 1 - = }  {  fn1 fn2 @ =  [39;49m[33;40mfn2[39;49m[34;49m fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fbdaabb800f    498d4718                lea rax, [r15+0x18]                                    [39;49m
[34;49m ..  { n n @ 1 - = }  {  fn1 fn2 @ =  fn2 [39;49m[33;40mfn[39;49m[34;49m @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fbdaabb8013    498b4f08                mov rcx, [r15+0x8]                                     [39;49m
[34;49m .. n @ 1 - = }  {  fn1 fn2 @ =  fn2 fn @ [39;49m[33;40m=[39;49m[34;49m  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fbdaabb8017    488908                  mov [rax], rcx                                         [39;49m
[34;49m ..  1 - = }  {  fn1 fn2 @ =  fn2 fn @ =  [39;49m[33;40mfn[39;49m[34;49m fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fbdaabb801a    498d4708                lea rax, [r15+0x8]                                     [39;49m[32;49m
0x7fbdaabb801e    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb8022    498906                  mov [r14], rax                                         [39;49m
[34;49m .. - = }  {  fn1 fn2 @ =  fn2 fn @ =  fn [39;49m[33;40mfn1[39;49m[34;49m @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fbdaabb8025    498b4710                mov rax, [r15+0x10]                                    [39;49m
[34;49m ..  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ [39;49m[33;40mfn2[39;49m[34;49m @ + =  } for return fn @ ; [39;49m[32;49m
0x7fbdaabb8029    498b4f18                mov rcx, [r15+0x18]                                    [39;49m
[34;49m .. 1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ [39;49m[33;40m+[39;49m[34;49m =  } for return fn @ ; [39;49m[32;49m
0x7fbdaabb802d    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fbdaabb8030    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fbdaabb8033    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fbdaabb8036    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m .. fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + [39;49m[33;40m=[39;49m[34;49m  } for return fn @ ; [39;49m[32;49m
0x7fbdaabb803a    488908                  mov [rax], rcx                                         [39;49m
[34;49m ..  { fn 0 = fn1 0 = fn2 1 = } { n @ } { [39;49m[33;40mn[39;49m[34;49m n @ 1 - = }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fbdaabb803d    498d47f8                lea rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaabb8041    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb8045    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  fn 0 = fn1 0 = fn2 1 = } { n @ } { n [39;49m[33;40mn[39;49m[34;49m @ 1 - = }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fbdaabb8048    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m .. 0 = fn1 0 = fn2 1 = } { n @ } { n n @ [39;49m[33;40m1[39;49m[34;49m - = }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fbdaabb804c    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m .. = fn1 0 = fn2 1 = } { n @ } { n n @ 1 [39;49m[33;40m-[39;49m[34;49m = }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fbdaabb8053    482bc1                  sub rax, rcx                                           [39;49m[32;49m
0x7fbdaabb8056    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fbdaabb8059    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fbdaabb805c    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m .. fn1 0 = fn2 1 = } { n @ } { n n @ 1 - [39;49m[33;40m=[39;49m[34;49m }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fbdaabb8060    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. 1 0 = fn2 1 = } { n @ } { n n @ 1 - = [39;49m[33;40m}[39;49m[34;49m  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fbdaabb8063    eb92                    jmp 0x7fbdaabb7ff7         	< C.[34;49mfibPTC?[39;49m+57[32;49m >[39;49m[39;49m[32;49m
0x7fbdaabb8065    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m .. fn fn1 @ fn2 @ + =  } for return fn @ [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fbdaabb8069    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaabb806d    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m
[34;49m .. @ =  fn fn1 @ fn2 @ + =  } for return [39;49m[33;40mfn[39;49m[34;49m @ ; [39;49m[32;49m
0x7fbdaabb8071    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaabb8074    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'fibPTC?' :: codeSize = 182
Word : 0x00007fbda80847d0 :: Compiled at : 0x00007fbdaabb7fbe
 =============================
::> 'wdiss' was called at namespaces/test/dev.csl 331.14 <::

 13

 fibPTC? :
Timer [ 1 ] : elapsed time = 0.026839051 seconds :: function : fibPTC? : called on args : 1 - 23 : 10000 reps

 =============================
User.[34;49m_fibn1[39;49m <:> csl compiled word
SourceCode for User.[34;49m_fibn1[39;49m :> 
[34;49m: _fibn1 ( n ) { n @ 2 < } { n @ } { n -- n @ _fibn1 n -- n @ _fibn1 + } ifElse return tos ; [39;49m
Source code file location of [34;49m_fibn1[39;49m : "namespaces/test/dev.csl" : 336.2 :: we are now at : namespaces/test/dev.csl : 337.20
Compiled with : optimizeOn, inlineOn, Jcc8 on
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xaabbd392 -- code size = 114 bytes
TypeSignature : 
 -----------------------------
Word :: User.[34;49m_fibn1[39;49m : definition = 0x00007fbdaabbd392 : disassembly at namespaces/test/dev.csl : 337.20 :
[34;49m ..                                     : [39;49m[33;40m_fibn1[39;49m[34;49m ( n ) { n @ 2 < } { n @ } { n -- n @ _fibn1 n -- n @ _fibn1 + } ifElse return tos ;  .. [39;49m[32;49m
0x7fbdaabbd392    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fbdaabbd396    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaabbd39a    4981c608000000          add r14, 0x8                                           [39;49m
[34;49m ..                      : _fibn1 ( n ) { [39;49m[33;40mn[39;49m[34;49m @ 2 < } { n @ } { n -- n @ _fibn1 n -- n @ _fibn1 + } ifElse return tos ;  .. [39;49m[32;49m
0x7fbdaabbd3a1    498b47f8                mov rax, [r15-0x8]                                     [39;49m
[34;49m ..                : _fibn1 ( n ) { n @ 2 [39;49m[33;40m<[39;49m[34;49m } { n @ } { n -- n @ _fibn1 n -- n @ _fibn1 + } ifElse return tos ;  .. [39;49m[32;49m
0x7fbdaabbd3a5    4883f802                cmp rax, 0x2                                           [39;49m[32;49m
0x7fbdaabbd3a9    7d10                    jge 0xaabbd3bb                                         [39;49m
[34;49m ..          : _fibn1 ( n ) { n @ 2 < } { [39;49m[33;40mn[39;49m[34;49m @ } { n -- n @ _fibn1 n -- n @ _fibn1 + } ifElse return tos ;  .. [39;49m[32;49m
0x7fbdaabbd3ab    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaabbd3af    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabbd3b3    498906                  mov [r14], rax                                         [39;49m
[34;49m ..      : _fibn1 ( n ) { n @ 2 < } { n @ [39;49m[33;40m}[39;49m[34;49m { n -- n @ _fibn1 n -- n @ _fibn1 + } ifElse return tos ;  .. [39;49m[32;49m
0x7fbdaabbd3b6    e93d000000              jmp 0x7fbdaabbd3f8         	< User.[34;49m_fibn1[39;49m+102[32;49m >[39;49m[39;49m
[34;49m   : _fibn1 ( n ) { n @ 2 < } { n @ } { n [39;49m[33;40m--[39;49m[34;49m n @ _fibn1 n -- n @ _fibn1 + } ifElse return tos ;  .. [39;49m[32;49m
0x7fbdaabbd3bb    49ff4ff8                dec qword [r15-0x8]                                    [39;49m
[34;49m: _fibn1 ( n ) { n @ 2 < } { n @ } { n -- [39;49m[33;40mn[39;49m[34;49m @ _fibn1 n -- n @ _fibn1 + } ifElse return tos ;  .. [39;49m[32;49m
0x7fbdaabbd3bf    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaabbd3c3    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabbd3c7    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  ( n ) { n @ 2 < } { n @ } { n -- n @ [39;49m[33;40m_fibn1[39;49m[34;49m n -- n @ _fibn1 + } ifElse return tos ; [39;49m[32;49m
0x7fbdaabbd3ca    e8c3ffffff              call 0x7fbdaabbd392        	< User.[34;49m_fibn1[39;49m : 0x00007fbdaabbd392[32;49m >[39;49m[39;49m
[34;49m .. n @ 2 < } { n @ } { n -- n @ _fibn1 n [39;49m[33;40m--[39;49m[34;49m n @ _fibn1 + } ifElse return tos ; [39;49m[32;49m
0x7fbdaabbd3cf    49ff4ff8                dec qword [r15-0x8]                                    [39;49m
[34;49m ..  2 < } { n @ } { n -- n @ _fibn1 n -- [39;49m[33;40mn[39;49m[34;49m @ _fibn1 + } ifElse return tos ; [39;49m[32;49m
0x7fbdaabbd3d3    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaabbd3d7    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabbd3db    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  } { n @ } { n -- n @ _fibn1 n -- n @ [39;49m[33;40m_fibn1[39;49m[34;49m + } ifElse return tos ; [39;49m[32;49m
0x7fbdaabbd3de    e8afffffff              call 0x7fbdaabbd392        	< User.[34;49m_fibn1[39;49m : 0x00007fbdaabbd392[32;49m >[39;49m[39;49m[32;49m
0x7fbdaabbd3e3    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fbdaabbd3e6    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fbdaabbd3ea    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m .. @ } { n -- n @ _fibn1 n -- n @ _fibn1 [39;49m[33;40m+[39;49m[34;49m } ifElse return tos ; [39;49m[32;49m
0x7fbdaabbd3ee    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fbdaabbd3f1    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabbd3f5    498906                  mov [r14], rax                                         [39;49m
[34;49m .. n -- n @ _fibn1 + } ifElse return tos [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fbdaabbd3f8    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaabbd3fc    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaabbd400    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaabbd403    c3                      ret                                                    [39;49m
Word_Disassemble : word - '_fibn1' :: codeSize = 113
Word : 0x00007fbda7c08a80 :: Compiled at : 0x00007fbdaabbd392
 =============================
::> 'wdiss' was called at namespaces/test/dev.csl 337.20 <::
 6765 6765
 =============================
User.[34;49m_fib2[39;49m <:> csl compiled word
SourceCode for User.[34;49m_fib2[39;49m :> 
[34;49m: _fib2 dup 2 < ?< >:< dup -- _fib2 swap 2 - _fib2 + >; ; [39;49m
Source code file location of [34;49m_fib2[39;49m : "namespaces/test/dev.csl" : 349.2 :: we are now at : namespaces/test/dev.csl : 350.19
Compiled with : optimizeOn, inlineOn, Jcc8 on
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xaabbd546 -- code size = 137 bytes
TypeSignature : 
 -----------------------------
Word :: User.[34;49m_fib2[39;49m : definition = 0x00007fbdaabbd546 : disassembly at namespaces/test/dev.csl : 350.19 :
[34;49m ..                               : _fib2 [39;49m[33;40mdup[39;49m[34;49m 2 < ?< >:< dup -- _fib2 swap 2 - _fib2 + >; ;  .. [39;49m[32;49m
0x7fbdaabbd546    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fbdaabbd549    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabbd54d    498906                  mov [r14], rax                                         [39;49m
[34;49m ..                           : _fib2 dup [39;49m[33;40m2[39;49m[34;49m < ?< >:< dup -- _fib2 swap 2 - _fib2 + >; ;  .. [39;49m[32;49m
0x7fbdaabbd550    48c7c002000000          mov rax, 0x2                                           [39;49m[32;49m
0x7fbdaabbd557    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fbdaabbd55a    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fbdaabbd55d    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m ..                         : _fib2 dup 2 [39;49m[33;40m<[39;49m[34;49m ?< >:< dup -- _fib2 swap 2 - _fib2 + >; ;  .. [39;49m[32;49m
0x7fbdaabbd561    483bc1                  cmp rax, rcx                                           [39;49m[32;49m
0x7fbdaabbd564    7d05                    jge 0xaabbd56b                                         [39;49m
[34;49m ..                    : _fib2 dup 2 < ?< [39;49m[33;40m>:<[39;49m[34;49m dup -- _fib2 swap 2 - _fib2 + >; ;  .. [39;49m[32;49m
0x7fbdaabbd566    e963000000              jmp 0x7fbdaabbd5ce         	< User.[34;49m_fib2[39;49m+136[32;49m >[39;49m[39;49m
[34;49m ..                : _fib2 dup 2 < ?< >:< [39;49m[33;40mdup[39;49m[34;49m -- _fib2 swap 2 - _fib2 + >; ;  .. [39;49m[32;49m
0x7fbdaabbd56b    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fbdaabbd56e    4983c608                add r14, 0x8                                           [39;49m
[34;49m ..                       : _fib2 dup 2 < [39;49m[33;40m?<[39;49m[34;49m >:< dup -- _fib2 swap 2 - _fib2 + >; ;  .. [39;49m[32;49m
0x7fbdaabbd572    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaabbd575    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fbdaabbd578    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m ..            : _fib2 dup 2 < ?< >:< dup [39;49m[33;40m--[39;49m[34;49m _fib2 swap 2 - _fib2 + >; ;  .. [39;49m[32;49m
0x7fbdaabbd57c    48ffc8                  dec rax                                                [39;49m[32;49m
0x7fbdaabbd57f    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabbd583    498906                  mov [r14], rax                                         [39;49m
[34;49m ..         : _fib2 dup 2 < ?< >:< dup -- [39;49m[33;40m_fib2[39;49m[34;49m swap 2 - _fib2 + >; ;  .. [39;49m[32;49m
0x7fbdaabbd586    e8bbffffff              call 0x7fbdaabbd546        	< User.[34;49m_fib2[39;49m : 0x00007fbdaabbd546[32;49m >[39;49m[39;49m
[34;49m ..   : _fib2 dup 2 < ?< >:< dup -- _fib2 [39;49m[33;40mswap[39;49m[34;49m 2 - _fib2 + >; ;  .. [39;49m[32;49m
0x7fbdaabbd58b    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fbdaabbd58e    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fbdaabbd592    49894ef8                mov [r14-0x8], rcx                                     [39;49m[32;49m
0x7fbdaabbd596    498906                  mov [r14], rax                                         [39;49m
[34;49m : _fib2 dup 2 < ?< >:< dup -- _fib2 swap [39;49m[33;40m2[39;49m[34;49m - _fib2 + >; ;  .. [39;49m[32;49m
0x7fbdaabbd599    48c7c002000000          mov rax, 0x2                                           [39;49m[32;49m
0x7fbdaabbd5a0    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fbdaabbd5a3    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fbdaabbd5a6    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m .. b2 dup 2 < ?< >:< dup -- _fib2 swap 2 [39;49m[33;40m-[39;49m[34;49m _fib2 + >; ; [39;49m[32;49m
0x7fbdaabbd5aa    482bc1                  sub rax, rcx                                           [39;49m[32;49m
0x7fbdaabbd5ad    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabbd5b1    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  dup 2 < ?< >:< dup -- _fib2 swap 2 - [39;49m[33;40m_fib2[39;49m[34;49m + >; ; [39;49m[32;49m
0x7fbdaabbd5b4    e88dffffff              call 0x7fbdaabbd546        	< User.[34;49m_fib2[39;49m : 0x00007fbdaabbd546[32;49m >[39;49m[39;49m[32;49m
0x7fbdaabbd5b9    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fbdaabbd5bc    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fbdaabbd5c0    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m ..  < ?< >:< dup -- _fib2 swap 2 - _fib2 [39;49m[33;40m+[39;49m[34;49m >; ; [39;49m[32;49m
0x7fbdaabbd5c4    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fbdaabbd5c7    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabbd5cb    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  >:< dup -- _fib2 swap 2 - _fib2 + >; [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fbdaabbd5ce    c3                      ret                                                    [39;49m
Word_Disassemble : word - '_fib2' :: codeSize = 136
Word : 0x00007fbda7c0f5f0 :: Compiled at : 0x00007fbdaabbd546
 =============================
::> 'wdiss' was called at namespaces/test/dev.csl 350.19 <::

 6765
 =============================
User.[34;49m_fib3[39;49m <:> csl compiled word
SourceCode for User.[34;49m_fib3[39;49m :> 
[34;49m: _fib3 dup 2 < ?< >:< dup -- _fib3 swap 2 - _fib3 + >; ; [39;49m
Source code file location of [34;49m_fib3[39;49m : "namespaces/test/dev.csl" : 352.2 :: we are now at : namespaces/test/dev.csl : 358.19
Compiled with : optimizeOn, inlineOn, Jcc8 on
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xaabbd5e3 -- code size = 137 bytes
TypeSignature : 
 -----------------------------
Word :: User.[34;49m_fib3[39;49m : definition = 0x00007fbdaabbd5e3 : disassembly at namespaces/test/dev.csl : 358.19 :
[34;49m ..                              : _fib3  [39;49m[33;40mdup[39;49m[34;49m 2 <  ?< >:<  dup -- _fib3 swap 2 - _fib3 +  >;  ;  .. [39;49m[32;49m
0x7fbdaabbd5e3    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fbdaabbd5e6    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabbd5ea    498906                  mov [r14], rax                                         [39;49m
[34;49m ..                          : _fib3  dup [39;49m[33;40m2[39;49m[34;49m <  ?< >:<  dup -- _fib3 swap 2 - _fib3 +  >;  ;  .. [39;49m[32;49m
0x7fbdaabbd5ed    48c7c002000000          mov rax, 0x2                                           [39;49m[32;49m
0x7fbdaabbd5f4    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fbdaabbd5f7    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fbdaabbd5fa    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m ..                        : _fib3  dup 2 [39;49m[33;40m<[39;49m[34;49m  ?< >:<  dup -- _fib3 swap 2 - _fib3 +  >;  ;  .. [39;49m[32;49m
0x7fbdaabbd5fe    483bc1                  cmp rax, rcx                                           [39;49m[32;49m
0x7fbdaabbd601    7d05                    jge 0xaabbd608                                         [39;49m
[34;49m ..                  : _fib3  dup 2 <  ?< [39;49m[33;40m>:<[39;49m[34;49m  dup -- _fib3 swap 2 - _fib3 +  >;  ;  .. [39;49m[32;49m
0x7fbdaabbd603    e963000000              jmp 0x7fbdaabbd66b         	< User.[34;49m_fib3[39;49m+136[32;49m >[39;49m[39;49m
[34;49m ..             : _fib3  dup 2 <  ?< >:<  [39;49m[33;40mdup[39;49m[34;49m -- _fib3 swap 2 - _fib3 +  >;  ;  .. [39;49m[32;49m
0x7fbdaabbd608    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fbdaabbd60b    4983c608                add r14, 0x8                                           [39;49m
[34;49m ..                     : _fib3  dup 2 <  [39;49m[33;40m?<[39;49m[34;49m >:<  dup -- _fib3 swap 2 - _fib3 +  >;  ;  .. [39;49m[32;49m
0x7fbdaabbd60f    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaabbd612    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fbdaabbd615    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m ..         : _fib3  dup 2 <  ?< >:<  dup [39;49m[33;40m--[39;49m[34;49m _fib3 swap 2 - _fib3 +  >;  ;  .. [39;49m[32;49m
0x7fbdaabbd619    48ffc8                  dec rax                                                [39;49m[32;49m
0x7fbdaabbd61c    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabbd620    498906                  mov [r14], rax                                         [39;49m
[34;49m ..      : _fib3  dup 2 <  ?< >:<  dup -- [39;49m[33;40m_fib3[39;49m[34;49m swap 2 - _fib3 +  >;  ;  .. [39;49m[32;49m
0x7fbdaabbd623    e8bbffffff              call 0x7fbdaabbd5e3        	< User.[34;49m_fib3[39;49m : 0x00007fbdaabbd5e3[32;49m >[39;49m[39;49m
[34;49m   : _fib3  dup 2 <  ?< >:<  dup -- _fib3 [39;49m[33;40mswap[39;49m[34;49m 2 - _fib3 +  >;  ;  .. [39;49m[32;49m
0x7fbdaabbd628    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fbdaabbd62b    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fbdaabbd62f    49894ef8                mov [r14-0x8], rcx                                     [39;49m[32;49m
0x7fbdaabbd633    498906                  mov [r14], rax                                         [39;49m
[34;49m .. 3  dup 2 <  ?< >:<  dup -- _fib3 swap [39;49m[33;40m2[39;49m[34;49m - _fib3 +  >;  ; [39;49m[32;49m
0x7fbdaabbd636    48c7c002000000          mov rax, 0x2                                           [39;49m[32;49m
0x7fbdaabbd63d    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fbdaabbd640    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fbdaabbd643    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m ..  dup 2 <  ?< >:<  dup -- _fib3 swap 2 [39;49m[33;40m-[39;49m[34;49m _fib3 +  >;  ; [39;49m[32;49m
0x7fbdaabbd647    482bc1                  sub rax, rcx                                           [39;49m[32;49m
0x7fbdaabbd64a    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabbd64e    498906                  mov [r14], rax                                         [39;49m
[34;49m .. up 2 <  ?< >:<  dup -- _fib3 swap 2 - [39;49m[33;40m_fib3[39;49m[34;49m +  >;  ; [39;49m[32;49m
0x7fbdaabbd651    e88dffffff              call 0x7fbdaabbd5e3        	< User.[34;49m_fib3[39;49m : 0x00007fbdaabbd5e3[32;49m >[39;49m[39;49m[32;49m
0x7fbdaabbd656    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fbdaabbd659    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fbdaabbd65d    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m ..   ?< >:<  dup -- _fib3 swap 2 - _fib3 [39;49m[33;40m+[39;49m[34;49m  >;  ; [39;49m[32;49m
0x7fbdaabbd661    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fbdaabbd664    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabbd668    498906                  mov [r14], rax                                         [39;49m
[34;49m .. <  dup -- _fib3 swap 2 - _fib3 +  >;  [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fbdaabbd66b    c3                      ret                                                    [39;49m
Word_Disassemble : word - '_fib3' :: codeSize = 136
Word : 0x00007fbda7c10720 :: Compiled at : 0x00007fbdaabbd5e3
 =============================
::> 'wdiss' was called at namespaces/test/dev.csl 358.19 <::
 6765
 =============================
User.[34;49m_fib4[39;49m <:> csl compiled word
SourceCode for User.[34;49m_fib4[39;49m :> 
[34;49m: _fib4 { dup 2 >= } { dup -- _fib4 swap 2 - _fib4 + } if2 ; [39;49m
Source code file location of [34;49m_fib4[39;49m : "namespaces/test/dev.csl" : 360.2 :: we are now at : namespaces/test/dev.csl : 366.19
Compiled with : optimizeOn, inlineOn, Jcc8 on
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xaabbd680 -- code size = 126 bytes
TypeSignature : 
 -----------------------------
Word :: User.[34;49m_fib4[39;49m : definition = 0x00007fbdaabbd680 : disassembly at namespaces/test/dev.csl : 366.19 :
[34;49m ..                            : _fib4  { [39;49m[33;40mdup[39;49m[34;49m 2 >= } {  dup -- _fib4 swap 2 - _fib4 +  } if2  ;  .. [39;49m[32;49m
0x7fbdaabbd680    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fbdaabbd683    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabbd687    498906                  mov [r14], rax                                         [39;49m
[34;49m ..                        : _fib4  { dup [39;49m[33;40m2[39;49m[34;49m >= } {  dup -- _fib4 swap 2 - _fib4 +  } if2  ;  .. [39;49m[32;49m
0x7fbdaabbd68a    48c7c002000000          mov rax, 0x2                                           [39;49m[32;49m
0x7fbdaabbd691    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fbdaabbd694    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fbdaabbd697    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m ..                      : _fib4  { dup 2 [39;49m[33;40m>=[39;49m[34;49m } {  dup -- _fib4 swap 2 - _fib4 +  } if2  ;  .. [39;49m[32;49m
0x7fbdaabbd69b    483bc1                  cmp rax, rcx                                           [39;49m[32;49m
0x7fbdaabbd69e    7c5d                    jl 0xaabbd6fd                                          [39;49m
[34;49m ..              : _fib4  { dup 2 >= } {  [39;49m[33;40mdup[39;49m[34;49m -- _fib4 swap 2 - _fib4 +  } if2  ;  .. [39;49m[32;49m
0x7fbdaabbd6a0    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fbdaabbd6a3    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabbd6a7    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m ..          : _fib4  { dup 2 >= } {  dup [39;49m[33;40m--[39;49m[34;49m _fib4 swap 2 - _fib4 +  } if2  ;  .. [39;49m[32;49m
0x7fbdaabbd6ab    48ffc8                  dec rax                                                [39;49m[32;49m
0x7fbdaabbd6ae    4983c608                add r14, 0x8                                           [39;49m
[34;49m ..                 : _fib4  { dup 2 >= } [39;49m[33;40m{[39;49m[34;49m  dup -- _fib4 swap 2 - _fib4 +  } if2  ;  .. [39;49m[32;49m
0x7fbdaabbd6b2    498906                  mov [r14], rax                                         [39;49m
[34;49m ..       : _fib4  { dup 2 >= } {  dup -- [39;49m[33;40m_fib4[39;49m[34;49m swap 2 - _fib4 +  } if2  ;  .. [39;49m[32;49m
0x7fbdaabbd6b5    e8c6ffffff              call 0x7fbdaabbd680        	< User.[34;49m_fib4[39;49m : 0x00007fbdaabbd680[32;49m >[39;49m[39;49m
[34;49m .. : _fib4  { dup 2 >= } {  dup -- _fib4 [39;49m[33;40mswap[39;49m[34;49m 2 - _fib4 +  } if2  ;  .. [39;49m[32;49m
0x7fbdaabbd6ba    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fbdaabbd6bd    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fbdaabbd6c1    49894ef8                mov [r14-0x8], rcx                                     [39;49m[32;49m
0x7fbdaabbd6c5    498906                  mov [r14], rax                                         [39;49m
[34;49m .. b4  { dup 2 >= } {  dup -- _fib4 swap [39;49m[33;40m2[39;49m[34;49m - _fib4 +  } if2  ; [39;49m[32;49m
0x7fbdaabbd6c8    48c7c002000000          mov rax, 0x2                                           [39;49m[32;49m
0x7fbdaabbd6cf    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fbdaabbd6d2    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fbdaabbd6d5    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m ..   { dup 2 >= } {  dup -- _fib4 swap 2 [39;49m[33;40m-[39;49m[34;49m _fib4 +  } if2  ; [39;49m[32;49m
0x7fbdaabbd6d9    482bc1                  sub rax, rcx                                           [39;49m[32;49m
0x7fbdaabbd6dc    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabbd6e0    498906                  mov [r14], rax                                         [39;49m
[34;49m .. { dup 2 >= } {  dup -- _fib4 swap 2 - [39;49m[33;40m_fib4[39;49m[34;49m +  } if2  ; [39;49m[32;49m
0x7fbdaabbd6e3    e898ffffff              call 0x7fbdaabbd680        	< User.[34;49m_fib4[39;49m : 0x00007fbdaabbd680[32;49m >[39;49m[39;49m[32;49m
0x7fbdaabbd6e8    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fbdaabbd6eb    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fbdaabbd6ef    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m .. 2 >= } {  dup -- _fib4 swap 2 - _fib4 [39;49m[33;40m+[39;49m[34;49m  } if2  ; [39;49m[32;49m
0x7fbdaabbd6f3    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fbdaabbd6f6    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabbd6fa    498906                  mov [r14], rax                                         [39;49m
[34;49m .. dup -- _fib4 swap 2 - _fib4 +  } if2  [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fbdaabbd6fd    c3                      ret                                                    [39;49m
Word_Disassemble : word - '_fib4' :: codeSize = 125
Word : 0x00007fbda7c11850 :: Compiled at : 0x00007fbdaabbd680
 =============================
::> 'wdiss' was called at namespaces/test/dev.csl 366.19 <::
 6765
 =============================
C.[34;49mcfib2_O3[39;49m <:> C compiled primitive
SourceCode for C.[34;49mcfib2_O3[39;49m :> 
C Primitive
 -----------------------------
Word :: C.[34;49mcfib2_O3[39;49m : definition = 0x000055bd1e3ef6d0 : disassembly at namespaces/test/dev.csl : 375.21 :[32;49m
0x55bd1e3ef6d4    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x55bd1e3ef6d7    4c89f7                  mov rdi, r14                                           [39;49m[32;49m
0x55bd1e3ef6da    4885c0                  test rax, rax                                          [39;49m[32;49m
0x55bd1e3ef6dd    7429                    jz 0x1e3ef708                                          [39;49m[32;49m
0x55bd1e3ef6df    be01000000              mov esi, 0x1                                           [39;49m[32;49m
0x55bd1e3ef6e4    31d2                    xor edx, edx                                           [39;49m[32;49m
0x55bd1e3ef6e6    eb0b                    jmp 0x55bd1e3ef6f3         	< C compiler code >        [39;49m[32;49m
0x55bd1e3ef6e8    0f1f840000000000        nop [rax+rax]                                          [39;49m[32;49m
0x55bd1e3ef6f0    4889ca                  mov rdx, rcx                                           [39;49m[32;49m
0x55bd1e3ef6f3    488d0c32                lea rcx, [rdx+rsi]                                     [39;49m[32;49m
0x55bd1e3ef6f7    4889d6                  mov rsi, rdx                                           [39;49m[32;49m
0x55bd1e3ef6fa    4883e801                sub rax, 0x1                                           [39;49m[32;49m
0x55bd1e3ef6fe    75f0                    jnz 0x1e3ef6f0                                         [39;49m[32;49m
0x55bd1e3ef700    48890f                  mov [rdi], rcx                                         [39;49m[32;49m
0x55bd1e3ef703    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'cfib2_O3' :: codeSize = 48
Word : 0x00007fbdaac50058 :: Compiled at : 0x000055bd1e3ef6d0
 =============================
::> 'wdiss' was called at namespaces/test/dev.csl 375.21 <::

 0x00007fbdab0efa58
 The fibonacci sequence 15 :
 C -O3 :  610
Timer [ 1 ] : elapsed time = 0.000008927 seconds
 no locals fib  :  610
Timer [ 1 ] : elapsed time = 0.000011682 seconds
 locals fib1    :  610
Timer [ 1 ] : elapsed time = 0.000011571 seconds
 no locals fib2 :  610
Timer [ 1 ] : elapsed time = 0.000013124 seconds
 no locals fib3 :  610
Timer [ 1 ] : elapsed time = 0.000012403 seconds
 fibPTC?        :  610
Timer [ 1 ] : elapsed time = 0.000006632 seconds
 fibPTC2?        :  610
Timer [ 1 ] : elapsed time = 0.000005620 seconds
 0x00007fbdab0efa58
 The fibonacci sequence 30 :
 C -O3 :  832040
Timer [ 1 ] : elapsed time = 0.001723805 seconds
 no locals fib  :  832040
Timer [ 1 ] : elapsed time = 0.006352990 seconds
 locals fib1    :  832040
Timer [ 1 ] : elapsed time = 0.006014519 seconds
 no locals fib2 :  832040
Timer [ 1 ] : elapsed time = 0.007178910 seconds
 no locals fib3 :  832040
Timer [ 1 ] : elapsed time = 0.006350458 seconds
 fibPTC?        :  832040
Timer [ 1 ] : elapsed time = 0.000007053 seconds
 fibPTC2?        :  832040
Timer [ 1 ] : elapsed time = 0.000006903 seconds
 =============================
Interpreter.[34;49mtfib3[39;49m <:> csl compiled word
SourceCode for Interpreter.[34;49mtfib3[39;49m :> 
[34;49m: tfib3 ( n | m ) "Cfib2_O3 : " ps 1 ti m 1 = { m @ n @ <= } { m @ cfib2_O3 p m ++ } while 1 time nl nl "locals fibPTC? : " ps 1 ti m 1 = { m @ n @ <= } { m @ fibPTC? p m ++ } while 1 time nl nl "locals fibPTC2? : " ps 1 ti m 1 = { m @ n @ <= } { m @ fibPTC2? p m ++ } while 1 time nl nl "Cfib2_O3 : " ps 1 ti m 1 = { m @ n @ <= } { m @ cfib2_O3 p m ++ } while 1 time nl nl ; [39;49m
Source code file location of [34;49mtfib3[39;49m : "namespaces/test/dev.csl" : 425.2 :: we are now at : namespaces/test/dev.csl : 431.19
Compiled with : optimizeOn, inlineOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xaabbedd9 -- code size = 904 bytes
TypeSignature : 
 -----------------------------
Word :: Interpreter.[34;49mtfib3[39;49m : definition = 0x00007fbdaabbedd9 : disassembly at namespaces/test/dev.csl : 431.19 :
[34;49m ..                                     : [39;49m[33;40mtfib3[39;49m[34;49m ( n | m )  "Cfib2_O3 : " ps 1 ti m 1 = { m @ n @ <= } { m @ cfib2_O3 p m ++ } while 1 time nl n .. [39;49m[32;49m
0x7fbdaabbedd9    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fbdaabbeddd    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaabbede1    4981c610000000          add r14, 0x10                                          [39;49m
[34;49m ..                    : tfib3 ( n | m )  [39;49m[33;40m"[39;49m[34;49mCfib2_O3 : " ps 1 ti m 1 = { m @ n @ <= } { m @ cfib2_O3 p m ++ } while 1 time nl nl "locals fibPTC? .. [39;49m[32;49m
0x7fbdaabbede8    48b823484aa9bd7f0000    mov rax, 0x7fbda94a4823    	[32;49m< string : '[39;49m[39;49mCfib2_O3       : [39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fbdaabbedf2    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabbedf6    498906                  mov [r14], rax                                         [39;49m
[34;49m ..      : tfib3 ( n | m )  "Cfib2_O3 : " [39;49m[33;40mps[39;49m[34;49m 1 ti m 1 = { m @ n @ <= } { m @ cfib2_O3 p m ++ } while 1 time nl nl "locals fibPTC? : " ps 1 ti m .. [39;49m[32;49m
0x7fbdaabbedf9    49b97d63d5aabd7f0000    mov r9, 0x7fbdaad5637d                                 [39;49m[32;49m
0x7fbdaabbee03    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fbdaad5637d[32;49m >[39;49m[39;49m
[34;49m ..   : tfib3 ( n | m )  "Cfib2_O3 : " ps [39;49m[33;40m1[39;49m[34;49m ti m 1 = { m @ n @ <= } { m @ cfib2_O3 p m ++ } while 1 time nl nl "locals fibPTC? : " ps 1 ti m 1  .. [39;49m[32;49m
0x7fbdaabbee06    48c7c001000000          mov rax, 0x1                                           [39;49m[32;49m
0x7fbdaabbee0d    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabbee11    498906                  mov [r14], rax                                         [39;49m
[34;49m .. : tfib3 ( n | m )  "Cfib2_O3 : " ps 1 [39;49m[33;40mti[39;49m[34;49m m 1 = { m @ n @ <= } { m @ cfib2_O3 p m ++ } while 1 time nl nl "locals fibPTC? : " ps 1 ti m 1 =  .. [39;49m[32;49m
0x7fbdaabbee14    49b94e76d5aabd7f0000    mov r9, 0x7fbdaad5764e                                 [39;49m[32;49m
0x7fbdaabbee1e    49ffd1                  call r9                    	< System.[34;49mti[39;49m : 0x00007fbdaad5764e[32;49m >[39;49m[39;49m
[34;49m : tfib3 ( n | m )  "Cfib2_O3 : " ps 1 ti [39;49m[33;40mm[39;49m[34;49m 1 = { m @ n @ <= } { m @ cfib2_O3 p m ++ } while 1 time nl nl "locals fibPTC? : " ps 1 ti m 1 = { m .. [39;49m[32;49m
0x7fbdaabbee21    498d4708                lea rax, [r15+0x8]                                     [39;49m
[34;49m .. b3 ( n | m )  "Cfib2_O3 : " ps 1 ti m [39;49m[33;40m1[39;49m[34;49m = { m @ n @ <= } { m @ cfib2_O3 p m ++ } while 1 time nl nl "locals fibPTC? : " ps 1 ti m 1 = { m @ .. [39;49m[32;49m
0x7fbdaabbee25    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m ..  ( n | m )  "Cfib2_O3 : " ps 1 ti m 1 [39;49m[33;40m=[39;49m[34;49m { m @ n @ <= } { m @ cfib2_O3 p m ++ } while 1 time nl nl "locals fibPTC? : " ps 1 ti m 1 = { m @ n .. [39;49m[32;49m
0x7fbdaabbee2c    488908                  mov [rax], rcx                                         [39;49m
[34;49m ..  | m )  "Cfib2_O3 : " ps 1 ti m 1 = { [39;49m[33;40mm[39;49m[34;49m @ n @ <= } { m @ cfib2_O3 p m ++ } while 1 time nl nl "locals fibPTC? : " ps 1 ti m 1 = { m @ n @ < .. [39;49m[32;49m
0x7fbdaabbee2f    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m ..  )  "Cfib2_O3 : " ps 1 ti m 1 = { m @ [39;49m[33;40mn[39;49m[34;49m @ <= } { m @ cfib2_O3 p m ++ } while 1 time nl nl "locals fibPTC? : " ps 1 ti m 1 = { m @ n @ <= }  .. [39;49m[32;49m
0x7fbdaabbee33    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m
[34;49m .. "Cfib2_O3 : " ps 1 ti m 1 = { m @ n @ [39;49m[33;40m<=[39;49m[34;49m } { m @ cfib2_O3 p m ++ } while 1 time nl nl "locals fibPTC? : " ps 1 ti m 1 = { m @ n @ <= } { m  .. [39;49m[32;49m
0x7fbdaabbee37    483bc1                  cmp rax, rcx                                           [39;49m[32;49m
0x7fbdaabbee3a    0f8f35000000            jg 0x7fbdaabbee75          	< Interpreter.[34;49mtfib3[39;49m+156[32;49m >[39;49m[39;49m
[34;49m .. O3 : " ps 1 ti m 1 = { m @ n @ <= } { [39;49m[33;40mm[39;49m[34;49m @ cfib2_O3 p m ++ } while 1 time nl nl "locals fibPTC? : " ps 1 ti m 1 = { m @ n @ <= } { m @ fibPT .. [39;49m[32;49m
0x7fbdaabbee40    498b4708                mov rax, [r15+0x8]                                     [39;49m[32;49m
0x7fbdaabbee44    4983c608                add r14, 0x8                                           [39;49m
[34;49m .. ib2_O3 : " ps 1 ti m 1 = { m @ n @ <= [39;49m[33;40m}[39;49m[34;49m { m @ cfib2_O3 p m ++ } while 1 time nl nl "locals fibPTC? : " ps 1 ti m 1 = { m @ n @ <= } { m @ f .. [39;49m[32;49m
0x7fbdaabbee48    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  " ps 1 ti m 1 = { m @ n @ <= } { m @ [39;49m[33;40mcfib2_O3[39;49m[34;49m p m ++ } while 1 time nl nl "locals fibPTC? : " ps 1 ti m 1 = { m @ n @ <= } { m @ fibPTC? p .. [39;49m[32;49m
0x7fbdaabbee4b    49b8d0f63e1ebd550000    mov r8, 0x55bd1e3ef6d0                                 [39;49m[32;49m
0x7fbdaabbee55    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaabbee5f    49ffd1                  call r9                    	< C.[34;49mcfib2_O3[39;49m : 0x000055bd1e3ef6d0[32;49m >[39;49m[39;49m
[34;49m .. i m 1 = { m @ n @ <= } { m @ cfib2_O3 [39;49m[33;40mp[39;49m[34;49m m ++ } while 1 time nl nl "locals fibPTC? : " ps 1 ti m 1 = { m @ n @ <= } { m @ fibPTC? p m ++ } w .. [39;49m[32;49m
0x7fbdaabbee62    49b9d965d5aabd7f0000    mov r9, 0x7fbdaad565d9                                 [39;49m[32;49m
0x7fbdaabbee6c    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fbdaad565d9[32;49m >[39;49m[39;49m
[34;49m .. 1 = { m @ n @ <= } { m @ cfib2_O3 p m [39;49m[33;40m++[39;49m[34;49m } while 1 time nl nl "locals fibPTC? : " ps 1 ti m 1 = { m @ n @ <= } { m @ fibPTC? p m ++ } while .. [39;49m[32;49m
0x7fbdaabbee6f    49ff4708                inc qword [r15+0x8]                                    [39;49m
[34;49m ..  { m @ n @ <= } { m @ cfib2_O3 p m ++ [39;49m[33;40m}[39;49m[34;49m while 1 time nl nl "locals fibPTC? : " ps 1 ti m 1 = { m @ n @ <= } { m @ fibPTC? p m ++ } while 1  .. [39;49m[32;49m
0x7fbdaabbee73    ebba                    jmp 0x7fbdaabbee2f         	< Interpreter.[34;49mtfib3[39;49m+86[32;49m >[39;49m[39;49m
[34;49m ..  @ <= } { m @ cfib2_O3 p m ++ } while [39;49m[33;40m1[39;49m[34;49m time nl nl "locals fibPTC? : " ps 1 ti m 1 = { m @ n @ <= } { m @ fibPTC? p m ++ } while 1 time nl  .. [39;49m[32;49m
0x7fbdaabbee75    48c7c001000000          mov rax, 0x1                                           [39;49m[32;49m
0x7fbdaabbee7c    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabbee80    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  <= } { m @ cfib2_O3 p m ++ } while 1 [39;49m[33;40mtime[39;49m[34;49m nl nl "locals fibPTC? : " ps 1 ti m 1 = { m @ n @ <= } { m @ fibPTC? p m ++ } while 1 time nl nl .. [39;49m[32;49m
0x7fbdaabbee83    49b820ad3e1ebd550000    mov r8, 0x55bd1e3ead20                                 [39;49m[32;49m
0x7fbdaabbee8d    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaabbee97    49ffd1                  call r9                    	< System.[34;49mtime[39;49m : 0x000055bd1e3ead20[32;49m >[39;49m[39;49m
[34;49m ..  { m @ cfib2_O3 p m ++ } while 1 time [39;49m[33;40mnl[39;49m[34;49m nl "locals fibPTC? : " ps 1 ti m 1 = { m @ n @ <= } { m @ fibPTC? p m ++ } while 1 time nl nl "loc .. [39;49m[32;49m
0x7fbdaabbee9a    49b8e0903e1ebd550000    mov r8, 0x55bd1e3e90e0                                 [39;49m[32;49m
0x7fbdaabbeea4    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaabbeeae    49ffd1                  call r9                    	< Io.[34;49mnewline[39;49m : 0x000055bd1e3e90e0[32;49m >[39;49m[39;49m
[34;49m .. m @ cfib2_O3 p m ++ } while 1 time nl [39;49m[33;40mnl[39;49m[34;49m "locals fibPTC? : " ps 1 ti m 1 = { m @ n @ <= } { m @ fibPTC? p m ++ } while 1 time nl nl "locals .. [39;49m[32;49m
0x7fbdaabbeeb1    49b8e0903e1ebd550000    mov r8, 0x55bd1e3e90e0                                 [39;49m[32;49m
0x7fbdaabbeebb    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaabbeec5    49ffd1                  call r9                    	< Io.[34;49mnewline[39;49m : 0x000055bd1e3e90e0[32;49m >[39;49m[39;49m
[34;49m ..  cfib2_O3 p m ++ } while 1 time nl nl [39;49m[33;40m"[39;49m[34;49mlocals fibPTC? : " ps 1 ti m 1 = { m @ n @ <= } { m @ fibPTC? p m ++ } while 1 time nl nl "locals fi .. [39;49m[32;49m
0x7fbdaabbeec8    48b863484aa9bd7f0000    mov rax, 0x7fbda94a4863    	[32;49m< string : '[39;49m[39;49mlocals fibPTC? : [39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fbdaabbeed2    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabbeed6    498906                  mov [r14], rax                                         [39;49m
[34;49m .. hile 1 time nl nl "locals fibPTC? : " [39;49m[33;40mps[39;49m[34;49m 1 ti m 1 = { m @ n @ <= } { m @ fibPTC? p m ++ } while 1 time nl nl "locals fibPTC2? : " ps 1 ti m .. [39;49m[32;49m
0x7fbdaabbeed9    49b97d63d5aabd7f0000    mov r9, 0x7fbdaad5637d                                 [39;49m[32;49m
0x7fbdaabbeee3    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fbdaad5637d[32;49m >[39;49m[39;49m
[34;49m .. e 1 time nl nl "locals fibPTC? : " ps [39;49m[33;40m1[39;49m[34;49m ti m 1 = { m @ n @ <= } { m @ fibPTC? p m ++ } while 1 time nl nl "locals fibPTC2? : " ps 1 ti m 1  .. [39;49m[32;49m
0x7fbdaabbeee6    48c7c001000000          mov rax, 0x1                                           [39;49m[32;49m
0x7fbdaabbeeed    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabbeef1    498906                  mov [r14], rax                                         [39;49m
[34;49m .. 1 time nl nl "locals fibPTC? : " ps 1 [39;49m[33;40mti[39;49m[34;49m m 1 = { m @ n @ <= } { m @ fibPTC? p m ++ } while 1 time nl nl "locals fibPTC2? : " ps 1 ti m 1 =  .. [39;49m[32;49m
0x7fbdaabbeef4    49b94e76d5aabd7f0000    mov r9, 0x7fbdaad5764e                                 [39;49m[32;49m
0x7fbdaabbeefe    49ffd1                  call r9                    	< System.[34;49mti[39;49m : 0x00007fbdaad5764e[32;49m >[39;49m[39;49m
[34;49m .. ime nl nl "locals fibPTC? : " ps 1 ti [39;49m[33;40mm[39;49m[34;49m 1 = { m @ n @ <= } { m @ fibPTC? p m ++ } while 1 time nl nl "locals fibPTC2? : " ps 1 ti m 1 = { m .. [39;49m[32;49m
0x7fbdaabbef01    498d4708                lea rax, [r15+0x8]                                     [39;49m
[34;49m .. e nl nl "locals fibPTC? : " ps 1 ti m [39;49m[33;40m1[39;49m[34;49m = { m @ n @ <= } { m @ fibPTC? p m ++ } while 1 time nl nl "locals fibPTC2? : " ps 1 ti m 1 = { m @ .. [39;49m[32;49m
0x7fbdaabbef05    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m .. nl nl "locals fibPTC? : " ps 1 ti m 1 [39;49m[33;40m=[39;49m[34;49m { m @ n @ <= } { m @ fibPTC? p m ++ } while 1 time nl nl "locals fibPTC2? : " ps 1 ti m 1 = { m @ n .. [39;49m[32;49m
0x7fbdaabbef0c    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. l "locals fibPTC? : " ps 1 ti m 1 = { [39;49m[33;40mm[39;49m[34;49m @ n @ <= } { m @ fibPTC? p m ++ } while 1 time nl nl "locals fibPTC2? : " ps 1 ti m 1 = { m @ n @ < .. [39;49m[32;49m
0x7fbdaabbef0f    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m .. ocals fibPTC? : " ps 1 ti m 1 = { m @ [39;49m[33;40mn[39;49m[34;49m @ <= } { m @ fibPTC? p m ++ } while 1 time nl nl "locals fibPTC2? : " ps 1 ti m 1 = { m @ n @ <= }  .. [39;49m[32;49m
0x7fbdaabbef13    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m
[34;49m .. s fibPTC? : " ps 1 ti m 1 = { m @ n @ [39;49m[33;40m<=[39;49m[34;49m } { m @ fibPTC? p m ++ } while 1 time nl nl "locals fibPTC2? : " ps 1 ti m 1 = { m @ n @ <= } { m  .. [39;49m[32;49m
0x7fbdaabbef17    483bc1                  cmp rax, rcx                                           [39;49m[32;49m
0x7fbdaabbef1a    0f8f2b000000            jg 0x7fbdaabbef4b          	< Interpreter.[34;49mtfib3[39;49m+370[32;49m >[39;49m[39;49m
[34;49m .. C? : " ps 1 ti m 1 = { m @ n @ <= } { [39;49m[33;40mm[39;49m[34;49m @ fibPTC? p m ++ } while 1 time nl nl "locals fibPTC2? : " ps 1 ti m 1 = { m @ n @ <= } { m @ fibPT .. [39;49m[32;49m
0x7fbdaabbef20    498b4708                mov rax, [r15+0x8]                                     [39;49m[32;49m
0x7fbdaabbef24    4983c608                add r14, 0x8                                           [39;49m
[34;49m .. ibPTC? : " ps 1 ti m 1 = { m @ n @ <= [39;49m[33;40m}[39;49m[34;49m { m @ fibPTC? p m ++ } while 1 time nl nl "locals fibPTC2? : " ps 1 ti m 1 = { m @ n @ <= } { m @ f .. [39;49m[32;49m
0x7fbdaabbef28    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  " ps 1 ti m 1 = { m @ n @ <= } { m @ [39;49m[33;40mfibPTC?[39;49m[34;49m p m ++ } while 1 time nl nl "locals fibPTC2? : " ps 1 ti m 1 = { m @ n @ <= } { m @ fibPTC2?  .. [39;49m[32;49m
0x7fbdaabbef2b    49b9be7fbbaabd7f0000    mov r9, 0x7fbdaabb7fbe                                 [39;49m[32;49m
0x7fbdaabbef35    49ffd1                  call r9                    	< C.[34;49mfibPTC?[39;49m : 0x00007fbdaabb7fbe[32;49m >[39;49m[39;49m
[34;49m .. ti m 1 = { m @ n @ <= } { m @ fibPTC? [39;49m[33;40mp[39;49m[34;49m m ++ } while 1 time nl nl "locals fibPTC2? : " ps 1 ti m 1 = { m @ n @ <= } { m @ fibPTC2? p m ++ } .. [39;49m[32;49m
0x7fbdaabbef38    49b9d965d5aabd7f0000    mov r9, 0x7fbdaad565d9                                 [39;49m[32;49m
0x7fbdaabbef42    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fbdaad565d9[32;49m >[39;49m[39;49m
[34;49m ..  1 = { m @ n @ <= } { m @ fibPTC? p m [39;49m[33;40m++[39;49m[34;49m } while 1 time nl nl "locals fibPTC2? : " ps 1 ti m 1 = { m @ n @ <= } { m @ fibPTC2? p m ++ } whi .. [39;49m[32;49m
0x7fbdaabbef45    49ff4708                inc qword [r15+0x8]                                    [39;49m
[34;49m .. = { m @ n @ <= } { m @ fibPTC? p m ++ [39;49m[33;40m}[39;49m[34;49m while 1 time nl nl "locals fibPTC2? : " ps 1 ti m 1 = { m @ n @ <= } { m @ fibPTC2? p m ++ } while  .. [39;49m[32;49m
0x7fbdaabbef49    ebc4                    jmp 0x7fbdaabbef0f         	< Interpreter.[34;49mtfib3[39;49m+310[32;49m >[39;49m[39;49m
[34;49m .. n @ <= } { m @ fibPTC? p m ++ } while [39;49m[33;40m1[39;49m[34;49m time nl nl "locals fibPTC2? : " ps 1 ti m 1 = { m @ n @ <= } { m @ fibPTC2? p m ++ } while 1 time n .. [39;49m[32;49m
0x7fbdaabbef4b    48c7c001000000          mov rax, 0x1                                           [39;49m[32;49m
0x7fbdaabbef52    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabbef56    498906                  mov [r14], rax                                         [39;49m
[34;49m .. @ <= } { m @ fibPTC? p m ++ } while 1 [39;49m[33;40mtime[39;49m[34;49m nl nl "locals fibPTC2? : " ps 1 ti m 1 = { m @ n @ <= } { m @ fibPTC2? p m ++ } while 1 time nl  .. [39;49m[32;49m
0x7fbdaabbef59    49b820ad3e1ebd550000    mov r8, 0x55bd1e3ead20                                 [39;49m[32;49m
0x7fbdaabbef63    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaabbef6d    49ffd1                  call r9                    	< System.[34;49mtime[39;49m : 0x000055bd1e3ead20[32;49m >[39;49m[39;49m
[34;49m .. } { m @ fibPTC? p m ++ } while 1 time [39;49m[33;40mnl[39;49m[34;49m nl "locals fibPTC2? : " ps 1 ti m 1 = { m @ n @ <= } { m @ fibPTC2? p m ++ } while 1 time nl nl "C .. [39;49m[32;49m
0x7fbdaabbef70    49b8e0903e1ebd550000    mov r8, 0x55bd1e3e90e0                                 [39;49m[32;49m
0x7fbdaabbef7a    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaabbef84    49ffd1                  call r9                    	< Io.[34;49mnewline[39;49m : 0x000055bd1e3e90e0[32;49m >[39;49m[39;49m
[34;49m ..  m @ fibPTC? p m ++ } while 1 time nl [39;49m[33;40mnl[39;49m[34;49m "locals fibPTC2? : " ps 1 ti m 1 = { m @ n @ <= } { m @ fibPTC2? p m ++ } while 1 time nl nl "Cfib .. [39;49m[32;49m
0x7fbdaabbef87    49b8e0903e1ebd550000    mov r8, 0x55bd1e3e90e0                                 [39;49m[32;49m
0x7fbdaabbef91    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaabbef9b    49ffd1                  call r9                    	< Io.[34;49mnewline[39;49m : 0x000055bd1e3e90e0[32;49m >[39;49m[39;49m
[34;49m .. @ fibPTC? p m ++ } while 1 time nl nl [39;49m[33;40m"[39;49m[34;49mlocals fibPTC2? : " ps 1 ti m 1 = { m @ n @ <= } { m @ fibPTC2? p m ++ } while 1 time nl nl "Cfib2_O .. [39;49m[32;49m
0x7fbdaabbef9e    48b8a4484aa9bd7f0000    mov rax, 0x7fbda94a48a4    	[32;49m< string : '[39;49m[39;49mlocals fibPTC2? : [39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fbdaabbefa8    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabbefac    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ile 1 time nl nl "locals fibPTC2? : " [39;49m[33;40mps[39;49m[34;49m 1 ti m 1 = { m @ n @ <= } { m @ fibPTC2? p m ++ } while 1 time nl nl "Cfib2_O3 : " ps 1 ti m 1 = { .. [39;49m[32;49m
0x7fbdaabbefaf    49b97d63d5aabd7f0000    mov r9, 0x7fbdaad5637d                                 [39;49m[32;49m
0x7fbdaabbefb9    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fbdaad5637d[32;49m >[39;49m[39;49m
[34;49m ..  1 time nl nl "locals fibPTC2? : " ps [39;49m[33;40m1[39;49m[34;49m ti m 1 = { m @ n @ <= } { m @ fibPTC2? p m ++ } while 1 time nl nl "Cfib2_O3 : " ps 1 ti m 1 = { m  .. [39;49m[32;49m
0x7fbdaabbefbc    48c7c001000000          mov rax, 0x1                                           [39;49m[32;49m
0x7fbdaabbefc3    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabbefc7    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  time nl nl "locals fibPTC2? : " ps 1 [39;49m[33;40mti[39;49m[34;49m m 1 = { m @ n @ <= } { m @ fibPTC2? p m ++ } while 1 time nl nl "Cfib2_O3 : " ps 1 ti m 1 = { m @  .. [39;49m[32;49m
0x7fbdaabbefca    49b94e76d5aabd7f0000    mov r9, 0x7fbdaad5764e                                 [39;49m[32;49m
0x7fbdaabbefd4    49ffd1                  call r9                    	< System.[34;49mti[39;49m : 0x00007fbdaad5764e[32;49m >[39;49m[39;49m
[34;49m .. me nl nl "locals fibPTC2? : " ps 1 ti [39;49m[33;40mm[39;49m[34;49m 1 = { m @ n @ <= } { m @ fibPTC2? p m ++ } while 1 time nl nl "Cfib2_O3 : " ps 1 ti m 1 = { m @ n @ .. [39;49m[32;49m
0x7fbdaabbefd7    498d4708                lea rax, [r15+0x8]                                     [39;49m
[34;49m ..  nl nl "locals fibPTC2? : " ps 1 ti m [39;49m[33;40m1[39;49m[34;49m = { m @ n @ <= } { m @ fibPTC2? p m ++ } while 1 time nl nl "Cfib2_O3 : " ps 1 ti m 1 = { m @ n @ < .. [39;49m[32;49m
0x7fbdaabbefdb    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m .. l nl "locals fibPTC2? : " ps 1 ti m 1 [39;49m[33;40m=[39;49m[34;49m { m @ n @ <= } { m @ fibPTC2? p m ++ } while 1 time nl nl "Cfib2_O3 : " ps 1 ti m 1 = { m @ n @ <=  .. [39;49m[32;49m
0x7fbdaabbefe2    488908                  mov [rax], rcx                                         [39;49m
[34;49m ..  "locals fibPTC2? : " ps 1 ti m 1 = { [39;49m[33;40mm[39;49m[34;49m @ n @ <= } { m @ fibPTC2? p m ++ } while 1 time nl nl "Cfib2_O3 : " ps 1 ti m 1 = { m @ n @ <= } {  .. [39;49m[32;49m
0x7fbdaabbefe5    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m .. cals fibPTC2? : " ps 1 ti m 1 = { m @ [39;49m[33;40mn[39;49m[34;49m @ <= } { m @ fibPTC2? p m ++ } while 1 time nl nl "Cfib2_O3 : " ps 1 ti m 1 = { m @ n @ <= } { m @  .. [39;49m[32;49m
0x7fbdaabbefe9    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m
[34;49m ..  fibPTC2? : " ps 1 ti m 1 = { m @ n @ [39;49m[33;40m<=[39;49m[34;49m } { m @ fibPTC2? p m ++ } while 1 time nl nl "Cfib2_O3 : " ps 1 ti m 1 = { m @ n @ <= } { m @ cfib .. [39;49m[32;49m
0x7fbdaabbefed    483bc1                  cmp rax, rcx                                           [39;49m[32;49m
0x7fbdaabbeff0    0f8f2b000000            jg 0x7fbdaabbf021          	< Interpreter.[34;49mtfib3[39;49m+584[32;49m >[39;49m[39;49m
[34;49m .. 2? : " ps 1 ti m 1 = { m @ n @ <= } { [39;49m[33;40mm[39;49m[34;49m @ fibPTC2? p m ++ } while 1 time nl nl "Cfib2_O3 : " ps 1 ti m 1 = { m @ n @ <= } { m @ cfib2_O3 p  .. [39;49m[32;49m
0x7fbdaabbeff6    498b4708                mov rax, [r15+0x8]                                     [39;49m[32;49m
0x7fbdaabbeffa    4983c608                add r14, 0x8                                           [39;49m
[34;49m .. bPTC2? : " ps 1 ti m 1 = { m @ n @ <= [39;49m[33;40m}[39;49m[34;49m { m @ fibPTC2? p m ++ } while 1 time nl nl "Cfib2_O3 : " ps 1 ti m 1 = { m @ n @ <= } { m @ cfib2_O .. [39;49m[32;49m
0x7fbdaabbeffe    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  " ps 1 ti m 1 = { m @ n @ <= } { m @ [39;49m[33;40mfibPTC2?[39;49m[34;49m p m ++ } while 1 time nl nl "Cfib2_O3 : " ps 1 ti m 1 = { m @ n @ <= } { m @ cfib2_O3 p m ++ .. [39;49m[32;49m
0x7fbdaabbf001    49b943d3bbaabd7f0000    mov r9, 0x7fbdaabbd343                                 [39;49m[32;49m
0x7fbdaabbf00b    49ffd1                  call r9                    	< C_Syntax.[34;49mfibPTC2?[39;49m : 0x00007fbdaabbd343[32;49m >[39;49m[39;49m
[34;49m .. i m 1 = { m @ n @ <= } { m @ fibPTC2? [39;49m[33;40mp[39;49m[34;49m m ++ } while 1 time nl nl "Cfib2_O3 : " ps 1 ti m 1 = { m @ n @ <= } { m @ cfib2_O3 p m ++ } while  .. [39;49m[32;49m
0x7fbdaabbf00e    49b9d965d5aabd7f0000    mov r9, 0x7fbdaad565d9                                 [39;49m[32;49m
0x7fbdaabbf018    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fbdaad565d9[32;49m >[39;49m[39;49m
[34;49m .. 1 = { m @ n @ <= } { m @ fibPTC2? p m [39;49m[33;40m++[39;49m[34;49m } while 1 time nl nl "Cfib2_O3 : " ps 1 ti m 1 = { m @ n @ <= } { m @ cfib2_O3 p m ++ } while 1 ti .. [39;49m[32;49m
0x7fbdaabbf01b    49ff4708                inc qword [r15+0x8]                                    [39;49m
[34;49m ..  { m @ n @ <= } { m @ fibPTC2? p m ++ [39;49m[33;40m}[39;49m[34;49m while 1 time nl nl "Cfib2_O3 : " ps 1 ti m 1 = { m @ n @ <= } { m @ cfib2_O3 p m ++ } while 1 time  .. [39;49m[32;49m
0x7fbdaabbf01f    ebc4                    jmp 0x7fbdaabbefe5         	< Interpreter.[34;49mtfib3[39;49m+524[32;49m >[39;49m[39;49m
[34;49m ..  @ <= } { m @ fibPTC2? p m ++ } while [39;49m[33;40m1[39;49m[34;49m time nl nl "Cfib2_O3 : " ps 1 ti m 1 = { m @ n @ <= } { m @ cfib2_O3 p m ++ } while 1 time nl nl ;  .. [39;49m[32;49m
0x7fbdaabbf021    48c7c001000000          mov rax, 0x1                                           [39;49m[32;49m
0x7fbdaabbf028    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabbf02c    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  <= } { m @ fibPTC2? p m ++ } while 1 [39;49m[33;40mtime[39;49m[34;49m nl nl "Cfib2_O3 : " ps 1 ti m 1 = { m @ n @ <= } { m @ cfib2_O3 p m ++ } while 1 time nl nl ;  .. [39;49m[32;49m
0x7fbdaabbf02f    49b820ad3e1ebd550000    mov r8, 0x55bd1e3ead20                                 [39;49m[32;49m
0x7fbdaabbf039    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaabbf043    49ffd1                  call r9                    	< System.[34;49mtime[39;49m : 0x000055bd1e3ead20[32;49m >[39;49m[39;49m
[34;49m ..  { m @ fibPTC2? p m ++ } while 1 time [39;49m[33;40mnl[39;49m[34;49m nl "Cfib2_O3 : " ps 1 ti m 1 = { m @ n @ <= } { m @ cfib2_O3 p m ++ } while 1 time nl nl ;  .. [39;49m[32;49m
0x7fbdaabbf046    49b8e0903e1ebd550000    mov r8, 0x55bd1e3e90e0                                 [39;49m[32;49m
0x7fbdaabbf050    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaabbf05a    49ffd1                  call r9                    	< Io.[34;49mnewline[39;49m : 0x000055bd1e3e90e0[32;49m >[39;49m[39;49m
[34;49m .. m @ fibPTC2? p m ++ } while 1 time nl [39;49m[33;40mnl[39;49m[34;49m "Cfib2_O3 : " ps 1 ti m 1 = { m @ n @ <= } { m @ cfib2_O3 p m ++ } while 1 time nl nl ;  .. [39;49m[32;49m
0x7fbdaabbf05d    49b8e0903e1ebd550000    mov r8, 0x55bd1e3e90e0                                 [39;49m[32;49m
0x7fbdaabbf067    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaabbf071    49ffd1                  call r9                    	< Io.[34;49mnewline[39;49m : 0x000055bd1e3e90e0[32;49m >[39;49m[39;49m
[34;49m ..  fibPTC2? p m ++ } while 1 time nl nl [39;49m[33;40m"[39;49m[34;49mCfib2_O3 : " ps 1 ti m 1 = { m @ n @ <= } { m @ cfib2_O3 p m ++ } while 1 time nl nl ;  .. [39;49m[32;49m
0x7fbdaabbf074    48b8e6484aa9bd7f0000    mov rax, 0x7fbda94a48e6    	[32;49m< string : '[39;49m[39;49mCfib2_O3       : [39;49m[32;49m' >[39;49m[39;49m[32;49m
0x7fbdaabbf07e    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabbf082    498906                  mov [r14], rax                                         [39;49m
[34;49m .. ++ } while 1 time nl nl "Cfib2_O3 : " [39;49m[33;40mps[39;49m[34;49m 1 ti m 1 = { m @ n @ <= } { m @ cfib2_O3 p m ++ } while 1 time nl nl ;  .. [39;49m[32;49m
0x7fbdaabbf085    49b97d63d5aabd7f0000    mov r9, 0x7fbdaad5637d                                 [39;49m[32;49m
0x7fbdaabbf08f    49ffd1                  call r9                    	< Int.[34;49mps[39;49m : 0x00007fbdaad5637d[32;49m >[39;49m[39;49m
[34;49m .. } while 1 time nl nl "Cfib2_O3 : " ps [39;49m[33;40m1[39;49m[34;49m ti m 1 = { m @ n @ <= } { m @ cfib2_O3 p m ++ } while 1 time nl nl ;  .. [39;49m[32;49m
0x7fbdaabbf092    48c7c001000000          mov rax, 0x1                                           [39;49m[32;49m
0x7fbdaabbf099    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabbf09d    498906                  mov [r14], rax                                         [39;49m
[34;49m .. while 1 time nl nl "Cfib2_O3 : " ps 1 [39;49m[33;40mti[39;49m[34;49m m 1 = { m @ n @ <= } { m @ cfib2_O3 p m ++ } while 1 time nl nl ;  .. [39;49m[32;49m
0x7fbdaabbf0a0    49b94e76d5aabd7f0000    mov r9, 0x7fbdaad5764e                                 [39;49m[32;49m
0x7fbdaabbf0aa    49ffd1                  call r9                    	< System.[34;49mti[39;49m : 0x00007fbdaad5764e[32;49m >[39;49m[39;49m
[34;49m .. le 1 time nl nl "Cfib2_O3 : " ps 1 ti [39;49m[33;40mm[39;49m[34;49m 1 = { m @ n @ <= } { m @ cfib2_O3 p m ++ } while 1 time nl nl ;  .. [39;49m[32;49m
0x7fbdaabbf0ad    498d4708                lea rax, [r15+0x8]                                     [39;49m
[34;49m ..  1 time nl nl "Cfib2_O3 : " ps 1 ti m [39;49m[33;40m1[39;49m[34;49m = { m @ n @ <= } { m @ cfib2_O3 p m ++ } while 1 time nl nl ;  .. [39;49m[32;49m
0x7fbdaabbf0b1    48c7c101000000          mov rcx, 0x1                                           [39;49m
[34;49m ..  time nl nl "Cfib2_O3 : " ps 1 ti m 1 [39;49m[33;40m=[39;49m[34;49m { m @ n @ <= } { m @ cfib2_O3 p m ++ } while 1 time nl nl ;  .. [39;49m[32;49m
0x7fbdaabbf0b8    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. e nl nl "Cfib2_O3 : " ps 1 ti m 1 = { [39;49m[33;40mm[39;49m[34;49m @ n @ <= } { m @ cfib2_O3 p m ++ } while 1 time nl nl ;  .. [39;49m[32;49m
0x7fbdaabbf0bb    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m ..  nl "Cfib2_O3 : " ps 1 ti m 1 = { m @ [39;49m[33;40mn[39;49m[34;49m @ <= } { m @ cfib2_O3 p m ++ } while 1 time nl nl ;  .. [39;49m[32;49m
0x7fbdaabbf0bf    498b4ff8                mov rcx, [r15-0x8]                                     [39;49m
[34;49m .. "Cfib2_O3 : " ps 1 ti m 1 = { m @ n @ [39;49m[33;40m<=[39;49m[34;49m } { m @ cfib2_O3 p m ++ } while 1 time nl nl ;  .. [39;49m[32;49m
0x7fbdaabbf0c3    483bc1                  cmp rax, rcx                                           [39;49m[32;49m
0x7fbdaabbf0c6    0f8f35000000            jg 0x7fbdaabbf101          	< Interpreter.[34;49mtfib3[39;49m+808[32;49m >[39;49m[39;49m
[34;49m .. O3 : " ps 1 ti m 1 = { m @ n @ <= } { [39;49m[33;40mm[39;49m[34;49m @ cfib2_O3 p m ++ } while 1 time nl nl ;  .. [39;49m[32;49m
0x7fbdaabbf0cc    498b4708                mov rax, [r15+0x8]                                     [39;49m[32;49m
0x7fbdaabbf0d0    4983c608                add r14, 0x8                                           [39;49m
[34;49m .. ib2_O3 : " ps 1 ti m 1 = { m @ n @ <= [39;49m[33;40m}[39;49m[34;49m { m @ cfib2_O3 p m ++ } while 1 time nl nl ;  .. [39;49m[32;49m
0x7fbdaabbf0d4    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  " ps 1 ti m 1 = { m @ n @ <= } { m @ [39;49m[33;40mcfib2_O3[39;49m[34;49m p m ++ } while 1 time nl nl ;  .. [39;49m[32;49m
0x7fbdaabbf0d7    49b8d0f63e1ebd550000    mov r8, 0x55bd1e3ef6d0                                 [39;49m[32;49m
0x7fbdaabbf0e1    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaabbf0eb    49ffd1                  call r9                    	< C.[34;49mcfib2_O3[39;49m : 0x000055bd1e3ef6d0[32;49m >[39;49m[39;49m
[34;49m .. i m 1 = { m @ n @ <= } { m @ cfib2_O3 [39;49m[33;40mp[39;49m[34;49m m ++ } while 1 time nl nl ;  .. [39;49m[32;49m
0x7fbdaabbf0ee    49b9d965d5aabd7f0000    mov r9, 0x7fbdaad565d9                                 [39;49m[32;49m
0x7fbdaabbf0f8    49ffd1                  call r9                    	< User.[34;49mp[39;49m : 0x00007fbdaad565d9[32;49m >[39;49m[39;49m
[34;49m .. 1 = { m @ n @ <= } { m @ cfib2_O3 p m [39;49m[33;40m++[39;49m[34;49m } while 1 time nl nl ;  .. [39;49m[32;49m
0x7fbdaabbf0fb    49ff4708                inc qword [r15+0x8]                                    [39;49m
[34;49m ..  { m @ n @ <= } { m @ cfib2_O3 p m ++ [39;49m[33;40m}[39;49m[34;49m while 1 time nl nl ;  .. [39;49m[32;49m
0x7fbdaabbf0ff    ebba                    jmp 0x7fbdaabbf0bb         	< Interpreter.[34;49mtfib3[39;49m+738[32;49m >[39;49m[39;49m
[34;49m ..  @ <= } { m @ cfib2_O3 p m ++ } while [39;49m[33;40m1[39;49m[34;49m time nl nl ;  .. [39;49m[32;49m
0x7fbdaabbf101    48c7c001000000          mov rax, 0x1                                           [39;49m[32;49m
0x7fbdaabbf108    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabbf10c    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  <= } { m @ cfib2_O3 p m ++ } while 1 [39;49m[33;40mtime[39;49m[34;49m nl nl ;  .. [39;49m[32;49m
0x7fbdaabbf10f    49b820ad3e1ebd550000    mov r8, 0x55bd1e3ead20                                 [39;49m[32;49m
0x7fbdaabbf119    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaabbf123    49ffd1                  call r9                    	< System.[34;49mtime[39;49m : 0x000055bd1e3ead20[32;49m >[39;49m[39;49m
[34;49m ..  { m @ cfib2_O3 p m ++ } while 1 time [39;49m[33;40mnl[39;49m[34;49m nl ;  .. [39;49m[32;49m
0x7fbdaabbf126    49b8e0903e1ebd550000    mov r8, 0x55bd1e3e90e0                                 [39;49m[32;49m
0x7fbdaabbf130    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaabbf13a    49ffd1                  call r9                    	< Io.[34;49mnewline[39;49m : 0x000055bd1e3e90e0[32;49m >[39;49m[39;49m
[34;49m .. m @ cfib2_O3 p m ++ } while 1 time nl [39;49m[33;40mnl[39;49m[34;49m ;  .. [39;49m[32;49m
0x7fbdaabbf13d    49b8e0903e1ebd550000    mov r8, 0x55bd1e3e90e0                                 [39;49m[32;49m
0x7fbdaabbf147    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbdaabbf151    49ffd1                  call r9                    	< Io.[34;49mnewline[39;49m : 0x000055bd1e3e90e0[32;49m >[39;49m[39;49m
[34;49m ..  cfib2_O3 p m ++ } while 1 time nl nl [39;49m[33;40m;[39;49m[34;49m  .. [39;49m[32;49m
0x7fbdaabbf154    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fbdaabbf158    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbdaabbf15c    4983ee08                sub r14, 0x8                                           [39;49m[32;49m
0x7fbdaabbf160    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'tfib3' :: codeSize = 903
Word : 0x00007fbda7c4c190 :: Compiled at : 0x00007fbdaabbedd9
 =============================
::> 'wdiss' was called at namespaces/test/dev.csl 431.19 <::

 The fibonacci sequence:: first : 30 ...
 Cfib_O3         :  1 1 2 3 5 8 13 21 34 55 89 144 233 377 610 987 1597 2584 4181 6765 10946 17711 28657 46368 75025 121393 196418 317811 514229
Timer [ 1 ] : elapsed time = 0.002803429 seconds

 Cfib            :  1 1 2 3 5 8 13 21 34 55 89 144 233 377 610 987 1597 2584 4181 6765 10946 17711 28657 46368 75025 121393 196418 317811 514229
Timer [ 1 ] : elapsed time = 0.002819188 seconds

 Cfib_O3         :  1 1 2 3 5 8 13 21 34 55 89 144 233 377 610 987 1597 2584 4181 6765 10946 17711 28657 46368 75025 121393 196418 317811 514229
Timer [ 1 ] : elapsed time = 0.002814049 seconds

 no locals _fib  :  1 1 2 3 5 8 13 21 34 55 89 144 233 377 610 987 1597 2584 4181 6765 10946 17711 28657 46368 75025 121393 196418 317811 514229
Timer [ 1 ] : elapsed time = 0.010459930 seconds

 locals   _fibn0 :  1 1 2 3 5 8 13 21 34 55 89 144 233 377 610 987 1597 2584 4181 6765 10946 17711 28657 46368 75025 121393 196418 317811 514229
Timer [ 1 ] : elapsed time = 0.011354428 seconds

 locals   _fibn1 :  1 1 2 3 5 8 13 21 34 55 89 144 233 377 610 987 1597 2584 4181 6765 10946 17711 28657 46368 75025 121393 196418 317811 514229
Timer [ 1 ] : elapsed time = 0.010279894 seconds

 locals   _fib1  :  1 1 2 3 5 8 13 21 34 55 89 144 233 377 610 987 1597 2584 4181 6765 10946 17711 28657 46368 75025 121393 196418 317811 514229
Timer [ 1 ] : elapsed time = 0.010194165 seconds

 no locals _fib2 :  1 1 2 3 5 8 13 21 34 55 89 144 233 377 610 987 1597 2584 4181 6765 10946 17711 28657 46368 75025 121393 196418 317811 514229
Timer [ 1 ] : elapsed time = 0.011821770 seconds

 no locals _fib3 :  1 1 2 3 5 8 13 21 34 55 89 144 233 377 610 987 1597 2584 4181 6765 10946 17711 28657 46368 75025 121393 196418 317811 514229
Timer [ 1 ] : elapsed time = 0.010468517 seconds

 no locals _fib4 :  1 1 2 3 5 8 13 21 34 55 89 144 233 377 610 987 1597 2584 4181 6765 10946 17711 28657 46368 75025 121393 196418 317811 514229
Timer [ 1 ] : elapsed time = 0.009589647 seconds

 fibPTC?  :  1 1 2 3 5 8 13 21 34 55 89 144 233 377 610 987 1597 2584 4181 6765 10946 17711 28657 46368 75025 121393 196418 317811 514229
Timer [ 1 ] : elapsed time = 0.000187319 seconds

 fibPTC2?  :  1 1 2 3 5 8 13 21 34 55 89 144 233 377 610 987 1597 2584 4181 6765 10946 17711 28657 46368 75025 121393 196418 317811 514229
Timer [ 1 ] : elapsed time = 0.000175888 seconds

 Cfib_O3        :  1 1 2 3 5 8 13 21 34 55 89 144 233 377 610 987 1597 2584 4181 6765 10946 17711 28657 46368 75025 121393 196418 317811 514229
Timer [ 1 ] : elapsed time = 0.002809190 seconds

 no locals _fib4 :  1 1 2 3 5 8 13 21 34 55 89 144 233 377 610 987 1597 2584 4181 6765 10946 17711 28657 46368 75025 121393 196418 317811 514229
Timer [ 1 ] : elapsed time = 0.009596841 seconds

 locals _fibn1   :  1 1 2 3 5 8 13 21 34 55 89 144 233 377 610 987 1597 2584 4181 6765 10946 17711 28657 46368 75025 121393 196418 317811 514229
Timer [ 1 ] : elapsed time = 0.010273554 seconds

 no locals _fib3 :  1 1 2 3 5 8 13 21 34 55 89 144 233 377 610 987 1597 2584 4181 6765 10946 17711 28657 46368 75025 121393 196418 317811 514229
Timer [ 1 ] : elapsed time = 0.010467956 seconds

 Cfib2_O3       :  1 1 2 3 5 8 13 21 34 55 89 144 233 377 610 987 1597 2584 4181 6765 10946 17711 28657 46368 75025 121393 196418 317811 514229 832040 1346269 2178309 3524578 5702887 9227465 14930352 24157817 39088169 63245986 102334155 165580141 267914296 433494437 701408733 1134903170 1836311903 2971215073 4807526976 7778742049 12586269025 20365011074 32951280099 53316291173 86267571272 139583862445 225851433717 365435296162 591286729879 956722026041 1548008755920 2504730781961 4052739537881 6557470319842 10610209857723 17167680177565 27777890035288 44945570212853 72723460248141 117669030460994 190392490709135 308061521170129 498454011879264 806515533049393 1304969544928657 2111485077978050 3416454622906707 5527939700884757 8944394323791464 14472334024676221 23416728348467685 37889062373143906 61305790721611591 99194853094755497 160500643816367088 259695496911122585 420196140727489673 679891637638612258 1100087778366101931 1779979416004714189 2880067194370816120 4660046610375530309 7540113804746346429
Timer [ 1 ] : elapsed time = 0.000569553 seconds

 locals fibPTC? :  1 1 2 3 5 8 13 21 34 55 89 144 233 377 610 987 1597 2584 4181 6765 10946 17711 28657 46368 75025 121393 196418 317811 514229 832040 1346269 2178309 3524578 5702887 9227465 14930352 24157817 39088169 63245986 102334155 165580141 267914296 433494437 701408733 1134903170 1836311903 2971215073 4807526976 7778742049 12586269025 20365011074 32951280099 53316291173 86267571272 139583862445 225851433717 365435296162 591286729879 956722026041 1548008755920 2504730781961 4052739537881 6557470319842 10610209857723 17167680177565 27777890035288 44945570212853 72723460248141 117669030460994 190392490709135 308061521170129 498454011879264 806515533049393 1304969544928657 2111485077978050 3416454622906707 5527939700884757 8944394323791464 14472334024676221 23416728348467685 37889062373143906 61305790721611591 99194853094755497 160500643816367088 259695496911122585 420196140727489673 679891637638612258 1100087778366101931 1779979416004714189 2880067194370816120 4660046610375530309 7540113804746346429
Timer [ 1 ] : elapsed time = 0.000583719 seconds

 locals fibPTC2? :  1 1 2 3 5 8 13 21 34 55 89 144 233 377 610 987 1597 2584 4181 6765 10946 17711 28657 46368 75025 121393 196418 317811 514229 832040 1346269 2178309 3524578 5702887 9227465 14930352 24157817 39088169 63245986 102334155 165580141 267914296 433494437 701408733 1134903170 1836311903 2971215073 4807526976 7778742049 12586269025 20365011074 32951280099 53316291173 86267571272 139583862445 225851433717 365435296162 591286729879 956722026041 1548008755920 2504730781961 4052739537881 6557470319842 10610209857723 17167680177565 27777890035288 44945570212853 72723460248141 117669030460994 190392490709135 308061521170129 498454011879264 806515533049393 1304969544928657 2111485077978050 3416454622906707 5527939700884757 8944394323791464 14472334024676221 23416728348467685 37889062373143906 61305790721611591 99194853094755497 160500643816367088 259695496911122585 420196140727489673 679891637638612258 1100087778366101931 1779979416004714189 2880067194370816120 4660046610375530309 7540113804746346429
Timer [ 1 ] : elapsed time = 0.000566276 seconds

 Cfib2_O3       :  1 1 2 3 5 8 13 21 34 55 89 144 233 377 610 987 1597 2584 4181 6765 10946 17711 28657 46368 75025 121393 196418 317811 514229 832040 1346269 2178309 3524578 5702887 9227465 14930352 24157817 39088169 63245986 102334155 165580141 267914296 433494437 701408733 1134903170 1836311903 2971215073 4807526976 7778742049 12586269025 20365011074 32951280099 53316291173 86267571272 139583862445 225851433717 365435296162 591286729879 956722026041 1548008755920 2504730781961 4052739537881 6557470319842 10610209857723 17167680177565 27777890035288 44945570212853 72723460248141 117669030460994 190392490709135 308061521170129 498454011879264 806515533049393 1304969544928657 2111485077978050 3416454622906707 5527939700884757 8944394323791464 14472334024676221 23416728348467685 37889062373143906 61305790721611591 99194853094755497 160500643816367088 259695496911122585 420196140727489673 679891637638612258 1100087778366101931 1779979416004714189 2880067194370816120 4660046610375530309 7540113804746346429
Timer [ 1 ] : elapsed time = 0.000567419 seconds


 =============================
C.[34;49m_fib2[39;49m <:> csl compiled word
SourceCode for C.[34;49m_fib2[39;49m :> 
[34;49m: _fib2 dup 2 < ? : dup -- _fib2 swap 2 - _fib2 + ; [39;49m
Source code file location of [34;49m_fib2[39;49m : "namespaces/test/dev0.csl" : 142.2 :: we are now at : namespaces/test/dev.csl : 441.19
Compiled with : optimizeOn, inlineOn, Jcc8 off
Debug Source Code on : BigNum off : Lisp off : Word Source Code on
starting at address : 0xaabb7e1b -- code size = 151 bytes
TypeSignature : 
 -----------------------------
Word :: C.[34;49m_fib2[39;49m : definition = 0x00007fbdaabb7e1b : disassembly at namespaces/test/dev.csl : 441.19 :
[34;49m ..                               : _fib2 [39;49m[33;40mdup[39;49m[34;49m 2 < ? : dup -- _fib2 swap 2 - _fib2 + ;  .. [39;49m[32;49m
0x7fbdaabb7e1b    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fbdaabb7e1e    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb7e22    498906                  mov [r14], rax                                         [39;49m
[34;49m ..                           : _fib2 dup [39;49m[33;40m2[39;49m[34;49m < ? : dup -- _fib2 swap 2 - _fib2 + ;  .. [39;49m[32;49m
0x7fbdaabb7e25    48c7c002000000          mov rax, 0x2                                           [39;49m[32;49m
0x7fbdaabb7e2c    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fbdaabb7e2f    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fbdaabb7e32    4983ee08                sub r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb7e36    483bc1                  cmp rax, rcx                                           [39;49m[32;49m
0x7fbdaabb7e39    0f9cc0                  setl al                                                [39;49m[32;49m
0x7fbdaabb7e3c    480fb6c0                movzx rax, al                                          [39;49m[32;49m
0x7fbdaabb7e40    4885c0                  test rax, rax                                          [39;49m[32;49m
0x7fbdaabb7e43    0f8405000000            jz 0x7fbdaabb7e4e          	< C.[34;49m_fib2[39;49m+51[32;49m >[39;49m[39;49m[32;49m
0x7fbdaabb7e49    e963000000              jmp 0x7fbdaabb7eb1         	< C.[34;49m_fib2[39;49m+150[32;49m >[39;49m[39;49m
[34;49m ..                   : _fib2 dup 2 < ? : [39;49m[33;40mdup[39;49m[34;49m -- _fib2 swap 2 - _fib2 + ;  .. [39;49m[32;49m
0x7fbdaabb7e4e    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fbdaabb7e51    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb7e55    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbdaabb7e58    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fbdaabb7e5b    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m ..               : _fib2 dup 2 < ? : dup [39;49m[33;40m--[39;49m[34;49m _fib2 swap 2 - _fib2 + ;  .. [39;49m[32;49m
0x7fbdaabb7e5f    48ffc8                  dec rax                                                [39;49m[32;49m
0x7fbdaabb7e62    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb7e66    498906                  mov [r14], rax                                         [39;49m
[34;49m ..            : _fib2 dup 2 < ? : dup -- [39;49m[33;40m_fib2[39;49m[34;49m swap 2 - _fib2 + ;  .. [39;49m[32;49m
0x7fbdaabb7e69    e8adffffff              call 0x7fbdaabb7e1b        	< C.[34;49m_fib2[39;49m : 0x00007fbdaabb7e1b[32;49m >[39;49m[39;49m[32;49m
0x7fbdaabb7e6e    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fbdaabb7e71    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fbdaabb7e75    49894ef8                mov [r14-0x8], rcx                                     [39;49m[32;49m
0x7fbdaabb7e79    498906                  mov [r14], rax                                         [39;49m
[34;49m .. : _fib2 dup 2 < ? : dup -- _fib2 swap [39;49m[33;40m2[39;49m[34;49m - _fib2 + ;  .. [39;49m[32;49m
0x7fbdaabb7e7c    48c7c002000000          mov rax, 0x2                                           [39;49m[32;49m
0x7fbdaabb7e83    488bc8                  mov rcx, rax                                           [39;49m[32;49m
0x7fbdaabb7e86    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fbdaabb7e89    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m  : _fib2 dup 2 < ? : dup -- _fib2 swap 2 [39;49m[33;40m-[39;49m[34;49m _fib2 + ;  .. [39;49m[32;49m
0x7fbdaabb7e8d    482bc1                  sub rax, rcx                                           [39;49m[32;49m
0x7fbdaabb7e90    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb7e94    498906                  mov [r14], rax                                         [39;49m
[34;49m: _fib2 dup 2 < ? : dup -- _fib2 swap 2 - [39;49m[33;40m_fib2[39;49m[34;49m + ;  .. [39;49m[32;49m
0x7fbdaabb7e97    e87fffffff              call 0x7fbdaabb7e1b        	< C.[34;49m_fib2[39;49m : 0x00007fbdaabb7e1b[32;49m >[39;49m[39;49m[32;49m
0x7fbdaabb7e9c    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fbdaabb7e9f    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fbdaabb7ea3    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m .. p 2 < ? : dup -- _fib2 swap 2 - _fib2 [39;49m[33;40m+[39;49m[34;49m ; [39;49m[32;49m
0x7fbdaabb7ea7    4803c1                  add rax, rcx                                           [39;49m[32;49m
0x7fbdaabb7eaa    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbdaabb7eae    498906                  mov [r14], rax                                         [39;49m
[34;49m .. 2 < ? : dup -- _fib2 swap 2 - _fib2 + [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fbdaabb7eb1    c3                      ret                                                    [39;49m
Word_Disassemble : word - '_fib2' :: codeSize = 150
Word : 0x00007fbda807e868 :: Compiled at : 0x00007fbdaabb7e1b
 =============================
::> 'wdiss' was called at namespaces/test/dev.csl 441.19 <::
 9.0000000000000000
 should be 9
 =============================
BigNum.[34;49mfibBN[39;49m <:> csl compiled word
SourceCode for BigNum.[34;49mfibBN[39;49m :> 
[34;49m: fibBN ( n | fn fn1 fn2 ) { fn 0 = fn1 0 = fn2 1 = } { n @ 0 > } { n 1 -= } { fn1 fn2 @ = fn2 fn @ = fn fn1 @ fn2 @ + = } for return fn @ ; [39;49m
Source code file location of [34;49mfibBN[39;49m : "namespaces/test/dev.csl" : 448.2 :: we are now at : namespaces/test/dev.csl : 459.19
Compiled with : optimizeOn, inlineOn, Jcc8 off
Debug Source Code on : BigNum on : Lisp off : Word Source Code on
starting at address : 0xa7ee52f0 -- code size = 297 bytes
TypeSignature : 
 -----------------------------
Word :: BigNum.[34;49mfibBN[39;49m : definition = 0x00007fbda7ee52f0 : disassembly at namespaces/test/dev.csl : 459.19 :
[34;49m ..                                     : [39;49m[33;40mfibBN[39;49m[34;49m ( n | fn fn1 fn2 )  { fn 0 = fn1 0 = fn2 1 = } { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ .. [39;49m[32;49m
0x7fbda7ee52f0    4d897e08                mov [r14+0x8], r15                                     [39;49m[32;49m
0x7fbda7ee52f4    4d8d7e08                lea r15, [r14+0x8]                                     [39;49m[32;49m
0x7fbda7ee52f8    4981c620000000          add r14, 0x20                                          [39;49m
[34;49m ..         : fibBN ( n | fn fn1 fn2 )  { [39;49m[33;40mfn[39;49m[34;49m 0 = fn1 0 = fn2 1 = } { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } fo .. [39;49m[32;49m
0x7fbda7ee52ff    498d4708                lea rax, [r15+0x8]                                     [39;49m
[34;49m ..      : fibBN ( n | fn fn1 fn2 )  { fn [39;49m[33;40m0[39;49m[34;49m = fn1 0 = fn2 1 = } { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for r .. [39;49m[32;49m
0x7fbda7ee5303    48b90e7a24a9bd7f0000    mov rcx, 0x7fbda9247a0e                                [39;49m
[34;49m ..    : fibBN ( n | fn fn1 fn2 )  { fn 0 [39;49m[33;40m=[39;49m[34;49m fn1 0 = fn2 1 = } { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for ret .. [39;49m[32;49m
0x7fbda7ee530d    488908                  mov [rax], rcx                                         [39;49m
[34;49m ..  : fibBN ( n | fn fn1 fn2 )  { fn 0 = [39;49m[33;40mfn1[39;49m[34;49m 0 = fn2 1 = } { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for retur .. [39;49m[32;49m
0x7fbda7ee5310    498d4710                lea rax, [r15+0x10]                                    [39;49m
[34;49m : fibBN ( n | fn fn1 fn2 )  { fn 0 = fn1 [39;49m[33;40m0[39;49m[34;49m = fn2 1 = } { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn .. [39;49m[32;49m
0x7fbda7ee5314    48b9087c24a9bd7f0000    mov rcx, 0x7fbda9247c08                                [39;49m
[34;49m .. BN ( n | fn fn1 fn2 )  { fn 0 = fn1 0 [39;49m[33;40m=[39;49m[34;49m fn2 1 = } { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fbda7ee531e    488908                  mov [rax], rcx                                         [39;49m
[34;49m ..  ( n | fn fn1 fn2 )  { fn 0 = fn1 0 = [39;49m[33;40mfn2[39;49m[34;49m 1 = } { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fbda7ee5321    498d4718                lea rax, [r15+0x18]                                    [39;49m
[34;49m ..  | fn fn1 fn2 )  { fn 0 = fn1 0 = fn2 [39;49m[33;40m1[39;49m[34;49m = } { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fbda7ee5325    48b9027e24a9bd7f0000    mov rcx, 0x7fbda9247e02                                [39;49m
[34;49m ..  fn fn1 fn2 )  { fn 0 = fn1 0 = fn2 1 [39;49m[33;40m=[39;49m[34;49m } { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fbda7ee532f    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. 1 fn2 )  { fn 0 = fn1 0 = fn2 1 = } { [39;49m[33;40mn[39;49m[34;49m @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fbda7ee5332    498b47f8                mov rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbda7ee5336    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbda7ee533a    498906                  mov [r14], rax                                         [39;49m
[34;49m .. 2 )  { fn 0 = fn1 0 = fn2 1 = } { n @ [39;49m[33;40m0[39;49m[34;49m > } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fbda7ee533d    48b8fc7f24a9bd7f0000    mov rax, 0x7fbda9247ffc                                [39;49m[32;49m
0x7fbda7ee5347    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbda7ee534b    498906                  mov [r14], rax                                         [39;49m
[34;49m .. )  { fn 0 = fn1 0 = fn2 1 = } { n @ 0 [39;49m[33;40m>[39;49m[34;49m } { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fbda7ee534e    49b8d0793c1ebd550000    mov r8, 0x55bd1e3c79d0                                 [39;49m[32;49m
0x7fbda7ee5358    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbda7ee5362    49ffd1                  call r9                    	< BigNum.[34;49m>[39;49m : 0x000055bd1e3c79d0[32;49m >[39;49m[39;49m
[34;49m ..  { fn 0 = fn1 0 = fn2 1 = } { n @ 0 > [39;49m[33;40m}[39;49m[34;49m { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fbda7ee5365    498b06                  mov rax, [r14]                                         [39;49m[32;49m
0x7fbda7ee5368    4983ee08                sub r14, 0x8                                           [39;49m
[34;49m ..  =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } [39;49m[33;40mfor[39;49m[34;49m return fn @ ; [39;49m[32;49m
0x7fbda7ee536c    4885c0                  test rax, rax                                          [39;49m[32;49m
0x7fbda7ee536f    0f8494000000            jz 0x7fbda7ee5409          	< BigNum.[34;49mfibBN[39;49m+281[32;49m >[39;49m[39;49m
[34;49m ..  fn2 1 = } { n @ 0 > } { n 1 -= }  {  [39;49m[33;40mfn1[39;49m[34;49m fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fbda7ee5375    498d4710                lea rax, [r15+0x10]                                    [39;49m
[34;49m ..  1 = } { n @ 0 > } { n 1 -= }  {  fn1 [39;49m[33;40mfn2[39;49m[34;49m @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fbda7ee5379    498b4f18                mov rcx, [r15+0x18]                                    [39;49m
[34;49m ..  { n @ 0 > } { n 1 -= }  {  fn1 fn2 @ [39;49m[33;40m=[39;49m[34;49m  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fbda7ee537d    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. n @ 0 > } { n 1 -= }  {  fn1 fn2 @ =  [39;49m[33;40mfn2[39;49m[34;49m fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fbda7ee5380    498d4718                lea rax, [r15+0x18]                                    [39;49m
[34;49m .. 0 > } { n 1 -= }  {  fn1 fn2 @ =  fn2 [39;49m[33;40mfn[39;49m[34;49m @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fbda7ee5384    498b4f08                mov rcx, [r15+0x8]                                     [39;49m
[34;49m ..  { n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ [39;49m[33;40m=[39;49m[34;49m  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fbda7ee5388    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. n 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  [39;49m[33;40mfn[39;49m[34;49m fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fbda7ee538b    498d4708                lea rax, [r15+0x8]                                     [39;49m[32;49m
0x7fbda7ee538f    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbda7ee5393    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn [39;49m[33;40mfn1[39;49m[34;49m @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fbda7ee5396    498b4710                mov rax, [r15+0x10]                                    [39;49m[32;49m
0x7fbda7ee539a    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbda7ee539e    498906                  mov [r14], rax                                         [39;49m
[34;49m ..  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ [39;49m[33;40mfn2[39;49m[34;49m @ + =  } for return fn @ ; [39;49m[32;49m
0x7fbda7ee53a1    498b4718                mov rax, [r15+0x18]                                    [39;49m[32;49m
0x7fbda7ee53a5    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbda7ee53a9    498906                  mov [r14], rax                                         [39;49m
[34;49m .. 1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ [39;49m[33;40m+[39;49m[34;49m =  } for return fn @ ; [39;49m[32;49m
0x7fbda7ee53ac    49b800713c1ebd550000    mov r8, 0x55bd1e3c7100                                 [39;49m[32;49m
0x7fbda7ee53b6    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbda7ee53c0    49ffd1                  call r9                    	< BigNum.[34;49m+[39;49m : 0x000055bd1e3c7100[32;49m >[39;49m[39;49m[32;49m
0x7fbda7ee53c3    498b0e                  mov rcx, [r14]                                         [39;49m[32;49m
0x7fbda7ee53c6    498b46f8                mov rax, [r14-0x8]                                     [39;49m[32;49m
0x7fbda7ee53ca    4983ee10                sub r14, 0x10                                          [39;49m
[34;49m .. fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + [39;49m[33;40m=[39;49m[34;49m  } for return fn @ ; [39;49m[32;49m
0x7fbda7ee53ce    488908                  mov [rax], rcx                                         [39;49m
[34;49m .. n 0 = fn1 0 = fn2 1 = } { n @ 0 > } { [39;49m[33;40mn[39;49m[34;49m 1 -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fbda7ee53d1    498d47f8                lea rax, [r15-0x8]                                     [39;49m[32;49m
0x7fbda7ee53d5    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbda7ee53d9    498906                  mov [r14], rax                                         [39;49m
[34;49m .. 0 = fn1 0 = fn2 1 = } { n @ 0 > } { n [39;49m[33;40m1[39;49m[34;49m -= }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fbda7ee53dc    48b8f68124a9bd7f0000    mov rax, 0x7fbda92481f6                                [39;49m[32;49m
0x7fbda7ee53e6    4983c608                add r14, 0x8                                           [39;49m[32;49m
0x7fbda7ee53ea    498906                  mov [r14], rax                                         [39;49m
[34;49m .. = fn1 0 = fn2 1 = } { n @ 0 > } { n 1 [39;49m[33;40m-=[39;49m[34;49m }  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fbda7ee53ed    49b8c0743c1ebd550000    mov r8, 0x55bd1e3c74c0                                 [39;49m[32;49m
0x7fbda7ee53f7    49b93ee7d9aabd7f0000    mov r9, 0x7fbdaad9e73e                                 [39;49m[32;49m
0x7fbda7ee5401    49ffd1                  call r9                    	< BigNum.[34;49m-=[39;49m : 0x000055bd1e3c74c0[32;49m >[39;49m[39;49m
[34;49m .. n1 0 = fn2 1 = } { n @ 0 > } { n 1 -= [39;49m[33;40m}[39;49m[34;49m  {  fn1 fn2 @ =  fn2 fn @ =  fn fn1 @ fn2 @ + =  } for return fn @ ; [39;49m[32;49m
0x7fbda7ee5404    e929ffffff              jmp 0x7fbda7ee5332         	< BigNum.[34;49mfibBN[39;49m+66[32;49m >[39;49m[39;49m[32;49m
0x7fbda7ee5409    498b4708                mov rax, [r15+0x8]                                     [39;49m
[34;49m .. fn fn1 @ fn2 @ + =  } for return fn @ [39;49m[33;40m;[39;49m[34;49m [39;49m[32;49m
0x7fbda7ee540d    4d8d77f8                lea r14, [r15-0x8]                                     [39;49m[32;49m
0x7fbda7ee5411    4d8b7e08                mov r15, [r14+0x8]                                     [39;49m
[34;49m .. @ =  fn fn1 @ fn2 @ + =  } for return [39;49m[33;40mfn[39;49m[34;49m @ ; [39;49m[32;49m
0x7fbda7ee5415    498906                  mov [r14], rax                                         [39;49m[32;49m
0x7fbda7ee5418    c3                      ret                                                    [39;49m
Word_Disassemble : word - 'fibBN' :: codeSize = 296
Word : 0x00007fbda77849a8 :: Compiled at : 0x00007fbda7ee52f0
 =============================
::> 'wdiss' was called at namespaces/test/dev.csl 459.19 <::
 6765.0000000000000000

 locals fibBN :  1.0000000000000000 :  1.0000000000000000, 2.0000000000000000 :  1.0000000000000000, 3.0000000000000000 :  2.0000000000000000, 4.0000000000000000 :  3.0000000000000000, 5.0000000000000000 :  5.0000000000000000, 6.0000000000000000 :  8.0000000000000000, 7.0000000000000000 :  13.0000000000000000, 8.0000000000000000 :  21.0000000000000000, 9.0000000000000000 :  34.0000000000000000, 10.0000000000000000 :  55.0000000000000000, 11.0000000000000000 :  89.0000000000000000, 12.0000000000000000 :  144.0000000000000000, 13.0000000000000000 :  233.0000000000000000, 14.0000000000000000 :  377.0000000000000000, 15.0000000000000000 :  610.0000000000000000, 16.0000000000000000 :  987.0000000000000000, 17.0000000000000000 :  1597.0000000000000000, 18.0000000000000000 :  2584.0000000000000000, 19.0000000000000000 :  4181.0000000000000000, 20.0000000000000000 :  6765.0000000000000000, 21.0000000000000000 :  10946.0000000000000000, 22.0000000000000000 :  17711.0000000000000000, 23.0000000000000000 :  28657.0000000000000000, 24.0000000000000000 :  46368.0000000000000000, 25.0000000000000000 :  75024.0000000000000000, 26.0000000000000000 :  121392.0000000000000000, 27.0000000000000000 :  196416.0000000000000000, 28.0000000000000000 :  317808.0000000000000000, 29.0000000000000000 :  514224.0000000000000000, 30.0000000000000000 :  832032.0000000000000000, 31.0000000000000000 :  1346240.0000000000000000, 32.0000000000000000 :  2178304.0000000000000000, 33.0000000000000000 :  3524544.0000000000000000, 34.0000000000000000 :  5702912.0000000000000000, 35.0000000000000000 :  9227520.0000000000000000, 36.0000000000000000 :  14930432.0000000000000000, 37.0000000000000000 :  24158208.0000000000000000, 38.0000000000000000 :  39088128.0000000000000000, 39.0000000000000000 :  63246336.0000000000000000, 40.0000000000000000 :  102334464.0000000000000000, 41.0000000000000000 :  165580800.0000000000000000, 42.0000000000000000 :  267915264.0000000000000000, 43.0000000000000000 :  433496064.0000000000000000, 44.0000000000000000 :  701415424.0000000000000000, 45.0000000000000000 :  1134919680.0000000000000000, 46.0000000000000000 :  1836318720.0000000000000000, 47.0000000000000000 :  2971271168.0000000000000000, 48.0000000000000000 :  4807589888.0000000000000000, 49.0000000000000000 :  7778861056.0000000000000000, 50.0000000000000000 :  12586582016.0000000000000000, 51.0000000000000000 :  20365443072.0000000000000000, 52.0000000000000000 :  32952025088.0000000000000000, 53.0000000000000000 :  53317992448.0000000000000000, 54.0000000000000000 :  86270541824.0000000000000000, 55.0000000000000000 :  139586437120.0000000000000000, 56.0000000000000000 :  225854881792.0000000000000000, 57.0000000000000000 :  365441318912.0000000000000000, 58.0000000000000000 :  591296200704.0000000000000000, 59.0000000000000000 :  956737519616.0000000000000000, 60.0000000000000000 :  1548033720320.0000000000000000, 61.0000000000000000 :  2504771239936.0000000000000000, 62.0000000000000000 :  4052838514688.0000000000000000, 63.0000000000000000 :  6557609754624.0000000000000000, 64.0000000000000000 :  10610448269312.0000000000000000, 65.0000000000000000 :  17168058023936.0000000000000000, 66.0000000000000000 :  27778774728704.0000000000000000, 67.0000000000000000 :  44946832752640.0000000000000000, 68.0000000000000000 :  72726681223168.0000000000000000, 69.0000000000000000 :  117673513975808.0000000000000000, 70.0000000000000000 :  190400195198976.0000000000000000, 71.0000000000000000 :  308069414207488.0000000000000000, 72.0000000000000000 :  498473904373760.0000000000000000, 73.0000000000000000 :  806543318581248.0000000000000000, 74.0000000000000000 :  1305017222955008.0000000000000000, 75.0000000000000000 :  2111543361667072.0000000000000000, 76.0000000000000000 :  3416594944360448.0000000000000000, 77.0000000000000000 :  5528069586550784.0000000000000000, 78.0000000000000000 :  8944664530911232.0000000000000000, 79.0000000000000000 :  14472871556415488.0000000000000000, 80.0000000000000000 :  23417398648373248.0000000000000000, 81.0000000000000000 :  37890270204788736.0000000000000000, 82.0000000000000000 :  61307668853161984.0000000000000000, 83.0000000000000000 :  99197939057950720.0000000000000000, 84.0000000000000000 :  160506707422740480.0000000000000000, 85.0000000000000000 :  259704646480691200.0000000000000000, 86.0000000000000000 :  420206955856920576.0000000000000000, 87.0000000000000000 :  679902806244589568.0000000000000000, 88.0000000000000000 :  1100109762101510144.0000000000000000, 89.0000000000000000 :  1780012568346099712.0000000000000000, 90.0000000000000000 :  2880122330447609856.0000000000000000, 91.0000000000000000 :  4660099714421620736.0000000000000000, 92.0000000000000000 :  7540151676125052928.0000000000000000
 92.0000000000000000 7540151676125052928.0000000000000000 6765.0000000000000000 ok

NamespaceTree - All Namespaces : using : [34;49mnot using[39;49m :: with[32;49m : words[39;49m
	 - Root[32;49m powReg7[39;49m[32;49m powReg6[39;49m[32;49m powReg5[39;49m[32;49m powReg4[39;49m[32;49m powReg3[39;49m[32;49m powReg2[39;49m[32;49m powReg[39;49m[32;49m pow[39;49m[32;49m sp[39;49m[32;49m fib01[39;49m[32;49m fib01[39;49m[32;49m fib01[39;49m[32;49m fib01[39;49m[32;49m fib01[39;49m[32;49m fib01[39;49m[32;49m fib01[39;49m[32;49m pow[39;49m[32;49m pow0[39;49m[32;49m bexp3[39;49m[32;49m x1[39;49m[32;49m get[39;49m[32;49m set[39;49m[32;49m goedel8[39;49m[32;49m goedel6[39;49m[32;49m hio[39;49m[32;49m hioo[39;49m[32;49m mct[39;49m[32;49m _doDemo[39;49m[32;49m forStarters[39;49m[32;49m doScript2[39;49m[32;49m doScript[39;49m[32;49m doTX64[39;49m[32;49m doX64[39;49m[32;49m todo[39;49m[32;49m typesInclude[39;49m[32;49m mem2[39;49m[32;49m mrm[39;49m[32;49m TODO[39;49m[32;49m bx[39;49m[32;49m x64[39;49m[32;49m tc[39;49m[32;49m tCSL[39;49m[32;49m rtw[39;49m[32;49m ash[39;49m[32;49m license[39;49m[32;49m purgeAll[39;49m[32;49m purge[39;49m[32;49m ri[39;49m[32;49m fr[39;49m[32;49m _bassert[39;49m[32;49m bnOn[39;49m[32;49m bnOff[39;49m[32;49m bigNumOff[39;49m[32;49m Is_DebugOn[39;49m[32;49m dbgOff[39;49m[32;49m dbgOn[39;49m[32;49m dbOn[39;49m[32;49m dbgOnVar[39;49m[32;49m log[39;49m[32;49m cOff[39;49m[32;49m cOn[39;49m[32;49m C_Off[39;49m[32;49m C_On[39;49m[32;49m forth[39;49m[32;49m ndrop[39;49m[32;49m '[39;49m[32;49m tick[39;49m[32;49m findAny[39;49m[32;49m find[39;49m[32;49m include[39;49m
		 - Class[32;49m sp[39;49m[32;49m tbb[39;49m[32;49m .[39;49m[32;49m [[39;49m[32;49m ][39;49m[32;49m clone[39;49m[32;49m new[39;49m[32;49m struct[39;49m[32;49m class[39;49m[32;49m :{[39;49m[32;49m +:{[39;49m[32;49m };[39;49m
			 - Pointer[32;49m this[39;49m[32;49m size[39;49m
				 - Integer
					 - byte[32;49m this[39;49m[32;49m size[39;49m
			 - Buffer[32;49m buf[39;49m[32;49m this[39;49m[32;49m size[39;49m
				 - DLLNode[32;49m BeforeReference[39;49m[32;49m AfterReference[39;49m[32;49m BeforeReference[39;49m[32;49m someJunkForTesting[39;49m[32;49m AfterReference[39;49m[32;49m BeforeReference[39;49m[32;49m AfterReference[39;49m[32;49m this[39;49m[32;49m size[39;49m
					 - DLLNodeAlloc[32;49m tna2x[39;49m[32;49m tnax1[39;49m[32;49m tna3[39;49m[32;49m tnarr2a[39;49m[32;49m tnarr2[39;49m[32;49m tna[39;49m[32;49m nodes[39;49m[32;49m this[39;49m[32;49m size[39;49m
						 - Ar1[32;49m a3[39;49m[32;49m arr2[39;49m[32;49m arr1[39;49m[32;49m ar[39;49m[32;49m this[39;49m[32;49m size[39;49m
							 - Ar2[32;49m a5[39;49m[32;49m a4[39;49m[32;49m ar[39;49m[32;49m this[39;49m[32;49m size[39;49m
								 - Ar3[32;49m a7[39;49m[32;49m a8[39;49m[32;49m a6x[39;49m[32;49m a6[39;49m[32;49m ar[39;49m[32;49m this[39;49m[32;49m size[39;49m
									 - Ar9[32;49m arr9[39;49m[32;49m a9[39;49m[32;49m adump[39;49m[32;49m _adump[39;49m[32;49m ar[39;49m[32;49m this[39;49m[32;49m size[39;49m
										 - ct[32;49m ac[39;49m[32;49m tct[39;49m[32;49m ab[39;49m[32;49m ar[39;49m[32;49m this[39;49m[32;49m size[39;49m
											 - cta[32;49m caba[39;49m[32;49m cadump[39;49m[32;49m tcta[39;49m[32;49m aba[39;49m[32;49m ar[39;49m[32;49m this[39;49m[32;49m size[39;49m
						 - DLLNodeAlloc4[32;49m nodes[39;49m[32;49m this[39;49m[32;49m size[39;49m
					 - DLList[32;49m init[39;49m[32;49m TailNode[39;49m[32;49m HeadNode[39;49m[32;49m this[39;49m[32;49m size[39;49m
						 - DLListClone[32;49m init[39;49m[32;49m Accum[39;49m[32;49m Four[39;49m[32;49m Three[39;49m[32;49m Twelve[39;49m[32;49m Sum[39;49m[32;49m Prototype[39;49m[32;49m Category[39;49m[32;49m this[39;49m[32;49m size[39;49m
			 - [34;49mBigNum[39;49m[32;49m tfib3[39;49m[32;49m fibBN[39;49m[32;49m tbn[39;49m[32;49m sp[39;49m[32;49m tfib3[39;49m[32;49m fibBN[39;49m[32;49m tbn[39;49m[32;49m bexpl[39;49m[32;49m !![39;49m[32;49m ![39;49m[32;49m bexp0[39;49m[32;49m bexp[39;49m[32;49m aexp[39;49m[32;49m ![39;49m[32;49m qexp[39;49m[32;49m x[39;49m[32;49m bnInit[39;49m[32;49m eprint[39;49m[32;49m p[39;49m[32;49m fprint[39;49m[32;49m _fprint[39;49m[32;49m _eprint[39;49m[32;49m **[39;49m[32;49m ^[39;49m[32;49m pow[39;49m[32;49m sqrt[39;49m[32;49m !=[39;49m[32;49m ==[39;49m[32;49m >[39;49m[32;49m >=[39;49m[32;49m <[39;49m[32;49m <=[39;49m[32;49m ==[39;49m[32;49m /=[39;49m[32;49m /[39;49m[32;49m *=[39;49m[32;49m *[39;49m[32;49m --[39;49m[32;49m -=[39;49m[32;49m ++[39;49m[32;49m +=[39;49m[32;49m -[39;49m[32;49m +[39;49m[32;49m bnState[39;49m[32;49m pPrecision[39;49m[32;49m pWidth[39;49m
		 - Interpreter[32;49m tfib3[39;49m[32;49m tfib2[39;49m[32;49m tfib1[39;49m[32;49m tfib[39;49m[32;49m fibPTC2[39;49m[32;49m fibPTC[39;49m[32;49m Cfib_O3[39;49m[32;49m Cfib[39;49m[32;49m fibn0[39;49m[32;49m sp[39;49m[32;49m xhi1[39;49m[32;49m xhi01[39;49m[32;49m xhi2a[39;49m[32;49m xhi2[39;49m[32;49m xhe12[39;49m[32;49m xhe1[39;49m[32;49m xhe0[39;49m[32;49m thi42[39;49m[32;49m thi3[39;49m[32;49m thi2[39;49m[32;49m defined[39;49m[32;49m _defined[39;49m[32;49m :[39;49m[32;49m word[39;49m[32;49m ;[39;49m[32;49m semi[39;49m[32;49m _semi[39;49m[32;49m xt@[39;49m[32;49m }[39;49m[32;49m end[39;49m[32;49m {[39;49m[32;49m #[39;49m[32;49m _lx_[39;49m[32;49m l:[39;49m[32;49m interpretFile[39;49m[32;49m interpret[39;49m[32;49m interpreterDone[39;49m[32;49m interpreterIsDone[39;49m[32;49m interpreterStop[39;49m[32;49m interpreterInit[39;49m[32;49m interpreterRun[39;49m[32;49m interpretNextToken[39;49m[32;49m interpretString[39;49m[32;49m tokenToWord[39;49m[32;49m doWord[39;49m[32;49m eval[39;49m[32;49m /*[39;49m[32;49m */[39;49m[32;49m #![39;49m[32;49m //[39;49m[32;49m compileModeOff[39;49m[32;49m asmModeOff[39;49m[32;49m asmModeOn[39;49m[32;49m compileModeOn[39;49m[32;49m finishDebugInfo[39;49m[32;49m compileMode[39;49m
		 - C[32;49m fib4[39;49m[32;49m fib3[39;49m[32;49m fib2[39;49m[32;49m fib[39;49m[32;49m sp[39;49m[32;49m tt[39;49m[32;49m sp[39;49m[32;49m fibPTC3?[39;49m[32;49m fibPTC?[39;49m[32;49m _fib1[39;49m[32;49m _fib2[39;49m[32;49m factorial[39;49m[32;49m fac[39;49m[32;49m x7[39;49m[32;49m chars2[39;49m[32;49m chars[39;49m[32;49m $[39;49m[32;49m streol[39;49m[32;49m $$[39;49m[32;49m hip[39;49m[32;49m goedel3[39;49m[32;49m bexp44[39;49m[32;49m bexp43[39;49m[32;49m heeeey2[39;49m[32;49m heeey2[39;49m[32;49m a1234[39;49m[32;49m a123[39;49m[32;49m a1234[39;49m[32;49m a123[39;49m[32;49m t64bitSub3[39;49m[32;49m t64bitSub3[39;49m[32;49m t64bitSub2[39;49m[32;49m t64bitSub[39;49m[32;49m t64bitAdd2[39;49m[32;49m t64bitAdd[39;49m[32;49m moe3[39;49m[32;49m moe2[39;49m[32;49m t+[39;49m[32;49m t*[39;49m[32;49m t+[39;49m[32;49m t*[39;49m[32;49m factorial[39;49m[32;49m factorial[39;49m[32;49m doTest[39;49m[32;49m tcd[39;49m[32;49m tL2[39;49m[32;49m tL[39;49m[32;49m aTest[39;49m[32;49m aoTest[39;49m[32;49m tdemo[39;49m[32;49m demo[39;49m[32;49m odemo[39;49m[32;49m demo![39;49m[32;49m _basicT[39;49m[32;49m basicT[39;49m[32;49m include1[39;49m[32;49m allot[39;49m[32;49m logAppend[39;49m[32;49m logWrite[39;49m[32;49m ;;[39;49m[32;49m wordStructPrint[39;49m[32;49m wordNameStructPrint[39;49m[32;49m ,[39;49m[32;49m rax_return[39;49m[32;49m void_return[39;49m[32;49m c_prefix[39;49m[32;49m c_rtl[39;49m[32;49m cfactorial3_O3[39;49m[32;49m cfactorial2_O3[39;49m[32;49m cfactorial_O3[39;49m[32;49m cfib2_O3[39;49m[32;49m cfib_O3[39;49m[32;49m ctct[39;49m[32;49m cfactorial3[39;49m[32;49m cfactorial2[39;49m[32;49m cfactorial[39;49m[32;49m cfib[39;49m[32;49m --[39;49m[32;49m ++[39;49m[32;49m ?<[39;49m[32;49m >:<[39;49m[32;49m >?[39;49m[32;49m switch[39;49m[32;49m }fi[39;49m[32;49m }else{[39;49m[32;49m if{[39;49m[32;49m (|[39;49m[32;49m ([39;49m[32;49m sprintf[39;49m[32;49m printf[39;49m[32;49m _Printf[39;49m
			 - C_Syntax[32;49m fibPTC2?[39;49m[32;49m fibPTC?[39;49m[32;49m _fibn0[39;49m[32;49m cpow[39;49m[32;49m fibPTC2?[39;49m[32;49m faccs2[39;49m[32;49m fac5[39;49m[32;49m faccs[39;49m[32;49m fac5[39;49m[32;49m faccs3[39;49m[32;49m factoriali[39;49m[32;49m MOVrr[39;49m[32;49m MOVmr[39;49m[32;49m MOV32rm[39;49m[32;49m MOV8rm[39;49m[32;49m _Compile_Move[39;49m[32;49m _Compile_Stack_PopToReg[39;49m[32;49m _Compile_Move_DataStackN_ToReg[39;49m[32;49m _Compile_TESTreg_Toreg[39;49m[32;49m _Compile_MoveReg_To_StackN[39;49m[32;49m _Compile_MoveReg_To_Rm[39;49m[32;49m _Compile_Test[39;49m[32;49m _Compile_SUBI_DSP[39;49m[32;49m _Compile_CallThruReg[39;49m[32;49m _Compile_Group5[39;49m[32;49m _Compile_X_Group1_Immediate[39;49m[32;49m _Compile_X_Group1_Reg_To_Reg[39;49m[32;49m _Compile_X_Group1[39;49m[32;49m _Compile_X_Group1_Immediate[39;49m[32;49m _Compile_X_Group1_Reg_To_Reg[39;49m[32;49m _Compile_X_Group1[39;49m[32;49m _Compile_SetAtAddress_WithReg[39;49m[32;49m _Compile_Move_Literal_Immediate_To_Reg[39;49m[32;49m Compile_MoveReg_ToAddress_ThruReg[39;49m[32;49m Compile_MoveMemValue_ToReg_ThruReg[39;49m[32;49m Compile_MoveMemValue_To_Reg[39;49m[32;49m Compile_MoveImm_To_Mem[39;49m[32;49m Compile_MoveImm_To_Reg[39;49m[32;49m Compile_MoveImm[39;49m[32;49m Compile_Move_Reg_To_Reg[39;49m[32;49m Compile_Move_Rm_To_Reg[39;49m[32;49m Compile_Move_Reg_To_Rm[39;49m[32;49m Compile_Move_WithSib[39;49m[32;49m Compile_Move[39;49m[32;49m Compile_CalculateWrite_Instruction_X64[39;49m[32;49m _Compile_Write_Instruction_X64[39;49m[32;49m CalculateModRmByte[39;49m[32;49m _Compile_ImmDispData[39;49m[32;49m _CalculateRex[39;49m[32;49m CalculateSib[39;49m[32;49m CalculateModRegardingDisplacement[39;49m[32;49m Calculate_Rex[39;49m[32;49m abs[39;49m[32;49m cpow[39;49m[32;49m fac5[39;49m[32;49m fibPTC2?[39;49m[32;49m _fib1c[39;49m[32;49m factorial[39;49m[32;49m factoriali[39;49m[32;49m bttt[39;49m[32;49m yadaYada[39;49m[32;49m yada[39;49m[32;49m fac5[39;49m[32;49m $[39;49m[32;49m faccs3[39;49m[32;49m interpret4[39;49m[32;49m faccs2[39;49m[32;49m fac4[39;49m[32;49m interpret3[39;49m[32;49m interpret2[39;49m[32;49m chi[39;49m[32;49m interpret2[39;49m[32;49m thi42[39;49m[32;49m thi41[39;49m[32;49m thi42[39;49m[32;49m csMatchExWithReturn[39;49m[32;49m csMatchEx[39;49m[32;49m taa[39;49m[32;49m ctcta[39;49m[32;49m cmoe[39;49m[32;49m cmoe[39;49m[32;49m factorial[39;49m[32;49m match[39;49m[32;49m case[39;49m[32;49m &[39;49m[32;49m typedef[39;49m[32;49m type[39;49m[32;49m c_class[39;49m[32;49m ?[39;49m[32;49m ![39;49m[32;49m ,[39;49m[32;49m ;[39;49m[32;49m }[39;49m[32;49m {[39;49m
			 - int[32;49m Compile_DEC[39;49m[32;49m Compile_INC[39;49m[32;49m _Compile_Int64[39;49m[32;49m _Compile_Int32[39;49m[32;49m _Compile_Int16[39;49m[32;49m _Compile_Int8[39;49m[32;49m fa[39;49m[32;49m wtdInclude[39;49m[32;49m doWp[39;49m[32;49m this[39;49m[32;49m size[39;49m
			 - void[32;49m this[39;49m[32;49m size[39;49m
			 - int64[32;49m this[39;49m[32;49m size[39;49m
			 - uint16[32;49m this[39;49m[32;49m size[39;49m
			 - uint8[32;49m this[39;49m[32;49m size[39;49m
			 - uint64[32;49m this[39;49m[32;49m size[39;49m
			 - CObj[32;49m this[39;49m[32;49m size[39;49m
				 - chey
			 - Dlsym
				 - libc[32;49m x[39;49m[32;49m xc[39;49m[32;49m tprintf2[39;49m[32;49m tprintf1[39;49m[32;49m tprintf[39;49m[32;49m memset[39;49m[32;49m strcat[39;49m[32;49m sprintf[39;49m[32;49m strcmp[39;49m[32;49m printf[39;49m
			 - [34;49mblock[39;49m[32;49m this[39;49m[32;49m size[39;49m
			 - [34;49mPointer[39;49m[32;49m this[39;49m[32;49m size[39;49m
			 - [34;49mBoolean[39;49m[32;49m this[39;49m[32;49m size[39;49m
			 - [34;49mquad[39;49m[32;49m this[39;49m[32;49m size[39;49m
			 - [34;49mlong[39;49m[32;49m this[39;49m[32;49m size[39;49m
			 - [34;49mchar[39;49m[32;49m this[39;49m[32;49m size[39;49m
			 - [34;49muint32[39;49m[32;49m this[39;49m[32;49m size[39;49m
			 - [34;49mint32[39;49m[32;49m this[39;49m[32;49m size[39;49m
			 - [34;49mint16[39;49m[32;49m this[39;49m[32;49m size[39;49m
			 - [34;49mbyte[39;49m[32;49m this[39;49m[32;49m size[39;49m
			 - [34;49mint8[39;49m[32;49m this[39;49m[32;49m size[39;49m
			 - [34;49mExperimental[39;49m[32;49m abyteTest[39;49m[32;49m Buffer[39;49m[32;49m HistoryStringNode[39;49m[32;49m MemChunk[39;49m[32;49m Symbol[39;49m[32;49m ListObject[39;49m[32;49m DObject[39;49m[32;49m DynamicObject[39;49m[32;49m Class[39;49m[32;49m Vocabulary[39;49m[32;49m Namespace[39;49m[32;49m ID[39;49m[32;49m Identifier[39;49m[32;49m List[39;49m[32;49m DLList[39;49m[32;49m ListNode[39;49m[32;49m Node[39;49m[32;49m n_Attributes[39;49m[32;49m n_dobject[39;49m[32;49m n_DLNode[39;49m[32;49m do_iData[39;49m[32;49m do_bData[39;49m[32;49m do_InUseFlag[39;49m[32;49m do_Slots[39;49m[32;49m do_Size[39;49m[32;49m do_Type[39;49m[32;49m do_Before[39;49m[32;49m do_After[39;49m[32;49m n_unmap[39;49m[32;49m n_CurrentNode[39;49m[32;49m n_InUseFlag[39;49m[32;49m n_Slots[39;49m[32;49m n_Size[39;49m[32;49m n_Type[39;49m[32;49m n_Before[39;49m[32;49m n_After[39;49m[32;49m TI[39;49m[32;49m TypeInfo[39;49m[32;49m T_ChunkSize[39;49m[32;49m T_Size[39;49m[32;49m T_NumberOfBytes[39;49m[32;49m T_NumberOfSlots[39;49m[32;49m T_Unused[39;49m[32;49m T_NumberOfPrefixedArgs[39;49m[32;49m T_WordAttributes[39;49m[32;49m T_WAllocationType[39;49m[32;49m T_LispAttributes[39;49m[32;49m T_ObjectAttributes[39;49m[32;49m T_MorphismAttributes[39;49m[32;49m _DLList[39;49m[32;49m _ListNode[39;49m[32;49m _Node[39;49m[32;49m n_unmap[39;49m[32;49m n_InUseFlag[39;49m[32;49m n_Slots[39;49m[32;49m n_Size[39;49m[32;49m n_Type[39;49m[32;49m n_CurrentNode[39;49m[32;49m n_Before[39;49m[32;49m n_After[39;49m[32;49m dllist[39;49m[32;49m node[39;49m[32;49m dlnode[39;49m
				 - byteTest
				 - [34;49m_Identifier[39;49m[32;49m W_WordData[39;49m[32;49m BaseObject[39;49m[32;49m CSLWord[39;49m[32;49m SC_FileIndex_End[39;49m[32;49m SC_FileIndex_Start[39;49m[32;49m SC_WordIndex[39;49m[32;49m StartCharRlIndex[39;49m[32;49m DebugWordList[39;49m[32;49m Definition[39;49m[32;49m S_pb_Data3[39;49m[32;49m S_Node3[39;49m[32;49m S_Value3[39;49m[32;49m S_pb_Data2[39;49m[32;49m S_Node2[39;49m[32;49m S_Value2[39;49m[32;49m S_Prototype[39;49m[32;49m S_ContainingList[39;49m[32;49m S_ContainingNamespace[39;49m[32;49m S_PtrToValue[39;49m[32;49m S_DObjectValue[39;49m[32;49m S_SymbolList[39;49m[32;49m S_Object[39;49m[32;49m S_BytePtr[39;49m[32;49m S_Value[39;49m[32;49m State[39;49m[32;49m S_Name[39;49m[32;49m CodeSize[39;49m[32;49m Slots[39;49m[32;49m S_Node[39;49m[32;49m this[39;49m[32;49m size[39;49m
				 - [34;49m*[39;49m[32;49m this[39;49m[32;49m size[39;49m
				 - [34;49m_WordData[39;49m[32;49m SourceCodeMemSpaceRandMarker[39;49m[32;49m SourceCoding[39;49m[32;49m SourceCodeWordList[39;49m[32;49m Index[39;49m[32;49m LambdaArgs[39;49m[32;49m AccumulatedOffset[39;49m[32;49m LambdaBody[39;49m[32;49m WD_NamespaceStack[39;49m[32;49m WD_ArrayNumberOfDimensions[39;49m[32;49m WD_SourceCode[39;49m[32;49m WD_ArrayDimensions[39;49m[32;49m OurLocation[39;49m[32;49m LocalNamespaces[39;49m[32;49m TypeObjectsNamespaces[39;49m[32;49m TypeSignature[39;49m[32;49m OpInsnCode[39;49m[32;49m OpInsnGroup[39;49m[32;49m RegFlags[39;49m[32;49m DstReg[39;49m[32;49m SrcReg[39;49m[32;49m Opt_Reg[39;49m[32;49m Opt_Rm[39;49m[32;49m RegToUse[39;49m[32;49m Offset[39;49m[32;49m OriginalWord[39;49m[32;49m AliasOf[39;49m[32;49m StackPushRegisterCode[39;49m[32;49m ObjectCode[39;49m[32;49m NumberOfVariables[39;49m[32;49m NumberOfNonRegisterLocals[39;49m[32;49m NumberOfNonRegisterArgs[39;49m[32;49m CursorPosition[39;49m[32;49m LineNumber[39;49m[32;49m Filename[39;49m[32;49m Coding[39;49m[32;49m CodeStart[39;49m[32;49m TypeNamespace[39;49m[32;49m RunType[39;49m[32;49m this[39;49m[32;49m size[39;49m
				 - [34;49m_dobject[39;49m[32;49m do_iData[39;49m[32;49m do_bData[39;49m[32;49m do_InUseFlag[39;49m[32;49m do_Slots[39;49m[32;49m do_Size[39;49m[32;49m do_Type[39;49m[32;49m do_Before[39;49m[32;49m do_After[39;49m[32;49m this[39;49m[32;49m size[39;49m
				 - [34;49m_DLNode[39;49m[32;49m this[39;49m[32;49m size[39;49m
				 - [34;49m_dllist[39;49m[32;49m n_CurrentNode[39;49m[32;49m n_Before[39;49m[32;49m n_After[39;49m[32;49m this[39;49m[32;49m size[39;49m
				 - [34;49m_dlnode[39;49m[32;49m n_Before[39;49m[32;49m n_After[39;49m[32;49m this[39;49m[32;49m size[39;49m
				 - [34;49mLocation[39;49m[32;49m this[39;49m[32;49m size[39;49m
				 - [34;49mblock[39;49m[32;49m this[39;49m[32;49m size[39;49m
				 - [34;49mPointer[39;49m[32;49m this[39;49m[32;49m size[39;49m
				 - [34;49mAttributeInfo[39;49m[32;49m this[39;49m[32;49m size[39;49m
				 - [34;49mdobject[39;49m
				 - [34;49mDLNode[39;49m[32;49m this[39;49m[32;49m size[39;49m
				 - [34;49mWordData[39;49m
				 - [34;49mWord[39;49m
				 - [34;49m_byteTest[39;49m[32;49m bt[39;49m[32;49m bt[39;49m[32;49m a16_123[39;49m[32;49m d8_123[39;49m[32;49m a32_123[39;49m[32;49m u8_123[39;49m[32;49m u32_123[39;49m[32;49m u64_123[39;49m[32;49m c8_123[39;49m[32;49m b8_123[39;49m[32;49m a64_123[39;49m[32;49m a8_123[39;49m[32;49m this[39;49m[32;49m size[39;49m
			 - [34;49mPrefixCombinators[39;49m[32;49m loop[39;49m[32;49m for[39;49m[32;49m do[39;49m[32;49m while[39;49m[32;49m if[39;49m
			 - [34;49mInfix[39;49m[32;49m xhi[39;49m[32;49m xhii[39;49m[32;49m xhi0[39;49m[32;49m h4[39;49m[32;49m h3[39;49m[32;49m hi2[39;49m[32;49m hi1[39;49m[32;49m hi1[39;49m[32;49m _assert1[39;49m[32;49m =[39;49m
		 - User[32;49m fib1[39;49m[32;49m _fib4[39;49m[32;49m _fib3[39;49m[32;49m _fib2[39;49m[32;49m _fib[39;49m[32;49m sp[39;49m[32;49m _fib1[39;49m[32;49m _fibn1[39;49m[32;49m sp[39;49m[32;49m ffx2[39;49m[32;49m ffx[39;49m[32;49m comment[39;49m[32;49m _ffx2[39;49m[32;49m _ffx[39;49m[32;49m reps[39;49m[32;49m iFactorialX2[39;49m[32;49m iFactorialX[39;49m[32;49m _ifx2[39;49m[32;49m _ifx[39;49m[32;49m reps0[39;49m[32;49m factorial[39;49m[32;49m sdbg[39;49m[32;49m fac[39;49m[32;49m bexp3[39;49m[32;49m bexp2[39;49m[32;49m bexp[39;49m[32;49m qexp2[39;49m[32;49m qexp[39;49m[32;49m factorial[39;49m[32;49m qeval[39;49m[32;49m hi1[39;49m[32;49m hi1[39;49m[32;49m t3[39;49m[32;49m t1[39;49m[32;49m t0[39;49m[32;49m caseSwitchExample[39;49m[32;49m goedel7[39;49m[32;49m goedel6[39;49m[32;49m goedel5[39;49m[32;49m goedel4[39;49m[32;49m goedel2[39;49m[32;49m goedel[39;49m[32;49m localsT[39;49m[32;49m _localsT[39;49m[32;49m demo0[39;49m[32;49m def[39;49m[32;49m istring[39;49m[32;49m s[39;49m[32;49m opOn[39;49m[32;49m vck[39;49m[32;49m opOn1[39;49m[32;49m opOff[39;49m[32;49m pause[39;49m[32;49m _SMN_[39;49m[32;49m mp[39;49m[32;49m p[39;49m[32;49m s[39;49m[32;49m ts[39;49m[32;49m wdis[39;49m[32;49m _var[39;49m[32;49m var[39;49m[32;49m _const[39;49m[32;49m const[39;49m
			 - Experimental[32;49m tx[39;49m
			 - StartupMacros[32;49m namespaces[39;49m[32;49m Delimiters[39;49m
		 - Locals[32;49m (|[39;49m[32;49m ([39;49m
		 - Int[32;49m sp[39;49m[32;49m mt5[39;49m[32;49m mt5v[39;49m[32;49m mt4[39;49m[32;49m mt3[39;49m[32;49m mt2[39;49m[32;49m mt1a[39;49m[32;49m mta[39;49m[32;49m mt1[39;49m[32;49m mt[39;49m[32;49m _ClassTest_[39;49m[32;49m ppxe[39;49m[32;49m ppx[39;49m[32;49m apause[39;49m[32;49m _logAppend[39;49m[32;49m _logWrite[39;49m[32;49m nl[39;49m[32;49m print[39;49m[32;49m hp[39;49m[32;49m _hp[39;49m[32;49m p[39;49m[32;49m _p[39;49m[32;49m pn[39;49m[32;49m prints[39;49m[32;49m ps[39;49m[32;49m _ps[39;49m[32;49m hexIntPrint[39;49m[32;49m intPrint[39;49m[32;49m /=[39;49m[32;49m *=[39;49m[32;49m %[39;49m[32;49m modulo[39;49m[32;49m /[39;49m[32;49m ^[39;49m[32;49m pow_03[39;49m[32;49m pow[39;49m[32;49m **[39;49m[32;49m *[39;49m[32;49m -=[39;49m[32;49m +=[39;49m[32;49m -[39;49m[32;49m +[39;49m
		 - Logic[32;49m tx1[39;49m[32;49m up[39;49m[32;49m nt[39;49m[32;49m >=[39;49m[32;49m <=[39;49m[32;49m !=[39;49m[32;49m equal[39;49m[32;49m ==[39;49m[32;49m >[39;49m[32;49m <[39;49m[32;49m &&[39;49m[32;49m and[39;49m[32;49m not[39;49m[32;49m ![39;49m[32;49m ^^[39;49m[32;49m xor[39;49m[32;49m or[39;49m[32;49m ||[39;49m
			 - Bits[32;49m tcmp[39;49m[32;49m tNotAnd[39;49m[32;49m tAnd[39;49m[32;49m tnot3[39;49m[32;49m tnot2[39;49m[32;49m tnot[39;49m[32;49m lt10[39;49m[32;49m lt9[39;49m[32;49m lt8[39;49m[32;49m lt7b[39;49m[32;49m lt7[39;49m[32;49m lnt5[39;49m[32;49m lnt5[39;49m[32;49m lnt5[39;49m[32;49m lnt5[39;49m[32;49m lnt5[39;49m[32;49m lnt2[39;49m[32;49m lnt[39;49m[32;49m lnt2[39;49m[32;49m lnt[39;49m[32;49m lnt4[39;49m[32;49m lnt3[39;49m[32;49m lnt2[39;49m[32;49m lnt[39;49m[32;49m lt2[39;49m[32;49m lt[39;49m[32;49m |=[39;49m[32;49m &=[39;49m[32;49m >>=[39;49m[32;49m <<=[39;49m[32;49m neg[39;49m[32;49m ~[39;49m[32;49m ^[39;49m[32;49m |[39;49m[32;49m &[39;49m[32;49m >>[39;49m[32;49m <<[39;49m
		 - Compiler[32;49m _fib1[39;49m[32;49m vckf1[39;49m[32;49m vckf[39;49m[32;49m >;[39;49m[32;49m mod[39;49m[32;49m nstrcat:[39;49m[32;49m Zenfone2[39;49m[32;49m x[39;49m[32;49m doLisp[39;49m[32;49m COMBINATOR_TOOKIT[39;49m[32;49m doLisp[39;49m[32;49m doTest[39;49m[32;49m doDemo[39;49m[32;49m doInit1[39;49m[32;49m streamLine[39;49m[32;49m classTestRead[39;49m[32;49m DebugFlag[39;49m[32;49m var:[39;49m[32;49m swap[39;49m[32;49m compileCall[39;49m[32;49m compileWord[39;49m[32;49m immediate[39;49m[32;49m '[39;49m[32;49m )[39;49m[32;49m sourceCodeOn[39;49m[32;49m sourceCodeInit[39;49m[32;49m getStringToEndOfLine[39;49m[32;49m ftoken[39;49m[32;49m tokenQID[39;49m[32;49m token[39;49m[32;49m _tick[39;49m[32;49m quote[39;49m[32;49m store[39;49m[32;49m set[39;49m[32;49m poke[39;49m[32;49m =[39;49m[32;49m ![39;49m[32;49m @=[39;49m[32;49m get[39;49m[32;49m peek[39;49m[32;49m load[39;49m[32;49m @[39;49m[32;49m debugWord[39;49m[32;49m prefixOff[39;49m[32;49m prefixOn[39;49m[32;49m infixOff[39;49m[32;49m infixOn[39;49m[32;49m nprefix[39;49m[32;49m prefix[39;49m[32;49m _prefix[39;49m[32;49m typeSignature[39;49m[32;49m inline[39;49m[32;49m ?immediate[39;49m[32;49m _immediate[39;49m[32;49m code[39;49m[32;49m Here[39;49m[32;49m begin[39;49m[32;49m _end[39;49m[32;49m _literal[39;49m[32;49m literal[39;49m[32;49m constant[39;49m[32;49m _constant[39;49m[32;49m variable[39;49m[32;49m _variable[39;49m[32;49m macro[39;49m[32;49m noop[39;49m[32;49m break[39;49m[32;49m return[39;49m[32;49m continue[39;49m[32;49m goto[39;49m[32;49m postfixOn[39;49m[32;49m c_syntaxOff[39;49m[32;49m c_syntaxOn[39;49m
			 - Compiling[32;49m pokeRegAtAddress[39;49m[32;49m pokeRegWithValue[39;49m[32;49m peekReg[39;49m[32;49m _compileWord[39;49m[32;49m _compileCall[39;49m[32;49m compileInt64[39;49m[32;49m compileInt32[39;49m[32;49m compileInt16[39;49m[32;49m compileByte[39;49m
		 - Stack[32;49m ndup[39;49m[32;49m stackCheck[39;49m[32;49m dsp[39;49m[32;49m _swap[39;49m[32;49m pick[39;49m[32;49m _ndrop[39;49m[32;49m dropN[39;49m[32;49m drop[39;49m[32;49m ndup[39;49m[32;49m tos[39;49m[32;49m dup[39;49m[32;49m _dup[39;49m
		 - Asm[32;49m ;;[39;49m[32;49m ;asm[39;49m[32;49m asm:[39;49m[32;49m asmEnd[39;49m[32;49m asmBegin[39;49m[32;49m jmp[39;49m[32;49m goto:[39;49m[32;49m label:[39;49m[32;49m goto[39;49m[32;49m label[39;49m[32;49m jcc[39;49m[32;49m Jcc[39;49m[32;49m jmpHere[39;49m[32;49m Jmp[39;49m[32;49m if_[39;49m[32;49m _else_[39;49m[32;49m _fi[39;49m
			 - X64[32;49m dbiOff[39;49m[32;49m dbiOn[39;49m[32;49m DBI[39;49m[32;49m x64_dbg[39;49m[32;49m REX_W[39;49m[32;49m IMM_B[39;49m[32;49m DISP_B[39;49m[32;49m SIB_B[39;49m[32;49m MODRM_B[39;49m[32;49m REX_B[39;49m[32;49m DEC[39;49m[32;49m INC[39;49m[32;49m N[39;49m[32;49m TO_REG[39;49m[32;49m INT32_SIZE[39;49m[32;49m CELL_SIZE[39;49m[32;49m CELL[39;49m[32;49m BYTE[39;49m[32;49m CALL[39;49m[32;49m CMP[39;49m[32;49m SUB[39;49m[32;49m ADD[39;49m[32;49m NG[39;49m[32;49m LE[39;49m[32;49m LESS[39;49m[32;49m NA[39;49m[32;49m BE[39;49m[32;49m Z[39;49m[32;49m ZERO[39;49m[32;49m EQ[39;49m[32;49m EQUAL[39;49m[32;49m BELOW[39;49m[32;49m THRU_REG[39;49m[32;49m ACC[39;49m[32;49m FP[39;49m[32;49m DSP[39;49m[32;49m R15D[39;49m[32;49m R14D[39;49m[32;49m R13D[39;49m[32;49m R12D[39;49m[32;49m R11D[39;49m[32;49m R10D[39;49m[32;49m R9D[39;49m[32;49m R8D[39;49m[32;49m RDI[39;49m[32;49m RSI[39;49m[32;49m RBP[39;49m[32;49m RSP[39;49m[32;49m RBX[39;49m[32;49m RDX[39;49m[32;49m RCX[39;49m[32;49m RAX[39;49m[32;49m MEM[39;49m[32;49m MEM0[39;49m[32;49m MEM32[39;49m[32;49m MEM8[39;49m[32;49m REG[39;49m[32;49m off[39;49m[32;49m on[39;49m[32;49m false[39;49m[32;49m true[39;49m
		 - Combinators[32;49m Compile_Stack_Push_R8D[39;49m[32;49m _Compile_CMPreg_IMM[39;49m[32;49m _Compile_ADDI_DSP[39;49m[32;49m _Compile_MoveTOS_To_R8D[39;49m[32;49m _Compile_IncDecreg[39;49m[32;49m _Compile_Test_Imm[39;49m[32;49m iax[39;49m[32;49m lT[39;49m[32;49m ppT[39;49m[32;49m cST[39;49m[32;49m oT[39;49m[32;49m cntT[39;49m[32;49m cT[39;49m[32;49m aT[39;49m[32;49m locT[39;49m[32;49m bT[39;49m[32;49m stT[39;49m[32;49m oldL[39;49m[32;49m lispTest[39;49m[32;49m sysT[39;49m[32;49m sT[39;49m[32;49m fT[39;49m[32;49m mT[39;49m[32;49m dT2[39;49m[32;49m dT[39;49m[32;49m loT[39;49m[32;49m dT3[39;49m[32;49m dT2[39;49m[32;49m dT0[39;49m[32;49m preprocessorTest[39;49m[32;49m syntaxTest[39;49m[32;49m c_SyntaxTest[39;49m[32;49m objectTest[39;49m[32;49m controlTest[39;49m[32;49m stackTest[39;49m[32;49m bigNumTest[39;49m[32;49m localsTest[39;49m[32;49m arrayTest[39;49m[32;49m classTest[39;49m[32;49m interpT[39;49m[32;49m iinc[39;49m[32;49m _TestDone_[39;49m[32;49m startupMacros[39;49m[32;49m ifElse[39;49m[32;49m ifte[39;49m[32;49m qEval[39;49m[32;49m ix[39;49m[32;49m ?[39;49m[32;49m for[39;49m[32;49m loop[39;49m[32;49m _[39;49m[32;49m _run[39;49m[32;49m _call[39;49m[32;49m run[39;49m[32;49m call[39;49m[32;49m doWhileDo[39;49m[32;49m doWhile[39;49m[32;49m while[39;49m[32;49m if3[39;49m[32;49m if2[39;49m[32;49m if[39;49m[32;49m if1[39;49m[32;49m tf3[39;49m[32;49m tf2[39;49m
		 - DObject[32;49m new[39;49m[32;49m clone[39;49m[32;49m dobject[39;49m
			 - DO_Experimental[32;49m o12[39;49m
				 - o1
					 - x[32;49m ott3[39;49m[32;49m zzx[39;49m[32;49m ott2[39;49m[32;49m zzz[39;49m
						 - xxy
							 - a
					 - [34;49mo2[39;49m[32;49m ay[39;49m
						 - [34;49mo3[39;49m[32;49m ott[39;49m[32;49m o4[39;49m
		 - List[32;49m lcRestoreStack[39;49m[32;49m dupList[39;49m[32;49m printList[39;49m[32;49m eval[39;49m[32;49m _([39;49m[32;49m lisp[39;49m
		 - Experimental[32;49m xyxz[39;49m[32;49m <do[39;49m[32;49m does>[39;49m[32;49m do>[39;49m[32;49m locationPrint[39;49m[32;49m locationPush[39;49m
		 - String[32;49m stricmp[39;49m[32;49m strcpy[39;49m[32;49m strcat[39;49m[32;49m strcmp[39;49m[32;49m Strlen[39;49m
			 - Dlsym
				 - libc[32;49m buf[39;49m
					 - CBuffer[32;49m this[39;49m[32;49m size[39;49m
		 - System[32;49m assertStkChk[39;49m[32;49m _assertStkChk[39;49m[32;49m _assert[39;49m[32;49m assert1[39;49m[32;49m assert1[39;49m[32;49m assert[39;49m[32;49m assert0[39;49m[32;49m assert1s[39;49m[32;49m _assert[39;49m[32;49m _assert0[39;49m[32;49m ctloc[39;49m[32;49m _assert1[39;49m[32;49m _assert1dbg[39;49m[32;49m debugTest[39;49m[32;49m debugTest1[39;49m[32;49m debugTest2[39;49m[32;49m debugTest3[39;49m[32;49m ddps[39;49m[32;49m adps[39;49m[32;49m ahOff[39;49m[32;49m ahOn[39;49m[32;49m sOn[39;49m[32;49m sOff[39;49m[32;49m vb0[39;49m[32;49m vb1[39;49m[32;49m vb2[39;49m[32;49m vb3[39;49m[32;49m vb4[39;49m[32;49m vb[39;49m[32;49m ahalt[39;49m[32;49m ti[39;49m[32;49m stk[39;49m[32;49m aw[39;49m[32;49m sys[39;49m[32;49m fload[39;49m[32;49m pwi[39;49m[32;49m pwdiss[39;49m[32;49m wi[39;49m[32;49m wdissl[39;49m[32;49m wdiss[39;49m[32;49m _wdiss[39;49m[32;49m _source[39;49m[32;49m pel[39;49m[32;49m pdl[39;49m[32;49m location[39;49m[32;49m F[39;49m[32;49m T[39;49m[32;49m false[39;49m[32;49m true[39;49m[32;49m Default[39;49m[32;49m White[39;49m[32;49m Cyan[39;49m[32;49m Magenta[39;49m[32;49m Blue[39;49m[32;49m Yellow[39;49m[32;49m Green[39;49m[32;49m Red[39;49m[32;49m Black[39;49m[32;49m wrun[39;49m[32;49m saveCpu2State[39;49m[32;49m restoreCpu2State[39;49m[32;49m saveCpuState[39;49m[32;49m restoreCpuState[39;49m[32;49m call_ToAddressThruR8_TestAlignRSP[39;49m[32;49m lcOff[39;49m[32;49m lcOn[39;49m[32;49m registers[39;49m[32;49m _pause[39;49m[32;49m pause[39;49m[32;49m location[39;49m[32;49m showTypeWordStack[39;49m[32;49m cpuStateShow[39;49m[32;49m console[39;49m[32;49m ok[39;49m[32;49m warmInit[39;49m[32;49m fr[39;49m[32;49m fullRestart[39;49m[32;49m ri[39;49m[32;49m restartInit[39;49m[32;49m restart[39;49m[32;49m exit[39;49m[32;49m systemBreak[39;49m[32;49m quit[39;49m[32;49m abort[39;49m[32;49m bye[39;49m[32;49m resetAll[39;49m[32;49m freeSessionMem[39;49m[32;49m allocateMem[39;49m[32;49m returnFromFile[39;49m[32;49m system3[39;49m[32;49m system2[39;49m[32;49m system1[39;49m[32;49m system0[39;49m[32;49m shell[39;49m[32;49m time[39;49m[32;49m timerInit[39;49m[32;49m timeInit[39;49m[32;49m echo[39;49m[32;49m jcc8_Off[39;49m[32;49m jcc8_On[39;49m[32;49m echoOff[39;49m[32;49m echoOn[39;49m[32;49m echoOff[39;49m[32;49m variables[39;49m[32;49m stateAll[39;49m[32;49m state[39;49m[32;49m binary[39;49m[32;49m hex[39;49m[32;49m decimal[39;49m[32;49m version[39;49m[32;49m charNumber[39;49m[32;49m lineNumber[39;49m[32;49m throw[39;49m[32;49m filename[39;49m[32;49m stackDepth[39;49m[32;49m stackInit[39;49m[32;49m reset[39;49m[32;49m _include[39;49m
			 - Colors[32;49m alertColors[39;49m[32;49m userColors[39;49m[32;49m defaultColors[39;49m[32;49m noticeColors[39;49m[32;49m debugColors[39;49m[32;49m setNoticeColors[39;49m[32;49m setDebugColors[39;49m[32;49m setAlertColors[39;49m[32;49m setDefaultColors[39;49m[32;49m setUserColors[39;49m[32;49m setNoticeRGB[39;49m[32;49m setUserRGB[39;49m[32;49m setDebugRGB[39;49m[32;49m setAlertRGB[39;49m[32;49m setDefaultRGB[39;49m
			 - File[32;49m freadToString[39;49m[32;49m fexists[39;49m[32;49m fsize[39;49m[32;49m ftell[39;49m[32;49m fseek[39;49m[32;49m fread[39;49m[32;49m fwrite[39;49m[32;49m fclose[39;49m[32;49m fopen[39;49m
		 - Shell[32;49m hio[39;49m[32;49m sh[39;49m[32;49m $[39;49m[32;49m _sh[39;49m[32;49m endif[39;49m[32;49m else[39;49m[32;49m if[39;49m
		 - Debug[32;49m rdi[39;49m[32;49m s[39;49m[32;49m _s[39;49m[32;49m dbiOff[39;49m[32;49m DbiOn[39;49m[32;49m dbiOn[39;49m[32;49m DebugFlag[39;49m[32;49m v1[39;49m[32;49m v4[39;49m[32;49m tcOnv[39;49m[32;49m scOff[39;49m[32;49m scOn[39;49m[32;49m dscOff[39;49m[32;49m dscOn[39;49m[32;49m nt[39;49m[32;49m tcOff[39;49m[32;49m tcOn[39;49m[32;49m ;t[39;49m[32;49m t:[39;49m[32;49m regs[39;49m[32;49m locals[39;49m[32;49m dbrk[39;49m[32;49m OptimizeOn[39;49m[32;49m d2:[39;49m[32;49m d1:[39;49m[32;49m d:[39;49m[32;49m _startDirectory_[39;49m[32;49m <dbg>[39;49m[32;49m saveCpuState[39;49m[32;49m restoreCpuState[39;49m[32;49m stop[39;49m[32;49m localsShow[39;49m[32;49m info[39;49m[32;49m _info[39;49m[32;49m xtDbg[39;49m[32;49m ;d[39;49m[32;49m _dbgOff[39;49m[32;49m _dbgOn[39;49m[32;49m scOn[39;49m[32;49m scOff[39;49m[32;49m dbgTypecheckOff[39;49m[32;49m dbgTypecheckOn[39;49m[32;49m dbgSourceCodeOff[39;49m[32;49m dbgSourceCodeOn[39;49m[32;49m ndstack[39;49m[32;49m dstack[39;49m[32;49m nrstack[39;49m[32;49m rstack[39;49m[32;49m stackDepthPrint[39;49m[32;49m stack[39;49m[32;49m setSourceCodeWord[39;49m[32;49m sourceDontAdd[39;49m[32;49m source[39;49m[32;49m sourceAdd[39;49m[32;49m wordDisassemble[39;49m[32;49m bdis[39;49m[32;49m dis[39;49m[32;49m dump[39;49m
		 - Control[32;49m maybePause[39;49m[32;49m hic2[39;49m[32;49m ct2[39;49m[32;49m ct1[39;49m[32;49m ct0[39;49m[32;49m ct00[39;49m[32;49m leaving[39;49m[32;49m abrk0[39;49m[32;49m abrkcon[39;49m[32;49m x[39;49m
		 - Lexer[32;49m ofile[39;49m[32;49m orpfile[39;49m[32;49m %[39;49m[32;49m "[39;49m
		 - OpenVmTil[32;49m lispOn[39;49m[32;49m lispOff[39;49m[32;49m addToHistoryOff[39;49m[32;49m addToHistoryOn[39;49m[32;49m historyReset[39;49m[32;49m addToHistory[39;49m[32;49m historySize[39;49m[32;49m dataStackSize[39;49m[32;49m dictionarySize[39;49m[32;49m sessionObjectsSize[39;49m[32;49m compilerTempObjectsSize[39;49m[32;49m objectsSize[39;49m[32;49m codeSize[39;49m[32;49m dbi[39;49m[32;49m verbosity[39;49m[32;49m debugLevel[39;49m[32;49m debugOn[39;49m[32;49m debugOff[39;49m[32;49m inlineOn[39;49m[32;49m inlineOff[39;49m[32;49m stringMacrosOff[39;49m[32;49m stringMacrosOn[39;49m[32;49m optimizeOff[39;49m[32;49m optimizeOn[39;49m[32;49m t{[39;49m[32;49m }t[39;49m[32;49m typecheckOff[39;49m[32;49m typecheckOn[39;49m[32;49m inlining[39;49m[32;49m optimize[39;49m[32;49m autoVarOff[39;49m[32;49m autoVarOn[39;49m[32;49m autoVar[39;49m
			 - Memory[32;49m recycleDebugInfo[39;49m[32;49m mem[39;49m[32;49m freeAllTempMem[39;49m[32;49m freeSessionMem[39;49m[32;49m freeLispTempMem[39;49m[32;49m freeCompilerTempMem[39;49m[32;49m freeTemporayMem[39;49m
		 - Word[32;49m code[39;49m[32;49m word_SC_WordList_Show[39;49m[32;49m wordNsListPrint[39;49m[32;49m purgeWordIfContainsName[39;49m[32;49m purgeWordName[39;49m[32;49m addrToWord[39;49m[32;49m codeSize[39;49m[32;49m codeStart[39;49m[32;49m wordAdd[39;49m[32;49m wordFinish[39;49m[32;49m xt=[39;49m[32;49m xt[39;49m[32;49m value[39;49m[32;49m definition[39;49m[32;49m run[39;49m[32;49m wordRun[39;49m[32;49m wordEval[39;49m[32;49m wNamespace[39;49m[32;49m wordNew[39;49m[32;49m name[39;49m
		 - Namespace[32;49m usingLast:[39;49m[32;49m notUsing:[39;49m[32;49m using:[39;49m[32;49m _findAny[39;49m[32;49m _findUsing[39;49m[32;49m namespace[39;49m[32;49m namespaceWords[39;49m[32;49m _namespaceWords[39;49m[32;49m allWords[39;49m[32;49m words[39;49m[32;49m namespaceTreeWithWords[39;49m[32;49m namespaceTree[39;49m[32;49m namespaces[39;49m[32;49m setStateUsing[39;49m[32;49m setStateNotUsing[39;49m[32;49m notUsing[39;49m[32;49m usingLast[39;49m[32;49m usingFirst[39;49m[32;49m usingWAddress[39;49m[32;49m using[39;49m[32;49m in[39;49m
		 - Io[32;49m logOff[39;49m[32;49m logOn[39;49m[32;49m logWrite[39;49m[32;49m logAppend[39;49m[32;49m space[39;49m[32;49m tab[39;49m[32;49m cr[39;49m[32;49m newline[39;49m[32;49m kbhit[39;49m[32;49m key[39;49m[32;49m emit[39;49m[32;49m printString[39;49m
		 - Macro[32;49m tm:[39;49m[32;49m findAlias[39;49m[32;49m alias[39;49m[32;49m sm:[39;49m
		 - PreProcessor[32;49m define[39;49m[32;49m elif[39;49m[32;49m if[39;49m[32;49m else[39;49m[32;49m endif[39;49m[32;49m ![39;49m
		 - Forth[32;49m n,[39;49m[32;49m 8,[39;49m[32;49m 4,[39;49m[32;49m ,[39;49m[32;49m 2,[39;49m[32;49m 1,[39;49m[32;49m '[39;49m
		 - [34;49mLisp[39;49m[32;49m /|[39;49m[32;49m /.[39;49m[32;49m /\[39;49m[32;49m lambda[39;49m[32;49m lcClearDefines[39;49m[32;49m lcReset[39;49m[32;49m ::[39;49m[32;49m ,@[39;49m[32;49m unquoteSplicing[39;49m[32;49m ,[39;49m[32;49m unquote[39;49m[32;49m `[39;49m[32;49m quasiquote[39;49m[32;49m @[39;49m[32;49m '[39;49m[32;49m list[39;49m[32;49m eval[39;49m[32;49m quote[39;49m[32;49m cdr[39;49m[32;49m car[39;49m[32;49m cond[39;49m[32;49m .if[39;49m[32;49m macro[39;49m[32;49m if*[39;49m[32;49m let[39;49m[32;49m set[39;49m[32;49m begin[39;49m[32;49m lambda[39;49m[32;49m _lambda[39;49m[32;49m compile[39;49m[32;49m define[39;49m[32;49m _Printf[39;49m[32;49m )[39;49m[32;49m print[39;49m[32;49m eval[39;49m[32;49m _([39;49m[32;49m ([39;49m
	 - Compiler
		 - Reserved[32;49m {|[39;49m[32;49m |}[39;49m[32;49m swap[39;49m[32;49m keyword[39;49m[32;49m dlsym:[39;49m[32;49m syntactic[39;49m[32;49m immediate[39;49m[32;49m end[39;49m[32;49m {[39;49m[32;49m }[39;49m[32;49m ;[39;49m[32;49m semi[39;49m[32;49m :[39;49m[32;49m word[39;49m
	 - [34;49mLispTemp[39;49m
	 - [34;49mLispDefines[39;49m
Total namespaces = 109 :: Total words = 1515
[34;49m
Increase the verbosity setting to 2 or more for more info here. ( Eg. : verbosity 2 = )[39;49m
ContextSpace                                InUse =    759949 : Unused =    276022 : ReAllocations =    7 : Largest =   274021 : Smallest =     1624
ContextSpace                                InUse =      9640 : Unused =       600 : ReAllocations =    0 : Largest =      600 : Smallest =      600
StringSpace                                 InUse =    154406 : Unused =     30066 : ReAllocations =    3 : Largest =    30004 : Smallest =       12
HistorySpace                                InUse =       232 : Unused =     10008 : ReAllocations =    0 : Largest =    10008 : Smallest =    10008
BufferSpace                                 InUse =    150371 : Unused =     78656 : ReAllocations =    2 : Largest =    75225 : Smallest =     1318
LispTempSpace                               InUse =         0 : Unused =    679848 : ReAllocations =   11 : Largest =   679848 : Smallest =   679848
DictionarySpace                             InUse =   5526592 : Unused =   1129864 : ReAllocations =    5 : Largest =  1128800 : Smallest =       88
SessionObjectsSpace                         InUse =    537582 : Unused =    130712 : ReAllocations =    5 : Largest =   130240 : Smallest =        1
CodeSpace                                   InUse =    215398 : Unused =    145050 : ReAllocations =    2 : Largest =   138439 : Smallest =     2552
WordRecylingSpace                           InUse =        56 : Unused =    595232 : ReAllocations =    9 : Largest =   595232 : Smallest =   595232
CompilerTempObjectSpace                     InUse =         0 : Unused =    986640 : ReAllocations =   13 : Largest =   986640 : Smallest =   986640
TempObjectSpace                             InUse =       105 : Unused =    461010 : ReAllocations =    9 : Largest =   461010 : Smallest =   461010
LispSpace                                   InUse =         0 : Unused =    567360 : ReAllocations =   10 : Largest =   567360 : Smallest =   567360
InternalObjectSpace                         InUse =   1028291 : Unused =     89989 : ReAllocations =    6 : Largest =    88750 : Smallest =       32
CSLInternalSpace                            InUse =     80008 : Unused =      1912 : ReAllocations =    0 : Largest =     1912 : Smallest =     1912
OpenVmTilSpace                              InUse =     20920 : Unused =      2144 : ReAllocations =    1 : Largest =     1912 : Smallest =      232
Data Stack                                  InUse =         0 : Unused =     16384
Total Accounted Mem                         InUse =   8516710 : Unused =   5185113
Mmap_RemainingMemoryAllocated                     =  48141711 : <=: ovt->Mmap_RemainingMemoryAllocated
Total Memory Allocated                            =  13701823
Total Memory leaks                                =         0
RecycledWordCount ::   168 x 440 bytes : Recycled =     73920
WrdInRecycling ::  7754 x 440 bytes : InRecycling =   3411760[39;49m[39;49m
<: bye
bye
